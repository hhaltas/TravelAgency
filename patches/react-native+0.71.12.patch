diff --git a/node_modules/react-native/CHANGELOG.md b/node_modules/react-native/CHANGELOG.md
new file mode 100644
index 0000000..6b190ae
--- /dev/null
+++ b/node_modules/react-native/CHANGELOG.md
@@ -0,0 +1,4860 @@
+# Changelog
+
+## v0.70.3
+
+### Fixed
+
+- Stop styles from being reset when detaching Animated.Values in old renderer ([2f58e52006](https://github.com/facebook/react-native/commit/2f58e520061a31ab90f7bbeef59e2bf723605106) by [@javache](https://github.com/javache))
+- Revert "Fix TextInput dropping text when used as uncontrolled component with `defaultValue`" to fix TextInputs not being settable to undefined programmatically ([e2645a5](https://github.com/facebook/react-native/commit/e2645a59f6211116d2069967443502910c167d6f)) by Garrett Forbes Monroe
+
+#### Android specific
+
+- Use NMake generator for Hermes build on Windows ([9d08d55bbe](https://github.com/facebook/react-native/commit/9d08d55bbef4e79a8843deef90bef828f7b9a6ef) by [@mganandraj](https://github.com/mganandraj))
+- Fixing failure building RN codegen CLI on Windows ([85c0c0f21f](https://github.com/facebook/react-native/commit/85c0c0f21fdb52543e603687a3c42dc40dff572b) by [@mganandraj](https://github.com/mganandraj))
+
+#### iOS specific
+
+- Add xcode 14 workaround (turn off signing resource bundles) for `React-Core` ([967de03f30](https://github.com/facebook/react-native/commit/967de03f304404ac8817936da37ca39514a09e33) by [@kelset](https://github.com/kelset))
+
+## v0.70.2
+
+### Added
+
+#### iOS specific
+
+- Add support for "Prefer Cross-Fade Transitions" into AccessibilityInfo ([be7c50fefd](https://github.com/facebook/react-native/commit/be7c50fefd7f13201fb538ded93d91b374341173) by [@gabrieldonadel](https://github.com/gabrieldonadel))
+
+### Changed
+
+- Bump CLI to 9.1.3 and Metro to 0.72.3 ([f164556037](https://github.com/facebook/react-native/commit/f1645560376b734a87f0eba1fef69f6cba312cc1) by [@kelset](https://github.com/kelset))
+
+### Fixed
+
+- Inform ScrollView of Keyboard Events Before Mount ([26d148029c](https://github.com/facebook/react-native/commit/26d148029c7fde117f33b0d6c8b34286c45a0ef2) by [@NickGerleman](https://github.com/NickGerleman))
+
+#### Android specific
+
+- Fix port as -1 if dev server without specifying port on Android ([3d7e1380b4](https://github.com/facebook/react-native/commit/3d7e1380b4e609f5340ee80c19d566b17e620427) by [@Kudo](https://github.com/Kudo))
+
+## v0.70.1
+
+### Added
+
+- Add more debugging settings for *HermesExecutorFactory* ([32d12e89f8](https://github.com/facebook/react-native/commit/32d12e89f864a106433c8e54c10691d7876333ee) by [@Kudo](https://github.com/Kudo))
+- Support TypeScript array types for turbo module (component only) ([33d1291e1a](https://github.com/facebook/react-native/commit/33d1291e1a96497a4f994e9d622248a745ee1ea6) by [@ZihanChen-MSFT](https://github.com/ZihanChen-MSFT))
+
+### Changed
+
+- Accept TypeScript type `T | null | undefined` as a maybe type of T in turbo module. ([9ecd203eec](https://github.com/facebook/react-native/commit/9ecd203eec97e7d21d10311d950c9f8f30c7a4b1) by [@ZihanChen-MSFT](https://github.com/ZihanChen-MSFT))
+- Bump react-native-gradle-plugin to 0.70.3 ([e33633644c](https://github.com/facebook/react-native/commit/e33633644c70ea39af6e450fcf31d9458051fd5f) by [@dmytrorykun](https://github.com/dmytrorykun))
+- Bump react-native-codegen to 0.70.5 ([6a8c38eef2](https://github.com/facebook/react-native/commit/6a8c38eef272e79e52a35941afa9c3fe9e8fc191) by [@dmytrorykun](https://github.com/dmytrorykun))
+- Hermes version bump for 0.70.1 ([5132211228](https://github.com/facebook/react-native/commit/5132211228a5b9e36d58c1f7e2c99ccaabe1ba3d) by [@dmytrorykun](https://github.com/dmytrorykun))
+
+### Fixed
+
+- Fix hermes profiler ([81564c1a3d](https://github.com/facebook/react-native/commit/81564c1a3dae4222858de2a9a34089097f665e82) by [@janicduplessis](https://github.com/janicduplessis))
+
+#### Android specific
+
+- Support PlatformColor in borderColor ([2d5db284b0](https://github.com/facebook/react-native/commit/2d5db284b061aec33af671b25065632e20217f62) by [@danilobuerger](https://github.com/danilobuerger))
+- Avoid crash in ForwardingCookieHandler if webview is disabled ([5451cd48bd](https://github.com/facebook/react-native/commit/5451cd48bd0166ba70d516e3a11c6786bc22171a) by [@Pajn](https://github.com/Pajn))
+- Correctly resolve classes with FindClass(..) ([361b310bcc](https://github.com/facebook/react-native/commit/361b310bcc8dddbff42cf63495649291c894d661) by [@evancharlton](https://github.com/evancharlton))
+
+#### iOS specific
+
+- Fix KeyboardAvoidingView height when "Prefer Cross-Fade Transitions" is enabled ([4b9382c250](https://github.com/facebook/react-native/commit/4b9382c250261aab89b271618f8b68083ba01785) by [@gabrieldonadel](https://github.com/gabrieldonadel))
+- Fix React module build error with swift integration on new architecture mode ([3afef3c167](https://github.com/facebook/react-native/commit/3afef3c16702cefa5115b059a08741fba255b2db) by [@Kudo](https://github.com/Kudo))
+- Fix ios pod install error ([0cae4959b7](https://github.com/facebook/react-native/commit/0cae4959b750ea051dcd04e4c9374e02b1de6e7a) by [@Romick2005](https://github.com/Romick2005))
+
+## 0.70.0
+
+### Breaking
+
+- Remove jest/preprocessor from the react-native package ([0301cb285b](https://github.com/facebook/react-native/commit/0301cb285b2e85b48a397fe58d565196654d9754) by [@motiz88](https://github.com/motiz88))
+- Remove nonstandard Promise.prototype.done ([018d5cf985](https://github.com/facebook/react-native/commit/018d5cf985497273dd700b56168cf1cf64f498d5) by [@motiz88](https://github.com/motiz88))
+
+### Added
+
+- Support TypeScript array types for turbo module (module only) ([f0c4c291e1](https://github.com/facebook/react-native/commit/f0c4c291e12a8e76f91d3841d65291f0f1f16714) by [@ZihanChen-MSFT](https://github.com/ZihanChen-MSFT))
+- Added files for `avn`, `nodenv`, and other managers that set the node.js version in reactive native project including testing ([933fbb1b2b](https://github.com/facebook/react-native/commit/933fbb1b2b4d2b7c802bf1f2be4c47e5b442a850) by [@ramonmedel](https://github.com/ramonmedel))
+- Support BigInt in Hermes ([11bae63bb1](https://github.com/facebook/react-native/commit/11bae63bb1f833802ec6ce01342ebdd1d61e9252) by [@jpporto](https://github.com/jpporto))
+- The old Hermes instrumented stats migrated to the new one ([c37f719567](https://github.com/facebook/react-native/commit/c37f7195675df67d23c3c008ec5ab5fd7b8d0394) by [@jpporto](https://github.com/jpporto))
+- Modified **getDefaultJSExecutorFactory** method ([87cfd386cb](https://github.com/facebook/react-native/commit/87cfd386cb2e02bfa440c94706d9d0274f83070c) by [@KunalFarmah98](https://github.com/KunalFarmah98))
+- `EventEmitter#emit` now freezes the set of listeners before iterating over them, meaning listeners that are added or removed will not affect that iteration. ([e5c5dcd9e2](https://github.com/facebook/react-native/commit/e5c5dcd9e26e9443f59864d9763b049e0bda98e7) by [@yungsters](https://github.com/yungsters))
+- Added File and Blob globals to eslint community config ([d881c87231](https://github.com/facebook/react-native/commit/d881c872314e55e17b198a41c86528d79092d222) by [@shamilovtim](https://github.com/shamilovtim))
+- C++ TurboModule methods can now use mixed types ([3c569f546c](https://github.com/facebook/react-native/commit/3c569f546ca78b23fbcb9773a1273dd9710f8c60) by [@appden](https://github.com/appden))
+- Add useNativeDriver as a param for setValue for Animated ([73191edb72](https://github.com/facebook/react-native/commit/73191edb7255b1ba5e9a0955a25c14250186a676) by [@genkikondo](https://github.com/genkikondo))
+- Add `Animated.Numeric` Flow type ([9eb7629ac6](https://github.com/facebook/react-native/commit/9eb7629ac66abc23b91b81d420891d68bbd4f578) by [@motiz88](https://github.com/motiz88))
+- Add LTI annotations to function params ([c940eb0c49](https://github.com/facebook/react-native/commit/c940eb0c49518b82a3999dcac3027aa70018c763), [e7a4dbcefc](https://github.com/facebook/react-native/commit/e7a4dbcefc9e393c41f4a796d522211bc1e60b6f), [d96744e277](https://github.com/facebook/react-native/commit/d96744e27711c4fa4dfad1b5a796283a232e60af) by [@pieterv](https://github.com/pieterv))
+
+#### Android specific
+
+- Accessibility announcement for list and grid in FlatList ([2d5882132f](https://github.com/facebook/react-native/commit/2d5882132fb2c533fe9bbba83576b8fac4aca727), [105a2397b6](https://github.com/facebook/react-native/commit/105a2397b6b187a9669ba1c028508a7bb9664009) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Add READ_VOICEMAIL and WRITE_VOICEMAIL permissions to PermisionsAndroid library. ([8a2be3e143](https://github.com/facebook/react-native/commit/8a2be3e1438dd145ccb5374d6ef60811047d23aa) by [@zolbooo](https://github.com/zolbooo))
+- Add POST_NOTIFICATIONS, NEARBY_WIFI_DEVICES permission ([0a854c7c8b](https://github.com/facebook/react-native/commit/0a854c7c8b7ffc382c43fa460651a4b4de34c3c7) by [@vincent-paing](https://github.com/vincent-paing))
+- Extend the React Native Gradle plugin to accept a config from package.json ([5f3c5aa529](https://github.com/facebook/react-native/commit/5f3c5aa529ed75414eb339c3d8fd2c9628534621) by [@cortinico](https://github.com/cortinico))
+- Ability to pass a Typeface object to ReactFontManager in addition to a font resource ID ([e2dd2e2a6e](https://github.com/facebook/react-native/commit/e2dd2e2a6ed17b366a3e2ec0942ea1d82a404c5d) by [@thurn](https://github.com/thurn))
+- Option to enable lazyViewManager support with `ViewManagerOnDemandReactPackage` ([d4b59cd9d0](https://github.com/facebook/react-native/commit/d4b59cd9d02a8c4eda3ac4bf89cfe8161847adf0) by [@javache](https://github.com/javache))
+- Support for dataUri in form data ([c663c0ec9d](https://github.com/facebook/react-native/commit/c663c0ec9deee7281f819f222bb29ad79e99f3b8) by [@hetanthakkar1](https://github.com/hetanthakkar1))
+- Add android-only prop documentation at the TextInput js level. ([f2e23215ca](https://github.com/facebook/react-native/commit/f2e23215ca14c3c630aa931cdd114187589ac0fb))
+- Update template to gitignore `android/app/.cxx` ([542d43df9d](https://github.com/facebook/react-native/commit/542d43df9d84a88f742c273391f2596546b4c804) by [@leotm](https://github.com/leotm))
+
+#### iOS specific
+
+- Add Mac Catalyst compatibility (can be enabled in Podfile) ([2fb6a3393d](https://github.com/facebook/react-native/commit/2fb6a3393d545a93518d1b2906bd9453458660a0) by [@Arkkeeper](https://github.com/Arkkeeper))
+- Enabled Hermes Intl ([3fa3aeba93](https://github.com/facebook/react-native/commit/3fa3aeba93f226b97e324f3643b98382947e5985) by [@neildhar](https://github.com/neildhar))
+- HTTP Response headers added to the error object passed to JS code. ([9eb2826f9b](https://github.com/facebook/react-native/commit/9eb2826f9beac5b7476f33e68803ca5a024867db))
+- Add userInterfaceStyle to Alert to override user interface style for iOS 13+ ([47bd78f64f](https://github.com/facebook/react-native/commit/47bd78f64f334b770edc7fabd4b9cceb07a7a503) by [@luoxuhai](https://github.com/luoxuhai))
+- Add function to cleanup codegen folders ([71692889b0](https://github.com/facebook/react-native/commit/71692889b0d89b033c07ef87ee3dbf6d62d79235) by [@cipolleschi](https://github.com/cipolleschi))
+- Cocoapods function to add the `CLANG_CXX_LANGUAGE_STANDARD` to all the targets if needed ([ca8174e15f](https://github.com/facebook/react-native/commit/ca8174e15f77cbeecb7ff7a5a583abb668817777) by [@f-meloni](https://github.com/f-meloni))
+- Support codegen from a single folder ([05aaba9514](https://github.com/facebook/react-native/commit/05aaba95145df0b7f541e391a9f64ba3402cac35) by [@cipolleschi](https://github.com/cipolleschi))
+- Run script phases tests in CI ([c171a6e157](https://github.com/facebook/react-native/commit/c171a6e1572f64b2ab9b26d431c07581d4ae832b) by [@cipolleschi](https://github.com/cipolleschi))
+
+### Changed
+
+- Bump React Native Codegen to 0.70.0 ([a22ceecc84](https://github.com/facebook/react-native/commit/a22ceecc849fc62c926643f4d121cf1e4575c693) by [@dmytrorykun](https://github.com/dmytrorykun), [2a274c1a08](https://github.com/facebook/react-native/commit/2a274c1a082c3291d2df1a4b960bf654e217a4dd) by [@cortinico](https://github.com/cortinico), [ce4246a05c](https://github.com/facebook/react-native/commit/ce4246a05c96cd6fe805499960b105267ac044bb) by [@dmytrorykun](https://github.com/dmytrorykun))
+- Upgrade RN CLI to v9.0.0, Metro to 0.72.1 ([0c2fe96998](https://github.com/facebook/react-native/commit/0c2fe969984fff0676f99fe034b3e49d38ed7db6) by [@thymikee](https://github.com/thymikee), [7e580b97bf](https://github.com/facebook/react-native/commit/7e580b97bf63436978d053926e04adeb9ae6f75f) by [@kelset](https://github.com/kelset), [c504d038c4](https://github.com/facebook/react-native/commit/c504d038c470f7a13fb345f57261172c7c85248c) by [@thymikee](https://github.com/thymikee), [f1d624823f](https://github.com/facebook/react-native/commit/f1d624823fe23eb3d30de00cf78beb71dc1b8413) by [@kelset](https://github.com/kelset), [2b49ac6f8b](https://github.com/facebook/react-native/commit/2b49ac6f8b04953be4cd5bf0b1325986b117763c) by [@thymikee](https://github.com/thymikee))
+- Doc: fix minimum iOS version in requirements section ([ec3c8f4380](https://github.com/facebook/react-native/commit/ec3c8f43800a027a0a717367360421089e7293fd) by [@Simon-TechForm](https://github.com/Simon-TechForm))
+- Remove "Early" in Js error reporting pipeline ([0646551d76](https://github.com/facebook/react-native/commit/0646551d7690cd54847eb468f8e43d71ebebdda9) by [@sshic](https://github.com/sshic))
+- Update @react-native/eslint-plugin-specs to 0.70.0 ([d07fae9b23](https://github.com/facebook/react-native/commit/d07fae9b23c258a60045b666167efd5259b962ce), [afd76f69c7](https://github.com/facebook/react-native/commit/afd76f69c7d2408654ba67ac2ed4d612abfbe0ce) by [@dmytrorykun](https://github.com/dmytrorykun), [ea8d8e2f49](https://github.com/facebook/react-native/commit/ea8d8e2f49ea3ce15faeab500b661a1cacacf8a8) by [@cortinico](https://github.com/cortinico))
+- Do not depend on hermes-engine NPM package anymore ([78cd689f9a](https://github.com/facebook/react-native/commit/78cd689f9a634b152ea09ed6cb4fa858ee26e653) by [@cortinico](https://github.com/cortinico))
+- Add ability to pass `ItemSeparatorComponent` as React Element ([5854b11bf9](https://github.com/facebook/react-native/commit/5854b11bf9d42bab9dbe62b9152a3d3a94e42c13) by [@retyui](https://github.com/retyui))
+- Hermes version bump. ([0b4b7774e2](https://github.com/facebook/react-native/commit/0b4b7774e2d71259962ed36b7acb5c3989c3be9c) by [@dmytrorykun](https://github.com/dmytrorykun), [8c682ddd59](https://github.com/facebook/react-native/commit/8c682ddd599b75a547975104cb6f90eec8753daf) by [@dmytrorykun](https://github.com/dmytrorykun), [eb6767813a](https://github.com/facebook/react-native/commit/eb6767813a0efe04a9e79955b8f6ee909a4a76bf) by [@cortinico](https://github.com/cortinico))
+- Codemod `{...null}` to `{}` in xplat/js ([f392ba6725](https://github.com/facebook/react-native/commit/f392ba67254e95126974fafabf3e4ef0300e24e8) by [@gkz](https://github.com/gkz))
+- Fix TextInput dropping text when used as uncontrolled component with `defaultValue` ([51f49ca998](https://github.com/facebook/react-native/commit/51f49ca9982f24de08f5a5654a5210e547bb5b86))
+- Suppress errors ahead of launch ([67e12a19cb](https://github.com/facebook/react-native/commit/67e12a19cb236fbe0809fbbc9e516b37a5848a6a) by [@gkz](https://github.com/gkz))
+- Suppress missing 'this' annotations ([6c563a507f](https://github.com/facebook/react-native/commit/6c563a507fd8c41e04a1e62e2ba87993c6eb1e2f) by [@pieterv](https://github.com/pieterv))
+- Suppress missing annotations ([66c6a75650](https://github.com/facebook/react-native/commit/66c6a75650f91d61e7e87a8e661d87101e26cf9c) by [@pieterv](https://github.com/pieterv))
+- Use RuntimeConfig instead of VM Experiment Flag to set up the micro task queue. ([753038cf34](https://github.com/facebook/react-native/commit/753038cf345a45d95ab9b9343447f524e1b36840) by [@fbmal7](https://github.com/fbmal7))
+- Update direct Metro dependencies to 0.72.0 ([05dcebc211](https://github.com/facebook/react-native/commit/05dcebc21175a78c6533a8856aed644c45276169) by [@kelset](https://github.com/kelset), [64788cc9fe](https://github.com/facebook/react-native/commit/64788cc9fe42fbedc3e3b1c9c516a079cfa71cd1) by [@huntie](https://github.com/huntie), [bdeb4e0655](https://github.com/facebook/react-native/commit/bdeb4e065532dfb1bb4c9c1e87e8a869a737e48a) by [@jacdebug](https://github.com/jacdebug), [894f652639](https://github.com/facebook/react-native/commit/894f6526399098d825ef32c02eb201cd8ba41873) by [@robhogan](https://github.com/robhogan), [08ebc1cfd8](https://github.com/facebook/react-native/commit/08ebc1cfd88a629389c43abf23b40a2bdf1b1579) by [@arushikesarwani94](https://github.com/arushikesarwani94))
+- ECOSYSTEM.md: update Partner entries ([5471afeebf](https://github.com/facebook/react-native/commit/5471afeebf59853ce31df1ade6a4591414b6aa2f) by [@Simek](https://github.com/Simek))
+- Move ScrollView's contentOffset to common props ([7c581f3d30](https://github.com/facebook/react-native/commit/7c581f3d3007954413d68daf2e868ce93e120615) by [@genkikondo](https://github.com/genkikondo))
+- Upgrade react-native-gradle-plugin to 0.70.2 ([1518f838b7](https://github.com/facebook/react-native/commit/1518f838b70951882f7b414c90407d3eb584cab4), [2176173dcc](https://github.com/facebook/react-native/commit/2176173dcc029ab21bfcdfe5c9e150581db47409) by [@dmytrorykun](https://github.com/dmytrorykun))
+- Update a few metro deps as follow up from the commit from main ([7c7ba1babd](https://github.com/facebook/react-native/commit/7c7ba1babd41b6b60f0dc9f48c34d00235d2fef5) by [@kelset](https://github.com/kelset))
+
+#### Android specific
+
+- Bump Android Gradle Plugin to 7.2.1 ([53c8fc9488](https://github.com/facebook/react-native/commit/53c8fc94882893dd8c337fd29543ae11fd467267) by [@leotm](https://github.com/leotm), [c274456e5b](https://github.com/facebook/react-native/commit/c274456e5b635825560852baa5787e96640800d8) by [@dulmandakh](https://github.com/dulmandakh))
+- Rename NativeModuleCallExceptionHandler to JSExceptionHandler for broader usage ([b6f7689d70](https://github.com/facebook/react-native/commit/b6f7689d701d0409c23ab364356aeb95710c20fa) by [@sshic](https://github.com/sshic))
+- Simplify the Android.mk file in the App Template ([7fb0bb40d2](https://github.com/facebook/react-native/commit/7fb0bb40d2206c734a1feb6b555c22d6d5f2436e) by [@cortinico](https://github.com/cortinico))
+- Make Hermes the default engine on Android ([a7db8df207](https://github.com/facebook/react-native/commit/a7db8df2076f68ae9451ce1c77d7eb09d8cfeb14) by [@cortinico](https://github.com/cortinico))
+- Revamp touch event dispatching methods ([089ff4555a](https://github.com/facebook/react-native/commit/089ff4555af27eec4561b1627298702b4ecee482) by [@sshic](https://github.com/sshic))
+- Demonstrating Dark Mode correctly in the `StatusBar` for the starter template App. ([763dc52387](https://github.com/facebook/react-native/commit/763dc5238721a21847b6d6670b5fa268e3bf2ed4) by [@mrbrentkelly](https://github.com/mrbrentkelly))
+- Bump Gradle to 7.5.0 ([5c8186623a](https://github.com/facebook/react-native/commit/5c8186623ae15388949cfc4143edae86863a447b) by [@leotm](https://github.com/leotm), [99e7373dd2](https://github.com/facebook/react-native/commit/99e7373dd2f20184153377109e0e8e48b5bf46f7) by [@dulmandakh](https://github.com/dulmandakh))
+- Generalized the return type of ViewManagerOnDemandReactPackage.getViewManagerNames ([51e029ec3c](https://github.com/facebook/react-native/commit/51e029ec3ce42ae8df3d367d8f553ec2148eeafc) by [@javache](https://github.com/javache))
+- Don't assert on current activity when call startActivityForResult ([bf6884dc90](https://github.com/facebook/react-native/commit/bf6884dc903154ae32daa50ce7983a9f014be781) by [@sshic](https://github.com/sshic))
+- Adapt template to new architecture autolinking on Android ([9ad7cbc3eb](https://github.com/facebook/react-native/commit/9ad7cbc3eb365190e0bfe290e1025553a807b298) by [@thymikee](https://github.com/thymikee))
+- Replaced reactnativeutilsjni with reactnativejni in the build process to reduce size ([54a4fcbfdc](https://github.com/facebook/react-native/commit/54a4fcbfdcc8111b3010b2c31ed3c1d48632ce4c) by [@SparshaSaha](https://github.com/SparshaSaha))
+- Bump Soloader to 0.10.4 ([b9adf2db20](https://github.com/facebook/react-native/commit/b9adf2db20bf9e1436fa58182d886fd9461df9af) by [@mikehardy](https://github.com/mikehardy))
+- Update the new app template to use CMake instead of Android.mk ([dfd7f70eff](https://github.com/facebook/react-native/commit/dfd7f70effeacfeb06d9c2d4762a279a079ee004) by [@cortinico](https://github.com/cortinico))
+- Refactored usage of kotlin plugin ([be35c6dafb](https://github.com/facebook/react-native/commit/be35c6dafbdb46d2ec165460d4bb12f34de6e878) by [@hurali97](https://github.com/hurali97))
+- Bump Gradle to 7.5.1 ([7a911e0730](https://github.com/facebook/react-native/commit/7a911e073094b533cb5a7ce76932c02f83f4fe5d) by [@AlexanderEggers](https://github.com/AlexanderEggers))
+- Fix error of release builds with Hermes enabled for Windows users ([7fcdb9d9d8](https://github.com/facebook/react-native/commit/7fcdb9d9d8f964d24a5ec3d423c67f49b7650ed8) by [@JoseLion](https://github.com/JoseLion))
+
+#### iOS specific
+
+- Move and test Hermes setup from react_native_pods script into a dedicated file ([468b86bd37](https://github.com/facebook/react-native/commit/468b86bd3710b1d43a492c94fb314cc472f03b86) by [@cipolleschi](https://github.com/cipolleschi))
+- Use the correct operator to decide whether Hermes is enabled or not. ([61488449b9](https://github.com/facebook/react-native/commit/61488449b996da5881e4711e0813e9c90b6e57a1) by [@cipolleschi](https://github.com/cipolleschi))
+- Hermes is now the default engine on iOS. This setting is controlled via `flags[:hermes_enabled]` in the Podfile. ([1115bc77db](https://github.com/facebook/react-native/commit/1115bc77db1090042effc021837f70b28694fa09) by [@hramos](https://github.com/hramos))
+- Move LocalPodspecPatch to dedicated file ([8fe2b591c7](https://github.com/facebook/react-native/commit/8fe2b591c7e073d629e95cd7b67aa1dfa96ece38) by [@cipolleschi](https://github.com/cipolleschi))
+- Move the `modify_flags_for_new_architecture` method to separate ruby file ([71da21243c](https://github.com/facebook/react-native/commit/71da21243c85283445c6cefa64d1ace13823ab69) by [@cipolleschi](https://github.com/cipolleschi))
+- Refactoring part of the react_native_pods.rb script ([4f732ba9ee](https://github.com/facebook/react-native/commit/4f732ba9ee2a1e162729c97d5c12ea771b3a424a), [7a2704455f](https://github.com/facebook/react-native/commit/7a2704455f3edf203d2ecc8135fabf2667f718d8) by [@cipolleschi](https://github.com/cipolleschi))
+- When Hermes is enabled, it will use the same copy of JSI as React Native ([340612a200](https://github.com/facebook/react-native/commit/340612a200505ca829bae1f9bce800d3673dac04) by [@hramos](https://github.com/hramos))
+- Move `use_flipper` logic inside `use_react_native` and simplify the Flipper dependencies logic ([0bd5239553](https://github.com/facebook/react-native/commit/0bd523955385a3b1e622077b7ee4ea0df3c5c158) by [@f-meloni](https://github.com/f-meloni))
+- Export `flipper.rb` script file ([e07a7eb16b](https://github.com/facebook/react-native/commit/e07a7eb16b97e1222e23f935a3d4bb3dac848ef2) by [@cipolleschi](https://github.com/cipolleschi))
+- Use `outputDir` as base directory for the codegen and remove the possibility to customize the intermediate path. The generated code requires specific paths in the `#include` directive. ([e4d0153a67](https://github.com/facebook/react-native/commit/e4d0153a675fbdd8718f433b2e9f8bfdccec4b2f) by [@cipolleschi](https://github.com/cipolleschi))
+- Refactor part of the codegen scripts and add tests. ([0465c3fd10](https://github.com/facebook/react-native/commit/0465c3fd102525b005826f3c68923d7e9851d6b8), [305a054865](https://github.com/facebook/react-native/commit/305a0548652a405d9f638fb2c054781951dfc996) by [@cipolleschi](https://github.com/cipolleschi))
+- CodeGen now supports the `"all"` library type. ([6718500eaa](https://github.com/facebook/react-native/commit/6718500eaaeb92b8a74320dcee961ac96f6f12fa) by [@cipolleschi](https://github.com/cipolleschi))
+- Fix the test_ios_unit test ([fdbe4719e2](https://github.com/facebook/react-native/commit/fdbe4719e2e2b599e86d42c49d42c4da97ef431a) by [@cipolleschi](https://github.com/cipolleschi))
+- Update Podfile to allow `PRODUCTION=1 pod install` ([77752fc403](https://github.com/facebook/react-native/commit/77752fc4037e66d5b0a5851bae79c4d3285ed334) by [@leotm](https://github.com/leotm))
+- Destruct use_reactnative parameters and ad ddocumentation ([79a37e5a88](https://github.com/facebook/react-native/commit/79a37e5a88e179090ade7145a453a46719c87b3f) by [@cipolleschi](https://github.com/cipolleschi))
+- Move codegen in separate files ([7d069b2583](https://github.com/facebook/react-native/commit/7d069b25835ad20654a46ebb1e09631d826598e0) by [@cipolleschi](https://github.com/cipolleschi))
+- Silence warning due to react-native internal details. ([a4599225f5](https://github.com/facebook/react-native/commit/a4599225f5a6a2d6801dd80b7728c1bbe5b2ec3a) by [@cipolleschi](https://github.com/cipolleschi))
+
+### Removed
+
+- Remove previously deprecated Transform style-attribute props ([7cfd77debd](https://github.com/facebook/react-native/commit/7cfd77debd36f867f5ddfdb9cc44fbe6137aaeba) by [@Zachinquarantine](https://github.com/Zachinquarantine))
+- Remove deprecated `isTVOS` constant. ([6075d64acf](https://github.com/facebook/react-native/commit/6075d64acf6f8d74e18ef6568c9438f73fe56d44) by [@Zachinquarantine](https://github.com/Zachinquarantine))
+- The diffs renames the required variable which was causing conflicts in names with Apple core SDK's ([086c13dd5f](https://github.com/facebook/react-native/commit/086c13dd5fba3f77acbc70c9bdedc9299118b526) by [@arinjay](https://github.com/arinjay))
+- Removed `EventEmitter.prototype.removeSubscription` method. ([870755fa7e](https://github.com/facebook/react-native/commit/870755fa7e7011ac46d269d5fb66d2a1d1543442) by [@yungsters](https://github.com/yungsters))
+- Remove deprecated removeListener methods ([2596b2f695](https://github.com/facebook/react-native/commit/2596b2f6954362d2cd34a1be870810ab90cbb916) by [@matinzd](https://github.com/matinzd))
+- Remove APPLETVOS variants from BUCk targets. ([cf2e27c388](https://github.com/facebook/react-native/commit/cf2e27c3888ded6f851ba267597ef13f1d0cfd8c) by [@d16r](https://github.com/d16r))
+
+#### iOS specific
+
+- Remove `emulateUnlessSupported` ([c73e021a4b](https://github.com/facebook/react-native/commit/c73e021a4b11bbae3a7868670d140fe3d5dac6ae) by [@ken0nek](https://github.com/ken0nek))
+- Remove USE_CODEGEN_DISCOVERY flag ([2e720c3610](https://github.com/facebook/react-native/commit/2e720c361001d996ed35d8bfbf4dc67c31fb895d) by [@cipolleschi](https://github.com/cipolleschi))
+
+### Fixed
+
+- Throw JSINativeException from asHostObject ([ef6ab3f5ca](https://github.com/facebook/react-native/commit/ef6ab3f5cad968d7b2c9127d834429b0f4e1b2cf) by [@neildhar](https://github.com/neildhar))
+- Use new Babel parser instead of deprecated one ([97291bfa31](https://github.com/facebook/react-native/commit/97291bfa3157ac171a2754e19a52d006040961fb) by [@Kerumen](https://github.com/Kerumen))
+- Fixed a crash on deserialization of props when using 'px'/'em' units. ([70788313fe](https://github.com/facebook/react-native/commit/70788313fedd40fe2e6d1cf15980ce3cca5adaac) by [@nlutsenko](https://github.com/nlutsenko))
+- Fix nullability lost on readonly types in TurboModule specs ([c006722e6c](https://github.com/facebook/react-native/commit/c006722e6cdbe02711cb50ea7a739e0d4d81c7e7) by [@appden](https://github.com/appden))
+- Make tests pass for windows ([9596bf045d](https://github.com/facebook/react-native/commit/9596bf045d527e27608ac4b7b2990a4e6846fdeb) by [@cipolleschi](https://github.com/cipolleschi))
+- Handle possible null exception on ReactEditText with AppCompat 1.4.0 ([24a1f5c66c](https://github.com/facebook/react-native/commit/24a1f5c66c8633f9b41eef45df3297ffc1d2b606) by [@mikemasam](https://github.com/mikemasam))
+- Fixed the disappearance of items when scrolling after zooming VirtualizedList. ([13a72e0ccc](https://github.com/facebook/react-native/commit/13a72e0ccceb2db6aeacd03b4f429d200392c17b) by [@islandryu](https://github.com/islandryu))
+- Improved Flow type inference in Animated `.interpolate()` ([7b86fa2b79](https://github.com/facebook/react-native/commit/7b86fa2b795647f5c89e04e4c3ee4b83bc27ef77) by [@motiz88](https://github.com/motiz88))
+- Add Jest mock for Vibration module ([79529a1c77](https://github.com/facebook/react-native/commit/79529a1c77e7e1b174fdbe8103a2199c9ac924ff) by [@hduprat](https://github.com/hduprat))
+- Allow ReactInstrumentationTest to use custom JSIModules ([eb2a83b0be](https://github.com/facebook/react-native/commit/eb2a83b0be4658654fc6ca6f4671e45f1898798d) by [@christophpurrer](https://github.com/christophpurrer))
+- Working around Long paths limitation on Windows ([883a93871c](https://github.com/facebook/react-native/commit/883a93871cb1fbca4434600a322f63afbba333da) by [@mganandraj](https://github.com/mganandraj))
+- Fix eslint-plugin-specs prepack npm lifecycle hook now that we use npm 8 ([8441c4a6f7](https://github.com/facebook/react-native/commit/8441c4a6f7bfeda73f89f076fe7d8d1132e4b9be) by [@kelset](https://github.com/kelset))
+- Codegen should ignore `.d.ts` files ([0f0d52067c](https://github.com/facebook/react-native/commit/0f0d52067cb89fdb39a99021f0745282ce087fc2) by [@tido64](https://github.com/tido64))
+- Avoid full copy of large folly::dynamic objects in JSIExecutor#defaultTimeoutInvoker ([521011d4cc](https://github.com/facebook/react-native/commit/521011d4cc713dfce97dc8872fd0f5171e587b5d) by [@christophpurrer](https://github.com/christophpurrer))
+
+#### Android specific
+
+- Fixed HorizontalScrollView API scrollToEnd causing NPE in side-effects. ([e5ba6ab7b4](https://github.com/facebook/react-native/commit/e5ba6ab7b482c380e35765b898e522e9d4e1d3b0) by [@ryancat](https://github.com/ryancat))
+- Fix InputAccessoryView crash on Android ([afa5df1764](https://github.com/facebook/react-native/commit/afa5df1764324f2574d102abeae7199d4b02d183) by [@hduprat](https://github.com/hduprat))
+- Bring back non-rootview touch handling based on reactTag ([8b837268b4](https://github.com/facebook/react-native/commit/8b837268b49fd4e72a05f955c20702c457a68fab) by [@fkgozali](https://github.com/fkgozali))
+- Make Text not focusable by default ([8ced165e53](https://github.com/facebook/react-native/commit/8ced165e53135d9d33cfdc55a9d4660f8eb5b3c5) by [@kacieb](https://github.com/kacieb))
+- Revert [PR 33924](https://github.com/facebook/react-native/pull/33924) because of issues with TextInputs with numeric keyboard types not respecting the secureTextEntry prop ([edb27e3aa1](https://github.com/facebook/react-native/commit/edb27e3aa1210ef33d55c1840065457c31b19cb0) by [@charlesbdudley](https://github.com/charlesbdudley))
+- Fix edge case when we enqueue a pending event to views on stopped surface ([ea7c9f2ad9](https://github.com/facebook/react-native/commit/ea7c9f2ad9a78b16234306932edc1d78b783ac27) by [@ryancat](https://github.com/ryancat))
+- Fix a bug where the keyboard, once set as email, won't change back to default. ([ec307e0167](https://github.com/facebook/react-native/commit/ec307e0167deca7f17640cd3c5a60f6be5f47b62) by [@larkox](https://github.com/larkox))
+- NPE in `ReactEditText.setInputType` when React Native is used with some versions of a AppCompat 1.4.x. (and possibly others) ([92ebb298e2](https://github.com/facebook/react-native/commit/92ebb298e2e5ad640754e09ce3a37d3de1d28f58))
+- Fix NPE on `ReactEditText` due to null mFabricViewStateManager ([ba6bf5a3ce](https://github.com/facebook/react-native/commit/ba6bf5a3ce7039a7e407a6632ee41aa3d504f833) by [@cortinico](https://github.com/cortinico))
+- Scroll views would still receive scroll events when nested in a view with `pointer-events: "none"` ([fced96bf52](https://github.com/facebook/react-native/commit/fced96bf5202e8b89b804ccc1004abacc9f91660) by [@javache](https://github.com/javache))
+- Fixed an edge case that event dispatching is failed after pre-allocation of a view and before the view is mounted. ([a093fe5f2f](https://github.com/facebook/react-native/commit/a093fe5f2fae4e9996b0cbffdfccdce8e58e8cf1) by [@ryancat](https://github.com/ryancat))
+- Avoid crash by handling missing views in dispatchViewManagerCommand ([ee1a191cb1](https://github.com/facebook/react-native/commit/ee1a191cb1c10085722d57fc276734f83e86a4f3) by [@hsource](https://github.com/hsource))
+- Pass react build dir to cmake ([6ab7a99518](https://github.com/facebook/react-native/commit/6ab7a99518f8ba0d53e62e35d230ebec78e50217) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix missing space in ReactPropertyException message ([24560b6718](https://github.com/facebook/react-native/commit/24560b67184da00e05491af38289865c4b934ee8) by [@markv](https://github.com/markv))
+- Fix import path breakage ([2e1e62f2bf](https://github.com/facebook/react-native/commit/2e1e62f2bf043ea0bf9926e1f5786ca54a22005e) by [@aniketmathur](https://github.com/aniketmathur))
+- When `onEndReachedThreshold` is set to 0 `onEndReached` function on `VirtualizedList` properly fires once the user scrolls to the bottom of the list. ([b869680c11](https://github.com/facebook/react-native/commit/b869680c1196a6549154a4b9cb7ffa10eab1989c))
+- Fix rendering of transparent borders in RN Android ([a9659ce86d](https://github.com/facebook/react-native/commit/a9659ce86d94dd34768b067763740a5c41917e42) by [@mdvacca](https://github.com/mdvacca))
+- Exception with `Cannot load WebView` message will initialising WebView (along with existing checks) ([9e0d8696cc](https://github.com/facebook/react-native/commit/9e0d8696cc68436a0d309cafde252c55fc337be4) by [@rachitmishra](https://github.com/rachitmishra))
+- Fix accessibilityState overwriting view's disabled state on Android ([f35d18caa3](https://github.com/facebook/react-native/commit/f35d18caa302351319840ec85337182f4f148e5e) by [@okwasniewski](https://github.com/okwasniewski))
+- Make sure *.ts files are considered for task avoidance in the Gradle Plugin ([1a9fb6cb68](https://github.com/facebook/react-native/commit/1a9fb6cb682aa5ff83462e1e2869eb99f3b873fd) by [@cortinico](https://github.com/cortinico))
+- Fix missing import on New Architecture build script in template ([a22f30d2ce](https://github.com/facebook/react-native/commit/a22f30d2ce866cb1488b26bb18eee0620a0ac259) by [@cortinico](https://github.com/cortinico))
+
+#### iOS specific
+
+- Use `NODE_BINARY` from `.xcode.env` when running packager from Xcode ([ff785dbcf5](https://github.com/facebook/react-native/commit/ff785dbcf5c464a4d850fa738e977702efd8abd3) by [@elsurudo](https://github.com/elsurudo))
+- Bug with error message formatting when bundle is missing ([f501979f3d](https://github.com/facebook/react-native/commit/f501979f3d1e5c053eed16967a3d3385eab8e15f) by [@BenLorantfy](https://github.com/BenLorantfy))
+- Fix the race condition when calling readAsDataURL after new Blob(blobs) ([bd12e41188](https://github.com/facebook/react-native/commit/bd12e41188c8d85c0acbd713f10f0bd34ea0edca) by [@wood1986](https://github.com/wood1986))
+- Fix the way the orientation events are published, to avoid false publish on orientation change when app changes state to inactive ([7d42106d4c](https://github.com/facebook/react-native/commit/7d42106d4ce20c644bda4d928fb0abc163580cee) by [@lbaldy](https://github.com/lbaldy))
+- Fix sed error when installing `glog` ([4a7e4b9ca6](https://github.com/facebook/react-native/commit/4a7e4b9ca6ef4fb52611b6c3cb788f624d1f81a4) by [@alphashuro](https://github.com/alphashuro))
+- Don't validate ENTRY_FILE in react-native-xcode.sh ([780fe80fca](https://github.com/facebook/react-native/commit/780fe80fcaf213d84d9d087132af933bd02d1349) by [@janicduplessis](https://github.com/janicduplessis))
+- `_scrollViewComponentView` is set to `RCTPullToRefreshViewComponentView's` superview ([4e4b9e2111](https://github.com/facebook/react-native/commit/4e4b9e2111faaf5652ae1f5b885730b378f3de98) by [@dmytrorykun](https://github.com/dmytrorykun))
+- Use `GCC_PREPROCESSOR_DEFINITIONS` to set `FB_SONARKIT_ENABLED` ([77e6bff629](https://github.com/facebook/react-native/commit/77e6bff629312f20cdacb1e798cd2464ac50db9e) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix Hermes not being properly downloaded during pod install ([d5e0659fcc](https://github.com/facebook/react-native/commit/d5e0659fccf2767beb7aae55461e9690ba335c81) by [@cortinico](https://github.com/cortinico))
+- Typo in the documation for the `automaticallyAdjustKeyboardInsets` prop ([927b43d47c](https://github.com/facebook/react-native/commit/927b43d47c2cd42538265cb06154b12cb0be6816) by [@jeremybarbet](https://github.com/jeremybarbet))
+- Deprecate iOS/tvOS SDK 11.0 support now that 12.4+ is required ([f56d701e56](https://github.com/facebook/react-native/commit/f56d701e567af0c252a2e297bf81cd4add59378a) by [@leotm](https://github.com/leotm))
+- Fix blank spaces that don't recover as you scroll when in an RTL locale and e.nativeEvent.zoomScale is -1. ([bc7b5c3011](https://github.com/facebook/react-native/commit/bc7b5c3011460935614a47a03cd077cd1059de72), [2f491bfa9f](https://github.com/facebook/react-native/commit/2f491bfa9f86c3db2e459e331f39bc3cf12e7239))
+- Fixed paddingTop not being applied when using padding and paddingVertical in multiline textinput ([2fb107c9a6](https://github.com/facebook/react-native/commit/2fb107c9a63aacd2c880ad6abedaad67ffb6022b) by [@hetanthakkar1](https://github.com/hetanthakkar1))
+- Fixed the ability to pass the port to use for Metro when running `react-native run-ios --port <port>`. ([7dc0b5153e](https://github.com/facebook/react-native/commit/7dc0b5153e4eb91c333238a58fe8c75a47cb5f81) by [@lindboe](https://github.com/lindboe))
+- Fix missing imports ([c78babac39](https://github.com/facebook/react-native/commit/c78babac39b7c64e03e137d8fddd91e783303426))
+- Fix React-bridging headers import not found ([c4b51e8d76](https://github.com/facebook/react-native/commit/c4b51e8d7679c3c20b843072581acd23a931fc83) by [@Kudo](https://github.com/Kudo))
+- Fix Hermes executor not available when `use_frameworks` is enabled ([88b7b640a7](https://github.com/facebook/react-native/commit/88b7b640a74bafd918b8b1cd5d58e1f5ddfb730a) by [@Kudo](https://github.com/Kudo))
+
+### Security
+
+- Add GitHub token permissions for workflows ([3da3d82320](https://github.com/facebook/react-native/commit/3da3d82320bd035c6bd361a82ea12a70dba4e851) by [@varunsh-coder](https://github.com/varunsh-coder))
+- Bump RCT-Folly to 2021-07-22 ([68f3a42fc7](https://github.com/facebook/react-native/commit/68f3a42fc7380051714253f43b42175de361f8bd) by [@luissantana](https://github.com/luissantana))
+
+## v0.69.6
+
+### Changed
+
+- Bump version of `promise` from 8.0.3 to 8.2.0, enabling `Promise.allSettled` ([951538c080](https://github.com/facebook/react-native/commit/951538c080ef745da304fb308fa91d597e0dd98a) by [@retyui](https://github.com/retyui))
+
+### Fixed
+
+- Fix hermes profiler ([81564c1a3d](https://github.com/facebook/react-native/commit/81564c1a3dae4222858de2a9a34089097f665e82) by [@janicduplessis](https://github.com/janicduplessis))
+
+#### Android specific
+
+- Correctly resolve classes with FindClass(..) ([361b310bcc](https://github.com/facebook/react-native/commit/361b310bcc8dddbff42cf63495649291c894d661) by [@evancharlton](https://github.com/evancharlton))
+
+#### iOS specific
+
+- Fix the way the orientation events are published, to avoid false publish on orientation change when app changes state to inactive ([7d42106d4c](https://github.com/facebook/react-native/commit/7d42106d4ce20c644bda4d928fb0abc163580cee) by [@lbaldy](https://github.com/lbaldy))
+- Fix React module build error with swift integration on new architecture mode ([3afef3c167](https://github.com/facebook/react-native/commit/3afef3c16702cefa5115b059a08741fba255b2db) by [@Kudo](https://github.com/Kudo))
+
+## v0.69.5
+
+### Changed
+
+- Bump react-native-codegen to 0.69.2 ([df3d52bfbf](https://github.com/facebook/react-native/commit/df3d52bfbf4254cd16e1dc0ca0af2743cd7e11c1) by [@dmytrorykun](https://github.com/dmytrorykun))
+
+#### Android specific
+
+- Replaced reactnativeutilsjni with reactnativejni in the build process to reduce size ([54a4fcbfdc](https://github.com/facebook/react-native/commit/54a4fcbfdcc8111b3010b2c31ed3c1d48632ce4c) by [@SparshaSaha](https://github.com/SparshaSaha))
+
+### Fixed
+
+- Codegen should ignore `.d.ts` files ([0f0d52067c](https://github.com/facebook/react-native/commit/0f0d52067cb89fdb39a99021f0745282ce087fc2) by [@tido64](https://github.com/tido64))
+
+## v0.69.4
+
+### Changed
+
+- Upgrade RN CLI to v8.0.4 ([66c68c37ce](https://github.com/facebook/react-native/commit/66c68c37ce94f6c1160e7f260c0d1887539c6605) by [@thymikee](https://github.com/thymikee))
+
+#### Android specific
+
+- Modified **getDefaultJSExecutorFactory** method ([87cfd386cb](https://github.com/facebook/react-native/commit/87cfd386cb2e02bfa440c94706d9d0274f83070c) by [@KunalFarmah98](https://github.com/KunalFarmah98))
+
+## v0.69.3
+
+### Fixed
+
+#### iOS specific
+
+- Fix React-bridging header not found for third party modules ([fa2acc32d1](https://github.com/facebook/react-native/commit/fa2acc32d1490f6e418689dec321f8bd4ef7bb28) by [@Kudo](https://github.com/Kudo))
+
+## v0.69.2
+
+### Changed
+
+- Set react-shallow-renderer v16.15.0 for react v18 compat ([a39a7c453d](https://github.com/facebook/react-native/commit/a39a7c453d87086935ff07d549ba8220cbcf30bd) by [@mikehardy](https://github.com/mikehardy))
+- Upgrade RN CLI to v8.0.3 ([28cbd21d21](https://github.com/facebook/react-native/commit/28cbd21d21f2ffb3f38b2449a4983f013947ce0a) by [@thymikee](https://github.com/thymikee))
+
+#### iOS specific
+
+- Hermes pod: change logic to use the hermes tag to set the pod source correctly ([46a9edc854](https://github.com/facebook/react-native/commit/46a9edc8544ae070149a97ea3d919b88dd6e2942) by [@kelset](https://github.com/kelset))
+- Fix the race condition when calling readAsDataURL after new Blob(blobs) ([bd12e41188](https://github.com/facebook/react-native/commit/bd12e41188c8d85c0acbd713f10f0bd34ea0edca) by [@wood1986](https://github.com/wood1986))
+- Make sure that Flipper pods are not installed when creating a release build ([23accbf58d](https://github.com/facebook/react-native/commit/23accbf58d2fa03ad020e07f00012a32609c7218) by [@cipolleschi](https://github.com/cipolleschi))
+
+## v0.69.1
+
+### Changed
+
+#### iOS specific
+
+- Make all Yoga headers public and add #ifdef __cplusplus ([43f831b23c](https://github.com/facebook/react-native/commit/43f831b23caf22e59af5c6d3fdd62fed3d20d4ec) by [@janicduplessis](https://github.com/janicduplessis))
+
+### Fixed
+
+- Use monotonic clock for performance.now() ([114d31feee](https://github.com/facebook/react-native/commit/114d31feeeb47f5a57419e5088c3cbe9340f757a))
+
+#### iOS specific
+
+- Fix build for React-RCTText ([4ea38e16bf](https://github.com/facebook/react-native/commit/4ea38e16bf533955557057656cba5346d2372acd) by [@ph4r05](https://github.com/ph4r05))
+- Fix RCT-Folly build error when use_frameworks! and hermes are both enabled ([79baca678a](https://github.com/facebook/react-native/commit/79baca678a743560fa16fdd551f1d0d018d34304) by [@Kudo](https://github.com/Kudo))
+- Fix use_frameworks! for 0.69 ([f97c6a5b49](https://github.com/facebook/react-native/commit/f97c6a5b498eec95e99a02c7842cb2ae160cd6cd) by [@Kudo](https://github.com/Kudo))
+
+## v0.69.0
+
+### Breaking
+
+- Support for `console.disableYellowBox` [has been dropped](https://github.com/facebook/react-native/commit/b633cc130533f0731b2577123282c4530e4f0abe)
+- Already deprecated prop types have been removed ([cdfddb4dad](https://github.com/facebook/react-native/commit/cdfddb4dad7c69904850d7e5f089a32a1d3445d1), [3e229f27bc](https://github.com/facebook/react-native/commit/3e229f27bc9c7556876ff776abf70147289d544b), [10199b1581](https://github.com/facebook/react-native/commit/10199b158138b8645550b5579df87e654213fe42))
+- `removeListener`, deprecated since RN0.65, [was removed](https://github.com/facebook/react-native/commit/8dfbed786b40082a7a222e00dc0a621c0695697d) from Appearance
+- If you were using `SegmentedComponentIOS`, you will now need to move to the [segmented-control](https://github.com/react-native-segmented-control/segmented-control) library ([235f168574](https://github.com/facebook/react-native/commit/235f1685748442553e53f8ec6d904bc0314a8ae6))
+
+### Added
+
+- Add Hermes scripts to package ([004b8609d9](https://github.com/facebook/react-native/commit/004b8609d97b14a6d5cb8c9e63afdbe343c500da) by [@hramos](https://github.com/hramos))
+- Expose scheduler through FabricUIManager ([1730949e94](https://github.com/facebook/react-native/commit/1730949e94aa23927a90d2a64d91977b7e2904d6) by [@cortinico](https://github.com/cortinico))
+- Add event listeners to Scheduler ([e51e19ecc1](https://github.com/facebook/react-native/commit/e51e19ecc1d1b8ac5c860eac55338ef13471844f) by [@cortinico](https://github.com/cortinico))
+- C++ TurboModule methods can return functions ([c7380ba113](https://github.com/facebook/react-native/commit/c7380ba1131b26b487ecae87239a4cf82afefd15) by [@appden](https://github.com/appden))
+- Add support for devtools' profiler ([fefa7b6ac8](https://github.com/facebook/react-native/commit/fefa7b6ac8a1e0e33fa7a1070936c5c83c873c0a) by [@jpporto](https://github.com/jpporto))
+- Add getAll function to FormData class for getting all parts containing that key. This is also available in web API. ([d05a5d1551](https://github.com/facebook/react-native/commit/d05a5d15512ab794ef80b31ef91090d5d88b3fcd) by [@matinzd](https://github.com/matinzd))
+- Automatic type conversions for C++ TurboModules ([31f0796237](https://github.com/facebook/react-native/commit/31f079623732fb017b1fa38d56abe855d7738ece) by [@appden](https://github.com/appden))
+- New bridging API for JSI <-> C++ ([30cb78e709](https://github.com/facebook/react-native/commit/30cb78e709bccb4f7bf7aab3f6b0f1ba4261f577) by [@appden](https://github.com/appden))
+- Add asBool() method to JSI ([603620b739](https://github.com/facebook/react-native/commit/603620b7394da5855e2255790bfea9ad7d80ddf9) by [@appden](https://github.com/appden))
+- CustomEvent and Event polyfills for React Native ([6abbef1200](https://github.com/facebook/react-native/commit/6abbef1200af9adab1848de17955d77fbe0ad5da) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Implement Runtime.getHeapUsage for hermes chrome inspector ([cff9590864](https://github.com/facebook/react-native/commit/cff9590864c4be153a4eb49757b7cac8b3f23f66) by [@janicduplessis](https://github.com/janicduplessis))
+- Introduce ReactNativeFeatureFlags file to control FeatureFlags in React Native ([33aba77456](https://github.com/facebook/react-native/commit/33aba774564acdec216e02e28f17ad08ad7bc26b) by [@mdvacca](https://github.com/mdvacca))
+- Added fail-safe check to catch MissingWebViewPackage Exception ([8c573d9336](https://github.com/facebook/react-native/commit/8c573d933652ae4da1008502c53fce93057101c0) by [@Kunal-Airtel2022](https://github.com/Kunal-Airtel2022))
+- Add ability to access properties with symbol keys through JSI ([9010bfe457](https://github.com/facebook/react-native/commit/9010bfe457b77862024214ce6210504ff1786ef5) by [@neildhar](https://github.com/neildhar))
+- Allow color styles to be animated using native driver ([201f355479](https://github.com/facebook/react-native/commit/201f355479cafbcece3d9eb40a52bae003da3e5c) by [@genkikondo](https://github.com/genkikondo))
+- Make react-native depend on react-native-gradle-plugin ([3346efb7d4](https://github.com/facebook/react-native/commit/3346efb7d422bd8eb7f48650b454071f9981fa0b) by [@cortinico](https://github.com/cortinico))
+- Add RawEventTelemetryEventEmitter interface to ReactNativePrivateInterface ([1f15a64028](https://github.com/facebook/react-native/commit/1f15a6402869b001cae049facc17126924b97197) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Implement Runtime.getHeapUsage for hermes chrome inspector ([3568a72987](https://github.com/facebook/react-native/commit/3568a7298738a651d76c70763362c297ab601ee8) by [@janicduplessis](https://github.com/janicduplessis))
+- Add support for C++17 in OSS ([c2e4ae39b8](https://github.com/facebook/react-native/commit/c2e4ae39b8a5c6534a3fa4dae4130166eda15169) by [@sammy-SC](https://github.com/sammy-SC))
+
+#### Android specific
+
+- Generate `Nullable` for optional objects and arrays in module codegen. ([ffaa5d69bc](https://github.com/facebook/react-native/commit/ffaa5d69bc268918891121e2d60e7ca08ee82530))
+- Expose an API to enable Concurrent Root on Android ([d7b64b8d4b](https://github.com/facebook/react-native/commit/d7b64b8d4b2f403ce00b27c5df89ffb3a64dc6de) by [@cortinico](https://github.com/cortinico))
+- Add scrollEventThrottle prop support in Android ([cf55fd587e](https://github.com/facebook/react-native/commit/cf55fd587e6cc82a73079be6076d244ab72fa359) by [@ryancat](https://github.com/ryancat))
+- Accessibility announcement for list and grid in FlatList ([dd6325bafe](https://github.com/facebook/react-native/commit/dd6325bafe1a539d348f3710e717a6344576b859) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Introduce ModuleDataCleaner.cleanDataFromModules(ReactContext) ([184dfb8f8b](https://github.com/facebook/react-native/commit/184dfb8f8bd4dfbb8d1575e9554e3f3361793015) by [@RSNara](https://github.com/RSNara))
+- Introduce ReactContext.getNativeModules() ([b978308519](https://github.com/facebook/react-native/commit/b978308519f71c6c7fda4b38a842aa219a349275) by [@RSNara](https://github.com/RSNara))
+- MapBuffer implementation for JVM -> C++ communication ([cf6f3b680b](https://github.com/facebook/react-native/commit/cf6f3b680b43fae31e97b14af681293503025a0c))
+- Make links independently focusable by Talkback ([7b5b114d57](https://github.com/facebook/react-native/commit/7b5b114d578142d18bf4a7a5279b179a9ac8d958) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Support animating text color with native driver ([87cdb607e4](https://github.com/facebook/react-native/commit/87cdb607e4792156d433c44b89932e7dae3371da) by [@genkikondo](https://github.com/genkikondo))
+- Added an experimental prop serialization path based on MapBuffer ([cbcdaae2b5](https://github.com/facebook/react-native/commit/cbcdaae2b5dda2a44c95d83dcb5b5aa0f43bc6f9))
+- Allow to setup a Gradle Enterprise instance via an external script ([f11dcfaea1](https://github.com/facebook/react-native/commit/f11dcfaea14249b059aea2474ce36a0665140d4f) by [@cortinico](https://github.com/cortinico))
+- Support platform color with AnimatedColor ([cb42049e0a](https://github.com/facebook/react-native/commit/cb42049e0ae262afe907ace1099414836ab0018d) by [@genkikondo](https://github.com/genkikondo))
+- Support running animations with AnimatedColor with native driver ([3f49e6763e](https://github.com/facebook/react-native/commit/3f49e6763e66447f6ae17dc2f032e27330b7b74a) by [@genkikondo](https://github.com/genkikondo))
+- Add public API to ReactRootView to control if JS touch events are dispatched ([0a517ae438](https://github.com/facebook/react-native/commit/0a517ae43892fb764d829f8bae56c1ac58356b1b) by [@ryancat](https://github.com/ryancat))
+
+#### iOS specific
+
+- Prepare a method in the AppDelegate to control the concurrentRoot. ([8ac8439e0d](https://github.com/facebook/react-native/commit/8ac8439e0dcc0cc4a9c0cc99f614a5e19bae56eb) by [@cipolleschi](https://github.com/cipolleschi))
+- `hotkeysEnabled` property is added to `RCTDevMenu` which allows enabling/disabling hotkeys that triggers developer menu popup ([1a1a304ed2](https://github.com/facebook/react-native/commit/1a1a304ed2023d60547aef65b1a7bf56467edf08))
+- Allow modifying iOS image cache limits ([61b013e7ad](https://github.com/facebook/react-native/commit/61b013e7ad8a1cc28ee39434d2fd96b74b96cf5f) by [@danilobuerger](https://github.com/danilobuerger))
+- Add dismissActionSheet method to ActionSheetIOS ([64ebe5bbdd](https://github.com/facebook/react-native/commit/64ebe5bbdd32fc3b3a243a8a81a6f724d8f81267) by [@gabrieldonadel](https://github.com/gabrieldonadel))
+- Integrated the `accessibilityLanguage` prop to all the available components. The prop is available for any platform but it will work only on iOS. ([7b05b091fd](https://github.com/facebook/react-native/commit/7b05b091fd97f95b778369277ac2147730abc7b8) by [@dgopsq](https://github.com/dgopsq))
+- Support running animations with AnimatedColor with native driver ([49f3f47b1e](https://github.com/facebook/react-native/commit/49f3f47b1e9b840e4374d46b105604f4d2c22dd5) by [@genkikondo](https://github.com/genkikondo))
+
+### Changed
+
+- Update direct Metro dependencies to 0.70.1 ([b74e964e70](https://github.com/facebook/react-native/commit/b74e964e705c40834acad7020562e870cdad9db1), ([c92b64b16a](https://github.com/facebook/react-native/commit/c92b64b16a5710c1dfaea9af4c271931e4669636) by [@arushikesarwani94](https://github.com/arushikesarwani94)), ([f89a0b765c](https://github.com/facebook/react-native/commit/f89a0b765c09c9aba573f03777cc76673989628f) by [@robhogan](https://github.com/robhogan))
+- Upgrade RN CLI to v8.0.0 ([0605880c9e](https://github.com/facebook/react-native/commit/0605880c9ed0aec812f3198eb5075db64fba969a), [1e0226f933](https://github.com/facebook/react-native/commit/1e0226f933814bf9ada87eaa14348bfff863ead1), [24bb7f7380](https://github.com/facebook/react-native/commit/24bb7f7380662925f078d78a03fbc954af2da3d6), [7dceb9b63c](https://github.com/facebook/react-native/commit/7dceb9b63c0bfd5b13bf6d26f9530729506e9097) by [@thymikee](https://github.com/thymikee))
+- Replace use-subscripton with use-sync-external-store ([93b50be8c2](https://github.com/facebook/react-native/commit/93b50be8c2341a0daf41f6fdc656896c4907c4dc) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Expose UIManager from Scheduler ([54db5f2012](https://github.com/facebook/react-native/commit/54db5f201292ebf267800d92b7dd5bfa22431963) by [@cortinico](https://github.com/cortinico))
+- Optimized VirtualizedList context when used with nested lists ([ceb0a54608](https://github.com/facebook/react-native/commit/ceb0a546083509192c059cdd93d6aa379e38ef4e) by [@javache](https://github.com/javache))
+- Remove usage of std::string in EarlyJsErrorHandler. ([30051b2c41](https://github.com/facebook/react-native/commit/30051b2c4185bff015c72069488b5f6ba3391ad7) by [@sshic](https://github.com/sshic))
+- `eslint-config`: add support for ESLint 8 ([864a8c11b2](https://github.com/facebook/react-native/commit/864a8c11b2a7540f607ebc0e084edd7393169359) by [@wcandillon](https://github.com/wcandillon))
+- `eslint-config`: add support for TypeScript 4.5+ ([199ac680c7](https://github.com/facebook/react-native/commit/199ac680c7867a982e25620219bffa18f85f5404) by [@rnike](https://github.com/rnike))
+- Upgraded react-devtools-core dependency to 4.24.0 ([a7a781ff4a](https://github.com/facebook/react-native/commit/a7a781ff4a13e744f4eb3007ef0657740b277a72))
+- Avoid flattening nodes with event props ([980c52de41](https://github.com/facebook/react-native/commit/980c52de41258f6cf2d2360144ea7ca16a19c9f8))
+- Type the argument of Animated.interpolate as read-only ([6584304c10](https://github.com/facebook/react-native/commit/6584304c100ce4d51a5c4d606170a6ad0dc00875) by [@motiz88](https://github.com/motiz88))
+- Update gradle-download-task to 5.0.1 to support concurrent downloads ([a86cae7aac](https://github.com/facebook/react-native/commit/a86cae7aacc9837536e7d679870a57dcd0f45475) by [@michel-kraemer](https://github.com/michel-kraemer))
+- Logging a soft error when ReactRootView has an id other than -1 instead of crashing the app in hybrid apps ([1ca2c24930](https://github.com/facebook/react-native/commit/1ca2c2493027c1b027146cd41e17dd8a4fc33a41) by [@Kunal-Airtel2022](https://github.com/Kunal-Airtel2022))
+- Upgrade to React 18 ([41cbccd98d](https://github.com/facebook/react-native/commit/41cbccd98dd6c98d1f662674164cf455105a1359) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+#### Android specific
+
+- Gradle: extend the algoritm to find hermesc paths ([aeac6ab677](https://github.com/facebook/react-native/commit/aeac6ab6773cd2c0ca7abe9e5aa3f22fa81683e5) by [@cortinico](https://github.com/cortinico))
+- Bump boost for Android to 1.76 to align with iOS ([5cd6367f0b](https://github.com/facebook/react-native/commit/5cd6367f0b86543274a15bb6d0e53a8545fed845) by [@kelset](https://github.com/kelset))
+- Adopt `MapBuffer` interface for `ReadableMapBuffer` ([81e4249315](https://github.com/facebook/react-native/commit/81e42493158edd5e7b88f98c19c87e9d61ba4aba))
+- Mark intent as nullable ([5ffa0b0aa6](https://github.com/facebook/react-native/commit/5ffa0b0aa6c523234c634167be1f94b0d9edb0f7) by [@sshic](https://github.com/sshic))
+- Use CMake to build ReactAndroid module ([e3830ddffd](https://github.com/facebook/react-native/commit/e3830ddffd9260fe071e0c9f9df40b379d54cf26))
+- Update template/android and RN Tester to use `hermes-engine` from the `react-native` NPM package. ([4d91f40fbd](https://github.com/facebook/react-native/commit/4d91f40fbdf0012689b04084113299676342c0dc) by [@cortinico](https://github.com/cortinico))
+- Build Hermes from Source ([a3d9892ed9](https://github.com/facebook/react-native/commit/a3d9892ed9c993d16fa36fa6b713e2ead43fcc77) by [@cortinico](https://github.com/cortinico))
+- Rename field with default values for ReactConfig to DEFAULT_CONFIG ([964e816752](https://github.com/facebook/react-native/commit/964e81675286c80a8e322127aa7c052f62621098))
+- Moved `com/react/facebook/uimanager/interfaces` files into `com/react/facebook/uimanager` to enable Kotlin build ([b1a779392d](https://github.com/facebook/react-native/commit/b1a779392d483c649d428debfe4a6405247b8c0e))
+- Bump AGP to 7.1.0 and fix bundle inclusion in release mode ([200488e87c](https://github.com/facebook/react-native/commit/200488e87cf4bc355e03c78cd814b97b23452117) by [@gabrieldonadel](https://github.com/gabrieldonadel))
+- Release react-native-gradle-plugin 0.0.5 ([42272211e4](https://github.com/facebook/react-native/commit/42272211e4a1b7cff7770b59cf1bcf649cbdd6fc) by [@cortinico](https://github.com/cortinico))
+- ViewPagerAndroid recommendation link. ([7e8cce3d2d](https://github.com/facebook/react-native/commit/7e8cce3d2ddffbe36bcb3c9ec2f006f7e1b42a79) by [@maaxg](https://github.com/maaxg))
+- Bump android Appcompat to 1.4.1 ([6b61995647](https://github.com/facebook/react-native/commit/6b61995647c789a567845521fed7b0cc1e0cddb7) by [@gabrieldonadel](https://github.com/gabrieldonadel))
+- Remove `react-native-gradle-plugin` as a dependency from template's package.json ([cd79317672](https://github.com/facebook/react-native/commit/cd79317672e5c99636346f2abb641a688a4ceb82) by [@cortinico](https://github.com/cortinico))
+- Use 2g as a default heap size for gradle builds ([09e418ef8e](https://github.com/facebook/react-native/commit/09e418ef8e98fd026cf828696ff2475993b76ac2))
+- Use new StatusBar API on Android 11 (API 30)+ ([50c8e973f0](https://github.com/facebook/react-native/commit/50c8e973f067d4ef1fc3c2eddd360a0709828968) by [@ieatfood](https://github.com/ieatfood))
+- Change static string to public ([ab45138394](https://github.com/facebook/react-native/commit/ab45138394f41aeb13370882837968636de04c24) by [@sshic](https://github.com/sshic))
+
+#### iOS specific
+
+- Use pre-built HermesC if available in current React Native release ([644fe430fd](https://github.com/facebook/react-native/commit/644fe430fdecc0bf1fa098d1c2d52178da6c987c) by [@hramos](https://github.com/hramos))
+- When building Hermes from source, the filesystem will now be prepared using the new hermes-utils.js scripts, outside of CocoaPods ([aaa01f7710](https://github.com/facebook/react-native/commit/aaa01f77106f891696d9ec508e2ee71111a6af2a) by [@hramos](https://github.com/hramos))
+- Expose scheduler through RCTSurfacePresenter ([614aa86916](https://github.com/facebook/react-native/commit/614aa86916394d8ee2ecb236f38de6bb7e161ca2) by [@cortinico](https://github.com/cortinico))
+- Adopt UIGraphicsImageRenderer API ([d70d7fd0b3](https://github.com/facebook/react-native/commit/d70d7fd0b3984ee54622afc4692a6c945618c345) by [@matrush](https://github.com/matrush))
+- Build Hermes from source when Hermes is used ([bb01b75637](https://github.com/facebook/react-native/commit/bb01b75637edc1159a3bdb3af86936e1c92f39c1) by [@hramos](https://github.com/hramos))
+- Update CodeGen scripts to accept custom node executable ([323db75c36](https://github.com/facebook/react-native/commit/323db75c36d26d771f6b231c8eabc5afc0da74d3) by [@cipolleschi](https://github.com/cipolleschi))
+- Fixed the fallback behavior when the `.xcode.env` file is missing, actually using the old `find-node-for-xcode.sh` script ([705c6f57d6](https://github.com/facebook/react-native/commit/705c6f57d66b4499f43489292183a58413402a74) by [@cipolleschi](https://github.com/cipolleschi))
+- Adding a link in a message for the users. ([2c52131f5e](https://github.com/facebook/react-native/commit/2c52131f5e0eb4668681242fcdd8150afe3c5827) by [@cipolleschi](https://github.com/cipolleschi))
+- Bump ruby to 2.7.5 ([2c87b7466e](https://github.com/facebook/react-native/commit/2c87b7466e098c5cd230e02b279fc7bc7a357615) by [@danilobuerger](https://github.com/danilobuerger))
+- This PR removes the `find-node.sh` scripts and replaces it with an `.xcode.env` file that is sourced by the script phases that needs it. The `.xcode.env` file is versioned: to customize a local environment, an unversioned `.xcode.local.env` can be used. ([0480f56c5b](https://github.com/facebook/react-native/commit/0480f56c5b5478b6ebe5ad88e347cad2810bfb17) by [@cipolleschi](https://github.com/cipolleschi))
+- Update `PushNotificationIOS.checkPermissions` to include iOS 10+ notification settings. ([17ecd2fb5b](https://github.com/facebook/react-native/commit/17ecd2fb5b3cfb8aa0282ed406b16dc3b9777018))
+- Enable SonarKit in React-Core when the configuration is `'Debug'` ([b5343a6b0d](https://github.com/facebook/react-native/commit/b5343a6b0dd07c1b4ef9dac549df67a4d68ebd1e) by [@cipolleschi](https://github.com/cipolleschi))
+- When Hermes is enabled, the Hermes Engine will be built from source instead of using the pre-built `hermes-engine` CocoaPod. ([12ad1fffe8](https://github.com/facebook/react-native/commit/12ad1fffe87c0c5ab2e001f318ff4f8d3eda7479) by [@hramos](https://github.com/hramos))
+- Replaced folly::Optional with std::optional from C++17 in Objc module generator. ([45e2941367](https://github.com/facebook/react-native/commit/45e2941367fbf13584193bbda598173802289167) by [@philIip](https://github.com/philIip))
+- Removed methodName parameter that was used only for a warning message and moved the warning parameter to be calculated inline. ([cfb11ca2f6](https://github.com/facebook/react-native/commit/cfb11ca2f67c59c090b8a58b2b7bdaacef0e19df))
+- Fix the crash caused by nil partialLoadHandler ([46bc521513](https://github.com/facebook/react-native/commit/46bc521513c9c78e5ffc49cf3e571757e1a91cef))
+- Synchronously render cached images ([189c2c8958](https://github.com/facebook/react-native/commit/189c2c8958442541c6b4f42860b2943ece612da2))
+- Updated Flipper-Glog to 0.5.0.4 ([cd60ffdb62](https://github.com/facebook/react-native/commit/cd60ffdb62b2183cd24baef3075d56f758cea24a))
+- Add function to report early js errors ([1804951595](https://github.com/facebook/react-native/commit/180495159517dc0bfa103621e5ff62fc04cb3c8b) by [@sshic](https://github.com/sshic))
+
+### Deprecated
+
+- Deprecate the use of `react-native/jest/preprocessor.js` by external projects ([c1e9aa9a27](https://github.com/facebook/react-native/commit/c1e9aa9a272aed3cba60c4aeff783eeb8bffce68) by [@motiz88](https://github.com/motiz88))
+- Deprecate the Promise.prototype.done method and log a warning when it's called in development. ([35800962c1](https://github.com/facebook/react-native/commit/35800962c16a33eb8e9ff1adfd428cf00bb670d3) by [@motiz88](https://github.com/motiz88))
+
+#### iOS specific
+
+- Deprecating support for iOS/tvOS SDK 11.0, 12.4+ is now required ([5f2835b14d](https://github.com/facebook/react-native/commit/5f2835b14d35681c268dd64d6ec284ea5f053be3), ([c71e6efbcd](https://github.com/facebook/react-native/commit/c71e6efbcd2b95faee327d9763d321488120bc5e), ([982ca30de0](https://github.com/facebook/react-native/commit/982ca30de079d7e80bd0b50365d58b9048fb628f) by [@philIip](https://github.com/philIip))
+
+#### iOS specific
+
+- Removed lint restricting `DynamicColorIOS` to only two properties ([13b0b06522](https://github.com/facebook/react-native/commit/13b0b0652259ada468cc044b0b604edb666b2eb9))
+
+### Fixed
+
+- Remove unactionable warning about `codegenNativeComponent` when on 'Paper' ([494b73cb33](https://github.com/facebook/react-native/commit/494b73cb33197fa865e9ead8fdca11bce6822917) by [@tido64](https://github.com/tido64))
+-  Fix typo in Value's constructor with a Symbol ([a7a0f86a73](https://github.com/facebook/react-native/commit/a7a0f86a73ab51be31fb2c3205612d7ff1fb5384) by [@jpporto](https://github.com/jpporto))
+- Avoid full copy of large folly::dynamic objects by switching to std::move semantics ([3f98c8e4c2](https://github.com/facebook/react-native/commit/3f98c8e4c2c8f40b81c1a90aa65c1bdc9327faed) by [@NikoAri](https://github.com/NikoAri))
+- Fix performance issue on Animated.interpolate with big input range ([f503b21203](https://github.com/facebook/react-native/commit/f503b212039f79f00ea56b65ecf3cd150b82f087) by [@Almouro](https://github.com/Almouro))
+- Update function spacing linting rules ([8650220cf9](https://github.com/facebook/react-native/commit/8650220cf99739c4b904a37ce4f19ce7dfd3bdbb) by [@joeframbach](https://github.com/joeframbach))
+- Add supportsFromJs and supportsToJs template variables ([087624ccaf](https://github.com/facebook/react-native/commit/087624ccaf2e484c0b6425e57edf9afd62a06e9a) by [@appden](https://github.com/appden))
+- The Array appended to FormData is transmitted as a string ([d2e8e7d58e](https://github.com/facebook/react-native/commit/d2e8e7d58e680e0bb3b4da1f820dd4dd840639f5) by [@bang9](https://github.com/bang9))
+- AppState.removeEventListener correctly removes listener for blur and focus events ([9aab25ec53](https://github.com/facebook/react-native/commit/9aab25ec536473ffe6d22c5efeae8fea6bd769be) by [@AntoineDoubovetzky](https://github.com/AntoineDoubovetzky))
+- `focus()` on TextInput to respect its `editable` state ([8a5460ce80](https://github.com/facebook/react-native/commit/8a5460ce80e69c11a007121d4278d55642f6b10e) by [@vonovak](https://github.com/vonovak))
+- Restore Windows build with RawPropsParser.cpp ([2d64d1d693](https://github.com/facebook/react-native/commit/2d64d1d69360161c047c86a026403d8074ba28bb) by [@TatianaKapos](https://github.com/TatianaKapos))
+- Fix babel-plugin-codegen crash when export init is null ([ae756647c9](https://github.com/facebook/react-native/commit/ae756647c9b8a88ba615fd30185f621825a33427) by [@janicduplessis](https://github.com/janicduplessis))
+- Fixed compilation warning due to `using namespace` being used as part of header ([009d80bf5a](https://github.com/facebook/react-native/commit/009d80bf5a55dd74be448960b1344ac7599c6bae) by [@arhelmus](https://github.com/arhelmus))
+- Allow including TurboModule.h in mixed rtti/no-rtti environment, even if TurboModule.h/cpp is compiled without RTTI. ([1f87729697](https://github.com/facebook/react-native/commit/1f87729697370a4ab31e2bb9ab1780438d9e146f) by [@nlutsenko](https://github.com/nlutsenko))
+- Remove prettier from dependencies in eslint-config ([2db1bca952](https://github.com/facebook/react-native/commit/2db1bca95224ce39484c3f27508aec9a21ce126a) by [@Kerumen](https://github.com/Kerumen))
+- Switch Component doesn't disable click functionality when disabled ([b2e625a517](https://github.com/facebook/react-native/commit/b2e625a51723becea4cef0433448fbec679669ee) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Support numeric color values in StyleSheet's Flow types ([83b1975b90](https://github.com/facebook/react-native/commit/83b1975b90569a36020da33156615a13fcc7ba92) by [@motiz88](https://github.com/motiz88))
+- Fix build break on Windows with ReactCommon ([42b391775f](https://github.com/facebook/react-native/commit/42b391775f663df335f6f2553104fc2fa35b1bee) by [@chiaramooney](https://github.com/chiaramooney))
+- Fixed opacity value in TouchableOpacity ([3eddc9abb7](https://github.com/facebook/react-native/commit/3eddc9abb70eb54209c68aab7dbd69e363cc7b29) by [@hetanthakkar1](https://github.com/hetanthakkar1))
+- Remove illegal private property access in VirtualizedSectionList.scrollToLocation ([b2f871a6fa](https://github.com/facebook/react-native/commit/b2f871a6fa9c92dd0712055384b9eca6d828e37d) by [@motiz88](https://github.com/motiz88))
+- JS animated node value updates properly when listener is attached ([1f778014a7](https://github.com/facebook/react-native/commit/1f778014a7e95c5c473898c38d5b1e0725cd373c) by [@genkikondo](https://github.com/genkikondo))
+- Working around Long paths limitation on Windows ([7b76abc0d3](https://github.com/facebook/react-native/commit/7b76abc0d3a0a5bec37f314c80954e412fc5f5ec) by [@mganandraj](https://github.com/mganandraj))
+- Fix VirtualizedList with initialScrollIndex not rendering all elements when data is updated ([c5c17985da](https://github.com/facebook/react-native/commit/c5c17985dae402725abb8a3a94ccedc515428711) by [@AntoineDoubovetzky](https://github.com/AntoineDoubovetzky))
+
+#### Android specific
+
+- Add back hermes inspector support ([6b6adcc111](https://github.com/facebook/react-native/commit/6b6adcc111123bec2c4c110070b2506385e74664) by [@Kudo](https://github.com/Kudo))
+- Fixed issue where any node with an AccessibilityDelegate set (which was any node with any accessibility propoerty), was using ExploreByTouchHelper's built in AccessibilityNodeProvider, and not properly populating their AccessibilityNodeInfo's, leading to focus issues and issues with automated test services like UIAutomator. ([70fcab76a4](https://github.com/facebook/react-native/commit/70fcab76a4dcf65e628ac897620fe050758574e3) by [@blavalla](https://github.com/blavalla))
+- Fix Extras usage in Android implementation of Linking.sendIntent() ([86f8d0bb52](https://github.com/facebook/react-native/commit/86f8d0bb528a75777c357ae214643ed58c326ca9))
+- Fix typo in gradle plugin deprecation message ([41cfd2f976](https://github.com/facebook/react-native/commit/41cfd2f9768e4742eedd299ab467d316d016705e) by [@mikehardy](https://github.com/mikehardy))
+- Fixed `TimingModule` related functions for headless JS tasks, eg. `setTimeout` ([dac56ce077](https://github.com/facebook/react-native/commit/dac56ce0776e0e4d23ed4f8b324f2e2432aefa6a) by [@marcesengel](https://github.com/marcesengel))
+- Improve support for Android users on M1 machine ([c5babd993a](https://github.com/facebook/react-native/commit/c5babd993a2bed2994ecc4710fa9e424b3e6cfc2) by [@cortinico](https://github.com/cortinico))
+- Do not use `rootProject` directly in Gradle scripts ([b2bc5aa5c9](https://github.com/facebook/react-native/commit/b2bc5aa5c903ad057a53d4caa82b0fe74e01c07c) by [@cortinico](https://github.com/cortinico))
+- Adding null check for context in redbox surface delegate ([9527ab1584](https://github.com/facebook/react-native/commit/9527ab1584869d7966c562e8aa7cbf48788156a3) by [@ryancat](https://github.com/ryancat))
+- Fix crash on empty snapToOffsets array ([145fd041c7](https://github.com/facebook/react-native/commit/145fd041c7afe9a18f08f461487bb515ab2f516a) by [@ryancat](https://github.com/ryancat))
+- Fix StatusBar not updating to use translucent values when set to the same value across different activities ([d34a75e9e5](https://github.com/facebook/react-native/commit/d34a75e9e5932adcac4a16f5b815bb909c3aa0dd))
+- Fix underlineColorAndroid transparent not working on API 21 ([52aee50a70](https://github.com/facebook/react-native/commit/52aee50a704bbeab91f5fa05fe3220dee304422f) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fixed regression on content in scroll view not responding to touch when fling got interrupted ([bb8ff9260f](https://github.com/facebook/react-native/commit/bb8ff9260fe6a783171f35ce1a459927d8179d08) by [@ryancat](https://github.com/ryancat))
+- Fixes android build error when compiling as library ([c34ef5841c](https://github.com/facebook/react-native/commit/c34ef5841cf3a63a9cc96add577d6bf6d52e4397) by [@nickfujita](https://github.com/nickfujita))
+- Cancel post touch process when new touch is received ([0368081858](https://github.com/facebook/react-native/commit/0368081858193d7c2537acd9080d11bb701ee98b) by [@ryancat](https://github.com/ryancat))
+- Improve rendering of images when resampled and corner radius applied ([f743bed657](https://github.com/facebook/react-native/commit/f743bed657591b078300a6519e3d68db542fd757) by [@javache](https://github.com/javache))
+- Fix transform when calculate overflowInset ([0975e96d53](https://github.com/facebook/react-native/commit/0975e96d53546ac05b2154352fe56e5d82e2a1f8) by [@ryancat](https://github.com/ryancat))
+- Fix ReactHorizontalScrollView contentOffset ([9f6f97151c](https://github.com/facebook/react-native/commit/9f6f97151c44a0f727c9dd938222be1860ecf3f9) by [@genkikondo](https://github.com/genkikondo))
+- Text Component does not announce disabled and disables click functionality when disabled ([7b2d8178b1](https://github.com/facebook/react-native/commit/7b2d8178b155f5f1b247614c46e5e20f31bbd438) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix StatusBar on Android API 30 ([9ed2df628d](https://github.com/facebook/react-native/commit/9ed2df628ddd410cc3383e68b0386471432445c0) by [@ieatfood](https://github.com/ieatfood))
+- Use root locale when converting string case. ([5341ad8962](https://github.com/facebook/react-native/commit/5341ad896245c40a00b6faead1b90d01aac58f8c) by [@halaei](https://github.com/halaei))
+- Fix DarkMode on Calendar DateTimePicker ([97064ae1fb](https://github.com/facebook/react-native/commit/97064ae1fbf84a8a6b653c02c5872191b7d2d622) by [@mdvacca](https://github.com/mdvacca))
+- Fix ScrollView contentOffset ([be260b9f47](https://github.com/facebook/react-native/commit/be260b9f479a3b55ee43d2959d2c49fd3c1eb4ac) by [@genkikondo](https://github.com/genkikondo))
+- Do not bundle libhermes.so or libjsc.so inside the React Native Android AAR ([fa85417179](https://github.com/facebook/react-native/commit/fa854171798e67b8a10820f77d7198315e1784ed) by [@cortinico](https://github.com/cortinico))
+- Enable hitSlop to be set using a single number. ([d682753244](https://github.com/facebook/react-native/commit/d682753244feba28c6a15c31966a3da075a090e6) by [@javache](https://github.com/javache))
+- Fix crash caused by Image.queryCache parsing null ([ae3d4f7008](https://github.com/facebook/react-native/commit/ae3d4f700843ae4cbb6927ee620095136d1abc3f) by [@skychx](https://github.com/skychx))
+- Fix NullPointerException when disaptching events ([fbeb51ef51](https://github.com/facebook/react-native/commit/fbeb51ef5133303a5cb71569507d44403ded3447) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- ScrollView's contentInsetAdjustmentBehavior is reset to Never at every reuse to avoid layout artifacts. ([28a65f4387](https://github.com/facebook/react-native/commit/28a65f438789c29309d6e7c58063a73ca721ef43))
+- Prevent Nullptr segfault in TurboModule init path ([7f3cc256b5](https://github.com/facebook/react-native/commit/7f3cc256b5bcbf2e64540ca69401f62ec6869f0e) by [@RSNara](https://github.com/RSNara))
+- Expose the extraData dict attached to JavaScript errors to the native ExceptionManager on iOS, similar to Android ([a65ae8eff6](https://github.com/facebook/react-native/commit/a65ae8eff6ec6f9ad283ac8e96f00802421a14da) by [@GijsWeterings](https://github.com/GijsWeterings))
+- `RCTLocalizationProvider` Fall back to input when no localization is available ([18196512db](https://github.com/facebook/react-native/commit/18196512db6b8b4469a5e1b098d8892ae72d743a) by [@robhogan](https://github.com/robhogan))
+- Update iOS LogBox to render its UIWindow with the key window's UIWindowScene ([d31d83f410](https://github.com/facebook/react-native/commit/d31d83f4109c167ec612058c805fd65f69b82476) by [@vincentriemer](https://github.com/vincentriemer))
+- Remove Gemfile.lock from template ([1907bd31f0](https://github.com/facebook/react-native/commit/1907bd31f066865aa1c5fe4ec88e98ee46448771) by [@danilobuerger](https://github.com/danilobuerger))
+- Fix `pod install` when `RCT-Folly` version has been updated. ([b2517c3bdc](https://github.com/facebook/react-native/commit/b2517c3bdccc3f9d935f4ee06f959d6ce8f27bbe) by [@fortmarek](https://github.com/fortmarek))
+- Fix usage of cocoapods with --project-directory flag and new arch ([2f813f873a](https://github.com/facebook/react-native/commit/2f813f873a1692044ea3461e59ca732a4d952300) by [@danilobuerger](https://github.com/danilobuerger))
+- Ensure LogBoxView is sized relative to the key window instead of the full screen ([84f8c9ad55](https://github.com/facebook/react-native/commit/84f8c9ad550f98295d2e718b4b1d6b1ac724b898) by [@vincentriemer](https://github.com/vincentriemer))
+- Improved template fastlane gitignore ([f43f05d292](https://github.com/facebook/react-native/commit/f43f05d292fd2fbdf3d5fdfd194ed81b0e346657) by [@danilobuerger](https://github.com/danilobuerger))
+- Set RCTView borderColor to UIColor ([267d36d0af](https://github.com/facebook/react-native/commit/267d36d0afb4b3713df9b679c2019c44ac6bcc3f) by [@danilobuerger](https://github.com/danilobuerger))
+- Fix action sheet callback invoked more than once on iPad ([8935d6e697](https://github.com/facebook/react-native/commit/8935d6e697dffb0971f5a8ee1dfbc580080de3e0) by [@janicduplessis](https://github.com/janicduplessis))
+- Resolve border platform color based on current trait collection ([9a35818797](https://github.com/facebook/react-native/commit/9a3581879764f3f1b2743905e3e54611e96bb618) by [@danilobuerger](https://github.com/danilobuerger))
+- Enable custom sound for local push notifications. ([eb19499484](https://github.com/facebook/react-native/commit/eb1949948406195c4c02c6041d07cba074ae820c))
+- Invoke registerForRemoteNotifications on main UI thread. ([3633a05299](https://github.com/facebook/react-native/commit/3633a05299d99b12acc5c3c056b977463df1924e))
+- Bump flipper pods to get arm64 catalyst slice ([f811da7cc2](https://github.com/facebook/react-native/commit/f811da7cc20cc49ca5c8d4e023d6c61e36e15dd1) by [@fortmarek](https://github.com/fortmarek))
+- Fix `pod install --project-directory=ios` failing when Hermes is enabled ([1b22e8a039](https://github.com/facebook/react-native/commit/1b22e8a039081887ffd450596d822bff975d6900), ([eb7cc85a91](https://github.com/facebook/react-native/commit/eb7cc85a9146d058694247178f03d57cc125c97a) by [@tido64](https://github.com/tido64))
+- Fix compilation warning in yoga ([52d8a797e7](https://github.com/facebook/react-native/commit/52d8a797e7a6be3fa472f323ceca4814a28ef596) by [@cuva](https://github.com/cuva))
+- Prevent deadlock when dispatching events from observers on the same thread. ([68fd1e5508](https://github.com/facebook/react-native/commit/68fd1e55085e871a854563721ee29ca698239607) by [@Pickleboyonline](https://github.com/Pickleboyonline))
+- In RCTSurfaceHostingComponent, access ckComponent from main queue to pass assertion ([1874c81003](https://github.com/facebook/react-native/commit/1874c81003b468554c227541fec5e29c4adfb82f) by [@p-sun](https://github.com/p-sun))
+- Fix modal redbox for onDismiss ([46f68aceb2](https://github.com/facebook/react-native/commit/46f68aceb20a10c95c92b5ffeb90f289b015a559) by [@HeyImChris](https://github.com/HeyImChris))
+- Attempt to fix crash during app termination ([9cd43340a7](https://github.com/facebook/react-native/commit/9cd43340a7e2443564c2ff5e8e85d37f6e1e47ef) by [@sammy-SC](https://github.com/sammy-SC))
+
+### Security
+
+- Encode URL params in URLSearchParams.toString() ([1042a8012f](https://github.com/facebook/react-native/commit/1042a8012fb472bd5c882b469fe507dd6279d562) by [@sshic](https://github.com/sshic))
+
+## v0.68.4
+
+### Changed
+
+- Bump version of `promise` from 8.0.3 to 8.2.0, enabling `Promise.allSettled` ([951538c080](https://github.com/facebook/react-native/commit/951538c080ef745da304fb308fa91d597e0dd98a) by [@retyui](https://github.com/retyui))
+- Bump react-native-codegen to 0.0.18 ([40a3ae3613](https://github.com/facebook/react-native/commit/40a3ae3613394fe5f0d728bada538d2d5b78a8a4) by [@dmytrorykun](https://github.com/dmytrorykun))
+
+#### Android specific
+
+- Correctly resolve classes with FindClass(..) ([361b310bcc](https://github.com/facebook/react-native/commit/361b310bcc8dddbff42cf63495649291c894d661) by [@evancharlton](https://github.com/evancharlton))
+
+### Fixed
+
+- Codegen should ignore `.d.ts` files ([0f0d52067c](https://github.com/facebook/react-native/commit/0f0d52067cb89fdb39a99021f0745282ce087fc2) by [@tido64](https://github.com/tido64))
+
+#### iOS specific
+
+- Fix the way the orientation events are published ([7d42106d4c](https://github.com/facebook/react-native/commit/7d42106d4ce20c644bda4d928fb0abc163580cee) by [lbaldy](https://github.com/lbaldy))
+
+## v0.68.3
+
+### Changed
+
+#### Android specific
+
+- Let's not build reactnativeutilsjni shared library ([af9225ec5f](https://github.com/facebook/react-native/commit/af9225ec5fd22da802e3da4d786fa7f6ec956b0f) by [@SparshaSaha](https://github.com/SparshaSaha))
+- Modified **getDefaultJSExecutorFactory** method ([87cfd386cb](https://github.com/facebook/react-native/commit/87cfd386cb2e02bfa440c94706d9d0274f83070c) by [@KunalFarmah98](https://github.com/KunalFarmah98))
+
+### Fixed
+
+- Use monotonic clock for performance.now() ([114d31feee](https://github.com/facebook/react-native/commit/114d31feeeb47f5a57419e5088c3cbe9340f757a))
+
+#### Android specific
+
+- Logging a soft error when ReactRootView has an id other than -1 instead of crashing the app in hybrid apps ([1ca2c24930](https://github.com/facebook/react-native/commit/1ca2c2493027c1b027146cd41e17dd8a4fc33a41) by [@Kunal-Airtel2022](https://github.com/Kunal-Airtel2022))
+
+## v0.68.2
+
+### Changed
+
+- Bump used version of react-native-codegen to 0.0.17 ([dfda480a98](https://github.com/facebook/react-native/commit/dfda480a9888d95c542cea40f25e8e783565c1db) by [@cortinico](https://github.com/cortinico))
+- Bump react-native-codegen to 0.0.17 ([a5ddc2e165](https://github.com/facebook/react-native/commit/a5ddc2e16523ea336ffbecf7acfd4820469a29e7) by [@cortinico](https://github.com/cortinico))
+
+### Fixed
+
+#### Android specific
+
+- Working around Long paths limitation on Windows ([62ef6f5fa1](https://github.com/facebook/react-native/commit/62ef6f5fa1ecb918bde130a6024b65afcd34c7e3) by [@mganandraj](https://github.com/mganandraj))
+
+## v0.68.1
+
+### Changed
+
+#### Android specific
+
+- Bump React Native Gradle plugin to 0.0.6 ([9573d7b84d](https://github.com/facebook/react-native/commit/9573d7b84d35233fbb39a4067cfef65490aa34a7) by [@cortinico](https://github.com/cortinico))
+- Don't require yarn for codegen tasks ([d5da70e17e](https://github.com/facebook/react-native/commit/d5da70e17e8c8210cd79a4d7b09c6a5ded4b5607) by [@danilobuerger](https://github.com/danilobuerger))
+
+### Fixed
+
+- Fix dynamic_cast (RTTI) by adding key function to ShadowNodeWrapper and related classes ([58a2eb7f37](https://github.com/facebook/react-native/commit/58a2eb7f37c2dc27ad3575618778ad5b23599b27) by [@kmagiera](https://github.com/kmagiera))
+- Pin use-subscription to < 1.6.0 ([5534634892](https://github.com/facebook/react-native/commit/5534634892f47a3890e58b661faa2260373acb25) by [@danilobuerger](https://github.com/danilobuerger))
+
+#### Android specific
+
+- Use NDK 23 only for Windows users. ([e48a580080](https://github.com/facebook/react-native/commit/e48a580080bdae58b375f30fbcf8a83cc1915b2f) by [@cortinico](https://github.com/cortinico))
+- Improve support for Android users on M1 machine ([4befd2a29c](https://github.com/facebook/react-native/commit/4befd2a29cb94b026d9c048a041aa9f1817295b5) by [@cortinico](https://github.com/cortinico))
+- Template: Specify abiFilters if enableSeparateBuildPerCPUArchitecture is not set. ([5dff920177](https://github.com/facebook/react-native/commit/5dff920177220ae5f4e37c662c63c27ebf696c83) by [@cortinico](https://github.com/cortinico))
+- Fix for building new architecture sources on Windows ([5a8033df98](https://github.com/facebook/react-native/commit/5a8033df98296c941b0a57e49f2349e252339bf9) by [@mganandraj](https://github.com/mganandraj))
+
+## v0.68.0
+
+### Breaking Changes
+
+- CI moved to Node 16. ([f1488db109](https://github.com/facebook/react-native/commit/f1488db109d13e748b071c02b40e90cdca1cc79d) by [@kelset](https://github.com/kelset)).
+  This change enforces Node >= 14 for React Native builds.
+- Bump Android Gradle Plugin to 7.0.1. ([272cfe5d13](https://github.com/facebook/react-native/commit/272cfe5d1371c38a281cf3883ff0254a8d3505a3) by [@dulmandakh](https://github.com/dulmandakh))
+  This version of Android Gradle plugin enforces JDK 11 for Android builds. Do not upgrade to AGP 7.1 as it is not supported by this version of react-native.
+- Removed `fallbackResource` from `RCTBundleURLProvider` API ([0912ee179c](https://github.com/facebook/react-native/commit/0912ee179c210fb6b2ed9afbb3f2fbc5fb8a2bb3)) by [@philIip](https://github.com/philIip)
+
+### New Architecture
+
+*If you are interested in enabling the new architecture, please refer to [the dedicated documentation](https://reactnative.dev/docs/next/new-architecture-intro).*
+
+- Do not include Facebook license on users codegen'd code ([450967938a](https://github.com/facebook/react-native/commit/450967938ab25c4dabb9d5ecd9f7b57afb1c78dd) by [@cortinico](https://github.com/cortinico))
+
+#### Android specific
+
+- Setup a `newArchEnabled` property to Opt-in the New Architecture in the template ([8d652fba4c](https://github.com/facebook/react-native/commit/8d652fba4ce07256784a1b7e86713c810336856d) by [@cortinico](https://github.com/cortinico))
+
+#### iOS specific
+
+- Add fabric option to the default app template. ([2e9a376c84](https://github.com/facebook/react-native/commit/2e9a376c8488d1fb11c0b5d604137712321fd90d) by [@sota000](https://github.com/sota000))
+- Add turbo module support in the default app template. ([8ec0e6919c](https://github.com/facebook/react-native/commit/8ec0e6919c5fab118c8b54538860ee36009bfaa7) by [@sota000](https://github.com/sota000))
+- Rename the new architecture flag to RCT_NEW_ARCH_ENABLED. ([c0c5439959e](https://github.com/facebook/react-native/commit/c0c5439959e21d7806178bb9139c2cd19b857506) by [@sota000](https://github.com/sota000))
+
+### Added
+
+- Create @fb-tools-support/yarn package ([7db294d6d5](https://github.com/facebook/react-native/commit/7db294d6d5b00a38f305dd52be3e0961f35695c8) by [@motiz88](https://github.com/motiz88))
+- Support string color values in Animated.Color ([d3a0c4129d](https://github.com/facebook/react-native/commit/d3a0c4129d6a5a7beced4e9aa62b2da4e3f4fed4))
+- New Animated.Color node ([ea90a76efe](https://github.com/facebook/react-native/commit/ea90a76efef60df0f46d29228289f8fc1d26f350))
+- Added linter warning config for unstable nested components ([988fefc44d](https://github.com/facebook/react-native/commit/988fefc44d39957e8c5e1eecb02dfd1ce119f34c) by [@javache](https://github.com/javache))
+- Option to supply `platformConfig` to NativeAnimated ([4a227ce2ab](https://github.com/facebook/react-native/commit/4a227ce2ab3f8c181150461ab28b831979093db0) by [@rozele](https://github.com/rozele))
+- Animated.event can be used to extract values with numeric keys from native events ([b2105711a0](https://github.com/facebook/react-native/commit/b2105711a0b90859f8e3fc1aaec4998e252c2d14) by [@javache](https://github.com/javache))
+- Adds a setSelection imperative method to TextInput ([771ca921b5](https://github.com/facebook/react-native/commit/771ca921b59cc3b3fd12c8fe3b08ed150bcf7a04) by [@lyahdav](https://github.com/lyahdav))
+- Native-only prop to optimize text hit testing on some RN platforms ([f3bf2e4f51](https://github.com/facebook/react-native/commit/f3bf2e4f51897f1bb71e37002c288ebf3b23cf78) by [@rozele](https://github.com/rozele))
+
+#### Android specific
+
+- Added DoNotStripAny proguard rules ([48318b1542](https://github.com/facebook/react-native/commit/48318b1542910b939ab977c0bc82e98f098abe50) by [@ShikaSD](https://github.com/ShikaSD))
+- Add new API in ScrollView and HorizontalScrollView to process pointerEvents prop. ([48f6967ae8](https://github.com/facebook/react-native/commit/48f6967ae88100110160e1faf03e6c0d37e404bd) by [@ryancat](https://github.com/ryancat))
+- Add `accessibilityLabelledBy` props ([36037fa81b](https://github.com/facebook/react-native/commit/36037fa81bbdcc460057e7e7cf608cd364ca48a6) by [@grgr-dkrk](https://github.com/grgr-dkrk))
+- Added missing constructor to WritableNativeArray ([c68c47d2ba](https://github.com/facebook/react-native/commit/c68c47d2bafa8e8e25b534d6cdd1a63bc77a1cf4) by [@piaskowyk](https://github.com/piaskowyk))
+- Add new API for custom fling animator to provide predicted travel distance for its fling animation. ([fe6277a30d](https://github.com/facebook/react-native/commit/fe6277a30d3ec19e4772991e30ae20c3a9cfe565) by [@ryancat](https://github.com/ryancat))
+- Adding new API `onChildEndedNativeGesture` to the RootView interface to let its implementations notify the JS side that a child gesture is ended. ([9b33c31ee0](https://github.com/facebook/react-native/commit/9b33c31ee024bae30e441107f838e1b5044525ba) by [@ryancat](https://github.com/ryancat))
+- Make the `reactNativeArchitectures` property more discoverable ([0f39a1076d](https://github.com/facebook/react-native/commit/0f39a1076dc154995a2db79352adc36452f46210) by [@cortinico](https://github.com/cortinico))
+- Added `isAccessibilityServiceEnabled` to get if accessibility services are enabled ([c8b83d4e0b](https://github.com/facebook/react-native/commit/c8b83d4e0b33c2af45093f7b2262ee578ece2faf) by [@grgr-dkrk](https://github.com/grgr-dkrk))
+- Add bundleForVariant option ([d2c10da5d5](https://github.com/facebook/react-native/commit/d2c10da5d5687833545691f281473381e4466c2e) by [@grit96](https://github.com/grit96))
+- Add ACCEPT_HANDOVER, ACTIVITY_RECOGNITION, ANSWER_PHONE_CALLS, READ_PHONE_NUMBERS & UWB_RANGING to PermissionsAndroid ([4b25a0aaa0](https://github.com/facebook/react-native/commit/4b25a0aaa077caf9c437bcfeef8a226eda5a102e) by [@iBotPeaches](https://github.com/iBotPeaches))
+
+#### iOS specific
+
+- Add new argument to announceForAccessibility to allow queueing on iOS ([4d1357918a](https://github.com/facebook/react-native/commit/4d1357918a4dcb331ccea2140699f487ca45ea30) by [@peterc1731](https://github.com/peterc1731))
+- Add volta support to find-node.sh ([765844055b](https://github.com/facebook/react-native/commit/765844055ba0d02262a11114bad5da67e935d8df) by [@liamjones](https://github.com/liamjones))
+- Support fnm when detecting node binary ([c9e4d34885](https://github.com/facebook/react-native/commit/c9e4d3488578d65e55198ad597252a2ac8cc5f73) by [@MoOx](https://github.com/MoOx))
+- Find-node.sh now respects .nvmrc ([35bcf934b1](https://github.com/facebook/react-native/commit/35bcf934b186e581d100d43e563044300759557f) by [@igrayson](https://github.com/igrayson))
+- Add macros to be able to stub C functions in tests ([749a9207b6](https://github.com/facebook/react-native/commit/749a9207b6f0545c03ca83efbda7971ffd4d2d57) by [@philIip](https://github.com/philIip))
+
+
+### Changed
+
+- Bump RN CLI to v7.0.3, and Metro to 67 ([848ba6fb1d](https://github.com/facebook/react-native/commit/848ba6fb1db81bbb44efd373af9e81f31f227aef) by [@kelset](https://github.com/kelset)) and ([df2e934a69](https://github.com/facebook/react-native/commit/df2e934a697b5b207053db3bbcf71492932a6062) by [@kelset](https://github.com/kelset))
+- Upgraded react-devtools-core dependency to 4.23.0 ([1cc217d5ef](https://github.com/facebook/react-native/commit/1cc217d5effdbee4cf2f64063a443ecb331673d4) by [@bvaughn](https://github.com/bvaughn))
+- Bump Flipper to 0.125.0 ([50057158ca](https://github.com/facebook/react-native/commit/50057158ca32842d70160541e3cb5d4bd512f8f5) by [@cortinico](https://github.com/cortinico))
+- Export Flow type for deceleration rate for use in other files to keep deceleration rate prop values consistently typed ([9b0ed920ef](https://github.com/facebook/react-native/commit/9b0ed920ef087c4c18504adacf9d4f557812cf1b))
+- Upgrade deprecated-react-native-prop-types dependency ([badd30885f](https://github.com/facebook/react-native/commit/badd30885fb999124b6b54b3fb016edbd988c16b) by [@chiaramooney](https://github.com/chiaramooney))
+- Improved error message in react.gradle ([7366a866b3](https://github.com/facebook/react-native/commit/7366a866b381db6fc5615153e7788aa4828cfd96) by [@vonovak](https://github.com/vonovak))
+- Upgraded packages to the latest versions for ESLint v7. ([cf763cdf81](https://github.com/facebook/react-native/commit/cf763cdf816e1cad20caf2347c54bc96c7f6dd47) by [@yungsters](https://github.com/yungsters))
+- Updated the links for the discussions and changelog ([daf37a1fce](https://github.com/facebook/react-native/commit/daf37a1fce43403e6320e1e3023e86fd1b970bdf) by [@MikeyAlmighty](https://github.com/MikeyAlmighty))
+- XMLHttpRequest.getAllResponseHeaders() now returns headers with names lowercased and sorted in ascending order, as per specification ([b2415c4866](https://github.com/facebook/react-native/commit/b2415c48669391ee1ab7c6450748c4d91097a666) by [@ascherkus](https://github.com/ascherkus))
+- Bump react-native-codegen to 0.0.9 ([e3a71b019f](https://github.com/facebook/react-native/commit/e3a71b019fa78e2b4b3454ccc59ea9c8cc543b29) by [@cortinico](https://github.com/cortinico))
+- Accessing `Image.propTypes`, `Text.propTypes`, `TextInput.propTypes`, `ColorPropType`, `EdgeInsetsPropType`, `PointPropType`, or `ViewPropTypes` now emits a deprecation warning. ([3f629049ba](https://github.com/facebook/react-native/commit/3f629049ba9773793978cf9093c7a71af15e3e8d) by [@yungsters](https://github.com/yungsters))
+- Bump `core-workflow-apply-version-label` version ([e973b3afc2](https://github.com/facebook/react-native/commit/e973b3afc274f892a0e5a6fdea9004dc5d84eb2b) by [@lucasbento](https://github.com/lucasbento))
+- Add `vendor/bundle` into .gitignore template ([2f67f5d68b](https://github.com/facebook/react-native/commit/2f67f5d68b17010c49f2996a788fe68c1fe2e9f6) by [@MoOx](https://github.com/MoOx))
+
+#### Android specific
+
+- Add allowsEdgeAntialiasing on views with rotations or skew transforms ([e6a3410afe](https://github.com/facebook/react-native/commit/e6a3410afe7d9a4cecf3db0a95503d2ff05bb862))
+- Bump Kotlin version to 1.6.10 ([d0f0234656](https://github.com/facebook/react-native/commit/d0f0234656dc981b422d1e9aa0885afd5fd29879) by [@AKB48](https://github.com/AKB48))
+- Bump Soloader to 0.10.3 ([f45889ef95](https://github.com/facebook/react-native/commit/f45889ef95ec694520e91b0032e591a087e088e5) by [@osartun](https://github.com/osartun))
+- Bump Gradle to 7.3 ([c180627ac7](https://github.com/facebook/react-native/commit/c180627ac7e5e155707b3c9433c4582839e1820e) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump Android compile and target SDK to 31 ([00ac034353](https://github.com/facebook/react-native/commit/00ac034353cbc867991bf79cb1dd103353f47126) by [@ShikaSD](https://github.com/ShikaSD))
+- Use side-by-side NDK for Android ([bd7caa64f5](https://github.com/facebook/react-native/commit/bd7caa64f5d6ee5ea9484e92c3629c9ce711f73c) by [@cortinico](https://github.com/cortinico))
+- Leverage Gradle implicit dependency substitution for Gradle Plugin ([0fccbd53af](https://github.com/facebook/react-native/commit/0fccbd53af86083a8742a33282dc183d07eb27a2) by [@cortinico](https://github.com/cortinico))
+- Remove unused import of JMessageQueueThread.h ([705236e363](https://github.com/facebook/react-native/commit/705236e3637e4f80e5fa4bd7234df9f1e14a5d3d) by [@sshic](https://github.com/sshic))
+- Made `MessageQueueThread#runOnQueue` return a boolean. Made `MessageQueueThreadImpl#runOnQueue` return false when the runnable is not submitted. ([89faf0c9a8](https://github.com/facebook/react-native/commit/89faf0c9a87f6de68ca416d10566dbcbe80d9450))
+- Assume *.ktx assets are packaged as Android drawables ([cb610ddca7](https://github.com/facebook/react-native/commit/cb610ddca79fe29b88568545ab011671fc392c9a) by [@motiz88](https://github.com/motiz88))
+- Add ViewConfigs to support onEnter/onExit/onMove events ([44143b50fd](https://github.com/facebook/react-native/commit/44143b50fdcafe22caa43d76ec3210132ce3af21) by [@mdvacca](https://github.com/mdvacca))
+- Let react_native_assert really abort the app ([2ae06df58f](https://github.com/facebook/react-native/commit/2ae06df58f5f5eaf4386c14d28af25b643401bf3) by [@cortinico](https://github.com/cortinico))
+- Bugfix for multiple shadow threads rendered at the same time, small probability crash. ([9d71b166a6](https://github.com/facebook/react-native/commit/9d71b166a6c9d9afec7186c6a33aedc6975aa43c) by [@chenmo187](https://github.com/chenmo187))
+- RootView's onChildStartedNativeGesture now takes the child view as its first argument ([03e513de41](https://github.com/facebook/react-native/commit/03e513de41bf60f071eacbbb9604c83605abf625) by [@javache](https://github.com/javache))
+- Add ReactInstanceEventListenerV2 for migration ([ce74aa4ed3](https://github.com/facebook/react-native/commit/ce74aa4ed335d4c36ce722d47937b582045e05c4) by [@sshic](https://github.com/sshic))
+- Improved logic of findTargetPathAndCoordinatesForTouch ([dfe42d6b75](https://github.com/facebook/react-native/commit/dfe42d6b75005f519c0e2c87c75e7886dce3345c) by [@javache](https://github.com/javache))
+- Set a resolution strategy for com.facebook.react:react-native when on New Architecture ([e695bc0bb5](https://github.com/facebook/react-native/commit/e695bc0bb50fc1c712e9862ed8fe4e7cc6619fae) by [@cortinico](https://github.com/cortinico))
+- Make hermes-executor-common a static lib ([b2cf24f41c](https://github.com/facebook/react-native/commit/b2cf24f41cb5f15653b34d396ef2a1c90defdf43) by [@janicduplessis](https://github.com/janicduplessis))
+- Static link for hermes-inspector ([20b0eba581](https://github.com/facebook/react-native/commit/20b0eba581a00e5e7e300f6377379b836617c147) by [@janicduplessis](https://github.com/janicduplessis))
+
+#### iOS specific
+
+- Don't capitalize the first letter of a word that is starting by a number ([8b5a5d4645](https://github.com/facebook/react-native/commit/8b5a5d4645136ef3d6ee043348e583cbbac87ee3) by [@MaeIg](https://github.com/MaeIg))
+- updated `jsBundleURLForBundleRoot:fallbackResource` to `jsBundleURLForBundleRoot:` ([aef843bfe6](https://github.com/facebook/react-native/commit/aef843bfe60bda6bcc98d3fb4a6c295c9f4b66e3) by [@philIip](https://github.com/philIip))
+- Remove iOS 11 availability check ([9b059b6709](https://github.com/facebook/react-native/commit/9b059b67092f4e7d568867a2b3a51dfd7c6f1db6) by [@ken0nek](https://github.com/ken0nek))
+- Refactor: Assign string label to each case in RCTPLTag enum for startup performance logging ([60e60a9b3d](https://github.com/facebook/react-native/commit/60e60a9b3d42d342eaf5ddee4841b121f6474a6c) by [@p-sun](https://github.com/p-sun))
+- IOS Ruby Updates ([1e6add1a43](https://github.com/facebook/react-native/commit/1e6add1a43355bb88c57400a7420a656966bef97) by [@barbieri](https://github.com/barbieri))
+- Update Flipper pods to support re-enable macCatalyst ([2a5265dff7](https://github.com/facebook/react-native/commit/2a5265dff7e654f57b43335804840692313f2a56) by [@mikehardy](https://github.com/mikehardy))
+- Apple Silicon builds of glog & Flipper-Glog ([274c617f5b](https://github.com/facebook/react-native/commit/274c617f5bda263ff29115b3dcc013e47085a78d) by [@rayzr522](https://github.com/rayzr522))
+
+### Fixed
+
+- Fix error "mockModal is not a function" ([507b05f4c0](https://github.com/facebook/react-native/commit/507b05f4c02b46109f483a2b79c924a775fd7bd3) by [@AntoineDoubovetzky](https://github.com/AntoineDoubovetzky))
+- Fixes execution of animation when a toValue of AnimatedValue is used. ([8858c21124](https://github.com/facebook/react-native/commit/8858c2112421be5212c024f9e404e66437a41389))
+- Fix RN version syntax to match new nightly build structure. ([3d1d4ee457](https://github.com/facebook/react-native/commit/3d1d4ee4572600425b8eb5d0d6512bb0d2a6ea44) by [@chiaramooney](https://github.com/chiaramooney))
+- Fix typo in _updateBottomIfNecessary function on KeyboardAvoidingView component ([0cc80b4d0c](https://github.com/facebook/react-native/commit/0cc80b4d0cb78a835977dbe5100262a16882bbea) by [@gabrieldonadel](https://github.com/gabrieldonadel))
+- Fix: Removes interface only check from third party components GenerateThirdPartyFabricComponentsProvider ([3e6902244a](https://github.com/facebook/react-native/commit/3e6902244a0d189261dbbe327296db1349e37410) by [@Ubax](https://github.com/Ubax))
+- Set CxxModules' Instance before retrieving their Method vector. ([1d45b20b6c](https://github.com/facebook/react-native/commit/1d45b20b6c6ba66df0485cdb9be36463d96cf182) by [@JunielKatarn](https://github.com/JunielKatarn))
+- AnimatedValue.__detach should store getValue result with offset deducted ([fe53cae954](https://github.com/facebook/react-native/commit/fe53cae954b37528eeaa1258ac0060c4298473bb) by [@rozele](https://github.com/rozele))
+- AnimatedValue.stopAnimation callback with correct value for NativeAnimated ([8ba771c3dd](https://github.com/facebook/react-native/commit/8ba771c3ddc00b1499e95a2812b4cd5ac904c8df) by [@rozele](https://github.com/rozele))
+- ESLint no-undef rule clashing with TypeScript compiler for TS files ([ae67c5ac45](https://github.com/facebook/react-native/commit/ae67c5ac45a8044fc1db66aee8eae6e881d660e4) by [@fiznool](https://github.com/fiznool))
+- ESLint `no-shadow` rule returning false positive for TypeScript enums ([722a0ff6f8](https://github.com/facebook/react-native/commit/722a0ff6f88bed4d54579a2b8bc574e87948187f) by [@fiznool](https://github.com/fiznool))
+- Fix support for custom port ([b399c2e3d1](https://github.com/facebook/react-native/commit/b399c2e3d10fa521dbec87243d3e96f6bca7df1e) by [@enniel](https://github.com/enniel))
+- `onLayout` prop is handled correctly in `<KeyboardAvoidingView>` ([9c5e177a79](https://github.com/facebook/react-native/commit/9c5e177a79c64c77f281ce727538973e8222e975))
+- Modal accepts a testID but didn't forward it to RCTModalHostView, therefore not making it show up for e2e tests depending on viewhierarchy. ([5050e7eaa1](https://github.com/facebook/react-native/commit/5050e7eaa17cb417baf7c20eb5c4406cce6790a5) by [@GijsWeterings](https://github.com/GijsWeterings))
+- Remove unused and incorrect type declarations in WebSocketInterceptor ([91728e2266](https://github.com/facebook/react-native/commit/91728e2266375b954302ba0cd4b5daf641aefc23) by [@mischnic](https://github.com/mischnic))
+- Complete missing Flow declarations in URL ([98abf1b02f](https://github.com/facebook/react-native/commit/98abf1b02f64ad40d523335e677a2ede15b3650d) by [@mischnic](https://github.com/mischnic))
+- Pressable not passing hover props and event handlers to PressabilityConfig ([1b30dd074b](https://github.com/facebook/react-native/commit/1b30dd074b579c2ae138a1111d07ddb56761315d) by [@Saadnajmi](https://github.com/Saadnajmi))
+- Composite animations will now be ran immediately when the app is in testing mode ([b03e824c52](https://github.com/facebook/react-native/commit/b03e824c52123219a5c8fbd89473391bf0bc31c8) by [@javache](https://github.com/javache))
+- Remove duplicate class members ([c0e489b729](https://github.com/facebook/react-native/commit/c0e489b7293f15858cb706f1b8587600e429af28) by [@bradzacher](https://github.com/bradzacher))
+- Fix: Use same implementation for `performance.now()` on iOS and Android ([1721efb54f](https://github.com/facebook/react-native/commit/1721efb54ff9cc4f577b5ae27f13fcf56801a92c) by [@mrousavy](https://github.com/mrousavy))
+
+#### Android specific
+
+- Enable cliPath to have an absolute path value ([5d560ca99f](https://github.com/facebook/react-native/commit/5d560ca99ff7220de11d2d76dbe77d73990894a8) by [@Krisztiaan](https://github.com/Krisztiaan))
+- Make sure configureNdkBuild* tasks are depending on preBuild ([2fdbf6a10f](https://github.com/facebook/react-native/commit/2fdbf6a10fe67fa3209a51a1105a97c16991f561) by [@cortinico](https://github.com/cortinico))
+- Added a null check to native.value in Switch to fix https://github.com/facebook/react-native/issues/32594 ([8d50bf1133](https://github.com/facebook/react-native/commit/8d50bf113352a6ccdf74c979e1022c6c2ccf6e56) by [@jonathanmos](https://github.com/jonathanmos))
+- Fix overflowInset calculation by using transform values ([8aa87814f6](https://github.com/facebook/react-native/commit/8aa87814f62e42741ebb01994796625473c1310f) by [@ryancat](https://github.com/ryancat))
+- Add missing sources jar into published android artifacts ([384e1a0c7b](https://github.com/facebook/react-native/commit/384e1a0c7bc50d2aab5b59bcedcea5a3e98f1659) by [@Kudo](https://github.com/Kudo))
+- Fix math for detecting if children views are in parent's overflowInset area. ([45244ebce2](https://github.com/facebook/react-native/commit/45244ebce228dfbc3412670e64c11491ba8d8c47) by [@ryancat](https://github.com/ryancat))
+- Fixed empty screen after retrying a BundleDownloader failure in dev mode ([c8d823b9bd](https://github.com/facebook/react-native/commit/c8d823b9bd9619dfa1f5851af003cc24ba2e8830) by [@samkline](https://github.com/samkline))
+- Fix crash from ScrollView that occurs while reporting an error from JS ([2151d11527](https://github.com/facebook/react-native/commit/2151d1152719a230565165f1a8dcfab172689eb3) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Enable hitSlop to be set using a single number. ([589b129581](https://github.com/facebook/react-native/commit/589b129581903a737a64e14eab3f2e29620831d5) by [@javache](https://github.com/javache))
+- Fix fling and snap with recycler viewgroup where fling to the end of scrollable distance when it goes over current rendered children views. ([ead7b97944](https://github.com/facebook/react-native/commit/ead7b97944522e3066ceb2bd50c63c268c961277) by [@ryancat](https://github.com/ryancat))
+- Fixed edge case for quick small scrolls causing unexpected scrolling behaviors. ([f70018b375](https://github.com/facebook/react-native/commit/f70018b37532622f08f20b2c51cdbfca55d730ea) by [@ryancat](https://github.com/ryancat))
+- Fix crash on ReactEditText with AppCompat 1.4.0 ([e21f8ec349](https://github.com/facebook/react-native/commit/e21f8ec34984551f87a306672160cc88e67e4793) by [@cortinico](https://github.com/cortinico))
+- Do not .lowerCase the library name when codegenerating TurboModule Specs ([28aeb7b865](https://github.com/facebook/react-native/commit/28aeb7b8659b38ee3a27fae213c4d0800f4d7e31) by [@cortinico](https://github.com/cortinico))
+- Enable hitSlop to be set using a single number. ([a96bdb7154](https://github.com/facebook/react-native/commit/a96bdb7154b0d8c7f43977d8a583e8d2cbdcb795) by [@javache](https://github.com/javache))
+- Updated TextInput prop types to accomodate for new autoComplete values ([9eb0881c8f](https://github.com/facebook/react-native/commit/9eb0881c8fecd0e974b1cb9f479bad3075854340) by [@TheWirv](https://github.com/TheWirv))
+- Don't reconstruct app components https://github.com/facebook/react-native/issues/25040 ([fc962c9b6c](https://github.com/facebook/react-native/commit/fc962c9b6c4bf9f88decbe014ab9a9d5c1cf51bc) by [@Somena1](https://github.com/Somena1))
+- Do NOT skip the first child view in the scroll view group when measuring the lower and upper bounds for snapping. ([61e1b6f86c](https://github.com/facebook/react-native/commit/61e1b6f86cf98d8a74eeb9353143fe0c624fe6e6) by [@ryancat](https://github.com/ryancat))
+- Fix crash when a Switch is initialised with both backgroundColor and thumbColor. ([456cf3db14](https://github.com/facebook/react-native/commit/456cf3db14c443c483d63aa97c88b45ffd25799b) by [@smarki](https://github.com/smarki))
+- Fix devDisabledIn not working with multiple productFlavors ([055ea9c7b7](https://github.com/facebook/react-native/commit/055ea9c7b7dea030ef16da72d1f6ecb5d95ac468) by [@grit96](https://github.com/grit96))
+- Revert `ReactScrollView` to use `Context` instead of `ReactContext` in the constructor to be less restrictive. ([7b77cc637e](https://github.com/facebook/react-native/commit/7b77cc637e1faf4a2b134853f8415f277d0decdc) by [@ryancat](https://github.com/ryancat))
+- Fix onPress event for nested Text in RN Android ([e494e4beb6](https://github.com/facebook/react-native/commit/e494e4beb6a124008fd116178cbc38335bd87809) by [@mdvacca](https://github.com/mdvacca))
+- Fix enableVmCleanup not working for apps with product flavors ([a2b5e4cd82](https://github.com/facebook/react-native/commit/a2b5e4cd825a358419cef1e3823b72215b689686) by [@cortinico](https://github.com/cortinico))
+- Prevent NPE on ThemedReactContext ([f1b5fe1d3e](https://github.com/facebook/react-native/commit/f1b5fe1d3ea49294d8c89accfa27d76a1a97ccea) by [@sshic](https://github.com/sshic))
+- fix: jvm 11 error message from ReactPlugin.kt and react.gradle ([4e947ecb2d](https://github.com/facebook/react-native/commit/4e947ecb2dabfa0226af7f859c828847b4d891c0) by [@nomi9995](https://github.com/nomi9995))
+
+#### iOS specific
+
+- ScrollView: Respect `contentInset` when animating new items with `autoscrollToTopThreshold`, make `automaticallyAdjustKeyboardInsets` work with `autoscrollToTopThreshold` (includes vertical, vertical-inverted, horizontal and horizontal-inverted ScrollViews) ([49a1460a37](https://github.com/facebook/react-native/commit/49a1460a379e3a71358fb38888477ce6ea17e81a) by [@mrousavy](https://github.com/mrousavy))
+- Prevent RCTConvert error for allowed null blob types ([e1b698c5f2](https://github.com/facebook/react-native/commit/e1b698c5f2b1d689fb3940f8c6a3e298d381ea3a) by [@habovh](https://github.com/habovh))
+- Migrate ScreenshotManager from NativeModule to TurboModule ([b13e41d98e](https://github.com/facebook/react-native/commit/b13e41d98e818279d1941f3425707d3c0ce407fc) by [@p-sun](https://github.com/p-sun))
+- Fix usage of cocoapods with --project-directory flag and new arch ([9e7d91f2fc](https://github.com/facebook/react-native/commit/9e7d91f2fc4d576b8fba81304a24e50134da93d6) by [@danilobuerger](https://github.com/danilobuerger))
+- Post RCTContentDidAppearNotification with new arch ([75105e692c](https://github.com/facebook/react-native/commit/75105e692c2be9bd192089a6a6ffde7572ee1ce1) by [@danilobuerger](https://github.com/danilobuerger))
+- Remove absolute paths from pods project ([42b01a32a1](https://github.com/facebook/react-native/commit/42b01a32a137f18ae9fd2f00914f2edb0e107421) by [@danilobuerger](https://github.com/danilobuerger))
+- Respect RCTSetDefaultFontHandler chosen font ([89efa1a0c1](https://github.com/facebook/react-native/commit/89efa1a0c1b633bf9edee66583800ad3fc54ce63) by [@danilobuerger](https://github.com/danilobuerger))
+- Fixed duplicated UUIDs problem during pod install phase. ([f595a4e681](https://github.com/facebook/react-native/commit/f595a4e681e75aaf737b6582f69855d76a1f33dd))
+- Fix `Time.h` patch not being applied when running `pod install --project-directory=ios` ([60cef850bd](https://github.com/facebook/react-native/commit/60cef850bd3fd12c32ee1196bd19a559592d1465) by [@tido64](https://github.com/tido64))
+- Fix WebSocket control frames having payloads longer than 125 bytes ([86db62b7a8](https://github.com/facebook/react-native/commit/86db62b7a8b28ac82dd0a0627a8b6c351875f682) by [@asmeikal](https://github.com/asmeikal))
+- Stop RedBox from appearing for LogBox handled errors ([9d2df5b8ae](https://github.com/facebook/react-native/commit/9d2df5b8ae95b3cfeae26f64bd1d50bd2b0bbae9) by [@liamjones](https://github.com/liamjones))
+- Enable hitSlop to be set using a single number. ([3addafa525](https://github.com/facebook/react-native/commit/3addafa5257ade685216900bebbad8c35e24e124) by [@javache](https://github.com/javache))
+- Fix `__apply_Xcode_12_5_M1_post_install_workaround` failing when one of the Pods has no IPHONEOS_DEPLOYMENT_TARGET set ([9cd4092336](https://github.com/facebook/react-native/commit/9cd40923362ff717a722f8f36c8250a29a5142b7) by [@Yonom](https://github.com/Yonom))
+- This is a quick speculative fix since we know `CFRunLoopPerformBlock` does not push/pop an autorelease pool. ([3fff164dfa](https://github.com/facebook/react-native/commit/3fff164dfa1c97f69b1701e974effc92a94152d6) by [@christophpurrer](https://github.com/christophpurrer))
+- Fixed RCTImageLoaderTests ([1542f83527](https://github.com/facebook/react-native/commit/1542f835273c08776b960929b5aa7cefbd225971) by [@philIip](https://github.com/philIip))
+- Fix Rosetta2 CocoaPods warning on Apple Silicon ([e918362be3](https://github.com/facebook/react-native/commit/e918362be3cb03ae9dee3b8d50a240c599f6723f) by [@oblador](https://github.com/oblador))
+- Fix `pod install --project-directory=ios` failing due to wrong path to `React-Codegen` ([ebb26cf2e4](https://github.com/facebook/react-native/commit/ebb26cf2e420616c8bf01a5148ca4f8419b238d3) by [@tido64](https://github.com/tido64))
+
+### Deprecated
+
+#### Android specific
+
+- Gradle: Deprecate `reactRoot` in favor of `root` and `reactNativeDir` ([8bc324fd34](https://github.com/facebook/react-native/commit/8bc324fd34337ab159e2e21e213a6c5b06c548da) by [@cortinico](https://github.com/cortinico))
+
+
+### Removed
+
+- DeprecatedPropTypes (deep-link) modules removed from React Native. ([23717c6381](https://github.com/facebook/react-native/commit/23717c6381a41b1c5f189376bfa5bc73c7a4da87) by [@yungsters](https://github.com/yungsters))
+- `accessibilityStates` no longer passed through to RCTView. ([1121ed94ab](https://github.com/facebook/react-native/commit/1121ed94ab470be27207b0c8dbae5d19860c08da) by [@luism3861](https://github.com/luism3861))
+
+#### iOS specific
+
+- Remove RCTUIManagerObserver from RCTNativeAnimatedTurboModule ([e9ed115bab](https://github.com/facebook/react-native/commit/e9ed115babbc82968380dae22fa928d4ce3cd6da) by [@p-sun](https://github.com/p-sun))
+
+
+## v0.67.4
+
+### Fixed
+
+#### Android specific
+
+- Added a null check to native.value in Switch to fix https://github.com/facebook/react-native/issues/32594 ([8d50bf1133](https://github.com/facebook/react-native/commit/8d50bf113352a6ccdf74c979e1022c6c2ccf6e56) by [@jonathanmos](https://github.com/jonathanmos))
+
+## v0.67.3
+
+### Fixed
+
+#### Android specific
+
+- Text with adjustsFontSizeToFit changes the text layout infinitely ([c1db41f060](https://github.com/facebook/react-native/commit/c1db41f060908e6ab001aaace7c20c610056f59a))
+
+#### iOS specific
+
+- Fix a broken input for the Korean alphabet in TextInput ([1a83dc36ce](https://github.com/facebook/react-native/commit/1a83dc36ce0af33ac7a3c311354fce4bfa5ba1a3) by [@bernard-kms](https://github.com/bernard-kms))
+
+## v0.67.2
+
+### Fixed
+
+- Fix error "mockModal is not a function" ([507b05f4c0](https://github.com/facebook/react-native/commit/507b05f4c02b46109f483a2b79c924a775fd7bd3) by [@AntoineDoubovetzky](https://github.com/AntoineDoubovetzky))
+
+#### Android specific
+
+- Fix potential crash if ReactRootView does not have insets attached. ([6239e2f5ce](https://github.com/facebook/react-native/commit/6239e2f5ce82f7c2e683eb4699b9ce3ff1b58ac5) by [@enahum](https://github.com/enahum))
+- Upgrading OkHttp from 4.9.1 to 4.9.2 to fix CVE-2021-0341. ([e896d21](https://github.com/facebook/react-native/commit/e896d21ced3c0c917c2fc0044d2b93b44df9a081) by [@owjsub](https://github.com/owjsub))
+
+#### iOS specific
+
+- Fix `Time.h` patch not being applied when running `pod install --project-directory=ios` ([60cef850bd](https://github.com/facebook/react-native/commit/60cef850bd3fd12c32ee1196bd19a559592d1465) by [@tido64](https://github.com/tido64))
+- Find-node.sh now respects .nvmrc ([35bcf934b1](https://github.com/facebook/react-native/commit/35bcf934b186e581d100d43e563044300759557f) by [@igrayson](https://github.com/igrayson))
+
+## v0.67.1
+
+### Fixed
+
+#### Android specific
+
+- Do not remove libjscexecutor.so from release builds ([574a773f8f](https://github.com/facebook/react-native/commit/574a773f8f55fe7808fbb672066be8174c64d76d) by [@cortinico](https://github.com/cortinico))
+
+#### iOS specific
+
+- Remove alert's window when call to `hide`. ([a46a99e120](https://github.com/facebook/react-native/commit/a46a99e12039c2b92651af1996489d660e237f1b) by [@asafkorem](https://github.com/asafkorem))
+
+## v0.67.0
+
+### Added
+
+#### Android specific
+- Add `ACCESS_MEDIA_LOCATION` permission to PermisionsAndroid library. ([79db483568](https://github.com/facebook/react-native/commit/79db4835681f5d0149620ec8e0990411cb882241) by [@Skrilltrax](https://github.com/Skrilltrax))
+- Implement `SnapToAlignment` in `ReactScrollView` ([e774c037bc](https://github.com/facebook/react-native/commit/e774c037bce40a4b48e78d2d0a1085a1e4f5a328)), `ReactScrollViewManager` ([c6e5640e87](https://github.com/facebook/react-native/commit/c6e5640e87e7cb5b514ded2c8d4cbb039bd02c5f)), `ReactHorizontalScrollView` ([b12256394e](https://github.com/facebook/react-native/commit/b12256394e34c375942ca508ef79a8c816317976)), `ReactHorizontalScrollViewManager` ([deec1db9fd](https://github.com/facebook/react-native/commit/deec1db9fdf2848941326ba5bebc11f3592a301e)) and update `ScrollView.js` ([a54cfb9e57](https://github.com/facebook/react-native/commit/a54cfb9e5794f196d3834e19762f3aacf47a177d)) and reach parity with iOS ([04184ef851](https://github.com/facebook/react-native/commit/04184ef851c71141009c523ba59838ae6af19ba5)) by [@mdvacca](https://github.com/mdvacca)
+- Show Redbox for C++ errors. ([d6c879edba](https://github.com/facebook/react-native/commit/d6c879edbad068d0f461381875b7fae6db99d18d) by [@sota000](https://github.com/sota000))
+- Added an experimental touch dispatch path ([a2feaeb5f1](https://github.com/facebook/react-native/commit/a2feaeb5f1121a860a9416b5d4e0e96debd45b09) by [@ShikaSD](https://github.com/ShikaSD))
+
+#### iOS specific
+- Added `cancelButtonTintColor` prop for `ActionSheetIOS` to change only the text color of the cancel button ([01856633a1](https://github.com/facebook/react-native/commit/01856633a1d42ed3b26e7cc93a007d7948e1f76e) by [@nomi9995](https://github.com/nomi9995))
+- Added [`LSApplicationQueriesSchemes`](https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html#//apple_ref/doc/uid/TP40009250-SW14) in info.plist with entries tel, telprompt, http, fb, geo ([b26f277262](https://github.com/facebook/react-native/commit/b26f2772624c863c91fa1ff627b481c92d7562fb) by [@utkarsh-dixit](https://github.com/utkarsh-dixit))
+- Add `UIAccessibilityTraitUpdatesFrequently` to progressBar role ([1a42bd6e97](https://github.com/facebook/react-native/commit/1a42bd6e97ae44a3b38ca552865bac63a6f35da5) by [@jimmy623](https://github.com/jimmy623))
+- Add `asdf-vm` support in `find-node.sh` ([3e7c310b1d](https://github.com/facebook/react-native/commit/3e7c310b1dcf5643920535eea70afa451888792a) by [@pastleo](https://github.com/pastleo))
+
+
+### Changed
+- `ImageBackground` now respects `imageStyle` width and height ([dbd5c3d8e5](https://github.com/facebook/react-native/commit/dbd5c3d8e5e35685be89156194a96cead553a330) by [@Naturalclar](https://github.com/Naturalclar))
+- Rename deprecated `Keyboard.removeEventListener` to `Keyboard.removeListener`. ([8880c09076](https://github.com/facebook/react-native/commit/8880c09076e4727768ace26a74766cbe6f64021c) by [@yungsters](https://github.com/yungsters))
+- Update `Modal`'s mock to not render its children when it is not visible ([ec614c16b3](https://github.com/facebook/react-native/commit/ec614c16b331bf3f793fda5780fa273d181a8492) by [@AntoineDoubovetzky](https://github.com/AntoineDoubovetzky))
+- Upgraded `react-devtools-core` dependency to 4.19.1 ([356236471a](https://github.com/facebook/react-native/commit/356236471abc6b5b8c139223e15388fd1eecd2d1) by [@jstejada](https://github.com/jstejada))
+- React-native/normalize-color now supports Node.js ([65e58f26e1](https://github.com/facebook/react-native/commit/65e58f26e1fbd06b1ae32e2ab3a2616c8eef08e0) by [@yungsters](https://github.com/yungsters))
+- Updated to Contributor Covenant v2.1 ([19f8d2f7da](https://github.com/facebook/react-native/commit/19f8d2f7da13f4524f31acf7aa10cc0aa91b5da4))
+
+
+#### Android specific
+- Hermes initialization will no longer need an explicit configuration. ([a40f973f58](https://github.com/facebook/react-native/commit/a40f973f58609ca717fac63bc501d5cf93b748ad) by [@Ashoat](https://github.com/Ashoat))
+- Setting `overflow: scroll` in View component style will clip the children in the View container ([93beb83abe](https://github.com/facebook/react-native/commit/93beb83abef42b92db43ee3bb8b156f486a6c00f) by [@ryancat](https://github.com/ryancat))
+- Native views backing `Animated.View` (w/ JavaScript-driven animations) will no longer be flattened; this should be a transparent change. ([4fdbc44ab5](https://github.com/facebook/react-native/commit/4fdbc44ab5945399338e4ed94ea5611098bd2142) by [@yungsters](https://github.com/yungsters))
+- Use new Locale API on Android 11 (API 30)+ ([b7c023a8c1](https://github.com/facebook/react-native/commit/b7c023a8c1122500c6ceb7de2547569b3b9251ba))
+- Changed `react.gradle` `detectCliPath` function logic for `cliPath` case ([ce51b62494](https://github.com/facebook/react-native/commit/ce51b6249449361ee50b8c99a427c28af7ab3531) by [@vitalyiegorov](https://github.com/vitalyiegorov))
+- Remove `"high"` and `"balanced"` as values for `android_hyphenationFrequency` on `Text` ([a0d30b848a](https://github.com/facebook/react-native/commit/a0d30b848a07480d0fccec608a62a505c71f8cac))
+- Bump Gradle version to 7.2, Bump Kotlin version to 1.5.31 ([9ae3367431](https://github.com/facebook/react-native/commit/9ae3367431428748f5486c782199beb4f9c6b477) by [@svbutko](https://github.com/svbutko))
+- Move mavenCentral repo below local paths ([046b02628d](https://github.com/facebook/react-native/commit/046b02628d32eadd6d44160ab79932f6c26b188d) by [@friederbluemle](https://github.com/friederbluemle))
+
+#### iOS specific
+- Optimized font handling for iOS ([4ac42d88ef](https://github.com/facebook/react-native/commit/4ac42d88ef60ae3fed7319851d47b93e98ac9afa) by [@Adlai-Holler](https://github.com/Adlai-Holler))
+- Remove iOS 11 version check as minimum deployment is iOS 11 ([398595e074](https://github.com/facebook/react-native/commit/398595e07483fa8f45579de4ca1aee9585e20620) by [@ken0nek](https://github.com/ken0nek))
+- Don't hang app for 60s if packager can't be reached, changed to 10s ([c0e04460f5](https://github.com/facebook/react-native/commit/c0e04460f546dfef2623bff367eb8db8fd75fa34) by [@radex](https://github.com/radex))
+
+### Removed
+
+- Removed unnecessary global variable `GLOBAL`. ([a101fc768c](https://github.com/facebook/react-native/commit/a101fc768cedc7ac9754006e5b7292bb7084ab54) by [@rubennorte](https://github.com/rubennorte))
+- Removed unused files: `StaticContainer.react.js`, `ensurePositiveDelayProps.js`, `InteractionMixin.js`, `queryLayoutByID.js` ([64aa1e5ffe](https://github.com/facebook/react-native/commit/64aa1e5ffe5d577c04cabb3692246b956f65597b) by [@ecreeth](https://github.com/ecreeth))
+
+#### Android specific
+
+- Remove `DatePickerAndroid` from react-native. ([7a770526c6](https://github.com/facebook/react-native/commit/7a770526c626e6659a12939f8c61057a688aa623) by [@andresantonioriveros](https://github.com/andresantonioriveros))
+
+#### iOS specific
+
+### Fixed
+
+- Update metro config language to `blockList` ([7923804c28](https://github.com/facebook/react-native/commit/7923804c28aac731396f0db112cb6c3a9d30c08f) by [@rh389](https://github.com/rh389))
+- Ignores global npm prefix ([6334ac35ac](https://github.com/facebook/react-native/commit/6334ac35ac3cbc2c84b2d46d46ec118bf9bf714d) by [@redreceipt](https://github.com/redreceipt))
+- Support `Animated.ValueXY` when validating `Animated.event`. ([27dd2ecb70](https://github.com/facebook/react-native/commit/27dd2ecb70f1d08787c93a2e18250ffaff328e5f) by [@javache](https://github.com/javache))
+- Add a function `getIgnorePatterns` in `LogBoxData.js` for tests or other usecases. ([a950634424](https://github.com/facebook/react-native/commit/a950634424cddf31c0adb6c9799adf1cc5f83bf0))
+
+#### Android specific
+
+- TextInput Drawable to avoid Null Pointer Exception RuntimeError https://github.com/facebook/react-native/issues/17530 ([254493e1fb](https://github.com/facebook/react-native/commit/254493e1fb0c3a1e279e2c957e83edac6252d041) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Nested Text Android `onPress` does not work with last character ([132d1d00f8](https://github.com/facebook/react-native/commit/132d1d00f885fe5a45d712fd7698db285c22bc4b) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix non selectable Text in FlatList ([c360b1d92b](https://github.com/facebook/react-native/commit/c360b1d92b69e1d298b390ec88c4d29c1023945a) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Set `textBreakStrategy` default to be `'highQuality'` ([3b2d541989](https://github.com/facebook/react-native/commit/3b2d5419899363d84aea4f5cc3a4c75253dd6406))
+- Fix error handling when loading JSC or Hermes ([d839b24b06](https://github.com/facebook/react-native/commit/d839b24b06d31b4ce91fb459742831b942972f56) by [@iqqmuT](https://github.com/iqqmuT))
+- Fix encoding for gradlew.bat files ([ab2bdee735](https://github.com/facebook/react-native/commit/ab2bdee735cd0d53d3dbfbac5cd31f96eefb7e61) by [@yungsters](https://github.com/yungsters))
+- Fix `hermesFlags` not working with multiple variants ([91adb761cf](https://github.com/facebook/react-native/commit/91adb761cf1583598d4d63ce879fd7e0f4ae793c) by [@grit96](https://github.com/grit96))
+- `ScrollTo` API in ScrollView will check the actual scroll position before setting the scroll state ([1a9e2d5d55](https://github.com/facebook/react-native/commit/1a9e2d5d5589ce5cee92868ea5bccceb6e161eff) by [@ryancat](https://github.com/ryancat))
+- Compute Android Notch in `keyboardDidShow` height calculation API 28+ ([8bef3b1f11](https://github.com/facebook/react-native/commit/8bef3b1f1136ab5c2f2309a3101a7d9626ced1f5) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix `currentActivity` being null when launching Redbox ([f4fdf4b55e](https://github.com/facebook/react-native/commit/f4fdf4b55e4489c21f4552b4ac01ef253c038b2d))
+- When sending OS intents, always set `"FLAG_ACTIVITY_NEW_TASK"` flag (required by OS). ([04fe3ed80d](https://github.com/facebook/react-native/commit/04fe3ed80d9c201a483a2b477aeebd3d4169fd6d) by [@Krizzu](https://github.com/Krizzu))
+- Fix missing WebView provider crash in ForwardingCookieHandler ([d40cb0e1b0](https://github.com/facebook/react-native/commit/d40cb0e1b0fb233a27b9d476167814d2853acf2a) by [@RodolfoGS](https://github.com/RodolfoGS))
+- Fix `keyboardDismissMode="on-drag"` on Android ([7edf9274cf](https://github.com/facebook/react-native/commit/7edf9274cf6d3398075c19cd1cb020a5d6a346a2) by [@janicduplessis](https://github.com/janicduplessis))
+- Fixed `alignItems: baseline` for <Text> elements on Android ([1acf334614](https://github.com/facebook/react-native/commit/1acf33461451834097463f43e70d90bae0f67198))
+- `OnKeyPress` event not fired with numeric keys ([ee3e71f536](https://github.com/facebook/react-native/commit/ee3e71f536127295ba4ea377e618499409a2e9ba) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Exclude unused .so files for reduce android .apk and .aab ([6f126740fa](https://github.com/facebook/react-native/commit/6f126740fa560d7a831979b9f3747baacfb28dba) by [@enniel](https://github.com/enniel))
+
+#### iOS specific
+
+- Fixed an edge case when scroll to item/index is called without animation, the offset position is not updated. This caused the measurement of the position to be wrong. ([55392f65a6](https://github.com/facebook/react-native/commit/55392f65a6addbdd8214b61d4ae286f26d63a94f) by [@ryancat](https://github.com/ryancat))
+- Fixed the issue when moving cursor in multi-line TextInput. ([22801870f0](https://github.com/facebook/react-native/commit/22801870f0613c2544ade1ebc5363e6e2f015c79) by [@xiankuncheng](https://github.com/xiankuncheng))
+- Fix NSInvalidArgumentException for invalid font family names. ([5683932862](https://github.com/facebook/react-native/commit/5683932862ab870e735342342c68e03fb5ca9e09) by [@yungsters](https://github.com/yungsters))
+- Fix Image `defaultSource` not showing on iOS ([900210cacc](https://github.com/facebook/react-native/commit/900210cacc4abca0079e3903781bc223c80c8ac7) by [@cristianoccazinsp](https://github.com/cristianoccazinsp))
+- Warn if Rosetta2 is being used (x86_64 on arm64) ([51bf557948](https://github.com/facebook/react-native/commit/51bf55794899284e1c465d346a3f6ebd8a485da2) by [@barbieri](https://github.com/barbieri))
+- Source map path for schemes containing whitespaces ([f3fe7a0fb5](https://github.com/facebook/react-native/commit/f3fe7a0fb5fc0325fbe062c6df4cbf8b58779189) by [@andersonvom](https://github.com/andersonvom))
+- Fix build error after running `pod install` with `--project-directory=ios` ([ef5ff3e055](https://github.com/facebook/react-native/commit/ef5ff3e055482771cbe866d4961ee2d0a9e00e45) by [@sonicdoe](https://github.com/sonicdoe))
+- Fixed inability to build apps when gflags is installed ([ab8dbdf663](https://github.com/facebook/react-native/commit/ab8dbdf66363f3d65f0dfbcc4ec7c71b1cd69b2a) by [@KDederichs](https://github.com/KDederichs))
+
+### Security
+
+- Avoiding logging root view params outside of dev / debug mode builds ([e612d3a116](https://github.com/facebook/react-native/commit/e612d3a116f39ab354169643bab0d4bb9cfc1a85) by [@sterlingwes](https://github.com/sterlingwes))
+
+## v0.66.4
+
+### Fixed
+
+#### iOS specific
+
+- Revert "Fix Deadlock in RCTi18nUtil (iOS)" ([70ddf46](https://github.com/facebook/react-native/commit/70ddf46c8afcd720e188b6d82568eac6ac8125e6) by [@Saadnajmi](https://github.com/Saadnajmi))
+- `apply_Xcode_12_5_M1_post_install_workaround` causing pods targetting iOS 12 and above to fail ([a4a3e67554](https://github.com/facebook/react-native/commit/a4a3e675542827bb281a7ceccc7b8f5533eae29f) by [@Yonom](https://github.com/Yonom))
+
+## v0.66.3
+
+### Changed
+
+- Rename deprecated `Keyboard.removeEventListener` to `Keyboard.removeListener`. ([8880c09076](https://github.com/facebook/react-native/commit/8880c09076e4727768ace26a74766cbe6f64021c) by [@yungsters](https://github.com/yungsters))
+
+### Fixed
+
+- Revert changes in Jest preprocessor to fix tests in external projects ([142090a5f3fa7](https://github.com/facebook/react-native/commit/142090a5f3fa7c3ab2ed4c536792e3f26582bd3b) by [@rubennorte](https://github.com/rubennorte))
+
+## v0.66.2
+
+### Fixed
+
+- Add a function `getIgnorePatterns` in `LogBoxData.js` for tests or other usecases. ([a950634424](https://github.com/facebook/react-native/commit/a950634424cddf31c0adb6c9799adf1cc5f83bf0))
+- Reintroduce generated codegen files ([7382f556d3](https://github.com/facebook/react-native/commit/7382f556d327d51bd09456efda83edec7e05ecd2) by [@kelset](https://github.com/kelset))
+
+#### iOS specific
+
+- Hide the logbox window explicitly. New behavior in iOS SDK appears to retain UIWindow while visible. ([72ea0e111f](https://github.com/facebook/react-native/commit/72ea0e111fccd99456abf3f974439432145585e3) by [@paddlefish](https://github.com/paddlefish))
+
+## v0.66.1
+
+### Fixed
+
+- For Android, general fixes to Appearance API and also fixes AppCompatDelegate.setDefaultNightMode(). For iOS, now works correctly when setting window.overrideUserInterfaceStyle ([25a2c608f7](https://github.com/facebook/react-native/commit/25a2c608f790f42cbc4bb0a90fc06cc7bbbc9b95) by [@mrbrentkelly](https://github.com/mrbrentkelly))
+
+#### Android specific
+
+- Fix Android border positioning regression ([d1a33cd139](https://github.com/facebook/react-native/commit/d1a33cd139fab4565b1fc691f5751c4af99d5849) by [@oblador](https://github.com/oblador))
+
+#### iOS specific
+
+- Fix for unable to find `find-node.sh` in `react-native-xcode.sh` script ([cc59a7cbde](https://github.com/facebook/react-native/commit/cc59a7cbde1c0fc6d6ef059321d23bf287f08218) by [@garethknowles](https://github.com/garethknowles))
+
+## v0.66.0
+
+### Highlights
+
+- Hermes 0.9.0
+  - This Hermes release is primarily about closing gap between Hermes cut and this React Native release. Among ~400 commits, contains memory and size wins, bugfixes and other progress behind the scenes. See [issue for more details](https://github.com/facebook/hermes/issues/586).
+- Allow taps on views outside the bounds of a parent with `overflow: visible` ([e35a963bfb](https://github.com/facebook/react-native/commit/e35a963bfb93bbbdd92f4dd74d14e2ad6df5e14a) by [@hsource](https://github.com/hsource))
+- Fixes for building on Apple Silicon and Xcode 13 ([ac4ddec542](https://github.com/facebook/react-native/commit/ac4ddec542febda744de218dae3a3d34edc7da84) thanks to [@mikehardy](https://github.com/mikehardy))
+- New bluetooth permissions for Android ([2bcc6fac38](https://github.com/facebook/react-native/commit/2bcc6fac3844f0752bc7067517c92a643679575e), [eeb8e58](https://github.com/facebook/react-native/commit/eeb8e5829e183f6b5cd5fd327cf6da03a7db0541) by [@iBotPeaches](https://github.com/iBotPeaches))
+
+### Breaking
+
+- Remove Picker and PickerIOS components
+  [cddb97ad18](https://github.com/facebook/react-native/commit/cddb97ad18cfdb663dcf015af3c9426d5414e396), [77366cd869](https://github.com/facebook/react-native/commit/77366cd8696cb8ada3f84d7fb4d36a27f7007b06), [ad0ccac0d6](https://github.com/facebook/react-native/commit/ad0ccac0d6471fa5428bf137c3aa0646883e8446)
+- Remove StatusBarIOS component ([7ce0f40f5c](https://github.com/facebook/react-native/commit/7ce0f40f5cd8c0928ce720d6d121bcc5963958a2) by [@ecreeth](https://github.com/ecreeth))
+
+#### Android specific
+
+- Updated `autoCompleteType` prop of `TextInput` to `autoComplete` ([27fec9569e](https://github.com/facebook/react-native/commit/27fec9569e08a04e0dbdbd5de063a599ad0416fa) by [@jeswinsimon](https://github.com/jeswinsimon))
+
+### Added
+
+- Add `global.queueMicrotask` ([be189cd819](https://github.com/facebook/react-native/commit/be189cd81905a735f08a8519c62a707658c7fb27) by [@Huxpro](https://github.com/Huxpro))
+- Added data field to `markerPoint` to allow callers to add additional arbitrary string data to logged points ([aa98978302](https://github.com/facebook/react-native/commit/aa9897830293955b7cc77fd818a50e8d736e715d))
+- Adds accessibility actions to Button ([44717152ca](https://github.com/facebook/react-native/commit/44717152cadb18c7aff74e9465fdb70efdb1bf81) by [@dennisurtubia](https://github.com/dennisurtubia))
+- Add accessibilityState prop to Slider component ([35dd86180b](https://github.com/facebook/react-native/commit/35dd86180ba730425b97592ef6e5c4d449caee06) by [@sladyn98](https://github.com/sladyn98))
+- Add support for "togglebutton" `accessibilityRole` ([da899c0cc4](https://github.com/facebook/react-native/commit/da899c0cc4372830e5ca053a096b74fff2a19cb8) by [@kacieb](https://github.com/kacieb))
+
+#### Android specific
+
+- Add INFO, and MENU key event support ([bb33c1050b](https://github.com/facebook/react-native/commit/bb33c1050ba6098a68d70055e33186d9438c4374) by [@havlasme](https://github.com/havlasme))
+- Added all autofill types to TextEdit ([d9e0ea77f0](https://github.com/facebook/react-native/commit/d9e0ea77f0111fd8400c65d68e45d54e2f84287b) by [@safaiyeh](https://github.com/safaiyeh))
+- Add support to URI keyboard type in Android ([1465c8f387](https://github.com/facebook/react-native/commit/1465c8f3874cdee8c325ab4a4916fda0b3e43bdb))
+- Add `MEDIA_STOP`, `MEDIA_NEXT`, and `MEDIA_PREVIOUS` event support to Android TV ([3e2bb331fc](https://github.com/facebook/react-native/commit/3e2bb331fc0974bc870b2e7bd3171e585183ed1b) by [@havlasme](https://github.com/havlasme))
+- Allow configuring ndk build architectures ([d6ed1ff58b](https://github.com/facebook/react-native/commit/d6ed1ff58b2ca4d1c8b45416e56fa1da75633c07) by [@janicduplessis](https://github.com/janicduplessis))
+- Added support for accessibility role of "list" for flatlist and sectioned list ([25a16123a6](https://github.com/facebook/react-native/commit/25a16123a610ae377ced23ef81ed4c03ad7d06d9) by [@anaskhraza](https://github.com/anaskhraza))
+- Support for foreground ripple in Pressable ([0823f299e5](https://github.com/facebook/react-native/commit/0823f299e560efda5c0f344fcec86cf68801f4ab) by [@intergalacticspacehighway](https://github.com/intergalacticspacehighway))
+- Support for ScrollAway native nav bars added to `ReactScrollView` ([0ef5beee85](https://github.com/facebook/react-native/commit/0ef5beee855afa592cc647383ba6a3ceae9cc40a) by [@JoshuaGross](https://github.com/JoshuaGross))
+
+#### iOS specific
+
+- Added new prop "selection" to `TextInputProps` ([8434177722](https://github.com/facebook/react-native/commit/8434177722f70a9325f9a6adf46b5315b1f4ffa4))
+- Support for onRequestClose for iOS Modal component. ([c29ec46b0e](https://github.com/facebook/react-native/commit/c29ec46b0eee99670ce7762898fe3a4810db968b) by [@intergalacticspacehighway](https://github.com/intergalacticspacehighway))
+- Allow `PlatformColor` to return user-defined named asset color ([36c0a7dec1](https://github.com/facebook/react-native/commit/36c0a7dec121bd3a4b92d02c03a24771d3c4cf84) by [@oblador](https://github.com/oblador))
+- Add support for the `UIAccessibilityTraitsTabBar` ([11f8d9c7cd](https://github.com/facebook/react-native/commit/11f8d9c7cd4bae0b1a5e880ea9b2da7447ad76c2) by [@jimmy623](https://github.com/jimmy623))
+- Added "altitudeAngle" property to touch events from Apple Pencil/Stylus devices. ([f1b1ba8963](https://github.com/facebook/react-native/commit/f1b1ba8963ff152d995c3cd132bc0755413bc44f) by [@swittk](https://github.com/swittk))
+- Introduce `RCTInitializing` to allow NativeModules to initialize themselves ([9b45df1fce](https://github.com/facebook/react-native/commit/9b45df1fced066f40034b0a58be6f4caafd5f785) by [@RSNara](https://github.com/RSNara))
+- Introduce `RCTCallableJSModules` API for NativeModules ([ece373d244](https://github.com/facebook/react-native/commit/ece373d24421d96e62dafa9a064b38acd6b71e46) by [@RSNara](https://github.com/RSNara))
+- Attach `RCTBundleManager` to NativeModules ([329f58ee46](https://github.com/facebook/react-native/commit/329f58ee461e7afade36d8c249d3f4930c485312) by [@RSNara](https://github.com/RSNara))
+- Introduce RCTBundleManager for bundleURL access ([4a1bafe591](https://github.com/facebook/react-native/commit/4a1bafe591917482d78be998d45552e2568e3e23) by [@RSNara](https://github.com/RSNara))
+
+### Changed
+
+- Initialized LogBox earlier and centralized access in LogBox module ([8abe737068](https://github.com/facebook/react-native/commit/8abe737068a54a874571c8b5560b2118b1df31ad) by [@rubennorte](https://github.com/rubennorte))
+- ExceptionsManager will no longer report exceptions with `type === 'warn'`. ([883e0d5752](https://github.com/facebook/react-native/commit/883e0d5752b952c829c8d45504d3532f52bb272f) by [@yungsters](https://github.com/yungsters))
+- Disable TouchableOpacity when `accessibilityState.disabled` is set ([ea609defe8](https://github.com/facebook/react-native/commit/ea609defe8462a6beeac4da3aa7a43397ee9a77f) by [@chakrihacker](https://github.com/chakrihacker))
+- Upgrade Babel from 7.12.3 to 7.14.1 ([58a0f9b4e2](https://github.com/facebook/react-native/commit/58a0f9b4e202a921ab0820c79d6a3dd54204da46) by [@MichaReiser](https://github.com/MichaReiser))
+- Upgrade `react-devtools-core` from ~4.6.0 to ^4.13.0 ([9e020ef476](https://github.com/facebook/react-native/commit/9e020ef476e24bb5703fc421225f1a94ae14512b) by [@bvaughn](https://github.com/bvaughn))
+- Update Flipper to 0.99.0 ([41f45a77ad](https://github.com/facebook/react-native/commit/41f45a77ad09b46de328fb2a72775a052dac1e93) by [@swrobel](https://github.com/swrobel))
+- Bump CLI to ^6.0.0 ([c677e196a9](https://github.com/facebook/react-native/commit/c677e196a9c4d6cfdf84d97e4746922bb4ed4823) by [@thymikee](https://github.com/thymikee))
+- Upgrade ESLint TS parser and plugin ([3b751d396b](https://github.com/facebook/react-native/commit/3b751d396ba0acaa1b4c8e1115c79eb45dab403d) by [@wcandillon](https://github.com/wcandillon))
+- Upgrade folly to 2021.06.28.00 and boost to 1.76.0 ([b77948e33b](https://github.com/facebook/react-native/commit/b77948e33bc5e0df422fffca3b4c9253f611d298) by [@Kudo](https://github.com/Kudo))
+
+#### Android specific
+
+- Add BLUETOOTH_ADVERTISE to `PermissionsAndroid` ([2bcc6fac38](https://github.com/facebook/react-native/commit/2bcc6fac3844f0752bc7067517c92a643679575e) by [@iBotPeaches](https://github.com/iBotPeaches))
+- Native ScrollView listeners list maintains weak references to listeners to avoid memory leaks ([b673e352fb](https://github.com/facebook/react-native/commit/b673e352fb0ea44b545edf5a7e8c1b422180838a) by [@dalves](https://github.com/dalves))
+- Rename the "Toggle Inspector" DevMenu item to "Hide/Show Element Inspector" ([e91fb05db7](https://github.com/facebook/react-native/commit/e91fb05db7f576e07114755b9db1eee91c672f25) by [@RSNara](https://github.com/RSNara))
+- Localize "search", "button", and "togglebutton" accessibility roles by using the platform roles ([399285f91c](https://github.com/facebook/react-native/commit/399285f91c2f675dea16fe61a86049ef7fecf35b) by [@kacieb](https://github.com/kacieb))
+- Refactor `AndroidTextInput.AndroidTextInput.color` prop to use SharedColor instead of int ([bc57056cc3](https://github.com/facebook/react-native/commit/bc57056cc3263431d54982426d890ba60b4cadb7) by [@mdvacca](https://github.com/mdvacca))
+- Upgraded `infer-annotation` to 0.18.0. ([b5c94e316c](https://github.com/facebook/react-native/commit/b5c94e316cc9b4ff090d8daa8970bf1becf77959) by [@yungsters](https://github.com/yungsters))
+- Bumped AGP to 4.2.2 ([ae494e7ce1](https://github.com/facebook/react-native/commit/ae494e7ce199cc5d524f791d45ddce51535cdadb) by [@cortinico](https://github.com/cortinico))
+- Upgrade folly to 2021.06.28.00 ([ebe939b18a](https://github.com/facebook/react-native/commit/ebe939b18aa859eb0f7f265222874c292ed771a4) by [@Kudo](https://github.com/Kudo))
+- Bump NDK to 21.4.7075529 ([aa43aab77c](https://github.com/facebook/react-native/commit/aa43aab77c8571632a2b0913c80fbf822dac01bc) by [@dulmandakh](https://github.com/dulmandakh))
+
+#### iOS specific
+
+- ScrollView scrollIndicatorInsets to not automatically add safe area on iOS13+ ([bc1e602e0c](https://github.com/facebook/react-native/commit/bc1e602e0c7922da6bf238675b7bf8b4c3faa493) by [@justinwh](https://github.com/justinwh))
+
+### Removed
+
+- `StyleSheet.create` will no longer do DEV-time validation. ([2e8c0bd7ea](https://github.com/facebook/react-native/commit/2e8c0bd7ea7db1aac183eb7f656772d3cffcb132) by [@yungsters](https://github.com/yungsters))
+
+### Fixed
+
+- Fix `window` not existing in jest setup ([bc1c533833](https://github.com/facebook/react-native/commit/bc1c533833bfe25a22f1abd105b8bcb1babce3b5) by [@timomeh](https://github.com/timomeh))
+- Clamp negative values for `numberOfLines` in <Text> component ([3bc883c6c6](https://github.com/facebook/react-native/commit/3bc883c6c60632f6a41df3867368f16f684b3865) by [@ShikaSD](https://github.com/ShikaSD))
+- Add missing `jest/create-cache-key-function` dep root package.json ([9a43eac7a3](https://github.com/facebook/react-native/commit/9a43eac7a32a6ba3164a048960101022a92fcd5a) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix Switch ref forwarding ([1538fa4455](https://github.com/facebook/react-native/commit/1538fa4455fa7095879aceba7f74a519c1337a8b) by [@janicduplessis](https://github.com/janicduplessis))
+- Report fatal errors even if its `type` is "warn". ([e4a4c4d6d7](https://github.com/facebook/react-native/commit/e4a4c4d6d71ab1a747d768e4b518e64e100ddfde) by [@yungsters](https://github.com/yungsters))
+- Parse `accessibilityAction` props into object instead of string ([faaeb778df](https://github.com/facebook/react-native/commit/faaeb778dfe25df67fc00b599d023819c10406e8) by [@ShikaSD](https://github.com/ShikaSD))
+- Avoid downgrading `console.error` when passed warning-like objects. ([0dba0aff18](https://github.com/facebook/react-native/commit/0dba0aff185f4fd46e1146362235e68e52c59556) by [@yungsters](https://github.com/yungsters))
+- Fix natively driven animations not getting reset properly ([129180c77b](https://github.com/facebook/react-native/commit/129180c77b0b99a3acedbeb04ce6ec4667f74cac) by [@tienphaw](https://github.com/tienphaw))
+- Fix compilation errors on Windows. ([6d04a46f74](https://github.com/facebook/react-native/commit/6d04a46f7427b9e107608f8f620fe2a1a84ff42d))
+- Fixed bug parsing hermes call stacks when the file name is empty ([e539e7d0be](https://github.com/facebook/react-native/commit/e539e7d0bed4fef42f458f28d06100ae23f52cb7) by [@MartinSherburn](https://github.com/MartinSherburn))
+- Upgrade dependencies / version of eslint package ([463ec22bb9](https://github.com/facebook/react-native/commit/463ec22bb9f2938164fef6133dfd94d2e428e5b0) by [@mikehardy](https://github.com/mikehardy))
+
+#### Android specific
+
+- Allow taps on views outside the bounds of a parent with `overflow: visible` ([e35a963bfb](https://github.com/facebook/react-native/commit/e35a963bfb93bbbdd92f4dd74d14e2ad6df5e14a) by [@hsource](https://github.com/hsource))
+- Fixed to use correct Android theme color for dark theme ([b3a715f6ea](https://github.com/facebook/react-native/commit/b3a715f6ea3d0faaf6d09e2a49267f2a5fb3fad2) by [@sidverma32](https://github.com/sidverma32))
+- Fixed dynamic behavior of `<Text adjustsFontSizeToFit={true}>` on Android ([59021521e7](https://github.com/facebook/react-native/commit/59021521e7aba0f70b91b5c7778ccdd1b30eaae4))
+- Fix Dimensions not updating ([c18a492858](https://github.com/facebook/react-native/commit/c18a492858e94b31e632560ad17499012e688158) by [@jonnyandrew](https://github.com/jonnyandrew))
+- Fix dashed/dotted border-drawing when `borderRadius` is 0 ([3e5998e651](https://github.com/facebook/react-native/commit/3e5998e651eba840603dcb1a9c0be564fc3f868d) by [@IjzerenHein](https://github.com/IjzerenHein))
+- Fix selectionColor doesn't style Android TextInput selection handles ([5819538a08](https://github.com/facebook/react-native/commit/5819538a087f1f48d564e7b4e273fe43dfb026cc) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix Modal being dismissed incorrectly when pressing escape on a hardware keyboard ([f51773ecde](https://github.com/facebook/react-native/commit/f51773ecdedbac19d25eb20894e532edef2cb304) by [@levibuzolic](https://github.com/levibuzolic))
+- Avoid calling setHint with a null parameter causing cursor to jump to the right ([3560753559](https://github.com/facebook/react-native/commit/356075355908f4901b87ad6ce33c157f01c8e748) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Create slider accessibility delegate in createViewInstance ([91cac20289](https://github.com/facebook/react-native/commit/91cac2028900cd18d17e70f9050cc125ed1eb12e) by [@janicduplessis](https://github.com/janicduplessis))
+- Quickfix individual border style dotted or dashed rendering as solid ([cb0e1d603a](https://github.com/facebook/react-native/commit/cb0e1d603aa4439a4d4804ad2987e4cb1f9bbf90) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Make `mHybridData` thread safe ([7929551623](https://github.com/facebook/react-native/commit/7929551623d4e3fbd849500d795755d0c41fdbbd))
+- Exit early from layout in textview if text layout is null ([8dfc3bcda1](https://github.com/facebook/react-native/commit/8dfc3bcda1e77fc982bc98da20dc129c23d8cc77) by [@ShikaSD](https://github.com/ShikaSD))
+- Fix `NullPointerException` caused by race condition in `ReactInstanceManager.getViewManagerNames` method ([fb386fccdd](https://github.com/facebook/react-native/commit/fb386fccddfe381fd6af5656c13fac802bffd316) by [@mdvacca](https://github.com/mdvacca))
+- Pressable ripple subsequent press coordinates. ([961b00d8c0](https://github.com/facebook/react-native/commit/961b00d8c0117750ce147c0b27c59af93f64b65c) by [@intergalacticspacehighway](https://github.com/intergalacticspacehighway))
+- TouchableNativeFeedback ripple starts on previous touch location. ([d85d72d0d9](https://github.com/facebook/react-native/commit/d85d72d0d9143693f73cef24c8e5bbb4d539a620) by [@intergalacticspacehighway](https://github.com/intergalacticspacehighway))
+- Fix Crash in `ViewProps.isLayoutOnly` ([e6b9508f12](https://github.com/facebook/react-native/commit/e6b9508f12ffd732d773ddcf9c2f633b0eca4232) by [@javache](https://github.com/javache))
+- Fixed a crash when updating `snapToOffsets` to a null value ([ba387b91d3](https://github.com/facebook/react-native/commit/ba387b91d3c7c9c1acd4b08f07fcd45629f3edfb) by [@maxoumime](https://github.com/maxoumime))
+- Adding `setAccessible` to `ReactImageManager` to allow screenreader announce Image accessibilityState of "disabled" ([333b46c4b0](https://github.com/facebook/react-native/commit/333b46c4b0ddee286e6d1d4b971fe8554a5c14cb) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fixed Android library builds with react.gradle file ([88f0676ae4](https://github.com/facebook/react-native/commit/88f0676ae49fd629331495101248c8e13423aed2) by [@Legion2](https://github.com/Legion2))
+
+#### iOS specific
+
+- Fix deadlock on `RCTi18nUtil` ([fcead14b0e](https://github.com/facebook/react-native/commit/fcead14b0effe2176a5d08ad50ee71e48528ddbd) by [@Saadnajmi](https://github.com/Saadnajmi))
+- Avoid re-encoding images when uploading local files ([f78526ce3d](https://github.com/facebook/react-native/commit/f78526ce3d4004eb4bf8ca5178ca7e2c1c9abc1a) by [@arthuralee](https://github.com/arthuralee))
+- <TextInput> content is reset when emoji is entered at the max length ([f3b8d4976f](https://github.com/facebook/react-native/commit/f3b8d4976f8608c2cda1f071923f14b6d4538967))
+- Use `actionName` in accessibility event callback ([fed6ad5bad](https://github.com/facebook/react-native/commit/fed6ad5badb4196a1895370fc81c522572cb34b4) by [@ShikaSD](https://github.com/ShikaSD))
+
+## v0.65.2
+
+### Fixed
+
+- For Android, general fixes to Appearance API and also fixes AppCompatDelegate.setDefaultNightMode(). For iOS, now works correctly when setting window.overrideUserInterfaceStyle ([25a2c608f7](https://github.com/facebook/react-native/commit/25a2c608f790f42cbc4bb0a90fc06cc7bbbc9b95) by [@mrbrentkelly](https://github.com/mrbrentkelly))
+
+## v0.65.1
+
+### Changed
+
+- Set `react-test-renderer` to `17.0.2` in the template ([d272880](https://github.com/facebook/react-native/commit/d27288044e94a248982f596e9885d55d066bc72e) by [@@rickhanlonii](https://github.com/@rickhanlonii))
+
+### Fixed
+
+- Resolve `NODE_BINARY` after finding the right path to node ([d75683](https://github.com/facebook/react-native/commit/d75683ac943205d64dd4142cca713ab2356094b8) by [@santiagofm](https://github.com/santiagofm))
+
+#### Android specific
+
+- `ColorProps` with value null should be defaultColor instead of transparent ([842bcb902e](https://github.com/facebook/react-native/commit/842bcb902ed27928255b60cb20524e9318d9bf70) by [@hank121314](https://github.com/hank121314))
+- Android Gradle Plugin 7 compatibility ([06e31c748f](https://github.com/facebook/react-native/commit/06e31c748fe87a866dbaf4d0c2019e76ec00e309) by [@dulmandakh](https://github.com/dulmandakh))
+
+## v0.65.0
+
+### Highlights
+
+- Hermes 0.8.1. Please see the highlighted changes from its [0.8.0](https://github.com/facebook/hermes/releases/tag/v0.8.0) and [0.8.1](https://github.com/facebook/hermes/releases/tag/v0.8.1) release notes.
+- `react-native-codegen` version `0.0.7` is now needed as a `devDependency` in the `package.json`.
+
+### Breaking Changes
+
+#### iOS specific
+
+- Replace `flipper_post_install` with `react_native_post_install` hook. Will automatically detect if Flipper is enabled. ([42dde12aac](https://github.com/facebook/react-native/commit/42dde12aac81208c4e69da991f4e08b9e62d18f6) by [@grabbou](https://github.com/grabbou))
+
+### Added
+
+- Add `onPressIn` & `onPressOut` props to Text ([1d924549ca](https://github.com/facebook/react-native/commit/1d924549cad75912191005c8f68dd73e15b07183) by [@adrienharnay](https://github.com/adrienharnay))
+- Stabilize `RootTagContext`. And temporarily export both `unstable_RootTagContext` and `RootTagContext` ([9d489354ae](https://github.com/facebook/react-native/commit/9d489354ae373614b20cd91f588eb25743686ee0) by [@nadiia](https://github.com/nadiia))
+- Implement `sendAccessibilityEvent` in the React(Fabric/non-Fabric) renderer ([99b7052248](https://github.com/facebook/react-native/commit/99b7052248202cee172e0b80e7ee3dfb41316746) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Re-added `localeIdentifier` to `I18nManager` constants ([6b91ae73cd](https://github.com/facebook/react-native/commit/6b91ae73cdf096e15a3235ae76276f9d7fb12f7b) by [@acoates-ms](https://github.com/acoates-ms))
+- Add PressabilityPerformanceEventEmitter ([c4c0065b00](https://github.com/facebook/react-native/commit/c4c0065b0009ced0049c5abc4dddd327ac638928) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Added `displayName` to some RN contexts to make them more easy to differentiate when debugging. ([68a476103a](https://github.com/facebook/react-native/commit/68a476103a95be77f4fc7c582e52cc94946de1b4) by [@bvaughn](https://github.com/bvaughn))
+- Add `displayName` to `TouchableHighlight` and `TouchableOpacity` ([c4e40b81c0](https://github.com/facebook/react-native/commit/c4e40b81c01d061c189a7d28a4f56a588c3d1aea) by [@brunohkbx](https://github.com/brunohkbx))
+- Added context to URL's error messages when the feature is not implemented ([452240bafa](https://github.com/facebook/react-native/commit/452240bafa970578144aedaea0223e17863d2d26) by [@Crash--](https://github.com/Crash--))
+- Add a `stickyHeaderHiddenOnScroll` option to keep the sticky header hidden during scrolling down, and only slide in when scrolling up ([ffba25c648](https://github.com/facebook/react-native/commit/ffba25c648152021dd3fb9e79afd8cade7008d05))
+- Added `debugName` parameter to `renderApplication` to use as the display name for the React root tree ([eeb36f4709](https://github.com/facebook/react-native/commit/eeb36f470929c2fdd8e1ed69898a5ba9144b8715) by [@rubennorte](https://github.com/rubennorte))
+- Adding support for `cancelOnBackground` for UserFlow ([0d4985900b](https://github.com/facebook/react-native/commit/0d4985900b52d5def22fce4371c2259ee65368ee) by [@dmitry-voronkevich](https://github.com/dmitry-voronkevich))
+- Introducing RuntimeScheduler module ([eb13baf2a6](https://github.com/facebook/react-native/commit/eb13baf2a687b53dde04b9a336f18629d94f4b79) by [@sammy-SC](https://github.com/sammy-SC))
+- Roll out TurboModule Promise Async Dispatch ([5c4f145e33](https://github.com/facebook/react-native/commit/5c4f145e33d92969f8a86284360a5a2f09308500) by [@RSNara](https://github.com/RSNara))
+
+#### Android specific
+
+- Add `getRecommendedTimeoutMillis` to AccessibilityInfo ([d29a7e7a89](https://github.com/facebook/react-native/commit/d29a7e7a89f4e5e3489e9723979426bb1b6f0674) by [@grgr-dkrk](https://github.com/grgr-dkrk))
+- TalkBack now announces "unselected" when changing `accessibilityState.selected` to false. ([73bc96ecf9](https://github.com/facebook/react-native/commit/73bc96ecf9a16d420533c12e9e1812ffe21c10a2) by [@yungsters](https://github.com/yungsters))
+- Fbjni version bump to 0.0.3 ([24f9f75bf6](https://github.com/facebook/react-native/commit/24f9f75bf66b8f32a117ba9f9dea3c65b35b1e00) by [@IvanKobzarev](https://github.com/IvanKobzarev))
+- Add `onFocus` and `onBlur` for Pressable on Android. ([cab4da7288](https://github.com/facebook/react-native/commit/cab4da728814bf9d3c0cc7c9921e982bfc090730))
+- Introduce API to allow applications to register `TurboModuleManagerDelegates` with `ReactInstanceManager` ([eb7e89e286](https://github.com/facebook/react-native/commit/eb7e89e2864e941b4a21d55a7403a6028e9a26a2) by [@RSNara](https://github.com/RSNara))
+- Added convenience methods to simplify native Event classes and ease migrations ([72d0ddc16f](https://github.com/facebook/react-native/commit/72d0ddc16f2f631003c3486e0a59e50c145ec613) by [@JoshuaGross](https://github.com/JoshuaGross))
+
+#### iOS specific
+
+- High contrast dynamic color options for dark and light mode. ([4b9d9dda27](https://github.com/facebook/react-native/commit/4b9d9dda270acd4e0314f40490c699ffd0f6e30e) by [@birkir](https://github.com/birkir))
+- Adds an ability to retrieve the notifications authorization status from JavaScript side. ([b86e52a9ec](https://github.com/facebook/react-native/commit/b86e52a9ec9ec828388eb4a717a3782a54c7b3d9))
+- Added reset method to `RCTFabricSurface` to help with reloads ([53858ceaa3](https://github.com/facebook/react-native/commit/53858ceaa3beab02726b1bd6e125e506477d445e) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Allow `RCTRootView` to be initialized with a frame ([00bc09c8f7](https://github.com/facebook/react-native/commit/00bc09c8f76879eb1f9a92a6a643191da9355de8) by [@appden](https://github.com/appden))
+- Allow for configuring the `NSURLSessionConfiguration` ([58444c74f5](https://github.com/facebook/react-native/commit/58444c74f5c18b74e88a6c1cd0f059fe434c1a21) by [@hakonk](https://github.com/hakonk))
+- Use react-native-codegen in iOS app template ([e99b8bbb40](https://github.com/facebook/react-native/commit/e99b8bbb404f8cd1f11b6c7998083be530d7b8a4) by [@hramos](https://github.com/hramos))
+
+### Changed
+
+- Bump Flipper + Bump hermes (#31872 by [@Titozzz](https://github.com/Titozzz))
+- Show warning when native module without `addListener` or `removeListeners` is passed to `NativeEventEmitter` ([114be1d217](https://github.com/facebook/react-native/commit/114be1d2170bae2d29da749c07b45acf931e51e2) by [@rubennorte](https://github.com/rubennorte))
+- Disable `accessibilityState` when the `TouchableWithoutFeedback` is `disabled`. ([697164077c](https://github.com/facebook/react-native/commit/697164077c362cfa9a384b0f4e246d6bd9c470ba) by [@carloscuesta](https://github.com/carloscuesta))
+- Upgraded `react-devtools-core dependency` to 4.12.0 ([5a2693d78f](https://github.com/facebook/react-native/commit/5a2693d78f1a886f0aa5b7f86830d3ddb54a57e9) by [@bvaughn](https://github.com/bvaughn))
+- Set disabled `accessibilityState` when `TouchableHighlight` is disabled ([f69e096bb4](https://github.com/facebook/react-native/commit/f69e096bb4df67474351786f674b1bb1e42d3363) by [@Naturalclar](https://github.com/Naturalclar))
+- Add checks and logs to for better error handling ([ea1f9531f0](https://github.com/facebook/react-native/commit/ea1f9531f00b5cd834e03f58cdfa117a93634624))
+- CreateAnimatedComponent: removed deprecated lifecycles usage ([ba61267015](https://github.com/facebook/react-native/commit/ba61267015567bf180dd3272a295dc262b3e2c97) by [@nadiia](https://github.com/nadiia))
+- Hide caret in the `TextInput` during test runs. ([397bfa6ad7](https://github.com/facebook/react-native/commit/397bfa6ad7dff71f4b6d27ac17acc76fe8a6bbb5) by [@nadiia](https://github.com/nadiia))
+- Use `usePressability` hook in TextInput ([c4aa411ee3](https://github.com/facebook/react-native/commit/c4aa411ee374f2320343b900f1f8b24a47b633c9) by [@nadiia](https://github.com/nadiia))
+- `Keyboard` no longer inherits from `NativeEventEmitter`, so it no longer implements `removeAllListeners`, and `removeSubscription`. ([1049835b50](https://github.com/facebook/react-native/commit/1049835b504cece42ee43ac5b554687891da1349) by [@yungsters](https://github.com/yungsters))
+- `AppState` no longer inherits from `NativeEventEmitter`, so it no longer implements `addListener`, `removeAllListeners`, and `removeSubscription`. ([6f22989e92](https://github.com/facebook/react-native/commit/6f22989e920246a2cd611b93e170024d89903027) by [@yungsters](https://github.com/yungsters))
+- `DevSettings` no longer inherits from `NativeEventEmitter` ([70cd569e7e](https://github.com/facebook/react-native/commit/70cd569e7e4cceac81023eae4ea5089cff2f9b59) by [@yungsters](https://github.com/yungsters))
+- LogBox will not initially collapse stack frames if every frame would be collapsed. ([88a41f180c](https://github.com/facebook/react-native/commit/88a41f180c315bc55e05d77ddc3fc671ad8630e6) by [@yungsters](https://github.com/yungsters))
+- Update package name warning of deprecated modules ([34e1b0ef98](https://github.com/facebook/react-native/commit/34e1b0ef981559adc09cd9f994bef9584f1c82b7) by [@Naturalclar](https://github.com/Naturalclar))
+- Update react-native-codegen to 0.0.7 ([cd6c9f3273](https://github.com/facebook/react-native/commit/cd6c9f3273fbe41052c4ec8512d3b1129daf149b) by [@Naturalclar](https://github.com/Naturalclar))
+- Update template devDependencies ([652e3953f4](https://github.com/facebook/react-native/commit/652e3953f48938580e1bf8ea1ba70105997e59d2) by [@Bardiamist](https://github.com/Bardiamist))
+- Don't minify JS bundle by default when using hermes ([1a67dda668](https://github.com/facebook/react-native/commit/1a67dda668c71d961a4bb3b0cdf6aa22c0e5c138) by [@janicduplessis](https://github.com/janicduplessis))
+- Migrate warnings in index.js to point to new lean core repos ([4421a64ac1](https://github.com/facebook/react-native/commit/4421a64ac1ea9df3827fb99194c8576a0750beab) by [@Naturalclar](https://github.com/Naturalclar))
+- Update Flipper to 0.93.0 ([06c33e9abe](https://github.com/facebook/react-native/commit/06c33e9abe6ed51b1c8bba03982ebce2b6da3860) by [@mweststrate](https://github.com/mweststrate))
+- Update Flipper to 0.91.1, fixed iOS build support for i386, `use_flipper!()` will no longer need custom overrides to build with XCode 12.5 ([4246c75d0d](https://github.com/facebook/react-native/commit/4246c75d0d5b9dccbe0fd5ecec66b4cc0331f815) by [@mweststrate](https://github.com/mweststrate))
+- Find node on m1 via homebrew node managers ([4d40b53c12](https://github.com/facebook/react-native/commit/4d40b53c12c8ad52760c63cacde417ee876bdfb1) by [@danilobuerger](https://github.com/danilobuerger))
+- Clean up EventObjectPropertyType ([0e46080847](https://github.com/facebook/react-native/commit/0e46080847595fb7577b18042c932db958bc0959) by [@RSNara](https://github.com/RSNara))
+- `Appearance.addChangeListener` now returns an `EventSubscription`. ([305b4253c2](https://github.com/facebook/react-native/commit/305b4253c2a9ed4d71be33e02cb12b6d570e2fb1) by [@yungsters](https://github.com/yungsters))
+- `Dimensions.addEventListener` now returns an `EventSubscription`. ([c47a03563d](https://github.com/facebook/react-native/commit/c47a03563db72d1580bf87b7729bd22ce6ca63dd) by [@yungsters](https://github.com/yungsters))
+- Updated react-native-community/cli to v6 (hence updating metro to 0.66) ([0d32aef3aa](https://github.com/facebook/react-native/commit/0d32aef3aa9a75b00d99503b8e4f502c52380dea) by [@Titozzz](https://github.com/Titozzz))
+- Reflect Hermes release version from HermesBadge ([c54aeccf1a](https://github.com/facebook/react-native/commit/c54aeccf1a8e16240e400d783dda5ec07fcf3808) by [@Huxpro](https://github.com/Huxpro))
+
+#### Android specific
+
+- Modified `NativeEventEmitter` to also use the passed native module to report subscriptions on Android ([f5502fbda9](https://github.com/facebook/react-native/commit/f5502fbda9fe271ff6e1d0da773a3a8ee206a453) by [@rubennorte](https://github.com/rubennorte))
+- RefreshControl.size prop changed its type to string, the valid values are: 'default' and 'large' ([dd60414578](https://github.com/facebook/react-native/commit/dd604145781ac07c8db8d9100043bd76f6d6e913), [65975dd28d](https://github.com/facebook/react-native/commit/65975dd28de0a7b8b8c4eef6479bf7eee5fcfb93) by [@mdvacca](https://github.com/mdvacca))
+- TouchableNativeFeedback: sync disabled prop with accessibilityState ([88f2356eed](https://github.com/facebook/react-native/commit/88f2356eedf71183d02cde0826c8a0c6910f83dd) by [@kyamashiro](https://github.com/kyamashiro))
+- Rename `hasActiveCatalystInstance` to `hasActiveReactInstance` ([dfa8eb0558](https://github.com/facebook/react-native/commit/dfa8eb0558338f18ea01f294a64d355f6deeff06))
+- Record latest error type in dev support ([423453e105](https://github.com/facebook/react-native/commit/423453e1050c9aedda2df050a5ee6d40e7c82031))
+- Passing accessibility state in button so it can announce disabled in talkback ([5889cbebe3](https://github.com/facebook/react-native/commit/5889cbebe392dd19c6ce0cfd5fa1f725ece1060a) by [@huzaifaaak](https://github.com/huzaifaaak))
+- Fixed issue that causes HorizontalScrollView to shift to the right when a TextInput is selected and keyboard pops up ([b9b23e1ab1](https://github.com/facebook/react-native/commit/b9b23e1ab138189d2a4c22b13ba6ad8f8957579e) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Fixed jumpy RTL horizontal ScrollViews. If you have Android-specific JS hacks for handling RTL in ScrollViews, you probably can/probably want to remove them, because they should be reliable now and require fewer hacks. ([fc032cd8d8](https://github.com/facebook/react-native/commit/fc032cd8d889d828edad3ea4b735205092cf0d40) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Add a new check to avoid calling this method ([2b708560fc](https://github.com/facebook/react-native/commit/2b708560fc002c26f0b09f09cfa451827a3425ac))
+- Clipping subviews has been temporarily disabled in HorizontalScrollView in RTL mode. Minor/negligible perf impact. ([da8ed6b625](https://github.com/facebook/react-native/commit/da8ed6b6252fd53a83f14ab6da7e9b467f12ffe1) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Change StatusBar style handling strategy ([7324b92dc4](https://github.com/facebook/react-native/commit/7324b92dc45679d3b38526378b7d3e78ad082641))
+- Clean listeners during destroy of `ReactContext` ([d79212120b](https://github.com/facebook/react-native/commit/d79212120b7168015d3d0225ef372ed851a230fa) by [@mdvacca](https://github.com/mdvacca))
+- Bump buildToolsVersion to 30.0.2, ([5d01110b53](https://github.com/facebook/react-native/commit/5d01110b5370f884907b6dbdc56773f03518a54d) by [@dulmandakh](https://github.com/dulmandakh))
+- Initial replacement of jcenter with mavenCentral. ([704dd2812f](https://github.com/facebook/react-native/commit/704dd2812f7b8c79971274cc9e4c717e56847ac0) by [@ShikaSD](https://github.com/ShikaSD))
+- Remove developer tool guard for android ([c7d28bca30](https://github.com/facebook/react-native/commit/c7d28bca308c1654c576df9a0328a3116ed65d54))
+- Bump Android compileSdkVersion and targetSdkVersion from 29 to 30 ([55c8833817](https://github.com/facebook/react-native/commit/55c8833817c3e9cf9882a712c8b9946a262df231), [c7efd5b369](https://github.com/facebook/react-native/commit/c7efd5b369aa7605a1017791440735ab72bc9fa8) by [@mdvacca](https://github.com/mdvacca))
+- Upgrade jsc-android to 250230.2.1 ([341f061ce3](https://github.com/facebook/react-native/commit/341f061ce3ae057f3a958654e0ec3a9c4c8211ad) by [@Kudo](https://github.com/Kudo))
+- Bump Gradle to 6.9, Android Gradle Plugin to 4.2.1 ([547b4c92e4](https://github.com/facebook/react-native/commit/547b4c92e4743f5b5816297f48a608ace9de6bb5) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump gradle wrapper to 6.8.3 ([7258afeea3](https://github.com/facebook/react-native/commit/7258afeea38949dc408c0af79924f6f36f7ade84) by [@dulmandakh](https://github.com/dulmandakh))
+- Bumping OkHttp from 4.9.0 to 4.9.1. ([6caec9d91f](https://github.com/facebook/react-native/commit/6caec9d91fe71bcd80d670218d752c4f251bde81) by [@gedeagas](https://github.com/gedeagas))
+- Bumping OkHttp from v3 to v4. ([8207e97f91](https://github.com/facebook/react-native/commit/8207e97f9174a04e319431193c0f63d47a093c44) by [@arazabishov](https://github.com/arazabishov))
+- Update Okhttp to version 3.14.19 ([6bfd89d277](https://github.com/facebook/react-native/commit/6bfd89d27724f2aac602fa2acbf4753950f4152e) by [@LukasFPV](https://github.com/LukasFPV))
+- Bump Fresco to 2.5.0 ([8fa8934011](https://github.com/facebook/react-native/commit/8fa8934011e4d9f1f7a49c8519fcc97f30a5c74b) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump Fresco to 2.3.0 ([280f524b49](https://github.com/facebook/react-native/commit/280f524b491e7a36bb9f9a26e354bb8e125375ed) by [@dulmandakh](https://github.com/dulmandakh))
+
+#### iOS specific
+
+- Give RCTNetworking handler provider block RCTModuleRegistry ([4c5182c1cc](https://github.com/facebook/react-native/commit/4c5182c1cc8bafb15490adf602c87cb5bf289ffd) by [@RSNara](https://github.com/RSNara))
+- Give RCTImageURLLoader's loader/decoder provider blocks RCTModuleRegistry ([af6bcfa3ab](https://github.com/facebook/react-native/commit/af6bcfa3ab0ef6e1b0f669dda6cd7d6a5e8975ba) by [@RSNara](https://github.com/RSNara))
+- Make RCTTurboModule `getTurboModule`: required ([e0b8f5080f](https://github.com/facebook/react-native/commit/e0b8f5080f814ba2a75807ed6d7f2944aab98d7e) by [@RSNara](https://github.com/RSNara))
+- Update React.podspec to require cocoapods >= 1.10.1 ([b50b7e3a19](https://github.com/facebook/react-native/commit/b50b7e3a191dfa95aa122c259e0df8699cbaccae) by [@sunnylqm](https://github.com/sunnylqm))
+- Fix glog pod install with Xcode 12 ([8a5fd8ea95](https://github.com/facebook/react-native/commit/8a5fd8ea95678a0b4423db2cbcbefc1a33595813) by [@dulmandakh](https://github.com/dulmandakh))
+- Only show Dev Menu on shake if RN view is visible ([7186c4de4f](https://github.com/facebook/react-native/commit/7186c4de4fc76e87fa1386f2839f178dd220a02b) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- `progressViewOffset` prop of `RefreshControl` and `VirtualizedList` now works on iOS ([310a6bcf4b](https://github.com/facebook/react-native/commit/310a6bcf4ba7ca162d3ba1c03e0ab07ff41f9ead) by [@davidbiedenbach](https://github.com/davidbiedenbach))
+- Roll out TurboModule block copy ([5275895af5](https://github.com/facebook/react-native/commit/5275895af5136bc278c0c5eb07ae93e395c5b29b) by [@RSNara](https://github.com/RSNara))
+- Add instructions to template/ios/Podfile for enabling hermes ([a326a30e32](https://github.com/facebook/react-native/commit/a326a30e322f6cdff880734aafe965b299febb8d) by [@SConaway](https://github.com/SConaway))
+
+### Deprecated
+
+- `EventEmitter#removeSubscription` is now deprecated. ([cb6cbd12f8](https://github.com/facebook/react-native/commit/cb6cbd12f80152b4ce742f37e2e6eefadf89d927) by [@yungsters](https://github.com/yungsters))
+- It is now deprecated to pass a constructor argument to `EventEmitter(...)`. ([14f7a2b707](https://github.com/facebook/react-native/commit/14f7a2b70754c92804d746959d1ff091bf49af69) by [@yungsters](https://github.com/yungsters))
+- Deprecate `AccessibilityInfo.removeEventListener`. ([003d63d6e5](https://github.com/facebook/react-native/commit/003d63d6e501411f870ff5dbef819ad2aca20974) by [@yungsters](https://github.com/yungsters))
+- Deprecate `Linking.removeEventListener`. Instead, call `remove()` on the subscription returned by `Linking.addEventListener`. ([6d1aca806c](https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7), [035718ba97](https://github.com/facebook/react-native/commit/035718ba97bb44c68f2a4ccdd95e537e3d28690c) by [@yungsters](https://github.com/yungsters))
+- Old Native method to create ScrollEvent has been deprecated and will be removed at some point in the (distant) future ([62f0dee235](https://github.com/facebook/react-native/commit/62f0dee2353b14ce1524dc62de5e1d2f1883a089) by [@JoshuaGross](https://github.com/JoshuaGross))
+
+#### Android specific
+
+- Deprecate `NativeModule.onCatalystInstanceDestroy()` for `NativeModule.invalidate()` ([18c8417290](https://github.com/facebook/react-native/commit/18c8417290823e67e211bde241ae9dde27b72f17) by [@RSNara](https://github.com/RSNara))
+- Mark `hasActiveCatalystInstance()` as Deprecated ([1b50722a7e](https://github.com/facebook/react-native/commit/1b50722a7e84cd8acffd3f0f84d77057e1e0d955))
+
+### Removed
+
+- Stabilize `RootTagContext` ([9b98edcd01](https://github.com/facebook/react-native/commit/9b98edcd0155a4a8a1f71d19e565c485910a6137) by [@nadiia](https://github.com/nadiia))
+- Removed `getNode()` from animated component refs. ([b914153286](https://github.com/facebook/react-native/commit/b914153286ea537d4a57ff934e63e07172c576a0) by [@yungsters](https://github.com/yungsters))
+- Remove legacy context API usage in AppContainer ([17be3a0032](https://github.com/facebook/react-native/commit/17be3a0032c181a100efc7af17b7366a3d636c52) by [@nadiia](https://github.com/nadiia))
+- Removed `AccessibilityInfo.fetch`, use `isScreenReaderEnabled` instead. ([d831134d51](https://github.com/facebook/react-native/commit/d831134d514c5db6be1ee35cc7e9994b777179c1) by [@yungsters](https://github.com/yungsters))
+- Remove unused VR-only props ([95f7c791c5](https://github.com/facebook/react-native/commit/95f7c791c56b527dadbe0b4ec7a1be5af12d7afe) by [@Simek](https://github.com/Simek))
+- Removed `RCTDeviceEventEmitter.sharedSubscribers`. ([3af0c84aa5](https://github.com/facebook/react-native/commit/3af0c84aa5d1633f058ea3e7aef0d125fe33e01d) by [@yungsters](https://github.com/yungsters))
+- Moved `ScrollResponder.Mixin` methods into ScrollView to Remove ScrollResponder.js ([099f67cf8a](https://github.com/facebook/react-native/commit/099f67cf8aa290592092cfa0cb4e938d0543b696) by [@kacieb](https://github.com/kacieb))
+- `NativeEventEmitter` no longer inherits from `EventEmitter`, so it no longer implements `removeListener` and `removeSubscription`. Instead, use the `remove()` method on the subscription object returned by `addListener`. ([d39643b9de](https://github.com/facebook/react-native/commit/d39643b9de11c6b44984166ede34a7f44de76fe5) by [@yungsters](https://github.com/yungsters))
+- `RCTDeviceEventEmitter` no longer throws for `StatusBar`, `Keyboard`, and `AppState` events. However, you are still recommended to use the more appropriate modules for listening to these events. ([c8c975f0d7](https://github.com/facebook/react-native/commit/c8c975f0d7b8a57e9e90373a2be4d630ed9dd65e) by [@yungsters](https://github.com/yungsters))
+- Removed second optional argument of `NativeEventEmitter` constructor ([f5f47879b8](https://github.com/facebook/react-native/commit/f5f47879b8320a9934914cb8ce7a72269840a83a) by [@yungsters](https://github.com/yungsters))
+- Removed warning on Android for `setTimeout` with delays greater than 1 minute. ([480dabd665](https://github.com/facebook/react-native/commit/480dabd66547a60522249eda203a3eb1934b02e5) by [@yungsters](https://github.com/yungsters))
+- Removed `Touchable.TOUCH_TARGET_DEBUG` property. ([ef765d423c](https://github.com/facebook/react-native/commit/ef765d423cb188957a9fb2fd92c62b0efe8a36a6) by [@yungsters](https://github.com/yungsters))
+
+#### Android specific
+
+- Remove okhttp3 proguard rules ([b4c9f13fe7](https://github.com/facebook/react-native/commit/b4c9f13fe794283d76766c1baef87888d174cb1c) by [@doniwinata0309](https://github.com/doniwinata0309))
+- Remove filter pills ([5cf4ab8dd2](https://github.com/facebook/react-native/commit/5cf4ab8dd28b5a336d7af29d295ede51f0d19587) by [@suminkimm](https://github.com/suminkimm))
+- Remove `ReactFragmentActivity` class. ([2798e7172b](https://github.com/facebook/react-native/commit/2798e7172b01b9e2dbe2937d0163f98ab29230cf) by [@dulmandakh](https://github.com/dulmandakh))
+- Remove jcenter ([70da640946](https://github.com/facebook/react-native/commit/70da64094608f5f2e3c554ed719e9aad624e3459) by [@dulmandakh](https://github.com/dulmandakh))
+
+#### iOS specific
+
+- Removed event methods except `addListener` from `Networking` ([a81b7d18fa](https://github.com/facebook/react-native/commit/a81b7d18fa65a727539c6c7ea17f787673d3c889) by [@yungsters](https://github.com/yungsters))
+- Delete deprecated "live reloading" setting ([b512beb0c4](https://github.com/facebook/react-native/commit/b512beb0c497158f9c861fcc16af960655b1feb5) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Remove iOS10/tvOS10 support ([f2c6279ca4](https://github.com/facebook/react-native/commit/f2c6279ca497b34d5a2bfbb6f2d33dc7a7bea02a), [a1d626739d](https://github.com/facebook/react-native/commit/a1d626739d95d6cbbb1be169b93952cdd1465486) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Remove iOS10/tvOS10 support from remaining podfiles ([f0faa7843c](https://github.com/facebook/react-native/commit/f0faa7843c5a0e9041edb6e77fd6631335ab2b12) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Delete RCTTurboModuleManagerDelegate `getTurboModule:initParams` ([c4c34a1237](https://github.com/facebook/react-native/commit/c4c34a1237ec584c667c62358dc577174bf11033) by [@RSNara](https://github.com/RSNara))
+
+### Fixed
+
+- Don't disconnect DevTools WebSocket connection on Cmd+D ([60a18c138c](https://github.com/facebook/react-native/commit/60a18c138c51d3adcfeba7785315fc222cdfeb35) by [@bvaughn](https://github.com/bvaughn))
+- For native components that accept color arrays, invalid elements will now fallback to transparent with a console error. ([bb6cd56fae](https://github.com/facebook/react-native/commit/bb6cd56fae4118f44ae47fd6978710a22f9e1510) by [@yungsters](https://github.com/yungsters))
+- Fixes usage of std::thread in runtime executor ([75d9ba733f](https://github.com/facebook/react-native/commit/75d9ba733f4a041e4320098b52903f69747df02b) by [@asklar](https://github.com/asklar))
+- Fix sticky header not sticking on first render in ScrollView ([921c9ff165](https://github.com/facebook/react-native/commit/921c9ff165d47a73e9978df918b1761b95f9979d) by [@kacieb](https://github.com/kacieb))
+- Fix ScrollView `getInnerViewNode` and `getInnerViewRef` ref methods ([6e36d046a3](https://github.com/facebook/react-native/commit/6e36d046a313c7961cc2f91e0422f4bf29005eb6) by [@vshab](https://github.com/vshab))
+- Fix stalling UI due to a bug in KeyboardAvoidingView ([67309277fe](https://github.com/facebook/react-native/commit/67309277fe588c4dd64fe0c680d1d00d2f3fb2b6) by [@sammy-SC](https://github.com/sammy-SC))
+- Avoid eating clicks/taps into ScrollView when using physical keyboard ([6d2a527984](https://github.com/facebook/react-native/commit/6d2a5279841886a9a14f82057202bf8950c3f917) by [@NickGerleman](https://github.com/NickGerleman))
+- Fix nested FlatList not firing `onScrollDragEnd` and `onMomentum` methods ([46be292f67](https://github.com/facebook/react-native/commit/46be292f671c70aac4ecc178c96e3a2a6a3d16da) by [@kacieb](https://github.com/kacieb))
+- Fix race condition in Debug Inspector shutdown ([d021000b9e](https://github.com/facebook/react-native/commit/d021000b9e358a9379ca5d6208f24757c0c8ce97) by [@MartinSherburn](https://github.com/MartinSherburn))
+- Fixes layout of nodes with `YGDisplayNone` and `YGPositionTypeAbsolute` ([b15f8a30e7](https://github.com/facebook/react-native/commit/b15f8a30e75b54a8de5cc9456aaa07ebe8d8a176) by [@rozele](https://github.com/rozele))
+- Fix changes of View visibilities ([4076293aa1](https://github.com/facebook/react-native/commit/4076293aa1059005704576530d8fe948b85e6a6d) by [@mdvacca](https://github.com/mdvacca))
+- Fix: save connection url as class variable ([8facc865ab](https://github.com/facebook/react-native/commit/8facc865ab2ec032da34f6f755ee8870ee4741aa) by [@sirpy](https://github.com/sirpy))
+- Fix Hermes build on folly version 2021.04.26.00 ([8eceee744e](https://github.com/facebook/react-native/commit/8eceee744ed9fee1eb2402f6b13bb606f6046f62) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix disabled handling for Text ([33ff4445dc](https://github.com/facebook/react-native/commit/33ff4445dcf858cd5e6ba899163fd2a76774b641) by [@lunaleaps](https://github.com/lunaleaps))
+- Fix disabled prop not disabling onPress for voice assistant ([1c7d9c8046](https://github.com/facebook/react-native/commit/1c7d9c8046099eab8db4a460bedc0b2c07ed06df) by [@kacieb](https://github.com/kacieb))
+- Fix unsafe cast and detect overflow in MapBuffer. ([e69f1c9f50](https://github.com/facebook/react-native/commit/e69f1c9f50c64bfcaeb684d763f02b9ccadec960))
+- Fix(deps): bump metro to 0.66.2 + dedup ([e40f58272d](https://github.com/facebook/react-native/commit/e40f58272d51a40e7b5fa77c14767ddaf9ecc006) by [@Titozzz](https://github.com/Titozzz))
+
+#### Android specific
+
+- Fixed crash when using style `borderRadius: any` with `backgroundColor: null` ([42b6e6682c](https://github.com/facebook/react-native/commit/42b6e6682ce0fa9ac6eb5c1bf8ef0c224d2d80c0))
+- Fix font weight numeric values ([3827ca6171](https://github.com/facebook/react-native/commit/3827ca61714b699c866e17d58b4697dde86e3d00) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix wrong ripple color on Switch component ([1b0683533a](https://github.com/facebook/react-native/commit/1b0683533a07aa8875b4d494d8c2a3d18ef69438) by [@rnike](https://github.com/rnike))
+- Fix Selected State does not announce when TextInput Component selected on Android ([7ee2acc6c8](https://github.com/facebook/react-native/commit/7ee2acc6c84c9ea6a51908495a6f14a26f346b29) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix layout bug in ReactTextView. ([dec1b6ba15](https://github.com/facebook/react-native/commit/dec1b6ba15df8f255d30b696a7c08ef543d1d19c))
+- Fix source build on Windows machines vol. 2 ([c37d49492b](https://github.com/facebook/react-native/commit/c37d49492b20c3815ca10133f971755f659b1b6a))
+- Make NativeModules immediately initializable ([2bf866e401](https://github.com/facebook/react-native/commit/2bf866e4018ea72c1f1c92c806db85378c801fb7) by [@RSNara](https://github.com/RSNara))
+- Restore `android_hyphenationFrequency` on `Text`. ([1433ed6333](https://github.com/facebook/react-native/commit/1433ed6333162189730d6f92cf80f3077ac69120) by [@yungsters](https://github.com/yungsters))
+- Display the `testID` as the `resource-id` for black-box testing frameworks ([381fb395ad](https://github.com/facebook/react-native/commit/381fb395ad9d2d48717a5d082aaedbecdd804554) by [@jdeff](https://github.com/jdeff))
+- Fix support for blobs larger than 64 KB ([f00e348ca7](https://github.com/facebook/react-native/commit/f00e348ca7f031c3577b1335a3163bc3e4eb4b41) by [@tomekzaw](https://github.com/tomekzaw))
+- Fix building React Android on Windows. ([5dc15222b2](https://github.com/facebook/react-native/commit/5dc15222b256e32517df553c5fe7f6f5b7d0d31f))
+- Fix race-condition on the initialization of ReactRootViews ([74a756846f](https://github.com/facebook/react-native/commit/74a756846fdab1ef7d183c4df3069a23fcd0d49e) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- Animated images without loop no longer animate twice ([17aa1e320e](https://github.com/facebook/react-native/commit/17aa1e320e75393d46a54ec0fee8b068eeef142f) by [@comvenger-brandon](https://github.com/comvenger-brandon))
+- Allow PlatformColor to work with border colors ([c974cbff04](https://github.com/facebook/react-native/commit/c974cbff04a8d90ac0f856dbada3fc5a75c75b49) by [@danilobuerger](https://github.com/danilobuerger))
+- RCTSurfaceHostingView default background color is now consistent with RCTRootView ([f31497354b](https://github.com/facebook/react-native/commit/f31497354b72ad51b452a4b8bd3b70de16830025) by [@fkgozali](https://github.com/fkgozali))
+- Invalidate TurboModules with infra-generated method queues on their method queues ([497eb578ab](https://github.com/facebook/react-native/commit/497eb578ab32614744a4ef61d7a6bca0d4251885) by [@RSNara](https://github.com/RSNara))
+- Fix RefreshControl layout when removed from window ([e67811e7a6](https://github.com/facebook/react-native/commit/e67811e7a6df0937ed61d3367ab10fab95b31bfa) by [@janicduplessis](https://github.com/janicduplessis))
+- Tab Accessibility Role had incorrect localization string ([80a10953f9](https://github.com/facebook/react-native/commit/80a10953f9de8cc251e9b8c1e59a173af87febb9) by [@adkenyon](https://github.com/adkenyon))
+- Incorrect ScrollView offset on update ([a4526bcc3f](https://github.com/facebook/react-native/commit/a4526bcc3f89f5b9d3f86c814ade8f55c86e819e) by [@rnike](https://github.com/rnike))
+- Modal's `onDismiss` prop will now be called successfully. ([d85d5d2e19](https://github.com/facebook/react-native/commit/d85d5d2e1974b463318e4c86da29a5ccdd60a977) by [@kkoudev](https://github.com/kkoudev))
+- Fix DatePicker sizing issue ([84d55868e8](https://github.com/facebook/react-native/commit/84d55868e8b4e5a555d324c6162b8e38571524d8) by [@sammy-SC](https://github.com/sammy-SC))
+- First press not working after pull to refresh ([c4950610e4](https://github.com/facebook/react-native/commit/c4950610e40f2019c828bc99e29769cd4089c217) by [@rnike](https://github.com/rnike))
+- Fix Codegen silently failing when Yarn is not installed, or when Yarn v2 is active. ([07e4953514](https://github.com/facebook/react-native/commit/07e4953514636aaadc5915944cc64c12028516f2) by [@ivanmoskalev](https://github.com/ivanmoskalev))
+- Make codegen more reliable on iOS ([12fccdeea3](https://github.com/facebook/react-native/commit/12fccdeea33324b8ddaa3ac0e2dbf81a44ca1eb2) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix crash in RCTCoreModulesClassProvider during quit ([2f62c2892d](https://github.com/facebook/react-native/commit/2f62c2892d9979f80752350d1b949f2770511956) by [@appden](https://github.com/appden))
+- Fix an issue calling stopSurface in bridgeless mode before surface is started ([81096901a8](https://github.com/facebook/react-native/commit/81096901a8a6da75744cef7b663ccea2ff9c4c09))
+- Move hermes to a separate podspec ([0959ff36d1](https://github.com/facebook/react-native/commit/0959ff36d1f3264e117021eb1999d0bdb71377c3) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix cli bundle platform for Mac Catalyst in `react-native-xcode.sh` ([b496a531e0](https://github.com/facebook/react-native/commit/b496a531e0b4b5d828077b0e7dff43dd28fed5eb) by [@robertying](https://github.com/robertying))
+- Fix `prefetchImageWithMetadata` redbox([f27e305056](https://github.com/facebook/react-native/commit/f27e305056152ff9ad7aeb9018bf289d51719eb9) by [@p-sun](https://github.com/p-sun))
+- Roll out RCTNetworking extraneous NativeModule call removal ([0e0d2e84f5](https://github.com/facebook/react-native/commit/0e0d2e84f56ea233e72d980ff6bd9797df250553) by [@RSNara](https://github.com/RSNara))
+- Fix Hermes + no Flipper build on Xcode 12.5 ([b9243e00e3](https://github.com/facebook/react-native/commit/b9243e00e30be057a45af6ed1916af4328c458e4) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix(hermes): fixed hermes build on iOS ([59abb5f378](https://github.com/facebook/react-native/commit/59abb5f378e116288cdea2f619de0c128bb0b0eb) by [@Titozzz](https://github.com/Titozzz))
+- Fix builds on Xcode 12.5 ([36b58a824e](https://github.com/facebook/react-native/commit/36b58a824ea20daa22fe7c528a3bf0ff4e6a4cb5) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix running React Native project with Xcode 12 in Release on iPhone Simulator ([fdcacd7f76](https://github.com/facebook/react-native/commit/fdcacd7f76ea8ca6dafda32ac431c8adc7bdad00) by [@grabbou](https://github.com/grabbou))
+
+## v0.64.3
+
+### Fixed
+
+- For Android, general fixes to Appearance API and also fixes AppCompatDelegate.setDefaultNightMode(). For iOS, now works correctly when setting window.overrideUserInterfaceStyle ([25a2c608f7](https://github.com/facebook/react-native/commit/25a2c608f790f42cbc4bb0a90fc06cc7bbbc9b95) by [@mrbrentkelly](https://github.com/mrbrentkelly))
+
+## v0.64.2
+
+### Changed
+
+- Find-node.sh supports Homebrew on M1 ([502b819049](https://github.com/facebook/react-native/commit/502b81904998b800f2d960bb4a8e244988c72958) by [@dulmandakh](https://github.com/dulmandakh))
+- Refactor UIManagerHelper.getUIManager to return null when there's no UIManager registered ([b0e8c1eac0](https://github.com/facebook/react-native/commit/b0e8c1eac0a9edda12ecfa264209a8b3222afe27) by [@mdvacca](https://github.com/mdvacca))
+
+### Fixed
+
+- Fix ScrollViewStickyHeader to push up header above it ([d754bdefc6](https://github.com/facebook/react-native/commit/d754bdefc68ff757ac2b5a2ffa38d5aad234d484) by [@kacieb](https://github.com/kacieb))
+
+#### Android specific
+
+- Font family is not apply when secureTextEntry is true ([cda77c77dd83cba07e6c2e56e938c3e4f7faf8fc](https://github.com/facebook/react-native/commit/cda77c77dd83cba07e6c2e56e938c3e4f7faf8fc) by [@hank121314](https://github.com/hank121314))
+- Dimension update events are now properly sent following orientation change ([a6a4d3365f17332e367c34357a07a73f97d6ec83](https://github.com/facebook/react-native/commit/a6a4d3365f17332e367c34357a07a73f97d6ec83) by [@ajpaulingalls](https://github.com/ajpaulingalls))
+
+## v0.64.1
+
+### Fixed
+
+#### iOS specific
+
+- Fixes to ensure Xcode 12.5 builds ([cf8a364767](https://github.com/facebook/react-native/commit/cf8a364767df830d7255339741350bb53ab1a68a), [1c4ac48a55](https://github.com/facebook/react-native/commit/1c4ac48a55cf0703f0c8a32cbb07474a2d126f3e) and [76f45d35e7](https://github.com/facebook/react-native/commit/76f45d35e710f84a1cc44c90bc128494bc4280ce) by [@kelset](https://github.com/kelset))
+
+### Security
+
+- Update validateBaseUrl to use latest regex ([33ef82ce6d](https://github.com/facebook/react-native/commit/33ef82ce6dfd31e1f990d438c925a0e52723e16b) by [@FBNeal](https://github.com/FBNeal))
+
+## v0.64.0
+
+### Breaking
+
+- Enable `inlineRequires` by default in new projects' `metro.config.js`. Gives a performance benefit but slightly different JS execution order ([959365a902](https://github.com/facebook/react-native/commit/959365a90216ee14d0f8b5d2f4653a1ab4c10d7e) by [@GantMan](https://github.com/GantMan))
+- Minimum supported Node version changed to 12 ([4b92e2e53d](https://github.com/facebook/react-native/commit/4b92e2e53d9c79f5b5858b3eb0d1654da79a4a68) by [@safaiyeh](https://github.com/safaiyeh))
+- Remove deprecated `CameraRoll` API (deprecated in 0.61) ([824d3a9770](https://github.com/facebook/react-native/commit/824d3a977057b336d81237ec3cec3a49a9d5e34d) by [@seanyusa](https://github.com/seanyusa))
+- Remove deprecated `CheckBox` component (deprecated in 0.60) ([dff17effe5](https://github.com/facebook/react-native/commit/dff17effe54dc58dda19fcc81ebacbd8f46e9005) by [@poteto](https://github.com/poteto))
+- Removed `DEPRECATED_sendUpdatedChildFrames` prop from `ScrollView` component (deprecated in 0.47) ([345d0c1abb](https://github.com/facebook/react-native/commit/345d0c1abb1afe937a06982c4328caee57820832) by [@ZHUANGPP](https://github.com/ZHUANGPP))
+- On `Image`, `onLoad` event objects' `source.url` is now renamed to `source.uri`. ([74ab8f6e5a](https://github.com/facebook/react-native/commit/74ab8f6e5a61999f1132351ff52df43c91360a09) by [@yungsters](https://github.com/yungsters))
+
+#### Android specific
+
+- Remove support of Android API levels 16 through 20. The new minSDK version will be 21+ moving forward. ([973198667d](https://github.com/facebook/react-native/commit/973198667d7bbbf3b5d8890fc0a53dc99d0bce18), [25a40cbc61](https://github.com/facebook/react-native/commit/25a40cbc61e6c718d8cdea6d67fd82c6309963b1), [f829722b54](https://github.com/facebook/react-native/commit/f829722b54b34f145c41a95edfa5b522c837f9fc), [b133427778](https://github.com/facebook/react-native/commit/b13342777856bc4024d8489de790e7f90cd6b33b), [9b34aa261c](https://github.com/facebook/react-native/commit/9b34aa261c272d96829c9a7d5b166594b3162f9d), and [79d0a7d711](https://github.com/facebook/react-native/commit/79d0a7d71119122d2a2b9954e6038bbee119b8fa) by [@mdvacca](https://github.com/mdvacca); [49f10fd2e5](https://github.com/facebook/react-native/commit/49f10fd2e526b64294777357ab2fef8880739f26) and [a17ff44adc](https://github.com/facebook/react-native/commit/a17ff44adcf003dd4e4ef2301e1f80b77913f712) by [@JoshuaGross](https://github.com/JoshuaGross); [dd4298a377](https://github.com/facebook/react-native/commit/dd4298a3770eee7f66846ef0cc4c41a628b7bf01) by [@safaiyeh](https://github.com/safaiyeh))
+- Fix ReadableArray null annotations. Possibly breaking change for Kotlin apps. ([d76556543f](https://github.com/facebook/react-native/commit/d76556543f96f4d739be3a708b8f6314bb32cc87) by [@dulmandakh](https://github.com/dulmandakh))
+- On `Image`, `onLoad` and `onError` event objects will no longer have an extra `uri` property. ([74ab8f6e5a](https://github.com/facebook/react-native/commit/74ab8f6e5a61999f1132351ff52df43c91360a09) by [@yungsters](https://github.com/yungsters))
+- Deletes the method PlayTouchSound method from UIManagerModule, this method was moved to the SoundManagerModule class. ([d0c4c5eaf9](https://github.com/facebook/react-native/commit/d0c4c5eaf90430c7004621d1596c5f2a55ad03e0) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- Remove `calculateChildFrames` from `RCTScrollView` ([62aa84a325](https://github.com/facebook/react-native/commit/62aa84a3257bd3c513df3fcb4b4eaa350ecf77bb) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+
+### Deprecated
+
+#### Android specific
+
+- Deprecated method `UIManagerModule.getUIImplementation`. This method will not be part of the new architecture of React Native. ([fe79abb32c](https://github.com/facebook/react-native/commit/fe79abb32ca3425ff689b7641d9200461ea8166d) by [@mdvacca](https://github.com/mdvacca))
+
+### Added
+
+- Adds the Hermes runtime bytecode version number to the JS bundle requestURL. This allows Metro with Bytecode to work with prebuilt binaries. ([34c405462f](https://github.com/facebook/react-native/commit/34c405462f890afbccdfeaa7804791f7e9bcaa83))
+- TextInput now supports `onPressIn` and `onPressOut`. ([b7b0e23202](https://github.com/facebook/react-native/commit/b7b0e232028723794af4c79fc6366c483ae2350b) by [@yungsters](https://github.com/yungsters))
+- Allow setting a custom performance logger in XMLHttpRequest ([57b10f759e](https://github.com/facebook/react-native/commit/57b10f759efed786b46cfe082367f929aa2925d3) by [@rubennorte](https://github.com/rubennorte))
+- Add mock for `DevSettings` to jest preset ([a50f736bb6](https://github.com/facebook/react-native/commit/a50f736bb6ade9ea9caae45e41ca4b92f6707b17) by [@MarcoScabbiolo](https://github.com/MarcoScabbiolo))
+- Added Inspector overlay support for Pressable ([8ac467c51b](https://github.com/facebook/react-native/commit/8ac467c51b94c82d81930b4802b2978c85539925) by [@yungsters](https://github.com/yungsters))
+- Introduce NativeModulePerfLogger ([0486640571](https://github.com/facebook/react-native/commit/0486640571c89a0ce067c0437655a6b375308bcd) by [@RSNara](https://github.com/RSNara))
+- Add default `titlePlaceholder` in template configuration. ([8ffa180d80](https://github.com/facebook/react-native/commit/8ffa180d80b9c9acb76a0631b5a709d2c0adcd86) by [@Esemesek](https://github.com/Esemesek))
+- Modified `renderApplication` to forward `initialProps` to `WrapperComponent` ([4f5a092bf6](https://github.com/facebook/react-native/commit/4f5a092bf68a0cd825328ce4a1e6bb41a8fad2e3) by [@rubennorte](https://github.com/rubennorte))
+- Add warning to `VirtualizedList` when incorrectly using nested Lists or custom scroll components ([7f2515ece8](https://github.com/facebook/react-native/commit/7f2515ece8833f7a8adba025ef544013f89ae26f) by [@kacieb](https://github.com/kacieb))
+- Add native module for loading split JS bundles in development ([fca3a39da5](https://github.com/facebook/react-native/commit/fca3a39da5f1c31514e8969738e7b2c2d22bc230) by [@makovkastar](https://github.com/makovkastar))
+- Added `listenerCount()` to `DeviceEventEmitter` and `NativeEventEmitter`. ([b11d6ecbb8](https://github.com/facebook/react-native/commit/b11d6ecbb8bb2f0d6f423be6775e587f4e9b1c4d) by [@yungsters](https://github.com/yungsters))
+
+#### Android specific
+
+- Upgrade Hermes to version 0.7 and turn on ES6 Proxy support ([776a415d98](https://github.com/facebook/react-native/commit/776a415d98dffd04b11200812a32204aa1c5e157) and [bb003816a3](https://github.com/facebook/react-native/commit/bb003816a389b8655c53fa34444417c14516459c) by [@Huxpro](https://github.com/Huxpro), [a28dd38909](https://github.com/facebook/react-native/commit/a28dd3890974d699070f08ab43781324411e6f5c) by [@janicduplessis](https://github.com/janicduplessis))
+- Add support for `shadowColor` on API level >= 28 ([cfa4260598](https://github.com/facebook/react-native/commit/cfa42605989eee5a9de42bdb1259fb7f4d9451fb) by [@IjzerenHein](https://github.com/IjzerenHein))
+- Add `android_hyphenationFrequency` prop to Text component ([0fda91ffff](https://github.com/facebook/react-native/commit/0fda91ffffa4972ebe58e3d0b610692a1286eaa1) and [7d8aeb4955](https://github.com/facebook/react-native/commit/7d8aeb4955a4101ca7e8e486f935309c21ab76ff) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Add `accessibilityHint` to TouchableNativeFeedback ([72285d808d](https://github.com/facebook/react-native/commit/72285d808dfce748287a19e2620d58517a5f76e7) by [@CMDadabo](https://github.com/CMDadabo))
+- Adds support for the `onProgress` event on `Image` ([fa0e6f8051](https://github.com/facebook/react-native/commit/fa0e6f8051d2208af467b789a2a9306ec7ddad76) by [@yungsters](https://github.com/yungsters))
+- ScrollView now supports `contentOffset` ([ed29ba13f9](https://github.com/facebook/react-native/commit/ed29ba13f97f240c91fdf6c0ef3fb601046697b9) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Add an explicit NDK version to Android template ([18ffe12203](https://github.com/facebook/react-native/commit/18ffe12203d03b4e960d61d7bb50cd02bba94663) by [@safaiyeh](https://github.com/safaiyeh))
+- Exposed `getFlex` method as part of ReactShadowNode API ([6570f7887b](https://github.com/facebook/react-native/commit/6570f7887b8824705ae09b5653d631428e17bc5f) by [@mdvacca](https://github.com/mdvacca))
+- Add `\*.hprof` files to gitignore ([69ce9c21d4](https://github.com/facebook/react-native/commit/69ce9c21d433a23ffb9934062b46fa64277ee255) by [@enesozturk](https://github.com/enesozturk))
+- Move `DevSettingsActivity` from main to debug ([d8e6c45782](https://github.com/facebook/react-native/commit/d8e6c45782a5c9132bb7ec315fe0b9ba3999e830) by [@invalid-email-address](https://github.com/invalid-email-address))
+
+#### iOS specific
+
+- `PlatformColor`: add missing `clearColor` ([b7167c23fc](https://github.com/facebook/react-native/commit/b7167c23fc052f8d9f8c27a7f4ad9c5cdf51281e) by [@Simek](https://github.com/Simek))
+- Update template to Xcode 12 ([6685aba462](https://github.com/facebook/react-native/commit/6685aba462699c696cb6ac95626b9592deb292fc) by [@janicduplessis](https://github.com/janicduplessis))
+- Add `importantForAccessibility` to `AccessibilityProps` ([fd660fd0c5](https://github.com/facebook/react-native/commit/fd660fd0c50a0acca730bd1ecd427e574bbe81c7) by [@ZHUANGPP](https://github.com/ZHUANGPP))
+- Allow hotkeys to be used without command key ([f2b9ec7981](https://github.com/facebook/react-native/commit/f2b9ec798172db76dfb55f390e1fcea90dd341da) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Add `disableButtonsIndices` option to `ActionSheetIOS` component ([a7c1c5aff2](https://github.com/facebook/react-native/commit/a7c1c5aff24671bba609caeb82092a8de3d3b232) by [@lukewalczak](https://github.com/lukewalczak))
+- Add `showSoftInputOnFocus` to `TextInput` ([d54113d8c4](https://github.com/facebook/react-native/commit/d54113d8c4bcd0e0c7a09acca60819724eb69926) by [@gurs1kh](https://github.com/gurs1kh))
+- Added hostname to loading banner. ([96999339b6](https://github.com/facebook/react-native/commit/96999339b6a7aeabd0cd706ef7736fd91d9ecf80) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Allow iOS `PlatformColor` strings to be ObjC or Swift UIColor selectors ([25793eab56](https://github.com/facebook/react-native/commit/25793eab56217a9961620761ea65ec2fcb97dcb0) by [@tom-un](https://github.com/tom-un))
+- Add Dark Mode support to loading banner ([94c45af136](https://github.com/facebook/react-native/commit/94c45af136f44245b5f2e56bded60c8ebd9b1235) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Allow image loaders to enable/disable image telemetry ([e37708dfb6](https://github.com/facebook/react-native/commit/e37708dfb605dd9ee9f4b2dac5d841d98b7d376c) by [@p-sun](https://github.com/p-sun))
+- Add `RCTDevSplitBundleLoader` native module ([ad879e50bc](https://github.com/facebook/react-native/commit/ad879e50bcd51caca76b1073720f2b63df485ff1) by [@cpojer](https://github.com/cpojer))
+
+### Changed
+
+- Update flipper to 0.75.1 ([3399896ae7](https://github.com/facebook/react-native/commit/3399896ae756719b238e837001077a46508849be) by [@janicduplessis](https://github.com/janicduplessis))
+- Refined Flow type for `Text` component. ([a911efaecd](https://github.com/facebook/react-native/commit/a911efaecd005237816ddb480218eb5388460d16) by [@yungsters](https://github.com/yungsters))
+- Changed type definition of IPerformanceLogger from object to interface ([b90f4d978f](https://github.com/facebook/react-native/commit/b90f4d978fa27e37926d9f4a1d13c9168243798c) by [@rubennorte](https://github.com/rubennorte))
+- Removed `fbjs` dependency from `react-native`. ([54e19a6b7f](https://github.com/facebook/react-native/commit/54e19a6b7f217ffc0611e660f2a6b1a8ad14775b) by [@yungsters](https://github.com/yungsters))
+- Refined `ImageSource` Flow type for array-variant and headers. ([a0dc252dc8](https://github.com/facebook/react-native/commit/a0dc252dc89699f7bd0d733642b98762d0db423a) by [@yungsters](https://github.com/yungsters))
+- Some warnings changed to use `console.warn` without the "Warning:" prefix. ([982272932c](https://github.com/facebook/react-native/commit/982272932cee3be599076bd18b290bc812285533) by [@yungsters](https://github.com/yungsters))
+- Core/Differ: detect and optimize reparenting ([1e4d8d902d](https://github.com/facebook/react-native/commit/1e4d8d902daca8e524ba67fc3c1f4b77698c4d08) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Improve "not a registered callable module" error message ([e27d656ef3](https://github.com/facebook/react-native/commit/e27d656ef370958c864b052123ec05579ac9fc01) by [@vonovak](https://github.com/vonovak))
+- Use `VirtualizedList`'s `onEndReachedThreshold` default value when null is provided ([10b4b9505a](https://github.com/facebook/react-native/commit/10b4b9505a51f8bf3fbc12d296a087b784a9201a) by [@fatalsun](https://github.com/fatalsun))
+- Migrate large amount of modules to flow strict and strict-local ([4409642811](https://github.com/facebook/react-native/commit/4409642811c787052e0baeb92e2679a96002c1e3) by [@rubennorte](https://github.com/rubennorte))
+- Enable exact objects by default in the project template Flow config ([050a7dd019](https://github.com/facebook/react-native/commit/050a7dd019be435b848de0a86030599d83f8791d) by [@rubennorte](https://github.com/rubennorte))
+- Minor fix in Hermes Inspector cli tool help message ([6ffb983f83](https://github.com/facebook/react-native/commit/6ffb983f83afdee5d9290c683c5060d2a959818d))
+- Updated the React Hooks ESLint Plugin in the community ESLint config ([ac87e90fa5](https://github.com/facebook/react-native/commit/ac87e90fa517676440c1adf9575cb48f90de8069) by [@gaearon](https://github.com/gaearon))
+- Don't scroll to `initialScrollIndex` if `contentOffset` is provided to the same `VirtualizedList` ([3346ac7f96](https://github.com/facebook/react-native/commit/3346ac7f96d2fd3f77dca5acb283b28e02ad21fa) by [@markv](https://github.com/markv))
+- Migrated `VirtualizedList` legacy context implementation to `React.Context`. ([7bd694fc6f](https://github.com/facebook/react-native/commit/7bd694fc6f4bb027b6d7ee04034cad41a43e5695) by [@yungsters](https://github.com/yungsters))
+- Changed Flow type of `BackHandler` to be more specific. ([a903d1b86a](https://github.com/facebook/react-native/commit/a903d1b86ab56163abcdcb584f335949ba0c85fc) by [@Naturalclar](https://github.com/Naturalclar))
+- Updated transitive dependency `kind-of` to 6.0.3 to resolve vulnerability ([abde0154ba](https://github.com/facebook/react-native/commit/abde0154ba4247d2c9f1451b5de8b3cba1abd316) by [@TheSavior](https://github.com/TheSavior))
+- Upgrade eslint-config dependencies. ([93019dc190](https://github.com/facebook/react-native/commit/93019dc19072776053a88f9ab595e435b83fead0) by [@wcandillon](https://github.com/wcandillon))
+- Upgrade to Jest 25 ([f248ba1c8b](https://github.com/facebook/react-native/commit/f248ba1c8b15a12a0c590ce8211855cde31defe8) by [@cpojer](https://github.com/cpojer))
+- Use `React.Children.count` for counting children of `TextInput` ([92160f3144](https://github.com/facebook/react-native/commit/92160f3144dcfa510ff14b5f2eb231643f107af9) by [@vonovak](https://github.com/vonovak))
+- Annotate <Image> components in QPL logging using ImageAnalyticsTagContext ([60b7a3085c](https://github.com/facebook/react-native/commit/60b7a3085c0d83c126023b98e666ecda6f769454) by [@p-sun](https://github.com/p-sun))
+- Upgrade to React 17 ([24bca492c3](https://github.com/facebook/react-native/commit/24bca492c349ab90d40f9444df0f477145a4c311) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Made promise polyfill conditionalized on Hermes ([0a28b34dac](https://github.com/facebook/react-native/commit/0a28b34dacb91a7e74cd5feec59cf8f8fb0487c9) by [@Huxpro](https://github.com/Huxpro))
+- Flow: Remove type union in PickeriOS/PickerNativeComponent ([3113e47b9b](https://github.com/facebook/react-native/commit/3113e47b9bc92e3b0efb96db776f650848093dfc) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Flow: export ColorValue from StyleSheet instead of StyleSheetTypes ([0a67133124](https://github.com/facebook/react-native/commit/0a6713312467d3f5b5dc993e91db9e7b1aa4fc8c))
+- Forward URL parameters from main bundle to hot reloaded bundles ([b4785e5144](https://github.com/facebook/react-native/commit/b4785e514430dc3ba45ed6d136ec63574be88e26) by [@motiz88](https://github.com/motiz88))
+- Add package name / bundle ID to bundle URL in development ([9b5359133b](https://github.com/facebook/react-native/commit/9b5359133b46b16be200e37dba0b03d82b73b4a0) by [@motiz88](https://github.com/motiz88))
+
+#### Android specific
+
+- Bump Gradle Wrapper to 6.7 ([8988a073b4](https://github.com/facebook/react-native/commit/8988a073b48df0f0cd4a7126edf1a421f4537d58), [5bc67b658e](https://github.com/facebook/react-native/commit/5bc67b658e581e0176deb7ed95b51a5c1cbe65c2), and [3a8559b86c](https://github.com/facebook/react-native/commit/3a8559b86c3c0b0ab6d6c6904c6efd97ab2c7b38) by [@friederbluemle](https://github.com/friederbluemle); [e559aee642](https://github.com/facebook/react-native/commit/e559aee64275126eaa135486e6bf09138be70f4d) and [e9fd93f53f](https://github.com/facebook/react-native/commit/e9fd93f53f8b14f921578cd401b3a6529e4e0c9f) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump Android Gradle Plugin to 4.1.0 ([cf8368f204](https://github.com/facebook/react-native/commit/cf8368f2046ae1ff0f6b02bb6857eeeff8f57d7d) and [553fb8b28d](https://github.com/facebook/react-native/commit/553fb8b28d0ad332d75a944d244832be3390b6ba) by [@friederbluemle](https://github.com/friederbluemle), [dfa9db49e3](https://github.com/facebook/react-native/commit/dfa9db49e34c6f54c04148b877de938bf103a059) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump Okio to 1.17.5 ([1e78e0655d](https://github.com/facebook/react-native/commit/1e78e0655d53ac947f523bcadf9c5339ab07bbb8) by [@dulmandakh](https://github.com/dulmandakh))
+- Make Android versionCodeOverride for new apps using the template human-readable ([e1bf515ae8](https://github.com/facebook/react-native/commit/e1bf515ae8e77fb24f76037d9f22e903799fb637) by [@gedeagas](https://github.com/gedeagas))
+- Bump SoLoader to 0.9.0 ([7465239230](https://github.com/facebook/react-native/commit/7465239230881f453d64364d51272f28614c8653) by [@dulmandakh](https://github.com/dulmandakh))
+- Update Okhttp to version 3.12.12 ([0f6fcb2c27](https://github.com/facebook/react-native/commit/0f6fcb2c2788dc7150f6c3673a8f4f9d8f929441) by [@halaei](https://github.com/halaei))
+- Update Android build tools to 29.0.3 ([e629e94b46](https://github.com/facebook/react-native/commit/e629e94b466ebbd5924b1d4493c026004dad707d) by [@friederbluemle](https://github.com/friederbluemle))
+- ViewCommands on Android now execute earlier, as a perf optimization. ([c6b9cc36da](https://github.com/facebook/react-native/commit/c6b9cc36da4f7d190d05122048aa4ada9c152b73) by [@JoshuaGross](https://github.com/JoshuaGross))
+- Effect of `blurRadius` now more closely matches other platforms. ([64860972be](https://github.com/facebook/react-native/commit/64860972be828fb601acbef11b4c2dbc672dee8a) by [@yungsters](https://github.com/yungsters))
+- Migrate Android tests to Robolectric v4 ([6a78b32878](https://github.com/facebook/react-native/commit/6a78b32878aea1b0dac98ff36378fb9392d4aeb1) by [@jselbo](https://github.com/jselbo), [d373a8d88c](https://github.com/facebook/react-native/commit/d373a8d88c30af910133d97ae973d256c4479929) and [18f7abae07](https://github.com/facebook/react-native/commit/18f7abae07b8ea60c7530a5d9f34541c50f5edd9) by [@fkgozali](https://github.com/fkgozali))
+- Get ripple drawables by id instead of by name ([c8ed2dbbb2](https://github.com/facebook/react-native/commit/c8ed2dbbb287deed05a8782fb8665c1edf45bbac) by [@vonovak](https://github.com/vonovak))
+- `TextInput`: Set `caretHidden` default value to `true` on Xiaomi devices to fix the crash ([b5b4a70410](https://github.com/facebook/react-native/commit/b5b4a7041027fd767850a564b5d80fa4a98ba2a2))
+- Update loading banner text and colors ([6afc984e81](https://github.com/facebook/react-native/commit/6afc984e8187ac91f780f125dad4421576131c83) by [@makovkastar](https://github.com/makovkastar))
+- Declare all attrs used in res targets ([05abbd245c](https://github.com/facebook/react-native/commit/05abbd245c2326b12d24698bb13007a7ce11e586) by [@IanChilds](https://github.com/IanChilds))
+
+#### iOS specific
+
+- Upgraded JSI with a new HERMES_ENABLE_BITCODE flag ([311d4e9ef0](https://github.com/facebook/react-native/commit/311d4e9ef080aa429f840236cc23c013c0ae644c) by [@grabbou](https://github.com/grabbou))
+- Remove main queue execution of constantsToExport in NativeModules ([d7ac21cec5](https://github.com/facebook/react-native/commit/d7ac21cec5492e180fbf3817af7be64ab121cb75) by [@RSNara](https://github.com/RSNara))
+- Updated loading banner messages and color ([3729fe8de0](https://github.com/facebook/react-native/commit/3729fe8de0109c80014f6c20fae8b949b3628de2) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Speed up loading banner animations ([3fb37b4326](https://github.com/facebook/react-native/commit/3fb37b4326090def3aea43bd8189a0df648ccb34) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Shrink loading bar down to not cover safe area. ([f0dfd35108](https://github.com/facebook/react-native/commit/f0dfd35108dd3f092d46b65e77560c35477bf6ba) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Build macOS framework and add CocoaPods podspec ([ffa3d7f638](https://github.com/facebook/react-native/commit/ffa3d7f638c820dc208320193e6ba65667d751eb) by [@alloy](https://github.com/alloy))
+- Set `NSAllowsArbitraryLoads` to `false` by default in template ([7b61a968fd](https://github.com/facebook/react-native/commit/7b61a968fd774a6ca2196a731b6cec4282ab25cc) by [@wddwycc](https://github.com/wddwycc))
+
+### Removed
+
+- `Text.viewConfig` is no longer exported. ([06ce643565](https://github.com/facebook/react-native/commit/06ce64356594a921cd9ae4f71c15dd56dd0e53a3) by [@yungsters](https://github.com/yungsters))
+- Removed `once()` and `removeCurrentListener()` from `DeviceEventEmitter` and `NativeEventEmitter`. ([87a2e29f59](https://github.com/facebook/react-native/commit/87a2e29f5928c2e09ac9a98c54732d5f697d8e61) by [@yungsters](https://github.com/yungsters))
+- Removed tvOS related files from the template ([df03228a61](https://github.com/facebook/react-native/commit/df03228a61881cdfa520fa6d8a9d9cfb6e77fdde) by [@Naturalclar](https://github.com/Naturalclar))
+
+#### Android specific
+
+- Remove undocumented ColorAndroid function ([411c344794](https://github.com/facebook/react-native/commit/411c3447946c18743476e7d613358233464d6f58) by [@tom-un](https://github.com/tom-un))
+
+### Fixed
+
+- Fix handling of very deeply nested data across the bridge ([a8c90e6af4](https://github.com/facebook/react-native/commit/a8c90e6af4a4e5ac115016a3e8977ecff90e99a0) by [@mhorowitz](https://github.com/mhorowitz))
+- Prevent TypeError in TaskQueue when cancelling a started but not resolved promise. ([14042fb76f](https://github.com/facebook/react-native/commit/14042fb76fee3573529d590ec6f8ad216aa0b820) by [@robwalkerco](https://github.com/robwalkerco))
+- Fix typo in `ActionSheetManager` invariant message ([9c353b5ab0](https://github.com/facebook/react-native/commit/9c353b5ab060be9392a7aaf437bba4ffc56d78ca) by [@sweatherall](https://github.com/sweatherall))
+- `TouchableHighlight` now correctly fires `onPress` when pressed for >500ms, when `onLongPress` is not supplied. ([bdf3c79110](https://github.com/facebook/react-native/commit/bdf3c7911007f547101d753903da11ea4ee095f9) by [@yungsters](https://github.com/yungsters))
+- `Pressability` now consistently fires `onPressIn` and `onPressOut`, even without an `onPress`. ([0c392bc405](https://github.com/facebook/react-native/commit/0c392bc4052784de7497bf7b5eaf207b02409877) by [@yungsters](https://github.com/yungsters))
+- Remove extraneous argument for `onResponderGrant` Flow type on `Text`. ([49015b0f5b](https://github.com/facebook/react-native/commit/49015b0f5bda83794b88b17dd3cbd834fa235b72) by [@yungsters](https://github.com/yungsters))
+- Prevent `ScrollView` From Stealing Responder Capture When Using Physical Keyboard ([93e7a7a70d](https://github.com/facebook/react-native/commit/93e7a7a70dc2f41fccd3c1e4cce80d92913c4243) by [@NickGerleman](https://github.com/NickGerleman))
+- Fix failure when debugging code in a browser; was caused by `performanceNow()` function. ([db474a47b7](https://github.com/facebook/react-native/commit/db474a47b70e4fa50f594f4dea8a2f531ca9fc07) by [@zerkella](https://github.com/zerkella))
+- Fix test renderer mocks to use the `displayName` more often. ([4b935ae95f](https://github.com/facebook/react-native/commit/4b935ae95f09e4a1eb1e5ac8089eb258222a0f8b) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Make sure `LogBox` is not included in production bundles ([d3b937f990](https://github.com/facebook/react-native/commit/d3b937f990012a31b8d917e220f4ed2f0a4fd2d3) by [@janicduplessis](https://github.com/janicduplessis))
+- Mark `force` as an optional property of the PressEvent object ([ad2f98df8f](https://github.com/facebook/react-native/commit/ad2f98df8f2ad8aff1dcdc11b187f35b372e3f0e) by [@Simek](https://github.com/Simek))
+- Fix invalid `event` objects from `onPressOut` in certain cases ([2c600b7c5a](https://github.com/facebook/react-native/commit/2c600b7c5a0e79bfc632b39b471e6ba774d7b0b3) by [@yungsters](https://github.com/yungsters))
+- When Hermes debugger is enabled continue to send log messages to the console ([77ef8f881f](https://github.com/facebook/react-native/commit/77ef8f881f2e4067894b412f308e2a80042c946f) by [@MartinSherburn](https://github.com/MartinSherburn))
+- Handle nullish `initialProps` correctly in `renderApplication` ([26c120c632](https://github.com/facebook/react-native/commit/26c120c6329d45e27318d82aaf5a50338bd6fa7d) by [@rubennorte](https://github.com/rubennorte))
+- Fix Flow type of Touchable{Opacity,Bounce,Highlight} being exported as `any` ([de7f69a58e](https://github.com/facebook/react-native/commit/de7f69a58ed4e18887f4b9d4d853293fb136afb7) by [@draperunner](https://github.com/draperunner))
+- Clarified the boundaries in error message of `scrollToIndex` ([78d2b3c813](https://github.com/facebook/react-native/commit/78d2b3c8138f54c2433958b0ad6b9f52ca59115a) by [@sasurau4](https://github.com/sasurau4))
+- Fix jsi cmake include dirs ([f5d00e5a29](https://github.com/facebook/react-native/commit/f5d00e5a2922d35a0b44935592da5700518c422b) by [@ryantrem](https://github.com/ryantrem))
+- Fix race condition in `KeyboardAvoidingView` ([b08fff6f86](https://github.com/facebook/react-native/commit/b08fff6f869e00c20c0dcdf7aca71284c2f276f0) by [@sammy-SC](https://github.com/sammy-SC))
+- Fix clone issue in YogaNodeJNIBase ([2707c17b07](https://github.com/facebook/react-native/commit/2707c17b0727f241d404f4a21090021c27c66f2c) by [@pasqualeanatriello](https://github.com/pasqualeanatriello))
+- Fix "Cannot read property 'getNativeScrollRef' of undefined" in createAnimatedComponent ([629e10e91b](https://github.com/facebook/react-native/commit/629e10e91b728c4251f1ed78a50df62820ce0dc4) by [@sammy-SC](https://github.com/sammy-SC))
+
+#### Android specific
+
+- Fix App Bundle/Release build missing index.android.bundle with gradle plugin 4.1.0/gradle 6.5 ([53f55001af](https://github.com/facebook/react-native/commit/53f55001afbf07494de0df064a92dfdd42f37c98) by [@tomoima525](https://github.com/tomoima525))
+- Do not crash when `ScrollView` `snapToOffsets` array is empty ([d238da71aa](https://github.com/facebook/react-native/commit/d238da71aa8cdd7ce519de617a9a200406da794c) by [@makovkastar](https://github.com/makovkastar))
+- Fixed `TextInput` not being selectable in `removeClippedSubviews` FlatLists ([12a50c0a44](https://github.com/facebook/react-native/commit/12a50c0a442b78d9095398d955bec307cfcb0f69) by [@hsource](https://github.com/hsource))
+- Make nested `Text` components accessible as links ([b352e2da81](https://github.com/facebook/react-native/commit/b352e2da8137452f66717cf1cecb2e72abd727d7) by [@ejanzer](https://github.com/ejanzer))
+- Move selection to the end of the text input on accessibility click ([f0e80ae229](https://github.com/facebook/react-native/commit/f0e80ae2292ebf7ce32666900007845724844fb5) by [@ejanzer](https://github.com/ejanzer))
+- Fix secure text entry setting to always hide text ([f19372361f](https://github.com/facebook/react-native/commit/f19372361f22201a453ff38eb69c5fa052b57474) by [@smeenai](https://github.com/smeenai))
+- Make promise NativeModule methods dispatch to NativeModules thread ([9c35b5b8c4](https://github.com/facebook/react-native/commit/9c35b5b8c4710dfe6a4b689a5565aa78ae5b37d3) by [@RSNara](https://github.com/RSNara))
+- Fix `NoSuchMethodException` when calling `DisplayMetricsHolder.initDisplayMetrics` in Android API level <= 16 (though those Android versions are no longer supported) ([35128f45d1](https://github.com/facebook/react-native/commit/35128f45d1ba97010e437423d14fa5ea0faf5fa3) by [@mdvacca](https://github.com/mdvacca))
+- Fixed error message in `DebugCorePackage.getModule` ([a71f37b951](https://github.com/facebook/react-native/commit/a71f37b951ca49c180b037ea8955851654b09afa) by [@TheWirv](https://github.com/TheWirv))
+- ScrollView, HorizontalScrollView: do not ignore `null` `contentOffset` prop ([9e85b7ad88](https://github.com/facebook/react-native/commit/9e85b7ad889900cd57cd2f82286aa8e034b0a32b) by [@vonovak](https://github.com/vonovak))
+- Picker - fix usage of setNativeSelectedPosition in onSelect ([078e386024](https://github.com/facebook/react-native/commit/078e386024474edc9b464f6c0fd8a1429e922289))
+- Fix intermittent crash of ReactSlider on Android ([32888a8b4a](https://github.com/facebook/react-native/commit/32888a8b4a9d75b9d3f6cc4578ce6a6ccd932407) by [@mdvacca](https://github.com/mdvacca))
+- Use actual constructor when throwing GradleScriptException ([8ef0f1d90b](https://github.com/facebook/react-native/commit/8ef0f1d90bbb2fa98e48ce89281718e5ac79365a))
+- Fix `skewX` transform decomposition ([797367c089](https://github.com/facebook/react-native/commit/797367c0890a38ec51cfaf7bd90b9cc7db0e97c7) by [@wcandillon](https://github.com/wcandillon))
+- Allow passing partial contentOffset to ScrollView on Android ([0348953914](https://github.com/facebook/react-native/commit/03489539146556ec5ba6ba07ac338ce200f5b0f4) by [@janicduplessis](https://github.com/janicduplessis))
+- Check if NativeModules returned from CatalystInstanceImpl.getNativeModule are null before using them. ([9263eb5d38](https://github.com/facebook/react-native/commit/9263eb5d3864a42925b699343db2c09cc8934ed0) by [@RSNara](https://github.com/RSNara))
+- Fix calculating view position within the window in split-screen mode ([b020e7c440](https://github.com/facebook/react-native/commit/b020e7c440f58dabd4cc64b72869f3ae9680ef30) by [@jakubkinst](https://github.com/jakubkinst))
+- Text layout no longer ignores parent bounds ([025be8148a](https://github.com/facebook/react-native/commit/025be8148a9abc533a8ae108e49cfd3f4512c581) by [@yungsters](https://github.com/yungsters))
+- Fixed excessive space in Text view with word-wrapping ([dda7f82261](https://github.com/facebook/react-native/commit/dda7f82261cc5684564e2c67071c13e379985308) by [@yungsters](https://github.com/yungsters))
+- `Pressable`: ripple should be applied even when borderless == false ([44ec762e41](https://github.com/facebook/react-native/commit/44ec762e41029bf43530b1ff9b36ca3512c526e2) by [@vonovak](https://github.com/vonovak))
+- Fix `ReadableNativeMap.getNullableValue` to match signature and return null instead of throwing ([1015194ba1](https://github.com/facebook/react-native/commit/1015194ba1a81eab99000d589914100e4b9ea037) by [@dulmandakh](https://github.com/dulmandakh))
+- `Picker`: set color filter so that the arrow matches the text color ([bb8d0f5732](https://github.com/facebook/react-native/commit/bb8d0f57328a20c942991f2d19d86639a7791924) by [@ejanzer](https://github.com/ejanzer))
+- `Modal`: fix crash when updating props after the activity disappeared ([7abcaafd66](https://github.com/facebook/react-native/commit/7abcaafd6600535825aa8330af7290ba8acea245) by [@mdvacca](https://github.com/mdvacca))
+- Fix crash while measuring ReactSlider in Android API < 21 ([75e6f7961f](https://github.com/facebook/react-native/commit/75e6f7961fb3f6de6afbe79d49c42ad55fba1673) by [@mdvacca](https://github.com/mdvacca))
+- Fix measureLayout function for VirtualTexts ([5c48c94f8c](https://github.com/facebook/react-native/commit/5c48c94f8c0441bc78a007f0ea0c5b2763ff6875) by [@mdvacca](https://github.com/mdvacca))
+- Smoother scrolling in ScrollView, HorizontalScrollView ([10314fe621](https://github.com/facebook/react-native/commit/10314fe621e1649654e83df197adf657e0ca8363) by [@JoshuaGross](https://github.com/JoshuaGross))
+
+#### iOS specific
+
+- Synchronize RCTImageLoader loaders initialization ([edb6fa7979](https://github.com/facebook/react-native/commit/edb6fa79791beb804e450ca4a562a248abf730e5) by [@p-sun](https://github.com/p-sun))
+- Make sure js bundle still exists at bundle-output path ([3a41f69f9c](https://github.com/facebook/react-native/commit/3a41f69f9ce1ab778112c0727a69a753fe36c77a) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix crash in WebSocket module ([748aa13747](https://github.com/facebook/react-native/commit/748aa137472d6080427f74bb686c795b925c7d43) by [@marksinkovics](https://github.com/marksinkovics))
+- Align multi-line `TextInput` `onSubmitEditing` behavior: don't call onSubmitEditing when blurOnSubmit=false ([521b16730d](https://github.com/facebook/react-native/commit/521b16730dd07d80261086c2f33eed2a766d404e) by [@tido64](https://github.com/tido64))
+- Fix passing react native path in Podfile template ([e599d6c5d3](https://github.com/facebook/react-native/commit/e599d6c5d338c1b4d1a0d988e0d9ff83c179fb54) by [@janicduplessis](https://github.com/janicduplessis))
+- Call [RCTEventEmitter stopObserving] on correct method queue ([23717e48af](https://github.com/facebook/react-native/commit/23717e48aff3d7fdaea30c9b8dcdd6cfbb7802d5) by [@appden](https://github.com/appden))
+- Persist Enable Fast Refresh across app launches ([845e9eaafb](https://github.com/facebook/react-native/commit/845e9eaafb08b4ca87a9987e840798e0ba011676) by [@stigi](https://github.com/stigi))
+- Fix xcodebuild warnings in React-Core ([cb719a16cc](https://github.com/facebook/react-native/commit/cb719a16cc496b0cdb09d8d971b5e95cc8863b77))
+- Fix that RCTModalHostView can't be dismissed while being presented ([8933724d7d](https://github.com/facebook/react-native/commit/8933724d7d0f9ec012b2708d8e737f02f03e4a6f) by [@Mi-ZAZ](https://github.com/Mi-ZAZ))
+- Fix "'RCTBlobPlugins.h' file not found" when building iOS ([aaeffdb49a](https://github.com/facebook/react-native/commit/aaeffdb49a8412a98bb52477933fd208d1dcc096) by [@tido64](https://github.com/tido64))
+- Improved text rendering on macOS Catalyst ([694e22de84](https://github.com/facebook/react-native/commit/694e22de847e5f789b7d5ffe472b63aabbd7a5b0) by [@andymatuschak](https://github.com/andymatuschak))
+- Fixed showing Alert while closing a Modal ([f319ff321c](https://github.com/facebook/react-native/commit/f319ff321c4b7c0929b99e3ebe7e1ce1fa50b34c) by [@devon94](https://github.com/devon94))
+- Fix `refreshControl` messes up navigationBar largeTitles ([1b0fb9bead](https://github.com/facebook/react-native/commit/1b0fb9bead4d158d14df5a994423d06716b5e377) by [@yogevbd](https://github.com/yogevbd))
+- When Sec-WebSocket-Protocol header is empty vaulue, IIS server will return error 502. ([fd85b84a86](https://github.com/facebook/react-native/commit/fd85b84a863cea9f33e5b39230b27af53c1307e7) by [@bill2004158](https://github.com/bill2004158))
+- Fix multiline `TextInput` crash when inserting/removing lots of text ([15dda0ab5a](https://github.com/facebook/react-native/commit/15dda0ab5a491dcc83539f9ef32c9896be41074a) by [@tido64](https://github.com/tido64))
+- Group accessible views using the view hierarchy ([e2fd9d4f22](https://github.com/facebook/react-native/commit/e2fd9d4f22cda85c995c38875fc3a2a20a198c4a) by [@p-sun](https://github.com/p-sun))
+- Fix Flow types for StatusBar showHideTransition ([e5a8f4270e](https://github.com/facebook/react-native/commit/e5a8f4270ea71749a5ce6bd7ae198f695edb4307) by [@Simek](https://github.com/Simek))
+- Better error message when missing entry file ([e73208e2ca](https://github.com/facebook/react-native/commit/e73208e2ca59a2cf6a8a9c5e4e5b33afb5131f09) by [@petrbela](https://github.com/petrbela))
+- Fix imports in `RCTUtilsUIOverride.h` ([b7e8f66795](https://github.com/facebook/react-native/commit/b7e8f667953c2bc65c25b00968051c063a684d01) by [@Fanghao](https://github.com/Fanghao))
+- Fix skewX/skewY/perspective/matrix transforms. ([4b956fe5a6](https://github.com/facebook/react-native/commit/4b956fe5a6b3a05b1c2883efc82a95c2524aeb56) by [@wcandillon](https://github.com/wcandillon))
+- Fix module lookup race condition on bridge invalidation. ([8ad810717e](https://github.com/facebook/react-native/commit/8ad810717ee1769aa5ff6c73e0c9bfa8c43a3bac) by [@fkgozali](https://github.com/fkgozali))
+- Fix duration calculation for `RCTUIImageViewAnimated` ([12f8b2598f](https://github.com/facebook/react-native/commit/12f8b2598fa46533ea59834a0225cc9e36b20111))
+- Cap loading banner percentage at 100% ([e27542bb13](https://github.com/facebook/react-native/commit/e27542bb13d1f8f422cd307c4d43148c8bd82bc0) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Delay loading banner message to prevent flashing messages ([2b771b0129](https://github.com/facebook/react-native/commit/2b771b0129f2ef921c7cdb9c952e004f931927c3) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Do not update loading banner message while hiding the banner ([131c497aa2](https://github.com/facebook/react-native/commit/131c497aa2c081f9dfd03e45b25fb7ae388b98bd) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Search en0 through en8 for the Metro Bundler's IP address when generating iOS debug builds ([b2b23a2017](https://github.com/facebook/react-native/commit/b2b23a20170d12f6d8bf2733b93d7f9ab9c6cb15))
+- Migrate `frameInterval` to `preferredFramesPerSecond`, fixing Xcode warnings ([335f3aabe2](https://github.com/facebook/react-native/commit/335f3aabe28ec8f9b96fd695edabf0d5ab0b402a) by [@safaiyeh](https://github.com/safaiyeh))
+- Animated image should animate at the same speed regardless of framerate ([b0d0e51a77](https://github.com/facebook/react-native/commit/b0d0e51a7724dcefe3ce1c2dfb334a731b2a385c) by [@p-sun](https://github.com/p-sun))
+- Fix logging lifecycle when image is scrolled out and immediately back in ([1f95c9b62e](https://github.com/facebook/react-native/commit/1f95c9b62e306fdaf0ef351b02fb79713941259c) by [@p-sun](https://github.com/p-sun))
+- Fix image instrumentation lifecycle on image cancel ([6cba4d2006](https://github.com/facebook/react-native/commit/6cba4d20068ef4ca9b9832e4c5cf71a7e361ddbe) by [@p-sun](https://github.com/p-sun))
+- Break retain cycle in RCTLegacyViewManagerInteropCoordinator ([8f90ce26a5](https://github.com/facebook/react-native/commit/8f90ce26a55f2b1aab42d7c44b0d527321fa8c21) by [@sammy-SC](https://github.com/sammy-SC))
+- Respect port information if available from RCTBundleURLProvider ([7d44959940](https://github.com/facebook/react-native/commit/7d44959940b7f7b03feefde0e9a15382f04dad6d) by [@jimmy623](https://github.com/jimmy623))
+- Remove port from JSLocation when returning packager host ([12543d557f](https://github.com/facebook/react-native/commit/12543d557f00545a719b4dfd76cc0d0adfa37a01) by [@jimmy623](https://github.com/jimmy623))
+- Remove requestToken being nil check from [RCTNetworkTask validateRequestToken] ([ffc90c7f92](https://github.com/facebook/react-native/commit/ffc90c7f92e63e1a53ed107833e3deed492ab435) by [@sammy-SC](https://github.com/sammy-SC))
+- Remove unnecessary packager running check when saved JSLocation is empty ([bbb7bef539](https://github.com/facebook/react-native/commit/bbb7bef539f418bdb452e40987d399c9369df5a2) by [@jimmy623](https://github.com/jimmy623))
+- Check whether packager is running in RCTBundleURLProvider for saved JSLocation ([3d882495d5](https://github.com/facebook/react-native/commit/3d882495d5e4415c2ebb8f4280e18e16025e0736) by [@jimmy623](https://github.com/jimmy623))
+- Fix crash inside RCTRedBox when trying to present same UIViewController twice ([46c77dc296](https://github.com/facebook/react-native/commit/46c77dc296dfab754356cd9346a01dae8d4869f4) by [@sammy-SC](https://github.com/sammy-SC))
+- Fix outdated CocoaPods version requirement in a React.podspec ([8a6ac1fef3](https://github.com/facebook/react-native/commit/8a6ac1fef369071405a3bf14a89924c66f28d192) by [@sunnylqm](https://github.com/sunnylqm))
+
+## v0.63.4
+
+### Changed
+
+- [Maintenance] Bump detox to xcode 12 compatible version ([ccd4efac90](https://github.com/facebook/react-native/commit/ccd4efac90191e57b1dd6e7fff0da13e5764bcc4) by [@kelset](https://github.com/kelset))
+
+#### Android specific
+
+- Bump SoLoader to 0.9.0 ([7465239230](https://github.com/facebook/react-native/commit/7465239230881f453d64364d51272f28614c8653) by [@dulmandakh](https://github.com/dulmandakh))
+- Update Okhttp to version 3.12.12 ([0f6fcb2c27](https://github.com/facebook/react-native/commit/0f6fcb2c2788dc7150f6c3673a8f4f9d8f929441) by [@halaei](https://github.com/halaei))
+- ScrollView now supports `contentOffset` ([ed29ba13f9](https://github.com/facebook/react-native/commit/ed29ba13f97f240c91fdf6c0ef3fb601046697b9) by [@JoshuaGross](https://github.com/JoshuaGross))
+
+### Fixed
+
+#### Android specific
+
+- Fix ReadableNativeMap.getNullableValue to match signature ([1015194ba1](https://github.com/facebook/react-native/commit/1015194ba1a81eab99000d589914100e4b9ea037) by [@dulmandakh](https://github.com/dulmandakh))
+- Dimension update events are now properly sent following orientation change ([0e9296b95d](https://github.com/facebook/react-native/commit/0e9296b95da06789121f052e6cd6d7cac808464c) by [@ajpaulingalls](https://github.com/ajpaulingalls))
+- Font family is not apply when secureTextEntry is true. ([00d9deaf6b](https://github.com/facebook/react-native/commit/00d9deaf6ba26c605694d303bb0cb072fceae5a1) by [@hank121314](https://github.com/hank121314))
+- Fix App Bundle/Release build missing index.android.bundle with gradle plugin 4.1.0/gradle 6.5 ([53f55001af](https://github.com/facebook/react-native/commit/53f55001afbf07494de0df064a92dfdd42f37c98) by [@tomoima525](https://github.com/tomoima525))
+- ScrollView, HorizontalScrollView: do not ignore `null` `contentOffset` prop ([9e85b7ad88](https://github.com/facebook/react-native/commit/9e85b7ad889900cd57cd2f82286aa8e034b0a32b) by [@vonovak](https://github.com/vonovak))
+- SkewX transforms ([797367c089](https://github.com/facebook/react-native/commit/797367c0890a38ec51cfaf7bd90b9cc7db0e97c7) by [@wcandillon](https://github.com/wcandillon))
+- Allow passing partial contentOffset to ScrollView on Android ([0348953914](https://github.com/facebook/react-native/commit/03489539146556ec5ba6ba07ac338ce200f5b0f4) by [@janicduplessis](https://github.com/janicduplessis))
+- Set color filter so that the arrow matches the text color ([bb8d0f5732](https://github.com/facebook/react-native/commit/bb8d0f57328a20c942991f2d19d86639a7791924) by [@ejanzer](https://github.com/ejanzer))
+
+#### iOS specific
+
+- A crash in WebSocket module ([748aa13747](https://github.com/facebook/react-native/commit/748aa137472d6080427f74bb686c795b925c7d43) by [@marksinkovics](https://github.com/marksinkovics))
+- Fixed showing Alert while closing a Modal ([f319ff321c](https://github.com/facebook/react-native/commit/f319ff321c4b7c0929b99e3ebe7e1ce1fa50b34c) by [@devon94](https://github.com/devon94))
+- Bug with skewX/skewY/perspective/matrix transforms. ([4b956fe5a6](https://github.com/facebook/react-native/commit/4b956fe5a6b3a05b1c2883efc82a95c2524aeb56) by [@wcandillon](https://github.com/wcandillon))
+
+## v0.63.3
+
+### Added
+
+#### iOS specific
+
+- Ability to set which configuration to enable flipper for when using use_flipper! ([dc2df75426](https://github.com/facebook/react-native/commit/dc2df754267df3909631d81c22b9fcab58dfa241) by [@nicoburns](https://github.com/nicoburns))
+
+### Changed
+
+- Update Flipper to 0.54 ([d8b70b19b3](https://github.com/facebook/react-native/commit/d8b70b19b39ead4dd41895d666d116a43c56474e) by [@mweststrate](https://github.com/mweststrate))
+- Removed default 130ms delay from Pressability and Pressable. ([86ffb9c41e](https://github.com/facebook/react-native/commit/86ffb9c41e033f59599e01b7ad016706b5f62fc8) by [@yungsters](https://github.com/yungsters))
+
+### Fixed
+
+#### Android specific
+
+- `KeyboardDidHide` wrong `screenY` coordinates with `windowTranslucentStatus=true` ([45954ac5dc](https://github.com/facebook/react-native/commit/45954ac5dccdfe05de7553a0f08c4f0e66e3d62e) by [@fabriziobertoglio1987](https://github.com/fabriziobertoglio1987))
+- Fix Xiaomi TextInput crash in native ([07a597ad18](https://github.com/facebook/react-native/commit/07a597ad185c8c31ac38bdd4d022b0b880d02859))
+
+#### iOS specific
+
+- Prefetch images using a lower download priority ([058eeb43b4](https://github.com/facebook/react-native/commit/058eeb43b489f52183f081fb7232be683002a242) by [@p-sun](https://github.com/p-sun))
+- Fix `RCTImageLoader` not using decoders provided. ([663b5a878b](https://github.com/facebook/react-native/commit/663b5a878be9faafd13b41c222a1bc2ac7bb3a65) by [@sjchmiela](https://github.com/sjchmiela))
+- Support Swift based libraries using Xcode 12’s build system. ([6e08f84719](https://github.com/facebook/react-native/commit/6e08f84719c47985e80123c72686d7a1c89b72ed) by [@alloy](https://github.com/alloy))
+- Fix "main.jsbundle does not exist" issue ([83777cb4fb](https://github.com/facebook/react-native/commit/83777cb4fb5dda89c430b7eff9cd1f28d2577831))
+- Fixed headers in `Image.getSizeWithHeaders`. ([0bcc686c1c](https://github.com/facebook/react-native/commit/0bcc686c1cc90fd44de7a28e2f56ea20fe2f5123) by [@PaitoAnderson](https://github.com/PaitoAnderson))
+
+### Security
+
+- Fix security issues with `@react-native-community/cli` by bumping version ([001eb7cbd6](https://github.com/facebook/react-native/commit/001eb7cbd66c7dc1a302ee2a638c1cfc164538f4) by [@alexbrazier](https://github.com/alexbrazier))
+
+## v0.63.2
+
+### Fixed
+
+- Restore Previous Behavior for StyleSheet Validation of Null/Undefined Styles ([e75557b48f](https://github.com/facebook/react-native/commit/e75557b48fbee1d136b8b7d1a78ea8f9b9467479) by [@NickGerleman](https://github.com/NickGerleman))
+
+#### Android specific
+
+- Set LogBox windowTranslucentNavigation to false ([23036b38bc](https://github.com/facebook/react-native/commit/23036b38bc4443c8db4865e5c2b21aca7ab4f92f) by [@Ashoat](https://github.com/Ashoat))
+- Fix unable to run in debug mode on Android API < 21 ([7694b32a88](https://github.com/facebook/react-native/commit/7694b32a88078278457dd8721eb61da9c4ac0f5a) by [@Shywim](https://github.com/Shywim))
+
+#### iOS specific
+
+- Fix image cannot show in iOS 14 ([123423c2a9](https://github.com/facebook/react-native/commit/123423c2a9258c9af25ca9bffe1f10c42a176bf3))
+
+## v0.63.1
+
+### Added
+
+- Added `minPressDuration` to `Pressable`. ([4aaf629982](https://github.com/facebook/react-native/commit/4aaf62998247bcfd8ebf369d73290096fde08012) by [@yungsters](https://github.com/yungsters))
+- Support for array buffers in the JavaScriptCore implementation of JSI ([9c32140068](https://github.com/facebook/react-native/commit/9c32140068463739b91874689f741ea9630d8c3b) by [@ryantrem](https://github.com/ryantrem))
+
+#### Android specific
+
+- ProGuard rule for hermes ([449dc37720](https://github.com/facebook/react-native/commit/449dc37720b24d9d88661314424c9f982e70ec3a) by [@radko93](https://github.com/radko93))
+
+### Fixed
+
+- LogBox.ignoreAllLogs() should ignore logs ([f28c7505fa](https://github.com/facebook/react-native/commit/f28c7505fa5b4a7ddf1e9311d38dfcd15e8953a2) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+#### Android specific
+
+- Fix font variant crash on Android < 4.4 ([f23feced42](https://github.com/facebook/react-native/commit/f23feced42abd1d18a12e413bf79a51bead61379) by [@Almouro](https://github.com/Almouro))
+- Fix border-drawing when changing border-radius back to 0` ([7757ad0576](https://github.com/facebook/react-native/commit/7757ad05762284c059807d7d75fd03559e86f2b2) by [@IjzerenHein](https://github.com/IjzerenHein))
+- Fix rounded border-drawing when border-radius is smaller than border-width` ([28dce3665d](https://github.com/facebook/react-native/commit/28dce3665d8a63e902c165c060400486fe6234f4) by [@IjzerenHein](https://github.com/IjzerenHein))
+
+#### iOS specific
+
+- TextInput color has the same default (#000) on iOS whether in light or dark mode ([a2f8b9c36e](https://github.com/facebook/react-native/commit/a2f8b9c36e5eba6bc354a2f53bf8d3ca11297d00) by [@JonnyBurger](https://github.com/JonnyBurger))
+- Fixes TextInput shaking when typing Chinese ([9cdc19a936](https://github.com/facebook/react-native/commit/9cdc19a93669b37c0518bd32263e156ffc9193c7) by [@zhongwuzw](https://github.com/zhongwuzw))
+
+## v0.63.0
+
+### Breaking
+
+- The `target` field of events is now a native component, not a react tag ([3b813cade1](https://github.com/facebook/react-native/commit/3b813cade1f5d6f248a39f6bbd983f68c5794fe6) by [@TheSavior](https://github.com/TheSavior))
+- Modal: Remove support for `animated` prop (deprecated in 0.26) ([1e9db7bd6d](https://github.com/facebook/react-native/commit/1e9db7bd6df3055b9b81d23f15a54bb250621a41) by [@TheSavior](https://github.com/TheSavior))
+- Alert: Remove deprecated support for passing callback as fourth argument to `Alert.prompt` (deprecated in 0.59) ([a26d622d04](https://github.com/facebook/react-native/commit/a26d622d04451d6872eed2491e5d3f7d4689824d) by [@TheSavior](https://github.com/TheSavior))
+- Switch: Remove support for `thumbTintColor`, `tintColor`, `onTintColor` props (deprecated in 0.57) ([26912bd979](https://github.com/facebook/react-native/commit/26912bd9798aeb38931466b8ddcd3a48973b0528) by [@TheSavior](https://github.com/TheSavior))
+- Multiple deprecations and breaking changes to `TextInputState`. Use native component refs instead of react tags ([6286270e4c](https://github.com/facebook/react-native/commit/6286270e4cb10b40cfd7c8193e31d965f6815150) by [@TheSavior](https://github.com/TheSavior))
+- Bump supported Node engines to >= 10 ([f0c7178a3a](https://github.com/facebook/react-native/commit/f0c7178a3a24e7694b765946f0d884104c8cfa4c) by [@safaiyeh](https://github.com/safaiyeh))
+
+### Deprecated
+
+- Add deprecation warnings for `Clipboard`, `SegmentedControlIOS`, `ProgressViewIOS`, `ProgressBarAndroid`. These modules have been moved to [react-native-community](https://github.com/react-native-community) libraries. ([f295d7f608](https://github.com/facebook/react-native/commit/f295d7f60843a45bb09fc366e497f512c2bc0046) by [@Naturalclar](https://github.com/Naturalclar))
+- Deprecated `console.disableYellowBox` in favor of `LogBox.ignoreAllLogs`. ([87f1e22434](https://github.com/facebook/react-native/commit/87f1e22434210ad22f526422bbda0413f59786ce) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+#### Android specific
+
+- We are deprecating the method `UIManagerModule.resolveRootTagFromReactTag`, this will not be supported in the next version of RN ([acbf9e18ea](https://github.com/facebook/react-native/commit/acbf9e18ea666b07c1224a324602a41d0a66985e) by [@mdvacca](https://github.com/mdvacca))
+- Add warning message for trying to use `ToolbarAndroid` which has been removed from the core since 0.61. ([6249d14a61](https://github.com/facebook/react-native/commit/6249d14a61723b22deb1336457b4295978471885) by [@Naturalclar](https://github.com/Naturalclar))
+
+#### iOS specific
+
+- Deprecate iOS 9.x support ([58a6a40eac](https://github.com/facebook/react-native/commit/58a6a40eac9afb5c4de78a63418cc48ea97da1a4), [829a2237d2](https://github.com/facebook/react-native/commit/829a2237d270c03c80467eb6c2b5b18c87135a45), [674b591809](https://github.com/facebook/react-native/commit/674b591809cd1275b5f1c4d203c2f0ec52303396) by [@fkgozali](https://github.com/fkgozali), [d1265077d6](https://github.com/facebook/react-native/commit/d1265077d6638bb9219180628caf6ff83f8d6019) by [@sunnylqm](https://github.com/sunnylqm))
+
+### Added
+
+- Implement `nativePerformanceNow` and `performance.now()` ([232517a574](https://github.com/facebook/react-native/commit/232517a5740f5b82cfe8779b3832e9a7a47a8d3d) by [@emilisb](https://github.com/emilisb))
+- Support `PerformanceLogger` stopTimespan updates ([08c338eebf](https://github.com/facebook/react-native/commit/08c338eebf67ef6c8c8fb7e3a91bbf89bbc2bb4c) by [@sahrens](https://github.com/sahrens))
+- Added `PlatformColor` implementations for iOS and Android ([f4de45800f](https://github.com/facebook/react-native/commit/f4de45800f25930a1c70f757d12269d859066d3d) by [@tom-un](https://github.com/tom-un))
+- Stamp React Native Version Into C++ Code ([427ba359e0](https://github.com/facebook/react-native/commit/427ba359e0c9411438286dd137bbca67f9829fde) by [@NickGerleman](https://github.com/NickGerleman))
+- New `<Pressable>` Component to make it easier to create touchable elements ([3212f7dfe8](https://github.com/facebook/react-native/commit/3212f7dfe82d187e27f1410c8c3cb1d9fb9f5094) by [@TheSavior](https://github.com/TheSavior), [bd3868643d](https://github.com/facebook/react-native/commit/bd3868643d29e93610e19312571a9736df2cbdf8) by [@vonovak](https://github.com/vonovak))
+- Export `LogBox` module ([799bf56f6f](https://github.com/facebook/react-native/commit/799bf56f6f6a46b6bd42ac5a824f44bd1412f3b6) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Export `LayoutAnimationConfig` flow type ([f0dafd34fe](https://github.com/facebook/react-native/commit/f0dafd34fedb0d63eb2499b978a52da9e6b71ea1) by [@sahrens](https://github.com/sahrens))
+- Added `react-native-community/eslint-plugin` as a dependency for `react-native-community/eslint-config` ([2c2e35c634](https://github.com/facebook/react-native/commit/2c2e35c634cd936bd7ea7a7fe444058268308224) by [@Naturalclar](https://github.com/Naturalclar))
+- `DEBUG_NETWORK_SEND_DELAY` can be used to simulate slow network. ([4aac019176](https://github.com/facebook/react-native/commit/4aac019176e3359068ac671ed4157a6e3ada481f) by [@sahrens](https://github.com/sahrens))
+- Support for `accessibilityLabel` prop to the `Picker` component ([0a525b6d9d](https://github.com/facebook/react-native/commit/0a525b6d9d2a88dddf24b85a2485b928fca23b16) by [@KevinGVargas](https://github.com/KevinGVargas))
+- Allow `zIndex` to `useNativeDriver` ([6a4e06faa8](https://github.com/facebook/react-native/commit/6a4e06faa8afbcb607fc2696c45c4f3257b6665d) by [@mackenziemance](https://github.com/mackenziemance))
+
+#### Android specific
+
+- Support item background color in Dialog `Picker` ([22eb711c84](https://github.com/facebook/react-native/commit/22eb711c84587ac92da97e486fecaa79424fa925))
+- Add OverrideColorScheme interface and setOverrideColorScheme method to AppearanceModule([45d7df6cf7](https://github.com/facebook/react-native/commit/45d7df6cf7482b9790c97db613055ff5d3e59a87))
+- Allow setting custom ripple radius on `TouchableNativeFeedback` ([7f2a79f40b](https://github.com/facebook/react-native/commit/7f2a79f40b4a4c41344ca90cefe318af607675e0) by [@vonovak](https://github.com/vonovak))
+- Add `resizeMode` prop support on `TextInlineView` ([6871416328](https://github.com/facebook/react-native/commit/68714163280695c3148544b95b05a2c1464dbbba) by [@mdvacca](https://github.com/mdvacca))
+- Added an API for checking if there are busy timers to `TimingModule` ([22764e6cdc](https://github.com/facebook/react-native/commit/22764e6cdcf45ca5930676f6e95f9ab2f82bc78d) by [@ejanzer](https://github.com/ejanzer))
+- Make packager location customizable in dev mode ([3714f3648a](https://github.com/facebook/react-native/commit/3714f3648a8ac51f2bb7f2791e2381551d0209b4))
+
+#### iOS specific
+
+- `UIScene` support for `RCTImageView` ([f332fac163](https://github.com/facebook/react-native/commit/f332fac16346d2f03d056575cc988a0b2bbb48c6) by [@tido64](https://github.com/tido64))
+- Status bar style is now correctly changed in multi-window iPadOS 13 apps if you use `RCTRootViewController` and set `UIViewControllerBasedStatusBarAppearance=YES` ([80e6d672f3](https://github.com/facebook/react-native/commit/80e6d672f32fdc860c73eabcc63763dcab3c6269) by [@radex](https://github.com/radex))
+- Added `userInterfaceStyle` for `ActionSheetIOS` and `Share` to override user interface style on IOS 13 ([0a9cc34dd8](https://github.com/facebook/react-native/commit/0a9cc34dd82a3a7dba576997ebd424b12876dbaa) by [@Arjan-Zuidema](https://github.com/Arjan-Zuidema))
+- Add localized accessibility strings to `ReactCore` pod ([aebf54aee4](https://github.com/facebook/react-native/commit/aebf54aee41cc892198b055a7a546743297412bd) by [@xuelgong](https://github.com/xuelgong))
+- Resolve and reject promise for `PushNotificationIOS.requestPermissions` ([edfdafc7a1](https://github.com/facebook/react-native/commit/edfdafc7a14e88a2660b95cb220c62f29b1b28c0) by [@p-sun](https://github.com/p-sun))
+- Use autolink script in template on iOS ([a35efb9400](https://github.com/facebook/react-native/commit/a35efb94006bfa3f541bf3fc3ab5262740f00525) by [@janicduplessis](https://github.com/janicduplessis))
+- Added `Flipper` to template app ([52cd9cd6fe](https://github.com/facebook/react-native/commit/52cd9cd6fec0866177aa02f7129a8b3d8b2bdbea) by [@safaiyeh](https://github.com/safaiyeh))
+- Add `textColor` and `backgroundColor` props to `SegmentedControl` for iOS >=13 ([e8f577e541](https://github.com/facebook/react-native/commit/e8f577e541815bfd8adebdf14f70c9e4205f8e4e) by [@Naturalclar](https://github.com/Naturalclar))
+- Adds `RCTOverrideAppearancePreference` to the iOS `Appearance` module ([fa65b156d4](https://github.com/facebook/react-native/commit/fa65b156d4109e6a3121484b601358b11cf0d541))
+- Changed iOS LaunchScreen from `xib` to `storyboard` ([33b3a1a145](https://github.com/facebook/react-native/commit/33b3a1a1453ca51690e59b758eeb61a4fa8f35bc) by [@jeswinsimon](https://github.com/jeswinsimon))
+
+### Changed
+
+- Update `react-native-community/eslint-config` to 1.1.0, adding the new color rule ([780f06cd47](https://github.com/facebook/react-native/commit/780f06cd477f34da48646a949bd25dd3f883a9a2) by [@TheSavior](https://github.com/TheSavior))
+- Update community eslint plugin in the eslint config ([b2d10bc602](https://github.com/facebook/react-native/commit/b2d10bc60272fc2318835ff38655a9eb4a2bbed0) by [@Naturalclar](https://github.com/Naturalclar))
+- Upgrade `eslint-config` and `metro-preset` in project template ([ad86a18305](https://github.com/facebook/react-native/commit/ad86a183052e8b25d599eb395aef55412c02ff7b) by [@Naturalclar](https://github.com/Naturalclar))
+- Add ES Lint rules for `DynamicColorIOS()`and `ColorAndroid()` ([602070f44b](https://github.com/facebook/react-native/commit/602070f44b02220aeb036a7b3c26dad5c611b636) by [@tom-un](https://github.com/tom-un))
+- Make `ScrollView` use `forwardRef` ([d2f314af75](https://github.com/facebook/react-native/commit/d2f314af75b63443db23e131aaf93c2d064e4f44) by [@kacieb](https://github.com/kacieb))
+- Upgrade embedded React DevTools backend from v4.0.6 to v4.6.0 ([93ee5b2cc8](https://github.com/facebook/react-native/commit/93ee5b2cc8391bc5cb12ca7cf08ed0e44c74d29a) by [@bvaughn](https://github.com/bvaughn))
+- Updated the React Hooks ESLint Plugin ([6ce3f0a4f7](https://github.com/facebook/react-native/commit/6ce3f0a4f7495adb82e655d037dc4e5af462f955) by [@gaearon](https://github.com/gaearon))
+- Update to React 16.13.1 ([9637d6214a](https://github.com/facebook/react-native/commit/9637d6214a47e58d7fa8252a3de8c057e5cfb101) by [@gaearon](https://github.com/gaearon))
+- Relax `RefreshControl`'s `onRefresh` flow typing ([884c86ae02](https://github.com/facebook/react-native/commit/884c86ae02b0be7ea1e4b258dab39f4c5aee0b9d) by [@vonovak](https://github.com/vonovak))
+- Improved flowtype support for `Animated` ([bdafc55f50](https://github.com/facebook/react-native/commit/bdafc55f50c7d580ee2e643a02cb95d0196f721c) by [@javache](https://github.com/javache))
+- Upgrade `eslint-plugin-relay` to 1.6.0 ([0483404d82](https://github.com/facebook/react-native/commit/0483404d827416b7270e8a42b84e424035127892) by [@kassens](https://github.com/kassens))
+- Upgrade to latest dependencies in package.json template ([82e8239337](https://github.com/facebook/react-native/commit/82e82393377ddcedba01c401a5d79d5bbcdc4dc9) by [@codler](https://github.com/codler))
+- Make JSStringToSTLString 23x faster ([733532e5e9](https://github.com/facebook/react-native/commit/733532e5e95c85b8295b6c66009ca9efd2a77622) by [@radex](https://github.com/radex))
+- Changed property `disableIntervalMomentum` to work with both horizontal and vertical ScrollViews ([6237cfb325](https://github.com/facebook/react-native/commit/6237cfb325e39571ede0054a67d60f2c978d6d58) by [@Shaninnik](https://github.com/Shaninnik))
+- Upgraded to Flow v0.114.0 ([aa78457343](https://github.com/facebook/react-native/commit/aa7845734352eab2bd32f7d6e683d6674fd6680d) by [@mroch](https://github.com/mroch))
+- Updated CLI to the latest version ([ddc33007ad](https://github.com/facebook/react-native/commit/ddc33007ad0b4a0a24966b833e797227b9c56cca) by [@grabbou](https://github.com/grabbou))
+- Upgrade Prettier from 1.17 to 2.0.2. ([cf44650b3f](https://github.com/facebook/react-native/commit/cf44650b3f4f13df8208ceded60ec5c48bd6baf3) by [@bolinfest](https://github.com/bolinfest))
+- Only set dimensions if the window attributes change ([35c6bb9ac0](https://github.com/facebook/react-native/commit/35c6bb9ac0fc452428e85fee72affb4fc29f500c) by [@cpojer](https://github.com/cpojer))
+- Upgrade internal packages to support ESLint >= 6 ([89d04b5e4a](https://github.com/facebook/react-native/commit/89d04b5e4a3fd0b0f77b5a390c0aa62a3804e2bc) by [@Barbiero](https://github.com/Barbiero))
+- Make `JSCRuntime::createValue` faster ([24e0bad8be](https://github.com/facebook/react-native/commit/24e0bad8bea95ef7ddf72e2f00a93ffd47872d5b) by [@radex](https://github.com/radex))
+- Add perf markers in `XMLHttpRequest` ([71b8ececf9](https://github.com/facebook/react-native/commit/71b8ececf9b298fbf99aa27d0e363b533411e93d) by [@sahrens](https://github.com/sahrens))
+- Update SoLoader to 0.8.2 ([0a6f058b6b](https://github.com/facebook/react-native/commit/0a6f058b6bd0493f7eece972b1f73be3606ca8d5) by [@passy](https://github.com/passy))
+- `console.error` calls, and uncaught exceptions are now displayed in the Metro logs as well ([ffb82cb2f0](https://github.com/facebook/react-native/commit/ffb82cb2f052f276a94a004d5acea0ab44f8098c) by [@mweststrate](https://github.com/mweststrate))
+- Upgrade Flipper to 0.37.0 ([17f025bc26](https://github.com/facebook/react-native/commit/17f025bc26da13da795845a3f7daee65563420c0) by [@sunnylqm](https://github.com/sunnylqm))
+
+#### Android specific
+
+- Upgraded to Hermes 0.5.0 ([4305a291a9](https://github.com/facebook/react-native/commit/4305a291a9408ca65847994bbec42f1fbc97071d) by [@willholen](https://github.com/willholen))
+- Internal storage now will be preferred for caching images from `ImageEditor`. ([79efa43428](https://github.com/facebook/react-native/commit/79efa4342852a3e9271a56e3a0fb7c15be664e9a) by [@kitttn](https://github.com/kitttn))
+- Update Gradle Wrapper to 6.2 ([d4d8887b50](https://github.com/facebook/react-native/commit/d4d8887b5018782eeb3f26efa85125e6bbff73e4) by [@friederbluemle](https://github.com/friederbluemle))
+- Upgrade Folly to v2020.01.13.00 ([6e2131b8fa](https://github.com/facebook/react-native/commit/6e2131b8fa85da8b3fb0391803e7fbecba890ffb) by [@Kudo](https://github.com/Kudo))
+- Only update dimensions in `ReactRootView` if they've changed ([cc3e27d484](https://github.com/facebook/react-native/commit/cc3e27d484d3a412f632454b7f1c637b2c271af2) by [@ejanzer](https://github.com/ejanzer))
+- `ReactEditText` extends `AppCompatEditText` ([aaa2765a92](https://github.com/facebook/react-native/commit/aaa2765a920de8234f0def4cae05ca5d6c8c8ac8) by [@dulmandakh](https://github.com/dulmandakh))
+- Make `ReactApplicationContext` nullable as the constructor argument of `ReactContextBaseJavaModule` ([f8d5c5bfd7](https://github.com/facebook/react-native/commit/f8d5c5bfd79be0e20a205a1856bd9946143eeacf) by [@RSNara](https://github.com/RSNara))
+- Update Android Gradle plugin to 3.5.3 ([e1e081b00e](https://github.com/facebook/react-native/commit/e1e081b00e5efb32bce74211c850212eca8a9412) by [@SaeedZhiany](https://github.com/SaeedZhiany))
+- Don't emit dimensions update event on initial load ([383934a06e](https://github.com/facebook/react-native/commit/383934a06e22e8e1a5ee50d121722240259f95d0) by [@ejanzer](https://github.com/ejanzer))
+- Bump Android build-tools to 29.0.2, compileSdk to 29 ([edcbfb9821](https://github.com/facebook/react-native/commit/edcbfb98210d9aaa6bb1d7c64281ae9cfb41cac2) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- Disambiguate autolinking-ios.rb script from CLI’s “autolinking” feature and bring RNTester & template in line. ([4118d79826](https://github.com/facebook/react-native/commit/4118d798265341061105f3a53550db83c66a71cb) by [@alloy](https://github.com/alloy))
+- Updated Flipper iOS integration to be included by default in the `Debug` configuration ([619d5d60df](https://github.com/facebook/react-native/commit/619d5d60dfa94966e7104febec08166c1b5eca49) by [@alloy](https://github.com/alloy))
+- Use Apple unified logging API (os_log) ([f501ed682a](https://github.com/facebook/react-native/commit/f501ed682ae68136d966aee2b0d3cc0f1e8b90cd) by [@LeoNatan](https://github.com/LeoNatan))
+- Upgrade Folly to v2020.01.13.00 ([a27e31c059](https://github.com/facebook/react-native/commit/a27e31c059971b1d554ad6c7c81706f08eafac87) by [@Kudo](https://github.com/Kudo))
+- Remove the `xcshareddata` from .gitignore ([7980615d37](https://github.com/facebook/react-native/commit/7980615d371a7bf607a3787bca91cfde229c41dc) by [@pvinis](https://github.com/pvinis))
+- Add `complete_nullability = True` to compatible libraries ([796a4ea7e3](https://github.com/facebook/react-native/commit/796a4ea7e31ae05b76e59e02ab05f9c955f7c149))
+- Remove the Flipper pod post install step ([44beb2a685](https://github.com/facebook/react-native/commit/44beb2a685b7ceb0311bde7d0d33cb70bb891d30) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- Enable Flipper with CocoaPods `:configuration` ([7bb1c4e1b8](https://github.com/facebook/react-native/commit/7bb1c4e1b8715a5c9cb6f9e4e77a6df783481d3d) by [@alloy](https://github.com/alloy))
+
+### Removed
+
+- Remove unused`ImageProp` ([fbd09b1797](https://github.com/facebook/react-native/commit/fbd09b179759cd90f2be5c24caa11bdb483ad8cd) by [@Naturalclar](https://github.com/Naturalclar))
+- Remove leftover `Incremental` component ([e99800267b](https://github.com/facebook/react-native/commit/e99800267b78aa581aff956d47b8be91858628b9) by [@venits](https://github.com/venits))
+- Remove "Debug with Nuclide" option ([011eb4cea5](https://github.com/facebook/react-native/commit/011eb4cea5d482cef54d7659e7436a04e539ff19) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+#### Android specific
+
+- Remove unused Feature Flag: `lazilyLoadViewManagers` ([3963f34980](https://github.com/facebook/react-native/commit/3963f34980f501ef89a945a1d0e76716af84527d) by [@JoshuaGross](https://github.com/JoshuaGross))
+- `PickFirst` options for RNTester and template ([4bb0b4f205](https://github.com/facebook/react-native/commit/4bb0b4f205b1bc9a91150fe1f609f7d7313eb806) by [@passy](https://github.com/passy))
+- Remove Kotlin version from the default template ([ced959bb3d](https://github.com/facebook/react-native/commit/ced959bb3d6abdab30c5e64af9bff6059b111cdd) by [@grabbou](https://github.com/grabbou))
+
+#### iOS specific
+
+- Remove core `RCTConvert` CoreLocation Libraries ([bcf2a716fb](https://github.com/facebook/react-native/commit/bcf2a716fb8b8954d6f7b801a1699eeea9418e73) by [@maschad](https://github.com/maschad))
+- Remove copyright notices from iOS application template ([9c3fa57337](https://github.com/facebook/react-native/commit/9c3fa573379bb4824bbe02b5b5aa1ae3502772d8) by [@alloy](https://github.com/alloy))
+- Remove three properties: `textColor`, `font` and `textAlignment` from `RCTBackedTextInputViewProtocol`, unifying the usage into `defaultTextAttributes`. ([aff6bad27c](https://github.com/facebook/react-native/commit/aff6bad27c6c2232ba8bde17823d0a0db4ac589b) by [@jimmy623](https://github.com/jimmy623))
+
+### Fixed
+
+- Add support to render `<View>` with no fixed size nested within a `<Text>` ([dbb7eacb42](https://github.com/facebook/react-native/commit/dbb7eacb429adb4160e740017c212bfd6df0f03a) by [@mdvacca](https://github.com/mdvacca))
+- Fixes bug where `<Text><View><Image>` would crash. ([66601e755f](https://github.com/facebook/react-native/commit/66601e755fcad10698e61d20878d52194ad0e90c) by [@TheSavior](https://github.com/TheSavior))
+- Use new `setTextCursorDrawable` API for Android 10 ([e7a14b803f](https://github.com/facebook/react-native/commit/e7a14b803fdc8840bbcde51d4bfa9cf9a85a8472) by [@sturmen](https://github.com/sturmen))
+- Fix `Animated.Value` initialized with undefined in `ScrollView` ([cf02bd9b76](https://github.com/facebook/react-native/commit/cf02bd9b765e29ed8aa2bbf62661e89c84bb80e5) by [@janicduplessis](https://github.com/janicduplessis))
+- Do not explicitly include `.js` in Library imports ([161b910494](https://github.com/facebook/react-native/commit/161b9104941663dcc0b08a73789c0ff3410fc661) by [@NickGerleman](https://github.com/NickGerleman))
+- Fixed `Pressability` to properly fire `onLongPress`. ([5ca1d8f260](https://github.com/facebook/react-native/commit/5ca1d8f260bfb64111a6ba39f76a0a935829c0f2) by [@yungsters](https://github.com/yungsters))
+- Fixed typo from `inly` to `only` inside `Modal.js` library code. ([686d8a57f8](https://github.com/facebook/react-native/commit/686d8a57f889fe74dc1c66566c80f0ed6d677729) by [@Darking360](https://github.com/Darking360))
+- Fix viewability calculations for nested `VirtualizedLists` inside of a parent list's `FooterComponent` ([074a2fab74](https://github.com/facebook/react-native/commit/074a2fab74754c28cba0ccc51552a246a3046501) by [@logandaniels](https://github.com/logandaniels))
+- Fix android `TextInput` transitions ([0a17a4fe56](https://github.com/facebook/react-native/commit/0a17a4fe56ff2cabc3c7d1cc5b34bd3fdd032e59))
+- Remove JS autoFocus implementation ([0569d4c431](https://github.com/facebook/react-native/commit/0569d4c4315d61d2d8f4ab628a54eb1e1db45dc2) by [@janicduplessis](https://github.com/janicduplessis))
+- Check null values in `shouldAnimate` ([3498b3b96b](https://github.com/facebook/react-native/commit/3498b3b96b2e27c7c7f6407b3673b44540871a31) by [@axe-fb](https://github.com/axe-fb))
+- Fix `AccessibilityInfo.isScreenReaderEnabled` mock in Jest setup ([ec3327b61a](https://github.com/facebook/react-native/commit/ec3327b61ab1be3fd1565c8a35fe56747bd9069f) by [@rubennorte](https://github.com/rubennorte))
+- Fix crash when passing invalid UTF-16 data from JSC into native code ([011cf3f884](https://github.com/facebook/react-native/commit/011cf3f88428ca83552d0b51c7c3a0c47b9728e5) by [@motiz88](https://github.com/motiz88))
+- Make `YGValue.h` compile with Clang on Windows ([014bc95135](https://github.com/facebook/react-native/commit/014bc95135a38d65b991509492c0979cfd153e71) by [@christophpurrer](https://github.com/christophpurrer))
+- Fix documentation comments for HermesJS's `Function::callWithThis` method to accurately reflect how `this` is handled. ([399bda5284](https://github.com/facebook/react-native/commit/399bda52840161bf7d30c09eca061b4378b8f6e4) by [@Kronopath](https://github.com/Kronopath))
+- Fix resolving assets outside of the project root ([7deeec7396](https://github.com/facebook/react-native/commit/7deeec73966d84140492c2a767819977318c4d2d) by [@janicduplessis](https://github.com/janicduplessis))
+- Transform empty responses into empty `Blob`s ([9a8c06b502](https://github.com/facebook/react-native/commit/9a8c06b502c774f7a0bff1bdc064fbfe16ca75be) by [@RSNara](https://github.com/RSNara))
+- Fix validation of event mappings for `AnimatedEvent` ([19362f6116](https://github.com/facebook/react-native/commit/19362f6116bad441c5e23f2bab420af78664b3d3) by [@javache](https://github.com/javache))
+- Fix `NativeJSCHeapCapture` ([7e3a43c23d](https://github.com/facebook/react-native/commit/7e3a43c23d028a4481bc455dd28c391a81ff1a94) by [@RSNara](https://github.com/RSNara))
+- Add `AnimationInterpolation` as possible type for toValue ([26e8870fbf](https://github.com/facebook/react-native/commit/26e8870fbf310f0fb438a86cb2fe260f0bc419b9) by [@nabati](https://github.com/nabati))
+- Fix return type of `StyleSheet.create` ([4e71a30969](https://github.com/facebook/react-native/commit/4e71a30969d74073309d0350be55cadb84ae43ff) by [@jbrown215](https://github.com/jbrown215))
+- Adjust HelloWorld-tvOSTests/Info.plist `CFBundleIdentifier` to use `PRODUCT_BUNDLE_IDENTIFIER` ([98ebc1ea25](https://github.com/facebook/react-native/commit/98ebc1ea25102049ec53288a458ff16ed5b4ada0) by [@MoOx](https://github.com/MoOx))
+- Fix bug where if `Error` global is not callable when building an error, jsi will throw a JS exception back to JS code. #158 ([a195447539](https://github.com/facebook/react-native/commit/a1954475394dc03704a2e093e6fc4b48188640fa) by [@mhorowitz](https://github.com/mhorowitz))
+- Fix stylesheet validation for functions with custom prototype methods. ([f464dad5d4](https://github.com/facebook/react-native/commit/f464dad5d4f0fbf1cb23e21d22907ffddeaf97e4))
+- Fix sporadic issue with `onEndReached` called on load when not needed ([8ddf231306](https://github.com/facebook/react-native/commit/8ddf231306e3bd85be718940d04f11d23b570a62) by [@sahrens](https://github.com/sahrens))
+- Correct argument types of `NativeJSDevSupport.onSuccess` ([b42371da5a](https://github.com/facebook/react-native/commit/b42371da5a41916522b569a66c0a126333cf9cac) by [@RSNara](https://github.com/RSNara))
+- Add `URLSearchParams` and `Headers` to eslint globals ([7a13a1a88f](https://github.com/facebook/react-native/commit/7a13a1a88fdf26dca817b76399f1c86a8a05eccb) by [@sonnyp](https://github.com/sonnyp))
+- Export exception classes with default visibility ([84adc85523](https://github.com/facebook/react-native/commit/84adc85523770ebfee749a020920e0b216cf69f8) by [@appden](https://github.com/appden))
+- Add `URL` to eslint globals. ([ff9def41ff](https://github.com/facebook/react-native/commit/ff9def41ff3e7760d076bf1b899583d4b36cba0d) by [@sonnyp](https://github.com/sonnyp))
+- Plumb through memory allocation profiler feature to Chrome Inspector ([ed3054927c](https://github.com/facebook/react-native/commit/ed3054927c30c8823f78026b9c4cb42fbe4f8b00) by [@jbower-fb](https://github.com/jbower-fb))
+- Better monorepo support when building release apk ([a8e85026cf](https://github.com/facebook/react-native/commit/a8e85026cfa60056b1bcbcd39cde789e4d65f9cb) by [@grabbou](https://github.com/grabbou))
+- `LogBox` - Fix dependency cycle ([6ba2aeefa8](https://github.com/facebook/react-native/commit/6ba2aeefa8dfe031bf1dc46dbea29235aec31d61) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Always update background color and bar style on Android status bar ([9457efa84c](https://github.com/facebook/react-native/commit/9457efa84c872f029027cdcfc3bae4f403715e48))
+- Disable accessibility state changes of the focused view for Android API < 21 ([f2d58483c2](https://github.com/facebook/react-native/commit/f2d58483c2aec689d7065eb68766a5aec7c96e97) by [@mdvacca](https://github.com/mdvacca))
+
+#### Android specific
+
+- Gradle release config ([0d1fb458ab](https://github.com/facebook/react-native/commit/0d1fb458ab8027dcfac5f2fa11e8c16d6853c59c) by [@vdmtrv](https://github.com/vdmtrv))
+- Change how `TextInput` responds to `requestFocus` to fix a11y focus issue ([d4a498aba2](https://github.com/facebook/react-native/commit/d4a498aba2d2843e7a741a31b0c91c6a79a7386c) by [@ejanzer](https://github.com/ejanzer))
+- Fixed style in `TextInputTestCase` ([8c493804f3](https://github.com/facebook/react-native/commit/8c493804f3f7b3ae3761679a978971ab9d71baa0) by [@ejanzer](https://github.com/ejanzer))
+- Fix template instacrash from missing androidx dependency ([a1b14deb3e](https://github.com/facebook/react-native/commit/a1b14deb3e32df797aae99a75743a4d283e5337b) by [@alloy](https://github.com/alloy))
+- Implement native `TextInput` `autoFocus` on Android ([055a41b081](https://github.com/facebook/react-native/commit/055a41b081c5bc9535b071d9b4b7488b92e71803) by [@janicduplessis](https://github.com/janicduplessis))
+- Support for case insensitive `Origin` headers for `Websockets` ([aeaf286c77](https://github.com/facebook/react-native/commit/aeaf286c77b50a95c4961de0d2355caad8ffa396) by [@brunobar79](https://github.com/brunobar79))
+- RNTester Buck Build ([a3cb377645](https://github.com/facebook/react-native/commit/a3cb377645f2ccb7632ded73c230a41025d38f6f) by [@passy](https://github.com/passy))
+- Fix bug in updating dimensions in JS ([bef845ffd5](https://github.com/facebook/react-native/commit/bef845ffd521aa83d779de584ec370f9f88f27f3) by [@ejanzer](https://github.com/ejanzer))
+- Applied missing changes from bumping Gradle wrapper to 6.0.1 ([aa0ef15335](https://github.com/facebook/react-native/commit/aa0ef15335fe27c0c193e3e968789886d82e82ed) by [@SaeedZhiany](https://github.com/SaeedZhiany))
+- Unregister `JSDevSupport` from `DebugCorePackage` ([c20963e11c](https://github.com/facebook/react-native/commit/c20963e11cc1c10f20a2a0a3c209f5b403c9e899) by [@RSNara](https://github.com/RSNara))
+- Make sure `ServerHost` is optional in `NativePlatformConstants.js` ([048f88a33a](https://github.com/facebook/react-native/commit/048f88a33a53ebd4e45865b319c42291f1d6c7f2) by [@RSNara](https://github.com/RSNara))
+- Removed code that would cause accessibility header role to be spoken twice ([7428271995](https://github.com/facebook/react-native/commit/7428271995adf21b2b31b188ed83b785ce1e9189) by [@KevinGVargas](https://github.com/KevinGVargas))
+- Fail silently in `AppStateModule.sendEvent` if `CatalystInstance` is not available ([c4806fada6](https://github.com/facebook/react-native/commit/c4806fada6532894e2242cf31f7145d2992e3a2b) by [@JoshuaGross](https://github.com/JoshuaGross))
+- RN `Picker` - fix types in `AndroidDialogPickerManagerInterface` ([56b0f5cb6b](https://github.com/facebook/react-native/commit/56b0f5cb6ba48ecefc2890152ebe88e3df61a0ea))
+- Fix Hermes debugger being disabled by default ([b8621f5d30](https://github.com/facebook/react-native/commit/b8621f5d303442ab78dc5d745cfc86a941d4737c) by [@willholen](https://github.com/willholen))
+
+#### iOS specific
+
+- Fixed connection of metro reload command to iOS device ([f9df93385e](https://github.com/facebook/react-native/commit/f9df93385eee0e1cd1144a65e05410dfb48b119c) by [@reyalpsirc](https://github.com/reyalpsirc))
+- Remove `RCTDevLoadingView` jank ([faff19a7c6](https://github.com/facebook/react-native/commit/faff19a7c651c740d8d649b86727b63b63562b20) by [@RSNara](https://github.com/RSNara))
+- Fix crash when passing null value in object parameter of bridged method ([15434c7c43](https://github.com/facebook/react-native/commit/15434c7c435928a40b9cd66fe9f5d1bcdea8d954))
+- Get ready for Clang 10 ([8721ee0a6b](https://github.com/facebook/react-native/commit/8721ee0a6b10e5bc8a5a95809aaa7b25dd5a6043) by [@maxovtsin](https://github.com/maxovtsin))
+- Fix `RCTBlobManager` cleanup crash ([91c5ff4a12](https://github.com/facebook/react-native/commit/91c5ff4a12982ccead56c9c038761e9316d01409) by [@RSNara](https://github.com/RSNara))
+- Make Lambda function called in `NativeModule` mutable ([5290047d09](https://github.com/facebook/react-native/commit/5290047d09c0a41c85a1d47a638877c226d9c191) by [@maschad](https://github.com/maschad))
+- Fix crash in `RCTCxxBridge.executeApplicationScript` ([0c2db3256f](https://github.com/facebook/react-native/commit/0c2db3256f6cbb3ec564e0f183a52a439ed33f52) by [@ahimberg](https://github.com/ahimberg))
+- Fix `RCTDevLoadingView` `RedBox` on reload ([fe5ac2c3f9](https://github.com/facebook/react-native/commit/fe5ac2c3f9e47cfb7c5820a755a5d74d47624953) by [@RSNara](https://github.com/RSNara))
+- Fix `Image` component crashing when `uri` is `null` ([06b8b15b0a](https://github.com/facebook/react-native/commit/06b8b15b0af84b6f8b44d200dc25f29eac51181c) by [@mlazari](https://github.com/mlazari))
+- Fix `RCTDevLoadingView` not showing up with `UIScene` ([74b667dbc2](https://github.com/facebook/react-native/commit/74b667dbc2a48183dec0b9c3b5401bc3f9e54e7b) by [@tido64](https://github.com/tido64))
+- Prevent interactive dismissal for non-fullscreen modals ([1e7ed81d16](https://github.com/facebook/react-native/commit/1e7ed81d16dda4188352e0ccdc0f0bd3ad4741f3))
+- Resolve localization warnings in template ([0e4bcaa296](https://github.com/facebook/react-native/commit/0e4bcaa2960a2b1aa42dbe716fc6a35652aa7207) by [@safaiyeh](https://github.com/safaiyeh))
+- Implement `requiresMainQueueSetup` in `RCTDevSettings.mm` ([adf87dd7ed](https://github.com/facebook/react-native/commit/adf87dd7eddcf65a3300e6ac9092838d9c8a3279) by [@logandaniels](https://github.com/logandaniels))
+- Resolve `React-RCTText` Xcode warning ([04fed6508b](https://github.com/facebook/react-native/commit/04fed6508b74b23c954183af3f6121fb344d2138) by [@safaiyeh](https://github.com/safaiyeh))
+- Resolve Xcode warnings from `React-cxxreact`. ([dc6c57ce0d](https://github.com/facebook/react-native/commit/dc6c57ce0d4f5424bfb047c51fee18eac381a98b) by [@safaiyeh](https://github.com/safaiyeh))
+- `RCTReconnectingWebSocket` is reconnecting infinitely when stopped before getting connected ([0d4b0e9417](https://github.com/facebook/react-native/commit/0d4b0e941725657d8e63940428888aaceff505ad))
+- Fix prop name of `passwordRules` in `TextInput` ([3f5c42f357](https://github.com/facebook/react-native/commit/3f5c42f357d58268d0a0fd1bfc639f41feab937c) by [@Naturalclar](https://github.com/Naturalclar))
+- Remove need for Swift file in the user’s project in order to use Flipper ([8f93dedc6a](https://github.com/facebook/react-native/commit/8f93dedc6a5653edd2220c65ccb4ff8736ee060c) by [@alloy](https://github.com/alloy))
+- Clear all held `jsi::Functions` when `jsi::Runtime` is deleted ([9ae95582e7](https://github.com/facebook/react-native/commit/9ae95582e792a3dca4487bdce9080c6d874c7dd7) by [@RSNara](https://github.com/RSNara))
+- Make framework builds work again by making `RCTImageLoader` C++ requirement opt-in ([25571ec452](https://github.com/facebook/react-native/commit/25571ec4522931193b41723d3f80b3bced1fca3b) by [@alloy](https://github.com/alloy))
+- Enable dev keyboard shortcuts on Mac Catalyst ([56dfc86d64](https://github.com/facebook/react-native/commit/56dfc86d64a2a1f2ad05239b6d11aacac73cbac9) by [@charpeni](https://github.com/charpeni))
+- Fix `RCTTextView` layout issue that happens on some font with `leading` attribute not equal to zero, which causes wrong base-alignment layout ([5d08aab526](https://github.com/facebook/react-native/commit/5d08aab526b2702b46ff75ea7e943a33aa6df288))
+- Fix LAN instead of Wi-Fi device bundle configuration ([d1e6f8d3c4](https://github.com/facebook/react-native/commit/d1e6f8d3c4de1fbb4bddd5205cd3b35c572b495b) by [@Oleg-E-Bakharev](https://github.com/Oleg-E-Bakharev))
+- Add autorelease pool for each run loop for JS Thread ([948cbfdacc](https://github.com/facebook/react-native/commit/948cbfdacc42f8d2640e69f61df55f6adb823fcf) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fixed bug in implementation of `<TextInput>`'s `selectOnFocus` prop ([e020576b34](https://github.com/facebook/react-native/commit/e020576b34fb6ca6d3f9fe38916844b78a45c0e3) by [@shergin](https://github.com/shergin))
+- `RCTRedBox` doesn't appear in apps implementing `UISceneDelegate` ([d0a32c2011](https://github.com/facebook/react-native/commit/d0a32c2011ca00991be45ac3fa320f4fc663b2e8) by [@tido64](https://github.com/tido64))
+- Fixes the `InputAccessoryView.backgroundColor` prop’s typing to use `ColorValue`. ([a43fd60e18](https://github.com/facebook/react-native/commit/a43fd60e18aff9ee6bcaf8ec576adb8678d5bcf4) by [@alloy](https://github.com/alloy))
+- Fix `Animated` image crash when `CADisplayLink` target in `RCTWeakProxy` is `nil` ([e5a6655e71](https://github.com/facebook/react-native/commit/e5a6655e71d41a58ce0e51d37aa9fb8792e37dd5) by [@p-sun](https://github.com/p-sun))
+
+## v0.62.3
+
+### Security
+
+- Update validateBaseUrl to use latest regex ([33ef82ce6d](https://github.com/facebook/react-native/commit/33ef82ce6dfd31e1f990d438c925a0e52723e16b) by [@FBNeal](https://github.com/FBNeal))
+
+### Fixed
+
+#### iOS specific
+
+- Change autolink to match requirements for FlipperFolly working with Xcode 12.5 ([c6f4611dcb](https://github.com/facebook/react-native/commit/c6f4611dcbfbb64d5b54e242570e2a1acffcabef) by [@kelset](https://github.com/kelset))
+- Change podfile to rely on the autolink-ios rb file ([c4ea556d64](https://github.com/facebook/react-native/commit/c4ea556d64c7fc146d1412548788c48bbcc0f6bb) by [@kelset](https://github.com/kelset))
+- Update detox to work on Xcode 12 ([158b558e50](https://github.com/facebook/react-native/commit/158b558e500576f434dec09417bb02cc0bc53f7a) by [@kelset](https://github.com/kelset))
+
+## v0.62.2
+
+### Fixed
+
+- Fix Appearance module when using Chrome Debugger ([f7b90336be](https://github.com/facebook/react-native/commit/f7b90336be25b78935549aa140131d4d6d133f7b) by [@TheSavior](https://github.com/TheSavior))
+- Fix mock for TextInput ([5a3c6faee9](https://github.com/facebook/react-native/commit/5a3c6faee9c44a2d99b13d113c91dbf98990f8af) by [@SergioEstevao](https://github.com/SergioEstevao))
+- Flow errors from YellowBox and BubblingEventHandler ([a049130f34](https://github.com/facebook/react-native/commit/a049130f34be951c9c67d2a472c7eb7f3d08f070) by [@thymikee](https://github.com/thymikee))
+
+#### iOS specific
+
+- Make Vibration library compatible with TurboModules. ([3904228704](https://github.com/facebook/react-native/commit/390422870466beba571dda04f669380e14055056) by [@brunobar79](https://github.com/brunobar79))
+- Exclude Flipper from iOS Release builds ([e5497ca8f6](https://github.com/facebook/react-native/commit/e5497ca8f6e3b240948fdbeef0ac2a710f25bb56) by [@javiercr](https://github.com/javiercr))
+- Fix crash when enabling Performance Monitor on iOS 13.4 ([e2c417f7cf](https://github.com/facebook/react-native/commit/e2c417f7cf5ae7efa5ea1f9644a51c4c706a983f) by [@IjzerenHein](https://github.com/IjzerenHein))
+
+## v0.62.1
+
+### Fixed
+
+- Bump CLI to 4.5.1 to improve DX ([eac56b9749](https://github.com/facebook/react-native/commit/eac56b9749ed624275d4190b5e48b775583acb3f) by [@alloy](https://github.com/alloy))
+- Fix a YellowBox regression in v0.62.0 where the Flipper network inspector causes YellowBox to crash the app due to using base64 images. ([227aa96bb2](https://github.com/facebook/react-native/commit/227aa96bb23b6ff20eebbd8a9335fd172ed6005b) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+#### Android specific
+
+- Add new DoNotStrip class to proguard config ([cfcf5eba43](https://github.com/facebook/react-native/commit/cfcf5eba4317f80ef8902463b7c0b2e1e7b534a7) by [@janicduplessis](https://github.com/janicduplessis))
+
+#### iOS specific
+
+- Fix Performance Monitor in dark appearance ([576ddfb3a8](https://github.com/facebook/react-native/commit/576ddfb3a84a5461679959f0d3f229a000dcea8d) by [@gorhom](https://github.com/gorhom))
+- Inverted ScrollViews scroll to their bottom when the status bar is pressed ([7a4753d76a](https://github.com/facebook/react-native/commit/7a4753d76aab1c52a09f26ec6f7fd43a68da8a97) by [@emilioicai](https://github.com/emilioicai))
+- Revert [previous incomplete fix](https://github.com/facebook/react-native/commit/bd2b7d6c0366b5f19de56b71cb706a0af4b0be43) for [an issue](https://github.com/facebook/react-native/issues/26473) with `Modal`’s `onDismiss` prop. ([27a3248a3b](https://github.com/facebook/react-native/commit/27a3248a3b37410b5ee6dda421ae00fa485b525c) by [@grabbou](https://github.com/grabbou))
+- Fix double call to onEndReached in VirtualizedList ([d3658bc2b6](https://github.com/facebook/react-native/commit/d3658bc2b6437e858d3b3f5688277dedbca779b8) by [@MartinSherburn](https://github.com/MartinSherburn))
+
+### Changed
+
+- Update warning message of deprecated imports ([405200e9a9](https://github.com/facebook/react-native/commit/405200e9a930cded47954f374f2a779ec769cd4c) by [@Naturalclar](https://github.com/Naturalclar))
+
+## v0.62.0
+
+This major release includes Flipper support by default, improved dark mode support, moving Apple TV to [react-native-tvos](https://github.com/react-native-community/react-native-tvos), and more. See the [blog post](https://reactnative.dev/blog/2020/03/26/version-0.62) for all of the highlights.
+
+This release comes in the midst of a global pandemic. We’re releasing this version today to respect the work of hundreds of contributors who made this release possible and to prevent the release from falling too far behind master. Please be mindful of the reduced capacity of contributors to help with issues and prepare to delay upgrading if necessary.
+
+If you're upgrading, manual intervention may be required for your app. Please see the [upgrade-helper](https://react-native-community.github.io/upgrade-helper/) for a detailed breakdown of the changes required and see [this issue](https://github.com/react-native-community/releases/issues/179) for known issues.
+
+One known issue with workaround is regarding Android builds and [APK size increases](https://github.com/facebook/react-native/issues/28330).
+
+### Breaking
+
+- React DevTools v4 integration ([92a3c9da0a](https://github.com/facebook/react-native/commit/92a3c9da0a38870a8bad7c91bdc3ddb494f6e5f2) by [@bvaughn](https://github.com/bvaughn))
+- Remove `TextInput`'s `onTextInput` prop ([3f7e0a2c96](https://github.com/facebook/react-native/commit/3f7e0a2c9601fc186f25bfd794cd0008ac3983ab) by [@shergin](https://github.com/shergin))
+- Remove `TextInput`'s `inputView` prop ([1804e7cbea](https://github.com/facebook/react-native/commit/1804e7cbea707a35046118090966a54031edfae8) by [@TheSavior](https://github.com/TheSavior))
+- Animated: Remove `defaultProps` Parameter ([a70987cee2](https://github.com/facebook/react-native/commit/a70987cee24bcd027b9c4a5aa85dfd6a1aab74b3) by [@yungsters](https://github.com/yungsters))
+- Remove `TextInput`'s `selectionState` prop ([2becdfd404](https://github.com/facebook/react-native/commit/2becdfd4041f7f28138ba3a61c03e17c06dc2e50) by [@yungsters](https://github.com/yungsters))
+- Remove support for `framesToPop` ([8bc02fdd52](https://github.com/facebook/react-native/commit/8bc02fdd52124d0a24d96e4a61d7688328ef1660) [cf4d45ec2b](https://github.com/facebook/react-native/commit/cf4d45ec2bcd301be7793d5840de21ec7d02275b) [a483f802fd](https://github.com/facebook/react-native/commit/a483f802fddfd927f2baa0d95e2b4094d452cddd) by [@motiz88](https://github.com/motiz88))
+- Remove `TimePickerAndroid` ([dbf070c51e](https://github.com/facebook/react-native/commit/dbf070c51ecd14127a8317faa75cb661697b5a6b) by [@cpojer](https://github.com/cpojer))
+- Remove `scrollWithoutAnimationTo` from ScrollView ([c7e89909da](https://github.com/facebook/react-native/commit/c7e89909da70ac5290f9971080eb897567db3e43) by [@TheSavior](https://github.com/TheSavior))
+- Bump CLI to ^4.2.x ([be5088401f](https://github.com/facebook/react-native/commit/be5088401fd8e19d57adda42d275cab437448064) by [@alloy](https://github.com/alloy)) - for details on what v4 of the CLI improves on (like monorepo support), please refer to the [dedicated blog post](https://callstack.com/blog/react-native-cli-3-1-0-and-4-0-0-whats-new/) and the [release notes](https://github.com/react-native-community/cli/releases)
+- Remove `accessibilityStates` property ([7b35f427fd](https://github.com/facebook/react-native/commit/7b35f427fd66cb0f36921b992095fe5b3c14d8b9) by [@marcmulcahy](https://github.com/marcmulcahy))
+- Upgraded to Hermes 0.4.0. If you're using ProGuard you will need to add the following rule to `proguard-rules.pro`: `-keep class com.facebook.jni.** { *; }` ([ab3c184555](https://github.com/facebook/react-native/commit/ab3c184555e382b8693cbfcdfe01ba89583ee726) by [@willholen](https://github.com/willholen))
+
+#### Android specific
+
+- Fix setting keyboardType from breaking autoCapitalize ([233fdfc014](https://github.com/facebook/react-native/commit/233fdfc014bb4b919c7624c90e5dac614479076f) by [@safaiyeh](https://github.com/safaiyeh))
+- Limit size of video uploaded from camera roll in android (< 100 MB) ([d21f695edf](https://github.com/facebook/react-native/commit/d21f695edf367166a03af4c6e9376cd498b38665))
+- Remove "Reload on JS change" from RN Android ([478df155e7](https://github.com/facebook/react-native/commit/478df155e70a4ce30219adcac6f0801c4e4d10ec) by [@cpojer](https://github.com/cpojer))
+
+### Added
+
+- Add support for Flipper by default ([multiple commits](https://github.com/facebook/react-native/pulls?q=is%3Apr+Flipper+is%3Aclosed))
+- Add `getNativeScrollRef` method to FlatList component ([bde1d63c85](https://github.com/facebook/react-native/commit/bde1d63c853630609b22c87121c125775dd1f5cb) by [@kacieb](https://github.com/kacieb))
+- Add missing accessibility props on Touchables ([8c0c860e38](https://github.com/facebook/react-native/commit/8c0c860e38f57e18296f689e47dfb4a54088c260) by [@xuelgong](https://github.com/xuelgong))
+- Added missing `console` polyfills in release builds. ([b7ab922bb3](https://github.com/facebook/react-native/commit/b7ab922bb3fd4f9f103e583bed9e9295a9521578) by [@yungsters](https://github.com/yungsters))
+- Platform.select now supports native as an option. ([a6fc0898de](https://github.com/facebook/react-native/commit/a6fc0898de990959d201b9665501deda215e41a4) by [@koke](https://github.com/koke))
+- Export the DevSettings module, add `addMenuItem` method ([cc068b0551](https://github.com/facebook/react-native/commit/cc068b055185e6fb7341bf945f69a74ed3ef4814) by [@janicduplessis](https://github.com/janicduplessis))
+- Expose RCTNetworking as a public 'Networking' API ([42ee5ec934](https://github.com/facebook/react-native/commit/42ee5ec93425c95dee6125a6ff6864ec647636aa) by [@adamchel](https://github.com/adamchel))
+- Add `useColorScheme` hook ([51681e80ab](https://github.com/facebook/react-native/commit/51681e80ab0d1efdaba684b626994b694d53d2a5) by [@hramos](https://github.com/hramos))
+- Add `unstable_enableLogBox` ([dd8e5f468a](https://github.com/facebook/react-native/commit/dd8e5f468a29e299647ffbd0887f53afd24936e3) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Expose Hermes Sampling Profiler ([15ecb60d6d](https://github.com/facebook/react-native/commit/15ecb60d6deb96fcb7b0ef70faccd10594ededa3) by [@axe-fb](https://github.com/axe-fb))
+- Add `error-subclass-name` lint rule ([6611c4b8f4](https://github.com/facebook/react-native/commit/6611c4b8f42520add983cc48fe4e14f7a02cc7cf) by [@motiz88](https://github.com/motiz88))
+- Add `HostComponent` to the public API of React Native ([a446a38aaa](https://github.com/facebook/react-native/commit/a446a38aaab5bea2e279f1958cfd90090bfd7e09) by [@TheSavior](https://github.com/TheSavior))
+- Add `RCTExceptionsManager.reportException` ([9a57145f52](https://github.com/facebook/react-native/commit/9a57145f52a03678da02d5d00cbe11eed3f5a0fc) by [@motiz88](https://github.com/motiz88))
+- Add `accessibilityValue` property ([7df3eea1a7](https://github.com/facebook/react-native/commit/7df3eea1a79f12c2dfff1976d0cef605a83232ec) by [@marcmulcahy](https://github.com/marcmulcahy))
+- Add `Appearance` module to expose the user's current Night theme preference ([17862a78db](https://github.com/facebook/react-native/commit/17862a78db59d60fe316961f9111efc330ba2abd) [63fa3f21c5](https://github.com/facebook/react-native/commit/63fa3f21c5ab308def450bffb22054241a8842ef) by [@hramos](https://github.com/hramos))
+- Add `onSlidingComplete` callbacks when sliders adjusted via a11y. ([c7aa6dc827](https://github.com/facebook/react-native/commit/c7aa6dc8270c0eabc913fe6c617c8131e3f4b3c5) by [@marcmulcahy](https://github.com/marcmulcahy))
+
+#### Android specific
+
+- Implement `adjustsFontSizeToFit` on Android ([2c1913f0b3](https://github.com/facebook/react-native/commit/2c1913f0b3d12147654501f7ee43af1d313655d8) by [@janicduplessis](https://github.com/janicduplessis))
+- Allow overriding `EditText` construction in `ReactTextInputShadowNode` ([a5b5d1a805](https://github.com/facebook/react-native/commit/a5b5d1a805a9c54d325763b432be1cf2c8811dc9) by [@mchowning](https://github.com/mchowning))
+- Add Android support for `fontVariant` prop ([c2c4b43dfe](https://github.com/facebook/react-native/commit/c2c4b43dfe098342a6958a20f6a1d841f7526e48) by [@mcuelenaere](https://github.com/mcuelenaere))
+- Custom entry file on android using `ENTRY_FILE` environment variable ([a0d8740878](https://github.com/facebook/react-native/commit/a0d87408782fcf191988612198493d9130736c72))
+- Added `statusBarTranslucent` prop to Modal component ([c35a419e5d](https://github.com/facebook/react-native/commit/c35a419e5d2eca4fe9cd0939df085088fa88423b) by [@pfulop](https://github.com/pfulop))
+- Add `fadingEdgeLength` prop to FlatList and ScrollView ([51aacd5241](https://github.com/facebook/react-native/commit/51aacd5241c4b4c0b9b1e1b8f9dabac45e5b5291))
+- Support `removeClippedSubviews` for horizontal ScrollViews ([42152a3fa3](https://github.com/facebook/react-native/commit/42152a3fa3f949f5112461753eb44a436355dfb1))
+- Introducing `ReactCallerContextFactory` interface ([9713b63d9a](https://github.com/facebook/react-native/commit/9713b63d9ac1e1ae85accd86b78b351ac6295d01) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- Added web socket support for macOS ([f21fa4ecb7](https://github.com/facebook/react-native/commit/f21fa4ecb73551bdc4c3d70db9fc13e93b19b3a6) by [@andymatuschak](https://github.com/andymatuschak))
+- Added Warning message Linking API with Phones in iOS Simulator ([e1d89fbd9d](https://github.com/facebook/react-native/commit/e1d89fbd9df91679ec36e955a3d0f699c2d5e777) by [@espipj](https://github.com/espipj))
+- Added missing deps for React-CoreModules ([15b2353382](https://github.com/facebook/react-native/commit/15b2353382c46dc5f0130ff44b9deb6a2361e3e5) by [@fkgozali](https://github.com/fkgozali))
+- Expose the `isPackagerRunning` methods on RCTBundleURLProvider ([fe9cba74fa](https://github.com/facebook/react-native/commit/fe9cba74fa6241b4c38a3df9481d3634ebd51bf9) by [@afoxman](https://github.com/afoxman))
+- Add `autoFocus` to TextInput ([6adba409e6](https://github.com/facebook/react-native/commit/6adba409e6256fd2dcc27a4272edcedae89927af) by [@janicduplessis](https://github.com/janicduplessis))
+
+### Changed
+
+- Upgrade metro version to 0.56.3 ([4b487ba500](https://github.com/facebook/react-native/commit/4b487ba50025becb6a83c805b99d45651db6b8c1) by [@EssamEmad](https://github.com/EssamEmad))
+- Upgrade `eslint-plugin-relay` to 1.3.12 ([f0bcfbe9be](https://github.com/facebook/react-native/commit/f0bcfbe9be0eb6a06d096a682717a23e43c39d52) by [@jstejada](https://github.com/jstejada))
+- Upgrade to Flow v0.108.0 ([d34bc5fa64](https://github.com/facebook/react-native/commit/d34bc5fa64a54dfc2e780461ee2997a4b17f8c65) by [@mvitousek](https://github.com/mvitousek))
+- Upgrade metro babel preset ([cef001713f](https://github.com/facebook/react-native/commit/cef001713fc6384353bbcb4d45645ceee44ed1a9) by [@alloy](https://github.com/alloy))
+- TextInput now properly sends native the end selection location on change ([dff490d140](https://github.com/facebook/react-native/commit/dff490d140010913d3209a2f3e987914b9c4eee4) by [@TheSavior](https://github.com/TheSavior))
+- TextInput now uses `forwardRef` allowing it to be used directly by new APIs requiring a host component. ([bbc5c35a61](https://github.com/facebook/react-native/commit/bbc5c35a61cd3af47ccb2dc62430e4b6a4d4e08f) by [@TheSavior](https://github.com/TheSavior))
+- TextInput no longer does an extra round trip to native on focus/blur ([e9b4928311](https://github.com/facebook/react-native/commit/e9b4928311513d3cbbd9d875827694eab6cfa932) by [@TheSavior](https://github.com/TheSavior))
+- Render collapsed JavaScript frames in RedBox ([468d1a2d2e](https://github.com/facebook/react-native/commit/468d1a2d2e6c72d7c6d435ecaad8499997584de6) by [@motiz88](https://github.com/motiz88))
+- Enable `no-useless-escape` lint rule ([90977b0e00](https://github.com/facebook/react-native/commit/90977b0e00acc6b3263502017c27094392e89478) by [@motiz88](https://github.com/motiz88))
+- Update `DevSettings.reload` to accept a reason ([549cac63cb](https://github.com/facebook/react-native/commit/549cac63cb252037f73453c5d4e7ae5f15586607) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Move `react-native-implementation.js` to `index.js` ([e54ecf907e](https://github.com/facebook/react-native/commit/e54ecf907e9f0660d05dc807ec0e67127143ebed) by [@cpojer](https://github.com/cpojer))
+- Delete Long Press Error in Touchable ([9a3d722ccb](https://github.com/facebook/react-native/commit/9a3d722ccb523f227ffd7770a809996e6cfe75d9) by [@yungsters](https://github.com/yungsters))
+- Add Intl to eslint globals. ([f6a62f9ae2](https://github.com/facebook/react-native/commit/f6a62f9ae2278c0f3a1e5c1a6ec3b7cca3421a41))
+- Add WebSocket to eslint globals ([af8ea06bb4](https://github.com/facebook/react-native/commit/af8ea06bb44e84ce51d4ca4e76f0d66bf34323bd) by [@dr2009](https://github.com/dr2009))
+- Change default `accessibilityRole` of Switch component from `button` to `switch` ([36672c3851](https://github.com/facebook/react-native/commit/36672c3851a044a1ab0edcfaa2790c02f7909695) by [@alvinmatias69](https://github.com/alvinmatias69))
+
+#### Android specific
+
+- Bump gradle-download-task to 4.0.2 ([088be260b6](https://github.com/facebook/react-native/commit/088be260b6727ba82167fe58cb1ee4410a6920b2) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump Gradle to 6.0.1 ([701e66bde4](https://github.com/facebook/react-native/commit/701e66bde4ea0e404626c7805e2bcdfa0c129c05) by [@dulmandakh](https://github.com/dulmandakh))
+- Bump Gradle wrapper 5.6.4 ([928f4434b9](https://github.com/facebook/react-native/commit/928f4434b9829c90098b1626b03938d932a9c1f6) by [@friederbluemle](https://github.com/friederbluemle))
+- Bump Soloader to 0.8.0 ([614039834b](https://github.com/facebook/react-native/commit/614039834bf255de096f8b1d168832f81b0cf3fa))
+- Update Android Gradle plugin to 3.5.2 ([b41b5ce8ae](https://github.com/facebook/react-native/commit/b41b5ce8ae2902169ae58860da2c70a9233bea53) by [@friederbluemle](https://github.com/friederbluemle))
+- Improve exception message when JSC loading fails ([65d3167a80](https://github.com/facebook/react-native/commit/65d3167a802b2ca04d4f05ff972c2d51765f1e0d) by [@mhorowitz](https://github.com/mhorowitz))
+- Expose `addCookies` method ([cc845ccfb4](https://github.com/facebook/react-native/commit/cc845ccfb4c0f841b876bca55c5f70efd72be538) by [@safaiyeh](https://github.com/safaiyeh))
+- Migrated from libfb to libfbjni for JNI calls ([9ad5e72b77](https://github.com/facebook/react-native/commit/9ad5e72b77013083f925108870ea6b17f4711a1d) by [@passy](https://github.com/passy))
+- Formatted cpp/h code with clang-format ([d5ba113bb2](https://github.com/facebook/react-native/commit/d5ba113bb2cd839ea38768785e527fbbc9636e41) by [@passy](https://github.com/passy))
+- Switch MainActivity launchMode to singleTask ([7a42596438](https://github.com/facebook/react-native/commit/7a42596438018129d52ff04899ab4ddabd27cdcb) by [@dulmandakh](https://github.com/dulmandakh))
+- Changing method signatures for ImageLoaderModule to accept double for requestId ([641e9657dd](https://github.com/facebook/react-native/commit/641e9657ddab5d1b2676e98d86fd369372281d2c) by [@ejanzer](https://github.com/ejanzer))
+- Use Node's module resolution algorithm to find JSC & Hermes ([fc25f288fe](https://github.com/facebook/react-native/commit/fc25f288fe553cb7e8f04b8ce4b56297b7fa40d5) by [@ide](https://github.com/ide))
+- Add `ACCESS_BACKGROUND_LOCATION` to PermissionsAndroid ([8c099b5f53](https://github.com/facebook/react-native/commit/8c099b5f53405fe0806113ca7ccf0bbe1af92a21) by [@dulmandakh](https://github.com/dulmandakh))
+
+#### iOS specific
+
+- Add `xcscheme` files for iOS template back in. ([a715decd2d](https://github.com/facebook/react-native/commit/a715decd2d3bcdab9537f3246c8398ad9869e94e) by [@pvinis](https://github.com/pvinis))
+
+### Deprecated
+
+- Add deprecation warning to `AccessibilityInfo.fetch` ([523ab83338](https://github.com/facebook/react-native/commit/523ab8333800afbfb169c6fd70ab6611fe07cc2a) by [@TheSavior](https://github.com/TheSavior))
+- Make setting `useNativeDriver` required. Add runtime warning if not specified ([5876052615](https://github.com/facebook/react-native/commit/5876052615f4858ed5fc32fa3da9b64695974238) by [@TheSavior](https://github.com/TheSavior))
+- Refs on an Animated component are now the internal component. The `getNode` call has been deprecated. ([66e72bb4e0](https://github.com/facebook/react-native/commit/66e72bb4e00aafbcb9f450ed5db261d98f99f82a) by [@yungsters](https://github.com/yungsters))
+
+#### iOS specific
+
+- Deprecate `[bridge reload]`, prefer `RCTReloadCommand` ([ffe2306164](https://github.com/facebook/react-native/commit/ffe2306164ed7edfe5ab9d75b5122791037a852a) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+
+#### Android specific
+
+- Deprecate `CallerContext` from `ReactImageManager` ([8accd77c45](https://github.com/facebook/react-native/commit/8accd77c45a4b051bf02904c3485d6a0dcd27631) by [@mdvacca](https://github.com/mdvacca))
+
+### Removed
+
+- Removing experimental `IncrementalPresenter` component ([0ef0d3167e](https://github.com/facebook/react-native/commit/0ef0d3167e291f31ce01ceb729df77cc679d2330) by [@TheSavior](https://github.com/TheSavior))
+- TouchableWithoutFeedback no longer exports Props. Use React.ElementConfig, instead. ([7bcae81299](https://github.com/facebook/react-native/commit/7bcae812997f669de5803cc781dcf3ea65baf0e9) by [@yungsters](https://github.com/yungsters))
+- Remove `Sample` and `CrashyCrash` Modules ([8ec7e0966c](https://github.com/facebook/react-native/commit/8ec7e0966cf83ed29a39aab47c686bc60a124983) by [@RSNara](https://github.com/RSNara))
+- Remove `propTypes` from Animated components. ([86d90c03eb](https://github.com/facebook/react-native/commit/86d90c03ebe39ebc4b2c6dcc0747b4f3a34f5f2f) by [@yungsters](https://github.com/yungsters))
+- Remove `propTypes` from TouchableHighlight. ([7c01172bef](https://github.com/facebook/react-native/commit/7c01172befd07f1d082b18993b87fc880e4b718f) by [@yungsters](https://github.com/yungsters))
+- Remove `propTypes` from TouchableNativeFeedback. ([2185dd298a](https://github.com/facebook/react-native/commit/2185dd298a788c2b713ea17878fd36e06205b4da) by [@yungsters](https://github.com/yungsters))
+- Remove `propTypes` from TouchableOpacity. ([88ae24f719](https://github.com/facebook/react-native/commit/88ae24f719d365b004696aff6461535188ca9f41) by [@yungsters](https://github.com/yungsters))
+- Remove `propTypes` from TouchableWithoutFeedback. ([ebf7d75816](https://github.com/facebook/react-native/commit/ebf7d758164873169937321a4dccc3782359a0d3) by [@yungsters](https://github.com/yungsters))
+- Remove `__skipSetNativeProps_FOR_TESTS_ONLY` from Animated components. ([dcd63078bd](https://github.com/facebook/react-native/commit/dcd63078bdab864830168005b940f638f1e08b23) by [@yungsters](https://github.com/yungsters))
+- Remove Apple TV Props ([548aad4ff1](https://github.com/facebook/react-native/commit/548aad4ff1dfef0d71bdd39aa83ad71e522a2546) by [@yungsters](https://github.com/yungsters))
+
+#### Android specific
+
+- Remove `NativeRunnableDeprecated` ([973253af8a](https://github.com/facebook/react-native/commit/973253af8a47d9ebd137f554054e7a95f8ef2e45) by [@passy](https://github.com/passy))
+- Remove `com.facebook.react.modules.debug.NativeSourceCodeSpec` ([4d9e5f8481](https://github.com/facebook/react-native/commit/4d9e5f8481531000380cf4d3d485fcde1321a37b) by [@RSNara](https://github.com/RSNara))
+
+### Fixed
+
+- Fix `require` cycle warning in ScrollResponder. ([674ac69cee](https://github.com/facebook/react-native/commit/674ac69cee7c1ce6096bee258880e79966322ee0) by [@Naturalclar](https://github.com/Naturalclar))
+- Restore behavior for `underlayColor={null}` in `TouchableHighlight`. ([37d8440a8e](https://github.com/facebook/react-native/commit/37d8440a8e35a53b81914e429502db527790b3cd) by [@yungsters](https://github.com/yungsters))
+- Fix stack traces showing the wrong function name in some cases ([60b4ba16c0](https://github.com/facebook/react-native/commit/60b4ba16c008c23959ebd27ea7215f83878d1343) by [@motiz88](https://github.com/motiz88))
+- Fix `requestAnimationFrame` when focusing input on mount ([5798cf2aa9](https://github.com/facebook/react-native/commit/5798cf2aa9b86bbcb40016aae14eca88fca19fde) by [@janicduplessis](https://github.com/janicduplessis))
+- Reduce overhead of setting up timers in DEV ([75a154b449](https://github.com/facebook/react-native/commit/75a154b4499e44b4ab31ccf28f9eb1dbf21578ac) by [@motiz88](https://github.com/motiz88))
+- Fixed an issue where margin and padding were resolved incorrectly. ([1d683faf1d](https://github.com/facebook/react-native/commit/1d683faf1dc89e4950e7e1f5c5a67f9a7ca1ee24) by [@SidharthGuglani](https://github.com/SidharthGuglani))
+- Fix using width for calculating margin top percent ([0599af2282](https://github.com/facebook/react-native/commit/0599af2282ffbf636604bce1cb4c049201fed393) by [@SidharthGuglani](https://github.com/SidharthGuglani))
+- Don't restore default values in NativeAnimated when components unmount ([686ab49107](https://github.com/facebook/react-native/commit/686ab49107df8ed20d4e810f1366715cd70b4a31) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix eslint-config peer dependency warnings ([1353da5a53](https://github.com/facebook/react-native/commit/1353da5a538d4a6f76fc9530711394cf981034a0) by [@friederbluemle](https://github.com/friederbluemle))
+- Remove style rules from eslint config for prettier options ([e4b62bb139](https://github.com/facebook/react-native/commit/e4b62bb139c258b65a9ebf2a8ee692ea52c3afab) by [@iRoachie](https://github.com/iRoachie))
+- Fix separators displays in wrong places with the inverted list ([dfb4f4af68](https://github.com/facebook/react-native/commit/dfb4f4af68726d2e05f63689a9c74c9bb9a0611b) by [@dy93](https://github.com/dy93))
+- Fix issue where we attempt to connect to React devtools every 2 seconds ([e7f6210d5d](https://github.com/facebook/react-native/commit/e7f6210d5d417c5b6d4ba7f5cf96b40dbf70b9cd) by [@ejanzer](https://github.com/ejanzer))
+- Fix so that early logs don't get dropped by Metro ([4ed05ca241](https://github.com/facebook/react-native/commit/4ed05ca241b791ad629fd154429a4a53c7731556) by [@gaearon](https://github.com/gaearon))
+- Fix to announce accessibility state changes happening in the background ([baa66f63d8](https://github.com/facebook/react-native/commit/baa66f63d8af2b772dea8ff8eda50eba264c3faf) by [@xuelgong](https://github.com/xuelgong))
+- Fix `JSBigString` not compiling on Windows due to Unix-specific headers ([80857f295c](https://github.com/facebook/react-native/commit/80857f295c17e5f8966b3d1c1207d3c4570a1b26) by [@empyrical](https://github.com/empyrical))
+- Fix exception in `scrollResponderScrollNativeHandleToKeyboard` when ref is null ([da8ae011bb](https://github.com/facebook/react-native/commit/da8ae011bbabc8acb7ef7f6903f68dd60aaa1f9d) by [@TheSavior](https://github.com/TheSavior))
+- Fix excessive toggles on the Switch component ([b782934f3f](https://github.com/facebook/react-native/commit/b782934f3f2a80ae7e3872cc7d7a610aa6680ec4) by [@rurikoaraki](https://github.com/rurikoaraki))
+- Fix bare hosts in `URL`. Add missing / between url ([20ab946f34](https://github.com/facebook/react-native/commit/20ab946f34b1d9727ff08c733b2006e84fd79349) by [@jeswinsimon](https://github.com/jeswinsimon))
+- Fix the non-standard usage of `ATOMIC_VAR_INIT` macro from code with systrace enabled ([75a7a52db4](https://github.com/facebook/react-native/commit/75a7a52db496bd3892a367372eea25bf50840fc3))
+- Fix `useWindowDimensions` hook firing continuously after dimensions change ([3b3c95b017](https://github.com/facebook/react-native/commit/3b3c95b0170e60983eb6e89b910d100d08eee141) by [@dulmandakh](https://github.com/dulmandakh))
+- Fix throttling in ScrollView ([4159e20146](https://github.com/facebook/react-native/commit/4159e201462c346c456de1fa869d88a9cce7b6d4) by [@sammy-SC](https://github.com/sammy-SC))
+- Fix `TimingAnimation` rounding error issue ([77b6e26538](https://github.com/facebook/react-native/commit/77b6e2653835af61b186903eae45d67f35351ade) by [@MartinSherburn](https://github.com/MartinSherburn))
+- Fix recycling of Switch ([a261e6dfb2](https://github.com/facebook/react-native/commit/a261e6dfb2680a955943db53c4b0a7bb887bfe22) by [@sammy-SC](https://github.com/sammy-SC))
+
+#### Android specific
+
+- Fix to reset sMatrixDecompositionContext before applying transformations ([bf01dfbc97](https://github.com/facebook/react-native/commit/bf01dfbc97ea8be9d88214ab31809f2f42d6c064) by [@makovkastar](https://github.com/makovkastar))
+- Fix animations in OSS debug builds by modifying `Platform.isTesting()` behavior ([1fbc6a7c17](https://github.com/facebook/react-native/commit/1fbc6a7c178d13421b0b84d6ea01f9174105325f) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix Modal not disappearing when reloading ([5ddf00ee1a](https://github.com/facebook/react-native/commit/5ddf00ee1acbf66c7204227c398a58c13e4545cf) by [@sunnylqm](https://github.com/sunnylqm))
+- Fix to support nullable returns NativeModule methods returning Boxed Primitives ([f57b0caaa4](https://github.com/facebook/react-native/commit/f57b0caaa4452c64006c159cd28a1a562b332c21) by [@RSNara](https://github.com/RSNara))
+- Fix crash in TextInput ([6ebd3b046e](https://github.com/facebook/react-native/commit/6ebd3b046e5b71130281f1a7dbe7220eff95d74a) by [@MarcoPolo](https://github.com/MarcoPolo))
+- Fix View.getGlobalVisibleRect() to clip result rect properly when overflow is 'hidden' ([df9abf7983](https://github.com/facebook/react-native/commit/df9abf798351c43253c449fe2c83c2cca0479d80) by [@davidbiedenbach](https://github.com/davidbiedenbach))
+- Fix throwing "Unknown array type" exception ([4b9350061f](https://github.com/facebook/react-native/commit/4b9350061fa3d186fdd3a973e1b46f60a7ac03b9) by [@petterh](https://github.com/petterh))
+- Fix issue with refresh control not working properly on an inverted ScrollView ([0a282c42b4](https://github.com/facebook/react-native/commit/0a282c42b4d1c2316513cd5588a0a92b54db2991) by [@migbot](https://github.com/migbot))
+- Fix to listen to NFC actions for linking url events ([8d8c3d4e1e](https://github.com/facebook/react-native/commit/8d8c3d4e1eb88366074e87385c4d96a46dfdd544) by [@cimitan](https://github.com/cimitan))
+- Fix onPress prop for Touchable Components being called twice on AndroidTV. ([21890e964d](https://github.com/facebook/react-native/commit/21890e964df7674fcf13cefc8cb939441f6eddef) by [@dbarr33](https://github.com/dbarr33))
+- Fix `includeFontPadding` for `TextInput` placeholder ([211ea485cd](https://github.com/facebook/react-native/commit/211ea485cd993ca25d6640be41e54f327ca1629c) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix medium font weights for TextInput on Android ([8b9f790069](https://github.com/facebook/react-native/commit/8b9f7900697b2e4bb72b37ed2e6c3d113185d327) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix close button issue in KeyboardAvoidingView ([f1c6029e48](https://github.com/facebook/react-native/commit/f1c6029e4868084e5a10d81c15ee3cc5e301599a) by [@saxenanickk](https://github.com/saxenanickk))
+- Fix activity recreation on theme change ([83a16b16c9](https://github.com/facebook/react-native/commit/83a16b16c9afa0fe0328ab818470d4fce098876b) by [@Esemesek](https://github.com/Esemesek))
+- Fix ForwardingCookieHandler missing WebView exceptions. ([314eba98b2](https://github.com/facebook/react-native/commit/314eba98b2f2755cb26ed7a268d3fe83a7626efa) by [@siddhantsoni](https://github.com/siddhantsoni))
+- Fix ReactInstanceManagerBuilder.build crashing if SoLoader has not been explicitly initialized ([60e00d9d96](https://github.com/facebook/react-native/commit/60e00d9d96d7b186c1d4c1542caddc1b74eeb3da) by [@petterh](https://github.com/petterh))
+- Fix default accessibility hint not being read. ([f8dff0bcb3](https://github.com/facebook/react-native/commit/f8dff0bcb3147b7a1aa8ac7159952d848e198e29))
+- Fix JS bundle loading progress bar ([7b9d6d19e2](https://github.com/facebook/react-native/commit/7b9d6d19e2c0854aa53587ef68ce715fb7803e2a) by [@makovkastar](https://github.com/makovkastar))
+- Fix Android Q related NaN error - don't try to do math with NaN values ([db5994980d](https://github.com/facebook/react-native/commit/db5994980df136c5cce6cd90348b4bf18180562f))
+- Fix throwing exceptions when the host activity is not FragmentActivity ([7cfabf42b8](https://github.com/facebook/react-native/commit/7cfabf42b816de758d8e52896bbab0c50e3a802a) by [@mganandraj](https://github.com/mganandraj))
+- Fix crash when using `TextInput.FontVariant` prop in Android API level < 26 ([e885ddedb9](https://github.com/facebook/react-native/commit/e885ddedb9b0a025cb8031414dcc4bd22744a0eb) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- Fix support for `onRequestClose` in Modal on iOS 13+ ([8e5fac89bb](https://github.com/facebook/react-native/commit/8e5fac89bbdcc3028bb5d81a358969a235abf991) by [@koke](https://github.com/koke))
+- Fix `Dimensions` module to update on initial split screen ([7a72c35a20](https://github.com/facebook/react-native/commit/7a72c35a20a18c19bf6ab883cb2c53a85bd4c5c0) by [@sahrens](https://github.com/sahrens))
+- Fix spinner visibility on `beginRefreshingProgrammatically` ([e341489521](https://github.com/facebook/react-native/commit/e341489521ad495e68e8aba01ff4dd25a5e4ff3e) by [@nnabinh](https://github.com/nnabinh))
+- Reconnect to debugger websocket after Metro is restarted. ([13992f90e4](https://github.com/facebook/react-native/commit/13992f90e48fc11e0b7217ee6d9413f97c32268a) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Fix Slider not disabling properly if the disabled prop is set. ([fa9ff07017](https://github.com/facebook/react-native/commit/fa9ff07017edbc76595fe2f2d964ee13c5f4088a))
+- Fix apps crashing on iOS 13.x when running timer in the background ([e1d03b4cc0](https://github.com/facebook/react-native/commit/e1d03b4cc00c361e10687eb4a9f902563cd1cbe1) by [@radko93](https://github.com/radko93))
+- Fix TextInput blur when tabbing in iOS simulator. ([a7437710d2](https://github.com/facebook/react-native/commit/a7437710d25adfc9150fc079e4525ed59d5404e2) by [@fat](https://github.com/fat))
+- Fix promised returned by `Share.share(content, options)` not resolving if share dialog dismissed ([7468a6c903](https://github.com/facebook/react-native/commit/7468a6c9033ffe8cc2315a3de3a759b8745fe43d) by [@v-fernandez](https://github.com/v-fernandez))
+- Fix maximum searching depth while measuring layout by removing it. ([2f8328dbb0](https://github.com/facebook/react-native/commit/2f8328dbb0d9813c904c0b888b2b7500cf4a4bce) by [@draws](https://github.com/dratwas))
+- Fix SafeAreaInsets call to not crash on older versions of iOS ([03acf57b76](https://github.com/facebook/react-native/commit/03acf57b767553acbee4ff589055fbd239ffffbb) by [@mmmulani](https://github.com/mmmulani))
+- Fix to retain `cropData` struct arg in ImageEditingManager.cropImage call ([002d3c179d](https://github.com/facebook/react-native/commit/002d3c179dd2515f0a4d894d9b7f70c4e538f728) by [@RSNara](https://github.com/RSNara)))
+- Fix bug rendering nested text on iOS13 ([06599b3e59](https://github.com/facebook/react-native/commit/06599b3e594355a1d5062ede049ff3e333285516) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix longstanding bug where RCTNullIfNil() can return nil ([79b573511b](https://github.com/facebook/react-native/commit/79b573511bd55e6c82c0044e1930549ccfa8a923) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix crash in RCTScrollViewComponentView ([e7ef9921d3](https://github.com/facebook/react-native/commit/e7ef9921d3f91b02cfec4bbfd88b4968434e201c) by [@shergin](https://github.com/shergin))
+- Fix how the amount of free memory is calculated to mimic the logic Apple uses. ([b53d3d80f9](https://github.com/facebook/react-native/commit/b53d3d80f991937915a87ba8515f403551de139e))
+- Fix animated gifs incorrectly looping ([6f2e6f170e](https://github.com/facebook/react-native/commit/6f2e6f170e3ee785d1ba844971447ea24f91185e) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix `tintColor` in SegmentedControlIOS component ([be89e4d928](https://github.com/facebook/react-native/commit/be89e4d928a504de304f5afb19bd3cc15ae3eb7d) by [@sammy-SC](https://github.com/sammy-SC))
+
+## v0.61.5
+
+This is a patch release that consist of a few commits requested in the [dedicated conversation](https://github.com/react-native-community/releases/issues/151) to improve the quality of the 0.61 release. Thanks to everyone who contributed!
+
+### Fixes
+
+#### Android specific
+
+- Fix bundling assets in monorepo ([a3b0804867](https://github.com/facebook/react-native/commit/a3b08048674e324dbe1f0ca816f35607e9e06a2f) by [@Esemesek](https://github.com/Esemesek))
+- Fix multiple `set-cookie` not aggregated correctly in response headers ([1df8bd4932](https://github.com/facebook/react-native/commit/1df8bd4932f42958c01dccf44cee92b75a6988ed) by **Vincent Cheung**)
+
+## v0.61.4
+
+This is a patch release that consist of a few commits requested in the [dedicated conversation](https://github.com/react-native-community/releases/issues/150) to improve the quality of the 0.61 release. Thanks to everyone who contributed!
+
+### Fixed
+
+- Fix build with Hermes on Windows ([81a6b6ed3c](https://github.com/facebook/react-native/commit/81a6b6ed3c54498f6f2148c106846352405949bf) by [@B27](https://github.com/B27))
+- Fix Chrome debugger showing console.logs at incorrect locations ([42ac240bce](https://github.com/facebook/react-native/commit/42ac240bceb104474494c6007df0089baec00f7a) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+#### iOS specific
+
+- Fix bug in iOS 13 when application would be terminated immediately when in background ([d7c9173b07](https://github.com/facebook/react-native/commit/d7c9173b07171164bcadf73855454e90e07b31be) by [@radko93](https://github.com/radko93))
+
+## v0.61.3
+
+This is a patch release that consist of a few commits requested in the [dedicated conversation](https://github.com/react-native-community/releases/issues/148) to improve the quality of the 0.61 release. Thanks to everyone who contributed!
+
+### Fixed
+
+- Fix bug where ScrollView contentInset top set to undefined wouldn't default to 0 ([d576a5bcc0](https://github.com/facebook/react-native/commit/d576a5bcc0e03dd9c4ccd982f723d6e376e5b680) by [TheSavior](https://github.com/TheSavior))
+- Fix TimingAnimation rounding error issue ([bfd01552af](https://github.com/facebook/react-native/commit/bfd01552af6c074a425da2e7cc1a5908faba2644) by [MartinSherburn](https://github.com/MartinSherburn))
+
+#### iOS specific
+
+- Fix selecting videos from library in iOS 13 ([63769518e0](https://github.com/facebook/react-native/commit/63769518e0c7db60eb39bb5f47fe24f4bc664862) by [fatalsun](https://github.com/fatalsun))
+- Fix bug in iOS13 nested text rendering ([7cf43afa8d](https://github.com/facebook/react-native/commit/7cf43afa8d6a03ccb4cfdc09f81891eabe8b8b70) by [PeteTheHeat](https://github.com/PeteTheHeat))
+
+#### Android specific
+
+- Release underlying resources when JS instance is GC'ed on Android try ([9b2374b542](https://github.com/facebook/react-native/commit/9b2374b542f87b7baefcfb4a3eb4f57029069b57) by [janicduplessis](https://github.com/janicduplessis))
+
+## v0.61.2
+
+This is a patch release that consist of a few commits requested in the [dedicated conversation](https://github.com/react-native-community/releases/issues/146) to improve the quality of the 0.61 release. Thanks to everyone who contributed!
+
+### Fixed
+
+#### Android specific
+
+- Fix elevation issues on Android ([8fd9ab2f54](https://github.com/facebook/react-native/pull/26682) by [@grabbou](https://github.com/grabbou))
+
+### Added
+
+- Use `warnOnce` for excessive number of callbacks error ([0cafa0f5d1](https://github.com/facebook/react-native/commit/0cafa0f5d1e7fa5369b765f4b97f38bf1608230a) by [@janicduplessis](https://github.com/anicduplessis))
+- Include transform in OUTER_PROPS ([b94438](https://github.com/facebook/react-native/commit/b94438) by [@migbot](https://github.com/migbot))
+
+#### iOS specific
+
+- Better iOS13 support in `StatusBar` API ([796b3a1f88](https://github.com/facebook/react-native/commit/796b3a1f8823c87c9a066ea9c51244710dc0b9b5) by [@gaodeng](https://github.com/gaodeng))
+
+#### Android specific
+
+- Improve error message in NativeModuleRegistryBuilder ([113c4e229c](https://github.com/facebook/react-native/commit/113c4e229c374232c46a89afd74df7117a3447c1) by [@vonovak](https://github.com/vonovak))
+
+## v0.61.1
+
+This is a patch release that consist of a few commits requested in the [dedicated conversation](https://github.com/react-native-community/releases/issues/144) to improve the quality of the 0.60 release. Thanks to everyone who contributed!
+
+### Fixed
+
+#### iOS specific
+
+- Fix ShareSheet crash on iOS 13 ([a4fbb8e75b](https://github.com/facebook/react-native/commit/a4fbb8e75bd9f521037926a68a8b75eaca2eca74) by [@tomtargosz](https://github.com/tomtargosz))
+
+#### Android specific
+
+- Allow again for injecting custom root view via ReactActivityDelegate ([9f0dede1c9](https://github.com/facebook/react-native/commit/9f0dede1c913612e1241432f4cbccdc74d23a1e4) by [@kmagiera](https://github.com/kmagiera))
+
+## v0.61.0
+
+This is a major release that includes the new reloading experience Fast Refresh. It also removes the React `.xcodeproj`, fixes `use_frameworks!` for CocoaPods support, adds a `useWindowDimensions` hook, and upgrades to React 16.9.
+
+### Added
+
+- Add Fast Refresh by default ([17f8e5810f](https://github.com/facebook/react-native/commit/17f8e5810f3260ce1b24c61665883bab8847aabe) by [@gaearon](https://github.com/gaearon))
+- Add `useWindowDimensions` hook to replace most `Dimensions` usage ([103ec2f770](https://github.com/facebook/react-native/commit/103ec2f770dbb785ef4bc26f8662c74edded796a) by [@sahrens](https://github.com/sahrens))
+
+#### Android specific
+
+- Add exception in .gitignore for `debug.keystore` to the android template. ([d55025694b](https://github.com/facebook/react-native/commit/d55025694be8b4ee5d09c8fdc910d42a5f144883) by [@bondehagen](https://github.com/bondehagen))
+- Add jitpack repository to template ([1a92cf9b2a](https://github.com/facebook/react-native/commit/1a92cf9b2afa718a81299b4be5ab6bdff16f4863) by [@iyegoroff](https://github.com/iyegoroff))
+
+#### iOS specific
+
+- Add RCTWeakProxy to properly deallocate RCTUIImageViewAnimated ([947e71a922](https://github.com/facebook/react-native/commit/947e71a922c0db5d3d3780d249d1a8d183534c22) by [@mmmulani](https://github.com/mmmulani))
+
+### Changed
+
+- Use prettyFormat for Metro logging ([abd7faf354](https://github.com/facebook/react-native/commit/abd7faf3547e165abfc52383d3709b9d4d2e9006) by [@cpojer](https://github.com/cpojer))
+- Tweak messages and fix the warning condition ([2a3ac0429b](https://github.com/facebook/react-native/commit/2a3ac0429b0e4c443d185807a39b41fc5a2ab1d2) by [@gaearon](https://github.com/gaearon))
+- Allow jest globals in **mocks** directories ([e78c01375a](https://github.com/facebook/react-native/commit/e78c01375aef88e0bb4029479acac9e85ecaf080) by [@artdent](https://github.com/artdent))
+- Make Animation EndCallback type allow any return value ([306c8d64d9](https://github.com/facebook/react-native/commit/306c8d64d91f87b248f627333de7f24355248088) by [@draperunner](https://github.com/draperunner))
+- create two layout pass reason flexLayout and flexMeasure instead of flex ([6ce985463b](https://github.com/facebook/react-native/commit/6ce985463b2724451baed8b0486b298f969e36e7) by [@SidharthGuglani](https://github.com/SidharthGuglani))
+- Use shorthand for Fragment in App.js ([7cac6a4b6c](https://github.com/facebook/react-native/commit/7cac6a4b6cfa8c1b54db62f2b1510f7c52f4574d) by [@ferdicus](https://github.com/ferdicus))
+- Use eslint-plugin-prettier recommended config ([d2b92fffb1](https://github.com/facebook/react-native/commit/d2b92fffb1d14dd0ec628e9dcdfd76e39f2067ff) by [@Justkant](https://github.com/Justkant))
+- Support string command arguments ([0314305e12](https://github.com/facebook/react-native/commit/0314305e1202e48c74091e15da8574f1b92ce441) by [@TheSavior](https://github.com/TheSavior))
+- chore: Link to CLA wiki and CLA form. ([e2d55d5c5e](https://github.com/facebook/react-native/commit/e2d55d5c5ef40ccae3220dc0e1fca7cf3592c676) by [@JustinTRoss](https://github.com/JustinTRoss))
+- CLI is now ^3.0.0-alpha.1 ([5edd1c674c](https://github.com/facebook/react-native/commit/5edd1c674c911a6c59aaad8ed36ce12fa98787ff) by [@thymikee](https://github.com/thymikee))
+- Flow is now v0.104.0 ([59db059dbd](https://github.com/facebook/react-native/commit/59db059dbddb8101212f3739eecf0db494cfab41) by [@mroch](https://github.com/mroch))
+- React is now at 16.9 ([40e8a5f685](https://github.com/facebook/react-native/commit/40e8a5f685376300aa5365de4557cd395996b9a2), [0ccedf3964](https://github.com/facebook/react-native/commit/0ccedf3964b1ebff43e4631d1e60b3e733096e56) by [@TheSavior](https://github.com/TheSavior))
+- Use Metro for auto-collapsing internal stack frames ([77125a1ac3](https://github.com/facebook/react-native/commit/77125a1ac364a6b7e2382fdc86cc19a3e2eba089) by [@motiz88](https://github.com/motiz88))
+- Move React error message formatting into ExceptionsManager ([2dadb9e2b0](https://github.com/facebook/react-native/commit/2dadb9e2b0ba26223ed83a30af620ce3e62e245f) by [@motiz88](https://github.com/motiz88))
+- Improve VirtualizedList error message ([bef87b648c](https://github.com/facebook/react-native/commit/bef87b648c4bed228f1c5889abe0181a271edf76) by [@vonovak](https://github.com/vonovak))
+
+#### Android specific
+
+- Bump Hermes to v0.2.1 ([811401bcac](https://github.com/facebook/react-native/commit/811401bcac02f3e6e154c7e0f76f9f82eeaa6959) by [@sunnylqm](https://github.com/sunnylqm))
+- Use centralized package for DoNotStrip annotation ([35fc0add2d](https://github.com/facebook/react-native/commit/35fc0add2d3a278bf90257284fe23e03898008de) by [@passy](https://github.com/passy))
+
+#### iOS specific
+
+- Do not override ActivityIndicator color when setting its size ([14b0ed4c5d](https://github.com/facebook/react-native/commit/14b0ed4c5d872cd992f6e1ca072a2c44c8ece25f) by [@cabelitos](https://github.com/cabelitos))
+- fix display problems when image fails to load ([71d7d6883c](https://github.com/facebook/react-native/commit/71d7d6883cb9a3d18666f04a444de7b4a611b304))
+- Renamed yoga podspec to Yoga ([82a8080f07](https://github.com/facebook/react-native/commit/82a8080f0704e83079d0429e4e367f5131052e64) by [@axe-fb](https://github.com/axe-fb))
+- Update loading pre-bundled message ([eb92f8181f](https://github.com/facebook/react-native/commit/eb92f8181f3119bbc69ff7cb5aff2e03d993b8b3) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+### Deprecated
+
+- Deprecate method UIManagerModule.playTouchSound() ([e3ec8dbe15](https://github.com/facebook/react-native/commit/e3ec8dbe15a07e86530e1fd801c27ad8c1023b5c) by [@mdvacca](https://github.com/mdvacca))
+- Deprecate UIManager.measureLayoutRelativeToParent ([e42009b784](https://github.com/facebook/react-native/commit/e42009b7849f1cfd6d6d34e28c564ec5e39680bb) by [@mdvacca](https://github.com/mdvacca))
+
+#### Android specific
+
+- DrawerLayoutAndroid drawerPosition now expects a string, number is deprecated ([305b0a2814](https://github.com/facebook/react-native/commit/305b0a28142414d559d2d08795a5963716dc4b0f) by [@TheSavior](https://github.com/TheSavior))
+
+### Removed
+
+#### Android specific
+
+- Remove supportLibVersion variable in build.gradle ([fee7f0617e](https://github.com/facebook/react-native/commit/fee7f0617ee6e4f10edf6b8e36da6c5fb00d22ac) by [@ferdicus](https://github.com/ferdicus))
+
+#### iOS Specific
+
+- Remove 's.static_framework = true' requirement for podspec ([ca9e108110](https://github.com/facebook/react-native/commit/ca9e108110e4a3cc39044805f879d9a9cb637c41) by [@jtreanor](https://github.com/jtreanor))
+
+### Fixed
+
+- Add ErrorUtils to eslint globals ([76af5f9163](https://github.com/facebook/react-native/commit/76af5f916303d7906ea522076c965292145a1370) by [@rodineijf](https://github.com/rodineijf))
+- URL: Do not prepend baseUrl if the URL is not a relative URL ([e104204ae0](https://github.com/facebook/react-native/commit/e104204ae083d31e0b9967373ce79f2f1ca8fbb6) by [@jeswinsimon](https://github.com/jeswinsimon))
+- Memory Leak due to JSStringRelease not called ([b8d6ef3726](https://github.com/facebook/react-native/commit/b8d6ef372663fe6d467144abfc5d2c9352dc28d6) by [@sachinservicemax](https://github.com/sachinservicemax))
+- Fixed rotateZ native animation ([f4f08d3c54](https://github.com/facebook/react-native/commit/f4f08d3c549f2af7cd04ef78fe800d3bc12af1f0) by [@Titozzz](https://github.com/Titozzz))
+- Fix indentation in Gradle files ([9b0adb5ad1](https://github.com/facebook/react-native/commit/9b0adb5ad132b8ff37e707a4943411d92b4e58dc) by [@sonicdoe](https://github.com/sonicdoe))
+- Fix handling of failed image downloads ([71d7d6883c](https://github.com/facebook/react-native/commit/71d7d6883cb9a3d18666f04a444de7b4a611b304) by [@sammy-SC](https://github.com/sammy-SC))
+- Fix SectionList scrollToLocation and prevent regressions ([8a82503b54](https://github.com/facebook/react-native/commit/8a82503b54e3c63230a07de99ec082b2dcb54bc7) by [@vonovak](https://github.com/vonovak))
+- [General][internal] Fix incorrect `module.name_mapper` in template .flowconfig ([e6b2cf0418](https://github.com/facebook/react-native/commit/e6b2cf04188fc9647bae4bef4cca5d4dde22a657) by [@MoOx](https://github.com/MoOx))
+- Fall back to `JSON.stringify` in `console.log` if Symbol is unavailable ([179889704b](https://github.com/facebook/react-native/commit/179889704b6f9d56cb990d5b9bba6ee5ea2cd13f) by [@cpojer](https://github.com/cpojer))
+- Pop frames correctly in console.error handler ([3eaf245540](https://github.com/facebook/react-native/commit/3eaf2455402b5ad73c8a059311f0cb213df9dd28) by [@motiz88](https://github.com/motiz88))
+- Add documentation to TextInput's Flow types ([d00f0882fb](https://github.com/facebook/react-native/commit/d00f0882fbdd532f8698d2569bd771ca5843d0f5) by [@empyrical](https://github.com/empyrical))
+
+#### Android specific
+
+- Add missing Hermes include ([1db96a3c46](https://github.com/facebook/react-native/commit/1db96a3c469b872e851553207e5420d54afc731a) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix UIManager.measure to consider scale and rotation transforms ([28d50189f3](https://github.com/facebook/react-native/commit/28d50189f3350e7550bf03ea5bd1363839ee2911) by [@floriancargoet](https://github.com/floriancargoet))
+
+#### iOS specific
+
+- Fixed iOS packager connection ([4ab9da134c](https://github.com/facebook/react-native/commit/4ab9da134c988db832b1a2daa90ce38bf8c419eb) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fixed compatibility with CocoaPods frameworks. ([8131b7bb7b](https://github.com/facebook/react-native/commit/8131b7bb7b4794e0e7003a6e3d34e1ebe4b8b9bc) by [@jtreanor](https://github.com/jtreanor))
+- Don't call sharedApplication in App Extension ([c5ea18f738](https://github.com/facebook/react-native/commit/c5ea18f7389fe821e7a9882e4b1b30b0a1b266f4) by [@zhongwuzw](https://github.com/zhongwuzw))
+
+## v0.60.6
+
+This is a small patch release with a commit to fix the build break in MSVC to help the users of react-native-windows. ([9833ee7bc1](https://github.com/facebook/react-native/commit/9833ee7bc19982acd6ccaf6ac222bc24a97667a8) by [@acoates-ms](https://github.com/acoates-ms))
+
+## v0.60.5
+
+This is a patch release that consist of a few commits requested in the [dedicated conversation](https://github.com/react-native-community/releases/issues/130) to improve the quality of the 0.60 release. Thanks to everyone who contributed!
+
+### Added
+
+- Added a default Prettier config for new projects ([7254bab0b3](https://github.com/facebook/react-native/commit/7254bab0b3fa129cd238783ab993fbae1102d60a) by [@jpdriver](https://github.com/jpdriver))
+
+#### Android specific
+
+- Add showSoftInputOnFocus to TextInput ([d88e4701fc](https://github.com/facebook/react-native/commit/d88e4701fc46b028861ddcfa3e6ffb141b3ede3d))
+
+### Changed
+
+- Bump CLI to ^2.6.0 ([fafe5ee072](https://github.com/facebook/react-native/commit/fafe5ee0726061e3590b91d3b5cff04e33781f87) by [@thymikee](https://github.com/thymikee))
+
+### Fixed
+
+- Ensure right version of Metro bundler is used ([1bb197afb1](https://github.com/facebook/react-native/commit/1bb197afb191eab134354386700053914f1ac181) by [@kelset](https://github.com/kelset))
+
+#### Android specific
+
+- Fix `ClassNotFound` exception in Android during Release builds ([ffdf3f22c6](https://github.com/facebook/react-native/commit/ffdf3f22c68583fe77517f78dd97bd2e97ff1b9e) by [@thecodrr](https://github.com/thecodrr))
+- Remove unnecessary flag when running JS server ([a162554f5d](https://github.com/facebook/react-native/commit/a162554f5dc36fa0647b5bf52119a62bd20046e3) by [@thecodrr](https://github.com/thecodrr))
+- Correctly set the border radius on android ([b432b8f13b](https://github.com/facebook/react-native/commit/b432b8f13b4871dcafd690e57d37298662712b50) by [@cabelitos](https://github.com/cabelitos))
+- Fix addition of comma at the end of accessibility labels on Android. ([812abfdbba](https://github.com/facebook/react-native/commit/812abfdbba7c27978a5c2b7041fc4a900f3203ae) by [@marcmulcahy](https://github.com/marcmulcahy))
+
+#### iOS specific
+
+- Don't call sharedApplication in App Extension ([c5ea18f738](https://github.com/facebook/react-native/commit/c5ea18f7389fe821e7a9882e4b1b30b0a1b266f4) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Delete fishhook ([46bdb4161c](https://github.com/facebook/react-native/commit/46bdb4161c84b33f1d0612e9c7cdd824462a31fd) by [@mmmulani](https://github.com/mmmulani))
+
+You can participate to the conversation for the next patch release in the dedicated [issue](https://github.com/react-native-community/react-native-releases/issues/130).
+
+## v0.60.4
+
+This is a patch release that contains two more Hermes related fixes, thanks to the contributors for helping improving the support!
+
+### Fixed
+
+#### Android specific
+
+- Generate correct source map if hermes not enabled ([b1f81be4bc](https://github.com/facebook/react-native/commit/b1f81be4bc21eb9baa39dd7ef97709d9927ad407) by [@HazAT](https://github.com/HazAT))
+- Generate source maps outside of assets/ ([60e75dc1ab](https://github.com/facebook/react-native/commit/60e75dc1ab73b2893ec2e25c0320f32b3cf12b80) by [@motiz88](https://github.com/motiz88))
+
+You can participate to the conversation for the next patch release in the dedicated [issue](https://github.com/react-native-community/react-native-releases/issues/130).
+
+## v0.60.3
+
+This is a patch release that fixes the binary path to Hermes package, thanks to [@zoontek](https://github.com/zoontek)) for creating the PR!
+
+You can participate to the conversation for the next patch release in the dedicated [issue](https://github.com/react-native-community/react-native-releases/issues/130).
+
+## v0.60.2
+
+This is a patch release that fixes the path to Hermes package.
+
+You can participate to the conversation for the next patch release in the dedicated [issue](https://github.com/react-native-community/react-native-releases/issues/130).
+
+## v0.60.1
+
+This is a patch release that includes the Hermes JavaScript Engine announced at Chain React Conf 2019.
+
+Check out the documentation to opt-in and give [Hermes a try](https://reactnative.dev/docs/hermes).
+
+You can participate to the conversation for the next patch release in the dedicated [issue](https://github.com/react-native-community/react-native-releases/issues/130).
+
+## v0.60.0
+
+This feature release of React Native includes many milestone changes for the platform. Please refer to the [blog post](https://reactnative.dev/blog/2019/07/03/version-60) for selected details. For upgrading users, some of the progress comes with breaking changes; manual intervention may be required for your app. We're also aware that existing CocoaPods integrations using `use_frameworks` are not out-of-the-box compatible with this version, but please consider [various workarounds](https://github.com/facebook/react-native/issues/25349) while we prepare a long-term solution for a future release. If you're interested in helping evaluate our next release (0.61), subscribe to the dedicated issue [here](https://github.com/react-native-community/react-native-releases/issues/130).
+
+Have you ever considered contributing to React Native itself? Be sure to check out [Contributing to React Native](https://github.com/facebook/react-native/blob/master/CONTRIBUTING.md).
+
+### Added
+
+- CLI autolinking support ([5954880875](https://github.com/facebook/react-native/commit/5954880875d8dfb9b7868aa316647f8fe2b3d8c3), [da7d3dfc7d](https://github.com/facebook/react-native/commit/da7d3dfc7d3bd83e7522175a720b30fee4c9b3d3) by [@zhongwuzw](https://github.com/zhongwuzw) and [@hramos](https://github.com/hramos))
+- New Intro screen ([6b393b27e1](https://github.com/facebook/react-native/commit/6b393b27e18e663d39b66fd121ee302bce29d77d), [233fddbe01](https://github.com/facebook/react-native/commit/233fddbe012098dce3719ba066d3dc653e05e6c9), [fe88e9e48c](https://github.com/facebook/react-native/commit/fe88e9e48ce99cb8b9da913051cc36575310018b), [aa926e349b](https://github.com/facebook/react-native/commit/aa926e349b1656b02b8c1a2048cc56b25f9567c1), [a9e8a71e53](https://github.com/facebook/react-native/commit/a9e8a71e531510baf126780cecdcbc64c934f4dd), [ad4a5d9a3e](https://github.com/facebook/react-native/commit/ad4a5d9a3eac9794038e93158d45e7f1ceb9e495), and [0245fd713e](https://github.com/facebook/react-native/commit/0245fd713ea9ff6fe334980f537e2254a9e3126c) by [@cpojer](https://github.com/cpojer), [@eliperkins](https://github.com/eliperkins), [@lucasbento](https://github.com/lucasbento), [@orta](https://github.com/orta), [@adamshurson](https://github.com/adamshurson), [@karanpratapsingh](https://github.com/karanpratapsingh) and [@glauberfc](https://github.com/glauberfc))
+- Add enhanced accessibility actions support ([7fb02bd908](https://github.com/facebook/react-native/commit/7fb02bd90884f0a717e8151d4d30767fe38392c1) by [@xuelgong](https://github.com/xuelgong))
+- Add additional accessibility roles and states ([1aeac1c625](https://github.com/facebook/react-native/commit/1aeac1c62528004d994200664368dc85fba1795d))
+- Add `isReduceMotionEnabled()` plus `reduceMotionChanged` to `AccessibilityInfo` ([0090ab32c2](https://github.com/facebook/react-native/commit/0090ab32c2aeffed76ff58931930fe40a45e6ebc) by [@estevaolucas](https://github.com/estevaolucas)])
+- Add support for cancelling fetch requests with `AbortController` ([h5e36b0c](https://github.com/facebook/react-native/commit/5e36b0c6eb2494cefd11907673aa018831526750) by [@janicduplessis](https://github.com/janicduplessis))
+
+#### Android specific
+
+- Enable views to be nested within **Text**; this brings feature parity to Android, but be aware that it [has some limitations](https://github.com/facebook/react-native/commit/a2a03bc68ba062a96a6971d3791d291f49794dfd) ([5c399a9f74](https://github.com/facebook/react-native/commit/5c399a9f74f22c58c11f75abde32ac7dc269ccc0) by [@rigdern](https://github.com/rigdern))
+- Add a `touchSoundDisabled` prop to **Button**, **Touchable**, and **TouchableWithoutFeedback** ([45e77c8324](https://github.com/facebook/react-native/commit/45e77c8324f7dc2d53109e45a4e0b18cbab6a877) by [@yurykorzun](https://github.com/yurykorzun))
+
+#### iOS specific
+
+- Add `announceForAccessibility` and `announcementFinished` APIs for making screen reader announcements ([cfe003238a](https://github.com/facebook/react-native/commit/cfe003238ab8c5686d185f6ce9e0776eeb4bb729) by [@rigdern](https://github.com/rigdern))
+- Ability to force network requests to use WiFi using the `allowsCellularAccess` property. This can ensure that network requests are sent over WiFi if communicating with a local hardware device and is accomplished by setting a flag. Default behavior of allowing network connections over cellular networks when available is unchanged. ([01c70f2fb9](https://github.com/facebook/react-native/commit/01c70f2fb9e8ac78a4d0cbd016d4de47316fe4d1) and [916186a7e6](https://github.com/facebook/react-native/commit/916186a7e6c43b1a1c68652ab82862bcd8fb1e01) by [@bondparkerbond](https://github.com/bondparkerbond)and [@zhongwuzw](https://github.com/zhongwuzw))
+- `$RN_CACHE_DIR` can now be used to manually specify the iOS build cache directory ([845eee403e](https://github.com/facebook/react-native/commit/845eee403e1cd3cb36935ef142f411f2b5075346) by [@hramos](https://github.com/hramos))
+
+### Changed
+
+- _BREAKING_ Migrated to AndroidX; please see [this thread](https://github.com/react-native-community/discussions-and-proposals/issues/129#issuecomment-503829184) for more details on this change
+- Cleanup **RedBox** message and stack output; it's now far easier to understand ([49d26eb0c4](https://github.com/facebook/react-native/commit/49d26eb0c4aeb611c6cb37a568708afa67b48c18) by [@thymikee](https://github.com/thymikee))
+- Add default `scrollEventThrottle` value to **Animated.FlatList** and **Animated.SectionList**; this now behaves consistently with **Animated.ScrollView** ([933e65e245](https://github.com/facebook/react-native/commit/933e65e245b30f7dc5a26aa51881153fb7c3628e) by [@janicduplessis](https://github.com/janicduplessis))
+- Remove invariant on nested sibling **VirtualizedLists** without unique listKey props; they now trigger a **RedBox** ([af5633bcba](https://github.com/facebook/react-native/commit/af5633bcba224f71f035ba4214a93b69723c9b93))
+- **FlatList** and **VirtualizedList**'s default `keyExtractor` now checks `item.id` and `item.key` ([de0d7cfb79](https://github.com/facebook/react-native/commit/de0d7cfb79c7f4011d4b6748b1afc656d33fd5ac) by [@sahrens](https://github.com/sahrens))
+- **SectionList**'s `scrollToLocation` on iOS now counts `itemIndex` like Android; both platforms are now consistent, and the `itemIndex` value 0 now represents scrolling to the first heading ([248a108abf](https://github.com/facebook/react-native/commit/248a108abf206b7ae32208537f0b73a8192a4829) by [@vonovak](https://github.com/vonovak))
+- Slightly speedup core initialization by moving native version check to DEV only ([5bb2277245](https://github.com/facebook/react-native/commit/5bb22772452e49dbcfbf183f6ebeee4576e67947) by [@mmmulani](https://github.com/mmmulani))
+- `react` is now at v16.8.6 ([53cec2dc1f](https://github.com/facebook/react-native/commit/53cec2dc1f1f5d143d0bb9752629b72350ebd112), [ee681b72ce](https://github.com/facebook/react-native/commit/ee681b72ce89539e5764ed59e5dfea4fab04d48c), and [6001acb319](https://github.com/facebook/react-native/commit/6001acb319958242f8d8e2dd40cb91a55b5eab2e) by [@kelset](https://github.com/kelset), [@mdvacca](https://github.com/mdvacca), [@gaearon](https://github.com/gaearon))
+- `react-native-community/cli` is now at v2.0.0 (by [@thymikee](https://github.com/thymikee))
+- `flow` is now at v0.98 ([0e1dfd4369](https://github.com/facebook/react-native/commit/0e1dfd436917a78a09da7b57a0b50397e6a0b6e1) by [@nmote](https://github.com/nmote))
+- `prettier` is now at v1.17.0 ([ff9f8f347d](https://github.com/facebook/react-native/commit/ff9f8f347d71630664dc3da1e8be0425799c0ce0))
+- `metro` packages are now at v0.54.1 ([7ff3874ec0](https://github.com/facebook/react-native/commit/7ff3874ec060bce568537a2238aea2c888e6e13f), [343f0a1d50](https://github.com/facebook/react-native/commit/343f0a1d50662aa37ef0b26d5436b2a0b40fbabb) by [@motiz88](https://github.com/motiz88))
+- Replace patched fetch polyfill with `whatwg-fetch@3.0` ([bccc92dfdd](https://github.com/facebook/react-native/commit/bccc92dfdd2d85933f2a9cb5c8d1773affb7acba) by [@janicduplessis](https://github.com/janicduplessis))
+
+#### Android specific
+
+- Use class canonical name for `PARTIAL_WAKE_LOCK` tag ([88dbb4558c](https://github.com/facebook/react-native/commit/88dbb4558cd10f129f2c31e3b0b872924aba5416) by [@timwangdev](https://github.com/timwangdev))
+
+#### iOS specific
+
+- _BREAKING_: Split React.podspec into separate podspecs for each Xcode project; your libraries will need to update for this change as well to avoid CocoaPods build errors ([2321b3fd7f](https://github.com/facebook/react-native/commit/2321b3fd7f666ce30f5dad4cd2673ddf22972056) by [@fson](https://github.com/fson))
+- Improve handling of native module exceptions; they are now propagated to crash reporting tools with the context and callstack ([629708beda](https://github.com/facebook/react-native/commit/629708bedae65a30e39d234da6b04d6fa101a779) by [@pvinis](https://github.com/pvinis))
+- Switch **Slider** `onSlidingComplete` event to a non-bubbling event on iOS to match Android ([7927437a6d](https://github.com/facebook/react-native/commit/7927437a6d5d63de2424d43d58085291c1067091) by [@rickhanlonii](https://github.com/rickhanlonii))
+
+### Deprecated
+
+- **StatusBar** is no longer deprecated; thank you for the feedback ([a203ebe206](https://github.com/facebook/react-native/commit/a203ebe2062b3c12f85783f46030971f3aa5db1d) by [@cpojer](https://github.com/cpojer))
+
+### Removed
+
+- **NetInfo** has been removed; its replacement is now available via the [react-native-community/netinfo](https://github.com/react-native-community/react-native-netinfo) package ([5a30c2a205](https://github.com/facebook/react-native/commit/5a30c2a2052ba76e88dbf71b5b5c92966591bf26) by [@cpojer](https://github.com/cpojer))
+- **WebView** has been removed; its replacement is now available via the [react-native-community/webview](https://github.com/react-native-community/react-native-webview) package ([](https://github.com/facebook/react-native/commit/6ca438a7f4bd7e6b317f0461aebbd5a7186151ed), [1ca9a95537](https://github.com/facebook/react-native/commit/1ca9a9553763a89c977f756b45486f8b9cedab80), and [954f715b25](https://github.com/facebook/react-native/commit/954f715b25d3c47c35b5a23ae23770a93bc58cee) by [@cpojer](https://github.com/cpojer) and [@thorbenprimke](https://github.com/thorbenprimke))
+- **Geolocation** has been removed; its replacement is now available via the [react-native-community/geolocation](https://github.com/react-native-community/react-native-geolocation) package ([17dbf98884](https://github.com/facebook/react-native/commit/17dbf988845bb7815dbb6182218c8c28d027fb91) and [9834c580af](https://github.com/facebook/react-native/commit/9834c580af654366bf0d38b78cd2694b0a0c477f) by [@cpojer](https://github.com/cpojer) and [@mmmulani](https://github.com/mmmulani))
+
+### Fixed
+
+- Fix `Animated.Value` value after animation if component was re-mounted ([b3f7d53b87](https://github.com/facebook/react-native/commit/b3f7d53b87413abdf302c521114e4d77aa92e07f) by [@michalchudziak](https://github.com/michalchudziak))
+- Consistent reporting native module name on crash on native side ([fdd8fadea8](https://github.com/facebook/react-native/commit/fdd8fadea84f475714a16b6f0ec433f898d09558) and [b79d7db9db](https://github.com/facebook/react-native/commit/b79d7db9dbf588085b29274e507d34438e2e2595) by [@DimitryDushkin](https://github.com/DimitryDushkin))
+- Handle null filenames in symbolicated stack trace gracefully in **ExceptionsManager** ([2e8d39bed7](https://github.com/facebook/react-native/commit/2e8d39bed70e2e5eeddeb2dc98155bf70f9abebd) by [@motiz88](https://github.com/motiz88))
+- Fix HasteImpl platform name regex ([28e0de070d](https://github.com/facebook/react-native/commit/28e0de070d2dae9a486ab5915b6fd76723bd84ef) by [@CaptainNic](https://github.com/CaptainNic))
+- Fix a JS memory leak in Blob handling; this resolves multiple leaks around `fetch` ([05baf62721](https://github.com/facebook/react-native/commit/05baf6272143667694585a14fb59657fdc93c3b1) and [9ef5107d04](https://github.com/facebook/react-native/commit/9ef5107d04da374fc566d8b296572ddd992419f0) by [@janicduplessis](https://github.com/janicduplessis))
+- **SectionList**'s `scrollToLocation` now scrolls to the top of the sticky header as expected ([d376a444e3](https://github.com/facebook/react-native/commit/d376a444e318beabd8ebe9ccb41ffc300e12ea76) by [@danilobuerger](https://github.com/danilobuerger))
+
+#### Android specific
+
+- Fix duplicate resource error in Android build ([962437fafd](https://github.com/facebook/react-native/commit/962437fafd02c936754d1e992479056577cafd05) and [eb534bca58](https://github.com/facebook/react-native/commit/eb534bca58a89ae306010626a8bdae92c23b8784) by [@mikehardy](https://github.com/mikehardy) and [@Dbroqua](https://github.com/Dbroqua))
+- Reorder operations of native view hierarchy ([5f027ec64d](https://github.com/facebook/react-native/commit/5f027ec64d6764fbbb9813fabb373194dec79db7) by [@lunaleaps](https://github.com/lunaleaps))
+- Fix performance regression from new custom fonts implementation ([fd6386a07e](https://github.com/facebook/react-native/commit/fd6386a07eb75a8ec16b1384a3e5827dea520b64) by [@dulmandakh](https://github.com/dulmandakh))
+- Fix internal test case around disabled state of buttons ([70e2ab2ec9](https://github.com/facebook/react-native/commit/70e2ab2ec9a1df60b39987946af18cac8621b3b0))
+- Fix extra call of **PickerAndroid**'s `onValueChange` on initialization; now it is only called when `selectedValue` changes ([82148da667](https://github.com/facebook/react-native/commit/82148da6672e613f34ffb48133cdefc235418dea) by [@a-c-sreedhar-reddy](https://github.com/a-c-sreedhar-reddy))
+- Fix **PickerAndroid** will reset selected value during items update ([310cc38a5a](https://github.com/facebook/react-native/commit/310cc38a5acb79ba0f1cda22913bd1d0cb296034) by [@Kudo](https://github.com/Kudo))
+- Fix unexpected PARTIAL_WAKE_LOCK when no headless tasks registered. ([bdb1d4377e](https://github.com/facebook/react-native/commit/bdb1d4377e47c6cd49ff619134d4860519a3cb0c) by [@timwangdev](https://github.com/timwangdev))
+- Fix calling **TextInput**'s `onKeyPress` method when the user types an emoji ([a5c57b4ed4](https://github.com/facebook/react-native/commit/a5c57b4ed4965ac4bb231399fd145da8095cece3))
+- Fix value of **TextInput**'s `onSelectionChange` start and end arguments by normalizing them ([2ad3bb2e2d](https://github.com/facebook/react-native/commit/2ad3bb2e2d62ffb780bab020f645626a16dd3b4a) by [@uqmessias](https://github.com/uqmessias))
+- In `Linking.getInitialURL` method, use the `InteractionManager` to wait for the current activity to finish initializing ([c802d0b757](https://github.com/facebook/react-native/commit/c802d0b757912358d703d4d8a114073377a905b9) by [@mu29](https://github.com/mu29))
+- Disable delta bundles on the first app run ([e4aff423ac](https://github.com/facebook/react-native/commit/e4aff423ac0421f4af7b9a111e5ad954f489da19) by [@wojteg1337](https://github.com/wojteg1337))
+- In **DatePickerAndroid**, work around Android Nougat bug displaying the wrong the spinner mode ([bb060d6cf8](https://github.com/facebook/react-native/commit/bb060d6cf89500778bba27d1da5925e2623c7a99) by [@luancurti](https://github.com/luancurti))
+- Fix crash in Animated Interpolation when inputMin === inputMax ([7abfd23b90](https://github.com/facebook/react-native/commit/7abfd23b90db08b426c3c91b0cb6d01d161a9b9e) by [@olegbl](https://github.com/olegbl))
+- Fix symbolication for **RedBox** and **YellowBox** when using delta bundling ([a05e9f8e09](https://github.com/facebook/react-native/commit/a05e9f8e094b25cc86ee297477cccafc3be5ef52) by [@motiz88](https://github.com/motiz88))
+- Fix **CameraRoll** crash on mime type guessing ([ebeb893b50](https://github.com/facebook/react-native/commit/ebeb893b50b4aa1ad77bdb203e4f8faed75db43a) by [@Sroka](https://github.com/Sroka))
+
+#### iOS specific
+
+- Call designated initializer for SurfaceHostingProxyRootView ([3c125e867f](https://github.com/facebook/react-native/commit/3c125e867f52efd7f18b2bd8c9a21b246afcd788) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix **RedBox** JS symbolication when adding JS engine tag to the message ([920632cadb](https://github.com/facebook/react-native/commit/920632cadb108ceeacad93e9316e706608df2942) by [@motiz88](https://github.com/motiz88))
+- Fix **TextInput**'s `onSelectionChange` behavior in single line text inputs ([0c11d8d9b4](https://github.com/facebook/react-native/commit/0c11d8d9b4edf7830255f5b016d0ba7ef72ae827) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix accessibility problem with **TextInput** Clear Button ([4e37d37cbf](https://github.com/facebook/react-native/commit/4e37d37cbff27e61659440094a662e00eafd8fc4) by [@shergin](https://github.com/shergin))
+- Fix `renderingMode` not applied to GIF **Image**s ([75380aa329](https://github.com/facebook/react-native/commit/75380aa3296210777dc0be70a722701767276117) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix **ScrollView** `centerContent` not work in some cases ([2cdf9694b5](https://github.com/facebook/react-native/commit/2cdf9694b56e76477dde572eb3dc38be31361eab) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix crash on performance logger ([5d3d3987d8](https://github.com/facebook/react-native/commit/5d3d3987d8a81b84d43dc88808d7f50c7bf11d19) by [@zhigang1992](https://github.com/zhigang1992))
+- Do not run packager in Release mode ([4ea6204111](https://github.com/facebook/react-native/commit/4ea62041118fb031d7540726df2d29185c6b130d) by [@lucasbento](https://github.com/lucasbento))
+- Fix `code` and `reason` arguments being ignored when calling `WebSocket.close` ([0ac2171c54](https://github.com/facebook/react-native/commit/0ac2171c549b389228c4a37ae645eb0d9813b82d) by [@jeanregisser](https://github.com/jeanregisser))
+- Fix return value of `Linking.openURL()` ([4a5d0bdbd7](https://github.com/facebook/react-native/commit/4a5d0bdbd75c433d2f51f160657a0ad91e440272) by [@thib92](https://github.com/thib92))
+- When an accessibilityLabel can't be discerned, return `nil` instead of `@""` ([d4ff5ed258](https://github.com/facebook/react-native/commit/d4ff5ed258b75fe77c5d801af7b097b04fcd3690) by [@sammy-SC](https://github.com/sammy-SC))
+- Fix Xcode build when the project's path contains whitespace ([f0770b6b37](https://github.com/facebook/react-native/commit/f0770b6b370f483fdd729bdba04069cc783353dc))
+- Move accessibility props to UIView+React ([9261035c2b](https://github.com/facebook/react-native/commit/9261035c2bf2fe9522806fb1c535a1835e7acfa2) by [@janicduplessis](https://github.com/janicduplessis))
+
+## v0.59.10
+
+This is likely the last patch release for version 59 of React Native for the foreseeable future: it contains an important Android side update for the JavaScript Core, to prevent a great number of crashes mostly related to Samsung devices - thanks to [@Kudo](https://github.com/Kudo) for his work on fixing this via [557989a86f](https://github.com/facebook/react-native/commit/557989a86f8730113393ed229927d607a478e524)!
+
+Thanks everyone who participated in the [discussion](https://github.com/react-native-community/releases/issues/127).
+
+## v0.59.9
+
+This is a patch fix release addressing a couple ScrollView regressions, and "future-proof" RN 59 from crashes caused by upgrading Gradle (now can support up to 5.4.1 & 3.4.0 for the plugin) and Xcode 11 Beta 1. You can upgrade to this version without upgrading your tooling.
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/124) for cherry-picking commits. You can participate to the conversation for the next patch release in the dedicated [issue](https://github.com/react-native-community/react-native-releases/issues/127).
+
+### Changed
+
+- If `isInteraction` is not specified in the config, it would always default to `true` which would block interactions like VirtualizedList updates. This is generally not what you want with useNativeDriver since the animation won't be interrupted by JS. If something does end up interfering with an animation and causes frame drops, `isInteraction` can be set manually. ([8f186b84ae](https://github.com/facebook/react-native/commit/8f186b84aeeb2613bf6ae08f20a8547d40179007) by [@sahrens](https://github.com/sahrens))
+
+- Update detox to match master ([c6a5c09e2b](https://github.com/facebook/react-native/commit/c6a5c09e2b330891242af5c0b3ed7875f32c189e) by [@kelset](https://github.com/kelset))
+
+#### Android specific
+
+- Bump Gradle to 5.4.1 & Android Gradle plugin to 3.4.0 ([b4017a9923](https://github.com/facebook/react-native/commit/b4017a9923b09fed4b693a8e4cfadd30ce34c88d), [d9f5a9dc16](https://github.com/facebook/react-native/commit/d9f5a9dc16f68cecc995bf8ba64fb726e397fadf), [30348f7899](https://github.com/facebook/react-native/commit/30348f789946dc99f5ccd02c85c8decbdb9ac29b), [6976a93126](https://github.com/facebook/react-native/commit/6976a931266126f249458a099bfaf509f9d81a05) by [@dulmandakh](https://github.com/dulmandakh))
+
+### Fixed
+
+- Fixes wrong time unit of scroll event throttle ([1148c03f6f](https://github.com/facebook/react-native/commit/1148c03f6f51329710e23fba99a6916fff3ba42c) by [@zhongwuzw](https://github.com/zhongwuzw))
+
+#### Android specific
+
+- Fix indexed RAM bundle ([d8fa1206c3](https://github.com/facebook/react-native/commit/d8fa1206c3fecd494b0f6abb63c66488e6ced5e0) by [@dratwas](https://github.com/dratwas))
+
+#### iOS specific
+
+- Fix Xcode 11 Beta 1 builds ([46c7ada535](https://github.com/facebook/react-native/commit/46c7ada535f8d87f325ccbd96c24993dd522165d) by [@ericlewis](https://github.com/ericlewis))
+
+## v0.59.8
+
+This is a patch fix release addressing regressions, crashes, and a few developer-experience pain points (in particular, check the `KeyboardAvoidingView` change). Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/118) for cherry-picking commits.
+
+### Fixed
+
+- Fix regexp on `hasteImpl` ([bcd1e2](https://github.com/facebook/react-native/commit/28e0de070d2dae9a486ab5915b6fd76723bd84ef) by [@CaptainNic](https://github.com/CaptainNic))
+- Fix sparse array handling in `EventEmitter#listeners()` ([f68dc8](https://github.com/facebook/react-native/commit/f68dc8) by [@ide](https://github.com/ide))
+- Fix **VirtualizedList** to call `_updateViewableItems` immediately ([08141e](https://github.com/facebook/react-native/commit/efe6a0f0b56191907e8f13be2aee28fe1dcdf555) by [@sahrens](https://github.com/sahrens))
+- Fix prop overrides of **TouchableWithoutFeedback** ([0c4206](https://github.com/facebook/react-native/commit/68825f9ca5a6c8c70390e8499d9663c5be475639) by [@aleclarson](https://github.com/aleclarson))
+- Fix resolve relative size rendering error in inspector ([4884ab](https://github.com/facebook/react-native/commit/972ee2edbd4e1c4201da1606bf5a4c5add9f0083) by [@gandreadis](https://github.com/gandreadis))
+- Fix **VirtualizedSectionList** by making sure to check array bounds ([54f91d](https://github.com/facebook/react-native/commit/929908f28728c217ab4a16c8596e0957295f4d67) by [@vonovak](https://github.com/vonovak))
+- Update `_scrollAnimatedValue` offset of **ScrollView** ([e0d1b3](https://github.com/facebook/react-native/commit/58c956768af75047b2acdca429a28945a6a8b8c0) by [@miyabi](https://github.com/miyabi))
+- Fix infinite `setState` in **VirtualizedList** ([c40a93](https://github.com/facebook/react-native/commit/88787b5e7a7f6dd9c3b258b9dfb60b93ca5a5cea) by [@sahrens](https://github.com/sahrens))
+
+#### iOS specific
+
+- Fix incorrect opacity behavior for **Text** component ([f71357](https://github.com/facebook/react-native/commit/d99e657e3909ff14cd623d1df7d3d13056fdd851) by [@shergin](https://github.com/shergin))
+- Fix **Text** shadow displays when `text Offset` is `{0,0}` ([17a81b](https://github.com/facebook/react-native/commit/9b63b50ad562c8567336898c7511a9a5198a4d6b) by [@Woodpav](https://github.com/Woodpav))
+- Add convert compatible of **NSString** for bridge message data ([c37e9c](https://github.com/facebook/react-native/commit/ffa3b0d4d601fe6788319a7cfd4185b8e4bf462f) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix nullability warnings in **RCTExceptionsManager** ([2b7d79](https://github.com/facebook/react-native/commit/31850df116fdd1595dddcd7b37a21568e679ffa7) by [@jtreanor](https://github.com/jtreanor))
+- Fix app to reconnect with metro after the bundler is closed and reopened ([c28676](https://github.com/facebook/react-native/commit/62bac80f90cf5a4ab216488b4ede441f0e3f86ba) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Fix throttle below 16ms on **ScrollView** ([39776a](https://github.com/facebook/react-native/commit/c87de765f6a9ebf656c188fa2115a1ba01b7939c) by [@sahrens](https://github.com/sahrens))
+
+#### Android specific
+
+- Fix JS errors during bundle load were reported as `UnknownCppException` ([84e263](https://github.com/facebook/react-native/commit/6f6696fa63dc5f7029cb121c7e0ee98f8d271602))
+- Add logic to catch `MissingWebViewPackageException` ([379874](https://github.com/facebook/react-native/commit/954f715b25d3c47c35b5a23ae23770a93bc58cee) by [@thorbenprimke](https://github.com/thorbenprimke))
+- Revert "[improve RTL](https://github.com/facebook/react-native/commit/b3c74967ca6b20d7bda84c690ae3a99dfe255843)" ([f3801d](https://github.com/facebook/react-native/commit/8d3e16831a93079fc5a855a7b0f8b4be508c6942) by [@thorbenprimke](https://github.com/thorbenprimke))
+
+### Added
+
+- Add listener for non-value animated node ([4a82dc](https://github.com/facebook/react-native/commit/68a5ceef312c7e3ac74d616b960c1cfde46a109d) by [@osdnk](https://github.com/osdnk))
+- Set **ScrollView** throttle by default ([74d740](https://github.com/facebook/react-native/commit/b8c8562ffb424831cc34a18aeb25e5fec0954dd0) by [@sahrens](https://github.com/sahrens))
+
+### Changed
+
+- Make **KeyboardAvoidingView** with `behavior="height"` resize on keyboard close ([7140a7](https://github.com/facebook/react-native/commit/3711ea69375ea420800bac97914aa0d24fc9b1a6) by [@WaldoJeffers](https://github.com/WaldoJeffers))
+- Update network inspector to have smarter scroll stickiness ([57dc37](https://github.com/facebook/react-native/commit/c06473ab464e07edbb4715f58cd13674273bb29b) by [@AlanFoster](https://github.com/AlanFoster))
+
+## v0.59.7
+
+This patch release was unpublished.
+
+## v0.59.6
+
+This patch release was unpublished.
+
+## v0.59.5
+
+This is a patch fix release addressing regressions, crashes, and a few developer-experience pain points. Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/113) for cherry-picking commits.
+
+### Fixed
+
+- Remove wrapper around **ListEmptyComponent** ([54af5b](https://github.com/facebook/react-native/commit/46276444508581bac7b9f27edd56ec0c8ec450bc) by [@AntoineDoubovetzky](https://github.com/AntoineDoubovetzky))
+
+#### Android specific
+
+- Enforced thread safety on UIImplementation methods that mutate the shadowNodeRegistry ([f5a318](https://github.com/facebook/react-native/commit/f5a31801a03b61df3d7bc2fc86df7bad272082e2) by [@SudoPlz](https://github.com/sunnylqm))
+- Fixed a `NoSuchKeyException` when parsing JS stack frames without line numbers ([d7bd6c](https://github.com/facebook/react-native/commit/c953e0b4319da0976ece877c09b648a55bc57d9f) by [@Salakar](https://github.com/Salakar))
+- Fixed `mostRecentEventCount` is not updated ([b8aac0](https://github.com/facebook/react-native/commit/60c0a60c508346f7639d32fde0376fabded9f3f0) by [@jainkuniya](https://github.com/jainkuniya))
+
+#### iOS specific
+
+- Pass back correct dimensions for application window in Dimensions module ([72b4cc](https://github.com/facebook/react-native/commit/33b55ccccad56e0b97af294749d728b67b03e658) by [@rdonnelly](https://github.com/rdonnelly))
+- Fixed warning: "RCTImagePickerManager requires main queue setup" ([effb02](https://github.com/facebook/react-native/commit/6508b88cfdccdb2da6bfde05faac4647436ce4e7) by [@scarlac](https://github.com/scarlac))
+
+## v0.59.4
+
+This is a patch fix release addressing regressions, crashes, and a few developer-experience pain points. Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/100) for cherry-picking commits.
+
+### Changed
+
+- Make Jest transform @react-native-community packages by default ([7e23c7c565](https://github.com/facebook/react-native/commit/7e23c7c5654818fa076eeb627b709d39130f57f6) by [@thymikee](https://github.com/thymikee))
+
+#### iOS specific
+
+- Add `scrollToOverflowEnabled` prop to **ScrollView** ([6f4239b37c](https://github.com/facebook/react-native/commit/6f4239b37c3059d6cb1fdaf2dcd3b6c962dde471) by [@mysport12](https://github.com/mysport12))
+
+### Fixed
+
+- Fix **Touchable** long-press ([59e50237bf](https://github.com/facebook/react-native/commit/59e50237bff9521d2b78d7576abf4e23d844ac1b) by [@Kida007](https://github.com/Kida007))
+
+#### Android specific
+
+- Fix a crash when setting `underlineColorAndroid` in **TextInput** ([556aa93ed7](https://github.com/facebook/react-native/commit/556aa93ed72d9dc0f18a1c6d7dec3d9c182fee85) by [@sunnylqm](https://github.com/sunnylqm))
+
+#### iOS specific
+
+- Fix universal links not working in iOS 12 / Xcode 10 ([56679ed359](https://github.com/facebook/react-native/commit/56679ed359834c2177c8837d744cc7bf2ceb6b0a) by [@IljaDaderko](https://github.com/IljaDaderko))
+- Fix triangle views ([7a6fe0cda0](https://github.com/facebook/react-native/commit/7a6fe0cda0a1089c1c82fdd5f7f2db940f70feae) by [@zhongwuzw](https://github.com/zhongwuzw))
+
+## v0.59.3
+
+This is a patch fix release addressing regressions, crashes, and a few developer-experience pain points. Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/100) for cherry-picking commits.
+
+### Changed
+
+#### Android specific
+
+- Improve RTL support ([b3c74967ca](https://github.com/facebook/react-native/commit/b3c74967ca6b20d7bda84c690ae3a99dfe255843) by [@dulmandakh](https://github.com/dulmandakh))
+
+### Fixed
+
+- Fix **VirtualizedList**, **SectionList** and **FlatList** behavior on rendering list headers with inverted prop and zero items ([c13f5d48cf](https://github.com/facebook/react-native/commit/c13f5d48cfe3e7c0f6c6d0b745b50a089d6993ef) by [@michalchudziak](https://github.com/michalchudziak))
+- Fix **VirtualizedList** debug mode crash ([02e8e531dd](https://github.com/facebook/react-native/commit/02e8e531ddfd86e9abf7ef47fbf30445afeb37cf))
+- Fix running Metro on Windows ([43d3313788](https://github.com/facebook/react-native/commit/43d3313788a5f0a36abdbfadc000b06b2188fc06) and [9db347fabc](https://github.com/facebook/react-native/commit/9db347fabca19c66f669faf4054c81cc3624be03) by [@aliazizi](https://github.com/aliazizi) and [@nazreinkaram](https://github.com/nazreinkaram))
+
+#### Android specific
+
+- Fix IllegalStateException when invalid URL or headers are passed ([aad4dbbbfe](https://github.com/facebook/react-native/commit/aad4dbbbfe937d1924e5359556979ab067198a58) by [@dryganets](https://github.com/dryganets))
+- Fix IllegalStateException when tapping next on Android Keyboard ([b943db418f](https://github.com/facebook/react-native/commit/b943db418f4f0b9d0865642aaca3e1a2f1529663) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific
+
+- Show Perf Monitor after reloading JS ([15619c22e5](https://github.com/facebook/react-native/commit/15619c22e57f73dfbed7bbe5fd6d9b3d2a8c9225) by [@usrbowe](https://github.com/usrbowe))
+- Fix **TextInput**'s `maxLength` when inserting characters at begin ([17415938c7](https://github.com/facebook/react-native/commit/17415938c7180a95811db949122b8ad24a442866) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix runtime crash in Xcode 10.2 when using `RCT_EXTERN_MODULE` for swift classes ([ff66600224](https://github.com/facebook/react-native/commit/ff66600224e78fec5d0e902f8a035b78ed31a961))
+
+## v0.59.2
+
+This is a patch fix release addressing regressions, crashes, and a few developer-experience pain points. Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/100) for cherry-picking commits.
+
+### Fixed
+
+#### Android specific
+
+- Crash on pre-26 Android devices when setting **TextInput** content type ([d4aa1e7a52](https://github.com/facebook/react-native/commit/d4aa1e7a52b51fa5d7fc9ded132b7b50170f2190) by [@hramos](https://github.com/hramos))
+- Crash when scroll to index 0 in a **SectionList** ([8fa116cc0e](https://github.com/facebook/react-native/commit/8fa116cc0e1cadbb6cf0734cfde0e0b8060f6b59) by [@danilobuerger](https://github.com/danilobuerger))
+- **Switch**'s `trackColor` being reset when toggled ([7652e31d8c](https://github.com/facebook/react-native/commit/7652e31d8c233c1c831f6597c8a2f7ce3d9c0b6e) and [d6ee448e15](https://github.com/facebook/react-native/commit/d6ee448e15a25a7485482a4702aadb2e396445c7) by [@dulmandakh](https://github.com/dulmandakh) and [@ejanzer](https://github.com/ejanzer))
+
+#### iOS specific
+
+- **ScrollView** offset out of content size ([9c1c5a7455](https://github.com/facebook/react-native/commit/9c1c5a7455d90ec837a9a6141c096de70b798e43) by [@zhongwuzw](https://github.com/zhongwuzw))
+- **RefreshControl** state's race condition ([95d399bc82](https://github.com/facebook/react-native/commit/95d399bc825c5471e08b83eff4b1b1b510e384a0) by [@rostislav-simonik](https://github.com/rostislav-simonik))
+- Start Metro packager from project root ([fe3aebf87b](https://github.com/facebook/react-native/commit/fe3aebf87b4123f8b16cdfcb9e2e774e6e0bf0b6) by [@MatthieuLemoine](https://github.com/MatthieuLemoine))
+- **TextInput**s that are single-line reverting to default text ([e38be82dfa](https://github.com/facebook/react-native/commit/e38be82dfa8b49385b990629318f027de26500cf) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+
+### Changed
+
+#### Android specific
+
+- Add TLS 1.3 support to all Android versions using Conscrypt; to use this, you must add `implementation('org.conscrypt:conscrypt-android:2.0.0')` to `build.gradle` ([75af15ede4](https://github.com/facebook/react-native/commit/75af15ede44135110e40de75a649d5b15430c590) by [@dulmandakh](https://github.com/dulmandakh))
+- Turn off Metro JS Deltas by default for Android ([845189c17d](https://github.com/facebook/react-native/commit/845189c17de621cc5aa373503220c1c12f649c3c) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+
+## v0.59.1
+
+This is a small patch release that addresses two critical issues from the 0.59.0 release.
+
+### Fixed
+
+#### Android specific
+
+- Template build gradle error on x86_64 ([4b996da470](https://github.com/facebook/react-native/commit/4b996da470b43f97fd0426b54bda739d7717fb28) by [@grabbou](https://github.com/grabbou))
+
+#### iOS specific
+
+- Build error warning of **Text** module ([d834197746](https://github.com/facebook/react-native/commit/d834197746371b203bd7d7aaabdc2bc581acc867) by [@zhongwuzw](https://github.com/zhongwuzw))
+
+## v0.59.0
+
+Welcome to release 0.59 of React Native! For highlights of this release, please view the dedicated [blog post](https://reactnative.dev/blog/2019/03/12/releasing-react-native-059). Thanks to those who gave feedback during the [release candidate phase](https://github.com/react-native-community/react-native-releases/issues/79). If you're interested in helping evaluate our next release (0.60), subscribe to the dedicated issue [here](https://github.com/react-native-community/react-native-releases/issues/99).
+
+### Added
+
+- Add a Metro configuration to the template with inline require/import options; read more about it [in the blog post](https://reactnative.dev/blog/2019/03/12/releasing-react-native-059) ([ae11993d0f](https://github.com/facebook/react-native/commit/ae11993d0f6c6de661867b5d032d844e91c83c6f) by [@cpojer](https://github.com/cpojer))
+
+#### Android specific
+
+- **Text** and **TextInput** now has prop [maxFontSizeMultiplier](https://reactnative.dev/docs/text#maxfontsizemultiplier) ([4936d284df](https://github.com/facebook/react-native/commit/4936d284df36071047ce776d9e2486c0371f7b97) by [@rigdern](https://github.com/rigdern))
+- **TextInput** now has prop [autoComplete](https://reactnative.dev/docs/textinput#autocomplete) prop ([f15145639d](https://github.com/facebook/react-native/commit/f15145639dab1e8d7a1c79a127b7d45c91d025a8))
+- **CameraRoll**'s `getPhotos` now supports `assetType: "All"` to let users pick from video and photos simultaneously ([54534e79d7](https://github.com/facebook/react-native/commit/54534e79d724ff57572efc43f65100067f35d4c1) by [@kesha-antonov](https://github.com/kesha-antonov))
+- **Text** and **TextInput** now support `textAlign:justify` for android O+ (api level >=26) ([d2153fc58d](https://github.com/facebook/react-native/commit/d2153fc58d825006076a3fce12e0f7eb84479132) by [sunnylqm](https://github.com/sunnylqm))
+
+#### iOS specific
+
+- **TextInput** now has prop `rejectResponderTermination` to enable TextInputs inside Swipeables to function properly ([11df0eae5f](https://github.com/facebook/react-native/commit/11df0eae5ff8f530bfaf56aaf2209ff48f3ed9ac) by [@cmcewen](https://github.com/cmcewen))
+- **ActionSheetIOS** has a new prop `destructiveButtonIndexes` for an `Array<number>` of destructive indexes ([67e7f16944](https://github.com/facebook/react-native/commit/67e7f16944530aa0d1a4d375b0de5efd5c432865) by [@sdg9](https://github.com/sdg9))
+- Add `isEventFromThisApp` to `KeyboardEvent` notifications to disambiguate keyboard events when apps are running side-by-side ([05f35c296d](https://github.com/facebook/react-native/commit/05f35c296d91d946acf4edd94106fbdd0dd69a29) by [@nossbigg](https://github.com/nossbigg))
+- Allow changing the project path in `react-native-xcode.sh` using env var `PROJECT_ROOT` ([9ccde378b6](https://github.com/facebook/react-native/commit/9ccde378b6e6379df61f9d968be6346ca6be7ead) by [@janicduplessis](https://github.com/janicduplessis))
+
+### Changed
+
+- `React` is now at `v16.8.3` ([ccefc700d0](https://github.com/facebook/react-native/commit/ccefc700d0120539eba73747d1d6b65effb0645d) and ([2af13b4477](https://github.com/facebook/react-native/commit/2af13b4477342d3498ab302ceb5297fcbc17e097) by [@cpojer](https://github.com/cpojer) and [@hramos](https://github.com/hramos))
+- `Flow` dependency is now at `v0.92.0` ([5ee738659b](https://github.com/facebook/react-native/commit/5ee738659b4ac7b0e73b9dba09a63091d4571ed9) by [@pakoito](https://github.com/pakoito))
+- `@react-native-community/cli` dependency is at `v1.2.1` ([a252aee2ea](https://github.com/facebook/react-native/commit/a252aee2eabd9eeffb279b9fcf1827093ef4039c) and [5e1504b0fc](https://github.com/facebook/react-native/commit/5e1504b0fca99cad3bfe2339ac0e7862b2315f9c) by [@grabbou](https://github.com/grabbou))
+- Enhance Flow types definitions for **ViewPropTypes** ([7ff9456f2e](https://github.com/facebook/react-native/commit/7ff9456f2e5fd72286f5be52598988707eaef69c) by [@danibonilha](https://github.com/danibonilha))
+
+#### Android specific
+
+- Clarify error message to direct people to `react-native start` rather than `react-native bundle` ([46aaa02274](https://github.com/facebook/react-native/commit/46aaa02274a51ebe2aaa9fca2422dcebf9323475) by [@sunnylqm](https://github.com/sunnylqm))
+- **BREAKING** - removed `OkHttpClientProvider.replaceOkHttpClient` method; please use `OkHttpClientProvider.setOkHttpClientFactory` from 0.54+ ([7cbdd7b6ac](https://github.com/facebook/react-native/commit/7cbdd7b6ac7db2192f7d0193d22326041517a63e) by [@cdlewis](https://github.com/cdlewis))
+- **BREAKING** - remove `ViewHelper`, use `ViewCompat` instead; this may also require changing the `android:theme` to be from `Theme.AppCompat`; read more about it [in the blog post](https://reactnative.dev/blog/2019/03/12/releasing-react-native-059) ([c493cfe708](https://github.com/facebook/react-native/commit/c493cfe7083a6b97b6ec9eb9cb59cf1fdec45458) by [@dulmandakh](https://github.com/dulmandakh))
+- Add nullable annotations to `ReadableMap`, `WritableMap`, `ReadableArray`, `Writable`, `ReactPackage`, and native module interfaces; this may impact Kotlin usage ([b640b6faf7](https://github.com/facebook/react-native/commit/b640b6faf77f7af955e64bd03ae630ce2fb09627), [c93cbdf1b2](https://github.com/facebook/react-native/commit/c93cbdf1b272cfd60124d9ddb4c52b58ca59d319), [7b33d6b0b9](https://github.com/facebook/react-native/commit/7b33d6b0b96578a548e9a7f973eb59ac9236697b), and [84f40da990](https://github.com/facebook/react-native/commit/84f40da990dfd21eb1c21e20f2be0f8b2c5a78e4) by [@dulmandakh](https://github.com/dulmandakh))
+- `Soloader` is now at `v0.6.0` ([07d1075f37](https://github.com/facebook/react-native/commit/07d1075f372bb864ddc62b9c8f613b03becfa568) by [@dulmandakh](https://github.com/dulmandakh))
+- Android Support Library is now at `v28.0.0` ([5bbed43854](https://github.com/facebook/react-native/commit/5bbed43854957a37c4b51f49f30669665a72e7f7) by [@dulmandakh](https://github.com/dulmandakh))
+- `targetSdkVersion` is now at `v28` ([57f444bd8a](https://github.com/facebook/react-native/commit/57f444bd8a175038c367fa1b7d93e2e8ba9de7ed) by [@dulmandakh](https://github.com/dulmandakh))
+- Android Plugin is now at `v3.3.1` ([da5b5d2fa1](https://github.com/facebook/react-native/commit/da5b5d2fa134aa09dda4a620be9fa4d3d419201f) by [@dulmandakh](https://github.com/dulmandakh))
+- Enable Java 8 support ([38eb2a70af](https://github.com/facebook/react-native/commit/38eb2a70afa87c49c1e62754f5ae3cd26e7f59c3) by [@dulmandakh](https://github.com/dulmandakh))
+- Suppress misleading missing permission warnings ([d53dbb0dfb](https://github.com/facebook/react-native/commit/d53dbb0dfb99bdee5cd7eeaaa6f4ae51dcca00c5) by [@dulmandakh](https://github.com/dulmandakh))
+- Add back `buildToolsVersion` to build.gradle ([cf52ab561d](https://github.com/facebook/react-native/commit/cf52ab561d9fa0e4d14de7a8f3324cbc2b25bf92) by [@dulmandakh](https://github.com/dulmandakh))
+- **TimePickerAndroid** has better Flow types definitions ([2ed1bb2e01](https://github.com/facebook/react-native/commit/2ed1bb2e01ab7360d9bf13e4f9e13cb9c9c9d32e) by [@yushimatenjin](https://github.com/yushimatenjin))
+- `ReactActivity`, `ReactSlider`, `ReactTextView`, and `ReactPicker` extends `AppCompatActivity`; updates to `TimePickerDialogModule` and `DatePickerDialogModule` as well ([dda2b82a0a](https://github.com/facebook/react-native/commit/dda2b82a0a49da52b43b50db5a2bda50a216c09b), [3b9604feda](https://github.com/facebook/react-native/commit/3b9604feda8f9e8fe3dd884912ec7d9be67d7f1d), [ba0c3ffd5b](https://github.com/facebook/react-native/commit/ba0c3ffd5b46963a8bb27b40eb396965535cd927), [833429dd63](https://github.com/facebook/react-native/commit/833429dd633b33fff71224a7ce663b60681a7f81), [adc1410572](https://github.com/facebook/react-native/commit/adc14105727f708c990b7a744a0ea270ff0fba13), [c6c5a173bc](https://github.com/facebook/react-native/commit/c6c5a173bce3d8c847931d26eddb295956285438), and [be361d0fc1](https://github.com/facebook/react-native/commit/be361d0fc1930b1679c4226e15c1a5b416b94105) by [@dulmandakh](https://github.com/dulmandakh))
+- Fix lint error/warnings that cause older Android crashes ([d2fc19f4aa](https://github.com/facebook/react-native/commit/d2fc19f4aa94888b7c3d3f4a5fb621bf96a1aff9) by [@dulmandakh](https://github.com/dulmandakh))
+- The error message on getting Android drawable folder suffix now gives more information ([a159a33c02](https://github.com/facebook/react-native/commit/a159a33c02e0c0d7aa245adfd540a066ec065362) by [@BrunoVillanova](https://github.com/BrunoVillanova))
+- `SYSTEM_ALERT_WINDOW` permissions available only in debug builds ([84a2fb0a4a](https://github.com/facebook/react-native/commit/84a2fb0a4a67cd9dc37cf4e5bab814f25181cfb7) by [@dulmandakh](https://github.com/dulmandakh))
+- Add talkback navigation support for links and header ([b9d3743cda](https://github.com/facebook/react-native/commit/b9d3743cda95d1f475dbec8f6d72935941519deb) by [@yangweigbh](https://github.com/yangweigbh))
+- **FlatList** has `removeClippedSubviews` default to `true` on Android ([1a499f43b2](https://github.com/facebook/react-native/commit/1a499f43b2d03cc27dd6c25c8f13a767862afba1) by [@fred2028](https://github.com/fred2028))
+
+#### iOS specific
+
+- Moved iOS build cache directory from `~/.rncache` to `~/Library/Caches/com.facebook.ReactNativeBuild` ([1024dc251e](https://github.com/facebook/react-native/commit/1024dc251e1f4777052b7c41807ea314672bb13a) by [@sryze](https://github.com/sryze))
+- Keyboard API Event flow types have been improved ([7ee13cc84c](https://github.com/facebook/react-native/commit/7ee13cc84c342244d3aa9e485de0e759482287ea) by [@nossbigg](https://github.com/nossbigg))
+- Expose **AsyncLocalStorage** get/set methods to native code ([7b8235a95a](https://github.com/facebook/react-native/commit/7b8235a95ad9519e9735cc1555a8d3aa5bb7c0ee) by [@ejmartin504](https://github.com/ejmartin504))
+- Clear RCTBridge **launchOptions** when bridge is reloaded ([19d04a312b](https://github.com/facebook/react-native/commit/19d04a312bf4221cd26beff6d0da6dd296a28cd0) by [@venik](https://github.com/venik))
+
+### Deprecated
+
+The following deprecations are part of our Lean Core initiative; read more about it [in the blog post](https://reactnative.dev/blog/2019/03/12/releasing-react-native-059).
+
+- Deprecated [MaskedViewIOS](https://reactnative.dev/docs/maskedviewios) as it has now been moved to [react-native-community/masked-view](https://github.com/react-native-community/react-native-masked-view) ([4ac65f5413](https://github.com/facebook/react-native/commit/4ac65f5413ee59f7546b88a2eae2c4ce6fa8826b) by [@FonDorn](https://github.com/FonDorn))
+- Deprecated [ViewPagerAndroid](https://reactnative.dev/docs/viewpagerandroid) as it has now been moved to [react-native-community/viewpager](https://github.com/react-native-community/react-native-viewpager) ([77300ca91c](https://github.com/facebook/react-native/commit/77300ca91c17d371f6ba04230b8c2e8f5cd99ab8) by [@ferrannp](https://github.com/ferrannp))
+- Deprecated [AsyncStorage](https://reactnative.dev/docs/asyncstorage) as it has now been moved to [react-native-community/asyncstorage](https://github.com/react-native-community/react-native-async-storage) ([ffe37487b2](https://github.com/facebook/react-native/commit/ffe37487b228b77a3697c32767e91f1dd68041d8) by [@Krizzu](https://github.com/Krizzu))
+- Deprecated [Slider](https://reactnative.dev/docs/slider) as it has now been moved to [react-native-community/slider](https://github.com/react-native-community/react-native-slider) ([bf888a7582](https://github.com/facebook/react-native/commit/bf888a7582763a593d8b36874d242653fc0a9575) by [@michalchudziak](https://github.com/michalchudziak))
+- Deprecated [NetInfo](https://reactnative.dev/docs/netinfo) as it has now been moved to [react-native-community/netinfo](https://github.com/react-native-community/react-native-netinfo) ([d9c0dfe353](https://github.com/facebook/react-native/commit/d9c0dfe353eceb91efcec774bab0f65b6792e4fa) by [@matt-oakes](https://github.com/matt-oakes))
+- Deprecated [ImageStore](https://reactnative.dev/docs/imagestore) and directed users to `expo-file-system` and `react-native-fs` ([62599fa8ff](https://github.com/facebook/react-native/commit/62599fa8ff7f308259fe178fa37b7bcf3c1a408c) by [@EvanBacon](https://github.com/EvanBacon))
+
+#### iOS specific
+
+- Replace deprecated `stringByReplacingPercentEscapesUsingEncoding:` with `stringByAddingPercentEncodingWithAllowedCharacters:` ([61ca119650](https://github.com/facebook/react-native/commit/61ca11965046f75e7500e5152c5f2b60df2a2cd5) by [@pvinis](https://github.com/pvinis))
+
+### Removed
+
+- `react-native-git-upgrade` is now officially dead; use `react-native upgrade` instead (which uses [rn-diff-purge](https://github.com/react-native-community/rn-diff-purge) under the covers) ([a6bdacb257](https://github.com/facebook/react-native/commit/a6bdacb2575dcc3be2acec95d8a6db6e2db909c4) by [@cpojer](https://github.com/cpojer))
+
+#### iOS specific
+
+- Remove the previously deprecated **TabBarIOS** ([02697291ff](https://github.com/facebook/react-native/commit/02697291ff41ddfac5b85d886e9cafa0261c8b98) by [@axe-fb](https://github.com/axe-fb))
+- **AlertIOS** is now replaced with **Alert** ([e2bd7db732](https://github.com/facebook/react-native/commit/e2bd7db732602b2c477fe040f2946bd8293df297) by [@wellmonge](https://github.com/wellmonge))
+
+### Fixed
+
+- **KeyboardAvoidingView** now shows the correct height after the keyboard is toggled ([745484c892](https://github.com/facebook/react-native/commit/745484c892e40cfe15ded128f5a589edb28d8f6b) by [@shauns](https://github.com/shauns))
+- Adds fixes for react-native-windows UWP ([dfcbf9729f](https://github.com/facebook/react-native/commit/dfcbf9729fab64c4bd8c00e1d092ec4e9bae717f) by [@rozele](https://github.com/rozele))
+- The `Map` and `Set` polyfills no longer reject non-extensible object keys; also fix hash collision scenario ([90850cace9](https://github.com/facebook/react-native/commit/90850cace9991ed0a02605586ea5c32ce099de65) by [@benjamn](https://github.com/benjamn))
+- Corrected StyleSheet's transformation perspective to match iOS's behavior, regardless of screen density ([4c10f9321c](https://github.com/facebook/react-native/commit/4c10f9321c9d01dbcac4808e7e6674cba12f3aa5) by [@syaau](https://github.com/syaau))
+- Fix `yarn test` in new projects ([5218932b13](https://github.com/facebook/react-native/commit/5218932b13ad0649ff2a57aaf1ec682fe278c47d) by [@Esemesek](https://github.com/Esemesek))
+- Fix issue with `getInspectorDataForViewTag` that caused red screen when toggling inspector ([46f3285a3f](https://github.com/facebook/react-native/commit/46f3285a3f240f9325a548e677a1927402d76bd7) by [@TranLuongTuanAnh](https://github.com/TranLuongTuanAnh))
+- Fix `displayName` for `Image`; this will make tests no longer mistake it as `Component` ([4989123f8c](https://github.com/facebook/react-native/commit/4989123f8cab37c95b020e23b9a925746a3f3677) by [@linnett](https://github.com/linnett))
+- Fix regression of **VirtualizedList** jumpy header ([e4fd9babe0](https://github.com/facebook/react-native/commit/e4fd9babe03d82fcf39ba6a46376f746a8a3e960) by [@danilobuerger](https://github.com/danilobuerger))
+- Set `wait_for_recheck=true` to work around crash in Flow ([ffc9908bef](https://github.com/facebook/react-native/commit/ffc9908bef535ba1392c370ca4e9e4e528c3c4c5) by [@gabelevi](https://github.com/gabelevi))
+- Fix flow typing of **Text** ([10c8352141](https://github.com/facebook/react-native/commit/10c835214160cc5a5726c8dd9f0d42a0275d198b) by [@sahrens](https://github.com/sahrens))
+- Fix `jest` and `jest-junit` to be only development dependencies ([c7b57f1986](https://github.com/facebook/react-native/commit/c7b57f19869f31474c8ee17f7a1ac1551bab1b6e) by [@vovkasm](https://github.com/vovkasm))
+- Fix layout issue with **SwipeableQuickActionButton** ([ad52f52624](https://github.com/facebook/react-native/commit/ad52f526247af6eebadd2ea436b86ff7eb874f27) by [@varungupta85](https://github.com/varungupta85))
+
+#### Android specific
+
+- Fix textTransform when used with other text styles on Android (#22670) ([3a33e75183](https://github.com/facebook/react-native/commit/3a33e75183bf196d61b46e662b4c3f84a5f570bd) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix warnings related to updating to gradle 4.10.1 or higher ([5be50d4820](https://github.com/facebook/react-native/commit/5be50d482082917351b46ee2e339e56e7e34e111) by [@misaku](https://github.com/misaku))
+- Fix issue with use of Android API 28 by adding security config for metro access ([5747094532](https://github.com/facebook/react-native/commit/5747094532bace3fe6b1ebdf55235e53189baa71), [19492b730b](https://github.com/facebook/react-native/commit/19492b730b6779486f83d5ddbaeeb870cb3d5e9c), [3b0b7ce8c3](https://github.com/facebook/react-native/commit/3b0b7ce8c3c3679610c14ca72beb1a9dcf84d930), and [84572c4051](https://github.com/facebook/react-native/commit/84572c4051f11f68ddf0928d2c3df5850ae15491) by [@Salakar](https://github.com/Salakar) and [@dulmandakh](https://github.com/dulmandakh))
+- Fix Inverted Horizontal **ScrollView** ([32cb9ec49c](https://github.com/facebook/react-native/commit/32cb9ec49c801fcebe61486149134ab542d9364b) by [@dmainas](https://github.com/dmainas))
+- Fix crash on **CheckBox** on older Android versions ([58437cd10a](https://github.com/facebook/react-native/commit/58437cd10a667bbcbc16781df855fd7c3d73bf49) by [@vonovak](https://github.com/vonovak))
+- Fix undefined error description in **Image** `onError` callback ([7795a672d3](https://github.com/facebook/react-native/commit/7795a672d3a24a5b50df6ad6d30555d856b557cc) by [@Jyrno42](https://github.com/Jyrno42))
+- Fix Android crash on animating with `useNativeDriver` ([e405e84fc3](https://github.com/facebook/react-native/commit/e405e84fc35923888442df748757787698040010) by [@scisci](https://github.com/scisci))
+- Fix dev settings menu not appearing for certain codebases due to namespace conflicts ([9968d0c203](https://github.com/facebook/react-native/commit/9968d0c2030c1065979db34cc9a244bd52b7b2a5) by [@khaled-cliqz](https://github.com/khaled-cliqz))
+- Fix exception occurring while fading a **TextView** ([f83281e2ce](https://github.com/facebook/react-native/commit/f83281e2ce2aece44b1207844d8a5149d5d2e78d) by [@mdvacca](https://github.com/mdvacca))
+- Fix **StatusBar** overwriting previously set `SystemUiVisibility` flags ([8afa0378cd](https://github.com/facebook/react-native/commit/8afa0378cd09b8fa6c30d759539fc9a680e8cae2) by [@rogerkerse](https://github.com/rogerkerse))
+- Prevent `fetch()` POST requests from appending `charset=utf-8` to `Content-Type` header ([4a807761a4](https://github.com/facebook/react-native/commit/4a807761a4aca9e551ff2cee8ca18a2450fb11ca) and [0d5aebbd9a](https://github.com/facebook/react-native/commit/0d5aebbd9ac92a90ec7ab1426ed92dd22ae8c736) by [@nhunzaker](https://github.com/nhunzaker))
+- Fix issue with **Location** that led to exceptions in two cases ([f32dc63546](https://github.com/facebook/react-native/commit/f32dc635467a2e93371f0cf2e40b07a712349288) by [@mikelambert](https://github.com/mikelambert))
+
+#### iOS specific
+
+- Fix **TextInput** mistakenly capitalizing I's after emojiis ([f307ac7c5e](https://github.com/facebook/react-native/commit/f307ac7c5e3adb9b4c0f8b2e4b8cdc2f980c7733) by [@dchersey](https://github.com/dchersey))
+- Fix **TextView**'s `setAttributedText` for CJK languages on single-line text fields ([e38be82dfa](https://github.com/facebook/react-native/commit/e38be82dfa8b49385b990629318f027de26500cf) by [@mandrigin](https://github.com/mandrigin))
+- Fix RCTImageLoader multi thread crash ([5ed31ce524](https://github.com/facebook/react-native/commit/5ed31ce5240a7392afdc522120edef182e0014ed))
+- Fix removing keys of large values from **AsyncStorage** ([27b4d21564](https://github.com/facebook/react-native/commit/27b4d215641f9397ef415cbb2acfc1275e6110ac) by [@esprehn](https://github.com/esprehn))
+- Fix overscroll behavior on virtualized lists; behavior is now consistent ([4d5f85ed42](https://github.com/facebook/react-native/commit/4d5f85ed426cfb43dc5e63f915e416a47d76b965))
+- Fix **Alert** to not block input focus and blur ([e4364faa3c](https://github.com/facebook/react-native/commit/e4364faa3cab150b82272819fc92086fb4da297e) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix broken JSIexecutor search path ([2aa2401766](https://github.com/facebook/react-native/commit/2aa24017667721ba17a859ca4e13d43e52d86bc5) by [@amccarri](https://github.com/amccarri))
+- Fix potential linker issues when using Xcode project ([9f72e6a5d0](https://github.com/facebook/react-native/commit/9f72e6a5d02d84fe8ed545e0c0904199b9cb3c7a) by [@tyrone-sudeium](https://github.com/tyrone-sudeium))
+- Fix crash when `scrollEnabled` used in singleline textinput ([9ff43abe65](https://github.com/facebook/react-native/commit/9ff43abe653ac5af0e591b369228f0809caad204) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix crash in gif image usage ([d0cd3cae13](https://github.com/facebook/react-native/commit/d0cd3cae13a1b1fff8a2e378b5228d3cdccd695f) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix **geolocation** to not constantly reset accuracy to default of 100 meters ([bbcb97a29a](https://github.com/facebook/react-native/commit/bbcb97a29adc2a3a05728b47d28e28fa78d84df2) by [@omnikron](https://github.com/omnikron))
+- Fix iOS build issue related to missing `DoubleConversion` and `glog` to `cxxreact`, `jsi` and `jsiexecutor` subspecs in `React.podspec` file ([00392ac46b](https://github.com/facebook/react-native/commit/00392ac46b6319dcff2b6df2e5f7bb4ee094612f) by [@alexruperez](https://github.com/alexruperez))
+- Fix "'folly/folly-config.h' file not found" build error when using React via CocoaPods ([5560a47c1d](https://github.com/facebook/react-native/commit/5560a47c1dbc7daab1e4f4aac0667080fdea836a) by [@Salakar](https://github.com/Salakar))
+- Fix image cache to follow [MDN strategy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching#Freshness) ([fb8ba3fe95](https://github.com/facebook/react-native/commit/fb8ba3fe959fd2a0c4ef0025fd84f6deffd9d03b) and [fb8ba3fe95](https://github.com/facebook/react-native/commit/fb8ba3fe959fd2a0c4ef0025fd84f6deffd9d03b) by [@zhongwuzw](https://github.com/zhongwuzw))
+- Fix crash due to IllegalArgumentException when creating CookieManage ([cda8171af3](https://github.com/facebook/react-native/commit/cda8171af30815edfa331e07d1bbf605f0926303) by [@mdvacca](https://github.com/mdvacca))
+- Fix cursor placement after toggling `secureTextEntry` cursor spacing ([8ce3c1b43e](https://github.com/facebook/react-native/commit/8ce3c1b43edd47191c8e5ee8432c58f6e93dfca7) by [@ericlewis](https://github.com/facebook/react-native/commits?author=ericlewis))
+
+## v0.58.6
+
+This release is fairly small, as we approach stable status for [0.59](https://github.com/react-native-community/react-native-releases/issues/79).
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/95) for cherry-picking commits - you can participate in the decision process for the next patch release [here](https://github.com/react-native-community/react-native-releases/issues/97).
+
+### Fixed
+
+#### Android specific
+
+- Fix Inverted Horizontal ScrollView on Android (#23233) ([32cb9ec49c](https://github.com/facebook/react-native/commit/32cb9ec49c801fcebe61486149134ab542d9364b) by [@dmainas](https://github.com/dmainas))
+
+#### iOS specific
+
+- Map TextInput textContentType strings to Objective-C constants (#22611) ([a89fe4165c](https://github.com/facebook/react-native/commit/a89fe4165c2a331a9d88636d89a5a48151ab8660) by [@levibuzolic](https://github.com/levibuzolic))
+- Don't reconnect inspector if connection refused (#22625) ([d9489c4e9c](https://github.com/facebook/react-native/commit/d9489c4e9c646b79025f07635b840e9974be8cd5) by [@msand](https://github.com/msand))
+
+## v0.58.5
+
+This release resolves a few bugs and includes a few improvements, listed below.
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/86) for cherry-picking commits - you can participate in the decision process for the next patch release [here](https://github.com/react-native-community/react-native-releases/issues/95).
+
+### Removed
+
+- Remove fallback cache ([9d60c20cb3](https://github.com/facebook/react-native/commit/9d60c20cb35074e92a90b803d3d6f420f6671635) by [@grabbou](https://github.com/grabbou))
+
+### Fixed
+
+- Fixes capitalized I's when emojis are present after the text being edited. (#21951) ([f307ac7c5e](https://github.com/facebook/react-native/commit/f307ac7c5e3adb9b4c0f8b2e4b8cdc2f980c7733) by [@dchersey](https://github.com/dchersey))
+- Fix broken jsiexecutor search path. (#23274) ([2aa2401766](https://github.com/facebook/react-native/commit/2aa24017667721ba17a859ca4e13d43e52d86bc5) by [@amccarri](https://github.com/amccarri))
+- Fix duplicate symbols linker error in xcodeproj (#23284) ([9f72e6a5d0](https://github.com/facebook/react-native/commit/9f72e6a5d02d84fe8ed545e0c0904199b9cb3c7a) by [@tyrone-sudeium](https://github.com/tyrone-sudeium))
+- apply Network Security Config file (fixes #22375) (part 2 of #23105) (#23135) ([84572c4051](https://github.com/facebook/react-native/commit/84572c4051f11f68ddf0928d2c3df5850ae15491) by [@Salakar](https://github.com/Salakar))
+- Fix crash for web socket in some race conditions (#22439) ([dd209bb789](https://github.com/facebook/react-native/commit/dd209bb7891ed5f05b96a9922c7b0e39bf3ac9e9) by [@zhongwuzw](https://github.com/zhongwuzw))
+
+#### iOS specific
+
+- Don't attempt to load RCTDevLoadingView lazily ([a9dd828c68](https://github.com/facebook/react-native/commit/a9dd828c68338dbf0e55ffa1838bf8ff574f317d) by [@fkgozali](https://github.com/fkgozali))
+
+### Security
+
+#### Android specific
+
+- improve Android Network Security config (#23429) ([5747094532](https://github.com/facebook/react-native/commit/5747094532bace3fe6b1ebdf55235e53189baa71) by [@dulmandakh](https://github.com/dulmandakh))
+
+## v0.58.4
+
+This release resolves a few bugs and includes a few improvements, listed below.
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/81) for cherry-picking commits - you can participate in the decision process for the next patch release [here](https://github.com/react-native-community/react-native-releases/issues/86).
+
+### Added
+
+#### Android specific
+
+- Add error description to Image onError callback ([7795a672d3](https://github.com/facebook/react-native/commit/7795a672d3a24a5b50df6ad6d30555d856b557cc) by [@Jyrno42](https://github.com/Jyrno42))
+
+### Changed
+
+#### Android specific
+
+- bump soloader to `0.6.0` ([07d1075f37](https://github.com/facebook/react-native/commit/07d1075f372bb864ddc62b9c8f613b03becfa568) by [@dulmandakh](https://github.com/dulmandakh))
+
+### Removed
+
+- Remove jest and jest-junit from runtime dependencies (#23276) ([c7b57f1986](https://github.com/facebook/react-native/commit/c7b57f19869f31474c8ee17f7a1ac1551bab1b6e) by [@vovkasm](https://github.com/vovkasm))
+
+### Fixed
+
+#### Android specific
+
+- Fixes Android crash on animated style with string rotation ([e405e84fc3](https://github.com/facebook/react-native/commit/e405e84fc35923888442df748757787698040010) by [@scisci](https://github.com/scisci))
+
+#### iOS specific
+
+- fix incorrect type which makes animated gifs not loop forever on device (#22987) ([728a35fcf2](https://github.com/facebook/react-native/commit/728a35fcf2a2b0d695a4d7083b266eda486b1392) by [@chrisnojima](https://github.com/chrisnojima))
+- Fixes for running the simulator ([9a8c9596eb](https://github.com/facebook/react-native/commit/9a8c9596ebe41e27d37ba18d6bf09f1c931c1ff2) by [@osunnarvik](https://github.com/osunnarvik)), ([98bcfe00fb](https://github.com/facebook/react-native/commit/98bcfe00fbca066d6914a2680c3647b678caccc5) by [@cpojer](https://github.com/cpojer)) and ([8bddcb6cb0](https://github.com/facebook/react-native/commit/8bddcb6cb0914373a0aeb927f12a6d48ffc5bb84) by [@cpojer](https://github.com/cpojer))
+
+## v0.58.3
+
+This release resolves a regression in **StatusBar** using [these fixes](https://github.com/facebook/react-native/compare/v0.58.2...v0.58.3).
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/81) for cherry-picking commits - you can participate in the decision process for the next patch release [here](https://github.com/react-native-community/react-native-releases/issues/81).
+
+## v0.58.2
+
+This release fixes an issue caused by a wrongly reverted merge commit, that caused a short timeframe of commits to not actually be in the original 0.58.0. Those commits have been added to the 0.58 changelog below, as many are intertwined with the original work.
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/81) for cherry-picking commits - you can participate in the decision process for the next patch release [here](https://github.com/react-native-community/react-native-releases/issues/81).
+
+## v0.58.1
+
+There were some regressions with developer tools that prevented `react-native run-ios` from working properly in 0.58.0; this patch fix addresses that.
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/81) for cherry-picking commits - you can participate to the decision process for the next patch release [here](https://github.com/react-native-community/react-native-releases/issues/81).
+
+## v0.58.0
+
+Welcome to first stable release of React Native of 2019!
+There are a number of significant changes in this version, and we'd like to especially draw your attention to them:
+
+- [Modernizing](https://github.com/facebook/react-native/issues/21581) and [strengthening flow types](https://github.com/facebook/react-native/issues/22100) for core components
+- Breaking changes to `ScrollView`, `CameraRollView`, and `SwipeableRow` that make it no longer bound to the component instance in certain methods
+- Support for mutual TLS in WebKit
+- Asset serving from directories besides `/assets`
+- Numerous crash fixes and resolutions for unexpected behavior
+
+Aside from those:
+
+- if you are an iOS developer, you'll need to manually link `JavaScriptCore.framework` when upgrading; this can be done via Xcode, and following the steps shown [here](https://camo.githubusercontent.com/c09cd42747364b498efa7c82fcb73978ba076eae/687474703a2f2f646f63732e6f6e656d6f62696c6573646b2e616f6c2e636f6d2f696f732d61642d73646b2f616464696e672d6672616d65776f726b732e706e67).
+
+- Android developers, please note that Android's target SDK 27 is supported. Work is still underway to land target SDK 28 support, and it will come soon.
+
+Thanks to those who gave feedback during the [release candidate phase](https://github.com/react-native-community/react-native-releases/issues/41). If you're interested in helping evaluate our next release (0.59), subscribe to the dedicated issue [here](https://github.com/react-native-community/react-native-releases/issues/79).
+
+### Added
+
+- Add support for `publicPath` to enable serving static assets from different locations ([0b314960aa](https://github.com/facebook/react-native/commit/0b314960aa34c71fc731bac9c1f2b48f3223c5cb) by [@gdborton](https://github.com/gdborton))
+- Add **TouchableBounce** now has a simple `bounce()` function that can be used to trigger a bounce without callbacks ([7fe3f90156](https://github.com/facebook/react-native/commit/7fe3f90156e879fe53665efb5a90ba3a711475fa))
+
+#### Android specific
+
+- Bundler server host can now be set using Android System Properties, making for easier debugging across multiple apps or app installs `adb shell setprop metro.host` ([e02a154787](https://github.com/facebook/react-native/commit/e02a154787274be1da3632cb1412554cbd53928b) by [@stepanhruda](https://github.com/stepanhruda))
+- Native Modules can now reject a promise with an additional `WritableMap` arg for extra properties (`userInfo`). See the interface defined in [`Promise.java`](https://github.com/facebook/react-native/blob/60b3942/ReactAndroid/src/main/java/com/facebook/react/bridge/Promise.java) for available methods. This is accessible in JavaScript as `Error.userInfo`. This is to match iOS's existing `Error.userInfo` behavior. See PR for examples. (#20940 by @Salakar)
+- Native Modules now expose a `nativeStackAndroid` property to promises rejected with an Exception/Throwable - making native error stacks available inside Javascript: `Error.nativeStackAndroid`. This is to match iOS's existing `Error.nativeStackIOS` support. See PR for examples. (#20940 by @Salakar)
+
+#### iOS specific
+
+- Add `moduleForName: lazilyLoadIfNecessary` to **RCTBridge.h** to lookup modules by name and force load them, plus various improvements to LazyLoading ([d7a0c44590](https://github.com/facebook/react-native/commit/d7a0c44590bcf3fb9d055aeae3391d5bcd7e21be), [6534718a18](https://github.com/facebook/react-native/commit/6534718a1898aa472e255d2aa9a0a6cae305619a), [d7865ebde8](https://github.com/facebook/react-native/commit/d7865ebde879983b355d6f6e64232e4bd264081d), [04ea9762e2](https://github.com/facebook/react-native/commit/04ea9762e2013dcebf9f8a51d8974fa799e41cd5), [1f394fa673](https://github.com/facebook/react-native/commit/1f394fa673a876753fdc9ac2cb86a4d4a58cd8cd), [80f92adf1f](https://github.com/facebook/react-native/commit/80f92adf1f35e74ee6db0b2f445cc851463059cf), and [81b74ec1ed](https://github.com/facebook/react-native/commit/81b74ec1ed3792c0b406c30b0a1c01219a2d6243) by [@dshahidehpour](https://github.com/dshahidehpour), [@fkgozali](https://github.com/fkgozali), and [@mmmulani](https://github.com/mmmulani))
+- Add ability for **WebView** to `setClientAuthenticationCredential` when `useWebKit={true}` for mutual TLS authentication ([8911353c47](https://github.com/facebook/react-native/commit/8911353c47af018f78c1cff59dfab05b975e39ed) and [8911353c47](https://github.com/facebook/react-native/commit/8911353c47af018f78c1cff59dfab05b975e39ed) by [@mjhu](https://github.com/mjhu))
+
+### Changed
+
+- Major improvements to Flow types for Core Components ([499c195eba](https://github.com/facebook/react-native/commit/499c195ebab0f276e3a58baf1e6172c1ba046a9e), [fbc5a4f5e6](https://github.com/facebook/react-native/commit/fbc5a4f5e65e024c10ad43d84f2b2353c9e92461), [f9050e0908](https://github.com/facebook/react-native/commit/f9050e09084cf3700bfc1954f97adf0f60cd8d88), [6476151717](https://github.com/facebook/react-native/commit/6476151717f44d3a90679f0f5293bed62a4f420e), [c03fc4087f](https://github.com/facebook/react-native/commit/c03fc4087ff9ac3ccbd1ab2261a1af329b354d99), [69213eea95](https://github.com/facebook/react-native/commit/69213eea9512c81ed998d240a6f5a3be05346b48), [136dfc8312](https://github.com/facebook/react-native/commit/136dfc831230e5418db02d1202e60d23a95c17b6), [3c0211b61a](https://github.com/facebook/react-native/commit/3c0211b61a1e723c3aaeba42c61b60bc724a3729), [c127000a7d](https://github.com/facebook/react-native/commit/c127000a7d2bb54599c9d80503528c3e8d75fddc), [636e146c4a](https://github.com/facebook/react-native/commit/636e146c4a27990547c81c2d36411d36b2c8e788), [c3dea894bd](https://github.com/facebook/react-native/commit/c3dea894bdb07d0b7ec18ab0388626d0340e6b69), [35a65cd704](https://github.com/facebook/react-native/commit/35a65cd704f2da67cd759c4d91251f8d4964b251), [79274979b7](https://github.com/facebook/react-native/commit/79274979b775e89d5f54a557a34062f873134199), [45c51835d6](https://github.com/facebook/react-native/commit/45c51835d69e111b67b4fcf1af39a13f7df1ee48), [a97d104b44](https://github.com/facebook/react-native/commit/a97d104b44daa068fa3848cc6c3225356f9dc318), [fb4825a2c6](https://github.com/facebook/react-native/commit/fb4825a2c65fba3aa905f7defb7d0c125fff644d), [84c5416617](https://github.com/facebook/react-native/commit/84c541661729dd20ab260c7468e48abbbe82affb), [3649a503cf](https://github.com/facebook/react-native/commit/3649a503cf52feac0386b4a10aab5ef6c4ec5ca0) by [@mottox2](https://github.com/mottox2), [@saitoxu](https://github.com/saitoxu), [@RSNara](https://github.com/RSNara), [@watanabeyu](https://github.com/watanabeyu), [@Tnarita0000](https://github.com/Tnarita0000), [@exced](https://github.com/exced), [@nd-02110114](https://github.com/nd-02110114), [@flowkraD](https://github.com/flowkraD))
+- Many public components were converted to ES6 classes ([ScrollView](https://github.com/facebook/react-native/commit/010e3302b8101287f231254086f3a8788a5a2c3e) by [@thymikee](https://github.com/thymikee), [CameraRollView](https://github.com/facebook/react-native/pull/21619), [SwipeableRow](https://github.com/facebook/react-native/pull/21876/files) and [ProgressBarAndroid](https://github.com/facebook/react-native/pull/21874) by [@exceed](https://github.com/exceed), [ProgressViewIOS](https://github.com/facebook/react-native/pull/21588) by [@empyrical](https://github.com/empyrical), [SegmentedControlIOS](https://github.com/facebook/react-native/pull/21888/files), [ToolbarAndroid](https://github.com/facebook/react-native/pull/21893/files) by [@nd-02110114](https://github.com/nd-02110114)
+- Flow dependency is now at `v0.85.0` ([adc8a33fcf](https://github.com/facebook/react-native/commit/adc8a33fcfeb8fc163f48ae4a4bc5aaac98bcb0d) by [@samwgoldman](https://github.com/samwgoldman))
+- metro dependency is now at `v0.49.1` ([f867db366a](https://github.com/facebook/react-native/commit/f867db366aa4f0ead5a20c0d3154ca58be43fc20), [88882951e1](https://github.com/facebook/react-native/commit/88882951e1607b0af6f1772ef13135e037f9c4e3), [31bb551e75](https://github.com/facebook/react-native/commit/31bb551e75bda155b4821381e5497dc423326e3c), [de60e8643a](https://github.com/facebook/react-native/commit/de60e8643ac4e13a7f92175351268dd3c3e768db), and [de60e8643a](https://github.com/facebook/react-native/commit/de60e8643ac4e13a7f92175351268dd3c3e768db) by [@alexkirsz](https://github.com/alexkirsz) and [@rafeca](https://github.com/rafeca))
+- jest dependency is now at `v24.0.0-alpha.6` ([1b4fd64325](https://github.com/facebook/react-native/commit/1b4fd643256817d29163b37101da612867a225a1), [66aba09251](https://github.com/facebook/react-native/commit/66aba092514abd2b278a4fb66c30abffbdd5d5ff), and [06c13b3e06](https://github.com/facebook/react-native/commit/06c13b3e066636b414f5dc19c919dcb138763c71) by [@rafeca](https://github.com/rafeca) and [@rubennorte](https://github.com/rubennorte))
+- fbjs-scripts dependency is now at `v1.0.0` (#21880) ([cdbf719307](https://github.com/facebook/react-native/commit/cdbf719307f41e94a62307ec22463bb562d1c8de) by [@jmheik](https://github.com/jmheik))
+- folly dependency is now at `v2018.10.22.00` ([a316dc6ec3](https://github.com/facebook/react-native/commit/a316dc6ec34655981c0f226186f4fb668e4a01e2), [287934dba9](https://github.com/facebook/react-native/commit/287934dba943cd954164bde8b06f9ba85940b45f), and [a70625abd7](https://github.com/facebook/react-native/commit/a70625abd7bf4fba3dafb8a969a73854b7ddcd42) by [@Kudo](https://github.com/Kudo) and [@radko93](https://github.com/radko93))
+- React is set to `16.6.3` now via sync for revisions 4773fdf...6bf5e85 ([0cb59b5c23](https://github.com/facebook/react-native/commit/0cb59b5c23b76771a30f59cdcedaa3c95c4dd280) and [073ad6a036](https://github.com/facebook/react-native/commit/073ad6a0367c3156e03680c0ab0648feed2bf89c) by [@yungsters](https://github.com/yungsters))
+- Clearer error messages when hot reloading ([c787866d64](https://github.com/facebook/react-native/commit/c787866d644be4c8d30bb17c237a50fdd6e1a82d) by [@alexkirsz](https://github.com/alexkirsz))
+- Allow CxxModules to implement functions which take two callbacks ([8826d8b233](https://github.com/facebook/react-native/commit/8826d8b233c1e3325a575d5012b713c4786e6062) by [@acoates-ms](https://github.com/acoates-ms))
+
+#### Breaking Changes 💥
+
+- Public methods of components converted to ES6 classes are no longer bound to their component instance. For `ScrollView`, the affected methods are `setNativeProps`, `getScrollResponder`, `getScrollableNode`, `getInnerViewNode`, `scrollTo`, `scrollToEnd`, `scrollWithoutAnimationTo`, and `flashScrollIndicators`. For `CameraRollView`, the affected methods are: `rendererChanged`. For `SwipeableRow`, the affected methods are: `close`. Therefore, it is no longer safe to pass these method by reference as callbacks to functions. Auto-binding methods to component instances was a behaviour of `createReactClass` that we decided to not preserve when switching over to ES6 classes. (you can refer to [this example](https://github.com/react-native-community/react-native-releases/issues/81#issuecomment-459252692))
+- Native Modules in Android now require `@ReactModule` annotations to access `.getNativeModule` method on the `ReactContext`. This is how your updated Native Module should look like:
+
+  ```diff
+  // CustomModule.java
+
+  // ...
+  +  import com.facebook.react.module.annotations.ReactModule;
+
+  +  @ReactModule(name="CustomBridge")
+  public class CustomModule extends ReactContextBaseJavaModule {
+    // ...
+
+    @Override
+    public String getName() {
+        return "CustomBridge";
+    }
+
+    // ...
+  }
+  ```
+
+#### Android specific
+
+- Optimize `PlatformConstants.ServerHost`, `PlatformConstants.isTesting`, and `PlatformConstants.androidID` for performance ([2bf0d54f15](https://github.com/facebook/react-native/commit/2bf0d54f155c28244fa60230871b3eed60a20c6d), [339d9d3afb](https://github.com/facebook/react-native/commit/339d9d3afba45bb28073db59e365caea37258891), and [9f9390ddfc](https://github.com/facebook/react-native/commit/9f9390ddfccab706ff2d346fdbd408c1cfc1c312) by [@stepanhruda](https://github.com/stepanhruda), [@fkgozali](https://github.com/fkgozali), and [@axe-fb](https://github.com/axe-fb))
+
+#### iOS specific
+
+- Suppress yellow box about missing export for native modules ([5431607c6d](https://github.com/facebook/react-native/commit/5431607c6d4983e0adccf0192dd4dc4f5dc85443) by [@fkgozali](https://github.com/fkgozali))
+
+### Removed
+
+- Remove `UIManager.measureViewsInRect()` ([d6236796b2](https://github.com/facebook/react-native/commit/d6236796b285e6ad19c53c5308a0ad9c10792a05) by [@shergin](https://github.com/shergin))
+
+### Fixed
+
+- Fix potential UI thread stalling scenario from Yoga JNI bindings ([2a8f6c3028](https://github.com/facebook/react-native/commit/2a8f6c3028feec7fc9a01cbdfad45955c4771bf8) by [@davidaurelio](https://github.com/davidaurelio))
+- Fix crash happening due to race condition around bridge cxx module registry ([188cbb04ad](https://github.com/facebook/react-native/commit/188cbb04ad264aea32ae235b85b61e626b767b83), [188cbb04ad](https://github.com/facebook/react-native/commit/188cbb04ad264aea32ae235b85b61e626b767b83), and [188cbb04ad](https://github.com/facebook/react-native/commit/188cbb04ad264aea32ae235b85b61e626b767b83) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fix **View** and **Text**'s displayName; show the specific name rather than generic "Component" ([7a914fcef4](https://github.com/facebook/react-native/commit/7a914fcef4ae035221e1f984c104ba20430d6fad) by [@rajivshah3](https://github.com/rajivshah3))
+- Fix `react-native init --help` so that it doesn't return `undefined` ([58732a88b6](https://github.com/facebook/react-native/commit/58732a88b629b40b2d223a76fac46ecee5ae7295) by [@ignacioola](https://github.com/ignacioola))
+- Fix `react-native --sourceExts` ([ce860803a4](https://github.com/facebook/react-native/commit/ce860803a4341c4121a0bb504dc669349ac0db35) by [@elyalvarado](https://github.com/elyalvarado))
+- Fix accidental showing of **Modal** when `visible` prop is undefined or null ([cc13a7367b](https://github.com/facebook/react-native/commit/cc13a7367b08bd766749ddbfaacc25ade1f33a8f) by [@MateusAndrade](https://github.com/MateusAndrade))
+- Fix crash during **VirtualizedList** pagination ([5803772017](https://github.com/facebook/react-native/commit/580377201793314ca643250c1bd7cf1c47d49920))
+- Fix scenario where removing a module with remote debugging and Delta bundles may cause incorrect stack traces ([bea57d871f](https://github.com/facebook/react-native/commit/bea57d871f6b5bed76d1625b3e3f483695bd13e9) by [@alexkirsz](https://github.com/alexkirsz))
+- Fix regression in **StyleSheet** `setStyleAttributePreprocessor` ([04085337bc](https://github.com/facebook/react-native/commit/04085337bc47392922c7911b95b8fdaea98800e8) by [@brentvatne](https://github.com/brentvatne))
+- Fix React Native AsyncMode and DevTools ([aacb06c594](https://github.com/facebook/react-native/commit/aacb06c594dcd4581918035f713a69cf73bf125b) by [@bvaughn](https://github.com/bvaughn))
+
+#### Android specific
+
+- Fix crash when removing root nodes ([b649fa96a0](https://github.com/facebook/react-native/commit/b649fa96a088a9e8ccbf3f979ebfa4a5e28a066f) by [@ayc1](https://github.com/ayc1))
+- Fix various **ReactInstanceManager** deadlocks and race conditions ([df7e8c64ff](https://github.com/facebook/react-native/commit/df7e8c64ff8f5ff739fba2ba5ed6b0610567235e), [df7e8c64ff](https://github.com/facebook/react-native/commit/df7e8c64ff8f5ff739fba2ba5ed6b0610567235e), and [be282b5287](https://github.com/facebook/react-native/commit/be282b5287f7eecf8a3fd14b06ab36454dbba5fe) by [@ayc1](https://github.com/ayc1))
+- Fix IllegalArgumentException when dismissing ReactModalHostView and DialogManager ([e57ad4ee37](https://github.com/facebook/react-native/commit/e57ad4ee37b02cd4c9e10a97d7a1d2b799204d7d) and [38e01a20c3](https://github.com/facebook/react-native/commit/38e01a20c343e60d5f8cd92fb26454e9940565df) by [@mdvacca](https://github.com/mdvacca))
+- Fix incorrect merged asset path with flavor for Android Gradle Plugin 3.2 ([e90319e9fa](https://github.com/facebook/react-native/commit/e90319e9fa18661144ad29faf36efba3750edb32) by [@yatatsu](https://github.com/yatatsu))
+- Fix HTTP connection ontimeout callback ([a508134724](https://github.com/facebook/react-native/commit/a50813472450f51d2ef24b40be99a22beefec33c))
+- Fix websocket properly closing when remote server initiates close ([2e465bca15](https://github.com/facebook/react-native/commit/2e465bca158ae9cfa89448e2a3bb8cc009397ac8) by [@syaau](https://github.com/syaau))
+- Fix compatibility issue for Android 16 device ([5939d078a0](https://github.com/facebook/react-native/commit/5939d078a01edc9f83fce102317540ffbcac17c1), [f22473e9e9](https://github.com/facebook/react-native/commit/f22473e9e9f73605cd27c5e38298bd793478c84d), and [f22473e9e9](https://github.com/facebook/react-native/commit/f22473e9e9f73605cd27c5e38298bd793478c84d) by [@gengjiawen](https://github.com/gengjiawen))
+- Fix issue where `Image.resizeMode` isn't respected while source is loading, resulting in unexpected padding ([673ef39561](https://github.com/facebook/react-native/commit/673ef39561ce6640e447fa40299c263961e4f178) by [@dulmandakh](https://github.com/dulmandakh))
+- Fix Android 28's inverted **ScrollView** so that momentum is in the proper direction ([b971c5beb8](https://github.com/facebook/react-native/commit/b971c5beb8c7f90543ea037194790142f4f57c80) by [@mandrigin](https://github.com/mandrigin))
+- Fix HTTP connection timeout callback to be appropriately called ([a508134724](https://github.com/facebook/react-native/commit/a50813472450f51d2ef24b40be99a22beefec33c))
+- Fix compatibility issue with Android 16 device ([5939d078a0](https://github.com/facebook/react-native/commit/5939d078a01edc9f83fce102317540ffbcac17c1) by [@gengjiawen](https://github.com/gengjiawen))
+- Fix crash when releasing RN views and removing root nodes([83405ff316](https://github.com/facebook/react-native/commit/83405ff3167eaba6fa59ca52c54943221a05ee09) and [b649fa96a0](https://github.com/facebook/react-native/commit/b649fa96a088a9e8ccbf3f979ebfa4a5e28a066f) by [@ayc1](https://github.com/ayc1))
+- Close websocket properly when remote server initiates close ([2e465bca15](https://github.com/facebook/react-native/commit/2e465bca158ae9cfa89448e2a3bb8cc009397ac8) by [@syaau](https://github.com/syaau))
+- Workaround a wrong fling direction for inverted ScrollViews on Android P ([b971c5beb8](https://github.com/facebook/react-native/commit/b971c5beb8c7f90543ea037194790142f4f57c80) by [@mandrigin](https://github.com/mandrigin))
+- Fix **Image** to respect `resizeMode` for `defaultSource` images rather than showing padding while loading ([673ef39561](https://github.com/facebook/react-native/commit/673ef39561ce6640e447fa40299c263961e4f178) by [@dulmandakh](https://github.com/dulmandakh))
+
+#### iOS specific
+
+- Fix case where content of inline views didn't get relaid out ([798517a267](https://github.com/facebook/react-native/commit/798517a267841675956cb52a1c0ae493a913962a) by [@rigdern](https://github.com/rigdern))
+- Fix issue with **ImagePickerIOS**'s inconsistent image when using the front-facing camera ([4aeea4d2dc](https://github.com/facebook/react-native/commit/4aeea4d2dc14cf02dc3766043e2938bf367c6170))
+- Fix race condition and crash around shutdown of the JSC for iOS 11 and earlier ([bf2500e38e](https://github.com/facebook/react-native/commit/bf2500e38ec06d2de501c5a3737e396fe43d1fae) by [@mhorowitz](https://github.com/mhorowitz))
+- Fix crash in **NetInfo**'s \_firstTimeReachability ([eebc8e230a](https://github.com/facebook/react-native/commit/eebc8e230a9f72c3dde34a5cfd59bbffba55e53d) by [@mmmulani](https://github.com/mmmulani))
+- Fix case where inline view is visible even though it should have been truncated ([70826dbafc](https://github.com/facebook/react-native/commit/70826dbafcb00c08e0038c5066e33848141be77b) by [@rigdern](https://github.com/rigdern))
+- Fix crash with **ScrollView** related to content offsets ([585f7b916d](https://github.com/facebook/react-native/commit/585f7b916d63b7b4d22a7347334765ffcd7945e9) by [@shergin](https://github.com/shergin))
+- Fix an issue where **CameraRoll** wasn't showing the front-facing camera consistently during capture and preview ([4aeea4d2dc](https://github.com/facebook/react-native/commit/4aeea4d2dc14cf02dc3766043e2938bf367c6170))
+- Fix case where inline view is visible even though it should have been truncated ([70826dbafc](https://github.com/facebook/react-native/commit/70826dbafcb00c08e0038c5066e33848141be77b) by [@rigdern](https://github.com/rigdern))
+
+### Known issues
+
+It is possible that you'll face an AAPT error regarding missing resources, [here](https://github.com/infinitered/ignite-andross/issues/244) is an example of this error, in this case, you should try to update the build tools versions to `buildToolsVersion = "28.0.2"` in your android/build.gradle file. If you maintain a react-native library which uses native code you should avoid using hardcoded versions of the build tools and use the packaged version numbers, here is an example you can [follow](https://github.com/react-native-community/react-native-linear-gradient/blob/master/android/build.gradle)
+
+## v0.57.8
+
+**NOTE WELL**: when you upgrade to this version you **NEED** to upgrade `react` and `react-test-renderer` to version `"16.6.3"`.
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/71) for cherry-picking commits - you can participate to the decision process for the next release [here](https://github.com/react-native-community/react-native-releases/issues/75).
+
+### Added
+
+- Fix: Add displayName to ActivityIndicator (#22417) ([53da585832](https://github.com/facebook/react-native/commit/53da5858326bbddd2df112f86b2c1e935adc3882))
+
+### Changed
+
+- Switch: Improve Accessibility ([0c8db08f51](https://github.com/facebook/react-native/commit/0c8db08f519fdf5162dff1d9a18b58885c4c7d2f) by [@yungsters](https://github.com/yungsters))
+- React sync for revisions 3ff2c7c...6bf5e85 ([073ad6a036](https://github.com/facebook/react-native/commit/073ad6a0367c3156e03680c0ab0648feed2bf89c) by [@yungsters](https://github.com/yungsters))
+
+#### iOS specific
+
+- Extend reason message for `RCTFatalException` (#22532) ([2831d9ef61](https://github.com/facebook/react-native/commit/2831d9ef614280d08699f3134eeaeda84c30234e) by [@zackzachariah](https://github.com/zackzachariah))
+
+### Removed
+
+- Remove trailing slash from origin header if no port is specified (#22290) ([cbe7d41f3f](https://github.com/facebook/react-native/commit/cbe7d41f3f509aaa8b8b0819b0d8ad4996fd7296))
+
+### Fixed
+
+- Fix text alpha bug ([fd78eee11b](https://github.com/facebook/react-native/commit/fd78eee11b71799aa7fa57bbd70d59c6c642c3b3) by [@necolas](https://github.com/necolas))
+- fix possible NPE in StatusBarModule ([0f3be77b7d](https://github.com/facebook/react-native/commit/0f3be77b7d4177c8f94d775bf8ef2a2b68f1e828) by [@mdvacca](https://github.com/mdvacca))
+- Fixes animated gifs incorrectly looping/not stopping on last frame (#21999) ([de759b949e](https://github.com/facebook/react-native/commit/de759b949e4aa4904fd60a2fcbb874a3c857b50c) by [@staufman](https://github.com/staufman))
+- Fix ListEmptyComponent is rendered upside down when using inverted flag. (#21496) ([198eb02697](https://github.com/facebook/react-native/commit/198eb0269781803cc16254916b0477916afbcb0e) by [@hyochans](https://github.com/hyochans))
+- Fix bug in comparison logic of object property (#22348) ([c3b3eb7f73](https://github.com/facebook/react-native/commit/c3b3eb7f73b0fb4035d4b2478bf9827caf746372) by [@vreality64](https://github.com/vreality64))
+- Fix dispatch of OnLayout event for first render ([844e11967d](https://github.com/facebook/react-native/commit/844e11967d9292bd5cfe423d0fd57e34388f2337) by [@mdvacca](https://github.com/mdvacca))
+- KeyboardAvoidingView: Duration cannot be less then 10ms (#21858) ([87b6533937](https://github.com/facebook/react-native/commit/87b65339379362f9db77ae3f5c9fa8934da34b25))
+- default hitSlop values to 0 (#22281) ([f6d3a61677](https://github.com/facebook/react-native/commit/f6d3a6167730cc9253b796b859d8f1f33f821687) by [@Taylor123](https://github.com/Taylor123))
+
+#### iOS specific
+
+- Fixed for supporting mediaPlaybackRequiresUserAction under iOS 10. (#22208) ([c45d290b07](https://github.com/facebook/react-native/commit/c45d290b079f95466ad4054acf7b93c66cabc429) by [@ifsnow](https://github.com/ifsnow))
+- Use main.jsbundle in iOS template for production build (#22531) ([a2ef5b85d8](https://github.com/facebook/react-native/commit/a2ef5b85d8c46cefd5873bf5fc6dddabf1d51d13) by [@radeno](https://github.com/radeno))
+- Use relative path for SCRIPTDIR (#22598) ([0314fca63a](https://github.com/facebook/react-native/commit/0314fca63a035c95864e5b198e1fbd9a5ee1d2a7) by [@sunnylqm](https://github.com/sunnylqm))
+- Fix UIScrollView crash ([585f7b916d](https://github.com/facebook/react-native/commit/585f7b916d63b7b4d22a7347334765ffcd7945e9) by [@shergin](https://github.com/shergin))
+- Avoid using `-[UITextView setAttributedString:]` while user is typing (#19809) ([f77aa4eb45](https://github.com/facebook/react-native/commit/f77aa4eb459b9dcb7f0b558ad3f04e0c507955e9))
+
+### Security
+
+- Bump ws package to 1.1.5 due to vulnerability issues (#21769) ([96ce6f9538](https://github.com/facebook/react-native/commit/96ce6f9538ed3559ffea6040a47b1d6a30546ab9) by [@prog1dev](https://github.com/prog1dev))
+
+## v0.57.7
+
+**NOTE WELL**: when you upgrade to this version you **NEED** to upgrade `react` and `react-test-renderer` to version `"16.6.1"`.
+
+This patch release fixes version 0.57.6 about losing focus in `TextInput` because of [ada7089066](https://github.com/facebook/react-native/commit/ada70890663503b65b42bb5f6f98d3df412ecdc4).
+
+Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/64) for cherry-picking commits.
+
+## v0.57.6
+
+**INFO NOTE**: It's highly recommended that you skip this version and upgrade to 0.57.7.
+
+**NOTE WELL**: when you upgrade to this version you **NEED** to upgrade `react` and `react-test-renderer` to version `"16.6.1"`.
+This patch release fixes a number of crashes, resolves build issues (both for iOS and Android). Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/64) for cherry-picking commits.
+
+### Added
+
+#### iOS specific
+
+- Add iOS 12 textContentType options (#21079) ([644fc57fad](https://github.com/facebook/react-native/commit/644fc57fad4b163e96c3b3d6ec441c7b566d2d43) by [@ultramiraculous](https://github.com/ultramiraculous))
+
+### Removed
+
+- Remove useless additional blur call (#22156) ([ada7089066](https://github.com/facebook/react-native/commit/ada70890663503b65b42bb5f6f98d3df412ecdc4))
+
+### Fixed
+
+- Improving Modal `visible` prop check to handle undefined and null (#22072) ([cc13a7367b](https://github.com/facebook/react-native/commit/cc13a7367b08bd766749ddbfaacc25ade1f33a8f) by [@MateusAndrade](https://github.com/MateusAndrade))
+- Fix crash in nativeInjectHMRUpdate (#22412) ([0b4fd621e3](https://github.com/facebook/react-native/commit/0b4fd621e3ab511510d6852af67183a3581d1aad) by [@vovkasm](https://github.com/vovkasm))
+- Fix IllegalArgumentException when dismissing ReactModalHostView ([e57ad4ee37](https://github.com/facebook/react-native/commit/e57ad4ee37b02cd4c9e10a97d7a1d2b799204d7d) by [@mdvacca](https://github.com/mdvacca))
+- Fix regression in StyleSheet.setStyleAttributePreprocessor (#22262) ([04085337bc](https://github.com/facebook/react-native/commit/04085337bc47392922c7911b95b8fdaea98800e8) by [@brentvatne](https://github.com/brentvatne))
+- Fix React Native AsyncMode and DevTools ([f41383fb6d](https://github.com/facebook/react-native/commit/f41383fb6d6d0858e1b09dda79a74632d7932d07) by [@bvaughn](https://github.com/bvaughn))
+- CxxReact: Silence 'unused lambda capture' warnings in open-source (#22240) ([0c0540965a](https://github.com/facebook/react-native/commit/0c0540965ad9e3cdd9af16f606e141eca8ab2193) by [@empyrical](https://github.com/empyrical))
+
+#### Android specific
+
+- Fixed HTTP connection timeout on Android (#22164) ([a508134724](https://github.com/facebook/react-native/commit/a50813472450f51d2ef24b40be99a22beefec33c))
+- resizeMode applies to Image.defaultSource (#22216) ([673ef39561](https://github.com/facebook/react-native/commit/673ef39561ce6640e447fa40299c263961e4f178) by [@dulmandakh](https://github.com/dulmandakh))
+- Android: Close websocket properly when remote server initiates close (#22248) ([2e465bca15](https://github.com/facebook/react-native/commit/2e465bca158ae9cfa89448e2a3bb8cc009397ac8) by [@syaau](https://github.com/syaau))
+- Workaround a wrong fling direction for inverted ScrollViews on Android P (#21117) ([b971c5beb8](https://github.com/facebook/react-native/commit/b971c5beb8c7f90543ea037194790142f4f57c80) by [@mandrigin](https://github.com/mandrigin))
+- Fix crash when releasing RN views ([83405ff316](https://github.com/facebook/react-native/commit/83405ff3167eaba6fa59ca52c54943221a05ee09) by [@ayc1](https://github.com/ayc1))
+
+#### iOS specific
+
+- iOS: Support inline view truncation (#21456) ([70826dbafc](https://github.com/facebook/react-native/commit/70826dbafcb00c08e0038c5066e33848141be77b) by [@rigdern](https://github.com/rigdern))
+- NetInfo: try to solve crash with releasing \_firstTimeReachability ([eebc8e230a](https://github.com/facebook/react-native/commit/eebc8e230a9f72c3dde34a5cfd59bbffba55e53d) by [@mmmulani](https://github.com/mmmulani))
+- Generate ip.txt before SKIP_BUNDLING check (#20554) ([9c1ea45d38](https://github.com/facebook/react-native/commit/9c1ea45d38a6ec731894443debe8879fa3876ab7) by [@keatongreve](https://github.com/keatongreve))
+- Revert [Performance improvement for loading cached images on iOS ] ([7eeb305933](https://github.com/facebook/react-native/commit/7eeb305933fca695c5a15d675bb10569c3385109) by [@kelset](https://github.com/kelset))
+- Fix inability to remove 'Disabled' state from AccessibilityStates ([5eaa2d29c0](https://github.com/facebook/react-native/commit/5eaa2d29c0c4c633a40f7241408737c754edea84))
+
+## v0.57.5
+
+**NOTE WELL**: when you upgrade to this version you **NEED** to upgrade `react` and `react-test-renderer` to version `"16.6.1"`.
+
+This patch release fixes a number of crashes, resolves build issues (both for iOS and Android), and brings React to v16.6.1. Thanks everyone who contributed code or participated in the [discussion](https://github.com/react-native-community/react-native-releases/issues/54) for cherry-picking commits.
+
+### Changed
+
+- React is now at v16.6.1 ([8325e09e5c](https://github.com/facebook/react-native/commit/8325e09e5cd8538fded1b5a1b4fff1854e17eb22) and [76c99f20e3](https://github.com/facebook/react-native/commit/76c99f20e39ef1b5fa93487bc8c82e7c6aede5dd) by [@yungsters](https://github.com/yungsters))
+
+#### iOS specific
+
+- Performance improvement for loading cached images ([54f7eb3424](https://github.com/facebook/react-native/commit/54f7eb34243715a1d4bc821ccbadeec12486d22c) and [3a98318c91](https://github.com/facebook/react-native/commit/3a98318c91283a1bba35c0bca93b975d4a550330) by [@esamelson](https://github.com/esamelson) and others)
+
+### Fixed
+
+- Fix crash in **VirtualizedList** during pagination ([5803772017](https://github.com/facebook/react-native/commit/580377201793314ca643250c1bd7cf1c47d49920))
+- Fix polyfilling of **regeneratorRuntime** to avoid setting it to undefined in some situations ([2a7e02edf6](https://github.com/facebook/react-native/commit/2a7e02edf64c20410b2f95f35e313279545b40db) by [@rafeca](https://github.com/rafeca))
+- Fix **View**, **Text**, and **ActivityIndicator**'s `displayName` ([7a914fcef4](https://github.com/facebook/react-native/commit/7a914fcef4ae035221e1f984c104ba20430d6fad) and [53da585832](https://github.com/facebook/react-native/commit/53da5858326bbddd2df112f86b2c1e935adc3882) by [@rajivshah3](https://github.com/rajivshah3) and others)
+- Fix crash that happens when a component throws an exception that contains a null message ([6debfdf6d6](https://github.com/facebook/react-native/commit/6debfdf6d6172cec2d87fd1e780c3b347d41dc1d) by [@mdvacca](https://github.com/mdvacca))
+
+#### Android specific
+
+- Fix incorrect merged asset path with flavor for Android Gradle Plugin 3.2 ([e90319e9fa](https://github.com/facebook/react-native/commit/e90319e9fa18661144ad29faf36efba3750edb32) by [@yatatsu](https://github.com/yatatsu))
+- Fix crash in **ReadableNativeArray.getType** when size of ReadableNativeArray's length > 512 ([09c78fe968](https://github.com/facebook/react-native/commit/09c78fe968e1bb71108c4058e76ebf70178e5a8b) by [@dryganets](https://github.com/dryganets))
+
+#### iOS specific
+
+- Fix crash in rapid use of **NetInfo.getCurrentConnectivity** ([67afaefa78](https://github.com/facebook/react-native/commit/67afaefa78c314b38249a7e2758e0af38c18f34a) by [@mmmulani](https://github.com/mmmulani))
+- Fix Xcode 10 errors relating to third-party ([277c19c93e](https://github.com/facebook/react-native/commit/277c19c93eacf3e3ce63f71236fd399214d6e6d0) by [@mmccartney](https://github.com/mmccartney))
+- Fix build errors when path to `$NODE_BINARY` contains spaces ([7d4e94edcc](https://github.com/facebook/react-native/commit/7d4e94edccfc2f642fcbd1d6aa00756f02e3a525) by [@sundbry](https://github.com/sundbry))
+- Fix case where content of inline views didn't get relaid out ([798517a267](https://github.com/facebook/react-native/commit/798517a267841675956cb52a1c0ae493a913962a) by [@rigdern](https://github.com/rigdern))
+- Fix **InputAccessoryView**'s safe area when not attached to a **TextInput** ([2191eecf54](https://github.com/facebook/react-native/commit/2191eecf54b5c4bf278dfaf23fec46d44ac9a1f0) by [@janicduplessis](https://github.com/janicduplessis))
+
+## v0.57.4
+
+**NOTE WELL**: when you upgrade to this version you **NEED** to upgrade `react` and `react-test-renderer` to version `"16.6.0-alpha.8af6728"` (next version, 0.57.5, will update to `16.6.0`, and it will come soon). Also, please check the _Known issues_ section below, especially if you are using Xcode 10.
+
+Thanks to everyone that contributed to the [discussion](https://github.com/react-native-community/react-native-releases/issues/48) for cherry-picking the commits that landed in this release, and the developers who submitted those commits!
+
+### Added: new features
+
+#### Android specific additions
+
+- Android textTransform style support ([22cf5dc566](https://github.com/facebook/react-native/commit/22cf5dc5660f19b16de3592ccae4c42cc16ace69) by Stephen Cook)
+
+### Changes: existing functionality that is now different
+
+- Add deprecation notice to SwipeableListView ([99471f87b9](https://github.com/facebook/react-native/commit/99471f87b944b26bbdaa0fb0881db91c1118b741) by [@TheSavior](https://github.com/TheSavior))
+
+#### Android specific changes
+
+- Consolidate native dependencies versions ([ba608a2db7](https://github.com/facebook/react-native/commit/ba608a2db786a8e983a6e30b31662fac254286c0) by [@dulmandakh](https://github.com/dulmandakh))
+- bump okhttp3 to 3.11 ([10fc548809](https://github.com/facebook/react-native/commit/10fc548809cc08db209ae6696b723341925137d1) by [@dulmandakh](https://github.com/dulmandakh))
+- Android: Send `<Text>` metrics in onTextLayout events ([737f93705c](https://github.com/facebook/react-native/commit/737f93705ca8b5d3fdd207f870cf27adcf1e885b) by [@mmmulani](https://github.com/mmmulani))
+- Use TextLegend example in Android as well ([335927db44](https://github.com/facebook/react-native/commit/335927db44fe47e20db4503a1ab5fcf8d62144a8) by [@mmmulani](https://github.com/mmmulani))
+
+#### iOS specific changes
+
+- Bump xcode@1.0.0 ([b9514995a2](https://github.com/facebook/react-native/commit/b9514995a26b4c3f6d555257740457dd4d6cfeae) by [@peat-psuwit](https://github.com/peat-psuwit))
+- Text: send metrics after rendering (iOS) ([737f93705c](https://github.com/facebook/react-native/commit/737f93705ca8b5d3fdd207f870cf27adcf1e885b) by [@mmmulani](https://github.com/mmmulani))
+- Allow specifying iOS version for run-ios with simulator option ([0fab27cbac](https://github.com/facebook/react-native/commit/0fab27cbaca57b90119ab36104af4d0b3052ae30) by [@elyalvarado](https://github.com/elyalvarado))
+- Relax the requirement that lazy module cannot be initialized on the main thread ([dbc864c9cd](https://github.com/facebook/react-native/commit/dbc864c9cd95f9df268d85a642742e84e2360db4) by [@spredolac](https://github.com/spredolac))
+
+### Fixed: bugs that have been resolved
+
+- Fix crashes on invalid regex ([298f14da12](https://github.com/facebook/react-native/commit/298f14da1210460b3e25c6002e8d1aa5f7b4e0ef) by [@RSNara](https://github.com/RSNara))
+- Fix pull to refresh refresh component clipping on Android ([8a3a0ad2d0](https://github.com/facebook/react-native/commit/8a3a0ad2d0f894a3d8c1e403a9336dab17c2dde8) by Andy Huang)
+- ListView requestAnimationFrame leak ([70b5eb3aa2](https://github.com/facebook/react-native/commit/70b5eb3aa27822fa11571c3d8d3628ecf03268ab) by [@exced](https://github.com/exced))
+
+#### Android specific fixes
+
+- reverted [Update bad method](https://github.com/facebook/react-native/commit/1592a8d42411d1f91c8ceb738c0533c1cee73f71)
+- Fix accessibility role crash ([1f96ff62cf](https://github.com/facebook/react-native/commit/1f96ff62cf786f93c91e6625bf2b819077902251) by Haseeb Saeed)
+- Fix accessibilityRole value lookup ([1f96ff62cf](https://github.com/facebook/react-native/commit/1f96ff62cf786f93c91e6625bf2b819077902251) by [@ayc1](https://github.com/ayc1))
+- Fix DynamicFromMap object pool synchronization ([b0d68c0bb9](https://github.com/facebook/react-native/commit/b0d68c0bb971a44dfdf7722682933f1e96e1cd45) by [@haitaoli](https://github.com/haitaoli))
+- Back out "[react-native][pr] Rounded corner rendering fixed on Android N." ([bb407fa1ec](https://github.com/facebook/react-native/commit/bb407fa1ec0bd0367373961fdc0e840150840068) by Jonathan Lee)
+- Fix onTextLayout metrics on Android when using alignText ([1c240ae898](https://github.com/facebook/react-native/commit/1c240ae898e26534b8d9a09a334dec02e96faa05) by [@mmmulani](https://github.com/mmmulani))
+- Cleaning up imports in ViewGroupManager ([082a869dae](https://github.com/facebook/react-native/commit/082a869daef3cf602a088d0418c185279052b8c3) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific fixes
+
+- Fix issue when inserting text at 0 when maxLength is set ([17415938c7](https://github.com/facebook/react-native/commit/17415938c7180a95811db949122b8ad24a442866) by [@ejanzer](https://github.com/ejanzer))
+
+### Known issues
+
+There are a few issues that don't have a finalized solution (as it happens for 0.x projects). In particular:
+
+- when using Xcode 10 and `react-native init`, your build may fail due to third-party build steps ([#20774](https://github.com/facebook/react-native/issues/20774)). There is a [commit](https://github.com/facebook/react-native/commit/b44c5ae92eb08125d466cf151cb804dabfbbc690) we are planning to cherry pick in a future release that should help - in the meantime, you should be able to run these commands from the project folder to fix the issue (you should need to do it only once per project):
+
+  ```bash
+  cd node_modules/react-native
+  scripts/ios-install-third-party.sh
+  cd third-party/glog-0.3.5/
+  ../../scripts/ios-configure-glog.sh
+  ```
+
+- React `16.6.0` works for the most part, aside from the Context API (check [this issue](https://github.com/facebook/react-native/issues/21975)) - and if you are eager to test the new React Hooks you will have to be patient, as they are not production ready and `16.7.alpha` is **not** yet [supported](https://github.com/facebook/react-native/issues/21967) by React Native.
+
+## v0.57.3
+
+**NOTE WELL**: when you upgrade to this version you **NEED** to upgrade `react` and `react-test-renderer` to version `"16.6.0-alpha.8af6728"`. Also, please check the _Known issues_ section below, especially if you are using Xcode 10.
+
+Thanks to everyone that contributed to the [discussion](https://github.com/react-native-community/react-native-releases/issues/46) for cherry-picking the commits that landed in this release, and the developers who submitted those commits!
+
+### Added: new features
+
+- Expose enableBabelRuntime config param externally ([89a358f347](https://github.com/facebook/react-native/commit/89a358f34786198c8a9a2d379588efd57b6a0eec) by [@rafeca](https://github.com/rafeca))
+
+#### Android specific additions
+
+- Add test for InterpolatorType ([b7526b2095](https://github.com/facebook/react-native/commit/b7526b2095e4a5c8641e8264786d1622d6390029) by [@ejanzer](https://github.com/ejanzer))
+
+### Changes: existing functionality that is now different
+
+- React sync for revisions ade5e69...d836010 ([fa6035bda6](https://github.com/facebook/react-native/commit/7142e9b1c5f95e82ceb04798b166318385004147) by [@yungsters](https://github.com/yungsters))
+- React: Bump Canary Version ([8258b6a280](https://github.com/facebook/react-native/commit/8258b6a2801121bebb25272bfcc5d3da1fb5ae39) by [@yungsters](https://github.com/yungsters))
+- FBJS: Upgrade to ^1.0.0 ([ee034596fe](https://github.com/facebook/react-native/commit/ee034596fecfb47ff9e6e1fc30cefb0e970e7d80) by [@yungsters](https://github.com/yungsters))
+- Bump metro@0.48.1 ([bf47589b8b](https://github.com/facebook/react-native/commit/bf47589b8be145750e954d09684370463a616779) by [@rafeca](https://github.com/rafeca))
+- Update to Detox 9 ([15c05988e9](https://github.com/facebook/react-native/commit/15c05988e980118151bdf41ed82ebb8c8e30a0f3) by [@kelset](https://github.com/kelset))
+- Add Deprecation Warning to ListView ([e90f5fa263](https://github.com/facebook/react-native/commit/e90f5fa2630f8a89e15fa57c70ada83e75a20642) by [@TheSavior](https://github.com/TheSavior))
+- Deprecate legacyImplementation of FlatList ([3aa8f09b44](https://github.com/facebook/react-native/commit/3aa8f09b4437eab8b91429b7325f8a6173ffa49a) by [@TheSavior](https://github.com/TheSavior))
+
+#### Android specific changes
+
+- bump Android NDK to r17c ([436cf154bb](https://github.com/facebook/react-native/commit/436cf154bb9cf4fc0bcafd7115d33544ce36b759) by [@dulmandakh](https://github.com/dulmandakh))
+- Resolve protocol http, https when not in lowercase ([d00bdb9bb8](https://github.com/facebook/react-native/commit/d00bdb9bb8b9b11bce900689c7e28cebd2eb0807) by [@hyunjongL](https://github.com/hyunjongL))
+- Normalize scheme for URL on Android ([4b6f02ea75](https://github.com/facebook/react-native/commit/4b6f02ea758a9ab5853a29ebfc054eaa98e6dc53) by [@radeno](https://github.com/radeno))
+
+#### iOS specific changes
+
+- Bump up the buffer size and show a warning if the trace might be truncated ([1fc8a46570](https://github.com/facebook/react-native/commit/1fc8a46570561a32657ffccb0f5a12c6f4d6a3dd) by [@alexeylang](https://github.com/alexeylang))
+
+### Fixed: bugs that have been resolved
+
+- Fix deprecation warning message in Switch ([997f382adc](https://github.com/facebook/react-native/commit/997f382adcc7f82fccd97ac671d13e86aef7171e) by [@radko93](https://github.com/radko93))
+
+#### Android specific fixes
+
+- Fix default accessibility delegate ([fa6035bda6](https://github.com/facebook/react-native/commit/fa6035bda6c606868977179534cb941f26fbdb92) by [@ayc1](https://github.com/ayc1))
+- Fix accessibility role/label ([fa6035bda6](https://github.com/facebook/react-native/commit/fa6035bda6c606868977179534cb941f26fbdb92) by [@ayc1](https://github.com/ayc1))
+- When converting arguments JS->Java, handle integers correctly ([bb9b9a8b9d](https://github.com/facebook/react-native/commit/bb9b9a8b9d5868c7ab5034117b785943496f6405) by [@mhorowitz](https://github.com/mhorowitz))
+- Fix CameraRoll.getPhotos() crash on Android if device has a problematic video asset ([4768bea0cf](https://github.com/facebook/react-native/commit/4768bea0cf288cf9c8097fc498b896610728c645) by [@naxel](https://github.com/naxel))
+- Android ScrollView fix for snapToInterval not snapping to end ([6eeff75849](https://github.com/facebook/react-native/commit/6eeff75849c9b8bf91592c1b7906b4dab8fba518) by [@olegbl](https://github.com/olegbl))
+- Fix for InterpolatorType crash ([01a1004808](https://github.com/facebook/react-native/commit/01a1004808928e29a6d6c698b3b18312fed17a02) by [@ejanzer](https://github.com/ejanzer))
+- Update bad method ([1592a8d424](https://github.com/facebook/react-native/commit/1592a8d42411d1f91c8ceb738c0533c1cee73f71) by [@grabbou](https://github.com/grabbou))
+
+#### iOS specific fixes
+
+- Dealloc first time RCTNetInfo reachability callback ([e7e63fd409](https://github.com/facebook/react-native/commit/e7e63fd4092a81beec482fc48d05f1a048801037) by [@mmmulani](https://github.com/mmmulani))
+- iOS: fix the baseline issue when displaying a mixture of different-language characters ([c1561ab441](https://github.com/facebook/react-native/commit/c1561ab4411854bef96b5d268d38002a013d6d3e) by [@BingBingL](https://github.com/BingBingL))
+- Fix artifacting on RN-drawn borders with asymmetric radii ([9e6522374b](https://github.com/facebook/react-native/commit/9e6522374bc605bb1a92ff02842878ace35e9f3d) by [@jamesreggio](https://github.com/jamesreggio))
+- check isAvailable key on simulator object ([1031872784](https://github.com/facebook/react-native/commit/1031872784e9373082797e5bf5c815816af2105b) by [@antonychan](https://github.com/antonychan))
+- ios-simulator: change default iphone version ([6d09df5b72](https://github.com/facebook/react-native/commit/6d09df5b726ac951417b87a49bc345ebc9142951) by Vitor Capretz)
+
+### Known issues
+
+There are a few issues that don't have a finalized solution. In particular, when using Xcode 10 and `react-native init`, your build may fail due to third-party build steps ([#20774](https://github.com/facebook/react-native/issues/20774)). There is an open pull request which we are testing and hope to land soon ([#21458](https://github.com/facebook/react-native/pull/21458)). In the meantime, you can find a workaround here: [https://github.com/facebook/react-native/issues/20774](https://github.com/facebook/react-native/issues/20774).
+
+## v0.57.2
+
+Thanks to everyone that contributed to the [discussion](https://github.com/react-native-community/react-native-releases/issues/45) for cherry-picking the commits that landed in this release, and the developers who submitted those commits!
+
+### Added: new features
+
+#### Android specific additions
+
+- Android subpixel text ([65e4e674fc](https://github.com/facebook/react-native/commit/65e4e674fca7127fd7800ae011cab449561f475b) by [@kevinresol](https://github.com/kevinresol))
+
+### Changes: existing functionality that is now different
+
+- ReactScrollView should account for `overflow: scroll` ([201f2f189f](https://github.com/facebook/react-native/commit/201f2f189f2c41092397e5457eda83b0764ee4cd) by [@mcolotto](https://github.com/mcolotto))
+- bump metro 0.47.0 ([4750f52b34](https://github.com/facebook/react-native/commit/4750f52b34f524cae8ca08fcacec063c0725e4de) by [@rafeca](https://github.com/rafeca))
+- Use babel runtime instead of relying on global babelHelpers and regenerator ([36033bd0ed](https://github.com/facebook/react-native/commit/36033bd0edecd20fe2ae5edd56408bcc134378e7) by [@janicduplessis](https://github.com/janicduplessis))
+- React: Upgrade to react-devtools@^3.4.0 ([25119f95c8](https://github.com/facebook/react-native/commit/25119f95c81039761dd505c216c1e499003c6294) by [@yungsters](https://github.com/yungsters))
+- Change new Date() to Date.now() to save on date allocations ([bbb2d9a5b3](https://github.com/facebook/react-native/commit/bbb2d9a5b358bc0c150fe6ff74c45594c987e949) by [@dulinriley](https://github.com/dulinriley))
+- Make config object read-only ([2c1057062e](https://github.com/facebook/react-native/commit/2c1057062e81f8b43d3f942a35371fb3db841bed) by [@rafeca](https://github.com/rafeca))
+- Cleanup the transformer flow types ([28dedfb6d6](https://github.com/facebook/react-native/commit/28dedfb6d61e64a50d78aa06ee4f744665a54c2a) by [@rafeca](https://github.com/rafeca))
+- bump metro 0.47.1 ([12ab08a5aa](https://github.com/facebook/react-native/commit/12ab08a5aab3e14c9b2fb35454b16708b8ce093d) by [@rafeca](https://github.com/rafeca))
+
+#### Android specific changes
+
+- Android ScrollView support for `overflow: visible` ([4af4da9089](https://github.com/facebook/react-native/commit/4af4da9089e20aa84bc5660bfb37763556442a4e) by [@olegbl](https://github.com/olegbl))
+- Expose a getter for overflow setting in ReactViewGroup ([02ad56f541](https://github.com/facebook/react-native/commit/02ad56f5419675572d684c3cc8a28644f29afffa) by [@kmagiera](https://github.com/kmagiera))
+- Add workaround for Android Gradle Plugin 3.2 change to asset dir ([ff084a4e80](https://github.com/facebook/react-native/commit/ff084a4e8071adb4ff6198b32aa8a7e8e29cca1c) by [@edilaic](https://github.com/edilaic))
+
+### Fixed: bugs that have been resolved
+
+- Fix HEAD request failing with `Invalid response for blob` ([7e9c3f77cc](https://github.com/facebook/react-native/commit/7e9c3f77cce881dbb47af266993da5a2b6e98b5b) by [@anthonyhumphreys](https://github.com/anthonyhumphreys))
+- Check if child view != null before dropping ([af181fb192](https://github.com/facebook/react-native/commit/af181fb192c83e1dd0575c24e38d8814bbf187d6) by [@chrusart](https://github.com/chrusart))
+
+#### Android specific fixes
+
+- Fix event handlers for DPad arrows on Android TV ([4d71b1525d](https://github.com/facebook/react-native/commit/4d71b1525d357a61a1740d6de5c1b97b6527f986) by [@krzysztofciombor](https://github.com/krzysztofciombor))
+- Rounded corner rendering fixed on Android N ([748cf82c97](https://github.com/facebook/react-native/commit/748cf82c974d6cf5d5df64b6e6013211c870530c) by [@dryganets](https://github.com/dryganets))
+- Android: fix cookies lost on Android 5.0 and above ([ea53727e16](https://github.com/facebook/react-native/commit/ea53727e16223d412fcbba49df79cc68b39f5d93) by chenwenyu)
+- allow zero offset when shadow radius is nonzero ([97f0e43710](https://github.com/facebook/react-native/commit/97f0e43710a990c30e14d66bf67c7d612377d3f2) by Timothy Kukulski)
+- Android ScrollView fix for pagingEnabled ([e0170a9445](https://github.com/facebook/react-native/commit/e0170a944501bb487e899b92363bf5aa64b29299) by [@olegbl](https://github.com/olegbl))
+
+### Removed: features that have been removed; these are breaking
+
+- Remove global babelHelpers and regenerator ([458d56c0a1](https://github.com/facebook/react-native/commit/458d56c0a1ac73c088660830a8bf2db65de7d9a2) by [@janicduplessis](https://github.com/janicduplessis))
+- Remove overflow hidden killswitch ([59aada873e](https://github.com/facebook/react-native/commit/59aada873e13bf0b1f5e3a10cfe9a5a45c28f9fb) by [@ayc1](https://github.com/ayc1))
+- Remove absolute path parameter from transformers ([2e0d5c87e9](https://github.com/facebook/react-native/commit/2e0d5c87e93bb970ef1c8864ca44b47b36d6ae2e) by [@rafeca](https://github.com/rafeca))
+
+## v0.57.1
+
+We are trying, for 0.57, to approach it as a version with a longer "support", while waiting for some features to land that will allow for [0.58 to be cut](https://github.com/react-native-community/react-native-releases/issues/41).
+
+Thanks to everyone that contributed to the [discussion](https://github.com/react-native-community/react-native-releases/issues/34) for cherry-picking the commits that landed in this release, and the developers who submitted those commits!
+
+### Added: new features
+
+- Expose AllowFileAccess property in WebView ([0c576ef84a](https://github.com/facebook/react-native/commit/0c576ef84a1c7f79b228f205cc687ab1b945bda1) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific additions
+
+- Expose scrollEnabled as iOS prop for TextInput ([b9c28c236b](https://github.com/facebook/react-native/commit/b9c28c236bc971a5fbc51a3bda09c3980d547b96) by Chun Chen)
+
+### Changes: existing functionality that is now different
+
+- Give RNPM the ability to look for plugins in `@Scoped` modules ([4b106be477](https://github.com/facebook/react-native/commit/4b106be47765dd391f7a4cc6cf0e705ae977b90a) by [empyrical](https://github.com/empyrical))
+- Upgrade babel-eslint to 9.0.0 ([44dc283bcd](https://github.com/facebook/react-native/commit/44dc283bcd0a75826d9be86cdc727e32d5697ef2) by [@rafeca](https://github.com/rafeca))
+- bump metro 0.45.6 ([7bac0565e8](https://github.com/facebook/react-native/commit/7bac0565e82981d4a6e2b500d376ba9fa8aba721) by [@rafeca](https://github.com/rafeca))
+
+#### iOS specific changes
+
+- Making RCTIsIPhoneX() return true for the R and Max models ([5e7c3ca005](https://github.com/facebook/react-native/commit/5e7c3ca0057f6084d692e30ae4db863fb20968ff) by [@shergin](https://github.com/shergin))
+- Way to register RCT_MODULE in Plugin2.0 instead of +load ([5c160e5ded](https://github.com/facebook/react-native/commit/5c160e5dedae713c686d88d4b9d4308b596e68a7) by Jeff Thomas)
+- Update RCTLinkingManager.h to explicitly state the 'nullability' of parameters ([2271d1f912](https://github.com/facebook/react-native/commit/2271d1f912435eba7da2414ea4665ba8e56c7ad7) by Warren Knox)
+
+### Fixed: bugs that have been resolved
+
+- Pass the maxWorkers config param correctly to Metro ([7a69f1aa27](https://github.com/facebook/react-native/commit/7a69f1aa272a9b71755033a80f6f4aa5e9dcbaf6) by [@rafeca](https://github.com/rafeca))
+- Fix ignored --projectRoot/watchFolders arguments (([9fca769e76](https://github.com/facebook/react-native/commit/9fca769e7666df696299b422c140d6509e726ec6) by [@oblador](https://github.com/oblador))
+- Debug only code were leaking into release builds on iOS. (([d1ff0b0cc5](https://github.com/facebook/react-native/commit/d1ff0b0cc51c31cae89689b2ad2f4b35f29531d8) by [@dryganets](https://github.com/dryganets))
+
+#### iOS specific fixes
+
+- Fix RCTNetInfo first time connection status ([e7e63fd409](https://github.com/facebook/react-native/commit/e7e63fd4092a81beec482fc48d05f1a048801037) by [@karanjthakkar](https://github.com/karanjthakkar))
+
+### Removed: features that have been removed; these are breaking
+
+#### iOS specific removals
+
+- Removing development team from Xcode project ([8103c431c8](https://github.com/facebook/react-native/commit/8103c431c897c02d47cfad1e71bb2e6ddaabbdc0) by [@hramos](https://github.com/hramos))
+
+## v0.57.0
+
+Welcome to the 0.57 release of React Native! This release addresses a number of issues and has some exciting improvements. We again skipped a monthly release, focused on quality by extending the release candidate phase, and let some upstream packages reach stable for inclusion.
+
+This release includes [599 commits by 73 different contributors](https://github.com/facebook/react-native/compare/0.56-stable...0.57-stable)! In response to feedback, we've prepared a changelog that contains only user-impacting changes. Please share your input and let us know how we can make this even more useful, and as always [let us know](https://github.com/react-native-community/react-native-releases/issues/34) if you have any feedback on this process.
+
+### Highlights
+
+#### New features
+
+- Accessibility APIs now support accessibility hints, inverted colors, and easier usage of defining the element's role and states; read more at [@ziqichen6's excellent blog post](https://reactnative.dev/blog/2018/08/13/react-native-accessibility-updates)
+- On iOS, `WKWebView` can now be used within the `WebView` component; read more at [@rsnara's awesome blog post](https://reactnative.dev/blog/2018/08/27/wkwebview)
+- Better support for out-of-tree platforms. For details, please refer to [the discussion](https://github.com/react-native-community/discussions-and-proposals/issues/21) that the community used to get this up and running (there will be a new page in the docs dedicated to it too) - huge props to @empyrical for working on this!
+
+#### Tooling updates
+
+- Android tooling has been updated to match newer configuration requirements (SDK 27, gradle 4.4, and support library 27); building with Android plugin 3.2 doesn't work due to the gradle scripts, so **please** stay on Android Studio 3.1 for now
+- Support Babel 7 stable landed! Be sure to read [here](https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/) about using TypeScript and check out the [Babel 7 migration guide](https://babeljs.io/docs/en/next/v7-migration) for help migrating.
+- Metro has been upgraded (with Babel 7 and better transformer support), and in the next major release we plan on having two new features (ram bundles and inline requires) optional for you all to use - you can read how it will happen [here](https://github.com/react-native-community/discussions-and-proposals/blob/master/core-meetings/2018-09-metro-meeting.md); moreover, if you have a custom packager config, we recommend you read also the "updating to this version" section.
+- Flow, React, and related packages have also been updated; this includes [working support](https://github.com/facebook/react-native/commit/5491c3f942430982ce9cb6140ed1733879ed3d1d) for the [React Profiler](https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html).
+
+#### The Slimmening is happening
+
+As mentioned a few times in the past, the core team is reviewing the repository to trim it to the base React Native features in order to make the whole ecosystem more maintainable (by using a _divide-et-impera_ approach, the community will move faster and enable pull requests to be reviewed and merged quicker). This change requires extracting some components into their own separate repos and removing old, unused code ([details here](https://github.com/react-native-community/discussions-and-proposals/issues/6)).
+
+0.57 is **not** directly affected by any changes, but we want you to know that:
+
+- `WebView` will be moved to its own repo at [react-native-community/react-native-webview](https://github.com/react-native-community/react-native-webview). There is already a base implementation there. Help us out by giving that a try, and expect that `WebView` will be deprecated soon
+- `NavigatorIOS` will be **fully** removed from the main codebase starting 0.58.0 (via [this commit](https://github.com/facebook/react-native/commit/0df92afc1caf96100013935d50bdde359b688658)); it is now deprecated
+
+### Updating to this version
+
+1. Upgrade the version of React Native in the `package.json` from `0.56.0` to `0.57.0`, and the React version to `16.5`
+2. Change the babel-preset dependency from `"babel-preset-react-native": "^5",` to `"metro-react-native-babel-preset": "^0.45.0",`, then change the `.babelrc` configuration to:
+
+   ```JSON
+     {
+       "presets": ["module:metro-react-native-babel-preset"]
+     }
+   ```
+
+3. Ensure that you have all the babel dependencies to version `^7.0.0` (you may also need to add `"babel-core": "7.0.0-bridge.0"` as a yarn resolution to ensure retro-compatibility). The Babel team has released a tool, [babel-upgrade](https://github.com/babel/babel-upgrade), that should help you in this migration.
+4. Upgrading android gradle version to 4.4
+   1. In your project's `android/gradle/wrapper/gradle-wrapper.properties` file, change the `distributionUrl` to `https\://services.gradle.org/distributions/gradle-4.4-all.zip`
+   2. In `android/build.gradle` file add `google()` right above `jcenter()` in both `buildscript` and `allprojects` repositories. Then change Android build tools to version 3.1.4 `classpath 'com.android.tools.build:gradle:3.1.4'`
+   3. In `android/app/build.gradle` file update all your `compile` statements to be `implementation`, e.g. `implementation 'com.facebook.fresco:animated-gif:1.10.0'`
+   4. Do note that when running your app from within Android Studio, you may encounter `Missing Byte Code` errors. This is due to [a known issue](https://issuetracker.google.com/issues/72811718) with version 3.1.x of the android tools plugin. You'll need to disable Instant Run to get past this error.
+5. If you have a custom packager configuration via `rn-cli.config.js`, you probably need to update it to work with the updated Metro configuration structure (for full detail refer to Metro's [documentation](https://facebook.github.io/metro/docs/en/configuration)); here are some commonly encountered changes to `rn-cli.config.js`:
+
+   ```diff
+   -const blacklist = require('metro/src/blacklist')
+   +const blacklist = require('metro-config/src/defaults/blacklist')
+
+   // ...
+
+   module.exports = {
+   +  watchFolders: alternateRoots,
+   +  resolver: {
+   +    blacklistRE: blacklist
+   +  },
+   +  transformer: {
+   +    babelTransformerPath: require.resolve('./scripts/transformer.js'),
+   +  },
+   -  getProjectRoots() {
+   -    return [
+   -      path.resolve(__dirname),
+   -    ].concat(alternateRoots)
+   -  },
+   -  getBlacklistRE() {
+   -    return blacklist;
+   -  },
+   -  transformModulePath: require.resolve('./scripts/transformer.js'),
+   }
+   ```
+
+6. Run `yarn` to ensure that all the new dependencies have been installed
+
+### Added: new features
+
+- Add .nvmrc and ensure node version required is compatible with ESLint 5 ([30b9d81087](https://github.com/facebook/react-native/commit/30b9d81087cb86f5fb272d00bfee63a0632009f5) by [@slorber](https://github.com/slorber))
+- Major improvements to accessibility features ([48b3d1322b](https://github.com/facebook/react-native/commit/48b3d1322b884f62eb5aeb36136bcd76c502e42d), [b5b704dc19](https://github.com/facebook/react-native/commit/b5b704dc19b80a1909d66adcd617220a98c7aace), [c36e8b3307](https://github.com/facebook/react-native/commit/c36e8b3307295690cddf74e3a41ca0ac11ac4c6b), [40f6998b67](https://github.com/facebook/react-native/commit/40f6998b6766e8aa3c038a1416e5c62cbafca109), [c1d0ccde0f](https://github.com/facebook/react-native/commit/c1d0ccde0f6f8615fce077ef7ee0867a14ca0fb7), [5eaa2d29c0](https://github.com/facebook/react-native/commit/5eaa2d29c0c4c633a40f7241408737c754edea84), [10b603fdd3](https://github.com/facebook/react-native/commit/10b603fdd34919f72304720c25d1420668a6213a), [d9eeae91a0](https://github.com/facebook/react-native/commit/d9eeae91a08123c3a458704869acd6f637fc4c53), [3cfa7ae698](https://github.com/facebook/react-native/commit/3cfa7ae69847cc3b687930346016b248f2427864), [5acb7211bb](https://github.com/facebook/react-native/commit/5acb7211bb211e0ef48334630ddccbb3f0ffa2da), [5741f77156](https://github.com/facebook/react-native/commit/5741f771562962110e105114a2c65def4baa805b), [d0b86ecb4f](https://github.com/facebook/react-native/commit/d0b86ecb4f33d6b10a99062f050a4d659db4ddfc), [e739143809](https://github.com/facebook/react-native/commit/e7391438093cd5dd5033204cdce62e66509e66e1), [c27b495a89](https://github.com/facebook/react-native/commit/c27b495a89e71ff13959eb4c34605a527514fa1e), [5aa040dfb7](https://github.com/facebook/react-native/commit/5aa040dfb780c09a6efa5d3072232dea775d432f), [03036f79f7](https://github.com/facebook/react-native/commit/03036f79f7b062ae11015b33cca3dd7e4e67dda6), [3bedc78a35](https://github.com/facebook/react-native/commit/3bedc78a35b9efc259299744f4134ac0e880d1ea), [ca01290d8e](https://github.com/facebook/react-native/commit/ca01290d8e8fe73494f317ed9f81d339e65fdea0), [121e2e5ca6](https://github.com/facebook/react-native/commit/121e2e5ca6cdb17051c6d8072072f7f480ac2015), [1bc52267f5](https://github.com/facebook/react-native/commit/1bc52267f504eb02c8744c380fa2de878b0ab79f), [48b3d1322b](https://github.com/facebook/react-native/commit/48b3d1322b884f62eb5aeb36136bcd76c502e42d), [ef3d8b23c3](https://github.com/facebook/react-native/commit/ef3d8b23c35246d4e088d532c41723e06b688f1b), [ef3d8b23c3](https://github.com/facebook/react-native/commit/ef3d8b23c35246d4e088d532c41723e06b688f1b), [50e400128e](https://github.com/facebook/react-native/commit/50e400128eba554af5de4ca267430524e3eff107), and [f39d0923c7](https://github.com/facebook/react-native/commit/f39d0923c78686118a5d268c0e659d2608d28df0) by [@ziqichen6](https://github.com/ziqichen6))
+- Add `YogaNodeProperties` implementation based on `ByteBuffer` ([0c97e75dfe](https://github.com/facebook/react-native/commit/0c97e75dfeec831abb6cb39889309d8299cdce9f) and [23657ccf5b](https://github.com/facebook/react-native/commit/23657ccf5bcab6c511903660b3c617c3b8248f20) by [@davidaurelio](https://github.com/davidaurelio))
+- Add `FlatList` and `SectionList` to Animated exports ([daa7c78055](https://github.com/facebook/react-native/commit/daa7c78055857cd2d9ea650de0c4b0f72d3f2acf) by [@yunyu](https://github.com/yunyu))
+- Adding new styling props to `FlatList`/`VirtualizedList` for `ListHeaderComponent` and `ListFooterComponent` ([a2675ced4e](https://github.com/facebook/react-native/commit/a2675ced4efe0df7745bf38908efa41d4d7a9841))
+- Added more info to Module Registry systraces ([c7fdd2701f](https://github.com/facebook/react-native/commit/c7fdd2701f7edc1a771a04c890da4d742dca6ffb) by [@axe-fb](https://github.com/axe-fb))
+- Added support for out-of-tree platform plugins via a new `haste` field in `package.json`; read more in the [docs entry](https://reactnative.dev/docs/out-of-tree-platforms) ([03476a225e](https://github.com/facebook/react-native/commit/03476a225e012a0285650780430d64fc79674f0f) by [@empyrical](https://github.com/empyrical))
+- Added `snapToOffsets` to `ScrollView` and made a number of fixes to `snapToInterval` as well ([fd744dd56c](https://github.com/facebook/react-native/commit/fd744dd56ca183933a67e8398e1d20da14a31aab) by [@olegbl](https://github.com/olegbl))
+
+#### Android specific additions
+
+- Allow registering custom packager command handlers ([b3ef1c3a56](https://github.com/facebook/react-native/commit/b3ef1c3a5645793ef42d25bb16ef023a743a1f9f) by [@fkgozali](https://github.com/fkgozali))
+- Implement `AccessibilityInfo.setAccessibilityFocus` for Android ([be715ec705](https://github.com/facebook/react-native/commit/be715ec7053a77fa6c9087990a493d17c1155de2) by [@draperunner](https://github.com/draperunner))
+- Add Support for `overflow` style property ([b81c8b51fc](https://github.com/facebook/react-native/commit/b81c8b51fc6fe3c2dece72e3fe500e175613c5d4) and [bbdc12eda7](https://github.com/facebook/react-native/commit/bbdc12eda7dec135799b7f4c41fe678180970dd2)by [@yungsters](https://github.com/yungsters))
+
+#### iOS specific additions
+
+- `WebView` can now use `WKWebView` internally if you pass `useWebKit={true}` ([7062e5bdb5](https://github.com/facebook/react-native/commit/7062e5bdb5582bb21d1ef890965f08cc20d292b7), [1442c265da](https://github.com/facebook/react-native/commit/1442c265da36601114ce184cd5bc322f45dc1b44), [3703927e7e](https://github.com/facebook/react-native/commit/3703927e7e12ffc8922644ea251cd6f7a384570c), [7a6dd9807c](https://github.com/facebook/react-native/commit/7a6dd9807cda45c2d60641864f2d6c8d401e8ae3), [e5f95aba9b](https://github.com/facebook/react-native/commit/e5f95aba9b23376de498456282ad17113ef44cd9), [1741fe9571](https://github.com/facebook/react-native/commit/1741fe95710556f30dc2442aaaae23e31dad4cc0), [90e85a4adc](https://github.com/facebook/react-native/commit/90e85a4adc749666f81034119f281ac54840e7df), [0022354525](https://github.com/facebook/react-native/commit/0022354525eae0a368704da65c9d0f85f33ba5fb), [03b57d9db6](https://github.com/facebook/react-native/commit/03b57d9db6509fa3e715f23c8270caf6ca091acd), [1584108805](https://github.com/facebook/react-native/commit/1584108805ca6c8eff7a77e15c8553028665b53f), [a997c0ac16](https://github.com/facebook/react-native/commit/a997c0ac16d8863333d057269a8b5e28994b84eb), [4ca949b46e](https://github.com/facebook/react-native/commit/4ca949b46ec8fd72b5305daa06fac3ef58a8fa5f), [721763020a](https://github.com/facebook/react-native/commit/721763020a4a7b4b3cad1a9c074ec2e51a8d840b), [1af17f1648](https://github.com/facebook/react-native/commit/1af17f164828b6d6fa0450af46baf945745363e7), [215fa14efc](https://github.com/facebook/react-native/commit/215fa14efc2a817c7e038075163491c8d21526fd), [bacfd92976](https://github.com/facebook/react-native/commit/bacfd9297657569006bab2b1f024ad1f289b1b27), [95801f1eda](https://github.com/facebook/react-native/commit/95801f1eda2d723d9b87760d88fa9f1a1bb33ab1), [b18fddadfe](https://github.com/facebook/react-native/commit/b18fddadfeae5512690a0a059a4fa80c864f43a3), [28b058c341](https://github.com/facebook/react-native/commit/28b058c341690bd35e1d59885762ec29614a3d45), and [78fcf7c559](https://github.com/facebook/react-native/commit/78fcf7c5598ce7f5d0d62110eb34fe5a4b962e71) by [@rsnara](https://github.com/rsnara))
+- Add `accessibilityHint` for iOS ([253b29dbd8](https://github.com/facebook/react-native/commit/253b29dbd8ddb11824866e423c00a4a68bb856f3) by [@draperunner](https://github.com/draperunner))
+
+### Changes: existing functionality that is now different
+
+- _[BREAKING]_ In the CLI, `unbundle` is now `ram-bundle` ([ebf5aeab28](https://github.com/facebook/react-native/commit/ebf5aeab280f2ebc439ec39d25c48fdf1980cf73) by [@jeanlauliac](https://github.com/jeanlauliac))
+- Bump minimum Node version to 8.3 (#20236) ([e64e13fce3](https://github.com/facebook/react-native/commit/e64e13fce394332ce609f0def35fa573f30138e9) by [@hramos](https://github.com/hramos))
+- Updated React ([70913a4623](https://github.com/facebook/react-native/commit/70913a4623c53db8a0db578eec30cad8671f8319), [b7bb25fe4c](https://github.com/facebook/react-native/commit/b7bb25fe4c1bfbedb5b8c75725721cf901dc54b0), and [672528ffde](https://github.com/facebook/react-native/commit/672528ffde3b467ccdfd6b1ce0352f150b20c922) by [@acdlite](https://github.com/acdlite), [@hramos](https://github.com/hramos), and [@yungsters](https://github.com/yungsters))
+- Upgrade Flow to v0.76.0 ([eac34e3021](https://github.com/facebook/react-native/commit/eac34e30215d88b5fe9056f9678275b894032636) by [@gabelevi](https://github.com/gabelevi))
+- Upgrade jest to 23.4.1 ([51cf9eb3e8](https://github.com/facebook/react-native/commit/51cf9eb3e823a13304570b352b81734f069c18c3) by [@rafeca](https://github.com/rafeca))
+- Upgrade babel-eslint to v9.0.0-beta.2 with better support for Flow ([abf1188de2](https://github.com/facebook/react-native/commit/abf1188de225e4b7d36ecbad316af92ca29c85c2) by [@rubennorte](https://github.com/rubennorte))
+- Upgrade ESLint to 5.1.0 ([0f2f0cad41](https://github.com/facebook/react-native/commit/0f2f0cad41f632d1dbb0c676d5edea5db62eb01c) by [@rubennorte](https://github.com/rubennorte))
+- Upgrade Babel to v7.0.0 ([b9d1c832b0](https://github.com/facebook/react-native/commit/b9d1c832b0bb7161bcec48d655e878af609b8350), [724c7498b6](https://github.com/facebook/react-native/commit/724c7498b6f10f6fd03eb217160508001fb1c5b3) by Peter van der Zee, and [bf8e1b4ffa](https://github.com/facebook/react-native/commit/bf8e1b4ffab4958587efdf3ce97e4ebdd887a20c) by [@rubennorte](https://github.com/rubennorte) and [@rafeca](https://github.com/rafeca))
+- Metro is now at v0.45.0 ([169d6839bb](https://github.com/facebook/react-native/commit/169d6839bb32d0149036ab1641d13318c0eb6f9d), [bda84a32d0](https://github.com/facebook/react-native/commit/bda84a32d08d6de3849d6afac4cbbf309837b676), [877212e18c](https://github.com/facebook/react-native/commit/877212e18c86905feda9faa1b2508c0c39396227), [169812f9ce](https://github.com/facebook/react-native/commit/169812f9ce60317dd7320384007879be16278678), [cfeb60c19b](https://github.com/facebook/react-native/commit/cfeb60c19bd23e683f1809f6535439c81e8ed166) by [@CompuIves](https://github.com/CompuIves) and [@rafeca](https://github.com/rafeca))
+- Hide pre-bundled notification when not on dev mode ([edf71005b5](https://github.com/facebook/react-native/commit/edf71005b5a4d7cfb09eae14f5765d30b9c5704e) by [@yancouto](https://github.com/yancouto))
+- Refined `StyleSheet.compose` Flow Type ([50a481d23a](https://github.com/facebook/react-native/commit/50a481d23ae72a434849d2c85007e411b0c2bb1f) by [@yungsters](https://github.com/yungsters))
+- Catch JS bundle load failure and prevent calls to JS after that ([201ba8c69d](https://github.com/facebook/react-native/commit/201ba8c69d2defc284a04acadcd13df001028ada) by [@fkgozali](https://github.com/fkgozali))
+- Use new Metro configuration in react-native cli ([a32620dc3b](https://github.com/facebook/react-native/commit/a32620dc3b7a0ebd53feeaf7794051705d80f49e) and [aaf797ad67](https://github.com/facebook/react-native/commit/aaf797ad67b965f64450b199c554c65ad8dad351) by [@CompuIves](https://github.com/CompuIves))
+- Whitelist `react-native-dom` in haste/cli config defaults ([c4bcca6685](https://github.com/facebook/react-native/commit/c4bcca66853cd231486de61f11cbcec42427b7b2) by [@vincentriemer](https://github.com/vincentriemer))
+- In the CLI, don't override `metro.config.js` settings ([c5297c75cb](https://github.com/facebook/react-native/commit/c5297c75cb6da58a241c8f91b0d2fefbc5835a46) by [@rozele](https://github.com/rozele))
+
+#### Breaking Changes
+
+- Public methods of Image (`blur`, `focus`, `measure`, `measureInWindow`, `measureLayout`, `setNativeProps`) are no longer bound to the image component instance. Therefore, it is unsafe to pass these methods by reference (i.e: as callbacks) to functions. So, things like `setTimeout(this._imgRef.focus, 1000)` will no longer work. Please instead do: `setTimout(() => this._imgRef.focus(), 1000)`.
+
+#### Android specific changes
+
+- `Image` source without a uri now returns null ([28c7ccf785](https://github.com/facebook/react-native/commit/28c7ccf785132458fce32c234ce777a6fe475c93) by [@himabindugadupudi](https://github.com/himabindugadupudi))
+- `targetSdkVersion` is 26 ([bfb68c09ee](https://github.com/facebook/react-native/commit/bfb68c09ee88c6e1d91d3b54c01746f9a98c7c6c) by [@dulmandakh](https://github.com/dulmandakh))
+- Upgrade NDK to r17b ([6117a6c720](https://github.com/facebook/react-native/commit/6117a6c7205c969f93d39ba02e0583881572d5fa) by [@dulmandakh](https://github.com/dulmandakh))
+- Upgrade NDK toolchain to 4.9 ([ccdd450b12](https://github.com/facebook/react-native/commit/ccdd450b1284b73bee80a9709c864816cbfc1108) by [@dulmandakh](https://github.com/dulmandakh))
+- Upgrade Android Support Library to version 27.1.1 and set compileSdkVersion to 27; buildToolsVersion comes along for the ride, too ([874cca1ac2](https://github.com/facebook/react-native/commit/874cca1ac258ec224bade999722d7a34c307def0) and [044b399e65](https://github.com/facebook/react-native/commit/044b399e6590d84065a9b186750f77bc9d851aac) by [@dulmandakh](https://github.com/dulmandakh))
+- Upgrade Android gradle plugin to 3.1.4, Gradle wrapper to 4.4 ([6e356895e7](https://github.com/facebook/react-native/commit/6e356895e79fb92640295a14483af1a430732247) and [33d20da41b](https://github.com/facebook/react-native/commit/33d20da41b814a2fb9ba02cbab8b61a819cad95b) by [@gengjiawen](https://github.com/gengjiawen) and [@dulmandakh](https://github.com/dulmandakh))
+- Upgrade to soloader 0.5.1 ([b6f2aad9c0](https://github.com/facebook/react-native/commit/b6f2aad9c0119d11e52978ff3fa9c6f269f04a14) by [@gengjiawen](https://github.com/gengjiawen))
+- Upgrade mockito to 2.19.1 ([3ea803a814](https://github.com/facebook/react-native/commit/3ea803a814f43edb3ec256dd85d778c652ca99d1) by [@dulmandakh](https://github.com/dulmandakh))
+- Upgrade glog to 0.3.5 ([b5fca80605](https://github.com/facebook/react-native/commit/b5fca806059e628edb504cb1bacf62e89ee6f102) by [@dulmandakh](https://github.com/dulmandakh))
+
+### Fixed: bugs that have been resolved
+
+- Fixed builds on Windows machines ([3ac86c366c](https://github.com/facebook/react-native/commit/3ac86c366c91f8d62f0128057019b94a783b4249) by [@rafeca](https://github.com/rafeca))
+- Fixed building tvOS ([1f1ddd0261](https://github.com/facebook/react-native/commit/1f1ddd0261762bdeff3e747250400b208b18839b))
+- Fixed `TextInputState`'s `currentlyFocusedField()` ([b4b594cec1](https://github.com/facebook/react-native/commit/b4b594cec1d91c38faac11a90a787ae692e35296) by [@janicduplessis](https://github.com/janicduplessis))
+- `<VirtualizedList>` fix for jumpy content when `initialScrollIndex` specified ([e0c73633cf](https://github.com/facebook/react-native/commit/e0c73633cfc0a62df9d39991b0df65fa5875609a) by [@rbrosboel](https://github.com/rbrosboel))
+- Fix local-cli assetRegistryPath and middlewares ([f05943de0a](https://github.com/facebook/react-native/commit/f05943de0abfc16da41163c6b91a04ecc8de8e67) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix issue with when all are `flexGrow` and `flexShrink` set to 0 except for one ([90a408ea6f](https://github.com/facebook/react-native/commit/90a408ea6ff7833e33b4058f490073e04460d00b) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- Fix react-native CLI's debugger UI path and metro host/port arg usage ([5067540487](https://github.com/facebook/react-native/commit/50675404873c1ffac0deedc51fe745168051148b) by [@Kureev](https://github.com/Kureev))
+- Hotfix to include `react-native-windows` in hasteImpl accepted paths ([54942746d4](https://github.com/facebook/react-native/commit/54942746d4037e1153e14fcfc95e4edc772d296a) by [@rubennorte](https://github.com/rubennorte))
+- Fix some classes of incorrect Flow errors for `Animated` ([db2159d0b3](https://github.com/facebook/react-native/commit/db2159d0b3fd57556383eff68d32d32246dd9081) by [@yunyu](https://github.com/yunyu))
+- Fixed a typo in DockerTests.md ([c1831d50cf](https://github.com/facebook/react-native/commit/c1831d50cfd35b7a7393e50bc71d8389b36021ce) by [@kant](https://github.com/kant))
+- Fix invalid use of destructuring in jest preprocessor ([9d5bd50737](https://github.com/facebook/react-native/commit/9d5bd507372c7b63e59a94383c3e3091d96409de) by [@umairda](https://github.com/umairda))
+- Fixed a CLI crash when using old versions of node ([e61176d650](https://github.com/facebook/react-native/commit/e61176d650e2b5fe51dd6cd4c429ff47a1a9b1dc) by [@keksipurkki](https://github.com/keksipurkki))
+
+#### Android specific fixes
+
+- Fix issue with AsyncStorage not behaving properly on Android 7+ ([1b09bd7fba](https://github.com/facebook/react-native/commit/1b09bd7fba92431d63d2cecb83565491e91db396))
+- Fixed extreme `<TextInput>` slowness ([5017b86b52](https://github.com/facebook/react-native/commit/5017b86b525e3ef6023f0f8a88e6fd1cf98024e0) by [@gnprice](https://github.com/gnprice))
+- Fixed `<TextInput>` placeholder not being completely visible ([84022321c4](https://github.com/facebook/react-native/commit/84022321c437e597660ecd8a773e51bdf8855f4e) and [86f24ccf71](https://github.com/facebook/react-native/commit/86f24ccf71f4c41904838c8c7e13268c300fd745) by [@jainkuniya](https://github.com/jainkuniya))
+- Fix Horizontal `<ScrollView>`'s scroll position during layout changes with RTL content ([de573277bf](https://github.com/facebook/react-native/commit/de573277bf64703aefdeb52db2c2524b2c241bab))
+- Fix Horizontal `<ScrollView>` overflow issue ([d5465a9a0a](https://github.com/facebook/react-native/commit/d5465a9a0a840f7e759bb8fb6679b01017eb3d05))
+- Fixing crash on SDK 15 on ReactTextInputLocalData ([1bb2bead8b](https://github.com/facebook/react-native/commit/1bb2bead8bef850037c8b72209cd72a442572821))
+- Fix Drawing Rect for ReactScrollView ([6a16bec882](https://github.com/facebook/react-native/commit/6a16bec882cba809bdf9027367b76f6543b6617d) by [@yungsters](https://github.com/yungsters))
+- Fixed NoSuchKeyException Thrown From ReadableNativeMap bysafely unwrapping ReadableMap by defaulting to 0 if key not present ([1a6666a116](https://github.com/facebook/react-native/commit/1a6666a116fd8b9e8637956de2b41a1c315dd470) by [@Bhavik-P](https://github.com/Bhavik-P))
+- Fixed runAndroid to enable the use of a package on port <> 8081 for Windows ([3cd0737fe2](https://github.com/facebook/react-native/commit/3cd0737fe2dce9df29822854bfbfaf2f22346c69) by [@ihenshaw](https://github.com/ihenshaw))
+- Don't crash on upload retry when trying to fetch on a varying quality network ([79fe925f1d](https://github.com/facebook/react-native/commit/79fe925f1daa053d5a5d92a228e5c7beff565ab4) by [@dryganets](https://github.com/dryganets))
+
+#### iOS specific fixes
+
+- Fix `TextInput.clear()` and `TextInput.setNativeProps({text: ''})` to work ([2307ea60d0](https://github.com/facebook/react-native/commit/2307ea60d03edd234511bfe32474c453f30c1693) by [@magicien](https://github.com/magicien))
+- Correct fishhook import in RCTReconnectingWebSocket ([75a0273de2](https://github.com/facebook/react-native/commit/75a0273de21948b0b959263100f09111f738ec35))
+- Change in RCTImagePickerManager to handle crashes if height/width is nil ([82af7c989b](https://github.com/facebook/react-native/commit/82af7c989be42a516f438f162d21f699be297e79) by [@abhi06276](https://github.com/abhi06276))
+- Fix controlled `<TextInput>` on iOS when inputting in Chinese/Japanese ([892212bad2](https://github.com/facebook/react-native/commit/892212bad2daadd373f4be241e4cd9889b0a1005) by [@mmmulani](https://github.com/mmmulani))
+- Fixed `<ScrollView>` bug encountered with brownfield apps ([fab5fffbb3](https://github.com/facebook/react-native/commit/fab5fffbb3eb8668c9202dec5e770330d49880b0) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- Fixed missing selection indicator lines on `<PickerIOS>` ([e592d6f8c7](https://github.com/facebook/react-native/commit/e592d6f8c7b0409ab6f0a2dbf6ebe3cea28c3e79) by [@VSchlattinger](https://github.com/VSchlattinger))
+- Fix crash in RCTImagePicker on iOS ([934c50fbe0](https://github.com/facebook/react-native/commit/934c50fbe07e49391ba27c3469f99bec65e48d39) by [@mmmulani](https://github.com/mmmulani))
+- Fix `undefined_arch` error received when building in Xcode 10 beta ([e131fffb37](https://github.com/facebook/react-native/commit/e131fffb37a545363daf11735a0243165b57f63f) by [@futuun](https://github.com/futuun))
+- Add support for connecting to the Packager when running the iOS app on device when using custom Debug configuration ([079bf3f206](https://github.com/facebook/react-native/commit/079bf3f2067cb268b60e75cd9e1bc51a9c85359c))
+- Fixed RCTAnimation import for integrating with cocoapods ([eef8d47a37](https://github.com/facebook/react-native/commit/eef8d47a37211bf7d4978db75df1fedd9cacbde8) by [@LukeDurrant](https://github.com/LukeDurrant))
+
+### Removed: features that have been removed; these are breaking
+
+- _[BREAKING]_ Removed `ScrollView.propTypes`; use flow or typescript for verifying correct prop usage instead ([5b6ff01764](https://github.com/facebook/react-native/commit/5b6ff01764502c88848867c7e04cab969da384a2) by [@sahrens](https://github.com/sahrens))
+
+#### Android specific removals
+
+- `ReactInstancePackage` is now deprecated; use `@link ReactPackage` or `@link LazyReactPackage` ([b938cd524a](https://github.com/facebook/react-native/commit/b938cd524a20c239a5d67e4a1150cd19e00e45ba) by [@axe-fb](https://github.com/axe-fb))
+
+## v0.56.0
+
+Welcome to the June 2018 release of React Native!
+Over 60 contributors made [821 commits](https://github.com/facebook/react-native/compare/0.55-stable...0.56-stable) since March - and we are extremely grateful to every single one of you.
+
+As you'll see in a second, this new version has some important **breaking changes** that required a lot of extra efforts to bring to a stable 0.56. This was the main reason behind skipping April and May from the monthly release cycle, but looking forward we are planning on going back to do a rollout every month.
+
+### Highlights
+
+#### React Native now uses **Babel 7**
+
+When upgrading to 0.56, make sure to bump your `babel-preset-react-native` `package.json` dependency to `5.0.2` or newer (but still as _fixed_ value).
+
+React Native library authors will need to update their libraries to make use of the updated Babel preset as Babel 7 is **not** backwards compatible.
+
+If you have issues upgrading to Babel 7, please double check the [related documentation](https://new.babeljs.io/docs/en/next/v7-migration.html#versioning-dependencies-blog-2017-12-27-nearing-the-70-releasehtml-peer-dependencies-integrations), in particular the sections related to _Package Renames_ and _Scoped Packages_.
+
+The [`babel-bridge`](https://github.com/babel/babel-bridge) library may be used if you need to use libraries that have not yet upgraded to Babel 7. You may also enforce the Babel 7 dependency via tools like [yarn resolutions](https://yarnpkg.com/lang/en/docs/selective-version-resolutions/). Overall, you need to ensure all the `@babel/*` deps are fixed at version `7.0.0-beta.47`.
+
+#### **Node 8** is now the minimum required version
+
+Trailing commas are now allowed.
+
+#### **iOS 9** is now the minimum required version
+
+Any device that can run iOS 8, can upgrade to iOS 9. Developers who support iOS 8 in their apps may continue doing so as this is a Xcode-level setting (`IPHONEOS_DEPLOYMENT_TARGET`).
+
+#### **Xcode 9** is now the minimum required version
+
+We recommend using Xcode 9.4 as that is what we use to run our tests.
+
+#### **Android** projects are now compiled using the _Android 26 SDK_
+
+The target API level is left unchanged in this release.
+
+Starting August 2018, new apps submitted to the Play Store will need to target API 26 as a minimum. You can now opt your project in to use API 26 (or newer) as the target. Please let us know about any issues, as we'd like to finalize support for Android API 26 by the time `0.57.0` is released.
+
+#### `WebView` will only load http(s) URLs by default
+
+Geolocation is disabled by default.
+
+#### Consistently Throw for `<Text><View /></Text>`
+
+Removes a pitfall that people may run into when releasing an app for Android if the bulk of the testing has been performed on iOS only. Nesting a `<View>` within a `<Text>` component (e.g. `<Text><View /></Text>`) is unsupported on Android, but using this pattern on iOS has not thrown errors in the past. With this release, nesting a `<View>` inside a `<Text>` will now throw an error on iOS in order to reduce the parity gap between the platforms.
+
+#### Flow improvements, migrating away from PropTypes
+
+Added Flow types for several components.
+
+We're migrating away from PropTypes and runtime checks and instead relying on **Flow**. You'll notice many improvements related to Flow in this release.
+
+- Fix project settings warnings on newer Xcode versions, remove unnecessary console logging.
+- Modernized `YellowBox`.
+  Sort warnings by recency, group warnings by format string, present stack traces, show status of loading source maps, support inspecting each occurrence of a warning, and bug fixes.
+- Prettier files!
+- Lots of bug fixes.
+
+#### State of React Native
+
+Heads-up: the Facebook internal team is [currently working on a rewrite of some core architecture pieces](https://reactnative.dev/blog/2018/06/14/state-of-react-native-2018). This is a **work in progress** and we do not expect it to be ready for use in open source quite yet, but we felt the need to let you know what those commits mentioning Fabric are about.
+
+---
+
+### Added: new features
+
+- Update `babelHelpers` with Babel 7 support ([fbd1beaf66](https://github.com/facebook/react-native/commit/fbd1beaf666be9c09a380784f8c0cd34ba083a6b))
+- `FlatList` is now Strict Mode compliant ([a90d0e3614](https://github.com/facebook/react-native/commit/a90d0e3614c467c33cf85bcbe65be71903d5aecc))
+- Enable `?.` optional chaining operator plugins ([aa6f394c42](https://github.com/facebook/react-native/commit/aa6f394c4236e5a4998c3be8ed61ec1bab950775))
+- Support `flexWrap: 'wrap-reverse'` ([d69e55060f](https://github.com/facebook/react-native/commit/d69e55060fd76d91eccc45905d250a9fce4b2c49))
+- Add prop type `accessibilityTraits` to `Text` ([654435d1ed](https://github.com/facebook/react-native/commit/654435d1ed9e584e65fff601e1fa50591e042664))
+- Add devDependencies support for templates ([c4ab03a18e](https://github.com/facebook/react-native/commit/c4ab03a18e75e6ed55444b5d86f3ceee435b9a78))
+- Add support for springDamping in `SpringInterpolator` ([1dde989919](https://github.com/facebook/react-native/commit/1dde989919d2c272ca7fcaa5c4b2d9ee02c490a0))
+
+#### Android specific additions
+
+- Add support for build.gradle with CRLF for use with `react-native link` ([843cfc3b20](https://github.com/facebook/react-native/commit/843cfc3b202433aad9a236b1b623da7c45e1ac15))
+- add decimal pad to android ([75e49a0637](https://github.com/facebook/react-native/commit/75e49a0637eaa3bd3bb7e445648f084a42d9c8af))
+- Add a way to dismiss PopupMenu elements ([353c070be9](https://github.com/facebook/react-native/commit/353c070be9e9a5528d2098db4df3f0dc02d758a9))
+- Implement `Image.defaultSource` ([b0fa3228a7](https://github.com/facebook/react-native/commit/b0fa3228a77d89d6736da6fcae5dd32f74f3052c))
+- Support Image resizeMode=repeat ([0459e4ffaa](https://github.com/facebook/react-native/commit/0459e4ffaadb161598ce1a5b14c08d49a9257c9c))
+- Yoga: Add back deprecated `getParent` methods for non-breaking API change ([c3c5c3cbce](https://github.com/facebook/react-native/commit/c3c5c3cbce24a31f73ae6339e377ee76ca6401ad))
+
+#### iOS specific additions
+
+- Run tests using Xcode 9.4 and iOS 11.4 ([c55bcd6ea7](https://github.com/facebook/react-native/commit/c55bcd6ea729cdf57fc14a5478b7c2e3f6b2a94d))
+- Add support for Homebrew-installed Node ([0964135a17](https://github.com/facebook/react-native/commit/0964135a178b459e06b44a49a4ecb0dd6c5bec9b))
+- Add textTransform style support ([8621d4b797](https://github.com/facebook/react-native/commit/8621d4b79731e13a0c6e397abd93c193c6219000))
+- Add docs for Swift usage to `RCTBridgeModule.h` ([ca898f4367](https://github.com/facebook/react-native/commit/ca898f4367083e0943603521a41c48dec403e6c9))
+
+---
+
+### Changes: existing functionality that is now different
+
+- Upgrade React Native to Babel 7 ([f8d6b97140](https://github.com/facebook/react-native/commit/f8d6b97140cffe8d18b2558f94570c8d1b410d5c))
+- New projects created using `react-native init` will use Babel 7 ([e315ec9891](https://github.com/facebook/react-native/commit/e315ec9891eb0bcb51afb0e797dbd49aa8f9ac71))
+- Restrict `WebView` to only http(s) URLs: ([634e7e11e3](https://github.com/facebook/react-native/commit/634e7e11e3ad39e0b13bf20cc7722c0cfd3c3e28), [23f8f7aecb](https://github.com/facebook/react-native/commit/23f8f7aecb1f21f4f5e44fb9e4a7456ea97935c9))
+- Node 8 is now the minimum required version ([c1e6f27823](https://github.com/facebook/react-native/commit/c1e6f278237e84c8ed26d3d2eb45035f250e2d40))
+- Upgrade React to v16.4.1, sync React Renderer to revision ae14317 ([c749d951ad](https://github.com/facebook/react-native/commit/c749d951ada829c6f6fb76f35e68142e61054433))
+- Update new project template's Flow config to fix `Cannot resolve module X` isse due to removal of `@providesModule` ([843a433e87](https://github.com/facebook/react-native/commit/843a433e87b0ccaa64ab70d07e22bffbabad8045))
+- Upgrade Flow to v0.75 ([3bed272a62](https://github.com/facebook/react-native/commit/3bed272a620ac806a6142327013265ea8138641a), [bc2f12c68c](https://github.com/facebook/react-native/commit/bc2f12c68cf8cfdf8c060354e84392fd9a3645d8), [6264b6932a](https://github.com/facebook/react-native/commit/6264b6932a08e1cefd83c4536ff7839d91938730))
+- Upgrade Flow definitions ([f8b4850425](https://github.com/facebook/react-native/commit/f8b4850425f115c8a23dead7ec0716b61663aed6))
+- Upgrade Prettier to v1.13.6 ([29fb2a8e90](https://github.com/facebook/react-native/commit/29fb2a8e90fa3811f9485d4b89d9dbcfffea93a6), [bc2f12c68c](https://github.com/facebook/react-native/commit/bc2f12c68cf8cfdf8c060354e84392fd9a3645d8))
+- Upgrade Jest to v23.2.0 ([536c937269](https://github.com/facebook/react-native/commit/536c9372692712b12317e657fc3e4263ecc70164), [bc2f12c68c](https://github.com/facebook/react-native/commit/bc2f12c68cf8cfdf8c060354e84392fd9a3645d8))
+- Upgrade Metro to v0.38 ([d081f83a04](https://github.com/facebook/react-native/commit/d081f83a0487ffbc7d19f8edc7532611b359dfc6))
+- Modernized `YellowBox` ([d0219a0301](https://github.com/facebook/react-native/commit/d0219a0301e59e8b0ef75dbd786318d4b4619f4c))
+- Disallow requiring from invariant/warning ([521fb6d041](https://github.com/facebook/react-native/commit/521fb6d041167ec8a8d0e98ac606db1f27f0c5c8))
+- Remove native prop type validation ([8dc3ba0444](https://github.com/facebook/react-native/commit/8dc3ba0444c94d9bbb66295b5af885bff9b9cd34))
+- Add `$FlowFixMe` to invalid prop accesses where Flow wasn't complaining before ([f19ee28e7d](https://github.com/facebook/react-native/commit/f19ee28e7d896aaacf26c6f850230019bdef0d3d))
+- Create Flow props for `Image` ([8bac869f5d](https://github.com/facebook/react-native/commit/8bac869f5d1f2ef42e707d0ec817afc6ac98b3b2))
+- Flow type for `SegmentedControlIOS` ([113f009698](https://github.com/facebook/react-native/commit/113f009698dbd8f1b4c1048d77ff1eb373021083))
+- Flow type for `ProgressViewIOS` ([c87701ba05](https://github.com/facebook/react-native/commit/c87701ba05a8524756e87c089eb92c8f3c81823e))
+- Flow type for `PickerIOS` ([1c66cdc7e8](https://github.com/facebook/react-native/commit/1c66cdc7e8ce8190dfbef76629601497446b2b0a))
+- Flow type for `Switch` ([06052a2330](https://github.com/facebook/react-native/commit/06052a2330fc9c1dd0d56c6bbe5a17703f80c6b9))
+- Flow type for `Slider` ([cbe045a95f](https://github.com/facebook/react-native/commit/cbe045a95f1ca53d99ae521742a93299a53d6136))
+- Flow type for `RefreshControl` ([891dfc3da4](https://github.com/facebook/react-native/commit/891dfc3da4b5825097aedf73ff04e8982c00aeff))
+- Flow type for `ListView` ([4b1ecb6204](https://github.com/facebook/react-native/commit/4b1ecb62045fbb78764d1f51030f2253be705c5c))
+- Flow type for `TextInput` ([c8bcda8150](https://github.com/facebook/react-native/commit/c8bcda8150278fde07331ca6958976b2b3395688))
+- Flow type for `TouchableBounce` ([8454a36b0b](https://github.com/facebook/react-native/commit/8454a36b0bc54cb1e267bc264657cc693607da71))
+- Flow type for `TouchableOpacity` ([44743c07ad](https://github.com/facebook/react-native/commit/44743c07ad672e39668f92a801578906ec92996a))
+- Flow type for `TouchableHighlight` ([f0c18dc820](https://github.com/facebook/react-native/commit/f0c18dc820537892dcc33d5aebbf4f52cf299b95))
+- Flow type for `TouchableWithoutFeedback` ([0b79d1faa2](https://github.com/facebook/react-native/commit/0b79d1faa21eb3c29aeeba08ee0fb2ed62e6cc54))
+- Flow type for `ScrollView` ([b127662279](https://github.com/facebook/react-native/commit/b1276622791d5dbe4199bb075f473908c3e62b31))
+- Flow type for `DatePickerIOS` ([97e572ea6d](https://github.com/facebook/react-native/commit/97e572ea6d7b1fd829ca20f5d5c8ff970d88e68b))
+- Flow type for `KeyboardAvoidingView` ([188b118b60](https://github.com/facebook/react-native/commit/188b118b6075be1614c553596b85d430767f2dbc))
+- Flow type for `ActivityIndicator` ([0b71d1ddb0](https://github.com/facebook/react-native/commit/0b71d1ddb03c036ed118574c105b0af505da19fc))
+- Remove `$FlowFixMe` in `TouchableBounce` ([ffda017850](https://github.com/facebook/react-native/commit/ffda0178509ed92396f15db37a41d3d668ade4e6))
+- Remove `$FlowFixMe` in `ScrollView` ([af6e2eb02d](https://github.com/facebook/react-native/commit/af6e2eb02d3651f869b5436e68e61ef3ab3405a0))
+- Remove `$FlowFixMe` in `ListView` ([af6e2eb02d](https://github.com/facebook/react-native/commit/af6e2eb02d3651f869b5436e68e61ef3ab3405a0))
+- Remove `$FlowFixMe` in `Text` ([6042592cf4](https://github.com/facebook/react-native/commit/6042592cf46787f089e76b661376705380607207))
+- Remove `$FlowFixMe` in `RTLExample` ([206ef54aa4](https://github.com/facebook/react-native/commit/206ef54aa415e3e2bb0d48111104dfc372b97e0f))
+- Remove `$FlowFixMe` in `AppContainer` ([a956551af7](https://github.com/facebook/react-native/commit/a956551af73cf785ee4345e92e71fd5b17c5644e))
+- Remove `$FlowFixMe` in `Slider` ([1615f9d161](https://github.com/facebook/react-native/commit/1615f9d16149c7082ce0e1485aa04a6f2108f7ba))
+- `StyleSheet`: Support animated values for border dimensions ([3e3b10f404](https://github.com/facebook/react-native/commit/3e3b10f4044ada7b523d363afb614720468c217f))
+- Update `react-devtools-core` and `plist` to include security fixes reported by `npm audit` ([3a1d949906](https://github.com/facebook/react-native/commit/3a1d949906acb0c3b44d125d54d0c99305bbbb56))
+- Update `Switch` to ES6 Class ([970caa4552](https://github.com/facebook/react-native/commit/970caa4552d4ba87c1a954391535ff42b00832e7))
+- Update `Slider` to ES6 Class ([5259450c14](https://github.com/facebook/react-native/commit/5259450c143f71c65e157d6b7d3f0e1655eb7aa1))
+- Update `ActivityIndicator` to ES6 Class ([edd7acbb1e](https://github.com/facebook/react-native/commit/edd7acbb1e6fe185600a19cc1cbb38feb16c85ad))
+- Update `RefreshControl` to ES6 Class ([a35a238317](https://github.com/facebook/react-native/commit/a35a23831789030e17f766f72d307ae315be107d))
+- Update `KeyboardAvoidingView` to ES6 Class ([c017dcb0f2](https://github.com/facebook/react-native/commit/c017dcb0f2903b49b2f21cc150226aeb7f5026ee))
+- Update `DatePickerIOS` to ES6 Class ([f8c8231706](https://github.com/facebook/react-native/commit/f8c8231706492b588331354d45b833aa21434e13))
+- Update `Text` to ES6 Class ([ab92c00245](https://github.com/facebook/react-native/commit/ab92c00245c0ce717819ddb0ab8b9204d4c13c34))
+- Replace `context.isInAParentText` w/ `React.createContext` ([e1339bc183](https://github.com/facebook/react-native/commit/e1339bc18303ca5394cd0c9dc97cededb2261581))
+- Cleanup `Text` implementation ([06c05e744d](https://github.com/facebook/react-native/commit/06c05e744d8af9582bde348210f254d76dae48b9))
+- Switch `Text` to `React.forwardRef` ([e708010d18](https://github.com/facebook/react-native/commit/e708010d18f938e2d6b6424cfc9485d8e5dd2800))
+- Switch `View` to `React.forwardRef` ([3e534b9aab](https://github.com/facebook/react-native/commit/3e534b9aab5156adac67762877b2457408fe8934))
+- Update uses of `genMockFunction` and `genMockFn` to `fn` in tests ([390ded871c](https://github.com/facebook/react-native/commit/390ded871cb905d149e9c1f4a082e67a7ec7addb))
+- Make `ViewProps` exact ([65c336f38f](https://github.com/facebook/react-native/commit/65c336f38f4afd43c8b5f81745abf38bd9b8ddbf))
+- Spread `TVViewProps` into `ViewProps` instead of intersection ([bc658d3c44](https://github.com/facebook/react-native/commit/bc658d3c4405676643d952a126295dbc7fc26217))
+- Allow trailing commas ([1e2de71290](https://github.com/facebook/react-native/commit/1e2de712907e5fe0d17648f0ff5c81d4384ca85b))
+- Use `let`/`const` ([8f5ebe5952](https://github.com/facebook/react-native/commit/8f5ebe5952d0675b463137103a82f3fb0c26ae0d))
+- Refactor `MockNativeMethods` in Jest ([5d4c542c58](https://github.com/facebook/react-native/commit/5d4c542c58d84bbe05f76bf01d9efdd9d438572c))
+- Use app name from `app.json` after ejecting ([57774a4a98](https://github.com/facebook/react-native/commit/57774a4a981e2f12cfe9b029447e34f203221b18))
+- Suggest `git apply --reject` for failed upgrades ([4fbd244b9a](https://github.com/facebook/react-native/commit/4fbd244b9a6b62e0efe1b4b5a7ec3de468f020f6))
+- Moved `TouchHistoryMath` from React to React Native ([06085d3836](https://github.com/facebook/react-native/commit/06085d38366373f3135074dc14e2c9871ca4fe29))
+- Refactor `RCTInputAccessoryView` ([c136c54ff0](https://github.com/facebook/react-native/commit/c136c54ff0211e2bf149fab600cd6e295f9d19dd))
+- Don't wrap `ListEmptyComponent` in an extra view ([db061ea8c7](https://github.com/facebook/react-native/commit/db061ea8c7b78d7e9df4a450c9e7a24d9b2382b4))
+- Move `Text` PropTypes to its own file ([cd8128b2ec](https://github.com/facebook/react-native/commit/cd8128b2eccf6898cdf798a1e1be1f7a5762a0d4))
+- Mock `ReactNative.NativeComponent` native methods in Jest ([3e9a371ace](https://github.com/facebook/react-native/commit/3e9a371ace5f25b2eb7a0d30177251f8a0c10ed9))
+- Tightening types for `View` and `VirtualizedList` ([5035af80ec](https://github.com/facebook/react-native/commit/5035af80ecddb44e2a8444780f25f336b760bf32))
+- Make values optional in `ViewPropTypes` ([f1316cab6c](https://github.com/facebook/react-native/commit/f1316cab6c351852ef1da9939d4c8f0244fb8a6f))
+- propTypes are optional for native components ([dbdf43b428](https://github.com/facebook/react-native/commit/dbdf43b428da19a9eba012753904bcf33339ea9a))
+- Rename `Style` to `DangerouslyImpreciseStyle` ([4895c645ea](https://github.com/facebook/react-native/commit/4895c645ea17ff939811f3d5ec6218cd4e31c5fb))
+- _[BREAKING]_ `requireNativeComponent`'s signature has been simplified to only take extraOptions ([820673e707](https://github.com/facebook/react-native/commit/820673e7076b5906ba50e09e40fb9a32cf500c1b), [b549e364e0](https://github.com/facebook/react-native/commit/b549e364e0025e0e1b4005f04a9de2d767006da1), [28d37781c6](https://github.com/facebook/react-native/commit/28d37781c6589574de1113bd12077f6d54053ffb), [1c90a2b47b](https://github.com/facebook/react-native/commit/1c90a2b47b420a4b6aa16a55a344cc08f0eacbe3), and [1ab7d49c2d](https://github.com/facebook/react-native/commit/1ab7d49c2df5673dd214eb8a9b7fd3defb0ff857) by [@yungsters](https://github.com/yungsters))
+
+#### Breaking Changes
+
+- Public methods of Text (`blur`, `focus`, `measure`, `measureInWindow`, `measureLayout`, `setNativeProps`) are no longer bound to the text component instance. It is therefore unsafe to pass these methods by reference (i.e: as callbacks) to functions. So, things like `setTimeout(this._txtRef.focus, 1000)` will no longer work. Please instead do: `setTimeout(() => this._txtRef.focus(), 1000)`.
+
+### iOS specific changes
+
+- _[BREAKING]_ WebViews now can only use https; do not use it for `file://` ([634e7e11e3](https://github.com/facebook/react-native/commit/634e7e11e3ad39e0b13bf20cc7722c0cfd3c3e28) by [@mmmulani](https://github.com/mmmulani))
+- iOS 9 is now the minimum required version ([f50df4f5ec](https://github.com/facebook/react-native/commit/f50df4f5eca4b4324ff18a49dcf8be3694482b51))
+- Update podspecs to target iOS 9 ([092103e752](https://github.com/facebook/react-native/commit/092103e7525e58e04346e0a1a16a67ca4f31c2e9))
+- Xcode 9.4 is now used to run tests ([c55bcd6ea7](https://github.com/facebook/react-native/commit/c55bcd6ea729cdf57fc14a5478b7c2e3f6b2a94d))
+- Prevent console logging on iOS 11.3+ within WebSocket ([8125be942b](https://github.com/facebook/react-native/commit/8125be942bd5fd8fe851bad04ae6b9bcb0af4727))
+- Expose `RCTFont` size overrides ([6611fefef7](https://github.com/facebook/react-native/commit/6611fefef7559c4cd3d1824235d263bff210d5e2))
+
+### Android specific changes
+
+- Projects are now compiled using Android SDK 26 ([065c5b6590](https://github.com/facebook/react-native/commit/065c5b6590de18281a8c592a04240751c655c03c))
+- Use Google Maven repo in new Android projects ([6d56a234e3](https://github.com/facebook/react-native/commit/6d56a234e3cf5984335ff2713236260fac977f5f))
+- Upgrade Buck to v2018.03.26.01 ([1324e7b558](https://github.com/facebook/react-native/commit/1324e7b5580db815471172cf6dd140124bd2f11a))
+- Upgrade gradle-plugin to 2.3.3, gradle to 3.5.1, gradle-download-task to 3.4.3 ([699e5eebe8](https://github.com/facebook/react-native/commit/699e5eebe807d1ced660d2d2f39b5679d26925da))
+- Bump NDK APP_PLATFORM to android-16 ([b5dc45420a](https://github.com/facebook/react-native/commit/b5dc45420a0d3aa54d2d2075d7f14ff1835df78a))
+- Bump glog to 0.3.5 (added libc++ support) ([b5fca80605](https://github.com/facebook/react-native/commit/b5fca806059e628edb504cb1bacf62e89ee6f102))
+- `ReactFragmentActivity` deprecated as it's not necessary when targeting API level 14 and above ([77a02c0d83](https://github.com/facebook/react-native/commit/77a02c0d83dbfcd9a5397cf63e1ab2e6c94cfdde))
+- Touchables now play a sound on press ([722f88ca90](https://github.com/facebook/react-native/commit/722f88ca9058c5d902c416b826a7a7ab347326b8))
+- Default `underlineColorAndroid` to transparent ([a3a98eb1c7](https://github.com/facebook/react-native/commit/a3a98eb1c7fa0054a236d45421393874ce8ce558))
+- Disable `WebView` geolocation by default ([23d61b35fb](https://github.com/facebook/react-native/commit/23d61b35fb6fdbfb84f77b6d99ff155a0ff868e6))
+- Ensure cookies with illegal characters are not sent to okhttp ([04028bf216](https://github.com/facebook/react-native/commit/04028bf2169b01f79bd86ecd6b0d8aa5f99599f1))
+- Update app icons to match recent Android releases ([94393f8652](https://github.com/facebook/react-native/commit/94393f8652c414806fc861c214ad36e9ac1b6114))
+- Better error messages for `ReadableNativeMap` ([30d06b4286](https://github.com/facebook/react-native/commit/30d06b42862fc5e8704e109db652d62f86f8eabc))
+- Update Fresco to v1.9.0, okhttp3 to v3.10.0 ([6b07602915](https://github.com/facebook/react-native/commit/6b07602915157f54c39adbf0f9746ac056ad2d13))
+- Add tint color to inline icons ([e8e2a6e410](https://github.com/facebook/react-native/commit/e8e2a6e4102c1ba0ee3d068769e47fa61c160524))
+- Fix antialiasing rounded background ([e4f88c66e3](https://github.com/facebook/react-native/commit/e4f88c66e300505d3c86329dacd84d84e8109837))
+- `react-native link` will now replace '/' by '\_' when linking projects. If you previously linked scoped packages, they will get linked again. ([dbd47592a1](https://github.com/facebook/react-native/commit/dbd47592a18ed09ee6e94c79bed16d63be625af6))
+- New project template now uses project-wide properties ([0a3055d98a](https://github.com/facebook/react-native/commit/0a3055d98a36e49746144e883edc7e20afec4fcb))
+
+---
+
+### Fixed: bugs that have been resolved
+
+- `VirtualizedList` now accounts for `ListHeaderComponent` length when calculating offset ([604bcfa4a8](https://github.com/facebook/react-native/commit/604bcfa4a83396c402ba8beaa13f40d05d6e9f5c))
+- Prevent showing a hidden status bar when opening modals ([076b1cea35](https://github.com/facebook/react-native/commit/076b1cea3563cae30e11d63cc100ceaed9082692))
+- Fix crash when reloading while Perf Monitor is enabled ([4fcd9970bd](https://github.com/facebook/react-native/commit/4fcd9970bd2dfb24890bc87e9c82e16dab71ec09))
+- Fixed concurrency issue in remote debugger ([578b0b2a51](https://github.com/facebook/react-native/commit/578b0b2a51fc0c2aba5d27cdd5335396d5351463))
+- Fix `Modal` + `FlatList` scrolling ([45b0907f61](https://github.com/facebook/react-native/commit/45b0907f619f455825f459838615a5a7cc59a204))
+- Fix bug in `RCTNetworking` where not all tasks/handlers were being cleared during invalidation ([b805172034](https://github.com/facebook/react-native/commit/b8051720344f3716e964eaf7cfdd2a91dc703602))
+- Fix keyboard handling with `keyboardShouldPersistTaps: never` ([ffe6c110f7](https://github.com/facebook/react-native/commit/ffe6c110f7ce33460fe0399ccbda16a6adbe90ca))
+- Fix Responder Logic in `Text` ([e2ce22b823](https://github.com/facebook/react-native/commit/e2ce22b823661a7dcf6b70a825921a2910383bd1))
+- Fix `VirtualizedSectionList` lint warnings ([26a1eba1ce](https://github.com/facebook/react-native/commit/26a1eba1cef853b0dab7aad5731699c06d36b781))
+- Fix `VirtualizedSectionList:ItemWithSeparators` ([488a4c7e1c](https://github.com/facebook/react-native/commit/488a4c7e1c86ac5900ff9194106511fbf5a8e3cb))
+- Fix `TextInput`'s initial layout measurements ([c6b4f9f2ce](https://github.com/facebook/react-native/commit/c6b4f9f2ce59bc757d9e211f46294faa03df55c6))
+- Fix `requireNativeComponent` check ([1c90a2b47b](https://github.com/facebook/react-native/commit/1c90a2b47b420a4b6aa16a55a344cc08f0eacbe3))
+- Fix `TextInput` autocapitalization bug ([ff70ecf868](https://github.com/facebook/react-native/commit/ff70ecf868cf12fc66b45dc1496391d0a1e9011f))
+- Add missing events to `ViewPropTypes` ([41a940392c](https://github.com/facebook/react-native/commit/41a940392cea497bc5eb627b24083d0211d1eb89))
+- Add missing Jest mock in `StatusBarManager` ([4a2c560768](https://github.com/facebook/react-native/commit/4a2c560768abb2d8407900fdb2fbe4971ae00a1c))
+- Add Flow declaration for Metro module ([1853e15190](https://github.com/facebook/react-native/commit/1853e1519030caaeeb7f31017d98823aa5696daf))
+- Fix type for `ReactNative.NativeComponent` (1/2) ([de11ba2a5e](https://github.com/facebook/react-native/commit/de11ba2a5ee90929dbc67d914de59bdd2ebc29ca))
+- Fix type for `ReactNative.NativeComponent` (2/2) ([752863629d](https://github.com/facebook/react-native/commit/752863629d63bca6d96a101bfeccc4e7ad3e953e))
+- Move Image PropTypes to new file ([67656991b3](https://github.com/facebook/react-native/commit/67656991b32075e8b4a99c6409b0a131206c6941))
+- Tests: Fix JUnit report location when running Jest ([85fc98d437](https://github.com/facebook/react-native/commit/85fc98d437c08cdec883a73161e120478737ba72))
+- Tests: Fix ReactImagePropertyTest SoLoader failures (#19607) ([a52d84d7e1](https://github.com/facebook/react-native/commit/a52d84d7e1cdb287f2877c4d85f2e9866c248d43))
+- Tests: Fix jest snapshot testing on Windows ([216bce3163](https://github.com/facebook/react-native/commit/216bce31632480ce70cc03b1b2a57ec12440afd7))
+- Fixes "Cannot resolve module" errors in new `react-native init` projects ([843a433e87](https://github.com/facebook/react-native/commit/843a433e87b0ccaa64ab70d07e22bffbabad8045))
+- Haste hotfix for `react-native-windows` ([54942746d4](https://github.com/facebook/react-native/commit/54942746d4037e1153e14fcfc95e4edc772d296a))
+
+#### iOS specific fixes
+
+- Fix undefined_arch error in Xcode 10 beta - e131fff
+- Make `react-native run-ios` command play nicely with multiple Xcode versions ([a130239257](https://github.com/facebook/react-native/commit/a1302392577789faab79dad0cb39b147464e0e42))
+- Correct fishhook import ([75a0273de2](https://github.com/facebook/react-native/commit/75a0273de21948b0b959263100f09111f738ec35))
+- Fix bug where a Backspace event was emitted when entering characters after clearing a text in `TextInput` by an empty string ([1ffb2b63be](https://github.com/facebook/react-native/commit/1ffb2b63be4c4af331fece0b4286e5c92b1e575d))
+- Expose `InputAccessoryView` so it can be imported ([80fc415cf1](https://github.com/facebook/react-native/commit/80fc415cf179ffe26d020bc8d6e4451352da94fd))
+- Fix `InputAccessoryView` safe area conformance ([490f22ae72](https://github.com/facebook/react-native/commit/490f22ae72ba43fa9364ce0f6c238744c07ac830))
+- Fix use of C++ syntax in header file ([bfcfe7961d](https://github.com/facebook/react-native/commit/bfcfe7961db0970e2575eafe2f3c9c668bd8940d))
+- Fix install step when running `run-ios` ([0934c1778f](https://github.com/facebook/react-native/commit/0934c1778f0e3c0b691e1a3ca2df1d486eb905dd))
+- Fix `run-ios` not turning on Simulator ([9736ddc061](https://github.com/facebook/react-native/commit/9736ddc061e9c4291df8a3185c7f9d6f73e435c7))
+- Use correct library reference for Fishhook. This fixes the build for the new Xcode build system, on both Xcode 9 and Xcode 10 ([a8b74576da](https://github.com/facebook/react-native/commit/a8b74576da6f1a42fde4e39f97e88c8f45a3a51d))
+- Add missing `onChange` event definition to `DatePickerIOS` ([3b53091869](https://github.com/facebook/react-native/commit/3b53091869b673ea33a4af34242e2227ca944768))
+- Fix crash during Archive phase on Xcode 9.3 ([344c205070](https://github.com/facebook/react-native/commit/344c205070d5ad670c97984dd86ec9ac13c73f81))
+- `RNTesterPods`: Add missing folly include ([128c9343c4](https://github.com/facebook/react-native/commit/128c9343c464f3e7898d6e245f135f8bdf6caa6a))
+- `RNTesterPods`: folly::Optional's `has_value()` to `hasValue()` until folly is upgraded ([128c9343c4](https://github.com/facebook/react-native/commit/128c9343c464f3e7898d6e245f135f8bdf6caa6a))
+- `RNTesterPods`: Fix import for `RCTTestAttributes.h` ([128c9343c4](https://github.com/facebook/react-native/commit/128c9343c464f3e7898d6e245f135f8bdf6caa6a))
+- `RNTesterPods`: Fix `conversions.h` to use namespaced includes ([128c9343c4](https://github.com/facebook/react-native/commit/128c9343c464f3e7898d6e245f135f8bdf6caa6a))
+- Fix or mark enum conversions surfaced by `-Wenum-conversion` ([b8f30db0ae](https://github.com/facebook/react-native/commit/b8f30db0ae21d5f96547702abbf50aefa93b1094))
+- Fix CocoaPods integration without DevSupport subspec ([c09d509c2b](https://github.com/facebook/react-native/commit/c09d509c2b8a5a02701829e1f0ace8081ce64277))
+- Update Yoga to handle being in a Xcode framework project ([cf036dbc7a](https://github.com/facebook/react-native/commit/cf036dbc7af16a8453c115372694dc51e8086fcf))
+- Fix Blob memory leak ([122b3791ed](https://github.com/facebook/react-native/commit/122b3791ede095345f44666691aa9ce5aa7f725a))
+- Avoid double reload event when reloading JS ([7b9b1559a7](https://github.com/facebook/react-native/commit/7b9b1559a7f6719c3c9ad8e894fcdd99ed109afe))
+- Suppress spurious warning about RCTCxxModule ([569061dd83](https://github.com/facebook/react-native/commit/569061dd8384a86cd27719b8b068360d8379f4c3))
+
+#### Android specific fixes
+
+- Fix extreme `TextInput` slowness on Android ([5017b86b52](https://github.com/facebook/react-native/commit/5017b86b525e3ef6023f0f8a88e6fd1cf98024e0))
+- Correct draw path dimensions while doing even border, fixes blurred borders ([c5ca26a0e5](https://github.com/facebook/react-native/commit/c5ca26a0e5c0660196300ee34d6007c63879611f))
+- Don't pass additional arguments to `requireNativeComponent` in `.android.js` files ([a51e8b19cc](https://github.com/facebook/react-native/commit/a51e8b19cc4dc36dee42ac95278b883c06b2e40f))
+- Prevent `RefreshControl` from getting stuck when a parent is scrolled horizontally ([33ffa79a51](https://github.com/facebook/react-native/commit/33ffa79a51d4db9ba69148861f2da304646175cd))
+- Prevent crash due to unsupported ellipsize mode ([85e33aaf90](https://github.com/facebook/react-native/commit/85e33aaf908996e99220bff4a2bdbbdf7c0d12b0))
+- Fix okhttp3 response handling in `DevServerHelper` ([56d48bd9ec](https://github.com/facebook/react-native/commit/56d48bd9ecd2d0f08625259121312531064a09f2))
+- Fix `ReactInstanceManager` unmountApplication to support `ReactRootView` recycling ([4a9b2a7302](https://github.com/facebook/react-native/commit/4a9b2a73021fb547febe1fa193c3effb7ff8da4e))
+- Fix `NullPointerException` when emitting event using `UIManagerModule` ([291c01f4ff](https://github.com/facebook/react-native/commit/291c01f4ffe614760852e36b05d78b42cb4271df))
+- Fix link to Android build guide ([57e7556b8d](https://github.com/facebook/react-native/commit/57e7556b8db61e5fcc3ccea56c1b163b82a091a6))
+- Fix Android open source test failures ([3e0ebc7663](https://github.com/facebook/react-native/commit/3e0ebc76632238f21c60caa92c7a2b5ee8102b71))
+- Fix view indices with LayoutAnimation ([05b75b9ebf](https://github.com/facebook/react-native/commit/05b75b9ebfa3ce6d67b2a3aee446ff0cd515311b))
+- Fix originalNode memory leak ([8102e35271](https://github.com/facebook/react-native/commit/8102e35271ab68e0525a9c60d86a855bbeef9c1a))
+- Fix `ScrollView` with a `TextInput` ([2f1421dec7](https://github.com/facebook/react-native/commit/2f1421dec7cd3a35779caceac108e872033c7d72))
+- Disable onKeyPRess logic when handler not defined ([41975f75d9](https://github.com/facebook/react-native/commit/41975f75d96ef4b606b4618461bf24d5db063b77))
+- fix permission requests on pre-M android ([4e1abdd74d](https://github.com/facebook/react-native/commit/4e1abdd74dc4127a86d62e7750d01d39bb781c08))
+
+---
+
+### Removed: features that have been removed; these are breaking
+
+- Deprecate `focusTextInput` and `blurTextInput` ([ce3b7b8204](https://github.com/facebook/react-native/commit/ce3b7b8204dad0fd62a76a0ce66472eca4b25bc8))
+- _[BREAKING]_ `ImageResizeMode` on `Image` is no longer exposed; check your usage of `resizeMode`; the same resize modes exist, but pass them as strings instead ([870775ee73](https://github.com/facebook/react-native/commit/870775ee738e9405c6545500f9a637df9b513a02) by [@TheSavior](https://github.com/TheSavior))
+
+#### Android specific removals
+
+- Remove native extensions ([7c5845a5a2](https://github.com/facebook/react-native/commit/7c5845a5a26592598c9380df078766a680a23f06))
+- Remove Fresco ProGuard rules ([07df36557c](https://github.com/facebook/react-native/commit/07df36557c8cbbaee5e870460162aa725a606ff4))
+
+#### iOS specific removals
+
+- Disallow nesting of `<View>` within `<Text>` (e.g. `<Text><View /></Text>`) ([6a1b41643a](https://github.com/facebook/react-native/commit/6a1b41643a5f5035c61a96263220d11d3462e8f2)
+- Removed deprecated `UIActionSheetDelegate` methods ([5863b564f8](https://github.com/facebook/react-native/commit/5863b564f84b9fe97b256f8cde0f7f2e1db9b641))
+
+---
+
+### Known issues
+
+During the RC testing of this version, a few issues that have been opened don't have yet a finalized solution ( [19827](https://github.com/facebook/react-native/issues/19827), [19763](https://github.com/facebook/react-native/issues/19763), [19859](https://github.com/facebook/react-native/issues/19859), [19955](https://github.com/facebook/react-native/issues/19955) ). We are aware of them and we hope that by releasing 0.56.0 the surface of developers interacting to find solutions to them will allow for faster resolution and an even better 0.56.1 release. So please check the already opened issues before submitting new ones.
+
+If you are using Windows to develop React Native apps, we suggest you keep an eye on [this issue in particular](https://github.com/facebook/react-native/issues/19953) since there have been many reports of issues related to Win 10 and RN 0.56.
+
+## v0.55.0
+
+Welcome to the March 2018 release of React Native ! Over 81 contributors made 247 commits since February. Thanks for another exciting release.
+
+Here are a few highlights:
+
+- React Native is now using the MIT license
+- Android TV device support
+
+[![RNAndroidTVDemo](http://img.youtube.com/vi/EzIQErHhY20/0.jpg)](http://www.youtube.com/watch?v=EzIQErHhY20)
+
+- Animated tracking with native driver - check out the [silky smooth framerate](https://t.co/dE1KST1i3g)
+- Lots of Flow improvements
+- Bugfixes
+
+### Added: new features
+
+- Added support for animated tracking to native driver. Now you can use `useNativeDriver` flag with animations that track other `Animated.Values` ([b48f7e5605](https://github.com/facebook/react-native/commit/b48f7e560545d53db7c906ced51a91c4cce6ee94) by [@kmagiera](https://github.com/kmagiera))
+- There's a new UTFSequence module in the library for common Unicode sequences (Emoji!) ([54870e0c6c](https://github.com/facebook/react-native/commit/54870e0c6ca8611fed775e5ba12a0d6d9b1cdbd7) and [4761d5a83e](https://github.com/facebook/react-native/commit/4761d5a83e707e0ed651f02a9e02fc5d66b1869a) by [@sahrens](https://github.com/sahrens))
+- Added `contextMenuHidden` property for **TextInput** ([2dd2529b3a](https://github.com/facebook/react-native/commit/2dd2529b3ab3ace39136a6e24c09f80ae421a17e) by [@amhinson](https://github.com/amhinson))
+- Add `testOnly_pressed` to **TouchableHighlight** for snapshot tests ([3756d41de1](https://github.com/facebook/react-native/commit/3756d41de1feb167482f01b26f9a5f2563ef8bff) by [@sahrens](https://github.com/sahrens))
+
+#### Android specific additions
+
+- Added support for Android TV devices ([b7bb2e5745](https://github.com/facebook/react-native/commit/b7bb2e5745f2bdbfeeccef8d97d469730942e01c) by [@krzysztofciombor](https://github.com/krzysztofciombor))
+- Implemented style `letterSpacing` for **Text** and **TextInput** ([5898817fc1](https://github.com/facebook/react-native/commit/5898817fc1a66bd317d65ce96520159df2f96045) by [@motiz88](https://github.com/motiz88))
+- Bundle download progress is now shown [d06e143420](https://github.com/facebook/react-native/commit/d06e143420462344ea6fc21c0446db972f747404) by [@janicduplessis](https://github.com/janicduplessis))
+- **AndroidInfoModule** now also returns Android ID ([216c8ec04b](https://github.com/facebook/react-native/commit/216c8ec04b22704f722ecaac4718157af4434a0c) by [@L33tcodex0r](https://github.com/L33tcodex0r))
+
+#### iOS specific additions
+
+- Introducing **InputAccessoryView**, "a component which enables customization of the keyboard input accessory view" ([38197c8230](https://github.com/facebook/react-native/commit/38197c8230657d567170cdaf8ff4bbb4aee732b8), [84ef7bc372](https://github.com/facebook/react-native/commit/84ef7bc372ad870127b3e1fb8c13399fe09ecd4d), and [6d9fe455dc](https://github.com/facebook/react-native/commit/6d9fe455dc815cdce86c00f81c71c9ca0c724964) by [@PeteTheHeat](https://github.com/PeteTheHeat))
+- `base-line` metric exposure for **Text** and **TextInput** ([51b3529f6c](https://github.com/facebook/react-native/commit/51b3529f6c2ca354800c0cf6ecb8eb3115eaa36e), [0dbe18375e](https://github.com/facebook/react-native/commit/0dbe18375ebb712be8bebd3b6592170f90f8b7bc), and [7630a614e4](https://github.com/facebook/react-native/commit/7630a614e4bd56c1a3ac728e1dfafd114340f2b7) by [@shergin](https://github.com/shergin))
+- **DatePickerIOS** now has `initialDate` prop ([446ce49e9b](https://github.com/facebook/react-native/commit/446ce49e9b097d2a5e95b0f17aa23756733c27ec))
+- Expose version via `RCTVersion.h`'s `RCTGetReactNativeVersion()` ([30469ed001](https://github.com/facebook/react-native/commit/30469ed00170a74743d2ba5aadce61aae742715c) by [@LeoNatan](https://github.com/LeoNatan))
+- Allow running multiple simulators simultaneously with `react-native run-ios --simulator ...` ([2ad34075f1](https://github.com/facebook/react-native/commit/2ad34075f1d048bebb08ef30799ac0d081073150) by [@koenpunt](https://github.com/koenpunt))
+- Introduced **RCTSurfaceHostingProxyRootView** for migration to **RCTSurfaceHostingView** ([34b8876ac6](https://github.com/facebook/react-native/commit/34b8876ac6510398e03a03c94f4ffb9aaa7519d3) by [@fkgozali](https://github.com/fkgozali))
+- New UIManager API allowing intercept/delay mounting process ([402ae2f01f](https://github.com/facebook/react-native/commit/402ae2f01fd91051be5b717b0578e18b863854af) and [b90c1cf6c3](https://github.com/facebook/react-native/commit/b90c1cf6c30454859579278be18ac650c66f516b) by [@shergin](https://github.com/shergin))
+
+### Changes: existing functionality that is now different
+
+- React Native has now adopted the MIT license ([1490ab12ef](https://github.com/facebook/react-native/commit/1490ab12ef156bf3201882eeabfcac18a1210352) and [26684cf3ad](https://github.com/facebook/react-native/commit/26684cf3adf4094eb6c405d345a75bf8c7c0bf88) by [@sophiebits](https://github.com/sophiebits))
+- The HelloWorld template now exclude `*.jsbundle` files from Git ([21231084db](https://github.com/facebook/react-native/commit/21231084dbccc8abe7823d4444a7e772c08e3e72) by [@aneophyte](https://github.com/aneophyte))
+- `react-native-git-upgrade` now shows files merged with conflicts in red ([e53a8f7097](https://github.com/facebook/react-native/commit/e53a8f7097965f38d87eade1407661bc63adc68e) by [@alvinthen](https://github.com/alvinthen))
+- `ResolvedAssetSource` type to have all read-only members ([4d0ee37293](https://github.com/facebook/react-native/commit/4d0ee37293b5e21fc3c7a8c6edd72c9ff899df7d) by [@sahrens](https://github.com/sahrens))
+- Flow types improvements ([b6c7e551a9](https://github.com/facebook/react-native/commit/b6c7e551a91c406884cbbe8ee37c0038a1b7f0be), [b98bf1e097](https://github.com/facebook/react-native/commit/b98bf1e09739860d82e37225f1635bba3bc817b3), [80c18395e2](https://github.com/facebook/react-native/commit/80c18395e24760cd12b69592a10037f071255437), [70a3ececc3](https://github.com/facebook/react-native/commit/70a3ececc368a8d0fe4b57b13ac956ad99a637c7), [f7343576fc](https://github.com/facebook/react-native/commit/f7343576fc2ca941b03145d9e97208bcbc8c345b), [a817c64043](https://github.com/facebook/react-native/commit/a817c6404338b7b15aaeac5693ae3635a0a3dde0), [3fd82d3c89](https://github.com/facebook/react-native/commit/3fd82d3c89f2d7e5103b024b54250f2ded970d88), [cd8128b2ec](https://github.com/facebook/react-native/commit/cd8128b2eccf6898cdf798a1e1be1f7a5762a0d4), [5035af80ec](https://github.com/facebook/react-native/commit/5035af80ecddb44e2a8444780f25f336b760bf32), [26734a8473](https://github.com/facebook/react-native/commit/26734a8473ac2f5715f2b7a016f0cc8a15c6f073), [321ba067a8](https://github.com/facebook/react-native/commit/321ba067a8323c80262e51c94a931199d5ff5cd7), [b6b80f6a70](https://github.com/facebook/react-native/commit/b6b80f6a70c6d790c52b58453fefc2cea6cd06fe), [f1316cab6c](https://github.com/facebook/react-native/commit/f1316cab6c351852ef1da9939d4c8f0244fb8a6f), [2520c645f8](https://github.com/facebook/react-native/commit/2520c645f863c299e8dccb844bac3dc6a9d553e0), [214da52fe7](https://github.com/facebook/react-native/commit/214da52fe76c1688d0c1a402b3e6c4d0fc19d882), [dbdf43b428](https://github.com/facebook/react-native/commit/dbdf43b428da19a9eba012753904bcf33339ea9a), [49396aa78d](https://github.com/facebook/react-native/commit/49396aa78d218625c1933fa864acd70853faa9f9), [4895c645ea](https://github.com/facebook/react-native/commit/4895c645ea17ff939811f3d5ec6218cd4e31c5fb), [a3c07c95ef](https://github.com/facebook/react-native/commit/a3c07c95effd891c2bd5f3257efe5b24d85862be), [49ffc9fada](https://github.com/facebook/react-native/commit/49ffc9fada4266c3ba9751c5e8e4c475174c7e6c), and [c129457d3a](https://github.com/facebook/react-native/commit/c129457d3a6622d7c28e8b27829ffc2b0a03c5eb) by [@TheSavior](https://github.com/TheSavior), [@yungsters](https://github.com/yungsters), and [@alex288ms](https://github.com/alex288ms))
+- Better enable cross-platform support of WebSocket.js ([b9be28915c](https://github.com/facebook/react-native/commit/b9be28915cf323eb36f1d7c77821cdf994954074) by [@rozele](https://github.com/rozele))
+- Better error handling in the CLI around making directories ([d2817f48a1](https://github.com/facebook/react-native/commit/d2817f48a1146b469d544ee78015251551d358c3) by [@BridgeAR](https://github.com/BridgeAR))
+- Verify that the component passed to createAnimatedComponent is not functional ([10b642a7af](https://github.com/facebook/react-native/commit/10b642a7af097bd508dab7b5d4723ccb4339d35f) by [@janicduplessis](https://github.com/janicduplessis))
+- Don't truncate in the middle of an emoji ([9c8c597000](https://github.com/facebook/react-native/commit/9c8c5970002d048e8b18088f7c63b39431def50b) by [@Vince0613](https://github.com/Vince0613))
+- Loosen Platform check to allow better code sharing for out-of-tree platforms ([84affbd6a3](https://github.com/facebook/react-native/commit/84affbd6a371dd865a3550b1fde1ebabee921341))
+- In CLI, fix issue with `isInstalled` check for Android and references to unregister ([ec884890b1](https://github.com/facebook/react-native/commit/ec884890b1f40da42e84202e082b4cef2506bbfc) by [@rozele](https://github.com/rozele))
+
+#### iOS specific changes
+
+- tvOS `onPress` magnification animation now works via the `tvParallaxProperties` prop object taking `pressMagnification`, `pressDuration`, and `pressDelay` ([6c353fd7e9](https://github.com/facebook/react-native/commit/6c353fd7e9fd324717951ad62754d817537d7339) by [@JulienKode](https://github.com/JulienKode))
+
+### Fixed: bugs that have been resolved
+
+- In **TouchableOpacity**, trigger animation on `opacity` upon change in `disabled` prop ([9366ce416f](https://github.com/facebook/react-native/commit/9366ce416fbf015e4795987d39a65199b1b335c2) by [@maxkomarychev](https://github.com/maxkomarychev))
+- Fixed an issue encountered when using `react-native-vector-icons` ([a759a44358](https://github.com/facebook/react-native/commit/a759a44358711180b37cf4ad25f28af47e3de298) and [54dc11a5fb](https://github.com/facebook/react-native/commit/54dc11a5fbafaccc9c0a781f1151225909717597) by [@jeanlauliac](https://github.com/jeanlauliac) and [@t4deu](https://github.com/t4deu)))
+- Add missing mock for Jest for `removeEventListener` method ([59c7b2cfac](https://github.com/facebook/react-native/commit/59c7b2cfac534a79ff2461af5fd2034b280812a3) by [@MoOx](https://github.com/MoOx))
+- Fix main size calculation from the aspect ratio ([f751c3460e](https://github.com/facebook/react-native/commit/f751c3460e5dc48c1f1a2d72a56173285899de21))
+- Fix crash in Subscribable due to uglify-es ([b57a78c3de](https://github.com/facebook/react-native/commit/b57a78c3def50eda11e57542be0e5233a62d173b) by [@iMagdy](https://github.com/iMagdy))
+- Update `node-notifier` dependency to fix memory leak ([860fcd458a](https://github.com/facebook/react-native/commit/860fcd458a1873ebcf977be01670be5912ae7104) by [@rickhanlonii](https://github.com/rickhanlonii))
+- Fix issues with pollParams and link ([ca8ce83cc3](https://github.com/facebook/react-native/commit/ca8ce83cc3c38751604afce5a3e2f0473d9cba91) by [@grabbou](https://github.com/grabbou))
+
+#### iOS specific fixes
+
+- DevLoadingView now supports the iPhone X screen shape ([47b36d3ff0](https://github.com/facebook/react-native/commit/47b36d3ff0dbb99fd3fc98f6e981a38084dd4d2c) by [@mrtnrst](https://github.com/mrtnrst))
+- Added bounds check to prevent ScrollView from scrolling to an offset which is out of bounds of the ScrollView ([16c9e5b715](https://github.com/facebook/react-native/commit/16c9e5b71500135a631480035af6cd2de3dafdc9) by [@siddhantsoni](https://github.com/siddhantsoni))
+- **NetInfo** `isConnected` works again ([dbafc29e60](https://github.com/facebook/react-native/commit/dbafc29e60aba1d5b24c2b0d321834c40e0b9bca) by [@alburdette619](https://github.com/alburdette619))
+- In **AlertIOS**, fix duplicate var name declaration ([6893a26bfb](https://github.com/facebook/react-native/commit/6893a26bfb06a2d8ad9d23a572f4d9143305d905))
+- Permit `react-native run-ios --device [id]` by passing port when running on device ([f8fee0a631](https://github.com/facebook/react-native/commit/f8fee0a631d77313d7cb5e65a3dd04a5a8ba3d03) by [@jozan](https://github.com/jozan))
+- Fixed issue with `run-ios` where `Entry, ":CFBundleIdentifier", Does Not Exist` was being received ([5447ca6707](https://github.com/facebook/react-native/commit/5447ca67076a110e2b0df03b014f53d1df4646ab) by [@blackneck](https://github.com/blackneck))
+- Fixed problem in Text measurement on iOS ([a534672e13](https://github.com/facebook/react-native/commit/a534672e132136e7bbd17c94a7f4e67149bcc67a) by [@shergin](https://github.com/shergin))
+- Fix crash when reloading in tvOS ([3a3d884df2](https://github.com/facebook/react-native/commit/3a3d884df253dbc1c02ffef33e99c4a91ea8751b) by [@dlowder-salesforce](https://github.com/dlowder-salesforce))
+- Fixed a bug with positioning of nested views inside **Text** ([7d20de412b](https://github.com/facebook/react-native/commit/7d20de412b37a35951e615d98509573dc1a24bcb) by [@shergin](https://github.com/shergin))
+- Fix blob response parsing for empty body ([f5207ba9c7](https://github.com/facebook/react-native/commit/f5207ba9c764f33ef83fa897f6014d67193be0e2) by [@janicduplessis](https://github.com/janicduplessis))
+- Fix tvOS react-native init release build ([3002c4eb98](https://github.com/facebook/react-native/commit/3002c4eb981d439f0ea304556d8dbd4ffd62a80b) by [@dlowder-salesforce](https://github.com/dlowder-salesforce)
+- Fix RedBox from bridge reload due is not re-registering its root view ([2e51fa5f5d](https://github.com/facebook/react-native/commit/2e51fa5f5d4f229329ae457ab1a77ba5bcea0448) by [@fkgozali](https://github.com/fkgozali))
+
+#### Android specific fixes
+
+- Fix: incorrect line-height calculation ([74e54cbcc4](https://github.com/facebook/react-native/commit/74e54cbcc408a8bbdd70f47cc8728d30cdc0d299) by [@strindhaug](https://github.com/strindhaug))
+- Fix crashes with TextInput introduced in 0.53 ([b60a727adb](https://github.com/facebook/react-native/commit/b60a727adbcfa785e3d1b13bf069b766216e60f8) by [@joshyhargreaves](https://github.com/joshyhargreaves))
+- Update ReactAndroid build script to support gradle 2.3.0 ([d8bb990abc](https://github.com/facebook/react-native/commit/d8bb990abc226e778e2f32c2de3c6661c0aa64e5))
+- Allow "unexpected URL" exception to be caught on Android when using fetch ([da84eba318](https://github.com/facebook/react-native/commit/da84eba318ae69fea28f40418178bdeb35c4a99b) by [@jcurtis](https://github.com/jcurtis))
+- Fix `onLayout` prop for **TextInput** ([8a073c1d8b](https://github.com/facebook/react-native/commit/8a073c1d8b89305a9a2561a7c33740919730f408) by [@rozele](https://github.com/rozele))
+- Fix ViewPager when using native navigation ([a1295e1707](https://github.com/facebook/react-native/commit/a1295e1707a856b9cd5c3129320d386aa9166310) by [@ruiaraujo](https://github.com/ruiaraujo))
+- Fix localization crash in **DevSettingsActivity** ([427e464bb9](https://github.com/facebook/react-native/commit/427e464bb95e4e0ecc7455e71b5d477014618200) by [@ayc1](https://github.com/ayc1))
+- Fix pinch crash in touch-responsive views ([67c3ad4e6a](https://github.com/facebook/react-native/commit/67c3ad4e6a1847cbac43115b01f72cc5c8932a61) by [@tobycox](https://github.com/tobycox))
+- Fix IllegalStateException thrown in looped timing native animation ([ef9d1fba23](https://github.com/facebook/react-native/commit/ef9d1fba237c08a158c8f32e823f229921e7c052) by [@kmagiera](https://github.com/kmagiera))
+- Workaround android-only js module resolution issue ([c20e0f94fe](https://github.com/facebook/react-native/commit/c20e0f94feb42a71633212114b42c62494fd4ff0) by [@fkgozali](https://github.com/fkgozali))
+- Fix ReadableNativeMap.toHashMap() for nested maps and arrays ([15fa2250fd](https://github.com/facebook/react-native/commit/15fa2250fdd0865ce1d0c6ac13b817e7b2c7757a) by [@esamelson](https://github.com/esamelson))
+- Fix Android Sanity Buck version check ([e0573225d5](https://github.com/facebook/react-native/commit/e0573225d5fe28e5ad61690eda3060289bdbf3a4) by [@hramos](https://github.com/hramos))
+- Fixes the connection to Firestore by following whatwg.org's XMLHttpRequest send() method ([d52569c4a1](https://github.com/facebook/react-native/commit/d52569c4a1b6bd19792e4bda23e3a8c3ac4ad8df) by [@samsafay](https://github.com/samsafay))
+- `invertStickyHeaders` can now be set from **SectionList** or **FlatList** ([dd479a9377](https://github.com/facebook/react-native/commit/dd479a93772c3a52561fc32ee84b25ce822a30fa) by [@dannycochran](https://github.com/dannycochran))
+
+### Removed: features that have been removed; these are breaking
+
+- Removed various types ([b58e377961](https://github.com/facebook/react-native/commit/b58e377961ddd278bfa36df0e15953f976875de6), [ee26d9bcb0](https://github.com/facebook/react-native/commit/ee26d9bcb0719246efa51af404aa7805404675cc), [d89517d60a](https://github.com/facebook/react-native/commit/d89517d60a8a6cabc9013b603fa3f63a1face6a2), [852084ad45](https://github.com/facebook/react-native/commit/852084ad454565bb856e85f09e098f1a4a0771a6) by [@TheSavior](https://github.com/TheSavior))
+- Deleted `Systrace.swizzleJSON()` ([3e141cb6c9](https://github.com/facebook/react-native/commit/3e141cb6c957143e998bf2926b8fe1aabccbce2d) by [@yungsters](https://github.com/yungsters))
+
+#### Android specific removals
+
+- `ReactInstanceManager#registerAdditionalPackages` has been removed; Create UIManager interface and extract common classes in uimanager/common ([6b45fb2cb1](https://github.com/facebook/react-native/commit/6b45fb2cb1ca44fa7375bc7696bf90a68a85df3c) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific removals
+
+- Remove callFunctionSync experimental APIs ([19a4a7d3cb](https://github.com/facebook/react-native/commit/19a4a7d3cb6d00780ccbbbd7b0062896f64ab24d) by [@danzimm](https://github.com/danzimm))
+
+## v0.54.0
+
+Welcome to the February 2018 release of React Native! This release includes work done by the React Native team and the community in January, and there are some big changes here after the holidays. Thanks for 270 commits from 87 contributors, you all are great! Here are a few highlights from the release:
+
+- Long awaited **Blob** changes: upload, download, fetch locally, and more
+- Sticky headers now work on inverted Lists
+- Update to the newest React, which deprecated some lifecycle methods and added new ones – expect Yellowbox until React Native is updated
+- `Space-evenly` is now there (sorry for the confusion with 0.52's release notes)
+- A lot of under-the-covers work on Yoga, iOS's **Text** and **TextInput**, and a ton of other areas
+- Multiple crash fixes
+
+The changelog is arranged by the customary added, removed, changed, and fixed plus internal; the changes are also organized by platform.
+
+### Added
+
+- ✨ **Blob**s now can be: made from Strings, loaded by File using a FileReader API, uploaded and downloaded via `XMLHttpRequest#fetch`, and fetched on files to a local blob consistently ([be56a3efee](https://github.com/facebook/react-native/commit/be56a3efeefefa6dca816ca5149a3dabfa5164e2) and [854c2330eb](https://github.com/facebook/react-native/commit/854c2330ebe748eb0508bb788685232b6cff0022) by [@satya164](https://github.com/satya164) and [@fkgozali](https://github.com/fkgozali))
+- Dynamic node_module dependencies are now supported ([b5e19adc02](https://github.com/facebook/react-native/commit/b5e19adc02a3293cd3fdbe54cc45adc78f94d325) by [@jeanlauliac](https://github.com/jeanlauliac))
+- Support sticky headers for inverted Lists with `invertStickyHeaders` ([ecaca80d42](https://github.com/facebook/react-native/commit/ecaca80d42b686e4cf91aa4bb0c8fce69eba18bb) by [@janicduplessis](https://github.com/janicduplessis))
+- `space-evenly` is now supported (sorry for the confusion with 0.52 notes) ([b1cdb7d553](https://github.com/facebook/react-native/commit/b1cdb7d553146160f99319f9dbe4083b18db60e4) by [@gedeagas](https://github.com/gedeagas))
+- Platform plugins can participate in RNConfig, `link`, and `unlink` – keep an eye on [react-native-window's use of it](https://github.com/Microsoft/react-native-windows/pull/1601)! ([a40bfa730e](https://github.com/facebook/react-native/commit/a40bfa730e05c68da49e6f217ae0f161dcc7ba98) by [@rozele](https://github.com/rozele))
+- Add `minify` flag to react-native bundle command ([3f969cb1db](https://github.com/facebook/react-native/commit/3f969cb1db3a39dd8a4fd622abbb7e4270a84216) by [@tomduncalf](https://github.com/tomduncalf))
+
+#### VR Specific Additions
+
+- Added **ScrollView** support ([6fa039dab0](https://github.com/facebook/react-native/commit/6fa039dab0b9f738a3cb464aeca378c6210a5747) by [@MartinSherburn](https://github.com/MartinSherburn))
+
+#### Android Specific Additions
+
+- Bundle download progress is now shown like iOS ([d06e143420](https://github.com/facebook/react-native/commit/d06e143420462344ea6fc21c0446db972f747404) by [@janicduplessis](https://github.com/janicduplessis))
+- Add back ability to customise OkHttp client ([22efd95be1](https://github.com/facebook/react-native/commit/22efd95be1f0b236eeaaa8a8e6d01e89771c9543) by [@cdlewis](https://github.com/cdlewis))
+
+#### iOS specific additions
+
+- **ScrollView** now supports smooth bi-directional content loading and takes new prop `maintainVisibleContentPosition` ([cae7179c94](https://github.com/facebook/react-native/commit/cae7179c9459f12b1cb5e1a1d998a9dc45f927dc) and [65184ec6b0](https://github.com/facebook/react-native/commit/65184ec6b0ef2d136c0db239d65e0624efac8a2d) by [@sahrens](https://github.com/sahrens))
+- Allow substituting a default font handler ([a9c684a0ff](https://github.com/facebook/react-native/commit/a9c684a0ff45852087310d5218062acfdab673f7) by [@mmmulani](https://github.com/mmmulani))
+- Add `accessibilityElementsHidden` prop ([31288161e1](https://github.com/facebook/react-native/commit/31288161e188723456fdb336c494f3c8a3f5b0a8) by [@aputinski](https://github.com/aputinski))
+- Add EXTRA_PACKAGER_ARGS extensibility point on `scripts/react-native-xcode.sh` (PR rev [0d4ff1b7ea](https://github.com/facebook/react-native/commit/0d4ff1b7ea768cceca0405c665e322c0d6b5ba20) by [@brunolemos](https://github.com/brunolemos) with landing assists [b8c86b8dec](https://github.com/facebook/react-native/commit/b8c86b8deced01027b609959576ffcf5d2d0f520) and [0d4ff1b7ea](https://github.com/facebook/react-native/commit/0d4ff1b7ea768cceca0405c665e322c0d6b5ba20))
+
+### Removed
+
+- Remove internal `utf8` utility - use the **utf8** package now instead ([431670f908](https://github.com/facebook/react-native/commit/431670f90860936c24260d36fc73e0c5fbf4e02a) by [@mathiasbynens](https://github.com/mathiasbynens))
+
+#### iOS specific removals
+
+- Removed outdated assertion in RCTShadowView related to breaking change in Yoga ([e3ff3cf6cb](https://github.com/facebook/react-native/commit/e3ff3cf6cbc137e315eff6ac8aed43954b3668eb) by [@shergin](https://github.com/shergin))
+
+#### Android specific removals
+
+- Fix an issue when swapping to and from the `visible-password` or `phone-pad` keyboard types. ([164f6b6afd](https://github.com/facebook/react-native/commit/164f6b6afd7e0050d63134fcdc65ec6969ab03a0) by [@BrandonWilliamsCS](https://github.com/BrandonWilliamsCS))
+- Remove redundant config in AndroidManifest.xml ([d7a9ca2893](https://github.com/facebook/react-native/commit/d7a9ca2893fb240c25d1cd1e0778f6b93b1e3ded) by [@gengjiawen](https://github.com/gengjiawen))
+
+#### iOS specific removals
+
+- Delete RCTBatchedBridge ([816d417189](https://github.com/facebook/react-native/commit/816d41718998868f276d83b0c21e17d11ad392a2) by [@mhorowitz](https://github.com/mhorowitz))
+
+### Changed
+
+- Docs clarifications ([7abffc3f8c](https://github.com/facebook/react-native/commit/7abffc3f8ce69fab5bbb4147f9b8bcb85a7d2c38) by [@IgorGanapolsky](https://github.com/IgorGanapolsky))
+
+#### iOS Specific Changes
+
+- ⚡️ **Text** and **TextInput** have been re-implemented from the ground up for performance, flexibility, and reduced technical debt ([2716f53220](https://github.com/facebook/react-native/commit/2716f53220f947c690d5f627286aad51313256a0), [74963eb945](https://github.com/facebook/react-native/commit/74963eb945438a6fd269b5764a6cb251c86deda8), [d7fa81f181](https://github.com/facebook/react-native/commit/d7fa81f18110f0dc0f310a5c066d9a30020ca830), [74963eb945](https://github.com/facebook/react-native/commit/74963eb945438a6fd269b5764a6cb251c86deda8), [6c4ef287ad](https://github.com/facebook/react-native/commit/6c4ef287ad95eb14475a9f512487e5d05949309a), [ebc98840e9](https://github.com/facebook/react-native/commit/ebc98840e93c336e8c9e4a93c78e6ca03591f0ec), [d7fa81f181](https://github.com/facebook/react-native/commit/d7fa81f18110f0dc0f310a5c066d9a30020ca830), [7d1ec7a3dc](https://github.com/facebook/react-native/commit/7d1ec7a3dc66654b13a8e9cb3ddf912e92506f55), [52648326e6](https://github.com/facebook/react-native/commit/52648326e6ac4470eeffc0a56d91bc487bc1eae4), [6bb8617f3a](https://github.com/facebook/react-native/commit/6bb8617f3a2f3f80f89eb00595a621aec35aca83), [5dbb3c586c](https://github.com/facebook/react-native/commit/5dbb3c586c9e8483aa7e6f1edd35ffb12bd4305d), [7e7d00aebe](https://github.com/facebook/react-native/commit/7e7d00aebefd2416f948066c65c739581c6e3f54), [46fd864348](https://github.com/facebook/react-native/commit/46fd8643485b21147c780d22ee8cf751b2dc8750), [9dfa2e7f3c](https://github.com/facebook/react-native/commit/9dfa2e7f3cfa5009f6c54382e90681d99a9c3cb8), [8a882fe6d6](https://github.com/facebook/react-native/commit/8a882fe6d6bb35776551eb8b0cd6892f41cab492), and [0f9fc4b295](https://github.com/facebook/react-native/commit/0f9fc4b2953d52fa1754e786dc5c74bfecbeaaca) by [@shergin](https://github.com/shergin) and [@hovox](https://github.com/hovox))
+- **Image**'s `resizeMode="center"` is now documented and has an example present ([be7037fd8e](https://github.com/facebook/react-native/commit/be7037fd8e1c4b92646caf7a70b9d6d28ef2c30a) by [@motiz88](https://github.com/motiz88))
+- Geolocation API no longer timeouts when `skipPermissionRequests: true` ([5c17db8352](https://github.com/facebook/react-native/commit/5c17db8352abfd94f094deb9b550284ec17f1fcd) by [@ngandhy](https://github.com/ngandhy))
+- Rounding pixels is now done with an algorithm from Yoga rather than React Native, reducing debt and improving performance ([ceb1d1ca5b](https://github.com/facebook/react-native/commit/ceb1d1ca5bc7c04b9d9ad16dcd9583f05b0ef498) and [114c258045](https://github.com/facebook/react-native/commit/114c258045ccca3a4433de206c7983b42d14c03b) by [@shergin](https://github.com/shergin))
+
+#### Android specific changes
+
+- Numerous refactors around bundle handling and the `DevServerHelper` ([644123aa6f](https://github.com/facebook/react-native/commit/644123aa6fc6132125f56b485e5ab3b16f28f666), [e756251413](https://github.com/facebook/react-native/commit/e7562514130f614a9f138c0b855bfe4516150add), [6e44356c9b](https://github.com/facebook/react-native/commit/6e44356c9bb364195280aafc69aae48cdcb2ab84), [1019bda930](https://github.com/facebook/react-native/commit/1019bda930fa4c26fc0006efa023ee2c586705c6), [06d8f96a64](https://github.com/facebook/react-native/commit/06d8f96a64f00a003e34b0c1e93033893173ccc8), [f88c9d6382](https://github.com/facebook/react-native/commit/f88c9d63828e975a9792969e27accd851ead3e86), and [108f9664bf](https://github.com/facebook/react-native/commit/108f9664bffd1a4e0a7b2c2da3dc3810f1b29de2) by [@davidaurelio](https://github.com/davidaurelio))
+
+### Fixed
+
+- Fix JS debugger issues related to CORS ([29f8354c19](https://github.com/facebook/react-native/commit/29f8354c1946a6325e9020b9ef5ee4ccdf0fa51f) by [@njbmartin](https://github.com/njbmartin))
+- Keep the `.gitignore`d files during the `react-native-git-upgrade` process ([7492860ffb](https://github.com/facebook/react-native/commit/7492860ffb3a010ff2273abf45c7414c098bdc37) by [@ncuillery](https://github.com/ncuillery))
+- Fix re-render case on SwipeableRow ([a580a44b0d](https://github.com/facebook/react-native/commit/a580a44b0d51ca7f33a4394b0a22d1c7d2234190))
+- Fix display of syntax error messages when HMR is enabled ([2b80cdf1bb](https://github.com/facebook/react-native/commit/2b80cdf1bba3b756915117139474440c203cbd8d) by [@ide](https://github.com/ide))
+- Add fixtures to metro blacklist in order to let build succeed ([54dc11a5fb](https://github.com/facebook/react-native/commit/54dc11a5fbafaccc9c0a781f1151225909717597) by [@t4deu](https://github.com/t4deu))
+
+#### Android specific fixes
+
+- Don't crash when using decimal `Animated.modulo` values with `useNativeDriver: true` ([6c38972327](https://github.com/facebook/react-native/commit/6c389723274712bc52d6642cc6c1907b5523726d) by [@motiz88](https://github.com/motiz88))
+- Don't crash when receiving unknown websocket IDs ([1a790f8703](https://github.com/facebook/react-native/commit/1a790f8703d44c2322000dbf40a55678ca8a436a) by [@sunweiyang](https://github.com/sunweiyang))
+- Dont crash when `NativeModules.UIManager.showPopupMenu` method calls error callback ([0c18ec5b9c](https://github.com/facebook/react-native/commit/0c18ec5b9c64613dbdcd4be9f80e470e9532483d) by [@dryganets](https://github.com/dryganets))
+- Maintain cursor position when **TextInput**'s `secureTextEntry` changes ([09b43e479e](https://github.com/facebook/react-native/commit/09b43e479e97dfe31910503190b5d081c78e4ea2) by [@jainkuniya](https://github.com/jainkuniya))
+- Race condition fix in Dialogs module ([d5e3f081c6](https://github.com/facebook/react-native/commit/d5e3f081c6b41697533775d378969fcf554c7290) by [@dryganets](https://github.com/dryganets))
+- Fix NPE in Android Switch during measure ([7b1915e74d](https://github.com/facebook/react-native/commit/7b1915e74daa82d0a94e90ff266e9271bc43f4d8) by [@4ndroidev](https://github.com/4ndroidev))
+- Fix initialScrollIndex ([ef596dec49](https://github.com/facebook/react-native/commit/ef596dec49975dd4f8860ad8adcd29dd23e04c14) by [@olegbl](https://github.com/olegbl))
+- Fix redbox style ([f363dfe766](https://github.com/facebook/react-native/commit/f363dfe766244c8fc10eab3d2c4acdd8fc4b576b) by [@ayc1](https://github.com/ayc1))
+- Fix crash due to mishandling of UTF-8 in progressive download. ([9024f56bda](https://github.com/facebook/react-native/commit/9024f56bda4186fbade7bbd1e61f8e0252585c02) by [@dryganets](https://github.com/dryganets))
+- Fix crash because ClassCastException fix: getText() returns CharSequence not Spanned ([46cc4907e3](https://github.com/facebook/react-native/commit/46cc4907e3e49f5c7b1ac0a1088866f2958f43a1) by [@dryganets](https://github.com/dryganets))
+- Fix and re-enable "view flattening" optimizations ([877f1cde2e](https://github.com/facebook/react-native/commit/877f1cde2ebe8f304d6fd0855fc4a874d1d5ee27) by [@mdvacca](https://github.com/mdvacca))
+
+#### iOS specific fixes
+
+- Fix Crash when **CameraRoll** is getting assets from iCloud and no filename is provided ([2ae24361c5](https://github.com/facebook/react-native/commit/2ae24361c5e0fc4aed9a321123bba8ca416a35ff) by [@pentarex](https://github.com/pentarex))
+- Fix Xcode Archive task failing if project path contains whitespace ([8aa568e867](https://github.com/facebook/react-native/commit/8aa568e867bbbe7e23ded3651f23581ff2753323) by [@jevakallio](https://github.com/jevakallio))
+- `react-native link` has been fixed to correctly link iOS and tvOS targets ([a63fd378a4](https://github.com/facebook/react-native/commit/a63fd378a47173cc9f750e9980f18dc12dd7ea51) by [@dlowder-salesforce](https://github.com/dlowder-salesforce))
+- `GLog` fix on case sensitive APFS macOS ([2fef1bafc8](https://github.com/facebook/react-native/commit/2fef1bafc8bee33432486212caf4fef5c659dd37) by [@hovox](https://github.com/hovox))
+- Fixed issue where you cannot launch tvOS app on Apple TV simulator ([afd988f85a](https://github.com/facebook/react-native/commit/afd988f85a8cf0980b5844cb88c1803e41502d03))
+
+### Internal work
+
+- A **massive** amount of Yoga optimizations, cleanups, refactors, and test fixes ([62d01006a1](https://github.com/facebook/react-native/commit/62d01006a125517c8991fa93979aaec6ccc18823), [1475fc4856](https://github.com/facebook/react-native/commit/1475fc4856d366f8ec2027374971ed5aefcdeafa), [9daa17458a](https://github.com/facebook/react-native/commit/9daa17458a5f4ab8ead4d7c29de331f08b1a4a46), [d4517ddb9f](https://github.com/facebook/react-native/commit/d4517ddb9f2ad6d6175cbe6a8be2b819e4aa2c29), [ca91f0e3ac](https://github.com/facebook/react-native/commit/ca91f0e3ac55cb1e7a0fa2399d594a47de80a100), [34b7ec82b5](https://github.com/facebook/react-native/commit/34b7ec82b5d22efbdaa8b74b930d3c4da87414ec), [fda861a889](https://github.com/facebook/react-native/commit/fda861a88914a008b94c12078c9e579a99929643), [9f7cedbe14](https://github.com/facebook/react-native/commit/9f7cedbe14321d24b7aee1ba969b3d23d5c9d204), [ac1c8c265e](https://github.com/facebook/react-native/commit/ac1c8c265e6030c52434f99e882639c67c8c175d), [fcf2c7cf61](https://github.com/facebook/react-native/commit/fcf2c7cf61ca454f10d398d57b78b5b29ed05ae2), [2b27f1aa19](https://github.com/facebook/react-native/commit/2b27f1aa1964eba749876100be1f3ac4c085fa8f), [210ae5b95a](https://github.com/facebook/react-native/commit/210ae5b95a9c94194e95a21fdb93f88ddfdc5ce2), [82088580ab](https://github.com/facebook/react-native/commit/82088580ab17417a51386722f98b83d6cad0a6a0), [7f94bff89a](https://github.com/facebook/react-native/commit/7f94bff89a09547e76b50ae4c96ec59de73a153a), [bd7bf94af9](https://github.com/facebook/react-native/commit/bd7bf94af9ddfc9221ac3f6f62821b7e53e9b0ea), [2fe65b032e](https://github.com/facebook/react-native/commit/2fe65b032e9ec3faf3cef31290372b9face2d3f1), [9658d9f82b](https://github.com/facebook/react-native/commit/9658d9f82ba536c2f39937d61b3954e3dcc6a54e), [ee5c91c031](https://github.com/facebook/react-native/commit/ee5c91c0317b0defbb8da21f7e6d8d3ac8967381), [64d530ba07](https://github.com/facebook/react-native/commit/64d530ba0785af21555d48ddc9e7d561af37db4c), [400a29e151](https://github.com/facebook/react-native/commit/400a29e15134f5264cc55b239bd2a18a107911dd), [f75e21f1ca](https://github.com/facebook/react-native/commit/f75e21f1caf9117ae3eda31c23e286116ebf586c), [528bbacf6b](https://github.com/facebook/react-native/commit/528bbacf6b8a5a62faf4db5bfc8dfe063f0b82a3), [be8e7c6e65](https://github.com/facebook/react-native/commit/be8e7c6e65724d4915862098238506172dbe9657), [d0f7d4d107](https://github.com/facebook/react-native/commit/d0f7d4d107a90fdfbf795d842f4bd4a81290ec62), [4b4959a21c](https://github.com/facebook/react-native/commit/4b4959a21cb1e9e356eab51bfba0f16b76e8ec7f), [fdef3784f0](https://github.com/facebook/react-native/commit/fdef3784f00e8c3233a30aa2e35aaaadaa867489), [831a1bb4b1](https://github.com/facebook/react-native/commit/831a1bb4b1cc201b53685874a9dbdd6c3c1615ad), [2a22d998f8](https://github.com/facebook/react-native/commit/2a22d998f8a7f896db6c0708ba92ed9c9082ee7c), [9f57dedc17](https://github.com/facebook/react-native/commit/9f57dedc1712733ce4a490121138a97917fd3a52), and [ff2658c3de](https://github.com/facebook/react-native/commit/ff2658c3de111ef745d9582c6863ab0d6c90f960) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar), [@passy](https://github.com/passy), [@ryu2](https://github.com/ryu2), and others)
+- 🚧 Lifecycle methods were renamed to be consistent with [React RFC6](https://github.com/reactjs/rfcs/blob/master/text/0006-static-lifecycle-methods.md) – note that there are Yellowbox warnings right now because of this, it's work-in-progress ([6f007e8957](https://github.com/facebook/react-native/commit/6f007e8957c9bf5652b0184cba65f385050a8236) by [@bvaughn](https://github.com/bvaughn))
+- Some autogenerated mystery string files were added ([c7846c4bfb](https://github.com/facebook/react-native/commit/c7846c4bfb5b944714d95382210f83c83da1ac52), [bb6fceac27](https://github.com/facebook/react-native/commit/bb6fceac274422102b347ec7aedb36efd9b701cd), [8bd00a2361](https://github.com/facebook/react-native/commit/8bd00a2361bb39f1bda58a260b7ffd278a05d79d), [faa9519021](https://github.com/facebook/react-native/commit/faa951902161201846f20a4dc55950e8f96cb0ff), [f49f7932d5](https://github.com/facebook/react-native/commit/f49f7932d581fe1f9569fb460196801528cfb591))
+- Improvements to the cli's implementation ([1673c570f9](https://github.com/facebook/react-native/commit/1673c570f984d86e88a3b6b44eb78f4848eb0515), [752427b7b8](https://github.com/facebook/react-native/commit/752427b7b8221bbb8304a158b2dad12b26afd7a5), and [619a8c9f29](https://github.com/facebook/react-native/commit/619a8c9f298356db68f8cd7e5d25e5bcf48bab05) by [@arcanis](https://github.com/arcanis), [@voideanvalue](https://github.com/voideanvalue), and [@rozele](https://github.com/rozele))
+- Measure touch events from nearest "root view" ([a70fdac5bd](https://github.com/facebook/react-native/commit/a70fdac5bdd4500b4ca3074dac26d414bd931fb9) by [@mmmulani](https://github.com/mmmulani))
+- Allow to attach the HMR server to an external http server ([8c6b816caa](https://github.com/facebook/react-native/commit/8c6b816caa908845471460f453f9d761bfba3f3d) by [@rafeca](https://github.com/rafeca))
+- Split folly/Memory out from headers-only targets in Buck ([b8e79a7e8b](https://github.com/facebook/react-native/commit/b8e79a7e8be1f3db1482a849352fda6e23c1c78a) by [@mzlee](https://github.com/mzlee))
+- Code cleanup of **ReactHorizontalScrollView** in Android ([71ec85f24c](https://github.com/facebook/react-native/commit/71ec85f24c3a1007a9e1f036a140cce43b38019f) by [@mdvacca](https://github.com/mdvacca))
+- Always create a debugger websocket connection when in iOS dev builds ([fa334ce464](https://github.com/facebook/react-native/commit/fa334ce464da39625f4e4fbfee259e9dcea31abc) by [@bnham](https://github.com/bnham))
+- Make the React Native HMR client extend from the generic metro HMR client ([9a19867798](https://github.com/facebook/react-native/commit/9a198677989930971912b98487ec68d162636411) by [@rafeca](https://github.com/rafeca))
+- Removed use of xip.io ([40a8434bde](https://github.com/facebook/react-native/commit/40a8434bde855ecae42408ec1240622152432de7) by [@jvranish](https://github.com/jvranish))
+- Fix Buck dependencies ([cec2e80fc2](https://github.com/facebook/react-native/commit/cec2e80fc251e4ea45ce1e446323716a3792390d), [4f6c157250](https://github.com/facebook/react-native/commit/4f6c157250676f07619af2a935bddd8301b50caa) by [@swolchok](https://github.com/swolchok))
+- Fix permissions on test script ([42c410ac84](https://github.com/facebook/react-native/commit/42c410ac84619a3d12a4619e59a0a526a3ebdca9) by [@mzlee](https://github.com/mzlee))
+- Better handling exception in loadScript() ([3fbf7856d9](https://github.com/facebook/react-native/commit/3fbf7856d9acb0909357d6b315388471a6b5a69c))
+- Fix ESLint upgrade "parsing error" ([9d214967d2](https://github.com/facebook/react-native/commit/9d214967d2c8184ce26addec150e392e3b519fcd) by [@zertosh](https://github.com/zertosh))
+- Fixing 🤡 in RCTSurfaceRootShadowView ([5fba82deff](https://github.com/facebook/react-native/commit/5fba82deffde731176e3e118193c212f5d2c2bca) by [@shergin](https://github.com/shergin))
+- Handle invalidation error in RCTObjcExecutor ([493f3e8da5](https://github.com/facebook/react-native/commit/493f3e8da5a112e1b33bfb3e9f51e7a2bd7edc7a) by [@fromcelticpark](https://github.com/fromcelticpark))
+- Check for nullptr when accessing isInspectable method ([70d23e82ad](https://github.com/facebook/react-native/commit/70d23e82ad21a4cfde1ce7c3b1c00fe7c7d5adbd) by [@fromcelticpark](https://github.com/fromcelticpark))
+- Introduce new Fabric API in RNAndroid ([2d35bde101](https://github.com/facebook/react-native/commit/2d35bde10130167018791c1b2fe4fece27cefddc) by [@mdvacca](https://github.com/mdvacca))
+- Fixing Prepack model for latest global.nativeExtensions changes. ([01a58d182a](https://github.com/facebook/react-native/commit/01a58d182abd19c9e089ec38b08ffd4b45e2076c) by [@NTillmann](https://github.com/NTillmann))
+- General code cleanup: unused code and configurations ([e233646d09](https://github.com/facebook/react-native/commit/e233646d095a272091b07c29fa87b206831ad6e3) and [e7010348d8](https://github.com/facebook/react-native/commit/e7010348d8b2f703fcc057c2914bd45ca6238f98) by [@bvaughn](https://github.com/bvaughn) and others)
+- Add support for finding multiple views with NativeIds using a single listener to Android ([f5efc460ad](https://github.com/facebook/react-native/commit/f5efc460ad30cc60a62edd540c3b0f45c67bcda3) by [@axe-fb](https://github.com/axe-fb))
+- Add CountingOutputStream ([a5e135aed6](https://github.com/facebook/react-native/commit/a5e135aed6941772c663adffd67729f7a5026d08) by [@hramos](https://github.com/hramos))
+- Changes from Prettier ([b815eb59be](https://github.com/facebook/react-native/commit/b815eb59bef7bed9825027adc676b8d09db463c6), [e758cb7f39](https://github.com/facebook/react-native/commit/e758cb7f397b37b5621a4e0afcabc1c74443bc06), [bf9cabb03c](https://github.com/facebook/react-native/commit/bf9cabb03c7245930c270a19816545eae1b9007d), and [a5af841d25](https://github.com/facebook/react-native/commit/a5af841d259b6b29d95a9fb346a0ffce9c6efbfe) by [@shergin](https://github.com/shergin))
+- Typos in code ([8ffc16c6e7](https://github.com/facebook/react-native/commit/8ffc16c6e7d25dd434ca3fc7f9ffd6d5917f7bcd) by [@ss18](https://github.com/ss18))
+- Support for inherited events in view managers ([2afe7d4765](https://github.com/facebook/react-native/commit/2afe7d4765ffc0d0c71d233211edd1d21972040e) by [@shergin](https://github.com/shergin))
+- Flow types changes ([3fc33bb54f](https://github.com/facebook/react-native/commit/3fc33bb54fc5dcf7ef696fe245addc320f85a269), [e485cde187](https://github.com/facebook/react-native/commit/e485cde187e4cd92bc821e58047b149a789dd713), [83ed9d170b](https://github.com/facebook/react-native/commit/83ed9d170b8fd750a345fc608ec69db2fe3ca9b2), [52ffa5d13e](https://github.com/facebook/react-native/commit/52ffa5d13ef6fe2752bc8f838dc1c2dfe651bb64), [d37cdd97ae](https://github.com/facebook/react-native/commit/d37cdd97aee4c1bac864cb28b686f2d1a128128e), [6e7fb01c02](https://github.com/facebook/react-native/commit/6e7fb01c02f3e91777c8292389c09a15d24cf800), [d99ba70c49](https://github.com/facebook/react-native/commit/d99ba70c492d3cd15ef6aded3f8712976d251f88), [bcfbdf4fbe](https://github.com/facebook/react-native/commit/bcfbdf4fbec1a05da151a2255f44a87b651965d6), and [a1c479fb3b](https://github.com/facebook/react-native/commit/a1c479fb3be674511131b46f856bc9b197a38cda) by [@alexeylang](https://github.com/alexeylang), [@sahrens](https://github.com/sahrens), [@yungsters](https://github.com/yungsters), and [@zjj010104](https://github.com/zjj010104))
+- Give IInspector a virtual destructor for correct InspectorImpl destruction ([2a3c37f424](https://github.com/facebook/react-native/commit/2a3c37f424a4d1b9f4c5a2960a1cbe3517eac007) by [@toulouse](https://github.com/toulouse))
+- Migrated `SourceCode` and `DeviceInfoModule` out of Native Modules ([47fe52380a](https://github.com/facebook/react-native/commit/47fe52380a232a1c364e21f71e2644a5a3348366) and [429fcc8cab](https://github.com/facebook/react-native/commit/429fcc8cab3ca877275d7deb1040fdff17a414c7))
+- Jest config change as part of bringing back support for the `assetPlugin` option in Metro ([af6450c660](https://github.com/facebook/react-native/commit/af6450c660d3055d9c5c70d200471541a1ce7e12) by [@ide](https://github.com/ide))
+- Nested virtualized lists should receive recordInteration events ([ae2d5b1e68](https://github.com/facebook/react-native/commit/ae2d5b1e68a2207c27ef2f1b533f86c86d6d849b))
+- Upgrade connect dependency ([709ede799c](https://github.com/facebook/react-native/commit/709ede799cc9820acadaf22aa84f0fe6dd2be319) by [@rafeca](https://github.com/rafeca))
+- xplat/js: asyncRequire: redirect async modules to control modules ([5e11b8870a](https://github.com/facebook/react-native/commit/5e11b8870aa855a56cfafa6575aed5e33b272065) by [@jeanlauliac](https://github.com/jeanlauliac))
+- More progress towards split bundle support ([1a1a956831](https://github.com/facebook/react-native/commit/1a1a956831aec93a4fe2c6e2f63f558271fb466b) and [9e34cbda9d](https://github.com/facebook/react-native/commit/9e34cbda9de8f7350cfb02c884fbef2da18e0e3a) by [@fromcelticpark](https://github.com/fromcelticpark))
+- Implement bundle sync status ([88980f2ef7](https://github.com/facebook/react-native/commit/88980f2ef7331aa630ff19e54427cdc3b7510869))
+- Various improvements to RCTSurface and RCTShadowView ([7d9e902d72](https://github.com/facebook/react-native/commit/7d9e902d72e240f54ea01225cc3272698ff70014), [06ebaf2205](https://github.com/facebook/react-native/commit/06ebaf2205f979b6e6595ec7985447a07d25c4d4), [6882132421](https://github.com/facebook/react-native/commit/688213242130536c5d4db8b9aa17dc418372aadf), and [193a2bd4cd](https://github.com/facebook/react-native/commit/193a2bd4cdffbbc79b69c067b31420663dc9b03a) by [@shergin](https://github.com/shergin))
+- Progress towards experimental ReactFabric and FabricUIManager ([b1e5c01483](https://github.com/facebook/react-native/commit/b1e5c01483a69b181c75d242231077cb2f96e846), [fa0ac92b2c](https://github.com/facebook/react-native/commit/fa0ac92b2c9cfc302314ff18325a96354bb1f432), [94dac23583](https://github.com/facebook/react-native/commit/94dac23583dc6b693475769c196c4b51954e74f1) by [@fkgozali](https://github.com/fkgozali))
+- (almost) kill fbjsc ([702b7e877e](https://github.com/facebook/react-native/commit/702b7e877e09afede0dcdc7f8c680be63e942153) by [@michalgr](https://github.com/michalgr))
+- Refactored bridge ReadableNativeMap and ReadableNativeArray to add centralized accesses ([7891805d22](https://github.com/facebook/react-native/commit/7891805d22e3fdc821961ff0ccc5c450c3d625c8), [28be33ac34](https://github.com/facebook/react-native/commit/28be33ac34d9214ffd452f88a4d19468683a6a0d), and [5649aed6d3](https://github.com/facebook/react-native/commit/5649aed6d3223ec49c42416f242249eb0c4fd890))
+- Removed unused core from Image.android.js ([ce3146a6f3](https://github.com/facebook/react-native/commit/ce3146a6f3162141c7dc06d2c91ec291d3756a92) by [@shergin](https://github.com/shergin))
+- Capture StackOverflowExceptions triggered when drawing a ReactViewGroup or ReactRootView and log more debugging information for it ([1aac962378](https://github.com/facebook/react-native/commit/1aac9623789e3d2a428b51ae699d4c340b3afb99) and [4d3519cc6a](https://github.com/facebook/react-native/commit/4d3519cc6af5bb33c6f21d9392b82379780d79dc) by [@mdvacca](https://github.com/mdvacca))
+- `babel-preset-react-native`: only require plugins once ([df6c48cf36](https://github.com/facebook/react-native/commit/df6c48cf36d39a75a6196462d661ce75c6aef104) by [@davidaurelio](https://github.com/davidaurelio))
+- Report module id as string and as double, in case of invalid values are passed to nativeRequire ([8f358a2088](https://github.com/facebook/react-native/commit/8f358a20881b61cf3256fa1e404b86d5f104932d) by [@fromcelticpark](https://github.com/fromcelticpark))
+- More work moving build configurations to Skylark ([d3db764f38](https://github.com/facebook/react-native/commit/d3db764f383fc588a87e0d1e4267b310d6188bc8), [869866cc5c](https://github.com/facebook/react-native/commit/869866cc5c639d8c0257c776368381987a7f7159), [a8c95d2417](https://github.com/facebook/react-native/commit/a8c95d241757fefaa06ff49193975f7c103a6418), and [79a63d040f](https://github.com/facebook/react-native/commit/79a63d040f1346a0e320104fb35da405502aae19) by [@mzlee](https://github.com/mzlee), [@ttsugriy](https://github.com/ttsugriy), and others)
+- `[RCTShadowView isHidden]` was removed ([c19bc79688](https://github.com/facebook/react-native/commit/c19bc7968855e85758df9e1a47dc2a52e69668ed) by [@shergin](https://github.com/shergin))
+- Remove unused `packagerInstance` option and rename it to `server` ([bbbc18c4ee](https://github.com/facebook/react-native/commit/bbbc18c4ee9b13a5aeca10edcb29694db3f15769))
+- The blog has moved to [react-native-website](https://github.com/facebook/react-native-website/tree/master/website/blog) ([e16d67340e](https://github.com/facebook/react-native/commit/e16d67340e0ad1724afeee78f9d820177abbd8b6) by [@hramos](https://github.com/hramos))
+- Remove SoLoaderShim, use SoLoader ([fc6dd78935](https://github.com/facebook/react-native/commit/fc6dd78935a41106aa6a44058c1abb7d0ba0fa24) by [@foghina](https://github.com/foghina))
+- Removed broken link for 'Getting Help' in the README ([b3a306a667](https://github.com/facebook/react-native/commit/b3a306a66709a0ab0ff29151a38eaa3f8f845c1f) by [@rickydam](https://github.com/rickydam))
+- Changed to use boost-for-react-native cocoapod, which speeds up `pod install` a ton; this was in 0.53 originally but had to be re-added ([d40db3a715](https://github.com/facebook/react-native/commit/d40db3a715afaf1cde4a5e231e96e46b2808bbef) by [@CFKevinRef](https://github.com/CFKevinRef))
+- Remove fbobjc's RN copy ([af0c863570](https://github.com/facebook/react-native/commit/af0c8635709b8014c68ce88ebb1e9e94ec56768a))
+- Measure time to create **ReactInstanceManager** ([6224ef5301](https://github.com/facebook/react-native/commit/6224ef5301d67266b28c77e5e46816f319122f38) by [@alexeylang](https://github.com/alexeylang))
+- Upgrade create-react-class to v15.6.3 ([74f386633d](https://github.com/facebook/react-native/commit/74f386633d5e123b2ea73b4773d0ee7d83832fb5) by [@bvaughn](https://github.com/bvaughn))
+- Upgrade react-devtools to v3.1.0 ([8235a49a33](https://github.com/facebook/react-native/commit/8235a49a33cc8e84cd4ba1cc15bc09eed6712b4c) by [@bvaughn](https://github.com/bvaughn))
+- Upgrade flow to v0.65.0 ([7aba456b04](https://github.com/facebook/react-native/commit/7aba456b04ff6a4e4721bcf1064f22a8a87f90c7) and [298f3bb69a](https://github.com/facebook/react-native/commit/298f3bb69abecdcd83adb64e043a2974bd52b1ab) by [@avikchaudhuri](https://github.com/avikchaudhuri) and [@mroch](https://github.com/mroch))
+- Upgrade Jest to v22.2.1 ([46f4d3e1bc](https://github.com/facebook/react-native/commit/46f4d3e1bc9340009c53f366ebd98600c485c993) and [24e521c063](https://github.com/facebook/react-native/commit/24e521c063035e470587bb279976a955ff03717a) by [@mjesun](https://github.com/mjesun))
+- Upgrade ESLint to v4.17.0 (plus update related deps) ([bba19e846e](https://github.com/facebook/react-native/commit/bba19e846e377241826475906f642264409a3990) by [@zertosh](https://github.com/zertosh))
+- Upgrade React to v16.3.0-alpha.1 ([03d7b2aa0e](https://github.com/facebook/react-native/commit/03d7b2aa0e7f239c78b6fe3a96c0ddf3de00a58b) and [5e80d95e03](https://github.com/facebook/react-native/commit/5e80d95e034259af8c41b50756a623756cc81a77) by [@grabbou](https://github.com/grabbou) and [@hramos](https://github.com/hramos))
+- Synced React and ReactFabric render ([c7ed03a95c](https://github.com/facebook/react-native/commit/c7ed03a95c8c372c7631c11e0778cf9753afdabc), [13829751b1](https://github.com/facebook/react-native/commit/13829751b11330f8e1400c5c70c59c49ac2f091f), and [d676746f14](https://github.com/facebook/react-native/commit/d676746f14fb6d714d2576871655b13c005480e7) by [@bvaughn](https://github.com/bvaughn))
+- Upgrade metro to v0.26.0 ([9e6f3b8aff](https://github.com/facebook/react-native/commit/9e6f3b8aff7572f5e9008a2641c70846da0817bb), [ce50f25d22](https://github.com/facebook/react-native/commit/ce50f25d22d56f24bdb7d80a3f9a279863d5dc2a), [e9b83e608e](https://github.com/facebook/react-native/commit/e9b83e608e8487ef8fcbfc956a52bfa7ee1d727f), [2fe7483c36](https://github.com/facebook/react-native/commit/2fe7483c36b10146f737f0a84799c2eb01aaba79), [0f96ebd93b](https://github.com/facebook/react-native/commit/0f96ebd93b634ec3fb0e6036a4960bb4af167e7b), [0de470ec19](https://github.com/facebook/react-native/commit/0de470ec19f2b9f3f4f3ab3dd4322c0f0ece2868), [e8893a021f](https://github.com/facebook/react-native/commit/e8893a021f60ffeea27443998b1716e9a1963d64), and [b1d8af48ae](https://github.com/facebook/react-native/commit/b1d8af48ae251f57bdcd55f89d8fc62aa9eca872) by [@rafeca](https://github.com/rafeca) and [@grabbou](https://github.com/grabbou))
+- Add Context to Redbox report api ([e3c27f585a](https://github.com/facebook/react-native/commit/e3c27f585aaeb685e86250f45fc790c06932af0d) by [@ayc1](https://github.com/ayc1))
+- GitHub bot commands have been disabled in the short term ([b973fe45bd](https://github.com/facebook/react-native/commit/b973fe45bdbc84e12fd0a3afbd6fdd327bcb9d02) by [@hramos](https://github.com/hramos))
+- Various CI configuration changes ([17bd6c8e84](https://github.com/facebook/react-native/commit/17bd6c8e84d9f5d42767a6f42a9a2cf812aa778b), [51b6749c07](https://github.com/facebook/react-native/commit/51b6749c075bb87a340096a0dc06cd6cf9a19907), [a2f3ba864e](https://github.com/facebook/react-native/commit/a2f3ba864ed17ca32e71f15724a8ebf2b1e640c1), [2ef9b7f2da](https://github.com/facebook/react-native/commit/2ef9b7f2da5b875ac1a4fee0ade3cc16ad96772a), [40b17926bb](https://github.com/facebook/react-native/commit/40b17926bb2c724f1580b2eb0c30a37f5d48030a), [613afbab7f](https://github.com/facebook/react-native/commit/613afbab7f30748ba767b055f23d0d294562805f), [da8bec9f8b](https://github.com/facebook/react-native/commit/da8bec9f8b62b46e58e0e98413aa915ece05b71b), [fa11faecb6](https://github.com/facebook/react-native/commit/fa11faecb69f385a5c0aba60f4039612e46b87f3), [f50af7f8a4](https://github.com/facebook/react-native/commit/f50af7f8a48e9cae2cb512962870d5692da5aaf2), [9227ba73ab](https://github.com/facebook/react-native/commit/9227ba73ab8c2b8b8ce4086b5f4667a8a55cdcfa), [365a4d4b43](https://github.com/facebook/react-native/commit/365a4d4b4315d4ca7a0e1236012b763d7e5bb1fd), [b58d848d9c](https://github.com/facebook/react-native/commit/b58d848d9cf78d755fe38392e26826ed481175cd), [c8e98bbaf5](https://github.com/facebook/react-native/commit/c8e98bbaf58b7a7f866e831982355b78dfa43b9d), [f5975a97ad](https://github.com/facebook/react-native/commit/f5975a97adcf3ae9c2988d7e267947a84ab60cee), and [605a6e4031](https://github.com/facebook/react-native/commit/605a6e4031fc9b63edbb9120ffacf7b045dc9db8) by [@hramos](https://github.com/hramos), [@grabbou](https://github.com/grabbou), and [@dryganets](https://github.com/dryganets))
+- Restore copyright header ([4f883bd0bc](https://github.com/facebook/react-native/commit/4f883bd0bcdc015e2cf70bcc29bbe05fd5b8a40b) by [@hramos](https://github.com/hramos))
+- Trim docs that are already present in the open source docs site ([28d60b68ad](https://github.com/facebook/react-native/commit/28d60b68ad7bc5b7ebda6b720981feacd3bde337) by [@hramos](https://github.com/hramos))
+- Fix obsolete instructions about editing docs ([2f46712074](https://github.com/facebook/react-native/commit/2f46712074d187f5456723499e6885bf0941cfbc) by [@ExplodingCabbage](https://github.com/ExplodingCabbage))
+- Fix links to beginner friendly issues ([c355a34de1](https://github.com/facebook/react-native/commit/c355a34de107befd26bc495272b91c11957f3fd0) by [@hotchemi](https://github.com/hotchemi))
+- Typos in comments and log messages ([d2c569795c](https://github.com/facebook/react-native/commit/d2c569795ca07b6b7c0227cfc6d0b3bf5dd23b99) by [@ss18](https://github.com/ss18))
+- Don't run the Danger CI tool through Flow ([1ea3065feb](https://github.com/facebook/react-native/commit/1ea3065feb265bef738bd53e835567d595266725) by [@hramos](https://github.com/hramos))
+- Namespace custom ESLint rules through eslint-plugin-lint ([488b6825c5](https://github.com/facebook/react-native/commit/488b6825c5fb4ec68a8b7315559c4d34e012de12) by [@zertosh](https://github.com/zertosh))
+
+- ... and now we're at 0.54 🎉 ([67e67ec83c](https://github.com/facebook/react-native/commit/67e67ec83ce83d4a1a38bc29dd52bf5c28723752), [21dd3dd296](https://github.com/facebook/react-native/commit/21dd3dd296989f4de2d4e9b1ba0df88ea2d32413), [49e35bd939](https://github.com/facebook/react-native/commit/49e35bd9399716a2734e824bab14faf1683cdfdd), [829f675b8b](https://github.com/facebook/react-native/commit/829f675b8b4abae696151e404552af515a2da1ce), and [294d95a236](https://github.com/facebook/react-native/commit/294d95a23687b2e3155fe4ae1bc5e4a649e6b014) by [@grabbou](https://github.com/grabbou) and [@hramos](https://github.com/hramos))
+
+## v0.53.0
+
+Welcome to the January 2018 release of React Native. The CLI now supports `--port` for both platforms, a few components were made to support consistent props across both platforms, and various fixes were made. There was a lot of under-the-cover work done with more test improvements and dependency updates. 118 commits were made by 43 contributors 🎉.
+
+### Added
+
+- ✨ **Keyboard** events now include `easing` and `duration` ([4d33080f0f](https://github.com/facebook/react-native/commit/4d33080f0fa7b2eb7b0e9ff7bbd50c222f461786) by [@sahrens](https://github.com/sahrens))
+
+#### iOS exclusive additions
+
+- `react-native run-ios` now supports the `--port` argument for metro ([33d710e8c5](https://github.com/facebook/react-native/commit/33d710e8c58ef1dc69816a59ac1cf390894e7cb9))
+
+#### Android exclusive additions
+
+- On Android, **ScrollView** now takes `snapToInterval` like iOS ([ddd65f1ba9](https://github.com/facebook/react-native/commit/ddd65f1ba9cca945313d116c1dcf75f3a0556099) and [b2848a54b0](https://github.com/facebook/react-native/commit/b2848a54b05470b3e258c935dd33b8c11a31b3c3) )
+- On Android, **TextInput** now takes `onKeyPress` like iOS ([c9ff0bc212](https://github.com/facebook/react-native/commit/c9ff0bc212b680232f7379fba7b9332927075c3c) by [@joshyhargreaves](https://github.com/joshyhargreaves))
+
+### Changed
+
+- ⬆️ Metro to v0.24.2 ([2e008bc464](https://github.com/facebook/react-native/commit/2e008bc464f94df013794d3da6e9d4e4722151a0) and [0b5e8b4852](https://github.com/facebook/react-native/commit/0b5e8b485229957086d416c307f07c75a4139ffa) by [@rafeca](https://github.com/rafeca))
+- ⬆️ Flow to v0.63 ([6b95c4fb14](https://github.com/facebook/react-native/commit/6b95c4fb142a7015b2afca50cc19eec0b8913d8c) by [@gabelevi](https://github.com/gabelevi))
+- ⬆️ Danger to v2.0 ([b750e3b21b](https://github.com/facebook/react-native/commit/b750e3b21bc5c135773e8de53c5663bdf6266951) by [@hramos](https://github.com/hramos))
+- ⬆️ Jest to v22.0.0 ([4803419dc8](https://github.com/facebook/react-native/commit/4803419dc8406b6892f20cdfb448a01c16ad4338) by [@mjesun](https://github.com/mjesun))
+- 💄 Bundler is now called Metro Bundler in the terminal ([654d7595fe](https://github.com/facebook/react-native/commit/654d7595fe5766667c015307129e75d8986482e1) by [@edcs](https://github.com/edcs))
+- 📝 Update getting started url on Android CLI ([6661633390](https://github.com/facebook/react-native/commit/6661633390276f707faa60509b2805a83929e747))
+- 🐳 Dockerfile uses newest Android SDK, Buck, and new Docker tags have been pushed ([4fbfbe6bb0](https://github.com/facebook/react-native/commit/4fbfbe6bb0e0eaaf12ec713888bf2c6a347f0f96) and [c547f783c4](https://github.com/facebook/react-native/commit/c547f783c440019a4a87ba55b668b3af5ff8fc91) by [@hramos](https://github.com/hramos))
+- 📝 Update repo docs to use HTTPS ([33a2e533b7](https://github.com/facebook/react-native/commit/33a2e533b76d35c1b9fb32e926f7c2c27cb616e9) by [@him2him2](https://github.com/him2him2))
+- 🎨 Make **ScrollResponder** follow code style ([45e6fcdba0](https://github.com/facebook/react-native/commit/45e6fcdba089900555faa63fe8e37b4bd4a7700a) by [@TheSavior](https://github.com/TheSavior))
+- **VirtualizedList** now requires a windowSize greater than 0 ([3559e42c55](https://github.com/facebook/react-native/commit/3559e42c55366bacd9bb5178ecab64f95e9a8ea7))
+- react-devtools works with emulator and real devices now without needing to tweak the devServer value ([fa574c6092](https://github.com/facebook/react-native/commit/fa574c60920588e29d7b642e547e240ac8655e66) by [@jhen0409](https://github.com/jhen0409))
+- 📝 Clarify use of Flow props types in react-native-cli's template project ([9b147a53d1](https://github.com/facebook/react-native/commit/9b147a53d1ab1e14d7ef5b436f1e140a28a5d6a3) by [@hramos](https://github.com/hramos))
+- 📝 Add docs for `isInspectable` ([59c7967627](https://github.com/facebook/react-native/commit/59c79676277abaaaf61388309429c77164c3de4b) by [@bnham](https://github.com/bnham))
+- ✅ More Flow improvements (**Text**, **SectionList**, and others) ([f71f4e7906](https://github.com/facebook/react-native/commit/f71f4e7906648766e1a5b630abbad8935daef955), [632f1202ab](https://github.com/facebook/react-native/commit/632f1202ab3f9dd300a53f096bc15325e0d8f6c1), and [a8391bde7d](https://github.com/facebook/react-native/commit/a8391bde7d757d01521a6d12170fb9090c17a6a0) by [@yungsters](https://github.com/yungsters), [@samwgoldman](https://github.com/samwgoldman), and others)
+- Various code cleanup to satisfy linting errors and standards ([b0319f3293](https://github.com/facebook/react-native/commit/b0319f3293b553c105b813dd12bff7d55940e60b), [dd4611721d](https://github.com/facebook/react-native/commit/dd4611721d0ad49ceaf4514df1b47cf2753b9ae6), and [7f58189605](https://github.com/facebook/react-native/commit/7f5818960596a2a18b7d427fd23d46396c05bee5) by [@ayc1](https://github.com/ayc1), [@grabbou](https://github.com/grabbou), and [@ide](https://github.com/ide))
+
+#### iOS exclusive changes
+
+- 🔥⚡️ iOS UI Manager cleanup and optimizations ([0ec1017660](https://github.com/facebook/react-native/commit/0ec1017660602d6b3ae84b4d7a444cbd49ba0d53), [0ae4c47daa](https://github.com/facebook/react-native/commit/0ae4c47daa6280d2931d8bbf89612b2f1cb106d4), [2679f3efb6](https://github.com/facebook/react-native/commit/2679f3efb69bc7b0db1840b4ea59ebe791a54dd2),and [d9e5b313bb](https://github.com/facebook/react-native/commit/d9e5b313bb63a1ec0d402a96539c6df29bc72c42) by [@shergin](https://github.com/shergin))
+- If the inspector tries to handle a wrapped event but there is no connection, log a warning rather than a Redbox ([30da2622e2](https://github.com/facebook/react-native/commit/30da2622e222c338421508ce6e5663155fc874ef) by [@bnham](https://github.com/bnham))
+- Various under-the-covers changes around the bridge, RCTShadowView, RCTSurface, and a few others ([c3139d798a](https://github.com/facebook/react-native/commit/c3139d798af633bb81bf0da6df05b3c0beb0ced4), [2789ba016b](https://github.com/facebook/react-native/commit/2789ba016bfddace1407473769e933795333cfab), [b8e60a3ca3](https://github.com/facebook/react-native/commit/b8e60a3ca3314d79e9c38ee8c7995df81a27624c), [099b28006b](https://github.com/facebook/react-native/commit/099b28006b59abb11eae1f27424566b280860b0d), [b263560c73](https://github.com/facebook/react-native/commit/b263560c73af5559fdc3bba411f16c588abbffef), [19a9c5e41d](https://github.com/facebook/react-native/commit/19a9c5e41da0aa6ee28a54772edcb92daa498561), [d3b41e0da3](https://github.com/facebook/react-native/commit/d3b41e0da37c08ab0637d9f70d612e50b6f5e63c), [b2a251948f](https://github.com/facebook/react-native/commit/b2a251948f3309d2b1d0d533fb2fa74d2f8a10b8), [870bc4807a](https://github.com/facebook/react-native/commit/870bc4807a8c3f90498cf4c2ed3c030cb7b43ef9), [176a578238](https://github.com/facebook/react-native/commit/176a578238566ad857c0911e127669f1ee82107d), [c491b22233](https://github.com/facebook/react-native/commit/c491b2223313676bd4900de7a8c70a10051fa9f0), [c75612219e](https://github.com/facebook/react-native/commit/c75612219ef0c99d1ddca0aadf354f20de27608c), and[c01a171ed8](https://github.com/facebook/react-native/commit/c01a171ed881fb91a972ed475011f85697a29341) by [@shergin](https://github.com/shergin))
+- Changed to use _boost-for-react-native_ cocoapod, which speeds up `pod install` a ton ([d40db3a715](https://github.com/facebook/react-native/commit/d40db3a715afaf1cde4a5e231e96e46b2808bbef) by [@CFKevinRef](https://github.com/CFKevinRef))
+
+#### Android exclusive changes
+
+- Include scroll momentum info when there are scroll events from Android ([c49d249fd7](https://github.com/facebook/react-native/commit/c49d249fd7c274f02e6018892992bcd273d6a465) by [@wwalser](https://github.com/wwalser))
+- Yoga's mkfile for Android now uses wildcard instead of manual file addition ([d89901fa60](https://github.com/facebook/react-native/commit/d89901fa6002802dc9d744bfe3e5e712d6a411a1) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+
+### Removed
+
+- **TextInput** no longer has the `autoGrow` prop, since this is platform-default behavior now ([dabb78b127](https://github.com/facebook/react-native/commit/dabb78b1278d922e18b2a84059460689da12578b) by [@shergin](https://github.com/shergin))
+
+#### iOS exclusive removals
+
+- Updates to the bridge in order to enable future rendering optimizations ([d2dc451407](https://github.com/facebook/react-native/commit/d2dc4514077ae868f85d45ccdcc7c69df7b7648b) by [@shergin](https://github.com/shergin))
+
+### Fixed
+
+- Do not set `minify=true` when calculating the list of dependencies for the CLI ([4a1bb8fe8d](https://github.com/facebook/react-native/commit/4a1bb8fe8dfd36ea207c0683d683bb8b22a282a5) by [@rafeca](https://github.com/rafeca))
+- 👷 Update CODEOWNERS now that the docs are in a separate repository ([85ff264445](https://github.com/facebook/react-native/commit/85ff264445aa4b9cf0b91aaca5764bb56caba997) by [@hramos](https://github.com/hramos))
+- Fixed a broken link in react-native-git-upgrade's readme ([bbedf2da9a](https://github.com/facebook/react-native/commit/bbedf2da9a3a091eeb687d43029f7d2450cf2612) by [@Taym95](https://github.com/Taym95))
+- 🤡 Do not use Node 8.x specific Stream.final for FS mocks ([4216cdef13](https://github.com/facebook/react-native/commit/4216cdef13c9ed47b9c746b39a0ddfdaf846d495) by [@hramos](https://github.com/hramos))
+- Fix virtualized cell keys for list headers and footers ([a010a0cebd](https://github.com/facebook/react-native/commit/a010a0cebd4afc0d88336c2c265a5d9dbb19918f))
+- Fix warnings of casting and null pointer handling in Yoga ([a8d4666651](https://github.com/facebook/react-native/commit/a8d46666518944a178e85c179da8047234c2d8fb) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- Fix broken buck failures on master ([4e767013ed](https://github.com/facebook/react-native/commit/4e767013ed73fb89f69f2e59626d6dcf3bb77684) by [@hramos](https://github.com/hramos))
+- **RefreshControl** appears correctly when expected on initial render of a **FlatList** again ([ed5872e2cc](https://github.com/facebook/react-native/commit/ed5872e2cca955ee407e87e37e13c7fed182199a) by [@vonovak](https://github.com/vonovak))
+- Fixed JS debugger CORS issue ([29f8354c19](https://github.com/facebook/react-native/commit/29f8354c1946a6325e9020b9ef5ee4ccdf0fa51f) by [@njbmartin](https://github.com/njbmartin))
+
+#### Android exclusive fixes
+
+- Fix position of dev loading view on Android API < 20 ([7ff6657985](https://github.com/facebook/react-native/commit/7ff6657985a09bd2572615d16403fba3af709859) by [@kmagiera](https://github.com/kmagiera))
+- Fix Modal not disappearing when navigating from inside a Modal to another activity ([e5c2a66897](https://github.com/facebook/react-native/commit/e5c2a66897b9c562c549e63adcf70783ea34c418)
+
+#### iOS exclusive fixes
+
+- Fix regression introduced where layout wouldn't occur in some situations ([46be5bf71c](https://github.com/facebook/react-native/commit/46be5bf71c78d33cda5cb496c475dcfb8e229346) by [@shergin](https://github.com/shergin))
+- Fixed double initial prop applying for newly created views ([0ec1017660](https://github.com/facebook/react-native/commit/0ec1017660602d6b3ae84b4d7a444cbd49ba0d53) by [@shergin](https://github.com/shergin))
+- tvOS build now works again ([3bd89867d6](https://github.com/facebook/react-native/commit/3bd89867d6f23547f07b9b3a569d5a62971004f6) by [@dlowder-salesforce](https://github.com/dlowder-salesforce))
+
+### Other
+
+Below is a list of the remaining, low-level changes that made it into this release of React Native.
+
+- Remove "prepareReact" call from the bridge ([80f9e1f7de](https://github.com/facebook/react-native/commit/80f9e1f7de407ea417cecb04b3ba20b05696b478) and [56a42e57d0](https://github.com/facebook/react-native/commit/56a42e57d05ff609e8fce35dcb5e9db7938db801) by [@fromcelticpark](https://github.com/fromcelticpark))
+- Add explicit componentControllerClass to CKComponent for RCTSurface ([ab972708a8](https://github.com/facebook/react-native/commit/ab972708a8dcc9b37c19843f2fe134928a7c7a3f))
+- Changes to RCTShadowView to increase RCTSurface performance ([f96f9c5fd6](https://github.com/facebook/react-native/commit/f96f9c5fd692000f561e87cba68642ef7daf43e7) by [@shergin](https://github.com/shergin))
+- Designated methods to control dirty propagation ([af226ef949](https://github.com/facebook/react-native/commit/af226ef949f3a21ef68a6e6b9fbd4cc06fa05152) by [@shergin](https://github.com/shergin))
+- Add missing tvOS header ([49cbca7464](https://github.com/facebook/react-native/commit/49cbca7464e27c34105122459ae29cc3b1247513) by [@grabbou](https://github.com/grabbou))
+- On Android, seperate logic to initialize JS from starting the app ([4996b9aeb4](https://github.com/facebook/react-native/commit/4996b9aeb4127892b7579b45927dec14833b8b4d) by [@axe-fb](https://github.com/axe-fb))
+- ♻️ JS linting was cleaned up: removed unused libs, strengthened the rules, removed unneeded rules, prevent disabled tests, and more ([2815ada238](https://github.com/facebook/react-native/commit/2815ada23872fc28dc8dd5a9833962cb73f452eb), [183c316f4c](https://github.com/facebook/react-native/commit/183c316f4c869804b88cffe40614c84ac0a472d0), [9c67e749d8](https://github.com/facebook/react-native/commit/9c67e749d8f63cf14ece201ec19eee4676f96a85), [79902f99b8](https://github.com/facebook/react-native/commit/79902f99b81f538042b38a857182c2e5adbfd006), [9a36872f0c](https://github.com/facebook/react-native/commit/9a36872f0c7ba03a92fabf65e4d659d6861ea786), [67a3c42d1a](https://github.com/facebook/react-native/commit/67a3c42d1a29b6fa1375f7445d1c9b4429939bae), [b826596700](https://github.com/facebook/react-native/commit/b82659670041d0e472f68c0a14b3ef5b962db09b), [a1a0a69546](https://github.com/facebook/react-native/commit/a1a0a6954635141ce6c167816b67674aa5c31062), and [11a495cb32](https://github.com/facebook/react-native/commit/11a495cb3235ebbc2ad890e92ec612fd5316bffb) by [@TheSavior](https://github.com/TheSavior))
+- 👷 Separate JS lint and flow checks from tests ([5ea5683d01](https://github.com/facebook/react-native/commit/5ea5683d01487b49c814fca6e11a818b9a777239) by [@hramos](https://github.com/hramos))
+- 👷 Fix Buck in build config to enable CI ([796122d8f3](https://github.com/facebook/react-native/commit/796122d8f3b825c0bf0c138c662f3477f8bab123), [7c3a61f3b6](https://github.com/facebook/react-native/commit/7c3a61f3b610e219fd798eccd330deb9a2471253), [82b123e744](https://github.com/facebook/react-native/commit/82b123e744b87cc59c96b4e82af9ed03981b4f42) by [@grabbou](https://github.com/grabbou))
+- ♻️ Various refactoring within the YGNode implementation ([28968e2c0b](https://github.com/facebook/react-native/commit/28968e2c0ba23db9af12b47681f165d29d0f132d), [0a9e652bdd](https://github.com/facebook/react-native/commit/0a9e652bdd031d53d712e2e9610fb608bfa54ff1), [6627d7723c](https://github.com/facebook/react-native/commit/6627d7723c2df244ccc8a462bd98499cc11da2e2), and [d85da86dc7](https://github.com/facebook/react-native/commit/d85da86dc7c7833e71099c6a621547bc3cec8d4f), [a163f70f87](https://github.com/facebook/react-native/commit/a163f70f875dff4428eebd989bfaf28dda6551bf) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- Fix ReactLegacy and delete RCTViewControllerProtocol ([a0ff8c7706](https://github.com/facebook/react-native/commit/a0ff8c7706fc37bdce78c9ec51da320f78d16a24) by [@javache](https://github.com/javache))
+- Define internal FB macro for OSS builds; remove some unused definitions ([077c3ab349](https://github.com/facebook/react-native/commit/077c3ab34952f4b442abdd7a47ab54ca4bd0ba2e) and ([a6a66c5b39](https://github.com/facebook/react-native/commit/a6a66c5b3943443e4016f32407e4a4f8d707e387) by [@ttsugriy](https://github.com/ttsugriy))
+- RNTester: Relax Bridge Release Check ([e3c6f38773](https://github.com/facebook/react-native/commit/e3c6f38773d0b578794726033d4fabbfa48d1c7b) by [@yungsters](https://github.com/yungsters))
+- Remove embeddedBundleURL from the asset resolver ([489b98bf10](https://github.com/facebook/react-native/commit/489b98bf1006818ba985e93478a088c0e1e1aae7))
+- Do not set FB_ASSERTION_ENABLED ([4cdbb77c33](https://github.com/facebook/react-native/commit/4cdbb77c3363e120877ff66f39cdcf51d668df7d) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- JSBigString to MAP_PRIVATE not MAP_SHARED ([f9f40cd3e4](https://github.com/facebook/react-native/commit/f9f40cd3e486314cd75bda8722147f2f0f5b8fe1))
+- Fixed black ARTSurfaceView ([5c8481e836](https://github.com/facebook/react-native/commit/5c8481e83646b9cae482a803c878fb007f370035) by [@shergin](https://github.com/shergin))
+- Kill orphaned marker end in JSCExecutor ([6ad1f0957a](https://github.com/facebook/react-native/commit/6ad1f0957a020cb57b177ab015c17aa883e1f0ad) by [@michalgr](https://github.com/michalgr))
+- Make YGNode as c++ struct with properties exposed through accessors ([f1055bcac8](https://github.com/facebook/react-native/commit/f1055bcac8b580c40f9646687e7a950fb6864c74) by [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- 🔖 ...and now we're at 0.53.0-rc.0 🎁 ([0b996577e3](https://github.com/facebook/react-native/commit/0b996577e321d439aa6ede4c7400ea76efb7816a) by [@grabbou](https://github.com/grabbou))
+
+## v0.52.0
+
+> This changelog has been prepared by Ryan Turner (@turnrye) - thank you for
+> your time and making such a detailed changelog 🔥🔥
+
+This release had a lot of work around the bundler and packager, a ton of
+bugfixes, and updates to many of React Native's dependencies. Lots of
+under-the-hood work was done as well to improve the layout engine. Happy new
+year!
+
+> If you would like to help us with the next release changelog, please contact
+> @grabbou
+
+### Added
+
+- Prettier has a config and an npm script; try it out with `npm run prettier`
+  ([164591218f](https://github.com/facebook/react-native/commit/164591218f5fab7d386e057e0d51b9c1fe30b0a9) by
+  [@janicduplessis](https://github.com/janicduplessis))
+- **Debug JS in Nuclide** is now an option in the dev menu 🐜
+  ([7c7108a1e8](https://github.com/facebook/react-native/commit/7c7108a1e8e9354d8aeb2f0ff712561d8aa19408) and
+  [de424cc291](https://github.com/facebook/react-native/commit/de424cc291523a8f4e3d33059b725d5b85f31611))
+- Introducing **PlatformOS** – it looks a lot like **Platform**, but with a
+  simplified API
+  ([5ee27ff755](https://github.com/facebook/react-native/commit/5ee27ff7552a5707a6e6bdb3f23e7378f978a2f7) by
+  [@brishin](https://github.com/brishin))
+- New experimental _RCTSurface_: measure and layout a UI in a thread-safe and
+  synchronous manner
+  ([be6976d6fa](https://github.com/facebook/react-native/commit/be6976d6faa333311405bd6184300bbd8da6cbca),
+  [7df58e23a3](https://github.com/facebook/react-native/commit/7df58e23a3a265b0df0edc753cc79a153fec90d8),
+  [e75bd87a76](https://github.com/facebook/react-native/commit/e75bd87a76726a9b075061ef76156705b3c1e872),
+  [aa83b5a0ca](https://github.com/facebook/react-native/commit/aa83b5a0ca30736b2800833bcc6149dcbe8436fa),
+  [081f7d14ad](https://github.com/facebook/react-native/commit/081f7d14aded077a7627404e5e2d48163a5707ad),
+  [da17b237e1](https://github.com/facebook/react-native/commit/da17b237e15e20adf20d6b917349d6389efb17fd),
+  [e9e0cd7ab8](https://github.com/facebook/react-native/commit/e9e0cd7ab86c98bcd3201e306e96532685d8de1d),
+  [43b2509320](https://github.com/facebook/react-native/commit/43b25093202472c5af07d4f393d831e4d1484b07),
+  [ba6075120a](https://github.com/facebook/react-native/commit/ba6075120af9c0086b449aafa7420913fa58f746),
+  [d71d28f094](https://github.com/facebook/react-native/commit/d71d28f09495a1e2802db169e2d0cd1ec5bd5973),
+  [4d37cf0fbc](https://github.com/facebook/react-native/commit/4d37cf0fbcc529ad75eb4a04a185036a887e42c2), and
+  [d021dd25da](https://github.com/facebook/react-native/commit/d021dd25da92d84c62c9a77049bb798e3b891447) by
+  [@maicki](https://github.com/maicki) and
+  [@shergin](https://github.com/shergin))
+- Experimental **SwipeableRow**'s datasource now has a `getLastRowID` method
+  ([d79e245d19](https://github.com/facebook/react-native/commit/d79e245d19f7f246322bc657b407198b15cb1b98))
+- [React Native monthly
+  #5](https://reactnative.dev/blog/2017/11/06/react-native-monthly-5.html)
+  was added ([3c5a55ddc2](https://github.com/facebook/react-native/commit/3c5a55ddc21197cfa013dc6222e398138759b5d3)
+  by [@tenodi](https://github.com/tenodi))
+
+#### iOS Specific
+
+- **DatePickerIOS** now takes **locale** 🌍
+  ([fd9c3618fc](https://github.com/facebook/react-native/commit/fd9c3618fcd3dc80f9abf3da779627704c7350e4) by
+  [@RobertPaul01](https://github.com/RobertPaul01))
+- **CameraRoll** can now **deletePhotos** 📸
+  ([554e873f58](https://github.com/facebook/react-native/commit/554e873f585ea05ce1e9fe4ff71173c47b3c259c) by
+  [@fxfactorial](https://github.com/fxfactorial))
+- There's now an API to specify a different directory for iOS image assets
+  ([8f9b291224](https://github.com/facebook/react-native/commit/8f9b291224d1ca57a5f90200ec4687abb4706f4b))
+- Support for [custom accessibility
+  actions](https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction)
+  on iOS ([36ad813899](https://github.com/facebook/react-native/commit/36ad8138997c195b8728906ceb51bd31338b6a24) by
+  [@ericdavmsft](https://github.com/ericdavmsft))
+
+### Deprecated
+
+- Ignore YellowBox warnings with `YellowBox.ignoreWarnings([...])` rather than
+  `console.ignoredYellowBox = [...]`
+  ([26038f50bb](https://github.com/facebook/react-native/commit/26038f50bb003eec3770e2b66d428fbb739f1ce2) by
+  [@wli](https://github.com/wli))
+
+### Changed
+
+- Metro-bundler is now metro, and it's v0.24.1; there were some performance
+  increases at the cost of a few breaking changes; improved tests of the bundler
+  too ([0bbd9f042a](https://github.com/facebook/react-native/commit/0bbd9f042a8ad7c7be094bd7636ca767c6f7b231),
+  [a2fd3fcef8](https://github.com/facebook/react-native/commit/a2fd3fcef84e916b36ef7753dff69b7c1b307890),
+  [503b4521a6](https://github.com/facebook/react-native/commit/503b4521a6ce6bb2282631df616440fa71416d25),
+  [654fed46f4](https://github.com/facebook/react-native/commit/654fed46f49b5002096ff55c2e8523af48b22c24),
+  [0091496891](https://github.com/facebook/react-native/commit/009149689119e180415f8138b2827366768fc1d3),
+  [aba148f733](https://github.com/facebook/react-native/commit/aba148f733e85a88d4be07b3b8ca37c43cf6a51e),
+  [3d5dc872a4](https://github.com/facebook/react-native/commit/3d5dc872a4eefa1557554b3b338227959d166370),
+  [48019a0c2a](https://github.com/facebook/react-native/commit/48019a0c2a9a45d51a4faab1d5bef52949f4b5c5),
+  [ecec4319c4](https://github.com/facebook/react-native/commit/ecec4319c4fda9bebc90216d5340442b2a5725df),
+  [f4d627c8fa](https://github.com/facebook/react-native/commit/f4d627c8faeb034eac8053fd253f17e42b85f2f2),
+  [f871d25eb4](https://github.com/facebook/react-native/commit/f871d25eb48dca224bb3796aa9cb5d714292662f),
+  [a7b231a327](https://github.com/facebook/react-native/commit/a7b231a3278e4fc2d7e4269ce106f22712f2e5a8),
+  [830b431453](https://github.com/facebook/react-native/commit/830b43145381e6e322569450affddba73f7dc2d1),
+  [29dafa1a86](https://github.com/facebook/react-native/commit/29dafa1a8644f7a537499074df334bab8da4ad00),
+  [7a5d5a4035](https://github.com/facebook/react-native/commit/7a5d5a40357bedfb24a01ff1160481656fda9554),
+  [4cd685a1e0](https://github.com/facebook/react-native/commit/4cd685a1e0a2ae07df02702dbf4702e407773df5),
+  [d326c86051](https://github.com/facebook/react-native/commit/d326c860519c5165c6e86fb4f3ce378ed055157c),
+  [231c7a0304](https://github.com/facebook/react-native/commit/231c7a03043b9fb3c4bf81251ad099bab0ba05c2),
+  [7d969a05de](https://github.com/facebook/react-native/commit/7d969a05de6a45543bc31a3b982828865bc57cdb),
+  [ae517307e7](https://github.com/facebook/react-native/commit/ae517307e76d977f813e5b880f3b7f42a20f461d),
+  [f587f8d51d](https://github.com/facebook/react-native/commit/f587f8d51dc57e6b9eb66edfbe58ee520a6cc568),
+  [fbf0aed3ac](https://github.com/facebook/react-native/commit/fbf0aed3acc056b5fd069af75fcae14246439a48),
+  [e9393f694d](https://github.com/facebook/react-native/commit/e9393f694d8f0d0190a3576fd65a65f747f8cce2), and
+  [968c88d141](https://github.com/facebook/react-native/commit/968c88d1410eac5b793345bacce6052f518fda8f) by
+  [@cpojer](https://github.com/cpojer), [@hramos](https://github.com/hramos),
+  [@jeanlauliac](https://github.com/jeanlauliac), and
+  [@rafeca](https://github.com/rafeca)
+  )
+- React is now v16.2.0, and it took react-test-renderer along with it; [now with
+  more
+  fragments!](https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html)
+  🎉 ([c7f37074ac](https://github.com/facebook/react-native/commit/c7f37074ac89f7e568ca26a6bad3bdb02812c39f) and
+  [cd938d731c](https://github.com/facebook/react-native/commit/cd938d731c7531a683c050cd829a543d145e3dc1) by
+  [@bvaughn](https://github.com/bvaughn))
+- Jest is now v21.3.0-beta.13
+  ([16bbd908e7](https://github.com/facebook/react-native/commit/16bbd908e72577e7d109397916323a0eeffce8d4) and
+  [ec2ea58e57](https://github.com/facebook/react-native/commit/ec2ea58e57872bfa077d9c9a5e1e8b253c6b37b3) by
+  [@mjesun](https://github.com/mjesun))
+- Flow is now v0.61.0, and there were a ton of Flow fixes/coverage improvements
+  made ([914ae93336](https://github.com/facebook/react-native/commit/914ae9333678df4888e3c72898991c8430625cce),
+  [eb0d6470e5](https://github.com/facebook/react-native/commit/eb0d6470e54663538610a70ab0bae9847eb33673),
+  [c8e72bb8b8](https://github.com/facebook/react-native/commit/c8e72bb8b8317bcdcb4fe2ff85978c7db70f4461),
+  [2d4bedba0f](https://github.com/facebook/react-native/commit/2d4bedba0f6a8f2cfe597a1044822eb635d5e243),
+  [e0202e459f](https://github.com/facebook/react-native/commit/e0202e459fd0181db551d0025ef562d7998186b0),
+  [2be3ae1ff2](https://github.com/facebook/react-native/commit/2be3ae1ff2441c0ee3f2b9255c23dc49ada852fe),
+  [22a1419900](https://github.com/facebook/react-native/commit/22a14199000ea994f24f6fe387ea26647af3c128),
+  [6ae0b344e5](https://github.com/facebook/react-native/commit/6ae0b344e5c221657287d1fc1511be520a6f6e58),
+  [76a2ca4c9c](https://github.com/facebook/react-native/commit/76a2ca4c9c09c9bdf922154c28040138a44ae672),
+  [3259353fce](https://github.com/facebook/react-native/commit/3259353fcec0dd9ea66de750a694c226f99f483d),
+  [e6c1fb7212](https://github.com/facebook/react-native/commit/e6c1fb72128fb13436028c2df9cdccf6ccfccb67),
+  [61d046be3c](https://github.com/facebook/react-native/commit/61d046be3c9b00f6a4d4f492d558a961a6d4210f),
+  [820cfa1f3b](https://github.com/facebook/react-native/commit/820cfa1f3b79406e47cb873773cadafefe0effb1),
+  [240039c6f2](https://github.com/facebook/react-native/commit/240039c6f2d8db700ebc15404b0acc2a49068249),
+  [343c5a97a0](https://github.com/facebook/react-native/commit/343c5a97a013669745cf3938728539001d3076e6),
+  [5f8d8e90c2](https://github.com/facebook/react-native/commit/5f8d8e90c2c43127b8a5d2fc5d18f16185c7a67e), and
+  [da047966e4](https://github.com/facebook/react-native/commit/da047966e4c2064a48e02ff74830c99808d8194b) by
+  [@Ashoat](https://github.com/Ashoat),
+  [@calebmer](https://github.com/calebmer),
+  [@cdlewis](https://github.com/cdlewis),
+  [@deecewan](https://github.com/deecewan),
+  [@grabbou](https://github.com/grabbou),
+  [@jamesisaac](https://github.com/jamesisaac),
+  [@mroch](https://github.com/mroch), [@nmn](https://github.com/nmn),
+  [@nmote](https://github.com/nmote), [@sahrens](https://github.com/sahrens),
+  [@samwgoldman](https://github.com/samwgoldman),
+  [@TheSavior](https://github.com/TheSavior), and others)
+- react-devtools-core is now v3.0.0
+  ([a7d46ea970](https://github.com/facebook/react-native/commit/a7d46ea97012bdcc644e3397bbf60bd3cb37e9eb) by
+  [@rsnara](https://github.com/rsnara))
+- Split out docs to [their own
+  repo](https://github.com/facebook/react-native-website/tree/master/docs) (and
+  a few formatting fixes along the journey) 👋
+  ([2d86618e7e](https://github.com/facebook/react-native/commit/2d86618e7ef477cdfc2ed510c7bc05d41dbfe972),
+  [64d80b13db](https://github.com/facebook/react-native/commit/64d80b13db3dd28bb5d93cbedf511ae8f91e2127),
+  [3362da421c](https://github.com/facebook/react-native/commit/3362da421ce919fc6f4f1bda29b59e2e3bfe02de),
+  [75123c614b](https://github.com/facebook/react-native/commit/75123c614bb5a61c383cdc247230b3a76c76e14d), and
+  [79e24ede40](https://github.com/facebook/react-native/commit/79e24ede40b2508aaa77b8ff3876d3dbf4cfe6d8) by
+  [@hramos](https://github.com/hramos)).
+- **TouchableHighlight** now has a default delayPressOut value of 100; it was
+  also refactored a bit for style
+  ([9a31fa5fd6](https://github.com/facebook/react-native/commit/9a31fa5fd62fa101b2a76c69b56248d7f5ba9876) by
+  [@sahrens](https://github.com/sahrens))
+- When in a dev build, more robustly validate arguments for native methods
+  ([ea2e2c54cb](https://github.com/facebook/react-native/commit/ea2e2c54cb4d1a99b41aaa98eaf51696d34770dd) by
+  [@mhorowitz](https://github.com/mhorowitz))
+- On integration tests, report _all_ errors
+  ([3bcb912786](https://github.com/facebook/react-native/commit/3bcb9127866ef60b3697553e98a3ae279d02290a) by
+  [@sahrens](https://github.com/sahrens))
+- Yoga has less technical debt, thanks to replacing _YGNodeList_ with vectors
+  ([b08a912f11](https://github.com/facebook/react-native/commit/b08a912f11c729f3fe76700c6614f9e6165ae1a1) by
+  [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- Yoga is now cpp, compiled as _c++1y_
+  ([d7ab9496bc](https://github.com/facebook/react-native/commit/d7ab9496bc95f7b720fd6db1ed503af1c461e84d) by
+  [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar))
+- Bundle segments are handled better and used more
+  ([681278947e](https://github.com/facebook/react-native/commit/681278947eb4039a1d7a65f1edfeef25ae055a4f),
+  [a47431ed74](https://github.com/facebook/react-native/commit/a47431ed74f0b7b2a03ca48e84f2243d08ef3bdd),
+  [963c61d4d5](https://github.com/facebook/react-native/commit/963c61d4d546c94b689281ca1f5105ad050e10ff),
+  [b9f21dc2be](https://github.com/facebook/react-native/commit/b9f21dc2be14cd51543e6b2d1e63a861e5f433d1),
+  [f1258181ee](https://github.com/facebook/react-native/commit/f1258181eec84f73651d2fabd0d23764b8990ff8), and
+  [1988ba1d79](https://github.com/facebook/react-native/commit/1988ba1d7967dca04376e7e631e8910e5e79a6a7) by
+  [@fromcelticpark](https://github.com/fromcelticpark) and
+  [@jeanlauliac](https://github.com/jeanlauliac))
+- _packager-worker-for-buck_ has better tests
+  ([7fd5aa84a1](https://github.com/facebook/react-native/commit/7fd5aa84a1ef1744d01e7e877183b1f004216d00) by
+  [@jeanlauliac](https://github.com/jeanlauliac))
+- _RCTUIManager_ has less technical debt
+  ([46be5bf71c](https://github.com/facebook/react-native/commit/46be5bf71c78d33cda5cb496c475dcfb8e229346),
+  [60dc9bed00](https://github.com/facebook/react-native/commit/60dc9bed00cc13652752bf84f83c920ce66d5e39), and
+  [21714fe197](https://github.com/facebook/react-native/commit/21714fe1979ccbd62d665f383625f4ece8cf888e) by
+  [@shergin](https://github.com/shergin))
+- Numerous bridge changes, especially around URL resolution
+  ([e7bd0f056b](https://github.com/facebook/react-native/commit/e7bd0f056bf4edca1f0529d6eed03bbaaaca586a),
+  [260e6d2355](https://github.com/facebook/react-native/commit/260e6d23554a8e7f1743263894c9ca9a0cfbf01e),
+  [4894ac430d](https://github.com/facebook/react-native/commit/4894ac430d6df1118ce48f644fd8cf5bfce6344f),
+  [b983de9c54](https://github.com/facebook/react-native/commit/b983de9c5460e24c95a9a67f02695cd1c5f31bc5),
+  [b0193b098c](https://github.com/facebook/react-native/commit/b0193b098cdbd915bba90e1ab0b695ba44346f44),
+  [ae5ef653cb](https://github.com/facebook/react-native/commit/ae5ef653cbc4c03fe5edb5d4b0002e38cbb6f458), and
+  [1d6ce2311f](https://github.com/facebook/react-native/commit/1d6ce2311f6a51821b33c5473414d70c8bd34425) by
+  [@fromcelticpark](https://github.com/fromcelticpark) and others)
+- Various cleanup and refactoring
+  ([053776338e](https://github.com/facebook/react-native/commit/053776338ea44c31f3671cb4502853da0c88e55a),
+  [0984f29a32](https://github.com/facebook/react-native/commit/0984f29a320ce7e40e8bc2a6c78b080908fa1384),
+  [6c70975689](https://github.com/facebook/react-native/commit/6c70975689d0f0839e6c2db9a9a25c3023f5be7b),
+  [d950dc6a21](https://github.com/facebook/react-native/commit/d950dc6a21c5cc1e736993b2ecc16abae086389e),
+  [70c359000a](https://github.com/facebook/react-native/commit/70c359000a2df091c3939f4c19db6024af992d43),
+  [cfa2bbf2f6](https://github.com/facebook/react-native/commit/cfa2bbf2f692d0bc5600d7e369a9a91272930ca6), and
+  [850efa8650](https://github.com/facebook/react-native/commit/850efa86508b19d800ff8cbdc725402c006db1a2) by
+  [@bnham](https://github.com/bnham),
+  [@priteshrnandgaonkar](https://github.com/priteshrnandgaonkar), and others)
+- Jest preprocessing now uses the AST from metro
+  ([2ae255a6ea](https://github.com/facebook/react-native/commit/2ae255a6eaf820992bdf19799bb4403f3bbdcd5b) and
+  [d5b59517c2](https://github.com/facebook/react-native/commit/d5b59517c274874d7ce21e5c26d28b42ae389723) by
+  [@rafeca](https://github.com/rafeca))
+- `renderApplication()` now supports async initial render
+  ([1b22d49ae8](https://github.com/facebook/react-native/commit/1b22d49ae8945680dee4fd01e3fbb78b1e443e01) by
+  [@bvaughn](https://github.com/bvaughn))
+- Welcome [@lwinkyawmyat](https://github.com/lwinkyawmyat) to the React Native
+  GitHub Issue Task Force
+  ([4ebe76d559](https://github.com/facebook/react-native/commit/4ebe76d5598621160ffcf3ea8bc87c3ad1c1a2f8) by
+  [@lwinkyawmyat](https://github.com/lwinkyawmyat))
+
+#### Android exclusive changes
+
+- Native components on Android register lazily rather than via ViewManager
+  ([1b71e03932](https://github.com/facebook/react-native/commit/1b71e03932f44e212b297b2c1e02100b6de74b93))
+- Android debug overlays (like **RedBox**, dev menu, loading) are no longer are
+  system overlays; they're now part of the _currentActivity_
+  ([d19afc73f5](https://github.com/facebook/react-native/commit/d19afc73f5048f81656d0b4424232ce6d69a6368) by
+  [@kmagiera](https://github.com/kmagiera))
+
+#### iOS exclusive changes
+
+- Improve iOS's _accessibilityLabel_ performance by up to 20% 📈
+  ([19b0a65c5e](https://github.com/facebook/react-native/commit/19b0a65c5ecc4f41fea98a1e752785d6dbb6ea05) by
+  [@chendo](https://github.com/chendo))
+
+### Fixed
+
+- Fix `backgroundColor` on **TouchableHighlight**
+  ([5a1171ebfa](https://github.com/facebook/react-native/commit/5a1171ebfaaedd9c7d5f1bfcf306049c3671a733) by
+  [@sahrens](https://github.com/sahrens))
+- Various corrections in messages, comments, and docblocks
+  ([58c3bc4901](https://github.com/facebook/react-native/commit/58c3bc490143b8d7831a00289e2565f49f5389ef),
+  [354e1cb508](https://github.com/facebook/react-native/commit/354e1cb5088a43fd4116504a34a65ca53c4de71b),
+  [58edf024a1](https://github.com/facebook/react-native/commit/58edf024a1ed3a71ef04f124546ee97496b6502f),
+  [b9e7006cc6](https://github.com/facebook/react-native/commit/b9e7006cc6dc2b0801ea0c776ba00cdea2204151),
+  [d2f0abdf4e](https://github.com/facebook/react-native/commit/d2f0abdf4ea94fbb3e2a5c7fb53ff5d1cf6abede),
+  [94cd9f5591](https://github.com/facebook/react-native/commit/94cd9f55915973355cdb63276b71f90df10281db),
+  [8547b7e111](https://github.com/facebook/react-native/commit/8547b7e11163d545b7b99d4bdd063ef71129d62c),
+  [44c16499fd](https://github.com/facebook/react-native/commit/44c16499fdc4665298f6c88b9ffee626fa1fc969),
+  [c91d87213e](https://github.com/facebook/react-native/commit/c91d87213e6862019b9ef7df7c38551bd6d659fd),
+  [85503a0612](https://github.com/facebook/react-native/commit/85503a0612b0c74b4d204e8748e9ed7010d838e4), and
+  [5b83dbe25a](https://github.com/facebook/react-native/commit/5b83dbe25af151d183009006b1fe323b2658d025) by
+  [@behrends](https://github.com/behrends),
+  [@bvaughn](https://github.com/bvaughn),
+  [@charpeni](https://github.com/charpeni),
+  [@dsandmark](https://github.com/dsandmark),
+  [@gusgard](https://github.com/gusgard),
+  [@nkabrown](https://github.com/nkabrown),
+  [@petterh](https://github.com/petterh), [@solon](https://github.com/solon),
+  [@swashcap](https://github.com/swashcap), and others)
+- Various dev doc and project doc fixes for correctness and completeness
+  ([92c0980540](https://github.com/facebook/react-native/commit/92c0980540dde0053bad05fae6414cf8275a71b1),
+  [3c9092acf3](https://github.com/facebook/react-native/commit/3c9092acf39ecdb7c137a3cb0d4282694e95cbf5),
+  [e906525e84](https://github.com/facebook/react-native/commit/e906525e84f69a98de4d06ed1ec4c43d8589e350),
+  [60828566a7](https://github.com/facebook/react-native/commit/60828566a759dc579dbae1d76a8426e1e479166e),
+  [c49b97c4ef](https://github.com/facebook/react-native/commit/c49b97c4ef65a6351af437ef28033cb31ea0446f),
+  [45ed142596](https://github.com/facebook/react-native/commit/45ed14259677cff4cbd133e705ec4f0ec84bc216),
+  [cb6ec7c321](https://github.com/facebook/react-native/commit/cb6ec7c32141ef5bdde837d7f9d71b7adb83b751),
+  [9ec9567390](https://github.com/facebook/react-native/commit/9ec95673909beac7798f589e0e9821b4225f8fa9),
+  [e5a4ea97d9](https://github.com/facebook/react-native/commit/e5a4ea97d9e1b13509a3f36d0b469a6a88a90dc4),
+  [c544c0d2dc](https://github.com/facebook/react-native/commit/c544c0d2dca1d0e9f0b2a5565e03676ad71a36f5),
+  [33d5e5bd5a](https://github.com/facebook/react-native/commit/33d5e5bd5a5365ab712a2b9d33f33cbec305e128),
+  [95dac8db60](https://github.com/facebook/react-native/commit/95dac8db601ba48fe03da52e1adbdef0cac23546),
+  [6e1db1f1ee](https://github.com/facebook/react-native/commit/6e1db1f1ee263c3a8b68c3e1584e79ae86d5be86),
+  [e11d496e9d](https://github.com/facebook/react-native/commit/e11d496e9d907abb5bf58a8300c5a8f85aa03bbb),
+  [6da897945f](https://github.com/facebook/react-native/commit/6da897945f823728dbc82dd9f01c672354b1e76d),
+  [0ff576081b](https://github.com/facebook/react-native/commit/0ff576081b156ea26c4e7886f7266f3e4d8e3d5e),
+  [1ee64ccb8a](https://github.com/facebook/react-native/commit/1ee64ccb8a257210be3a74fb9b0adc83f2a8bb2b),
+  [3aa38564f7](https://github.com/facebook/react-native/commit/3aa38564f7b91c8588c8484140bc4221d50d55e0),
+  [6b26971a56](https://github.com/facebook/react-native/commit/6b26971a56fdd919d11cc338893d0b7a3f7a45ba), and
+  [de3976a486](https://github.com/facebook/react-native/commit/de3976a48655a248a2417fcf2d3a511be02e1996) by
+  [@adrianomelo](https://github.com/adrianomelo),
+  [@blargity](https://github.com/blargity),
+  [@charpeni](https://github.com/charpeni),
+  [@garlic-rice-with-butter](https://github.com/garlic-rice-with-butter),
+  [@gwmccull](https://github.com/gwmccull),
+  [@harikrishnanp](https://github.com/harikrishnanp),
+  [@hramos](https://github.com/hramos),
+  [@johnthewilson](https://github.com/johnthewilson),
+  [@jsdario](https://github.com/jsdario), [@kelset](https://github.com/kelset),
+  [@patrickkempff](https://github.com/patrickkempff),
+  [@ryanml](https://github.com/ryanml),
+  [@tiagomoraismorgado88](https://github.com/tiagomoraismorgado88),
+  [@timwangdev](https://github.com/timwangdev), and others)
+- Stop `RCTRefreshControl` from jumping around
+  ([2e1707d0e6](https://github.com/facebook/react-native/commit/2e1707d0e600a30057511390dd87c18c00f19a59) by
+  [@sophiebits](https://github.com/sophiebits))
+- Fix a race condition in the animation module
+  ([515eb0e801](https://github.com/facebook/react-native/commit/515eb0e8012a7a8f085a8e410c6c694011fd8c1d) by
+  [@mhorowitz](https://github.com/mhorowitz))
+- Fix Windows local-cli's to not wrongfully identify as globally installed
+  ([ca106043fc](https://github.com/facebook/react-native/commit/ca106043fc655a1c51332aedf9b001a512269550) by
+  [@sballew](https://github.com/sballew))
+- Fix Jest mocks for **NetInfo**, **Dimensions**, and **ScrollView** modules
+  ([7fb3a9229d](https://github.com/facebook/react-native/commit/7fb3a9229df52bd45076470d059f245a8147cd2a),
+  [11a2a35c63](https://github.com/facebook/react-native/commit/11a2a35c63ae68de46482f5cd25271f8b0fb5ad4), and
+  [0c8a3e4f79](https://github.com/facebook/react-native/commit/0c8a3e4f797563c99e988ec2f42ec2a618a8b196) by
+  [@alvaromb](https://github.com/alvaromb),
+  [@timwangdev](https://github.com/timwangdev), and
+  [@uk-ar](https://github.com/uk-ar))
+- packager-worker-for-buck: `transformCommand`: add missing test
+  ([73a01be9bc](https://github.com/facebook/react-native/commit/73a01be9bcd9059f3172987fd30d8b6dc0125759) by
+  [@jeanlauliac](https://github.com/jeanlauliac))
+- Fixed issue where CLI wasn't following the config value for postMinifyProcess
+  when its running with `dev=false`
+  ([6d92046c56](https://github.com/facebook/react-native/commit/6d92046c56794a6a62bc07598545a23a7b53cdc0) by
+  [@rafeca](https://github.com/rafeca))
+- Fix asset resolver url handling
+  ([28d5d6baf1](https://github.com/facebook/react-native/commit/28d5d6baf1e6ac52e8672a653f56c3898e4e11d2) by
+  [@fkgozali](https://github.com/fkgozali))
+- Fix crash when destroying catalyst
+  ([f1015664e9](https://github.com/facebook/react-native/commit/f1015664e92f02c33417a591a2438db7c0cd3811))
+- You can now `justifyContent` while you're `minWidth`ing and `marginLeft`ing;
+  before the justification wasn't honored
+  ([f5becebc07](https://github.com/facebook/react-native/commit/f5becebc0710d5bb875bb9c0a2d3809a00f62605) by
+  [@woehrl01](https://github.com/woehrl01))
+- `marginLeft: auto` and `alignItem: stretch` now play nicely together; before
+  the width and height ended up incorrect
+  ([5f99b1a55f](https://github.com/facebook/react-native/commit/5f99b1a55f4002c105a7005cabf720aad422b628) by
+  [@woehrl01](https://github.com/woehrl01))
+- Fix assertion preventing YGNodeLayoutGet\* with YGEdgeEnd
+  ([a383b8ca05](https://github.com/facebook/react-native/commit/a383b8ca0545ba3704a51a78972107119f5683c0) by
+  [@justjake](https://github.com/justjake))
+- Fix shrinking in non-strech alignments
+  ([1d62848535](https://github.com/facebook/react-native/commit/1d6284853514be4da2b68d45732386eb81cc4253) by
+  [@woehrl01](https://github.com/woehrl01))
+- Correctly calculate min/max percentage constraints
+  ([4fdaf2de98](https://github.com/facebook/react-native/commit/4fdaf2de989c039a62681cc1f7a8407ec32b593e) by
+  [@woehrl01](https://github.com/woehrl01))
+- When running `react-native-git-upgrade`, don't execute git's hooks
+  ([0182086350](https://github.com/facebook/react-native/commit/018208635069311c1a7c7776c6f359f7ded45362) by
+  [@adrienthiery](https://github.com/adrienthiery))
+- When running `react-native-git-upgrade` and failing with a signal, return that
+  to the terminal
+  ([b9a5862f67](https://github.com/facebook/react-native/commit/b9a5862f670f52d48f1d3789c3f08ec139368da4) by
+  [@mateusz-](https://github.com/mateusz-))
+- In **KeyboardAvoidingView**, don't mistakenly try to layout when a hardware
+  keyboard changes
+  ([ad4450ac13](https://github.com/facebook/react-native/commit/ad4450ac1364710f052a927ceda7ae353440f682) by
+  [@koenpunt](https://github.com/koenpunt))
+- Don't endlessly collect websockets when not connected to the packager (dev
+  memory leak)
+  ([1e1e491246](https://github.com/facebook/react-native/commit/1e1e49124678f447d980bb22891d25db60fa83b3) by
+  [@mmmulani](https://github.com/mmmulani))
+- Fixed a bug in the sample project random `selection` prop that made it
+  not-so-random
+  ([766f020e68](https://github.com/facebook/react-native/commit/766f020e68abfc121ea6a9f92e0640368d69dae7) by
+  [@rozele](https://github.com/rozele))
+
+#### Android exclusive fixes
+
+- Explicitly `#define isnan __builtin_isnan` for Android _clang-5_ to mimic
+  **gcc**'s default behavior
+  ([f8fe6b0c70](https://github.com/facebook/react-native/commit/f8fe6b0c70d1b7b626d05d9675c16b2f89339e8c))
+- Correctly update **NetInfo** on Android even if connection types change while
+  the app is in the background
+  ([e6f542d620](https://github.com/facebook/react-native/commit/e6f542d62037e9830c0ae5749a32874c44cf2334) by
+  [@berickson1](https://github.com/berickson1))
+- Direction-aware borders now work with Android APIs >= 17
+  ([7170543e80](https://github.com/facebook/react-native/commit/7170543e8012250b7643a960b54cce7fd6d3a1e9) by
+  [@rsnara](https://github.com/rsnara))
+- Don't throw _BadTokenException_ and _IllegalArgmentException_ when showing or
+  dismissing Modal on Android
+  ([e57a43b97a](https://github.com/facebook/react-native/commit/e57a43b97ad24dc5b993753a45aa575b2a757b4f))
+- Fix Android crash when blurRadius is between 0 and 1
+  ([dc01eff72d](https://github.com/facebook/react-native/commit/dc01eff72d23e1dd3f7ecf30859992ee3bf7c664) by
+  [@jamesreggio](https://github.com/jamesreggio))
+- Fix `borderRadius` with Android API level < 18
+  ([5aa1fb3ff3](https://github.com/facebook/react-native/commit/5aa1fb3ff326a429e33a443576da866f2a63c20c) and
+  [ca7fe72c31](https://github.com/facebook/react-native/commit/ca7fe72c31fd7c7cbe4734118019f5808235560e) by
+  [@rsnara](https://github.com/rsnara))
+- Make Android `lineHeight` behavior match iOS's 📏
+  ([3f1b021506](https://github.com/facebook/react-native/commit/3f1b0215060e4c27c286359cc90f3b2189956c4e))
+- Fixed autoscroll to cursor on Android **TextInput**
+  ([0bef872f3f](https://github.com/facebook/react-native/commit/0bef872f3fc8b1cd78c574d03eacc886bef4e239) by
+  [@shergin](https://github.com/shergin))
+- Fix logging unpacking time on Android when it happens concurrently with eager
+  unpacking ([028b64bcd3](https://github.com/facebook/react-native/commit/028b64bcd36c1c8dd76c0de95eeff80cf660aa23)
+  by [@alexeylang](https://github.com/alexeylang))
+- Prevent an Android crash when **TextInput** has `selectionColor` defined but
+  there is no drawable cursor
+  ([1e18d907bf](https://github.com/facebook/react-native/commit/1e18d907bfb8cc5f4f2e1a1ede0dd98aec40ab11) by
+  [@gpeal](https://github.com/gpeal))
+
+#### iOS exclusive fixes
+
+- Don't have Xcode warnings for _YGDefaultLog_ in newly created projects
+  ([72e762d4bc](https://github.com/facebook/react-native/commit/72e762d4bca8d00cc2c73c390a654ae6143731bd) by
+  [@woehrl01](https://github.com/woehrl01))
+- iOS _RCTEventEmitter_ uses a `double` for count, not _NSInteger_
+  ([eaa84997ce](https://github.com/facebook/react-native/commit/eaa84997cedc8dc4d46308e2217d2b094a51ed02))
+- Fix `isNuclideDebuggingAvailable` on iOS
+  ([59c3e33f63](https://github.com/facebook/react-native/commit/59c3e33f637d11e33204e8a912e98459ffad7fab))
+- iOS ScrollView is now rendered correctly with RefreshControl
+  ([75d62bf0a8](https://github.com/facebook/react-native/commit/75d62bf0a802b91a979d03ef497e84c3179e7767) by
+  [@vonovak](https://github.com/vonovak))
+- Fix a crash when keyboard is visible and bridge reload happens on iOS
+  ([d9c658566a](https://github.com/facebook/react-native/commit/d9c658566a14ce8767d87435264997aa18dd08e4) by
+  [@fromcelticpark](https://github.com/fromcelticpark))
+- **RedBox** now appears beneath the status bar on iOS
+  ([33cefc1760](https://github.com/facebook/react-native/commit/33cefc176096e03a4b3c3130a70abfabe9d40f38) by
+  [@adamjernst](https://github.com/adamjernst))
+- Fractional border widths on iOS are now the right size, honoring insets
+  ([15179f1798](https://github.com/facebook/react-native/commit/15179f1798b277c1836441fcf7f3b7f0bd5a4636) by
+  [@Nikita2k](https://github.com/Nikita2k))
+- Implement `requiresMainQueueSetup` in _RCTTVNavigationEventEmitter_ to satisfy
+  Xcode warning
+  ([ee3532b5c2](https://github.com/facebook/react-native/commit/ee3532b5c266d5ee7fb12920cb611a41b1daf750) by
+  [@charpeni](https://github.com/charpeni))
+- Support the iPhone X in the sample project's header
+  ([ad4b124aa1](https://github.com/facebook/react-native/commit/ad4b124aa117483b4a0ec9dfa145b8e9a17f06c6) by
+  [@vincentriemer](https://github.com/vincentriemer))
+- `testID` works on **TabBarItem** on iOS
+  ([e19d9dec9b](https://github.com/facebook/react-native/commit/e19d9dec9b3b257b5db3dc77ed8b95b93570f1e3))
+- On iOS, don't error on the first live-reload of large codebases because of too
+  little wait time
+  ([b6f1a6085f](https://github.com/facebook/react-native/commit/b6f1a6085f7470c16ae8850e7da8f4f9ae5c23ee) by
+  [@lelandrichardson](https://github.com/lelandrichardson))
+- Prevent iOS crash on receiving bad unicode in _XMLHTTPRequest_
+  ([1c04ceeb4b](https://github.com/facebook/react-native/commit/1c04ceeb4ba954eee7ab34fc5b6c660d9772d9f6) by
+  [@cdlewis](https://github.com/cdlewis))
+- Define `pod_target_xcconfig` for PrivateDatabase
+  ([38b96cd7bb](https://github.com/facebook/react-native/commit/38b96cd7bb391f64066a6c91daa4173db1f33445) by
+  [@ide](https://github.com/ide))
+- Fixed podspec include/excludes around tvOS
+  ([ba1d7e92e4](https://github.com/facebook/react-native/commit/ba1d7e92e4f251b90a96be192214b5015cf6244e) by
+  [@yygene](https://github.com/yygene))
+- Don't spam the logs for iOS when receiving `ECONNREFUSED` on connecting to
+  packager ([b1701ccaef](https://github.com/facebook/react-native/commit/b1701ccaefa0c8cbb6d820b2ad07e0d911027d7c)
+  and [ff3dc2ed19](https://github.com/facebook/react-native/commit/ff3dc2ed19cdd4137ae8092599b16c09d4e2c711) by
+  [@adamjernst](https://github.com/adamjernst))
+- Don't crash Systrace when debugging JS remotely on iOS
+  ([e8eec24706](https://github.com/facebook/react-native/commit/e8eec24706e792314ee574bbf7f7c0066c4f3a7a) by
+  [@alexeylang](https://github.com/alexeylang))
+
+### Removed
+
+- Removing `reactBridgeDidFinishTransaction` from _RCTScrollView_
+  ([a255204e3e](https://github.com/facebook/react-native/commit/a255204e3e7fddefd2d7b0de224101768757ca7a) by
+  [@shergin](https://github.com/shergin))
+- Removing inherited background color optimization from _RCTText_ to reduce code
+  complexity – please give feedback if you find performance differences!
+  ([8c8944c10f](https://github.com/facebook/react-native/commit/8c8944c10fb7dc30ea99657225f25ea438cf6e14) by
+  [@shergin](https://github.com/shergin))
+
+### Other
+
+Below is a list of the remaining, low-level changes that made it into this
+release of React Native.
+
+- Foundational work for a new justifyContent value **space-evenly**
+  ([1050e0b476](https://github.com/facebook/react-native/commit/1050e0b47611602b758f73d99f51a1dd5ceabade) by
+  [@woehrl01](https://github.com/woehrl01))
+- Add Systrace-based telemetry to Hermes GC
+  ([05e862d48d](https://github.com/facebook/react-native/commit/05e862d48d363a8af765b2f0283569419dbd2e5c))
+- Unify Systrace native hook argument passing
+  ([52e3ae9063](https://github.com/facebook/react-native/commit/52e3ae9063705bac53bad99ffe23976c29c8f1b2) by
+  [@amnn](https://github.com/amnn))
+- Use different symbols for SystraceSection depending on `WITH_FBYSTRACE`
+  ([03956c4ecf](https://github.com/facebook/react-native/commit/03956c4ecfda381396336f725ea1c12d913df17d))
+- Don't set global.performance to undefined if it was initialized already
+  ([dfebcb70a5](https://github.com/facebook/react-native/commit/dfebcb70a5c948db94d1cd580bbcaa0aaa702349) by
+  [@alexeylang](https://github.com/alexeylang))
+- Autofixes for migrating to Buck's source-only ABI feature
+  ([801cbdb047](https://github.com/facebook/react-native/commit/801cbdb04788403cee022dec688136540da36fc5) by
+  [@jkeljo](https://github.com/jkeljo))
+- Add remote API to uninstall the global error handler in RN
+  ([1d16923063](https://github.com/facebook/react-native/commit/1d16923063940606dda89de94a83cbdf5f98e1f1))
+- Add _RCTLibraryPathForURL_ in _RCTUtil_
+  ([2fecbf6171](https://github.com/facebook/react-native/commit/2fecbf61711f610124fc2453a79120932024f613))
+- Fix sections that come from React Fiber
+  ([1f40c95076](https://github.com/facebook/react-native/commit/1f40c95076297258a4194fd9c1b5af7002187c99) by
+  [@alexeylang](https://github.com/alexeylang))
+- Fix boolean conversion in sync RN method calls.
+  ([dd888d3346](https://github.com/facebook/react-native/commit/dd888d3346ef9477eae2cd2d29cef867467cb503))
+- Fix `embeddedBundleURL` update situation
+  ([d1fc8ef3a3](https://github.com/facebook/react-native/commit/d1fc8ef3a3cb3590b9cff4d1b3cc5d440b52ec8c))
+- Remove `android_react_native_perf.use_separate_ui_bg_thread` experiment.
+  ([4f886a29a1](https://github.com/facebook/react-native/commit/4f886a29a1234c967deae2354bbc5092e0e6595e))
+- ScrollView related files were moved to dedicated folder
+  ([098a63a1ce](https://github.com/facebook/react-native/commit/098a63a1cee1196a2f3eb5135eeb8fe59e7e8272) by
+  [@shergin](https://github.com/shergin))
+- move page registration logic in to jsinspector
+  ([bef7967f9a](https://github.com/facebook/react-native/commit/bef7967f9a485dc136d2cb32f552b2199ae3e2b8) by
+  [@bnham](https://github.com/bnham))
+- Type global hooks as function pointers
+  ([eca51eb46a](https://github.com/facebook/react-native/commit/eca51eb46a47112c8933d0a3b932f59008cadc78) by
+  [@johnislarry](https://github.com/johnislarry))
+- `std::string` to `const char*`
+  ([b952365ba6](https://github.com/facebook/react-native/commit/b952365ba6bd86f0e80a24aedec1f447cb3ec566) by
+  [@johnislarry](https://github.com/johnislarry))
+- Allow extending props supported by native animations
+  ([71751e9cc7](https://github.com/facebook/react-native/commit/71751e9cc7c67306ca038c5b254e6e81fe0aff1b) by
+  [@andrewimm](https://github.com/andrewimm))
+- Meyers singleton jsc error extractor
+  ([434f432d5d](https://github.com/facebook/react-native/commit/434f432d5d5ea2756c1adac8b1c36e82e60a2b13) by
+  [@johnislarry](https://github.com/johnislarry))
+- Do not overwrite the same text in **TextInput**
+  ([29f3f55298](https://github.com/facebook/react-native/commit/29f3f5529827579101f0d8bd6afe72f1cb0caeca))
+- Renaming _uiManagerWillFlushUIBlocks_ -> _uiManagerWillPerformMounting_
+  ([0a8721c340](https://github.com/facebook/react-native/commit/0a8721c340480a972bb597cacdbddd9eb2015716) by
+  [@shergin](https://github.com/shergin))
+- Skylarkify flags macros.
+  ([ed2bfcb35a](https://github.com/facebook/react-native/commit/ed2bfcb35a2756eb700882ab8e21b6b273efa80a) by
+  [@ttsugriy](https://github.com/ttsugriy))
+- Skylarkify `config_utils_defs` macros.
+  ([88f6f69152](https://github.com/facebook/react-native/commit/88f6f69152e4b68609f28e80ee70705969529af8) by
+  [@ttsugriy](https://github.com/ttsugriy))
+- Round size geometry for Button and RichText components.
+  ([4034febb7e](https://github.com/facebook/react-native/commit/4034febb7ef9d9daa894a75b038226af74026163) by
+  [@iaroslav-pavlov](https://github.com/iaroslav-pavlov)
+- Temporarily patched Map/Set non-extensible check into RN dev renderer
+  ([a99f0d6100](https://github.com/facebook/react-native/commit/a99f0d6100c9779f5f6df6008af54c06113355f6) by
+  [@bvaughn](https://github.com/bvaughn))
+- Run buildifier over all BUCK files
+  ([d674d48a7b](https://github.com/facebook/react-native/commit/d674d48a7b9b71169af59ceb886529371c26a2e5) by
+  [@zertosh](https://github.com/zertosh))
+- Pass `scriptURL` to _RCTTestRunner_
+  ([266ab7a006](https://github.com/facebook/react-native/commit/266ab7a0061c11c4da7ccde9e0d461c0d7331563))
+- Make _RCTNativeModule::invokeInner_ explicitely return `folly::none` in case
+  of error ([0ac5a5230c](https://github.com/facebook/react-native/commit/0ac5a5230c4b5dd44db6a8dd7bb7752aff64d71c)
+  by [@fromcelticpark](https://github.com/fromcelticpark))
+- Make _RCTPackagerConnection_ a singleton
+  ([9180d4eb82](https://github.com/facebook/react-native/commit/9180d4eb82fb70a0fd396b15660c2ac6770183c9) by
+  [@adamjernst](https://github.com/adamjernst))
+- Register split segment paths with _RAMBundleRegistry_
+  ([cff0d8e0e5](https://github.com/facebook/react-native/commit/cff0d8e0e599d1ab21b36779b41fbb26512874aa) by
+  [@fromcelticpark](https://github.com/fromcelticpark))
+- check if listener is still in the set before calling `onHostResume`
+  ([ad89ea7b50](https://github.com/facebook/react-native/commit/ad89ea7b5046c2cf9ca1cba88c387eb1db8dc042))
+- export _SeparatorsObj_ type for re-use in **ListItem**s etc.
+  ([c6fe101cdc](https://github.com/facebook/react-native/commit/c6fe101cdcc0b8d640a86108d8a76f7292b5f799) by
+  [@sahrens](https://github.com/sahrens))
+- Do not mark node as dirty if, new and old values are undefined
+  ([41da6e3128](https://github.com/facebook/react-native/commit/41da6e31284d46bb1dd2053c3c3100c075ace019) by
+  [@woehrl01](https://github.com/woehrl01))
+- Remove _RAMBundleRegistry_ subclasses
+  ([6ecae73fe5](https://github.com/facebook/react-native/commit/6ecae73fe5915863c27ac7e407f5b151fd0c5fc3) by
+  [@fromcelticpark](https://github.com/fromcelticpark))
+- Fix `minimumViewTime` in _ViewabilityHelper_
+  ([d19d137cc1](https://github.com/facebook/react-native/commit/d19d137cc18f10957b5ac64ac727d15fde57f018))
+
+[0.56]: https://github.com/facebook/react-native/compare/0.55-stable...0.56-stable
+[0.55]: https://github.com/facebook/react-native/compare/0.54-stable...0.55-stable
+[0.54]: https://github.com/facebook/react-native/compare/0.53-stable...0.54-stable
+[0.53]: https://github.com/facebook/react-native/compare/0.52-stable...0.53-stable
+[0.52.0]: https://github.com/facebook/react-native/compare/0.51-stable...0.52-stable
diff --git a/node_modules/react-native/Libraries/.npmignore b/node_modules/react-native/Libraries/.npmignore
new file mode 100644
index 0000000..c912533
--- /dev/null
+++ b/node_modules/react-native/Libraries/.npmignore
@@ -0,0 +1 @@
+__tests__
diff --git a/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js b/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js
index b5959ac..c9aaca1 100644
--- a/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js
+++ b/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js
@@ -13,7 +13,7 @@ import type {ColorValue} from '../StyleSheet/StyleSheet';
 
 import RCTActionSheetManager from './NativeActionSheetManager';
 
-const processColor = require('../StyleSheet/processColor').default;
+const processColor = require('../StyleSheet/processColor');
 const invariant = require('invariant');
 
 /**
diff --git a/node_modules/react-native/Libraries/ActionSheetIOS/React-RCTActionSheet.podspec b/node_modules/react-native/Libraries/ActionSheetIOS/React-RCTActionSheet.podspec
index 5cad0ca..a9bd4ca 100644
--- a/node_modules/react-native/Libraries/ActionSheetIOS/React-RCTActionSheet.podspec
+++ b/node_modules/react-native/Libraries/ActionSheetIOS/React-RCTActionSheet.podspec
@@ -23,7 +23,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/actionsheetios"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "*.{m}"
diff --git a/node_modules/react-native/Libraries/Alert/Alert.d.ts b/node_modules/react-native/Libraries/Alert/Alert.d.ts
index b9bea34..bba8f29 100644
--- a/node_modules/react-native/Libraries/Alert/Alert.d.ts
+++ b/node_modules/react-native/Libraries/Alert/Alert.d.ts
@@ -13,14 +13,14 @@
 export interface AlertButton {
   text?: string | undefined;
   onPress?: ((value?: string) => void) | undefined;
-  isPreferred?: boolean | undefined;
+  isPreferred?: boolean;
   style?: 'default' | 'cancel' | 'destructive' | undefined;
 }
 
 interface AlertOptions {
   /** @platform android */
   cancelable?: boolean | undefined;
-  userInterfaceStyle?: 'unspecified' | 'light' | 'dark' | undefined;
+  userInterfaceStyle?: 'unspecified' | 'light' | 'dark';
   /** @platform android */
   onDismiss?: (() => void) | undefined;
 }
@@ -33,8 +33,8 @@ interface AlertOptions {
  * button will be an 'OK' button.
  *
  * This is an API that works both on iOS and Android and can show static
- * alerts. On iOS, you can show an alert that prompts the user to enter
- * some information.
+ * alerts. To show an alert that prompts the user to enter some information,
+ * see `AlertIOS`; entering text in an alert is common on iOS only.
  *
  * ## iOS
  *
diff --git a/node_modules/react-native/Libraries/Animated/Animated.d.ts b/node_modules/react-native/Libraries/Animated/Animated.d.ts
index aeeb981..3301ff3 100644
--- a/node_modules/react-native/Libraries/Animated/Animated.d.ts
+++ b/node_modules/react-native/Libraries/Animated/Animated.d.ts
@@ -11,12 +11,8 @@ import type * as React from 'react';
 import {ScrollView} from '../Components/ScrollView/ScrollView';
 import {View} from '../Components/View/View';
 import {Image} from '../Image/Image';
-import {FlatListComponent, FlatListProps} from '../Lists/FlatList';
-import {
-  DefaultSectionT,
-  SectionListComponent,
-  SectionListProps,
-} from '../Lists/SectionList';
+import {FlatListProps} from '../Lists/FlatList';
+import {DefaultSectionT, SectionListProps} from '../Lists/SectionList';
 import {ColorValue} from '../StyleSheet/StyleSheet';
 import {Text} from '../Text/Text';
 import {NativeSyntheticEvent} from '../Types/CoreEventTypes';
@@ -564,9 +560,7 @@ export namespace Animated {
   type NonAnimatedProps = 'key' | 'ref';
 
   type TAugmentRef<T> = T extends React.Ref<infer R>
-    ? unknown extends R
-      ? never
-      : React.Ref<R | LegacyRef<R>>
+    ? React.Ref<R | LegacyRef<R>>
     : never;
 
   export type AnimatedProps<T> = {
@@ -581,7 +575,7 @@ export namespace Animated {
     extends React.FC<AnimatedProps<React.ComponentPropsWithRef<T>>> {}
 
   export type AnimatedComponentOptions = {
-    collapsable?: boolean | undefined;
+    collapsable?: boolean;
   };
 
   /**
@@ -604,18 +598,13 @@ export namespace Animated {
   /**
    * FlatList and SectionList infer generic Type defined under their `data` and `section` props.
    */
-
-  export class FlatList<ItemT = any> extends FlatListComponent<
-    ItemT,
+  export class FlatList<ItemT = any> extends React.Component<
     AnimatedProps<FlatListProps<ItemT>>
   > {}
-
   export class SectionList<
     ItemT = any,
     SectionT = DefaultSectionT,
-  > extends SectionListComponent<
-    AnimatedProps<SectionListProps<ItemT, SectionT>>
-  > {}
+  > extends React.Component<AnimatedProps<SectionListProps<ItemT, SectionT>>> {}
 }
 
 // We need to alias these views so we can reference them in the Animated
diff --git a/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js b/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js
index 2dd1976..e0c9178 100644
--- a/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js
+++ b/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js
@@ -142,11 +142,7 @@ const API = {
     }
   },
   flushQueue: function (): void {
-    // TODO: (T136971132)
-    invariant(
-      NativeAnimatedModule || process.env.NODE_ENV === 'test',
-      'Native animated module is not available',
-    );
+    invariant(NativeAnimatedModule, 'Native animated module is not available');
     flushQueueTimeout = null;
 
     // Early returns before calling any APIs
@@ -169,18 +165,16 @@ const API = {
       // use RCTDeviceEventEmitter. This reduces overhead of sending lots of
       // JSI functions across to native code; but also, TM infrastructure currently
       // does not support packing a function into native arrays.
-      NativeAnimatedModule?.queueAndExecuteBatchedOperations?.(singleOpQueue);
+      NativeAnimatedModule.queueAndExecuteBatchedOperations?.(singleOpQueue);
       singleOpQueue.length = 0;
     } else {
-      Platform.OS === 'android' &&
-        NativeAnimatedModule?.startOperationBatch?.();
-
+      Platform.OS === 'android' && NativeAnimatedModule.startOperationBatch?.();
       for (let q = 0, l = queue.length; q < l; q++) {
         queue[q]();
       }
       queue.length = 0;
       Platform.OS === 'android' &&
-        NativeAnimatedModule?.finishOperationBatch?.();
+        NativeAnimatedModule.finishOperationBatch?.();
     }
   },
   queueOperation: <Args: $ReadOnlyArray<mixed>, Fn: (...Args) => void>(
@@ -248,7 +242,6 @@ const API = {
       }
       // $FlowFixMe
       API.queueOperation(
-        // $FlowFixMe[incompatible-call]
         nativeOps.startAnimatingNode,
         animationId,
         nodeTag,
@@ -391,15 +384,11 @@ const SUPPORTED_STYLES = {
   borderBottomLeftRadius: true,
   borderBottomRightRadius: true,
   borderBottomStartRadius: true,
-  borderEndEndRadius: true,
-  borderEndStartRadius: true,
   borderRadius: true,
   borderTopEndRadius: true,
   borderTopLeftRadius: true,
   borderTopRightRadius: true,
   borderTopStartRadius: true,
-  borderStartEndRadius: true,
-  borderStartStartRadius: true,
   elevation: true,
   opacity: true,
   transform: true,
@@ -588,11 +577,10 @@ export default {
   assertNativeAnimatedModule,
   shouldUseNativeDriver,
   transformDataType,
-  // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression
-  // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression
+  // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppresion
+  // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppresion
   get nativeEventEmitter(): NativeEventEmitter {
     if (!nativeEventEmitter) {
-      // $FlowFixMe[underconstrained-implicit-instantiation]
       nativeEventEmitter = new NativeEventEmitter(
         // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior
         // If you want to use the native module on other platforms, please remove this condition and test its behavior
diff --git a/node_modules/react-native/Libraries/Animated/bezier.js b/node_modules/react-native/Libraries/Animated/bezier.js
index 063bf12..f18cef4 100644
--- a/node_modules/react-native/Libraries/Animated/bezier.js
+++ b/node_modules/react-native/Libraries/Animated/bezier.js
@@ -105,7 +105,7 @@ export default function bezier(
   // Precompute samples table
   const sampleValues = float32ArraySupported
     ? new Float32Array(kSplineTableSize)
-    : new Array<number>(kSplineTableSize);
+    : new Array(kSplineTableSize);
   if (mX1 !== mY1 || mX2 !== mY2) {
     for (let i = 0; i < kSplineTableSize; ++i) {
       sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
diff --git a/node_modules/react-native/Libraries/Animated/components/AnimatedFlatList.js b/node_modules/react-native/Libraries/Animated/components/AnimatedFlatList.js
index 2cda383..afe8bd8 100644
--- a/node_modules/react-native/Libraries/Animated/components/AnimatedFlatList.js
+++ b/node_modules/react-native/Libraries/Animated/components/AnimatedFlatList.js
@@ -17,14 +17,9 @@ import * as React from 'react';
 /**
  * @see https://github.com/facebook/react-native/commit/b8c8562
  */
-const FlatListWithEventThrottle = React.forwardRef(
-  (
-    props: React.ElementConfig<typeof FlatList>,
-    ref:
-      | ((null | FlatList<mixed>) => mixed)
-      | {current: null | FlatList<mixed>, ...},
-  ) => <FlatList scrollEventThrottle={0.0001} {...props} ref={ref} />,
-);
+const FlatListWithEventThrottle = React.forwardRef((props, ref) => (
+  <FlatList scrollEventThrottle={0.0001} {...props} ref={ref} />
+));
 
 export default (createAnimatedComponent(
   FlatListWithEventThrottle,
diff --git a/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js b/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js
index 11a4162..a3ba2d2 100644
--- a/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js
+++ b/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js
@@ -67,15 +67,12 @@ const AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(
       // $FlowFixMe[unclear-type] Same Flow type as `refreshControl` in ScrollView
       refreshControl: React.Element<any>,
     },
-    forwardedRef:
-      | {current: Instance | null, ...}
-      | ((Instance | null) => mixed),
+    forwardedRef,
   ) => {
     // Split `props` into the animate-able props for the parent (RefreshControl)
     // and child (ScrollView).
     const {intermediatePropsForRefreshControl, intermediatePropsForScrollView} =
       useMemo(() => {
-        // $FlowFixMe[underconstrained-implicit-instantiation]
         const {outer, inner} = splitLayoutProps(flattenStyle(props.style));
         return {
           intermediatePropsForRefreshControl: {style: outer},
diff --git a/node_modules/react-native/Libraries/Animated/components/AnimatedSectionList.js b/node_modules/react-native/Libraries/Animated/components/AnimatedSectionList.js
index b1425f5..955691f 100644
--- a/node_modules/react-native/Libraries/Animated/components/AnimatedSectionList.js
+++ b/node_modules/react-native/Libraries/Animated/components/AnimatedSectionList.js
@@ -8,7 +8,6 @@
  * @format
  */
 
-import type {SectionBase} from '../../Lists/SectionList';
 import type {AnimatedComponentType} from '../createAnimatedComponent';
 
 import SectionList from '../../Lists/SectionList';
@@ -18,17 +17,9 @@ import * as React from 'react';
 /**
  * @see https://github.com/facebook/react-native/commit/b8c8562
  */
-const SectionListWithEventThrottle = React.forwardRef(
-  (
-    props: React.ElementConfig<typeof SectionList>,
-    ref:
-      | ((null | SectionList<SectionBase<$FlowFixMe>>) => mixed)
-      | {
-          current: null | SectionList<SectionBase<$FlowFixMe>>,
-          ...
-        },
-  ) => <SectionList scrollEventThrottle={0.0001} {...props} ref={ref} />,
-);
+const SectionListWithEventThrottle = React.forwardRef((props, ref) => (
+  <SectionList scrollEventThrottle={0.0001} {...props} ref={ref} />
+));
 
 export default (createAnimatedComponent(
   SectionListWithEventThrottle,
diff --git a/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js b/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js
index 09d749c..fb64ba0 100644
--- a/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js
+++ b/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js
@@ -8,11 +8,19 @@
  * @format
  */
 
+'use strict';
+
 import View from '../Components/View/View';
-import useMergeRefs from '../Utilities/useMergeRefs';
-import useAnimatedProps from './useAnimatedProps';
+import setAndForwardRef from '../Utilities/setAndForwardRef';
+import {AnimatedEvent} from './AnimatedEvent';
+import * as createAnimatedComponentInjection from './createAnimatedComponentInjection';
+import NativeAnimatedHelper from './NativeAnimatedHelper';
+import AnimatedProps from './nodes/AnimatedProps';
+import invariant from 'invariant';
 import * as React from 'react';
 
+let animatedComponentNextId = 1;
+
 export type AnimatedComponentType<
   -Props: {+[string]: mixed, ...},
   +Instance = mixed,
@@ -29,33 +37,238 @@ export type AnimatedComponentType<
   Instance,
 >;
 
-export default function createAnimatedComponent<TProps: {...}, TInstance>(
-  Component: React.AbstractComponent<TProps, TInstance>,
-): AnimatedComponentType<TProps, TInstance> {
-  return React.forwardRef((props, forwardedRef) => {
-    const [reducedProps, callbackRef] = useAnimatedProps<TProps, TInstance>(
-      // $FlowFixMe[incompatible-call]
-      props,
-    );
-    const ref = useMergeRefs<TInstance | null>(callbackRef, forwardedRef);
-
-    // Some components require explicit passthrough values for animation
-    // to work properly. For example, if an animated component is
-    // transformed and Pressable, onPress will not work after transform
-    // without these passthrough values.
-    // $FlowFixMe[prop-missing]
-    const {passthroughAnimatedPropExplicitValues, style} = reducedProps;
-    const {style: passthroughStyle, ...passthroughProps} =
-      passthroughAnimatedPropExplicitValues ?? {};
-    const mergedStyle = {...style, ...passthroughStyle};
+function createAnimatedComponent<Props: {+[string]: mixed, ...}, Instance>(
+  Component: React.AbstractComponent<Props, Instance>,
+): AnimatedComponentType<Props, Instance> {
+  invariant(
+    typeof Component !== 'function' ||
+      (Component.prototype && Component.prototype.isReactComponent),
+    '`createAnimatedComponent` does not support stateless functional components; ' +
+      'use a class component instead.',
+  );
+
+  class AnimatedComponent extends React.Component<Object> {
+    _component: any; // TODO T53738161: flow type this, and the whole file
+    _invokeAnimatedPropsCallbackOnMount: boolean = false;
+    _prevComponent: any;
+    _propsAnimated: AnimatedProps;
+    _eventDetachers: Array<Function> = [];
+
+    // Only to be used in this file, and only in Fabric.
+    _animatedComponentId: string = `${animatedComponentNextId++}:animatedComponent`;
+
+    _attachNativeEvents() {
+      // Make sure to get the scrollable node for components that implement
+      // `ScrollResponder.Mixin`.
+      const scrollableNode = this._component?.getScrollableNode
+        ? this._component.getScrollableNode()
+        : this._component;
+
+      for (const key in this.props) {
+        const prop = this.props[key];
+        if (prop instanceof AnimatedEvent && prop.__isNative) {
+          prop.__attach(scrollableNode, key);
+          this._eventDetachers.push(() => prop.__detach(scrollableNode, key));
+        }
+      }
+    }
+
+    _detachNativeEvents() {
+      this._eventDetachers.forEach(remove => remove());
+      this._eventDetachers = [];
+    }
+
+    _isFabric = (): boolean => {
+      // When called during the first render, `_component` is always null.
+      // Therefore, even if a component is rendered in Fabric, we can't detect
+      // that until ref is set, which happens sometime after the first render.
+      // In cases where this value switching between "false" and "true" on Fabric
+      // causes issues, add an additional check for _component nullity.
+      if (this._component == null) {
+        return false;
+      }
+      return (
+        // eslint-disable-next-line dot-notation
+        this._component['_internalInstanceHandle']?.stateNode?.canonical !=
+          null ||
+        // Some components have a setNativeProps function but aren't a host component
+        // such as lists like FlatList and SectionList. These should also use
+        // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying
+        // host component. This crazy hack is essentially special casing those lists and
+        // ScrollView itself to use forceUpdate in Fabric.
+        // If these components end up using forwardRef then these hacks can go away
+        // as this._component would actually be the underlying host component and the above check
+        // would be sufficient.
+        (this._component.getNativeScrollRef != null &&
+          this._component.getNativeScrollRef() != null &&
+          // eslint-disable-next-line dot-notation
+          this._component.getNativeScrollRef()['_internalInstanceHandle']
+            ?.stateNode?.canonical != null) ||
+        (this._component.getScrollResponder != null &&
+          this._component.getScrollResponder() != null &&
+          this._component.getScrollResponder().getNativeScrollRef != null &&
+          this._component.getScrollResponder().getNativeScrollRef() != null &&
+          this._component.getScrollResponder().getNativeScrollRef()[
+            // eslint-disable-next-line dot-notation
+            '_internalInstanceHandle'
+          ]?.stateNode?.canonical != null)
+      );
+    };
+
+    _waitForUpdate = (): void => {
+      if (this._isFabric()) {
+        NativeAnimatedHelper.API.setWaitingForIdentifier(
+          this._animatedComponentId,
+        );
+      }
+    };
+
+    _markUpdateComplete = (): void => {
+      if (this._isFabric()) {
+        NativeAnimatedHelper.API.unsetWaitingForIdentifier(
+          this._animatedComponentId,
+        );
+      }
+    };
+
+    // The system is best designed when setNativeProps is implemented. It is
+    // able to avoid re-rendering and directly set the attributes that changed.
+    // However, setNativeProps can only be implemented on leaf native
+    // components. If you want to animate a composite component, you need to
+    // re-render it. In this case, we have a fallback that uses forceUpdate.
+    // This fallback is also called in Fabric.
+    _animatedPropsCallback = (): void => {
+      if (this._component == null) {
+        // AnimatedProps is created in will-mount because it's used in render.
+        // But this callback may be invoked before mount in async mode,
+        // In which case we should defer the setNativeProps() call.
+        // React may throw away uncommitted work in async mode,
+        // So a deferred call won't always be invoked.
+        this._invokeAnimatedPropsCallbackOnMount = true;
+      } else if (
+        process.env.NODE_ENV === 'test' ||
+        // For animating properties of non-leaf/non-native components
+        typeof this._component.setNativeProps !== 'function' ||
+        // In Fabric, force animations to go through forceUpdate and skip setNativeProps
+        this._isFabric()
+      ) {
+        this.forceUpdate();
+      } else if (!this._propsAnimated.__isNative) {
+        this._component.setNativeProps(
+          this._propsAnimated.__getAnimatedValue(),
+        );
+      } else {
+        throw new Error(
+          'Attempting to run JS driven animation on animated ' +
+            'node that has been moved to "native" earlier by starting an ' +
+            'animation with `useNativeDriver: true`',
+        );
+      }
+    };
+
+    _attachProps(nextProps: any) {
+      const oldPropsAnimated = this._propsAnimated;
 
+      this._propsAnimated = new AnimatedProps(
+        nextProps,
+        this._animatedPropsCallback,
+      );
+      this._propsAnimated.__attach();
+
+      // When you call detach, it removes the element from the parent list
+      // of children. If it goes to 0, then the parent also detaches itself
+      // and so on.
+      // An optimization is to attach the new elements and THEN detach the old
+      // ones instead of detaching and THEN attaching.
+      // This way the intermediate state isn't to go to 0 and trigger
+      // this expensive recursive detaching to then re-attach everything on
+      // the very next operation.
+      if (oldPropsAnimated) {
+        oldPropsAnimated.__restoreDefaultValues();
+        oldPropsAnimated.__detach();
+      }
+    }
+
+    _setComponentRef: (ref: React.ElementRef<any>) => void = setAndForwardRef({
+      getForwardedRef: () => this.props.forwardedRef,
+      setLocalRef: ref => {
+        this._prevComponent = this._component;
+        this._component = ref;
+      },
+    });
+
+    render(): React.Node {
+      const animatedProps = this._propsAnimated.__getValue() || {};
+
+      const {style = {}, ...props} = animatedProps;
+      const {style: passthruStyle = {}, ...passthruProps} =
+        this.props.passthroughAnimatedPropExplicitValues || {};
+      const mergedStyle = {...style, ...passthruStyle};
+
+      // Force `collapsable` to be false so that native view is not flattened.
+      // Flattened views cannot be accurately referenced by a native driver.
+      return (
+        <Component
+          {...props}
+          {...passthruProps}
+          collapsable={false}
+          style={mergedStyle}
+          ref={this._setComponentRef}
+        />
+      );
+    }
+
+    UNSAFE_componentWillMount() {
+      this._waitForUpdate();
+      this._attachProps(this.props);
+    }
+
+    componentDidMount() {
+      if (this._invokeAnimatedPropsCallbackOnMount) {
+        this._invokeAnimatedPropsCallbackOnMount = false;
+        this._animatedPropsCallback();
+      }
+
+      this._propsAnimated.setNativeView(this._component);
+      this._attachNativeEvents();
+      this._markUpdateComplete();
+    }
+
+    UNSAFE_componentWillReceiveProps(newProps: any) {
+      this._waitForUpdate();
+      this._attachProps(newProps);
+    }
+
+    componentDidUpdate(prevProps: any) {
+      if (this._component !== this._prevComponent) {
+        this._propsAnimated.setNativeView(this._component);
+      }
+      if (this._component !== this._prevComponent || prevProps !== this.props) {
+        this._detachNativeEvents();
+        this._attachNativeEvents();
+      }
+      this._markUpdateComplete();
+    }
+
+    componentWillUnmount() {
+      this._propsAnimated && this._propsAnimated.__detach();
+      this._detachNativeEvents();
+      this._markUpdateComplete();
+      this._component = null;
+      this._prevComponent = null;
+    }
+  }
+
+  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {
     return (
-      <Component
-        {...reducedProps}
-        {...passthroughProps}
-        style={mergedStyle}
-        ref={ref}
+      <AnimatedComponent
+        {...props}
+        {...(ref == null ? null : {forwardedRef: ref})}
       />
     );
   });
 }
+
+// $FlowIgnore[incompatible-cast] - Will be compatible after refactors.
+export default (createAnimatedComponentInjection.recordAndRetrieve() ??
+  createAnimatedComponent: typeof createAnimatedComponent);
diff --git a/node_modules/react-native/Libraries/Animated/createAnimatedComponentInjection.js b/node_modules/react-native/Libraries/Animated/createAnimatedComponentInjection.js
new file mode 100644
index 0000000..ab172bf
--- /dev/null
+++ b/node_modules/react-native/Libraries/Animated/createAnimatedComponentInjection.js
@@ -0,0 +1,48 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict-local
+ * @format
+ */
+
+import * as React from 'react';
+
+type createAnimatedComponent = <TProps: {...}, TInstance>(
+  Component: React.AbstractComponent<TProps, TInstance>,
+) => React.AbstractComponent<TProps, TInstance>;
+
+// This can be undefined, null, or the experimental implementation. If this is
+// null, that means `createAnimatedComponent` has already been initialized and
+// it is too late to call `inject`.
+let injected: ?createAnimatedComponent;
+
+/**
+ * Call during bundle initialization to opt-in to new `createAnimatedComponent`.
+ */
+export function inject(newInjected: createAnimatedComponent): void {
+  if (injected !== undefined) {
+    if (__DEV__) {
+      console.error(
+        'createAnimatedComponentInjection: ' +
+          (injected == null
+            ? 'Must be called before `createAnimatedComponent`.'
+            : 'Cannot be called more than once.'),
+      );
+    }
+    return;
+  }
+  injected = newInjected;
+}
+
+/**
+ * Only called by `createAnimatedComponent.js`.
+ */
+export function recordAndRetrieve(): createAnimatedComponent | null {
+  if (injected === undefined) {
+    injected = null;
+  }
+  return injected;
+}
diff --git a/node_modules/react-native/Libraries/Animated/createAnimatedComponent_EXPERIMENTAL.js b/node_modules/react-native/Libraries/Animated/createAnimatedComponent_EXPERIMENTAL.js
new file mode 100644
index 0000000..eb7c78c
--- /dev/null
+++ b/node_modules/react-native/Libraries/Animated/createAnimatedComponent_EXPERIMENTAL.js
@@ -0,0 +1,48 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict-local
+ * @format
+ */
+
+import StyleSheet from '../StyleSheet/StyleSheet';
+import useMergeRefs from '../Utilities/useMergeRefs';
+import useAnimatedProps from './useAnimatedProps';
+import * as React from 'react';
+
+/**
+ * Experimental implementation of `createAnimatedComponent` that is intended to
+ * be compatible with concurrent rendering.
+ */
+export default function createAnimatedComponent<TProps: {...}, TInstance>(
+  Component: React.AbstractComponent<TProps, TInstance>,
+): React.AbstractComponent<TProps, TInstance> {
+  return React.forwardRef((props, forwardedRef) => {
+    const [reducedProps, callbackRef] = useAnimatedProps<TProps, TInstance>(
+      props,
+    );
+    const ref = useMergeRefs<TInstance | null>(callbackRef, forwardedRef);
+
+    // Some components require explicit passthrough values for animation
+    // to work properly. For example, if an animated component is
+    // transformed and Pressable, onPress will not work after transform
+    // without these passthrough values.
+    // $FlowFixMe[prop-missing]
+    const {passthroughAnimatedPropExplicitValues, style} = reducedProps;
+    const {style: passthroughStyle, ...passthroughProps} =
+      passthroughAnimatedPropExplicitValues ?? {};
+    const mergedStyle = StyleSheet.compose(style, passthroughStyle);
+
+    return (
+      <Component
+        {...reducedProps}
+        {...passthroughProps}
+        style={mergedStyle}
+        ref={ref}
+      />
+    );
+  });
+}
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js
index 389a4a8..d6fba11 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js
@@ -18,7 +18,7 @@ import type {PlatformConfig} from '../AnimatedPlatformConfig';
 import normalizeColor from '../../StyleSheet/normalizeColor';
 import {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';
 import NativeAnimatedHelper from '../NativeAnimatedHelper';
-import AnimatedValue, {flushValue} from './AnimatedValue';
+import AnimatedValue from './AnimatedValue';
 import AnimatedWithChildren from './AnimatedWithChildren';
 
 export type AnimatedColorConfig = $ReadOnly<{
@@ -43,11 +43,10 @@ type RgbaAnimatedValue = {
   ...
 };
 
-export type InputValue = ?(RgbaValue | RgbaAnimatedValue | ColorValue);
-
 const NativeAnimatedAPI = NativeAnimatedHelper.API;
 
 const defaultColor: RgbaValue = {r: 0, g: 0, b: 0, a: 1.0};
+let _uniqueId = 1;
 
 /* eslint no-bitwise: 0 */
 function processColor(
@@ -114,12 +113,22 @@ export default class AnimatedColor extends AnimatedWithChildren {
   b: AnimatedValue;
   a: AnimatedValue;
   nativeColor: ?NativeColorValue;
-
-  _suspendCallbacks: number = 0;
-
-  constructor(valueIn?: InputValue, config?: ?AnimatedColorConfig) {
+  _listeners: {
+    [key: string]: {
+      r: string,
+      g: string,
+      b: string,
+      a: string,
+      ...
+    },
+    ...
+  } = {};
+
+  constructor(
+    valueIn?: ?(RgbaValue | RgbaAnimatedValue | ColorValue),
+    config?: ?AnimatedColorConfig,
+  ) {
     super();
-
     let value: RgbaValue | RgbaAnimatedValue | ColorValue =
       valueIn ?? defaultColor;
     if (isRgbaAnimatedValue(value)) {
@@ -147,8 +156,7 @@ export default class AnimatedColor extends AnimatedWithChildren {
       this.b = new AnimatedValue(initColor.b);
       this.a = new AnimatedValue(initColor.a);
     }
-
-    if (config?.useNativeDriver) {
+    if (this.nativeColor || (config && config.useNativeDriver)) {
       this.__makeNative();
     }
   }
@@ -166,27 +174,25 @@ export default class AnimatedColor extends AnimatedWithChildren {
 
     const processedColor: RgbaValue | NativeColorValue =
       processColor(value) ?? defaultColor;
-    this._withSuspendedCallbacks(() => {
-      if (isRgbaValue(processedColor)) {
-        // $FlowIgnore[incompatible-type] - Type is verified above
-        const rgbaValue: RgbaValue = processedColor;
-        this.r.setValue(rgbaValue.r);
-        this.g.setValue(rgbaValue.g);
-        this.b.setValue(rgbaValue.b);
-        this.a.setValue(rgbaValue.a);
-        if (this.nativeColor != null) {
-          this.nativeColor = null;
-          shouldUpdateNodeConfig = true;
-        }
-      } else {
-        // $FlowIgnore[incompatible-type] - Type is verified above
-        const nativeColor: NativeColorValue = processedColor;
-        if (this.nativeColor !== nativeColor) {
-          this.nativeColor = nativeColor;
-          shouldUpdateNodeConfig = true;
-        }
+    if (isRgbaValue(processedColor)) {
+      // $FlowIgnore[incompatible-type] - Type is verified above
+      const rgbaValue: RgbaValue = processedColor;
+      this.r.setValue(rgbaValue.r);
+      this.g.setValue(rgbaValue.g);
+      this.b.setValue(rgbaValue.b);
+      this.a.setValue(rgbaValue.a);
+      if (this.nativeColor != null) {
+        this.nativeColor = null;
+        shouldUpdateNodeConfig = true;
+      }
+    } else {
+      // $FlowIgnore[incompatible-type] - Type is verified above
+      const nativeColor: NativeColorValue = processedColor;
+      if (this.nativeColor !== nativeColor) {
+        this.nativeColor = nativeColor;
+        shouldUpdateNodeConfig = true;
       }
-    });
+    }
 
     if (this.__isNative) {
       const nativeTag = this.__getNativeTag();
@@ -197,12 +203,7 @@ export default class AnimatedColor extends AnimatedWithChildren {
         );
       }
       NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());
-    } else {
-      flushValue(this);
     }
-
-    // $FlowFixMe[incompatible-call]
-    this.__callListeners(this.__getValue());
   }
 
   /**
@@ -239,6 +240,50 @@ export default class AnimatedColor extends AnimatedWithChildren {
     this.a.extractOffset();
   }
 
+  /**
+   * Adds an asynchronous listener to the value so you can observe updates from
+   * animations.  This is useful because there is no way to synchronously read
+   * the value because it might be driven natively.
+   *
+   * Returns a string that serves as an identifier for the listener.
+   */
+  addListener(callback: ColorListenerCallback): string {
+    const id = String(_uniqueId++);
+    const jointCallback = ({value: number}: any) => {
+      callback(this.__getValue());
+    };
+    this._listeners[id] = {
+      r: this.r.addListener(jointCallback),
+      g: this.g.addListener(jointCallback),
+      b: this.b.addListener(jointCallback),
+      a: this.a.addListener(jointCallback),
+    };
+    return id;
+  }
+
+  /**
+   * Unregister a listener. The `id` param shall match the identifier
+   * previously returned by `addListener()`.
+   */
+  removeListener(id: string): void {
+    this.r.removeListener(this._listeners[id].r);
+    this.g.removeListener(this._listeners[id].g);
+    this.b.removeListener(this._listeners[id].b);
+    this.a.removeListener(this._listeners[id].a);
+    delete this._listeners[id];
+  }
+
+  /**
+   * Remove all registered listeners.
+   */
+  removeAllListeners(): void {
+    this.r.removeAllListeners();
+    this.g.removeAllListeners();
+    this.b.removeAllListeners();
+    this.a.removeAllListeners();
+    this._listeners = {};
+  }
+
   /**
    * Stops any running animation or tracking. `callback` is invoked with the
    * final value after stopping the animation, which is useful for updating
@@ -287,18 +332,6 @@ export default class AnimatedColor extends AnimatedWithChildren {
     super.__detach();
   }
 
-  _withSuspendedCallbacks(callback: () => void) {
-    this._suspendCallbacks++;
-    callback();
-    this._suspendCallbacks--;
-  }
-
-  __callListeners(value: number): void {
-    if (this._suspendCallbacks === 0) {
-      super.__callListeners(value);
-    }
-  }
-
   __makeNative(platformConfig: ?PlatformConfig) {
     this.r.__makeNative(platformConfig);
     this.g.__makeNative(platformConfig);
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedInterpolation.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedInterpolation.js
index 8f504c5..be85be6 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedInterpolation.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedInterpolation.js
@@ -16,8 +16,6 @@ import type {PlatformConfig} from '../AnimatedPlatformConfig';
 import type AnimatedNode from './AnimatedNode';
 
 import normalizeColor from '../../StyleSheet/normalizeColor';
-import processColor from '../../StyleSheet/processColor';
-import Easing from '../Easing';
 import NativeAnimatedHelper from '../NativeAnimatedHelper';
 import AnimatedWithChildren from './AnimatedWithChildren';
 import invariant from 'invariant';
@@ -33,17 +31,39 @@ export type InterpolationConfigType<OutputT: number | string> = $ReadOnly<{
   extrapolateRight?: ExtrapolateType,
 }>;
 
+const linear = (t: number) => t;
+
 /**
  * Very handy helper to map input ranges to output ranges with an easing
  * function and custom behavior outside of the ranges.
  */
-function createNumericInterpolation(
-  config: InterpolationConfigType<number>,
-): (input: number) => number {
+function createInterpolation<OutputT: number | string>(
+  config: InterpolationConfigType<OutputT>,
+): (input: number) => OutputT {
+  if (config.outputRange && typeof config.outputRange[0] === 'string') {
+    return (createInterpolationFromStringOutputRange((config: any)): any);
+  }
+
   const outputRange: $ReadOnlyArray<number> = (config.outputRange: any);
+
   const inputRange = config.inputRange;
 
-  const easing = config.easing || Easing.linear;
+  if (__DEV__) {
+    checkInfiniteRange('outputRange', outputRange);
+    checkInfiniteRange('inputRange', inputRange);
+    checkValidInputRange(inputRange);
+
+    invariant(
+      inputRange.length === outputRange.length,
+      'inputRange (' +
+        inputRange.length +
+        ') and outputRange (' +
+        outputRange.length +
+        ') must have the same length',
+    );
+  }
+
+  const easing = config.easing || linear;
 
   let extrapolateLeft: ExtrapolateType = 'extend';
   if (config.extrapolateLeft !== undefined) {
@@ -147,49 +167,24 @@ function interpolate(
   return result;
 }
 
-const numericComponentRegex = /[+-]?(?:\d+\.?\d*|\.\d+)(?:[eE][+-]?\d+)?/g;
-
-// Maps string inputs an RGBA color or an array of numeric components
-function mapStringToNumericComponents(
-  input: string,
-):
-  | {isColor: true, components: [number, number, number, number]}
-  | {isColor: false, components: $ReadOnlyArray<number | string>} {
+function colorToRgba(input: string): string {
   let normalizedColor = normalizeColor(input);
-  invariant(
-    normalizedColor == null || typeof normalizedColor !== 'object',
-    'PlatformColors are not supported',
-  );
-
-  if (typeof normalizedColor === 'number') {
-    normalizedColor = normalizedColor || 0;
-    const r = (normalizedColor & 0xff000000) >>> 24;
-    const g = (normalizedColor & 0x00ff0000) >>> 16;
-    const b = (normalizedColor & 0x0000ff00) >>> 8;
-    const a = (normalizedColor & 0x000000ff) / 255;
-    return {isColor: true, components: [r, g, b, a]};
-  } else {
-    const components: Array<string | number> = [];
-    let lastMatchEnd = 0;
-    let match: RegExp$matchResult;
-    while ((match = (numericComponentRegex.exec(input): any)) != null) {
-      if (match.index > lastMatchEnd) {
-        components.push(input.substring(lastMatchEnd, match.index));
-      }
-      components.push(parseFloat(match[0]));
-      lastMatchEnd = match.index + match[0].length;
-    }
-    invariant(
-      components.length > 0,
-      'outputRange must contain color or value with numeric component',
-    );
-    if (lastMatchEnd < input.length) {
-      components.push(input.substring(lastMatchEnd, input.length));
-    }
-    return {isColor: false, components};
+  if (normalizedColor === null || typeof normalizedColor !== 'number') {
+    return input;
   }
+
+  normalizedColor = normalizedColor || 0;
+
+  const r = (normalizedColor & 0xff000000) >>> 24;
+  const g = (normalizedColor & 0x00ff0000) >>> 16;
+  const b = (normalizedColor & 0x0000ff00) >>> 8;
+  const a = (normalizedColor & 0x000000ff) / 255;
+
+  return `rgba(${r}, ${g}, ${b}, ${a})`;
 }
 
+const stringShapeRegex = /[+-]?(?:\d+\.?\d*|\.\d+)(?:[eE][+-]?\d+)?/g;
+
 /**
  * Supports string shapes by extracting numbers so new values can be computed,
  * and recombines those values into new strings of the same shape.  Supports
@@ -198,69 +193,76 @@ function mapStringToNumericComponents(
  *   rgba(123, 42, 99, 0.36) // colors
  *   -45deg                  // values with units
  */
-function createStringInterpolation(
+function createInterpolationFromStringOutputRange(
   config: InterpolationConfigType<string>,
 ): (input: number) => string {
-  invariant(config.outputRange.length >= 2, 'Bad output range');
-  const outputRange = config.outputRange.map(mapStringToNumericComponents);
+  let outputRange: Array<string> = (config.outputRange: any);
+  invariant(outputRange.length >= 2, 'Bad output range');
+  outputRange = outputRange.map(colorToRgba);
+  checkPattern(outputRange);
+
+  // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']
+  // ->
+  // [
+  //   [0, 50],
+  //   [100, 150],
+  //   [200, 250],
+  //   [0, 0.5],
+  // ]
+  /* $FlowFixMe[incompatible-use] (>=0.18.0): `outputRange[0].match()` can
+   * return `null`. Need to guard against this possibility. */
+  const outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);
+  outputRange.forEach(value => {
+    /* $FlowFixMe[incompatible-use] (>=0.18.0): `value.match()` can return
+     * `null`. Need to guard against this possibility. */
+    value.match(stringShapeRegex).forEach((number, i) => {
+      outputRanges[i].push(+number);
+    });
+  });
+
+  const interpolations = outputRange[0]
+    .match(stringShapeRegex)
+    /* $FlowFixMe[incompatible-use] (>=0.18.0): `outputRange[0].match()` can
+     * return `null`. Need to guard against this possibility. */
+    /* $FlowFixMe[incompatible-call] (>=0.18.0): `outputRange[0].match()` can
+     * return `null`. Need to guard against this possibility. */
+    .map((value, i) => {
+      return createInterpolation({
+        ...config,
+        outputRange: outputRanges[i],
+      });
+    });
 
-  const isColor = outputRange[0].isColor;
-  if (__DEV__) {
-    invariant(
-      outputRange.every(output => output.isColor === isColor),
-      'All elements of output range should either be a color or a string with numeric components',
-    );
-    const firstOutput = outputRange[0].components;
-    invariant(
-      outputRange.every(
-        output => output.components.length === firstOutput.length,
-      ),
-      'All elements of output range should have the same number of components',
-    );
-    invariant(
-      outputRange.every(output =>
-        output.components.every(
-          (component, i) =>
-            // $FlowIgnoreMe[invalid-compare]
-            typeof component === 'number' || component === firstOutput[i],
-        ),
-      ),
-      'All elements of output range should have the same non-numeric components',
-    );
-  }
+  // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to
+  // round the opacity (4th column).
+  const shouldRound = isRgbOrRgba(outputRange[0]);
 
-  const numericComponents: $ReadOnlyArray<$ReadOnlyArray<number>> =
-    outputRange.map(output =>
-      isColor
-        ? // $FlowIgnoreMe[incompatible-call]
-          output.components
-        : // $FlowIgnoreMe[incompatible-call]
-          output.components.filter(c => typeof c === 'number'),
+  return input => {
+    let i = 0;
+    // 'rgba(0, 100, 200, 0)'
+    // ->
+    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'
+    return outputRange[0].replace(stringShapeRegex, () => {
+      let val = +interpolations[i++](input);
+      if (shouldRound) {
+        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
+      }
+      return String(val);
+    });
+  };
+}
+
+function isRgbOrRgba(range: string) {
+  return typeof range === 'string' && range.startsWith('rgb');
+}
+
+function checkPattern(arr: $ReadOnlyArray<string>) {
+  const pattern = arr[0].replace(stringShapeRegex, '');
+  for (let i = 1; i < arr.length; ++i) {
+    invariant(
+      pattern === arr[i].replace(stringShapeRegex, ''),
+      'invalid pattern ' + arr[0] + ' and ' + arr[i],
     );
-  const interpolations = numericComponents[0].map((_, i) =>
-    createNumericInterpolation({
-      ...config,
-      outputRange: numericComponents.map(components => components[i]),
-    }),
-  );
-  if (!isColor) {
-    return input => {
-      const values = interpolations.map(interpolation => interpolation(input));
-      let i = 0;
-      return outputRange[0].components
-        .map(c => (typeof c === 'number' ? values[i++] : c))
-        .join('');
-    };
-  } else {
-    return input => {
-      const result = interpolations.map((interpolation, i) => {
-        const value = interpolation(input);
-        // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to
-        // round the opacity (4th column).
-        return i < 3 ? Math.round(value) : Math.round(value * 1000) / 1000;
-      });
-      return `rgba(${result[0]}, ${result[1]}, ${result[2]}, ${result[3]})`;
-    };
   }
 }
 
@@ -274,24 +276,6 @@ function findRange(input: number, inputRange: $ReadOnlyArray<number>) {
   return i - 1;
 }
 
-function checkValidRanges<OutputT: number | string>(
-  inputRange: $ReadOnlyArray<number>,
-  outputRange: $ReadOnlyArray<OutputT>,
-) {
-  checkInfiniteRange('outputRange', outputRange);
-  checkInfiniteRange('inputRange', inputRange);
-  checkValidInputRange(inputRange);
-
-  invariant(
-    inputRange.length === outputRange.length,
-    'inputRange (' +
-      inputRange.length +
-      ') and outputRange (' +
-      outputRange.length +
-      ') must have the same length',
-  );
-}
-
 function checkValidInputRange(arr: $ReadOnlyArray<number>) {
   invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
   const message =
@@ -301,10 +285,7 @@ function checkValidInputRange(arr: $ReadOnlyArray<number>) {
   }
 }
 
-function checkInfiniteRange<OutputT: number | string>(
-  name: string,
-  arr: $ReadOnlyArray<OutputT>,
-) {
+function checkInfiniteRange(name: string, arr: $ReadOnlyArray<number>) {
   invariant(arr.length >= 2, name + ' must have at least 2 elements');
   invariant(
     arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,
@@ -313,7 +294,6 @@ function checkInfiniteRange<OutputT: number | string>(
      * doesn't cleanly convert to a string, like undefined, null, and object,
      * etc. If you really mean this implicit string conversion, you can do
      * something like String(myThing) */
-    // $FlowFixMe[unsafe-addition]
     name + 'cannot be ]-infinity;+infinity[ ' + arr,
   );
 }
@@ -321,34 +301,20 @@ function checkInfiniteRange<OutputT: number | string>(
 export default class AnimatedInterpolation<
   OutputT: number | string,
 > extends AnimatedWithChildren {
+  // Export for testing.
+  static __createInterpolation: (
+    config: InterpolationConfigType<OutputT>,
+  ) => (input: number) => OutputT = createInterpolation;
+
   _parent: AnimatedNode;
   _config: InterpolationConfigType<OutputT>;
-  _interpolation: ?(input: number) => OutputT;
+  _interpolation: (input: number) => OutputT;
 
   constructor(parent: AnimatedNode, config: InterpolationConfigType<OutputT>) {
     super();
     this._parent = parent;
     this._config = config;
-
-    if (__DEV__) {
-      checkValidRanges(config.inputRange, config.outputRange);
-
-      // Create interpolation eagerly in dev, so we can signal errors faster
-      // even when using the native driver
-      this._getInterpolation();
-    }
-  }
-
-  _getInterpolation(): number => OutputT {
-    if (!this._interpolation) {
-      const config = this._config;
-      if (config.outputRange && typeof config.outputRange[0] === 'string') {
-        this._interpolation = (createStringInterpolation((config: any)): any);
-      } else {
-        this._interpolation = (createNumericInterpolation((config: any)): any);
-      }
-    }
-    return this._interpolation;
+    this._interpolation = createInterpolation(config);
   }
 
   __makeNative(platformConfig: ?PlatformConfig) {
@@ -356,13 +322,13 @@ export default class AnimatedInterpolation<
     super.__makeNative(platformConfig);
   }
 
-  __getValue(): OutputT {
+  __getValue(): number | string {
     const parentValue: number = this._parent.__getValue();
     invariant(
       typeof parentValue === 'number',
       'Cannot interpolate an input which is not a number.',
     );
-    return this._getInterpolation()(parentValue);
+    return this._interpolation(parentValue);
   }
 
   interpolate<NewOutputT: number | string>(
@@ -380,31 +346,19 @@ export default class AnimatedInterpolation<
     super.__detach();
   }
 
+  __transformDataType(range: $ReadOnlyArray<OutputT>): Array<any> {
+    return range.map(NativeAnimatedHelper.transformDataType);
+  }
+
   __getNativeConfig(): any {
     if (__DEV__) {
       NativeAnimatedHelper.validateInterpolation(this._config);
     }
 
-    // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here
-    let outputRange = this._config.outputRange;
-    let outputType = null;
-    if (typeof outputRange[0] === 'string') {
-      // $FlowIgnoreMe[incompatible-cast]
-      outputRange = ((outputRange: $ReadOnlyArray<string>).map(value => {
-        const processedColor = processColor(value);
-        if (typeof processedColor === 'number') {
-          outputType = 'color';
-          return processedColor;
-        } else {
-          return NativeAnimatedHelper.transformDataType(value);
-        }
-      }): any);
-    }
-
     return {
       inputRange: this._config.inputRange,
-      outputRange,
-      outputType,
+      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here
+      outputRange: this.__transformDataType(this._config.outputRange),
       extrapolateLeft:
         this._config.extrapolateLeft || this._config.extrapolate || 'extend',
       extrapolateRight:
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedNode.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedNode.js
index bd9d7b0..890e9e8 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedNode.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedNode.js
@@ -12,6 +12,7 @@
 
 import type {PlatformConfig} from '../AnimatedPlatformConfig';
 
+import ReactNativeFeatureFlags from '../../ReactNative/ReactNativeFeatureFlags';
 import NativeAnimatedHelper from '../NativeAnimatedHelper';
 import invariant from 'invariant';
 
@@ -29,7 +30,9 @@ export default class AnimatedNode {
   __nativeAnimatedValueListener: ?any;
   __attach(): void {}
   __detach(): void {
-    this.removeAllListeners();
+    if (ReactNativeFeatureFlags.removeListenersOnDetach()) {
+      this.removeAllListeners();
+    }
     if (this.__isNative && this.__nativeTag != null) {
       NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);
       this.__nativeTag = undefined;
@@ -41,7 +44,7 @@ export default class AnimatedNode {
   }
   __addChild(child: AnimatedNode) {}
   __removeChild(child: AnimatedNode) {}
-  __getChildren(): $ReadOnlyArray<AnimatedNode> {
+  __getChildren(): Array<AnimatedNode> {
     return [];
   }
 
@@ -183,7 +186,6 @@ export default class AnimatedNode {
       'This JS animated node type cannot be used as native animated node',
     );
   }
-
   toJSON(): any {
     return this.__getValue();
   }
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js
index d6ebbb0..ef15cdf 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js
@@ -90,15 +90,14 @@ export default class AnimatedProps extends AnimatedNode {
   }
 
   __makeNative(platformConfig: ?PlatformConfig): void {
-    for (const key in this._props) {
-      const value = this._props[key];
-      if (value instanceof AnimatedNode) {
-        value.__makeNative(platformConfig);
-      }
-    }
-
     if (!this.__isNative) {
       this.__isNative = true;
+      for (const key in this._props) {
+        const value = this._props[key];
+        if (value instanceof AnimatedNode) {
+          value.__makeNative(platformConfig);
+        }
+      }
 
       // Since this does not call the super.__makeNative, we need to store the
       // supplied platformConfig here, before calling __connectAnimatedView
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedStyle.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedStyle.js
index e851b60..7cb11bb 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedStyle.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedStyle.js
@@ -13,54 +13,24 @@
 import type {PlatformConfig} from '../AnimatedPlatformConfig';
 
 import flattenStyle from '../../StyleSheet/flattenStyle';
-import Platform from '../../Utilities/Platform';
 import NativeAnimatedHelper from '../NativeAnimatedHelper';
 import AnimatedNode from './AnimatedNode';
 import AnimatedTransform from './AnimatedTransform';
 import AnimatedWithChildren from './AnimatedWithChildren';
 
-function createAnimatedStyle(inputStyle: any): Object {
-  // $FlowFixMe[underconstrained-implicit-instantiation]
-  const style = flattenStyle(inputStyle);
-  const animatedStyles: any = {};
-  for (const key in style) {
-    const value = style[key];
-    if (key === 'transform') {
-      animatedStyles[key] = new AnimatedTransform(value);
-    } else if (value instanceof AnimatedNode) {
-      animatedStyles[key] = value;
-    } else if (value && !Array.isArray(value) && typeof value === 'object') {
-      animatedStyles[key] = createAnimatedStyle(value);
-    }
-  }
-  return animatedStyles;
-}
-
-function createStyleWithAnimatedTransform(inputStyle: any): Object {
-  // $FlowFixMe[underconstrained-implicit-instantiation]
-  let style = flattenStyle(inputStyle) || ({}: {[string]: any});
-
-  if (style.transform) {
-    style = {
-      ...style,
-      transform: new AnimatedTransform(style.transform),
-    };
-  }
-  return style;
-}
-
 export default class AnimatedStyle extends AnimatedWithChildren {
-  _inputStyle: any;
   _style: Object;
 
   constructor(style: any) {
     super();
-    if (Platform.OS === 'web') {
-      this._inputStyle = style;
-      this._style = createAnimatedStyle(style);
-    } else {
-      this._style = createStyleWithAnimatedTransform(style);
+    style = flattenStyle(style) || ({}: {[string]: any});
+    if (style.transform) {
+      style = {
+        ...style,
+        transform: new AnimatedTransform(style.transform),
+      };
     }
+    this._style = style;
   }
 
   // Recursively get values for nested styles (like iOS's shadowOffset)
@@ -80,11 +50,7 @@ export default class AnimatedStyle extends AnimatedWithChildren {
     return updatedStyle;
   }
 
-  __getValue(): Object | Array<Object> {
-    if (Platform.OS === 'web') {
-      return [this._inputStyle, this._walkStyleAndGetValues(this._style)];
-    }
-
+  __getValue(): Object {
     return this._walkStyleAndGetValues(this._style);
   }
 
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js
index b36c970..3b553c9 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js
@@ -68,7 +68,7 @@ export default class AnimatedTransform extends AnimatedWithChildren {
   }
 
   __getNativeConfig(): any {
-    const transConfigs: Array<any> = [];
+    const transConfigs = [];
 
     this._transforms.forEach(transform => {
       for (const key in transform) {
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedValue.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedValue.js
index 207dbf6..f20307b 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedValue.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedValue.js
@@ -48,18 +48,21 @@ const NativeAnimatedAPI = NativeAnimatedHelper.API;
  * this two-phases process is to deal with composite props such as
  * transform which can receive values from multiple parents.
  */
-export function flushValue(rootNode: AnimatedNode): void {
-  const leaves = new Set<{update: () => void, ...}>();
-  function findAnimatedStyles(node: AnimatedNode) {
-    // $FlowFixMe[prop-missing]
+function _flush(rootNode: AnimatedValue): void {
+  const animatedStyles = new Set<AnimatedValue | AnimatedNode>();
+  function findAnimatedStyles(node: AnimatedValue | AnimatedNode) {
+    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment
+     * suppresses an error found when Flow v0.68 was deployed. To see the error
+     * delete this comment and run Flow. */
     if (typeof node.update === 'function') {
-      leaves.add((node: any));
+      animatedStyles.add(node);
     } else {
       node.__getChildren().forEach(findAnimatedStyles);
     }
   }
   findAnimatedStyles(rootNode);
-  leaves.forEach(leaf => leaf.update());
+  // $FlowFixMe[prop-missing]
+  animatedStyles.forEach(animatedStyle => animatedStyle.update());
 }
 
 /**
@@ -88,6 +91,7 @@ export default class AnimatedValue extends AnimatedWithChildren {
   _animation: ?Animation;
   _tracking: ?AnimatedTracking;
 
+  // $FlowFixMe[missing-local-annot]
   constructor(value: number, config?: ?AnimatedValueConfig) {
     super();
     if (typeof value !== 'number') {
@@ -287,9 +291,9 @@ export default class AnimatedValue extends AnimatedWithChildren {
 
     this._value = value;
     if (flush) {
-      flushValue(this);
+      _flush(this);
     }
-    this.__callListeners(this.__getValue());
+    super.__callListeners(this.__getValue());
   }
 
   __getNativeConfig(): Object {
diff --git a/node_modules/react-native/Libraries/Animated/nodes/AnimatedWithChildren.js b/node_modules/react-native/Libraries/Animated/nodes/AnimatedWithChildren.js
index 93d8849..ac4ade6 100644
--- a/node_modules/react-native/Libraries/Animated/nodes/AnimatedWithChildren.js
+++ b/node_modules/react-native/Libraries/Animated/nodes/AnimatedWithChildren.js
@@ -70,7 +70,7 @@ export default class AnimatedWithChildren extends AnimatedNode {
     }
   }
 
-  __getChildren(): $ReadOnlyArray<AnimatedNode> {
+  __getChildren(): Array<AnimatedNode> {
     return this._children;
   }
 
diff --git a/node_modules/react-native/Libraries/Animated/useAnimatedProps.js b/node_modules/react-native/Libraries/Animated/useAnimatedProps.js
index ac64cc8..1b7d810 100644
--- a/node_modules/react-native/Libraries/Animated/useAnimatedProps.js
+++ b/node_modules/react-native/Libraries/Animated/useAnimatedProps.js
@@ -10,7 +10,6 @@
 
 'use strict';
 
-import {isPublicInstance as isFabricPublicInstance} from '../Renderer/public/ReactFabricPublicInstanceUtils';
 import useRefEffect from '../Utilities/useRefEffect';
 import {AnimatedEvent} from './AnimatedEvent';
 import NativeAnimatedHelper from './NativeAnimatedHelper';
@@ -53,7 +52,7 @@ export default function useAnimatedProps<TProps: {...}, TInstance>(
   //   2) Update `onUpdateRef`.
   //   3) Update listeners for `AnimatedEvent` props.
   //
-  // Ideally, each of these would be separate "effects" so that they are not
+  // Ideally, each of these would be separat "effects" so that they are not
   // unnecessarily re-run when irrelevant dependencies change. For example, we
   // should be able to hoist all `AnimatedEvent` props and only do #3 if either
   // the `AnimatedEvent` props change or `instance` changes.
@@ -184,7 +183,7 @@ function getEventTarget<TInstance>(instance: TInstance): TInstance {
 // $FlowFixMe[unclear-type] - Legacy instance assumptions.
 function isFabricInstance(instance: any): boolean {
   return (
-    isFabricPublicInstance(instance) ||
+    hasFabricHandle(instance) ||
     // Some components have a setNativeProps function but aren't a host component
     // such as lists like FlatList and SectionList. These should also use
     // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying
@@ -193,9 +192,13 @@ function isFabricInstance(instance: any): boolean {
     // If these components end up using forwardRef then these hacks can go away
     // as instance would actually be the underlying host component and the above check
     // would be sufficient.
-    isFabricPublicInstance(instance?.getNativeScrollRef?.()) ||
-    isFabricPublicInstance(
-      instance?.getScrollResponder?.()?.getNativeScrollRef?.(),
-    )
+    hasFabricHandle(instance?.getNativeScrollRef?.()) ||
+    hasFabricHandle(instance?.getScrollResponder?.()?.getNativeScrollRef?.())
   );
 }
+
+// $FlowFixMe[unclear-type] - Legacy instance assumptions.
+function hasFabricHandle(instance: any): boolean {
+  // eslint-disable-next-line dot-notation
+  return instance?.['_internalInstanceHandle']?.stateNode?.canonical != null;
+}
diff --git a/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.h b/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.h
index a5bd94c..b66b994 100644
--- a/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.h
+++ b/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.h
@@ -24,7 +24,7 @@
  * @end
  * ```
  *
- * All the methods implemented by the RCTAppDelegate can be overridden by your AppDelegate if you need to provide a
+ * All the methods implemented by the RCTAppDelegate can be overriden by your AppDelegate if you need to provide a
  custom implementation.
  * If you need to customize the default implementation, you can invoke `[super <method_name>]` and use the returned
  object.
@@ -94,17 +94,19 @@
  */
 - (UIViewController *)createRootViewController;
 
-/// This method controls whether the App will use RuntimeScheduler. Only applicable in the legacy architecture.
-///
-/// @return: `YES` to use RuntimeScheduler, `NO` to use JavaScript scheduler. The default value is `YES`.
-- (BOOL)runtimeSchedulerEnabled;
-
 #if RCT_NEW_ARCH_ENABLED
 
 /// The TurboModule manager
 @property (nonatomic, strong) RCTTurboModuleManager *turboModuleManager;
 @property (nonatomic, strong) RCTSurfacePresenterBridgeAdapter *bridgeAdapter;
 
+/// This method controls whether the `concurrentRoot` feature of React18 is turned on or off.
+///
+/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html
+/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).
+/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.
+- (BOOL)concurrentRootEnabled;
+
 /// This method controls whether the `turboModules` feature of the New Architecture is turned on or off.
 ///
 /// @note: This is required to be rendering on Fabric (i.e. on the New Architecture).
diff --git a/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.mm b/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.mm
index 7be91c3..e8356af 100644
--- a/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.mm
+++ b/node_modules/react-native/Libraries/AppDelegate/RCTAppDelegate.mm
@@ -6,29 +6,21 @@
  */
 
 #import "RCTAppDelegate.h"
-#import <React/RCTCxxBridgeDelegate.h>
+#import <React/RCTAppSetupUtils.h>
 #import <React/RCTRootView.h>
-#import <React/RCTRuntimeExecutorFromBridge.h>
-#import <react/renderer/runtimescheduler/RuntimeScheduler.h>
-
-#import "RCTAppSetupUtils.h"
 
 #if RCT_NEW_ARCH_ENABLED
 #import <React/CoreModulesPlugins.h>
-#import <React/RCTComponentViewFactory.h>
-#import <React/RCTComponentViewProtocol.h>
+#import <React/RCTCxxBridgeDelegate.h>
 #import <React/RCTFabricSurfaceHostingProxyRootView.h>
-#import <React/RCTLegacyViewManagerInteropComponentView.h>
 #import <React/RCTSurfacePresenter.h>
 #import <React/RCTSurfacePresenterBridgeAdapter.h>
 #import <ReactCommon/RCTTurboModuleManager.h>
 #import <react/config/ReactNativeConfig.h>
-#import <react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h>
-#import "RCTLegacyInteropComponents.h"
 
 static NSString *const kRNConcurrentRoot = @"concurrentRoot";
 
-@interface RCTAppDelegate () <RCTTurboModuleManagerDelegate> {
+@interface RCTAppDelegate () <RCTTurboModuleManagerDelegate, RCTCxxBridgeDelegate> {
   std::shared_ptr<const facebook::react::ReactNativeConfig> _reactNativeConfig;
   facebook::react::ContextContainer::Shared _contextContainer;
 }
@@ -36,53 +28,43 @@ @interface RCTAppDelegate () <RCTTurboModuleManagerDelegate> {
 
 #endif
 
-@interface RCTAppDelegate () <RCTCxxBridgeDelegate> {
-  std::shared_ptr<facebook::react::RuntimeScheduler> _runtimeScheduler;
-}
-@end
-
 @implementation RCTAppDelegate
 
-#if RCT_NEW_ARCH_ENABLED
-- (instancetype)init
-{
-  if (self = [super init]) {
-    _contextContainer = std::make_shared<facebook::react::ContextContainer const>();
-    _reactNativeConfig = std::make_shared<facebook::react::EmptyReactNativeConfig const>();
-    _contextContainer->insert("ReactNativeConfig", _reactNativeConfig);
-  }
-  return self;
-}
-#endif
-
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
   BOOL enableTM = NO;
 #if RCT_NEW_ARCH_ENABLED
   enableTM = self.turboModuleEnabled;
 #endif
+
   RCTAppSetupPrepareApp(application, enableTM);
 
   if (!self.bridge) {
     self.bridge = [self createBridgeWithDelegate:self launchOptions:launchOptions];
   }
 #if RCT_NEW_ARCH_ENABLED
+  _contextContainer = std::make_shared<facebook::react::ContextContainer const>();
+  _reactNativeConfig = std::make_shared<facebook::react::EmptyReactNativeConfig const>();
+  _contextContainer->insert("ReactNativeConfig", _reactNativeConfig);
   self.bridgeAdapter = [[RCTSurfacePresenterBridgeAdapter alloc] initWithBridge:self.bridge
                                                                contextContainer:_contextContainer];
   self.bridge.surfacePresenter = self.bridgeAdapter.surfacePresenter;
-
-  [self unstable_registerLegacyComponents];
 #endif
 
   NSDictionary *initProps = [self prepareInitialProps];
   UIView *rootView = [self createRootViewWithBridge:self.bridge moduleName:self.moduleName initProps:initProps];
 
+  if (@available(iOS 13.0, *)) {
+    rootView.backgroundColor = [UIColor systemBackgroundColor];
+  } else {
+    rootView.backgroundColor = [UIColor whiteColor];
+  }
+
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
   UIViewController *rootViewController = [self createRootViewController];
   rootViewController.view = rootView;
   self.window.rootViewController = rootViewController;
   [self.window makeKeyAndVisible];
-
   return YES;
 }
 
@@ -93,14 +75,19 @@ - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
   return nil;
 }
 
+- (BOOL)concurrentRootEnabled
+{
+  [NSException raise:@"concurrentRootEnabled not implemented"
+              format:@"Subclasses must implement a valid concurrentRootEnabled method"];
+  return true;
+}
+
 - (NSDictionary *)prepareInitialProps
 {
   NSMutableDictionary *initProps = self.initialProps ? [self.initialProps mutableCopy] : [NSMutableDictionary new];
 
 #ifdef RCT_NEW_ARCH_ENABLED
-  // Hardcoding the Concurrent Root as it it not recommended to
-  // have the concurrentRoot turned off when Fabric is enabled.
-  initProps[kRNConcurrentRoot] = @([self fabricEnabled]);
+  initProps[kRNConcurrentRoot] = @([self concurrentRootEnabled]);
 #endif
 
   return initProps;
@@ -119,14 +106,7 @@ - (UIView *)createRootViewWithBridge:(RCTBridge *)bridge
 #if RCT_NEW_ARCH_ENABLED
   enableFabric = self.fabricEnabled;
 #endif
-  UIView *rootView = RCTAppSetupDefaultRootView(bridge, moduleName, initProps, enableFabric);
-  if (@available(iOS 13.0, *)) {
-    rootView.backgroundColor = [UIColor systemBackgroundColor];
-  } else {
-    rootView.backgroundColor = [UIColor whiteColor];
-  }
-
-  return rootView;
+  return RCTAppSetupDefaultRootView(bridge, moduleName, initProps, enableFabric);
 }
 
 - (UIViewController *)createRootViewController
@@ -134,34 +114,18 @@ - (UIViewController *)createRootViewController
   return [UIViewController new];
 }
 
-- (BOOL)runtimeSchedulerEnabled
-{
-  return YES;
-}
-
+#if RCT_NEW_ARCH_ENABLED
 #pragma mark - RCTCxxBridgeDelegate
+
 - (std::unique_ptr<facebook::react::JSExecutorFactory>)jsExecutorFactoryForBridge:(RCTBridge *)bridge
 {
-#if RCT_NEW_ARCH_ENABLED
-  _runtimeScheduler = std::make_shared<facebook::react::RuntimeScheduler>(RCTRuntimeExecutorFromBridge(bridge));
-  std::shared_ptr<facebook::react::CallInvoker> callInvoker =
-      std::make_shared<facebook::react::RuntimeSchedulerCallInvoker>(_runtimeScheduler);
-  self.turboModuleManager = [[RCTTurboModuleManager alloc] initWithBridge:bridge delegate:self jsInvoker:callInvoker];
-  _contextContainer->erase("RuntimeScheduler");
-  _contextContainer->insert("RuntimeScheduler", _runtimeScheduler);
-  return RCTAppSetupDefaultJsExecutorFactory(bridge, self.turboModuleManager, _runtimeScheduler);
-#else
-  if (self.runtimeSchedulerEnabled) {
-    _runtimeScheduler = std::make_shared<facebook::react::RuntimeScheduler>(RCTRuntimeExecutorFromBridge(bridge));
-  }
-  return RCTAppSetupJsExecutorFactoryForOldArch(bridge, _runtimeScheduler);
-#endif
+  self.turboModuleManager = [[RCTTurboModuleManager alloc] initWithBridge:bridge
+                                                                 delegate:self
+                                                                jsInvoker:bridge.jsCallInvoker];
+  return RCTAppSetupDefaultJsExecutorFactory(bridge, _turboModuleManager);
 }
 
-
-#if RCT_NEW_ARCH_ENABLED
-
-#pragma mark - RCTTurboModuleManagerDelegate
+#pragma mark RCTTurboModuleManagerDelegate
 
 - (Class)getModuleClassFromName:(const char *)name
 {
@@ -198,15 +162,6 @@ - (BOOL)fabricEnabled
   return YES;
 }
 
-#pragma mark - New Arch Utilities
-
-- (void)unstable_registerLegacyComponents
-{
-  for (NSString *legacyComponent in [RCTLegacyInteropComponents legacyInteropComponents]) {
-    [RCTLegacyViewManagerInteropComponentView supportLegacyViewManagerWithName:legacyComponent];
-  }
-}
-
 #endif
 
 @end
diff --git a/node_modules/react-native/Libraries/AppDelegate/React-RCTAppDelegate.podspec b/node_modules/react-native/Libraries/AppDelegate/React-RCTAppDelegate.podspec
index 1c1ae9b..fff8711 100644
--- a/node_modules/react-native/Libraries/AppDelegate/React-RCTAppDelegate.podspec
+++ b/node_modules/react-native/Libraries/AppDelegate/React-RCTAppDelegate.podspec
@@ -16,17 +16,14 @@ else
   source[:tag] = "v#{version}"
 end
 
-folly_flags = ' -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
+folly_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
 folly_compiler_flags = folly_flags + ' ' + '-Wno-comma -Wno-shorten-64-to-32'
 
-is_new_arch_enabled = ENV["RCT_NEW_ARCH_ENABLED"] == "1"
-new_arch_enabled_flag = (is_new_arch_enabled ? " -DRCT_NEW_ARCH_ENABLED" : "")
-is_fabric_enabled = is_new_arch_enabled || ENV["RCT_FABRIC_ENABLED"]
-fabric_flag = (is_fabric_enabled ? " -DRN_FABRIC_ENABLED" : "")
-other_cflags = "$(inherited)" + folly_flags + new_arch_enabled_flag + fabric_flag
+new_arch_enabled_flag="RCT_NEW_ARCH_ENABLED"
+is_new_arch_enabled = ENV[new_arch_enabled_flag] == "1"
+other_cflags = "$(inherited) -DRN_FABRIC_ENABLED " + folly_flags + (is_new_arch_enabled ? " -D"+"RCT_NEW_ARCH_ENABLED" : "")
 
 use_hermes = ENV['USE_HERMES'] == '1'
-use_frameworks = ENV['USE_FRAMEWORKS'] != nil
 
 header_search_paths = [
   "$(PODS_TARGET_SRCROOT)/ReactCommon",
@@ -40,16 +37,6 @@ header_search_paths = [
 ].concat(use_hermes ? [
   "$(PODS_ROOT)/Headers/Public/React-hermes",
   "$(PODS_ROOT)/Headers/Public/hermes-engine"
-] : []).concat(use_frameworks ? [
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-Fabric/React_Fabric.framework/Headers/",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers/",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-RCTFabric/RCTFabric.framework/Headers/",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-utils/React_utils.framework/Headers/",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-debug/React_debug.framework/Headers/",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-runtimescheduler/React_runtimescheduler.framework/Headers/",
 ] : []).map{|p| "\"#{p}\""}.join(" ")
 
 Pod::Spec.new do |s|
@@ -59,7 +46,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/actionsheetios"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files            = "**/*.{c,h,m,mm,S,cpp}"
@@ -78,34 +65,9 @@ Pod::Spec.new do |s|
   s.dependency "RCTRequired"
   s.dependency "RCTTypeSafety"
   s.dependency "ReactCommon/turbomodule/core"
-  s.dependency "React-RCTNetwork"
-  s.dependency "React-RCTImage"
-  s.dependency "React-NativeModulesApple"
-  s.dependency "React-CoreModules"
-  s.dependency "React-runtimescheduler"
-
-  if ENV['USE_HERMES'] == nil || ENV['USE_HERMES'] == "1"
-    s.dependency "React-hermes"
-  else
-    s.dependency "React-jsc"
-  end
 
   if is_new_arch_enabled
     s.dependency "React-RCTFabric"
     s.dependency "React-graphics"
-    s.dependency "React-utils"
-    s.dependency "React-debug"
-
-    s.script_phases = {
-      :name => "Generate Legacy Components Interop",
-      :script => "
-WITH_ENVIRONMENT=\"$REACT_NATIVE_PATH/scripts/xcode/with-environment.sh\"
-source $WITH_ENVIRONMENT
-${NODE_BINARY} ${REACT_NATIVE_PATH}/scripts/codegen/generate-legacy-interop-components.js -p #{ENV['APP_PATH']} -o ${REACT_NATIVE_PATH}/Libraries/AppDelegate
-      ",
-      :execution_position => :before_compile,
-      :input_files => ["#{ENV['APP_PATH']}/react-native.config.js"],
-      :output_files => ["${REACT_NATIVE_PATH}/Libraries/AppDelegate/RCTLegacyInteropComponents.mm"],
-    }
   end
 end
diff --git a/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js b/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js
index 932d309..a9810bc 100644
--- a/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js
+++ b/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js
@@ -207,7 +207,7 @@ class MessageQueue {
           });
           warnOnce(
             'excessive-number-of-pending-callbacks',
-            `Excessive number of pending callbacks: ${
+            `Please report: Excessive number of pending callbacks: ${
               this._successCallbacks.size
             }. Some pending callbacks that might have leaked by never being called from native code: ${stringifySafe(
               info,
@@ -381,7 +381,6 @@ class MessageQueue {
     return (
       // $FlowFixMe[cannot-resolve-name]
       typeof DebuggerInternal !== 'undefined' &&
-      // $FlowFixMe[cannot-resolve-name]
       DebuggerInternal.shouldPauseOnThrow === true
     );
   }
diff --git a/node_modules/react-native/Libraries/BatchedBridge/NativeModules.d.ts b/node_modules/react-native/Libraries/BatchedBridge/NativeModules.d.ts
index 384b198..ba35cca 100644
--- a/node_modules/react-native/Libraries/BatchedBridge/NativeModules.d.ts
+++ b/node_modules/react-native/Libraries/BatchedBridge/NativeModules.d.ts
@@ -8,7 +8,7 @@
  */
 
 /**
- * Interface for NativeModules which allows to augment NativeModules with type information.
+ * Interface for NativeModules which allows to augment NativeModules with type informations.
  * See react-native-sensor-manager for example.
  */
 interface NativeModulesStatic {
diff --git a/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js b/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js
index 26961d7..0ea6b7c 100644
--- a/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js
+++ b/node_modules/react-native/Libraries/BatchedBridge/NativeModules.js
@@ -134,7 +134,6 @@ function genMethod(moduleID: number, methodID: number, type: MethodType) {
       const onSuccess: ?(mixed) => void = hasSuccessCallback ? lastArg : null;
       // $FlowFixMe[incompatible-type]
       const onFail: ?(mixed) => void = hasErrorCallback ? secondLastArg : null;
-      // $FlowFixMe[unsafe-addition]
       const callbackCount = hasSuccessCallback + hasErrorCallback;
       const newArgs = args.slice(0, args.length - callbackCount);
       if (type === 'sync') {
diff --git a/node_modules/react-native/Libraries/Blob/Blob.js b/node_modules/react-native/Libraries/Blob/Blob.js
index a75fb1b..862c3f5 100644
--- a/node_modules/react-native/Libraries/Blob/Blob.js
+++ b/node_modules/react-native/Libraries/Blob/Blob.js
@@ -98,10 +98,6 @@ class Blob {
           // $FlowFixMe[reassign-const]
           end = this.size + end;
         }
-        if (end > this.size) {
-          // $FlowFixMe[reassign-const]
-          end = this.size;
-        }
         size = end - start;
       }
     }
diff --git a/node_modules/react-native/Libraries/Blob/FileReader.js b/node_modules/react-native/Libraries/Blob/FileReader.js
index 3e20afe..57b3093 100644
--- a/node_modules/react-native/Libraries/Blob/FileReader.js
+++ b/node_modules/react-native/Libraries/Blob/FileReader.js
@@ -11,7 +11,6 @@
 import type Blob from './Blob';
 
 import NativeFileReaderModule from './NativeFileReaderModule';
-import {toByteArray} from 'base64-js';
 
 const EventTarget = require('event-target-shim');
 
@@ -75,35 +74,8 @@ class FileReader extends (EventTarget(...READER_EVENTS): any) {
     }
   }
 
-  readAsArrayBuffer(blob: ?Blob): void {
-    this._aborted = false;
-
-    if (blob == null) {
-      throw new TypeError(
-        "Failed to execute 'readAsArrayBuffer' on 'FileReader': parameter 1 is not of type 'Blob'",
-      );
-    }
-
-    NativeFileReaderModule.readAsDataURL(blob.data).then(
-      (text: string) => {
-        if (this._aborted) {
-          return;
-        }
-
-        const base64 = text.split(',')[1];
-        const typedArray = toByteArray(base64);
-
-        this._result = typedArray.buffer;
-        this._setReadyState(DONE);
-      },
-      error => {
-        if (this._aborted) {
-          return;
-        }
-        this._error = error;
-        this._setReadyState(DONE);
-      },
-    );
+  readAsArrayBuffer(): any {
+    throw new Error('FileReader.readAsArrayBuffer is not implemented');
   }
 
   readAsDataURL(blob: ?Blob): void {
diff --git a/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec b/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec
index 2cbb75d..b827a95 100644
--- a/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec
+++ b/node_modules/react-native/Libraries/Blob/React-RCTBlob.podspec
@@ -19,26 +19,13 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\""
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTBlob"
   s.version                = version
   s.summary                = "An API for displaying iOS action sheets and share sheets."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -48,7 +35,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
 
   s.dependency "RCT-Folly", folly_version
diff --git a/node_modules/react-native/Libraries/Blob/URL.js b/node_modules/react-native/Libraries/Blob/URL.js
index 8763926..1cc3a9e 100644
--- a/node_modules/react-native/Libraries/Blob/URL.js
+++ b/node_modules/react-native/Libraries/Blob/URL.js
@@ -20,7 +20,6 @@ if (
 ) {
   const constants = NativeBlobModule.getConstants();
   // $FlowFixMe[incompatible-type] asserted above
-  // $FlowFixMe[unsafe-addition]
   BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';
   if (typeof constants.BLOB_URI_HOST === 'string') {
     BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;
@@ -123,7 +122,7 @@ function validateBaseUrl(url: string) {
 
 export class URL {
   _url: string;
-  _searchParamsInstance: ?URLSearchParams = null;
+  _searchParamsInstance = null;
 
   static createObjectURL(blob: Blob): string {
     if (BLOB_URL_PREFIX === null) {
@@ -221,7 +220,6 @@ export class URL {
     if (this._searchParamsInstance === null) {
       return this._url;
     }
-    // $FlowFixMe[incompatible-use]
     const instanceString = this._searchParamsInstance.toString();
     const separator = this._url.indexOf('?') > -1 ? '&' : '?';
     return this._url + separator + instanceString;
diff --git a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts
index f416c27..8ac2a29 100644
--- a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts
+++ b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts
@@ -37,7 +37,7 @@ type AccessibilityAnnouncementFinishedEventHandler = (
   event: AccessibilityAnnouncementFinishedEvent,
 ) => void;
 
-type AccessibilityEventTypes = 'click' | 'focus' | 'viewHoverEnter';
+type AccessibilityEventTypes = 'click' | 'focus';
 
 /**
  * @see https://reactnative.dev/docs/accessibilityinfo
@@ -137,7 +137,7 @@ export interface AccessibilityInfoStatic {
    */
   announceForAccessibilityWithOptions(
     announcement: string,
-    options: {queue?: boolean | undefined},
+    options: {queue?: boolean},
   ): void;
 
   /**
diff --git a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.flow.js b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.flow.js
new file mode 100644
index 0000000..b40fd02
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.flow.js
@@ -0,0 +1,208 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict-local
+ * @format
+ */
+
+import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
+import type {EventSubscription} from '../../vendor/emitter/EventEmitter';
+import type {ElementRef} from 'react';
+
+// Events that are only supported on Android.
+type AccessibilityEventDefinitionsAndroid = {
+  accessibilityServiceChanged: [boolean],
+};
+
+// Events that are only supported on iOS.
+type AccessibilityEventDefinitionsIOS = {
+  announcementFinished: [{announcement: string, success: boolean}],
+  boldTextChanged: [boolean],
+  grayscaleChanged: [boolean],
+  invertColorsChanged: [boolean],
+  reduceTransparencyChanged: [boolean],
+};
+
+type AccessibilityEventDefinitions = {
+  ...AccessibilityEventDefinitionsAndroid,
+  ...AccessibilityEventDefinitionsIOS,
+  change: [boolean], // screenReaderChanged
+  reduceMotionChanged: [boolean],
+  screenReaderChanged: [boolean],
+};
+
+type AccessibilityEventTypes = 'click' | 'focus';
+/**
+ * Sometimes it's useful to know whether or not the device has a screen reader
+ * that is currently active. The `AccessibilityInfo` API is designed for this
+ * purpose. You can use it to query the current state of the screen reader as
+ * well as to register to be notified when the state of the screen reader
+ * changes.
+ *
+ * See https://reactnative.dev/docs/accessibilityinfo
+ */
+export type AccessibilityInfoType = {
+  /**
+   * Query whether bold text is currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when bold text is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#isBoldTextEnabled
+   */
+  isBoldTextEnabled: () => Promise<boolean>,
+
+  /**
+   * Query whether grayscale is currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when grayscale is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#isGrayscaleEnabled
+   */
+  isGrayscaleEnabled: () => Promise<boolean>,
+
+  /**
+   * Query whether inverted colors are currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when invert color is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#isInvertColorsEnabled
+   */
+  isInvertColorsEnabled: () => Promise<boolean>,
+
+  /**
+   * Query whether reduced motion is currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when a reduce motion is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#isReduceMotionEnabled
+   */
+  isReduceMotionEnabled: () => Promise<boolean>,
+
+  /**
+   * Query whether reduce motion and prefer cross-fade transitions settings are currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when prefer cross-fade transitions is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#prefersCrossFadeTransitions
+   */
+  prefersCrossFadeTransitions: () => Promise<boolean>,
+
+  /**
+   * Query whether reduced transparency is currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when a reduce transparency is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#isReduceTransparencyEnabled
+   */
+  isReduceTransparencyEnabled: () => Promise<boolean>,
+
+  /**
+   * Query whether a screen reader is currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when a screen reader is enabled and `false` otherwise.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#isScreenReaderEnabled
+   */
+  isScreenReaderEnabled: () => Promise<boolean>,
+
+  /**
+   * Query whether Accessibility Service is currently enabled.
+   *
+   * Returns a promise which resolves to a boolean.
+   * The result is `true` when any service is enabled and `false` otherwise.
+   *
+   * @platform android
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo/#isaccessibilityserviceenabled-android
+   */
+  isAccessibilityServiceEnabled: () => Promise<boolean>,
+
+  /**
+   * Add an event handler. Supported events:
+   *
+   * - `reduceMotionChanged`: Fires when the state of the reduce motion toggle changes.
+   *   The argument to the event handler is a boolean. The boolean is `true` when a reduce
+   *   motion is enabled (or when "Transition Animation Scale" in "Developer options" is
+   *   "Animation off") and `false` otherwise.
+   * - `screenReaderChanged`: Fires when the state of the screen reader changes. The argument
+   *   to the event handler is a boolean. The boolean is `true` when a screen
+   *   reader is enabled and `false` otherwise.
+   *
+   * These events are only supported on iOS:
+   *
+   * - `boldTextChanged`: iOS-only event. Fires when the state of the bold text toggle changes.
+   *   The argument to the event handler is a boolean. The boolean is `true` when a bold text
+   *   is enabled and `false` otherwise.
+   * - `grayscaleChanged`: iOS-only event. Fires when the state of the gray scale toggle changes.
+   *   The argument to the event handler is a boolean. The boolean is `true` when a gray scale
+   *   is enabled and `false` otherwise.
+   * - `invertColorsChanged`: iOS-only event. Fires when the state of the invert colors toggle
+   *   changes. The argument to the event handler is a boolean. The boolean is `true` when a invert
+   *   colors is enabled and `false` otherwise.
+   * - `reduceTransparencyChanged`: iOS-only event. Fires when the state of the reduce transparency
+   *   toggle changes.  The argument to the event handler is a boolean. The boolean is `true`
+   *   when a reduce transparency is enabled and `false` otherwise.
+   * - `announcementFinished`: iOS-only event. Fires when the screen reader has
+   *   finished making an announcement. The argument to the event handler is a
+   *   dictionary with these keys:
+   *     - `announcement`: The string announced by the screen reader.
+   *     - `success`: A boolean indicating whether the announcement was
+   *       successfully made.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#addeventlistener
+   */
+  addEventListener<K: $Keys<AccessibilityEventDefinitions>>(
+    eventName: K,
+    handler: (...$ElementType<AccessibilityEventDefinitions, K>) => void,
+  ): EventSubscription,
+
+  /**
+   * Set accessibility focus to a React component.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#setaccessibilityfocus
+   */
+  setAccessibilityFocus: (reactTag: number) => void,
+
+  /**
+   * Send a named accessibility event to a HostComponent.
+   */
+  sendAccessibilityEvent: (
+    handle: ElementRef<HostComponent<mixed>>,
+    eventType: AccessibilityEventTypes,
+  ) => void,
+
+  /**
+   * Post a string to be announced by the screen reader.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#announceforaccessibility
+   */
+  announceForAccessibility: (announcement: string) => void,
+
+  /**
+   * Post a string to be announced by the screen reader.
+   * - `announcement`: The string announced by the screen reader.
+   * - `options`: An object that configures the reading options.
+   *   - `queue`: The announcement will be queued behind existing announcements. iOS only.
+   */
+  announceForAccessibilityWithOptions: (
+    announcement: string,
+    options: {queue?: boolean},
+  ) => void,
+
+  /**
+   * Get the recommended timeout for changes to the UI needed by this user.
+   *
+   * See https://reactnative.dev/docs/accessibilityinfo#getrecommendedtimeoutmillis
+   */
+  getRecommendedTimeoutMillis: (originalTimeout: number) => Promise<number>,
+};
diff --git a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.js b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.js
index e552e81..195fe74 100644
--- a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.js
+++ b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.js
@@ -10,6 +10,7 @@
 
 import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
 import type {EventSubscription} from '../../vendor/emitter/EventEmitter';
+import type {AccessibilityInfoType} from './AccessibilityInfo.flow';
 import type {ElementRef} from 'react';
 
 import RCTDeviceEventEmitter from '../../EventEmitter/RCTDeviceEventEmitter';
@@ -41,7 +42,7 @@ type AccessibilityEventDefinitions = {
   screenReaderChanged: [boolean],
 };
 
-type AccessibilityEventTypes = 'click' | 'focus' | 'viewHoverEnter';
+type AccessibilityEventTypes = 'click' | 'focus';
 
 // Mapping of public event names to platform-specific event names.
 const EventNames: Map<
@@ -74,7 +75,7 @@ const EventNames: Map<
  *
  * See https://reactnative.dev/docs/accessibilityinfo
  */
-const AccessibilityInfo = {
+const AccessibilityInfo: AccessibilityInfoType = {
   /**
    * Query whether bold text is currently enabled.
    *
diff --git a/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.flow.js b/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.flow.js
new file mode 100644
index 0000000..ebfb827
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.flow.js
@@ -0,0 +1,58 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow
+ */
+
+'use strict';
+import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import {type ColorValue} from '../../StyleSheet/StyleSheet';
+import * as React from 'react';
+
+type IndicatorSize = number | 'small' | 'large';
+
+type IOSProps = $ReadOnly<{|
+  /**
+    Whether the indicator should hide when not animating.
+
+    @platform ios
+  */
+  hidesWhenStopped?: ?boolean,
+|}>;
+
+type Props = $ReadOnly<{|
+  ...ViewProps,
+  ...IOSProps,
+
+  /**
+   	Whether to show the indicator (`true`) or hide it (`false`).
+   */
+  animating?: ?boolean,
+
+  /**
+    The foreground color of the spinner.
+
+    @default {@platform android} `null` (system accent default color)
+    @default {@platform ios} '#999999'
+  */
+  color?: ?ColorValue,
+
+  /**
+    Size of the indicator.
+
+    @type enum(`'small'`, `'large'`)
+    @type {@platform android} number
+  */
+  size?: ?IndicatorSize,
+|}>;
+
+export type ActivityIndicator = React.AbstractComponent<
+  Props,
+  HostComponent<mixed>,
+>;
diff --git a/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js b/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js
index 655d13d..0b57dc1 100644
--- a/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js
+++ b/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js
@@ -10,8 +10,8 @@
  */
 
 'use strict';
-import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
 import type {ViewProps} from '../View/ViewPropTypes';
+import type {ActivityIndicator as ActivityIndicatorType} from './ActivityIndicator.flow';
 
 import StyleSheet, {type ColorValue} from '../../StyleSheet/StyleSheet';
 import Platform from '../../Utilities/Platform';
@@ -184,10 +184,8 @@ const ActivityIndicator = (
   ```
 */
 
-const ActivityIndicatorWithRef: React.AbstractComponent<
-  Props,
-  HostComponent<mixed>,
-> = React.forwardRef(ActivityIndicator);
+const ActivityIndicatorWithRef: ActivityIndicatorType =
+  React.forwardRef(ActivityIndicator);
 ActivityIndicatorWithRef.displayName = 'ActivityIndicator';
 
 const styles = StyleSheet.create({
@@ -205,4 +203,4 @@ const styles = StyleSheet.create({
   },
 });
 
-export default ActivityIndicatorWithRef;
+module.exports = ActivityIndicatorWithRef;
diff --git a/node_modules/react-native/Libraries/Components/Button.js b/node_modules/react-native/Libraries/Components/Button.js
index 2d67452..0395706 100644
--- a/node_modules/react-native/Libraries/Components/Button.js
+++ b/node_modules/react-native/Libraries/Components/Button.js
@@ -11,7 +11,6 @@
 
 'use strict';
 
-import type {TextStyleProp, ViewStyleProp} from '../StyleSheet/StyleSheet';
 import type {PressEvent} from '../Types/CoreEventTypes';
 import type {Button as ButtonType} from './Button.flow';
 import type {
@@ -311,8 +310,8 @@ class Button extends React.Component<ButtonProps> {
       accessibilityLanguage,
       onAccessibilityAction,
     } = this.props;
-    const buttonStyles: Array<ViewStyleProp> = [styles.button];
-    const textStyles: Array<TextStyleProp> = [styles.text];
+    const buttonStyles = [styles.button];
+    const textStyles = [styles.text];
     if (color) {
       if (Platform.OS === 'ios') {
         textStyles.push({color: color});
diff --git a/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js b/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js
index 5a5acf9..d387a22 100644
--- a/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js
+++ b/node_modules/react-native/Libraries/Components/Clipboard/Clipboard.js
@@ -32,7 +32,7 @@ module.exports = {
    *   Clipboard.setString('hello world');
    * }
    * ```
-   * @param {string} content the content to be stored in the clipboard.
+   * @param the content to be stored in the clipboard.
    */
   setString(content: string) {
     NativeClipboard.setString(content);
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.android.js b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.android.js
new file mode 100644
index 0000000..f0b6628
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.android.js
@@ -0,0 +1,47 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+'use strict';
+import type {DatePickerIOSType} from './DatePickerIOS.flow';
+
+import StyleSheet from '../../StyleSheet/StyleSheet';
+import Text from '../../Text/Text';
+import View from '../View/View';
+import * as React from 'react';
+
+class DummyDatePickerIOS extends React.Component {
+  render() {
+    return (
+      <View style={[styles.dummyDatePickerIOS, this.props.style]}>
+        <Text style={styles.datePickerText}>
+          DatePickerIOS is not supported on this platform!
+        </Text>
+      </View>
+    );
+  }
+}
+
+const styles = StyleSheet.create({
+  dummyDatePickerIOS: {
+    height: 100,
+    width: 300,
+    backgroundColor: '#ffbcbc',
+    borderWidth: 1,
+    borderColor: 'red',
+    alignItems: 'center',
+    justifyContent: 'center',
+    margin: 10,
+  },
+  datePickerText: {
+    color: '#333333',
+    margin: 20,
+  },
+});
+
+module.exports = (DummyDatePickerIOS: DatePickerIOSType);
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts
new file mode 100644
index 0000000..17c60b7
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts
@@ -0,0 +1,92 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+import type * as React from 'react';
+import {Constructor} from '../../../types/private/Utilities';
+import {NativeMethods} from '../../../types/public/ReactNativeTypes';
+import {ViewProps} from '../View/ViewPropTypes';
+
+export interface DatePickerIOSProps extends ViewProps {
+  /**
+   * The currently selected date.
+   */
+  date?: Date | null | undefined;
+
+  /**
+   * Provides an initial value that will change when the user starts selecting
+   * a date. It is useful for simple use-cases where you do not want to deal
+   * with listening to events and updating the date prop to keep the
+   * controlled state in sync. The controlled state has known bugs which
+   * causes it to go out of sync with native. The initialDate prop is intended
+   * to allow you to have native be source of truth.
+   */
+  initialDate?: Date | null | undefined;
+
+  /**
+   * The date picker locale.
+   */
+  locale?: string | undefined;
+
+  /**
+   * Maximum date.
+   * Restricts the range of possible date/time values.
+   */
+  maximumDate?: Date | undefined;
+
+  /**
+   * Maximum date.
+   * Restricts the range of possible date/time values.
+   */
+  minimumDate?: Date | undefined;
+
+  /**
+   *  enum(1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30)
+   *  The interval at which minutes can be selected.
+   */
+  minuteInterval?: 1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30 | undefined;
+
+  /**
+   *  enum('date', 'time', 'datetime')
+   *  The date picker mode.
+   */
+  mode?: 'date' | 'time' | 'datetime' | undefined;
+
+  /**
+   * Date change handler.
+   * This is called when the user changes the date or time in the UI.
+   * The first and only argument is a Date object representing the new date and time.
+   */
+  onDateChange: (newDate: Date) => void;
+
+  /**
+   * Timezone offset in minutes.
+   * By default, the date picker will use the device's timezone. With this parameter, it is possible to force a certain timezone offset.
+   * For instance, to show times in Pacific Standard Time, pass -7 * 60.
+   */
+  timeZoneOffsetInMinutes?: number | undefined;
+
+  /**
+   * The date picker style
+   * This is only available on devices with iOS 14.0 and later.
+   * 'spinner' is the default style if this prop isn't set.
+   */
+  pickerStyle?: 'compact' | 'spinner' | 'inline' | undefined;
+}
+
+declare class DatePickerIOSComponent extends React.Component<DatePickerIOSProps> {}
+declare const DatePickerIOSBase: Constructor<NativeMethods> &
+  typeof DatePickerIOSComponent;
+
+/**
+ * DatePickerIOS has been merged with DatePickerAndroid and will be removed in a future release.
+ * It can now be installed and imported from `@react-native-community/datetimepicker` instead of 'react-native'.
+ * @see https://github.com/react-native-community/datetimepicker
+ * @deprecated
+ */
+export class DatePickerIOS extends DatePickerIOSBase {}
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.flow.android.js b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.flow.android.js
new file mode 100644
index 0000000..5cf823e
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.flow.android.js
@@ -0,0 +1,14 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+'use strict';
+import * as React from 'react';
+
+export type DatePickerIOSType = React.ComponentType<>;
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.flow.ios.js b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.flow.ios.js
new file mode 100644
index 0000000..f567169
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.flow.ios.js
@@ -0,0 +1,113 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+// This is a controlled component version of RCTDatePickerIOS.
+
+import type {SyntheticEvent} from '../../Types/CoreEventTypes';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import * as React from 'react';
+
+type Event = SyntheticEvent<
+  $ReadOnly<{|
+    timestamp: number,
+  |}>,
+>;
+
+type Props = $ReadOnly<{|
+  ...ViewProps,
+
+  /**
+   * The currently selected date.
+   */
+  date?: ?Date,
+
+  /**
+   * Provides an initial value that will change when the user starts selecting
+   * a date. It is useful for simple use-cases where you do not want to deal
+   * with listening to events and updating the date prop to keep the
+   * controlled state in sync. The controlled state has known bugs which
+   * causes it to go out of sync with native. The initialDate prop is intended
+   * to allow you to have native be source of truth.
+   */
+  initialDate?: ?Date,
+
+  /**
+   * The date picker locale.
+   */
+  locale?: ?string,
+
+  /**
+   * Maximum date.
+   *
+   * Restricts the range of possible date/time values.
+   */
+  maximumDate?: ?Date,
+
+  /**
+   * Minimum date.
+   *
+   * Restricts the range of possible date/time values.
+   */
+  minimumDate?: ?Date,
+
+  /**
+   * The interval at which minutes can be selected.
+   */
+  minuteInterval?: ?(1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30),
+
+  /**
+   * The date picker mode.
+   */
+  mode?: ?('date' | 'time' | 'datetime'),
+
+  /**
+   * Date change handler.
+   *
+   * This is called when the user changes the date or time in the UI.
+   * The first and only argument is an Event. For getting the date the picker
+   * was changed to, use onDateChange instead.
+   */
+  onChange?: ?(event: Event) => void,
+
+  /**
+   * Date change handler.
+   *
+   * This is called when the user changes the date or time in the UI.
+   * The first and only argument is a Date object representing the new
+   * date and time.
+   */
+  onDateChange: (date: Date) => void,
+
+  /**
+   * Timezone offset in minutes.
+   *
+   * By default, the date picker will use the device's timezone. With this
+   * parameter, it is possible to force a certain timezone offset. For
+   * instance, to show times in Pacific Standard Time, pass -7 * 60.
+   */
+  timeZoneOffsetInMinutes?: ?number,
+
+  /**
+   * The date picker style
+   * This is only available on devices with iOS 14.0 and later.
+   * 'spinner' is the default style if this prop isn't set.
+   */
+  pickerStyle?: ?('compact' | 'spinner' | 'inline'),
+|}>;
+
+/**
+ * Use `DatePickerIOS` to render a date/time picker (selector) on iOS.  This is
+ * a controlled component, so you must hook in to the `onDateChange` callback
+ * and update the `date` prop in order for the component to update, otherwise
+ * the user's change will be reverted immediately to reflect `props.date` as the
+ * source of truth.
+ */
+export type DatePickerIOSType = React.ComponentType<Props>;
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js
new file mode 100644
index 0000000..39e0e66
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.ios.js
@@ -0,0 +1,242 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+// This is a controlled component version of RCTDatePickerIOS.
+
+import type {SyntheticEvent} from '../../Types/CoreEventTypes';
+import type {ViewProps} from '../View/ViewPropTypes';
+import type {DatePickerIOSType} from './DatePickerIOS.flow';
+
+import StyleSheet from '../../StyleSheet/StyleSheet';
+import View from '../View/View';
+import RCTDatePickerNativeComponent, {
+  Commands as DatePickerCommands,
+} from './RCTDatePickerNativeComponent';
+import invariant from 'invariant';
+import * as React from 'react';
+
+type Event = SyntheticEvent<
+  $ReadOnly<{|
+    timestamp: number,
+  |}>,
+>;
+
+type Props = $ReadOnly<{|
+  ...ViewProps,
+
+  /**
+   * The currently selected date.
+   */
+  date?: ?Date,
+
+  /**
+   * Provides an initial value that will change when the user starts selecting
+   * a date. It is useful for simple use-cases where you do not want to deal
+   * with listening to events and updating the date prop to keep the
+   * controlled state in sync. The controlled state has known bugs which
+   * causes it to go out of sync with native. The initialDate prop is intended
+   * to allow you to have native be source of truth.
+   */
+  initialDate?: ?Date,
+
+  /**
+   * The date picker locale.
+   */
+  locale?: ?string,
+
+  /**
+   * Maximum date.
+   *
+   * Restricts the range of possible date/time values.
+   */
+  maximumDate?: ?Date,
+
+  /**
+   * Minimum date.
+   *
+   * Restricts the range of possible date/time values.
+   */
+  minimumDate?: ?Date,
+
+  /**
+   * The interval at which minutes can be selected.
+   */
+  minuteInterval?: ?(1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30),
+
+  /**
+   * The date picker mode.
+   */
+  mode?: ?('date' | 'time' | 'datetime'),
+
+  /**
+   * Date change handler.
+   *
+   * This is called when the user changes the date or time in the UI.
+   * The first and only argument is an Event. For getting the date the picker
+   * was changed to, use onDateChange instead.
+   */
+  onChange?: ?(event: Event) => void,
+
+  /**
+   * Date change handler.
+   *
+   * This is called when the user changes the date or time in the UI.
+   * The first and only argument is a Date object representing the new
+   * date and time.
+   */
+  onDateChange: (date: Date) => void,
+
+  /**
+   * Timezone offset in minutes.
+   *
+   * By default, the date picker will use the device's timezone. With this
+   * parameter, it is possible to force a certain timezone offset. For
+   * instance, to show times in Pacific Standard Time, pass -7 * 60.
+   */
+  timeZoneOffsetInMinutes?: ?number,
+
+  /**
+   * The date picker style
+   * This is only available on devices with iOS 14.0 and later.
+   * 'spinner' is the default style if this prop isn't set.
+   */
+  pickerStyle?: ?('compact' | 'spinner' | 'inline'),
+|}>;
+
+/**
+ * Use `DatePickerIOS` to render a date/time picker (selector) on iOS.  This is
+ * a controlled component, so you must hook in to the `onDateChange` callback
+ * and update the `date` prop in order for the component to update, otherwise
+ * the user's change will be reverted immediately to reflect `props.date` as the
+ * source of truth.
+ */
+class DatePickerIOS extends React.Component<Props> {
+  _picker: ?React.ElementRef<typeof RCTDatePickerNativeComponent> = null;
+
+  componentDidUpdate() {
+    if (this.props.date) {
+      const propsTimeStamp = this.props.date.getTime();
+      if (this._picker) {
+        DatePickerCommands.setNativeDate(this._picker, propsTimeStamp);
+      }
+    }
+  }
+
+  _onChange = (event: Event) => {
+    const nativeTimeStamp = event.nativeEvent.timestamp;
+    this.props.onDateChange &&
+      this.props.onDateChange(new Date(nativeTimeStamp));
+    this.props.onChange && this.props.onChange(event);
+    this.forceUpdate();
+  };
+
+  render(): React.Node {
+    const props = this.props;
+    const mode = props.mode ?? 'datetime';
+    invariant(
+      props.date || props.initialDate,
+      'A selected date or initial date should be specified.',
+    );
+    return (
+      <View style={props.style}>
+        <RCTDatePickerNativeComponent
+          testID={props.testID}
+          ref={picker => {
+            this._picker = picker;
+          }}
+          style={getHeight(props.pickerStyle, mode)}
+          date={
+            props.date
+              ? props.date.getTime()
+              : props.initialDate
+              ? props.initialDate.getTime()
+              : undefined
+          }
+          locale={
+            props.locale != null && props.locale !== ''
+              ? props.locale
+              : undefined
+          }
+          maximumDate={
+            props.maximumDate ? props.maximumDate.getTime() : undefined
+          }
+          minimumDate={
+            props.minimumDate ? props.minimumDate.getTime() : undefined
+          }
+          mode={mode}
+          minuteInterval={props.minuteInterval}
+          timeZoneOffsetInMinutes={props.timeZoneOffsetInMinutes}
+          onChange={this._onChange}
+          onStartShouldSetResponder={() => true}
+          onResponderTerminationRequest={() => false}
+          pickerStyle={props.pickerStyle}
+        />
+      </View>
+    );
+  }
+}
+
+const inlineHeightForDatePicker = 318.5;
+const inlineHeightForTimePicker = 49.5;
+const compactHeight = 40;
+const spinnerHeight = 216;
+
+const styles = StyleSheet.create({
+  datePickerIOS: {
+    height: spinnerHeight,
+  },
+  datePickerIOSCompact: {
+    height: compactHeight,
+  },
+  datePickerIOSInline: {
+    height: inlineHeightForDatePicker + inlineHeightForTimePicker * 2,
+  },
+  datePickerIOSInlineDate: {
+    height: inlineHeightForDatePicker + inlineHeightForTimePicker,
+  },
+  datePickerIOSInlineTime: {
+    height: inlineHeightForTimePicker,
+  },
+});
+
+function getHeight(
+  pickerStyle: ?(
+    | 'compact'
+    | 'inline'
+    | 'spinner'
+    | $TEMPORARY$string<'compact'>
+    | $TEMPORARY$string<'inline'>
+    | $TEMPORARY$string<'spinner'>
+  ),
+  mode:
+    | 'date'
+    | 'datetime'
+    | 'time'
+    | $TEMPORARY$string<'date'>
+    | $TEMPORARY$string<'datetime'>
+    | $TEMPORARY$string<'time'>,
+) {
+  if (pickerStyle === 'compact') {
+    return styles.datePickerIOSCompact;
+  }
+  if (pickerStyle === 'inline') {
+    switch (mode) {
+      case 'date':
+        return styles.datePickerIOSInlineDate;
+      case 'time':
+        return styles.datePickerIOSInlineTime;
+      default:
+        return styles.datePickerIOSInline;
+    }
+  }
+  return styles.datePickerIOS;
+}
+
+module.exports = (DatePickerIOS: DatePickerIOSType);
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/RCTDatePickerNativeComponent.js b/node_modules/react-native/Libraries/Components/DatePicker/RCTDatePickerNativeComponent.js
new file mode 100644
index 0000000..3f43e63
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePicker/RCTDatePickerNativeComponent.js
@@ -0,0 +1,60 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
+import type {
+  BubblingEventHandler,
+  Float,
+  WithDefault,
+} from '../../Types/CodegenTypes';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import codegenNativeCommands from '../../Utilities/codegenNativeCommands';
+import codegenNativeComponent from '../../Utilities/codegenNativeComponent';
+import * as React from 'react';
+
+type Event = $ReadOnly<{|
+  timestamp: Float,
+|}>;
+
+type NativeProps = $ReadOnly<{|
+  ...ViewProps,
+  date?: ?Float,
+  initialDate?: ?Float,
+  locale?: ?string,
+  maximumDate?: ?Float,
+  minimumDate?: ?Float,
+  minuteInterval?: WithDefault<
+    1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30,
+    1,
+  >,
+  mode?: WithDefault<'date' | 'time' | 'datetime', 'date'>,
+  onChange?: ?BubblingEventHandler<Event>,
+  timeZoneOffsetInMinutes?: ?Float,
+  pickerStyle?: WithDefault<'compact' | 'spinner' | 'inline', 'spinner'>,
+|}>;
+
+type ComponentType = HostComponent<NativeProps>;
+
+interface NativeCommands {
+  +setNativeDate: (
+    viewRef: React.ElementRef<ComponentType>,
+    date: Float,
+  ) => void;
+}
+
+export const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({
+  supportedCommands: ['setNativeDate'],
+});
+
+export default (codegenNativeComponent<NativeProps>('DatePicker', {
+  paperComponentName: 'RCTDatePicker',
+  excludedPlatforms: ['android'],
+}): HostComponent<NativeProps>);
diff --git a/node_modules/react-native/Libraries/Components/DatePickerAndroid/NativeDatePickerAndroid.js b/node_modules/react-native/Libraries/Components/DatePickerAndroid/NativeDatePickerAndroid.js
new file mode 100644
index 0000000..972e3e0
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/DatePickerAndroid/NativeDatePickerAndroid.js
@@ -0,0 +1,26 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow
+ * @format
+ */
+
+import type {TurboModule} from '../../TurboModule/RCTExport';
+
+import * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';
+
+/**
+ * This file backs native modules that are used internally at Meta
+ * and this JS spec was intentionally left here. In the meanwhile this
+ * file should not be deleted.
+ */
+export interface Spec extends TurboModule {
+  +open: (options: Object) => Promise<Object>;
+}
+
+export default (TurboModuleRegistry.getEnforcing<Spec>(
+  'DatePickerAndroid',
+): Spec);
diff --git a/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js b/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js
index d3a722d..10e265c 100644
--- a/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js
+++ b/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js
@@ -8,7 +8,6 @@
  * @format
  */
 
-import type {AccessibilityRole} from '../../Components/View/ViewAccessibility';
 import type {
   MeasureInWindowOnSuccessCallback,
   MeasureLayoutOnSuccessCallback,
@@ -37,8 +36,6 @@ type DrawerSlideEvent = $ReadOnly<{|
 |}>;
 
 type Props = $ReadOnly<{|
-  accessibilityRole?: ?AccessibilityRole,
-
   /**
    * Determines whether the keyboard gets dismissed in response to a drag.
    *   - 'none' (the default), drags do not dismiss the keyboard.
@@ -238,7 +235,6 @@ class DrawerLayoutAndroid extends React.Component<Props, State> {
    * LTI update could not be added via codemod */
   _onDrawerSlide = event => {
     if (this.props.onDrawerSlide) {
-      // $FlowFixMe[unused-promise]
       this.props.onDrawerSlide(event);
     }
     if (this.props.keyboardDismissMode === 'on-drag') {
diff --git a/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js b/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js
index 9fb5637..2f48f9e 100644
--- a/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js
+++ b/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js
@@ -107,7 +107,6 @@ class KeyboardAvoidingView extends React.Component<Props, State> {
 
   _onKeyboardChange = (event: ?KeyboardEvent) => {
     this._keyboardEvent = event;
-    // $FlowFixMe[unused-promise]
     this._updateBottomIfNecessary();
   };
 
diff --git a/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts b/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts
index cb0797f..640e412 100644
--- a/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts
+++ b/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts
@@ -158,7 +158,7 @@ export interface PressableProps
   /**
    * Duration (in milliseconds) to wait after press down before calling onPressIn.
    */
-  unstable_pressDelay?: number | undefined;
+  unstable_pressDelay?: number;
 }
 
 // TODO use React.AbstractComponent when available
diff --git a/node_modules/react-native/Libraries/Components/Pressable/Pressable.js b/node_modules/react-native/Libraries/Components/Pressable/Pressable.js
index 5d20b8e..187b4c4 100644
--- a/node_modules/react-native/Libraries/Components/Pressable/Pressable.js
+++ b/node_modules/react-native/Libraries/Components/Pressable/Pressable.js
@@ -188,7 +188,7 @@ type Props = $ReadOnly<{|
    */
   unstable_pressDelay?: ?number,
   /**
-   * Web to Native Accessibility props
+   * Web to Native Accessibilty props
    * https://github.com/facebook/react-native/issues/34424
    */
   'aria-label'?: ?string,
diff --git a/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.android.js b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.android.js
new file mode 100644
index 0000000..0dffafc
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.android.js
@@ -0,0 +1,45 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+'use strict';
+import StyleSheet from '../../StyleSheet/StyleSheet';
+import Text from '../../Text/Text';
+import View from '../View/View';
+import * as React from 'react';
+
+class DummyProgressViewIOS extends React.Component {
+  render() {
+    return (
+      <View style={[styles.dummy, this.props.style]}>
+        <Text style={styles.text}>
+          ProgressViewIOS is not supported on this platform!
+        </Text>
+      </View>
+    );
+  }
+}
+
+const styles = StyleSheet.create({
+  dummy: {
+    width: 120,
+    height: 20,
+    backgroundColor: '#ffbcbc',
+    borderWidth: 1,
+    borderColor: 'red',
+    alignItems: 'center',
+    justifyContent: 'center',
+  },
+  text: {
+    color: '#333333',
+    margin: 5,
+    fontSize: 10,
+  },
+});
+
+module.exports = DummyProgressViewIOS;
diff --git a/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts
new file mode 100644
index 0000000..1f38df7
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts
@@ -0,0 +1,62 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+import type * as React from 'react';
+import {Constructor} from '../../../types/private/Utilities';
+import {ImageURISource} from '../../Image/ImageSource';
+import {NativeMethods} from '../../../types/public/ReactNativeTypes';
+import {ColorValue} from '../../StyleSheet/StyleSheet';
+import {ViewProps} from '../View/ViewPropTypes';
+
+/**
+ * @see https://reactnative.dev/docs/progressviewios
+ * @see ProgressViewIOS.ios.js
+ */
+export interface ProgressViewIOSProps extends ViewProps {
+  /**
+   * The progress bar style.
+   */
+  progressViewStyle?: 'default' | 'bar' | undefined;
+
+  /**
+   * The progress value (between 0 and 1).
+   */
+  progress?: number | undefined;
+
+  /**
+   * The tint color of the progress bar itself.
+   */
+  progressTintColor?: ColorValue | undefined;
+
+  /**
+   * The tint color of the progress bar track.
+   */
+  trackTintColor?: ColorValue | undefined;
+
+  /**
+   * A stretchable image to display as the progress bar.
+   */
+  progressImage?: ImageURISource | ImageURISource[] | undefined;
+
+  /**
+   * A stretchable image to display behind the progress bar.
+   */
+  trackImage?: ImageURISource | ImageURISource[] | undefined;
+}
+
+declare class ProgressViewIOSComponent extends React.Component<ProgressViewIOSProps> {}
+declare const ProgressViewIOSBase: Constructor<NativeMethods> &
+  typeof ProgressViewIOSComponent;
+/**
+ * ProgressViewIOS has been extracted from react-native core and will be removed in a future release.
+ * It can now be installed and imported from `@react-native-community/progress-view` instead of 'react-native'.
+ * @see https://github.com/react-native-community/progress-view
+ * @deprecated
+ */
+export class ProgressViewIOS extends ProgressViewIOSBase {}
diff --git a/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.ios.js b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.ios.js
new file mode 100644
index 0000000..6575094
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.ios.js
@@ -0,0 +1,75 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+import type {ImageSource} from '../../Image/ImageSource';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import StyleSheet, {type ColorValue} from '../../StyleSheet/StyleSheet';
+import RCTProgressViewNativeComponent from './RCTProgressViewNativeComponent';
+import * as React from 'react';
+
+type Props = $ReadOnly<{|
+  ...ViewProps,
+
+  /**
+   * The progress bar style.
+   */
+  progressViewStyle?: ?('default' | 'bar'),
+
+  /**
+   * The progress value (between 0 and 1).
+   */
+  progress?: ?number,
+
+  /**
+   * The tint color of the progress bar itself.
+   */
+  progressTintColor?: ?ColorValue,
+
+  /**
+   * The tint color of the progress bar track.
+   */
+  trackTintColor?: ?ColorValue,
+
+  /**
+   * A stretchable image to display as the progress bar.
+   */
+  progressImage?: ?ImageSource,
+
+  /**
+   * A stretchable image to display behind the progress bar.
+   */
+  trackImage?: ?ImageSource,
+|}>;
+
+/**
+ * Use `ProgressViewIOS` to render a UIProgressView on iOS.
+ */
+const ProgressViewIOS = (
+  props: Props,
+  forwardedRef?: ?React.Ref<typeof RCTProgressViewNativeComponent>,
+) => (
+  <RCTProgressViewNativeComponent
+    {...props}
+    style={[styles.progressView, props.style]}
+    ref={forwardedRef}
+  />
+);
+
+const styles = StyleSheet.create({
+  progressView: {
+    height: 2,
+  },
+});
+
+const ProgressViewIOSWithRef = React.forwardRef(ProgressViewIOS);
+
+module.exports =
+  (ProgressViewIOSWithRef: typeof RCTProgressViewNativeComponent);
diff --git a/node_modules/react-native/Libraries/Components/ProgressViewIOS/RCTProgressViewNativeComponent.js b/node_modules/react-native/Libraries/Components/ProgressViewIOS/RCTProgressViewNativeComponent.js
new file mode 100644
index 0000000..be2f70a
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/ProgressViewIOS/RCTProgressViewNativeComponent.js
@@ -0,0 +1,33 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict-local
+ * @format
+ */
+
+import type {ImageSource} from '../../Image/ImageSource';
+import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
+import type {ColorValue} from '../../StyleSheet/StyleSheet';
+import type {Float, WithDefault} from '../../Types/CodegenTypes';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import codegenNativeComponent from '../../Utilities/codegenNativeComponent';
+
+type NativeProps = $ReadOnly<{|
+  ...ViewProps,
+
+  // Props
+  progressViewStyle?: WithDefault<'default' | 'bar', 'default'>,
+  progress?: WithDefault<Float, 0>,
+  progressTintColor?: ?ColorValue,
+  trackTintColor?: ?ColorValue,
+  progressImage?: ?ImageSource,
+  trackImage?: ?ImageSource,
+|}>;
+
+export default (codegenNativeComponent<NativeProps>(
+  'RCTProgressView',
+): HostComponent<NativeProps>);
diff --git a/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js b/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js
index 0fb4860..e40344e 100644
--- a/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js
+++ b/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js
@@ -183,7 +183,6 @@ class RefreshControl extends React.Component<RefreshControlProps> {
   _onRefresh = () => {
     this._lastNativeRefreshing = true;
 
-    // $FlowFixMe[unused-promise]
     this.props.onRefresh && this.props.onRefresh();
 
     // The native component will start refreshing so force an update to
diff --git a/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.flow.js b/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.flow.js
new file mode 100644
index 0000000..77d04f5
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.flow.js
@@ -0,0 +1,19 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict-local
+ * @format
+ */
+
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import View from '../View/View';
+import * as React from 'react';
+
+export type SafeAreaViewType = React.AbstractComponent<
+  ViewProps,
+  React.ElementRef<typeof View>,
+>;
diff --git a/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.js b/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.js
index b53774b..43f1689 100644
--- a/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.js
+++ b/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.js
@@ -9,6 +9,7 @@
  */
 
 import type {ViewProps} from '../View/ViewPropTypes';
+import type {SafeAreaViewType} from './SafeAreaView.flow';
 
 import Platform from '../../Utilities/Platform';
 import View from '../View/View';
@@ -31,4 +32,4 @@ if (Platform.OS === 'android') {
   exported = require('./RCTSafeAreaViewNativeComponent').default;
 }
 
-export default exported;
+export default (exported: SafeAreaViewType);
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent.js b/node_modules/react-native/Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent.js
index 87ebd56..e0414b9 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent.js
@@ -23,7 +23,7 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {
   validAttributes: {
     decelerationRate: true,
     disableIntervalMomentum: true,
-    endFillColor: {process: require('../../StyleSheet/processColor').default},
+    endFillColor: {process: require('../../StyleSheet/processColor')},
     fadingEdgeLength: true,
     nestedScrollEnabled: true,
     overScrollMode: true,
@@ -43,20 +43,14 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {
     borderBottomRightRadius: true,
     borderRadius: true,
     borderStyle: true,
-    borderRightColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
-    borderColor: {process: require('../../StyleSheet/processColor').default},
-    borderBottomColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    borderRightColor: {process: require('../../StyleSheet/processColor')},
+    borderColor: {process: require('../../StyleSheet/processColor')},
+    borderBottomColor: {process: require('../../StyleSheet/processColor')},
     borderTopLeftRadius: true,
-    borderTopColor: {process: require('../../StyleSheet/processColor').default},
+    borderTopColor: {process: require('../../StyleSheet/processColor')},
     removeClippedSubviews: true,
     borderTopRightRadius: true,
-    borderLeftColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    borderLeftColor: {process: require('../../StyleSheet/processColor')},
     pointerEvents: true,
   },
 };
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts
index 109a3e0..3d1d94f 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts
@@ -730,7 +730,7 @@ export interface ScrollViewProps
   /**
    * When true, Sticky header is hidden when scrolling down, and dock at the top when scrolling up.
    */
-  stickyHeaderHiddenOnScroll?: boolean | undefined;
+  stickyHeaderHiddenOnScroll?: boolean;
 
   /**
    * Style
@@ -841,7 +841,7 @@ export class ScrollView extends ScrollViewBase {
    * The options object has an animated prop, that enables the scrolling animation or not.
    * The animated prop defaults to true
    */
-  scrollToEnd(options?: {animated?: boolean | undefined}): void;
+  scrollToEnd(options?: {animated?: boolean}): void;
 
   /**
    * Displays the scroll indicators momentarily.
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
index 096874e..0c2ecf2 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
@@ -33,6 +33,7 @@ import StyleSheet from '../../StyleSheet/StyleSheet';
 import Dimensions from '../../Utilities/Dimensions';
 import dismissKeyboard from '../../Utilities/dismissKeyboard';
 import Platform from '../../Utilities/Platform';
+import setAndForwardRef from '../../Utilities/setAndForwardRef';
 import Keyboard from '../Keyboard/Keyboard';
 import TextInputState from '../TextInput/TextInputState';
 import View from '../View/View';
@@ -45,8 +46,6 @@ import ScrollViewContext, {HORIZONTAL, VERTICAL} from './ScrollViewContext';
 import ScrollViewNativeComponent from './ScrollViewNativeComponent';
 import ScrollViewStickyHeader from './ScrollViewStickyHeader';
 import invariant from 'invariant';
-import memoize from 'memoize-one';
-import nullthrows from 'nullthrows';
 import * as React from 'react';
 
 if (Platform.OS === 'ios') {
@@ -166,14 +165,6 @@ export type ScrollViewImperativeMethods = $ReadOnly<{|
 export type DecelerationRateType = 'fast' | 'normal' | number;
 export type ScrollResponderType = ScrollViewImperativeMethods;
 
-type NativeScrollViewInstance = React.ElementRef<HostComponent<mixed>>;
-type PublicScrollViewInstance = $ReadOnly<{|
-  ...$Exact<NativeScrollViewInstance>,
-  ...ScrollViewImperativeMethods,
-|}>;
-
-type InnerViewInstance = React.ElementRef<typeof View>;
-
 type IOSProps = $ReadOnly<{|
   /**
    * Controls whether iOS should automatically adjust the content inset
@@ -288,6 +279,7 @@ type IOSProps = $ReadOnly<{|
    * visibility. Occlusion, transforms, and other complexity won't be taken into account as to
    * whether content is "visible" or not.
    *
+   * @platform ios
    */
   maintainVisibleContentPosition?: ?$ReadOnly<{|
     minIndexForVisible: number,
@@ -309,6 +301,24 @@ type IOSProps = $ReadOnly<{|
    * @platform ios
    */
   pinchGestureEnabled?: ?boolean,
+  /**
+   * This controls how often the scroll event will be fired while scrolling
+   * (as a time interval in ms). A lower number yields better accuracy for code
+   * that is tracking the scroll position, but can lead to scroll performance
+   * problems due to the volume of information being send over the bridge.
+   *
+   * Values between 0 and 17ms indicate 60fps updates are needed and throttling
+   * will be disabled.
+   *
+   * If you do not need precise scroll position tracking, set this value higher
+   * to limit the information being sent across the bridge.
+   *
+   * The default value is zero, which results in the scroll event being sent only
+   * once each time the view is scrolled.
+   *
+   * @platform ios
+   */
+  scrollEventThrottle?: ?number,
   /**
    * The amount by which the scroll view indicators are inset from the edges
    * of the scroll view. This should normally be set to the same value as
@@ -550,6 +560,7 @@ export type Props = $ReadOnly<{|
    * Note: Vertical pagination is not supported on Android.
    */
   pagingEnabled?: ?boolean,
+
   /**
    * When false, the view cannot be scrolled via touch interaction.
    * The default value is true.
@@ -557,22 +568,6 @@ export type Props = $ReadOnly<{|
    * Note that the view can always be scrolled by calling `scrollTo`.
    */
   scrollEnabled?: ?boolean,
-  /**
-   * This controls how often the scroll event will be fired while scrolling
-   * (as a time interval in ms). A lower number yields better accuracy for code
-   * that is tracking the scroll position, but can lead to scroll performance
-   * problems due to the volume of information being send over the bridge.
-   *
-   * Values between 0 and 17ms indicate 60fps updates are needed and throttling
-   * will be disabled.
-   *
-   * If you do not need precise scroll position tracking, set this value higher
-   * to limit the information being sent across the bridge.
-   *
-   * The default value is zero, which results in the scroll event being sent only
-   * once each time the view is scrolled.
-   */
-  scrollEventThrottle?: ?number,
   /**
    * When true, shows a vertical scroll indicator.
    * The default value is true.
@@ -663,13 +658,15 @@ export type Props = $ReadOnly<{|
    * A ref to the inner View element of the ScrollView. This should be used
    * instead of calling `getInnerViewRef`.
    */
-  innerViewRef?: ForwardedRef<InnerViewInstance>,
+  innerViewRef?: React.Ref<typeof View>,
   /**
    * A ref to the Native ScrollView component. This ref can be used to call
    * all of ScrollView's public methods, in addition to native methods like
    * measure, measureLayout, etc.
    */
-  scrollViewRef?: ForwardedRef<PublicScrollViewInstance>,
+  scrollViewRef?: React.Ref<
+    typeof ScrollViewNativeComponent & ScrollViewImperativeMethods,
+  >,
 |}>;
 
 type State = {|
@@ -750,7 +747,7 @@ class ScrollView extends React.Component<Props, State> {
   _becameResponderWhileAnimating: boolean = false;
   _preventNegativeScrollOffset: ?boolean = null;
 
-  _animated: ?boolean = null;
+  _animated = null;
 
   _subscriptionKeyboardWillShow: ?EventSubscription = null;
   _subscriptionKeyboardWillHide: ?EventSubscription = null;
@@ -829,6 +826,36 @@ class ScrollView extends React.Component<Props, State> {
     }
   }
 
+  _setNativeRef: $FlowFixMe = setAndForwardRef({
+    getForwardedRef: () => this.props.scrollViewRef,
+    setLocalRef: ref => {
+      this._scrollViewRef = ref;
+
+      /*
+        This is a hack. Ideally we would forwardRef to the underlying
+        host component. However, since ScrollView has it's own methods that can be
+        called as well, if we used the standard forwardRef then these
+        methods wouldn't be accessible and thus be a breaking change.
+
+        Therefore we edit ref to include ScrollView's public methods so that
+        they are callable from the ref.
+      */
+      if (ref) {
+        ref.getScrollResponder = this.getScrollResponder;
+        ref.getScrollableNode = this.getScrollableNode;
+        ref.getInnerViewNode = this.getInnerViewNode;
+        ref.getInnerViewRef = this.getInnerViewRef;
+        ref.getNativeScrollRef = this.getNativeScrollRef;
+        ref.scrollTo = this.scrollTo;
+        ref.scrollToEnd = this.scrollToEnd;
+        ref.flashScrollIndicators = this.flashScrollIndicators;
+        ref.scrollResponderZoomTo = this.scrollResponderZoomTo;
+        ref.scrollResponderScrollNativeHandleToKeyboard =
+          this.scrollResponderScrollNativeHandleToKeyboard;
+      }
+    },
+  });
+
   /**
    * Returns a reference to the underlying scroll responder, which supports
    * operations like `scrollTo`. All ScrollView-like components should
@@ -841,19 +868,19 @@ class ScrollView extends React.Component<Props, State> {
   };
 
   getScrollableNode: () => ?number = () => {
-    return findNodeHandle(this._scrollView.nativeInstance);
+    return findNodeHandle(this._scrollViewRef);
   };
 
   getInnerViewNode: () => ?number = () => {
-    return findNodeHandle(this._innerView.nativeInstance);
+    return findNodeHandle(this._innerViewRef);
   };
 
-  getInnerViewRef: () => InnerViewInstance | null = () => {
-    return this._innerView.nativeInstance;
+  getInnerViewRef: () => ?React.ElementRef<typeof View> = () => {
+    return this._innerViewRef;
   };
 
-  getNativeScrollRef: () => NativeScrollViewInstance | null = () => {
-    return this._scrollView.nativeInstance;
+  getNativeScrollRef: () => ?React.ElementRef<HostComponent<mixed>> = () => {
+    return this._scrollViewRef;
   };
 
   /**
@@ -904,15 +931,10 @@ class ScrollView extends React.Component<Props, State> {
       x = options.x;
       animated = options.animated;
     }
-    if (this._scrollView.nativeInstance == null) {
+    if (this._scrollViewRef == null) {
       return;
     }
-    Commands.scrollTo(
-      this._scrollView.nativeInstance,
-      x || 0,
-      y || 0,
-      animated !== false,
-    );
+    Commands.scrollTo(this._scrollViewRef, x || 0, y || 0, animated !== false);
   };
 
   /**
@@ -928,10 +950,10 @@ class ScrollView extends React.Component<Props, State> {
   ) => {
     // Default to true
     const animated = (options && options.animated) !== false;
-    if (this._scrollView.nativeInstance == null) {
+    if (this._scrollViewRef == null) {
       return;
     }
-    Commands.scrollToEnd(this._scrollView.nativeInstance, animated);
+    Commands.scrollToEnd(this._scrollViewRef, animated);
   };
 
   /**
@@ -940,10 +962,10 @@ class ScrollView extends React.Component<Props, State> {
    * @platform ios
    */
   flashScrollIndicators: () => void = () => {
-    if (this._scrollView.nativeInstance == null) {
+    if (this._scrollViewRef == null) {
       return;
     }
-    Commands.flashScrollIndicators(this._scrollView.nativeInstance);
+    Commands.flashScrollIndicators(this._scrollViewRef);
   };
 
   /**
@@ -968,21 +990,21 @@ class ScrollView extends React.Component<Props, State> {
     this._additionalScrollOffset = additionalOffset || 0;
     this._preventNegativeScrollOffset = !!preventNegativeScrollOffset;
 
-    if (this._innerView.nativeInstance == null) {
+    if (this._innerViewRef == null) {
       return;
     }
 
     if (typeof nodeHandle === 'number') {
       UIManager.measureLayout(
         nodeHandle,
-        nullthrows(findNodeHandle(this)),
+        findNodeHandle(this),
         // $FlowFixMe[method-unbinding] added when improving typing for this parameters
         this._textInputFocusError,
         this._inputMeasureAndScrollToKeyboard,
       );
     } else {
       nodeHandle.measureLayout(
-        this._innerView.nativeInstance,
+        this._innerViewRef,
         this._inputMeasureAndScrollToKeyboard,
         // $FlowFixMe[method-unbinding] added when improving typing for this parameters
         this._textInputFocusError,
@@ -1025,14 +1047,10 @@ class ScrollView extends React.Component<Props, State> {
       );
     }
 
-    if (this._scrollView.nativeInstance == null) {
+    if (this._scrollViewRef == null) {
       return;
     }
-    Commands.zoomToRect(
-      this._scrollView.nativeInstance,
-      rect,
-      animated !== false,
-    );
+    Commands.zoomToRect(this._scrollViewRef, rect, animated !== false);
   };
 
   _textInputFocusError() {
@@ -1105,7 +1123,7 @@ class ScrollView extends React.Component<Props, State> {
     ) {
       this._scrollAnimatedValueAttachment =
         AnimatedImplementation.attachNativeEvent(
-          this._scrollView.nativeInstance,
+          this._scrollViewRef,
           'onScroll',
           [{nativeEvent: {contentOffset: {y: this._scrollAnimatedValue}}}],
         );
@@ -1128,7 +1146,7 @@ class ScrollView extends React.Component<Props, State> {
     if (!stickyHeaderIndices) {
       return;
     }
-    const childArray = React.Children.toArray<$FlowFixMe>(this.props.children);
+    const childArray = React.Children.toArray(this.props.children);
     if (key !== this._getKeyForIndex(index, childArray)) {
       // ignore stale layout update
       return;
@@ -1184,45 +1202,15 @@ class ScrollView extends React.Component<Props, State> {
       this.props.onContentSizeChange(width, height);
   };
 
-  _innerView: RefForwarder<InnerViewInstance, InnerViewInstance> =
-    createRefForwarder(
-      (instance: InnerViewInstance): InnerViewInstance => instance,
-    );
-
-  _scrollView: RefForwarder<
-    NativeScrollViewInstance,
-    PublicScrollViewInstance,
-  > = createRefForwarder(
-    (nativeInstance: NativeScrollViewInstance): PublicScrollViewInstance => {
-      // This is a hack. Ideally we would forwardRef  to the underlying
-      // host component. However, since ScrollView has it's own methods that can be
-      // called as well, if we used the standard forwardRef then these
-      // methods wouldn't be accessible and thus be a breaking change.
-      //
-      // Therefore we edit ref to include ScrollView's public methods so that
-      // they are callable from the ref.
-
-      // $FlowFixMe[prop-missing] - Known issue with appending custom methods.
-      const publicInstance: PublicScrollViewInstance = Object.assign(
-        nativeInstance,
-        {
-          getScrollResponder: this.getScrollResponder,
-          getScrollableNode: this.getScrollableNode,
-          getInnerViewNode: this.getInnerViewNode,
-          getInnerViewRef: this.getInnerViewRef,
-          getNativeScrollRef: this.getNativeScrollRef,
-          scrollTo: this.scrollTo,
-          scrollToEnd: this.scrollToEnd,
-          flashScrollIndicators: this.flashScrollIndicators,
-          scrollResponderZoomTo: this.scrollResponderZoomTo,
-          scrollResponderScrollNativeHandleToKeyboard:
-            this.scrollResponderScrollNativeHandleToKeyboard,
-        },
-      );
+  _scrollViewRef: ?React.ElementRef<HostComponent<mixed>> = null;
 
-      return publicInstance;
+  _innerViewRef: ?React.ElementRef<typeof View> = null;
+  _setInnerViewRef: $FlowFixMe = setAndForwardRef({
+    getForwardedRef: () => this.props.innerViewRef,
+    setLocalRef: ref => {
+      this._innerViewRef = ref;
     },
-  );
+  });
 
   /**
    * Warning, this may be called several times for a single keyboard opening.
@@ -1662,7 +1650,6 @@ class ScrollView extends React.Component<Props, State> {
       this.props.contentContainerStyle,
     ];
     if (__DEV__ && this.props.style !== undefined) {
-      // $FlowFixMe[underconstrained-implicit-instantiation]
       const style = flattenStyle(this.props.style);
       const childLayoutProps = ['alignItems', 'justifyContent'].filter(
         prop => style && style[prop] !== undefined,
@@ -1686,9 +1673,7 @@ class ScrollView extends React.Component<Props, State> {
     let children = this.props.children;
 
     if (stickyHeaderIndices != null && stickyHeaderIndices.length > 0) {
-      const childArray = React.Children.toArray<$FlowFixMe>(
-        this.props.children,
-      );
+      const childArray = React.Children.toArray(this.props.children);
 
       children = childArray.map((child, index) => {
         const indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;
@@ -1731,7 +1716,7 @@ class ScrollView extends React.Component<Props, State> {
     const contentContainer = (
       <NativeDirectionalScrollContentView
         {...contentSizeChangeProps}
-        ref={this._innerView.getForwardingRef(this.props.innerViewRef)}
+        ref={this._setInnerViewRef}
         style={contentContainerStyle}
         removeClippedSubviews={
           // Subview clipping causes issues with sticky headers on Android and
@@ -1817,15 +1802,12 @@ class ScrollView extends React.Component<Props, State> {
     }
 
     const refreshControl = this.props.refreshControl;
-    const scrollViewRef = this._scrollView.getForwardingRef(
-      this.props.scrollViewRef,
-    );
 
     if (refreshControl) {
       if (Platform.OS === 'ios') {
         // On iOS the RefreshControl is a child of the ScrollView.
         return (
-          <NativeDirectionalScrollView {...props} ref={scrollViewRef}>
+          <NativeDirectionalScrollView {...props} ref={this._setNativeRef}>
             {refreshControl}
             {contentContainer}
           </NativeDirectionalScrollView>
@@ -1836,7 +1818,6 @@ class ScrollView extends React.Component<Props, State> {
         // AndroidSwipeRefreshLayout and use flex: 1 for the ScrollView.
         // Note: we should split props.style on the inner and outer props
         // however, the ScrollView still needs the baseStyle to be scrollable
-        // $FlowFixMe[underconstrained-implicit-instantiation]
         const {outer, inner} = splitLayoutProps(flattenStyle(props.style));
         return React.cloneElement(
           refreshControl,
@@ -1844,14 +1825,14 @@ class ScrollView extends React.Component<Props, State> {
           <NativeDirectionalScrollView
             {...props}
             style={StyleSheet.compose(baseStyle, inner)}
-            ref={scrollViewRef}>
+            ref={this._setNativeRef}>
             {contentContainer}
           </NativeDirectionalScrollView>,
         );
       }
     }
     return (
-      <NativeDirectionalScrollView {...props} ref={scrollViewRef}>
+      <NativeDirectionalScrollView {...props} ref={this._setNativeRef}>
         {contentContainer}
       </NativeDirectionalScrollView>
     );
@@ -1876,48 +1857,6 @@ const styles = StyleSheet.create({
   },
 });
 
-type ForwardedRef<T> = {current: null | T, ...} | ((null | T) => mixed);
-
-type RefForwarder<TNativeInstance, TPublicInstance> = {
-  getForwardingRef: (
-    ?ForwardedRef<TPublicInstance>,
-  ) => (TNativeInstance | null) => void,
-  nativeInstance: TNativeInstance | null,
-  publicInstance: TPublicInstance | null,
-};
-
-/**
- * Helper function that should be replaced with `useCallback` and `useMergeRefs`
- * once `ScrollView` is reimplemented as a functional component.
- */
-function createRefForwarder<TNativeInstance, TPublicInstance>(
-  mutator: TNativeInstance => TPublicInstance,
-): RefForwarder<TNativeInstance, TPublicInstance> {
-  const state: RefForwarder<TNativeInstance, TPublicInstance> = {
-    getForwardingRef: memoize(forwardedRef => {
-      return (nativeInstance: TNativeInstance | null): void => {
-        const publicInstance =
-          nativeInstance == null ? null : mutator(nativeInstance);
-
-        state.nativeInstance = nativeInstance;
-        state.publicInstance = publicInstance;
-
-        if (forwardedRef != null) {
-          if (typeof forwardedRef === 'function') {
-            forwardedRef(publicInstance);
-          } else {
-            forwardedRef.current = publicInstance;
-          }
-        }
-      };
-    }),
-    nativeInstance: null,
-    publicInstance: null,
-  };
-
-  return state;
-}
-
 /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's
  * LTI update could not be added via codemod */
 function Wrapper(props, ref: (mixed => mixed) | {current: mixed, ...}) {
@@ -1933,6 +1872,9 @@ ForwardedScrollView.displayName = 'ScrollView';
 
 module.exports = ((ForwardedScrollView: $FlowFixMe): React.AbstractComponent<
   React.ElementConfig<typeof ScrollView>,
-  PublicScrollViewInstance,
+  $ReadOnly<{|
+    ...$Exact<React.ElementRef<HostComponent<mixed>>>,
+    ...ScrollViewImperativeMethods,
+  |}>,
 > &
   ScrollViewComponentStatics);
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js
index 2ba1886..efe08ab 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js
@@ -60,31 +60,21 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig =
           borderRadius: true,
           nestedScrollEnabled: true,
           borderStyle: true,
-          borderRightColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
+          borderRightColor: {process: require('../../StyleSheet/processColor')},
+          borderColor: {process: require('../../StyleSheet/processColor')},
           borderBottomColor: {
-            process: require('../../StyleSheet/processColor').default,
+            process: require('../../StyleSheet/processColor'),
           },
           persistentScrollbar: true,
-          endFillColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
+          endFillColor: {process: require('../../StyleSheet/processColor')},
           fadingEdgeLength: true,
           overScrollMode: true,
           borderTopLeftRadius: true,
           scrollPerfTag: true,
-          borderTopColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
+          borderTopColor: {process: require('../../StyleSheet/processColor')},
           removeClippedSubviews: true,
           borderTopRightRadius: true,
-          borderLeftColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
+          borderLeftColor: {process: require('../../StyleSheet/processColor')},
           pointerEvents: true,
         },
       }
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
index 4afb130..6b42d2e 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
@@ -11,7 +11,6 @@
 import type {LayoutEvent} from '../../Types/CoreEventTypes';
 
 import Animated from '../../Animated/Animated';
-import {isPublicInstance as isFabricPublicInstance} from '../../Renderer/public/ReactFabricPublicInstanceUtils';
 import StyleSheet from '../../StyleSheet/StyleSheet';
 import Platform from '../../Utilities/Platform';
 import useMergeRefs from '../../Utilities/useMergeRefs';
@@ -65,7 +64,10 @@ const ScrollViewStickyHeaderWithForwardedRef: React.AbstractComponent<
     ref.setNextHeaderY = value => {
       setNextHeaderLayoutY(value);
     };
-    setIsFabric(isFabricPublicInstance(ref));
+    // Avoid dot notation because at Meta, private properties are obfuscated.
+    // $FlowFixMe[prop-missing]
+    const _internalInstanceHandler = ref['_internalInstanceHandle']; // eslint-disable-line dot-notation
+    setIsFabric(Boolean(_internalInstanceHandler?.stateNode?.canonical));
   };
   const ref: (React.ElementRef<typeof Animated.View> | null) => void =
     // $FlowFixMe[incompatible-type] - Ref is mutated by `callbackRef`.
@@ -132,7 +134,7 @@ const ScrollViewStickyHeaderWithForwardedRef: React.AbstractComponent<
   //    platform to JS, so we need the ShadowTree to have knowledge
   //    of the current position.
   const animatedValueListener = useCallback(
-    ({value}: $FlowFixMe) => {
+    ({value}) => {
       const _debounceTimeout: number = Platform.OS === 'android' ? 15 : 64;
       // When the AnimatedInterpolation is recreated, it always initializes
       // to a value of zero and emits a value change of 0 to its listeners.
@@ -254,13 +256,13 @@ const ScrollViewStickyHeaderWithForwardedRef: React.AbstractComponent<
     setMeasured(true);
 
     props.onLayout(event);
-    const child = React.Children.only<$FlowFixMe>(props.children);
+    const child = React.Children.only(props.children);
     if (child.props.onLayout) {
       child.props.onLayout(event);
     }
   };
 
-  const child = React.Children.only<$FlowFixMe>(props.children);
+  const child = React.Children.only(props.children);
 
   // TODO T68319535: remove this if NativeAnimated is rewritten for Fabric
   const passthroughAnimatedPropExplicitValues =
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewViewConfig.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewViewConfig.js
index 450b566..9fd5b6f 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewViewConfig.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewViewConfig.js
@@ -41,7 +41,7 @@ const ScrollViewViewConfig = {
     directionalLockEnabled: true,
     disableIntervalMomentum: true,
     endFillColor: {
-      process: require('../../StyleSheet/processColor').default,
+      process: require('../../StyleSheet/processColor'),
     },
     fadingEdgeLength: true,
     indicatorStyle: true,
diff --git a/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts b/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts
new file mode 100644
index 0000000..33f26d0
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts
@@ -0,0 +1,132 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+import type * as React from 'react';
+import {Constructor} from '../../../types/private/Utilities';
+import {ImageURISource} from '../../Image/ImageSource';
+import {NativeMethods} from '../../../types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
+import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
+import {ViewProps} from '../View/ViewPropTypes';
+
+export interface SliderPropsAndroid extends ViewProps {
+  /**
+   * Color of the foreground switch grip.
+   */
+  thumbTintColor?: ColorValue | undefined;
+}
+
+export interface SliderPropsIOS extends ViewProps {
+  /**
+   * Assigns a maximum track image. Only static images are supported.
+   * The leftmost pixel of the image will be stretched to fill the track.
+   */
+  maximumTrackImage?: ImageURISource | undefined;
+
+  /**
+   * Assigns a minimum track image. Only static images are supported.
+   * The rightmost pixel of the image will be stretched to fill the track.
+   */
+  minimumTrackImage?: ImageURISource | undefined;
+
+  /**
+   * Sets an image for the thumb. Only static images are supported.
+   */
+  thumbImage?: ImageURISource | undefined;
+
+  /**
+   * Assigns a single image for the track. Only static images
+   * are supported. The center pixel of the image will be stretched
+   * to fill the track.
+   */
+  trackImage?: ImageURISource | undefined;
+}
+
+export interface SliderProps extends SliderPropsIOS, SliderPropsAndroid {
+  /**
+   * If true the user won't be able to move the slider.
+   * Default value is false.
+   */
+  disabled?: boolean | undefined;
+
+  /**
+   * The color used for the track to the right of the button.
+   * Overrides the default blue gradient image.
+   */
+  maximumTrackTintColor?: ColorValue | undefined;
+
+  /**
+   * Initial maximum value of the slider. Default value is 1.
+   */
+  maximumValue?: number | undefined;
+
+  /**
+   * The color used for the track to the left of the button.
+   * Overrides the default blue gradient image.
+   */
+  minimumTrackTintColor?: ColorValue | undefined;
+
+  /**
+   * Initial minimum value of the slider. Default value is 0.
+   */
+  minimumValue?: number | undefined;
+
+  /**
+   * Callback called when the user finishes changing the value (e.g. when the slider is released).
+   */
+  onSlidingComplete?: ((value: number) => void) | undefined;
+
+  /**
+   * Callback continuously called while the user is dragging the slider.
+   */
+  onValueChange?: ((value: number) => void) | undefined;
+
+  /**
+   * Step value of the slider. The value should be between 0 and (maximumValue - minimumValue). Default value is 0.
+   */
+  step?: number | undefined;
+
+  /**
+   * Used to style and layout the Slider. See StyleSheet.js for more info.
+   */
+  style?: StyleProp<ViewStyle> | undefined;
+
+  /**
+   * Used to locate this view in UI automation tests.
+   */
+  testID?: string | undefined;
+
+  /**
+   * Initial value of the slider. The value should be between minimumValue
+   * and maximumValue, which default to 0 and 1 respectively.
+   * Default value is 0.
+   * This is not a controlled component, you don't need to update
+   * the value during dragging.
+   */
+  value?: number | undefined;
+}
+
+/**
+ * A component used to select a single value from a range of values.
+ */
+declare class SliderComponent extends React.Component<SliderProps> {}
+declare const SliderBase: Constructor<NativeMethods> & typeof SliderComponent;
+/**
+ * Slider has been extracted from react-native core and will be removed in a future release.
+ * It can now be installed and imported from `@react-native-community/slider` instead of 'react-native'.
+ * @see https://github.com/callstack/react-native-slider
+ * @deprecated
+ */
+export class Slider extends SliderBase {}
+/**  SliderIOS has been removed from react-native.
+ * It can now be installed and imported from `@react-native-community/slider` instead of 'react-native'.
+ * @see https://github.com/callstack/react-native-slider
+ * @deprecated
+ */
+export type SliderIOS = Slider;
diff --git a/node_modules/react-native/Libraries/Components/Slider/Slider.js b/node_modules/react-native/Libraries/Components/Slider/Slider.js
new file mode 100644
index 0000000..ad5900f
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/Slider/Slider.js
@@ -0,0 +1,282 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+import type {ImageSource} from '../../Image/ImageSource';
+import type {SyntheticEvent} from '../../Types/CoreEventTypes';
+import type {AccessibilityState} from '../View/ViewAccessibility';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import StyleSheet, {
+  type ColorValue,
+  type ViewStyleProp,
+} from '../../StyleSheet/StyleSheet';
+import Platform from '../../Utilities/Platform';
+import SliderNativeComponent from './SliderNativeComponent';
+import * as React from 'react';
+
+type Event = SyntheticEvent<
+  $ReadOnly<{|
+    value: number,
+    /**
+     * Android Only.
+     */
+    fromUser?: boolean,
+  |}>,
+>;
+
+type IOSProps = $ReadOnly<{|
+  /**
+   * Assigns a single image for the track. Only static images are supported.
+   * The center pixel of the image will be stretched to fill the track.
+   */
+  trackImage?: ?ImageSource,
+
+  /**
+   * Assigns a minimum track image. Only static images are supported. The
+   * rightmost pixel of the image will be stretched to fill the track.
+   */
+  minimumTrackImage?: ?ImageSource,
+
+  /**
+   * Assigns a maximum track image. Only static images are supported. The
+   * leftmost pixel of the image will be stretched to fill the track.
+   */
+  maximumTrackImage?: ?ImageSource,
+
+  /**
+   * Sets an image for the thumb. Only static images are supported.
+   */
+  thumbImage?: ?ImageSource,
+|}>;
+
+type Props = $ReadOnly<{|
+  ...ViewProps,
+  ...IOSProps,
+
+  /**
+   * Used to style and layout the `Slider`.  See `StyleSheet.js` and
+   * `DeprecatedViewStylePropTypes.js` for more info.
+   */
+  style?: ?ViewStyleProp,
+
+  /**
+   * Initial value of the slider. The value should be between minimumValue
+   * and maximumValue, which default to 0 and 1 respectively.
+   * Default value is 0.
+   *
+   * *This is not a controlled component*, you don't need to update the
+   * value during dragging.
+   */
+  value?: ?number,
+
+  /**
+   * Step value of the slider. The value should be
+   * between 0 and (maximumValue - minimumValue).
+   * Default value is 0.
+   */
+  step?: ?number,
+
+  /**
+   * Initial minimum value of the slider. Default value is 0.
+   */
+  minimumValue?: ?number,
+
+  /**
+   * Initial maximum value of the slider. Default value is 1.
+   */
+  maximumValue?: ?number,
+
+  /**
+   * The color used for the track to the left of the button.
+   * Overrides the default blue gradient image on iOS.
+   */
+  minimumTrackTintColor?: ?ColorValue,
+
+  /**
+   * The color used for the track to the right of the button.
+   * Overrides the default blue gradient image on iOS.
+   */
+  maximumTrackTintColor?: ?ColorValue,
+  /**
+   * The color used to tint the default thumb images on iOS, or the
+   * color of the foreground switch grip on Android.
+   */
+  thumbTintColor?: ?ColorValue,
+
+  /**
+   * If true the user won't be able to move the slider.
+   * Default value is false.
+   */
+  disabled?: ?boolean,
+
+  /**
+   * Callback continuously called while the user is dragging the slider.
+   */
+  onValueChange?: ?(value: number) => void,
+
+  /**
+   * Callback that is called when the user releases the slider,
+   * regardless if the value has changed. The current value is passed
+   * as an argument to the callback handler.
+   */
+  onSlidingComplete?: ?(value: number) => void,
+
+  /**
+   * Used to locate this view in UI automation tests.
+   */
+  testID?: ?string,
+
+  /**
+    Indicates to accessibility services that UI Component is in a specific State.
+   */
+  accessibilityState?: ?AccessibilityState,
+|}>;
+
+/**
+ * A component used to select a single value from a range of values.
+ *
+ * ### Usage
+ *
+ * The example below shows how to use `Slider` to change
+ * a value used by `Text`. The value is stored using
+ * the state of the root component (`App`). The same component
+ * subscribes to the `onValueChange`  of `Slider` and changes
+ * the value using `setState`.
+ *
+ *```
+ * import React from 'react';
+ * import { StyleSheet, Text, View, Slider } from 'react-native';
+ *
+ * export default class App extends React.Component {
+ *   constructor(props) {
+ *     super(props);
+ *     this.state = {
+ *       value: 50
+ *     }
+ *   }
+ *
+ *   change(value) {
+ *     this.setState(() => {
+ *       return {
+ *         value: parseFloat(value)
+ *       };
+ *     });
+ *   }
+ *
+ *   render() {
+ *     const {value} = this.state;
+ *     return (
+ *       <View style={styles.container}>
+ *         <Text style={styles.text}>{String(value)}</Text>
+ *         <Slider
+ *           step={1}
+ *           maximumValue={100}
+ *           onValueChange={this.change.bind(this)}
+ *           value={value} />
+ *       </View>
+ *     );
+ *   }
+ * }
+ *
+ * const styles = StyleSheet.create({
+ *   container: {
+ *     flex: 1,
+ *     flexDirection: 'column',
+ *     justifyContent: 'center'
+ *   },
+ *   text: {
+ *     fontSize: 50,
+ *     textAlign: 'center'
+ *   }
+ * });
+ *```
+ *
+ */
+const Slider = (
+  props: Props,
+  forwardedRef?: ?React.Ref<typeof SliderNativeComponent>,
+) => {
+  const style = StyleSheet.compose(styles.slider, props.style);
+
+  const {
+    value = 0.5,
+    minimumValue = 0,
+    maximumValue = 1,
+    step = 0,
+    onValueChange,
+    onSlidingComplete,
+    ...localProps
+  } = props;
+
+  const onValueChangeEvent = onValueChange
+    ? (event: Event) => {
+        let userEvent = true;
+        if (Platform.OS === 'android') {
+          // On Android there's a special flag telling us the user is
+          // dragging the slider.
+          userEvent =
+            event.nativeEvent.fromUser != null && event.nativeEvent.fromUser;
+        }
+        userEvent && onValueChange(event.nativeEvent.value);
+      }
+    : null;
+
+  const onSlidingCompleteEvent = onSlidingComplete
+    ? (event: Event) => {
+        onSlidingComplete(event.nativeEvent.value);
+      }
+    : null;
+
+  const disabled =
+    props.disabled === true || props.accessibilityState?.disabled === true;
+  const accessibilityState = disabled
+    ? {...props.accessibilityState, disabled: true}
+    : props.accessibilityState;
+
+  return (
+    <SliderNativeComponent
+      {...localProps}
+      accessibilityState={accessibilityState}
+      // TODO: Reconcile these across the two platforms.
+      enabled={!disabled}
+      disabled={disabled}
+      maximumValue={maximumValue}
+      minimumValue={minimumValue}
+      onResponderTerminationRequest={() => false}
+      onSlidingComplete={onSlidingCompleteEvent}
+      onStartShouldSetResponder={() => true}
+      onValueChange={onValueChangeEvent}
+      ref={forwardedRef}
+      step={step}
+      style={style}
+      value={value}
+    />
+  );
+};
+
+const SliderWithRef: React.AbstractComponent<
+  Props,
+  React.ElementRef<typeof SliderNativeComponent>,
+> = React.forwardRef(Slider);
+
+let styles;
+if (Platform.OS === 'ios') {
+  styles = StyleSheet.create({
+    slider: {
+      height: 40,
+    },
+  });
+} else {
+  styles = StyleSheet.create({
+    slider: {},
+  });
+}
+
+module.exports = SliderWithRef;
diff --git a/node_modules/react-native/Libraries/Components/Slider/SliderNativeComponent.js b/node_modules/react-native/Libraries/Components/Slider/SliderNativeComponent.js
new file mode 100644
index 0000000..4e4e12c
--- /dev/null
+++ b/node_modules/react-native/Libraries/Components/Slider/SliderNativeComponent.js
@@ -0,0 +1,56 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+import type {ImageSource} from '../../Image/ImageSource';
+import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
+import type {ColorValue} from '../../StyleSheet/StyleSheet';
+import type {
+  BubblingEventHandler,
+  DirectEventHandler,
+  Double,
+  WithDefault,
+} from '../../Types/CodegenTypes';
+import type {ViewProps} from '../View/ViewPropTypes';
+
+import codegenNativeComponent from '../../Utilities/codegenNativeComponent';
+
+type Event = $ReadOnly<{|
+  value: Double,
+  fromUser?: boolean,
+|}>;
+
+type NativeProps = $ReadOnly<{|
+  ...ViewProps,
+
+  // Props
+  disabled?: WithDefault<boolean, false>,
+  enabled?: WithDefault<boolean, true>,
+  maximumTrackImage?: ?ImageSource,
+  maximumTrackTintColor?: ?ColorValue,
+  maximumValue?: WithDefault<Double, 1>,
+  minimumTrackImage?: ?ImageSource,
+  minimumTrackTintColor?: ?ColorValue,
+  minimumValue?: WithDefault<Double, 0>,
+  step?: WithDefault<Double, 0>,
+  testID?: WithDefault<string, ''>,
+  thumbImage?: ?ImageSource,
+  thumbTintColor?: ?ColorValue,
+  trackImage?: ?ImageSource,
+  value?: WithDefault<Double, 0>,
+
+  // Events
+  onValueChange?: ?BubblingEventHandler<Event>,
+  onSlidingComplete?: ?DirectEventHandler<Event>,
+|}>;
+
+export default (codegenNativeComponent<NativeProps>('Slider', {
+  interfaceOnly: true,
+  paperComponentName: 'RCTSlider',
+}): HostComponent<NativeProps>);
diff --git a/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.js b/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.js
index 2ac3d1f..9110827 100644
--- a/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.js
+++ b/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.js
@@ -238,11 +238,9 @@ class StatusBar extends React.Component<Props> {
   });
 
   // Timer for updating the native module values at the end of the frame.
-  // $FlowFixMe[missing-local-annot]
   static _updateImmediate = null;
 
   // The current merged values from the props stack.
-  // $FlowFixMe[missing-local-annot]
   static _currentValues = null;
 
   // TODO(janic): Provide a real API to deal with status bar height. See the
@@ -389,7 +387,6 @@ class StatusBar extends React.Component<Props> {
     return newEntry;
   }
 
-  // $FlowFixMe[missing-local-annot]
   _stackEntry = null;
 
   componentDidMount() {
diff --git a/node_modules/react-native/Libraries/Components/Switch/Switch.js b/node_modules/react-native/Libraries/Components/Switch/Switch.js
index af27bd5..ea89d7a 100644
--- a/node_modules/react-native/Libraries/Components/Switch/Switch.js
+++ b/node_modules/react-native/Libraries/Components/Switch/Switch.js
@@ -157,12 +157,10 @@ const SwitchWithForwardedRef: React.AbstractComponent<
 
   const ref = useMergeRefs(nativeSwitchRef, forwardedRef);
 
-  const [native, setNative] = React.useState({value: (null: ?boolean)});
+  const [native, setNative] = React.useState({value: null});
 
   const handleChange = (event: SwitchChangeEvent) => {
-    // $FlowFixMe[unused-promise]
     onChange?.(event);
-    // $FlowFixMe[unused-promise]
     onValueChange?.(event.nativeEvent.value);
     setNative({value: event.nativeEvent.value});
   };
diff --git a/node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js b/node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js
index 55b770d..faec794 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js
@@ -677,38 +677,35 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {
     placeholder: true,
     inlineImagePadding: true,
     contextMenuHidden: true,
-    textShadowColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    textShadowColor: {process: require('../../StyleSheet/processColor')},
     maxLength: true,
     selectTextOnFocus: true,
     textShadowRadius: true,
     underlineColorAndroid: {
-      process: require('../../StyleSheet/processColor').default,
+      process: require('../../StyleSheet/processColor'),
     },
     textDecorationLine: true,
     submitBehavior: true,
     textAlignVertical: true,
     fontStyle: true,
     textShadowOffset: true,
-    selectionColor: {process: require('../../StyleSheet/processColor').default},
-    placeholderTextColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    selectionColor: {process: require('../../StyleSheet/processColor')},
+    selection: true,
+    placeholderTextColor: {process: require('../../StyleSheet/processColor')},
     importantForAutofill: true,
     lineHeight: true,
     textTransform: true,
     returnKeyType: true,
     keyboardType: true,
     multiline: true,
-    color: {process: require('../../StyleSheet/processColor').default},
+    color: {process: require('../../StyleSheet/processColor')},
     autoComplete: true,
     numberOfLines: true,
     letterSpacing: true,
     returnKeyLabel: true,
     fontSize: true,
     onKeyPress: true,
-    cursorColor: {process: require('../../StyleSheet/processColor').default},
+    cursorColor: {process: require('../../StyleSheet/processColor')},
     text: true,
     showSoftInputOnFocus: true,
     textAlign: true,
@@ -730,22 +727,16 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {
     editable: true,
     fontVariant: true,
     borderBottomRightRadius: true,
-    borderBottomColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    borderBottomColor: {process: require('../../StyleSheet/processColor')},
     borderRadius: true,
-    borderRightColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
-    borderColor: {process: require('../../StyleSheet/processColor').default},
+    borderRightColor: {process: require('../../StyleSheet/processColor')},
+    borderColor: {process: require('../../StyleSheet/processColor')},
     borderTopRightRadius: true,
     borderStyle: true,
     borderBottomLeftRadius: true,
-    borderLeftColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    borderLeftColor: {process: require('../../StyleSheet/processColor')},
     borderTopLeftRadius: true,
-    borderTopColor: {process: require('../../StyleSheet/processColor').default},
+    borderTopColor: {process: require('../../StyleSheet/processColor')},
   },
 };
 
diff --git a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts
index d64911f..00edf5a 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts
+++ b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts
@@ -23,7 +23,7 @@ export class InputAccessoryView extends React.Component<InputAccessoryViewProps>
 export interface InputAccessoryViewProps {
   backgroundColor?: ColorValue | undefined;
 
-  children?: React.ReactNode | undefined;
+  children?: React.ReactNode;
 
   /**
    * An ID which is used to associate this InputAccessoryView to specified TextInput(s).
diff --git a/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js b/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js
index 6f69329..6af9cd3 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js
@@ -116,21 +116,15 @@ const RCTTextInputViewConfig = {
     textShadowRadius: true,
     letterSpacing: true,
     textDecorationStyle: true,
-    textDecorationColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
-    color: {process: require('../../StyleSheet/processColor').default},
+    textDecorationColor: {process: require('../../StyleSheet/processColor')},
+    color: {process: require('../../StyleSheet/processColor')},
     maxFontSizeMultiplier: true,
-    textShadowColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    textShadowColor: {process: require('../../StyleSheet/processColor')},
     editable: true,
     inputAccessoryViewID: true,
     caretHidden: true,
     enablesReturnKeyAutomatically: true,
-    placeholderTextColor: {
-      process: require('../../StyleSheet/processColor').default,
-    },
+    placeholderTextColor: {process: require('../../StyleSheet/processColor')},
     clearButtonMode: true,
     keyboardType: true,
     selection: true,
@@ -138,7 +132,7 @@ const RCTTextInputViewConfig = {
     submitBehavior: true,
     mostRecentEventCount: true,
     scrollEnabled: true,
-    selectionColor: {process: require('../../StyleSheet/processColor').default},
+    selectionColor: {process: require('../../StyleSheet/processColor')},
     contextMenuHidden: true,
     secureTextEntry: true,
     placeholder: true,
diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts b/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
index ff029fb..2cbec99 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
@@ -21,21 +21,21 @@ import {
   NativeTouchEvent,
   TargetedEvent,
 } from '../../Types/CoreEventTypes';
-import EventEmitter from '../../vendor/emitter/EventEmitter';
+import {EventEmitter} from '../../vendor/emitter/EventEmitter';
 import {AccessibilityProps} from '../View/ViewAccessibility';
 import {ViewProps} from '../View/ViewPropTypes';
 
 export type KeyboardType =
   | 'default'
-  | 'number-pad'
-  | 'decimal-pad'
-  | 'numeric'
   | 'email-address'
+  | 'numeric'
   | 'phone-pad'
-  | 'url';
+  | 'number-pad'
+  | 'decimal-pad';
 export type KeyboardTypeIOS =
   | 'ascii-capable'
   | 'numbers-and-punctuation'
+  | 'url'
   | 'name-phone-pad'
   | 'twitter'
   | 'web-search';
@@ -272,16 +272,6 @@ export interface TextInputIOSProps {
    * If false, scrolling of the text view will be disabled. The default value is true. Only works with multiline={true}
    */
   scrollEnabled?: boolean | undefined;
-
-  /**
-   * Set line break strategy on iOS.
-   */
-  lineBreakStrategyIOS?:
-    | 'none'
-    | 'standard'
-    | 'hangul-word'
-    | 'push-out'
-    | undefined;
 }
 
 /**
diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.flow.js b/node_modules/react-native/Libraries/Components/TextInput/TextInput.flow.js
index 7ed4579..fd87839 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.flow.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.flow.js
@@ -542,7 +542,7 @@ export type Props = $ReadOnly<{|
    * On Android devices manufactured by Xiaomi with Android Q,
    * when keyboardType equals 'email-address'this will be set
    * in native to 'true' to prevent a system related crash. This
-   * will cause cursor to be disabled as a side-effect.
+   * will cause cursor to be diabled as a side-effect.
    *
    */
   caretHidden?: ?boolean,
diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.js b/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
index df89097..b871ea4 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
@@ -27,20 +27,15 @@ import StyleSheet, {
 import Text from '../../Text/Text';
 import TextAncestor from '../../Text/TextAncestor';
 import Platform from '../../Utilities/Platform';
-import useMergeRefs from '../../Utilities/useMergeRefs';
+import setAndForwardRef from '../../Utilities/setAndForwardRef';
 import TextInputState from './TextInputState';
 import invariant from 'invariant';
 import nullthrows from 'nullthrows';
 import * as React from 'react';
-import {useCallback, useLayoutEffect, useRef, useState} from 'react';
+
+const {useLayoutEffect, useRef, useState} = React;
 
 type ReactRefSetter<T> = {current: null | T, ...} | ((ref: null | T) => mixed);
-type TextInputInstance = React.ElementRef<HostComponent<mixed>> & {
-  +clear: () => void,
-  +isFocused: () => boolean,
-  +getNativeRef: () => ?React.ElementRef<HostComponent<mixed>>,
-  +setSelection: (start: number, end: number) => void,
-};
 
 let AndroidTextInput;
 let AndroidTextInputCommands;
@@ -583,7 +578,7 @@ export type Props = $ReadOnly<{|
    * On Android devices manufactured by Xiaomi with Android Q,
    * when keyboardType equals 'email-address'this will be set
    * in native to 'true' to prevent a system related crash. This
-   * will cause cursor to be disabled as a side-effect.
+   * will cause cursor to be diabled as a side-effect.
    *
    */
   caretHidden?: ?boolean,
@@ -605,7 +600,9 @@ export type Props = $ReadOnly<{|
    */
   editable?: ?boolean,
 
-  forwardedRef?: ?ReactRefSetter<TextInputInstance>,
+  forwardedRef?: ?ReactRefSetter<
+    React.ElementRef<HostComponent<mixed>> & ImperativeMethods,
+  >,
 
   /**
    * `enterKeyHint` defines what action label (or icon) to present for the enter key on virtual keyboards.
@@ -943,6 +940,13 @@ export type Props = $ReadOnly<{|
   value?: ?Stringish,
 |}>;
 
+type ImperativeMethods = $ReadOnly<{|
+  clear: () => void,
+  isFocused: () => boolean,
+  getNativeRef: () => ?React.ElementRef<HostComponent<mixed>>,
+  setSelection: (start: number, end: number) => void,
+|}>;
+
 const emptyFunctionThatReturnsTrue = () => true;
 
 /**
@@ -1066,19 +1070,27 @@ function InternalTextInput(props: Props): React.Node {
     accessibilityState,
     id,
     tabIndex,
-    selection: propsSelection,
     ...otherProps
   } = props;
 
   const inputRef = useRef<null | React.ElementRef<HostComponent<mixed>>>(null);
 
+  // Android sends a "onTextChanged" event followed by a "onSelectionChanged" event, for
+  // the same "most recent event count".
+  // For controlled selection, that means that immediately after text is updated,
+  // a controlled component will pass in the *previous* selection, even if the controlled
+  // component didn't mean to modify the selection at all.
+  // Therefore, we ignore selections and pass them through until the selection event has
+  // been sent.
+  // Note that this mitigation is NOT needed for Fabric.
+  // discovered when upgrading react-hooks
   // eslint-disable-next-line react-hooks/exhaustive-deps
-  const selection: ?Selection =
-    propsSelection == null
+  let selection: ?Selection =
+    props.selection == null
       ? null
       : {
-          start: propsSelection.start,
-          end: propsSelection.end ?? propsSelection.start,
+          start: props.selection.start,
+          end: props.selection.end ?? props.selection.start,
         };
 
   const [mostRecentEventCount, setMostRecentEventCount] = useState<number>(0);
@@ -1090,6 +1102,12 @@ function InternalTextInput(props: Props): React.Node {
   |}>({selection, mostRecentEventCount});
 
   const lastNativeSelection = lastNativeSelectionState.selection;
+  const lastNativeSelectionEventCount =
+    lastNativeSelectionState.mostRecentEventCount;
+
+  if (lastNativeSelectionEventCount < mostRecentEventCount) {
+    selection = null;
+  }
 
   let viewCommands;
   if (AndroidTextInputCommands) {
@@ -1170,74 +1188,74 @@ function InternalTextInput(props: Props): React.Node {
     }
   }, [inputRef]);
 
-  const setLocalRef = useCallback(
-    (instance: TextInputInstance | null) => {
-      inputRef.current = instance;
+  function clear(): void {
+    if (inputRef.current != null) {
+      viewCommands.setTextAndSelection(
+        inputRef.current,
+        mostRecentEventCount,
+        '',
+        0,
+        0,
+      );
+    }
+  }
+
+  function setSelection(start: number, end: number): void {
+    if (inputRef.current != null) {
+      viewCommands.setTextAndSelection(
+        inputRef.current,
+        mostRecentEventCount,
+        null,
+        start,
+        end,
+      );
+    }
+  }
+
+  // TODO: Fix this returning true on null === null, when no input is focused
+  function isFocused(): boolean {
+    return TextInputState.currentlyFocusedInput() === inputRef.current;
+  }
+
+  function getNativeRef(): ?React.ElementRef<HostComponent<mixed>> {
+    return inputRef.current;
+  }
+
+  const _setNativeRef = setAndForwardRef({
+    getForwardedRef: () => props.forwardedRef,
+    setLocalRef: ref => {
+      inputRef.current = ref;
 
       /*
-      Hi reader from the future. I'm sorry for this.
-
-      This is a hack. Ideally we would forwardRef to the underlying
-      host component. However, since TextInput has it's own methods that can be
-      called as well, if we used the standard forwardRef then these
-      methods wouldn't be accessible and thus be a breaking change.
-
-      We have a couple of options of how to handle this:
-      - Return a new ref with everything we methods from both. This is problematic
-        because we need React to also know it is a host component which requires
-        internals of the class implementation of the ref.
-      - Break the API and have some other way to call one set of the methods or
-        the other. This is our long term approach as we want to eventually
-        get the methods on host components off the ref. So instead of calling
-        ref.measure() you might call ReactNative.measure(ref). This would hopefully
-        let the ref for TextInput then have the methods like `.clear`. Or we do it
-        the other way and make it TextInput.clear(textInputRef) which would be fine
-        too. Either way though is a breaking change that is longer term.
-      - Mutate this ref. :( Gross, but accomplishes what we need in the meantime
-        before we can get to the long term breaking change.
-      */
-      if (instance != null) {
-        // $FlowFixMe[incompatible-use] - See the explanation above.
-        Object.assign(instance, {
-          clear(): void {
-            if (inputRef.current != null) {
-              viewCommands.setTextAndSelection(
-                inputRef.current,
-                mostRecentEventCount,
-                '',
-                0,
-                0,
-              );
-            }
-          },
-          // TODO: Fix this returning true on null === null, when no input is focused
-          isFocused(): boolean {
-            return TextInputState.currentlyFocusedInput() === inputRef.current;
-          },
-          getNativeRef(): ?React.ElementRef<HostComponent<mixed>> {
-            return inputRef.current;
-          },
-          setSelection(start: number, end: number): void {
-            if (inputRef.current != null) {
-              viewCommands.setTextAndSelection(
-                inputRef.current,
-                mostRecentEventCount,
-                null,
-                start,
-                end,
-              );
-            }
-          },
-        });
+        Hi reader from the future. I'm sorry for this.
+
+        This is a hack. Ideally we would forwardRef to the underlying
+        host component. However, since TextInput has it's own methods that can be
+        called as well, if we used the standard forwardRef then these
+        methods wouldn't be accessible and thus be a breaking change.
+
+        We have a couple of options of how to handle this:
+        - Return a new ref with everything we methods from both. This is problematic
+          because we need React to also know it is a host component which requires
+          internals of the class implementation of the ref.
+        - Break the API and have some other way to call one set of the methods or
+          the other. This is our long term approach as we want to eventually
+          get the methods on host components off the ref. So instead of calling
+          ref.measure() you might call ReactNative.measure(ref). This would hopefully
+          let the ref for TextInput then have the methods like `.clear`. Or we do it
+          the other way and make it TextInput.clear(textInputRef) which would be fine
+          too. Either way though is a breaking change that is longer term.
+        - Mutate this ref. :( Gross, but accomplishes what we need in the meantime
+          before we can get to the long term breaking change.
+        */
+      if (ref) {
+        ref.clear = clear;
+        ref.isFocused = isFocused;
+        ref.getNativeRef = getNativeRef;
+        ref.setSelection = setSelection;
       }
     },
-    [mostRecentEventCount, viewCommands],
-  );
-
-  const ref = useMergeRefs<TextInputInstance | null>(
-    setLocalRef,
-    props.forwardedRef,
-  );
+  });
 
   const _onChange = (event: ChangeEvent) => {
     const currentText = event.nativeEvent.text;
@@ -1393,7 +1411,6 @@ function InternalTextInput(props: Props): React.Node {
     };
   }
 
-  // $FlowFixMe[underconstrained-implicit-instantiation]
   let style = flattenStyle(props.style);
 
   if (Platform.OS === 'ios') {
@@ -1410,8 +1427,7 @@ function InternalTextInput(props: Props): React.Node {
 
     textInput = (
       <RCTTextInputView
-        // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.
-        ref={ref}
+        ref={_setNativeRef}
         {...otherProps}
         {...eventHandlers}
         accessibilityState={_accessibilityState}
@@ -1461,8 +1477,7 @@ function InternalTextInput(props: Props): React.Node {
        * match up exactly with the props for TextInput. This will need to get
        * fixed */
       <AndroidTextInput
-        // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.
-        ref={ref}
+        ref={_setNativeRef}
         {...otherProps}
         {...eventHandlers}
         accessibilityState={_accessibilityState}
@@ -1489,6 +1504,7 @@ function InternalTextInput(props: Props): React.Node {
         onScroll={_onScroll}
         onSelectionChange={_onSelectionChange}
         placeholder={placeholder}
+        selection={selection}
         style={style}
         text={text}
         textBreakStrategy={props.textBreakStrategy}
@@ -1584,7 +1600,7 @@ const autoCompleteWebToTextContentTypeMap = {
 
 const ExportedForwardRef: React.AbstractComponent<
   React.ElementConfig<typeof InternalTextInput>,
-  TextInputInstance,
+  React.ElementRef<HostComponent<mixed>> & ImperativeMethods,
 > = React.forwardRef(function TextInput(
   {
     allowFontScaling = true,
@@ -1597,13 +1613,13 @@ const ExportedForwardRef: React.AbstractComponent<
     enterKeyHint,
     returnKeyType,
     inputMode,
-    showSoftInputOnFocus,
     keyboardType,
     ...restProps
   },
-  forwardedRef: ReactRefSetter<TextInputInstance>,
+  forwardedRef: ReactRefSetter<
+    React.ElementRef<HostComponent<mixed>> & ImperativeMethods,
+  >,
 ) {
-  // $FlowFixMe[underconstrained-implicit-instantiation]
   let style = flattenStyle(restProps.style);
 
   if (style?.verticalAlign != null) {
@@ -1624,9 +1640,6 @@ const ExportedForwardRef: React.AbstractComponent<
       keyboardType={
         inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType
       }
-      showSoftInputOnFocus={
-        inputMode == null ? showSoftInputOnFocus : inputMode !== 'none'
-      }
       autoComplete={
         Platform.OS === 'android'
           ? // $FlowFixMe[invalid-computed-prop]
diff --git a/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts b/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts
index 3c0065c..6915dd2 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts
@@ -13,7 +13,7 @@ import {GestureResponderEvent} from '../../Types/CoreEventTypes';
 
 /**
  * //FIXME: need to find documentation on which component is a TTouchable and can implement that interface
- * @see React.DOMAttributes
+ * @see React.DOMAtributes
  */
 export interface Touchable {
   onTouchStart?: ((event: GestureResponderEvent) => void) | undefined;
diff --git a/node_modules/react-native/Libraries/Components/Touchable/Touchable.flow.js b/node_modules/react-native/Libraries/Components/Touchable/Touchable.flow.js
index b93087c..3a583c2 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/Touchable.flow.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/Touchable.flow.js
@@ -99,30 +99,7 @@ import * as React from 'react';
  *   }
  */
 
-/**
- * Touchable states.
- */
-
-const States = {
-  NOT_RESPONDER: 'NOT_RESPONDER', // Not the responder
-  RESPONDER_INACTIVE_PRESS_IN: 'RESPONDER_INACTIVE_PRESS_IN', // Responder, inactive, in the `PressRect`
-  RESPONDER_INACTIVE_PRESS_OUT: 'RESPONDER_INACTIVE_PRESS_OUT', // Responder, inactive, out of `PressRect`
-  RESPONDER_ACTIVE_PRESS_IN: 'RESPONDER_ACTIVE_PRESS_IN', // Responder, active, in the `PressRect`
-  RESPONDER_ACTIVE_PRESS_OUT: 'RESPONDER_ACTIVE_PRESS_OUT', // Responder, active, out of `PressRect`
-  RESPONDER_ACTIVE_LONG_PRESS_IN: 'RESPONDER_ACTIVE_LONG_PRESS_IN', // Responder, active, in the `PressRect`, after long press threshold
-  RESPONDER_ACTIVE_LONG_PRESS_OUT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT', // Responder, active, out of `PressRect`, after long press threshold
-  ERROR: 'ERROR',
-};
-
-type State =
-  | typeof States.NOT_RESPONDER
-  | typeof States.RESPONDER_INACTIVE_PRESS_IN
-  | typeof States.RESPONDER_INACTIVE_PRESS_OUT
-  | typeof States.RESPONDER_ACTIVE_PRESS_IN
-  | typeof States.RESPONDER_ACTIVE_PRESS_OUT
-  | typeof States.RESPONDER_ACTIVE_LONG_PRESS_IN
-  | typeof States.RESPONDER_ACTIVE_LONG_PRESS_OUT
-  | typeof States.ERROR;
+// Default amount "active" region protrudes beyond box
 
 /**
  * By convention, methods prefixed with underscores are meant to be @private,
@@ -223,12 +200,9 @@ interface TouchableMixinType {
    * @return {object} State object to be placed inside of
    * `this.state.touchable`.
    */
-  touchableGetInitialState: () => {
-    touchable: {
-      touchState: ?State,
-      responderID: ?PressEvent['currentTarget'],
-    },
-  };
+  touchableGetInitialState: () => $TEMPORARY$object<{|
+    touchable: $TEMPORARY$object<{|responderID: null, touchState: void|}>,
+  |}>;
 
   // ==== Hooks to Gesture Responder system ====
   /**
diff --git a/node_modules/react-native/Libraries/Components/Touchable/Touchable.js b/node_modules/react-native/Libraries/Components/Touchable/Touchable.js
index 50c9b8f..48e15bf 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/Touchable.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/Touchable.js
@@ -396,12 +396,9 @@ const TouchableMixin = {
    * @return {object} State object to be placed inside of
    * `this.state.touchable`.
    */
-  touchableGetInitialState: function (): {
-    touchable: {
-      touchState: ?State,
-      responderID: ?PressEvent['currentTarget'],
-    },
-  } {
+  touchableGetInitialState: function (): $TEMPORARY$object<{|
+    touchable: $TEMPORARY$object<{|responderID: null, touchState: void|}>,
+  |}> {
     return {
       touchable: {touchState: undefined, responderID: null},
     };
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js
index c937344..7d648ca 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js
@@ -277,7 +277,7 @@ class TouchableHighlight extends React.Component<Props, State> {
   }
 
   render(): React.Node {
-    const child = React.Children.only<$FlowFixMe>(this.props.children);
+    const child = React.Children.only(this.props.children);
 
     // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before
     // adopting `Pressability`, so preserve that behavior.
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js
index 2571ddd..a377694 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js
@@ -239,8 +239,8 @@ class TouchableNativeFeedback extends React.Component<Props, State> {
   }
 
   render(): React.Node {
-    const element = React.Children.only<$FlowFixMe>(this.props.children);
-    const children: Array<React.Node> = [element.props.children];
+    const element = React.Children.only(this.props.children);
+    const children = [element.props.children];
     if (__DEV__) {
       if (element.type === View) {
         children.push(
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js
index 02dc8ab..cc18e8e 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js
@@ -206,7 +206,6 @@ class TouchableOpacity extends React.Component<Props, State> {
   }
 
   _getChildStyleOpacityWithDefault(): number {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     const opacity = flattenStyle(this.props.style)?.opacity;
     return typeof opacity === 'number' ? opacity : 1;
   }
@@ -302,9 +301,7 @@ class TouchableOpacity extends React.Component<Props, State> {
     this.state.pressability.configure(this._createPressabilityConfig());
     if (
       this.props.disabled !== prevProps.disabled ||
-      // $FlowFixMe[underconstrained-implicit-instantiation]
       flattenStyle(prevProps.style)?.opacity !==
-        // $FlowFixMe[underconstrained-implicit-instantiation]
         flattenStyle(this.props.style)?.opacity
     ) {
       this._opacityInactive(250);
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts b/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts
index e0146fc..aa5e14b 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts
@@ -40,7 +40,7 @@ export interface TouchableWithoutFeedbackProps
   extends TouchableWithoutFeedbackPropsIOS,
     TouchableWithoutFeedbackPropsAndroid,
     AccessibilityProps {
-  children?: React.ReactNode | undefined;
+  children?: React.ReactNode;
 
   /**
    * Delay in ms, from onPressIn, before onLongPress is called.
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js
index 7c029ed..364fc52 100755
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js
@@ -121,8 +121,8 @@ class TouchableWithoutFeedback extends React.Component<Props, State> {
   };
 
   render(): React.Node {
-    const element = React.Children.only<$FlowFixMe>(this.props.children);
-    const children: Array<React.Node> = [element.props.children];
+    const element = React.Children.only(this.props.children);
+    const children = [element.props.children];
     const ariaLive = this.props['aria-live'];
 
     if (__DEV__) {
diff --git a/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlay.js b/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlay.js
deleted file mode 100644
index 5444d52..0000000
--- a/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlay.js
+++ /dev/null
@@ -1,179 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict-local
- * @format
- */
-
-import type {Overlay} from './TraceUpdateOverlayNativeComponent';
-
-import UIManager from '../../ReactNative/UIManager';
-import processColor from '../../StyleSheet/processColor';
-import StyleSheet from '../../StyleSheet/StyleSheet';
-import Platform from '../../Utilities/Platform';
-import View from '../View/View';
-import TraceUpdateOverlayNativeComponent, {
-  Commands,
-} from './TraceUpdateOverlayNativeComponent';
-import * as React from 'react';
-
-type AgentEvents = {
-  drawTraceUpdates: [Array<{node: TraceNode, color: string}>],
-  disableTraceUpdates: [],
-};
-
-interface Agent {
-  addListener<Event: $Keys<AgentEvents>>(
-    event: Event,
-    listener: (...AgentEvents[Event]) => void,
-  ): void;
-  removeListener(event: $Keys<AgentEvents>, listener: () => void): void;
-}
-
-type TraceNode = {
-  publicInstance?: TraceNode,
-  // TODO: remove this field when syncing the new version of the renderer from React to React Native.
-  canonical?: TraceNode,
-  measure?: (
-    (
-      x: number,
-      y: number,
-      width: number,
-      height: number,
-      left: number,
-      top: number,
-    ) => void,
-  ) => void,
-};
-
-type ReactDevToolsGlobalHook = {
-  on: (eventName: string, (agent: Agent) => void) => void,
-  off: (eventName: string, (agent: Agent) => void) => void,
-  reactDevtoolsAgent: Agent,
-};
-
-const {useEffect, useRef, useState} = React;
-const hook: ReactDevToolsGlobalHook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
-const isNativeComponentReady =
-  Platform.OS === 'android' &&
-  UIManager.hasViewManagerConfig('TraceUpdateOverlay');
-let devToolsAgent: ?Agent;
-
-export default function TraceUpdateOverlay(): React.Node {
-  const [overlayDisabled, setOverlayDisabled] = useState(false);
-  // This effect is designed to be explicitly shown here to avoid re-subscribe from the same
-  // overlay component.
-  useEffect(() => {
-    if (!isNativeComponentReady) {
-      return;
-    }
-
-    function attachToDevtools(agent: Agent) {
-      devToolsAgent = agent;
-      agent.addListener('drawTraceUpdates', onAgentDrawTraceUpdates);
-      agent.addListener('disableTraceUpdates', onAgentDisableTraceUpdates);
-    }
-
-    function subscribe() {
-      hook?.on('react-devtools', attachToDevtools);
-      if (hook?.reactDevtoolsAgent) {
-        attachToDevtools(hook.reactDevtoolsAgent);
-      }
-    }
-
-    function unsubscribe() {
-      hook?.off('react-devtools', attachToDevtools);
-      const agent = devToolsAgent;
-      if (agent != null) {
-        agent.removeListener('drawTraceUpdates', onAgentDrawTraceUpdates);
-        agent.removeListener('disableTraceUpdates', onAgentDisableTraceUpdates);
-        devToolsAgent = null;
-      }
-    }
-
-    function onAgentDrawTraceUpdates(
-      nodesToDraw: Array<{node: TraceNode, color: string}> = [],
-    ) {
-      // If overlay is disabled before, now it's enabled.
-      setOverlayDisabled(false);
-
-      const newFramesToDraw: Array<Promise<Overlay>> = [];
-      nodesToDraw.forEach(({node, color}) => {
-        // `publicInstance` => Fabric
-        // TODO: remove this check when syncing the new version of the renderer from React to React Native.
-        // `canonical` => Legacy Fabric
-        // `node` => Legacy renderer
-        const component = node.publicInstance ?? node.canonical ?? node;
-        if (!component || !component.measure) {
-          return;
-        }
-        const frameToDrawPromise = new Promise<Overlay>(resolve => {
-          // The if statement here is to make flow happy
-          if (component.measure) {
-            // TODO(T145522797): We should refactor this to use `getBoundingClientRect` when Paper is no longer supported.
-            component.measure((x, y, width, height, left, top) => {
-              resolve({
-                rect: {left, top, width, height},
-                color: processColor(color),
-              });
-            });
-          }
-        });
-        newFramesToDraw.push(frameToDrawPromise);
-      });
-      Promise.all(newFramesToDraw).then(
-        results => {
-          if (nativeComponentRef.current != null) {
-            Commands.draw(
-              nativeComponentRef.current,
-              JSON.stringify(
-                results.filter(
-                  ({rect, color}) => rect.width >= 0 && rect.height >= 0,
-                ),
-              ),
-            );
-          }
-        },
-        err => {
-          console.error(`Failed to measure updated traces. Error: ${err}`);
-        },
-      );
-    }
-
-    function onAgentDisableTraceUpdates() {
-      // When trace updates are disabled from the backend, we won't receive draw events until it's enabled by the next draw. We can safely remove the overlay as it's not needed now.
-      setOverlayDisabled(true);
-    }
-
-    subscribe();
-    return unsubscribe;
-  }, []); // Only run once when the overlay initially rendered
-
-  const nativeComponentRef =
-    useRef<?React.ElementRef<typeof TraceUpdateOverlayNativeComponent>>(null);
-
-  return (
-    !overlayDisabled &&
-    isNativeComponentReady && (
-      <View pointerEvents="none" style={styles.overlay}>
-        <TraceUpdateOverlayNativeComponent
-          ref={nativeComponentRef}
-          style={styles.overlay}
-        />
-      </View>
-    )
-  );
-}
-
-const styles = StyleSheet.create({
-  overlay: {
-    position: 'absolute',
-    top: 0,
-    bottom: 0,
-    left: 0,
-    right: 0,
-  },
-});
diff --git a/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlayNativeComponent.js b/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlayNativeComponent.js
deleted file mode 100644
index 837223e..0000000
--- a/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlayNativeComponent.js
+++ /dev/null
@@ -1,43 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict-local
- * @format
- */
-
-import type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';
-import type {ProcessedColorValue} from '../../StyleSheet/processColor';
-import type {ViewProps} from '../View/ViewPropTypes';
-
-import codegenNativeCommands from '../../Utilities/codegenNativeCommands';
-import codegenNativeComponent from '../../Utilities/codegenNativeComponent';
-import * as React from 'react';
-
-type NativeProps = $ReadOnly<{|
-  ...ViewProps,
-|}>;
-export type TraceUpdateOverlayNativeComponentType = HostComponent<NativeProps>;
-export type Overlay = {
-  rect: {left: number, top: number, width: number, height: number},
-  color: ?ProcessedColorValue,
-};
-
-interface NativeCommands {
-  +draw: (
-    viewRef: React.ElementRef<TraceUpdateOverlayNativeComponentType>,
-    // TODO(T144046177): Ideally we can pass array of Overlay, but currently
-    // Array type is not supported in RN codegen for building native commands.
-    overlays: string,
-  ) => void;
-}
-
-export const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({
-  supportedCommands: ['draw'],
-});
-
-export default (codegenNativeComponent<NativeProps>(
-  'TraceUpdateOverlay',
-): HostComponent<NativeProps>);
diff --git a/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js b/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
index f44cc26..926c0c7 100644
--- a/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
+++ b/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
@@ -49,15 +49,9 @@ const ReactNativeStyleAttributes: {[string]: AnyAttributeType, ...} = {
   justifyContent: true,
   left: true,
   margin: true,
-  marginBlock: true,
-  marginBlockEnd: true,
-  marginBlockStart: true,
   marginBottom: true,
   marginEnd: true,
   marginHorizontal: true,
-  marginInline: true,
-  marginInlineEnd: true,
-  marginInlineStart: true,
   marginLeft: true,
   marginRight: true,
   marginStart: true,
@@ -69,15 +63,9 @@ const ReactNativeStyleAttributes: {[string]: AnyAttributeType, ...} = {
   minWidth: true,
   overflow: true,
   padding: true,
-  paddingBlock: true,
-  paddingBlockEnd: true,
-  paddingBlockStart: true,
   paddingBottom: true,
   paddingEnd: true,
   paddingHorizontal: true,
-  paddingInline: true,
-  paddingInlineEnd: true,
-  paddingInlineStart: true,
   paddingLeft: true,
   paddingRight: true,
   paddingStart: true,
@@ -110,9 +98,6 @@ const ReactNativeStyleAttributes: {[string]: AnyAttributeType, ...} = {
    */
   backfaceVisibility: true,
   backgroundColor: colorAttributes,
-  borderBlockColor: colorAttributes,
-  borderBlockEndColor: colorAttributes,
-  borderBlockStartColor: colorAttributes,
   borderBottomColor: colorAttributes,
   borderBottomEndRadius: true,
   borderBottomLeftRadius: true,
@@ -121,14 +106,10 @@ const ReactNativeStyleAttributes: {[string]: AnyAttributeType, ...} = {
   borderColor: colorAttributes,
   borderCurve: true,
   borderEndColor: colorAttributes,
-  borderEndEndRadius: true,
-  borderEndStartRadius: true,
   borderLeftColor: colorAttributes,
   borderRadius: true,
   borderRightColor: colorAttributes,
   borderStartColor: colorAttributes,
-  borderStartEndRadius: true,
-  borderStartStartRadius: true,
   borderStyle: true,
   borderTopColor: colorAttributes,
   borderTopEndRadius: true,
diff --git a/node_modules/react-native/Libraries/Components/View/View.js b/node_modules/react-native/Libraries/Components/View/View.js
index 0edf2e6..8654041 100644
--- a/node_modules/react-native/Libraries/Components/View/View.js
+++ b/node_modules/react-native/Libraries/Components/View/View.js
@@ -98,7 +98,6 @@ const View: React.AbstractComponent<
       };
     }
 
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     let style = flattenStyle(otherProps.style);
 
     const newPointerEvents = style?.pointerEvents || pointerEvents;
diff --git a/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts b/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts
index acb833e..b06d1cb 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts
+++ b/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts
@@ -75,10 +75,10 @@ export interface AccessibilityProps
    */
   accessibilityValue?: AccessibilityValue | undefined;
 
-  'aria-valuemax'?: AccessibilityValue['max'] | undefined;
-  'aria-valuemin'?: AccessibilityValue['min'] | undefined;
-  'aria-valuenow'?: AccessibilityValue['now'] | undefined;
-  'aria-valuetext'?: AccessibilityValue['text'] | undefined;
+  'aria-valuemax'?: AccessibilityValue['max'];
+  'aria-valuemin'?: AccessibilityValue['min'];
+  'aria-valuenow'?: AccessibilityValue['now'];
+  'aria-valuetext'?: AccessibilityValue['text'];
   /**
    * When `accessible` is true, the system will try to invoke this function when the user performs an accessibility custom action.
    */
@@ -105,7 +105,7 @@ export interface AccessibilityProps
   /**
    * Indicates to accessibility services to treat UI component like a specific role.
    */
-  role?: Role | undefined;
+  role?: Role;
 }
 
 export type AccessibilityActionInfo = Readonly<{
@@ -274,7 +274,7 @@ export interface AccessibilityPropsIOS {
   accessibilityViewIsModal?: boolean | undefined;
 
   /**
-   * When accessible is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).
+   * When accessibile is true, the system will invoke this function when the user performs the escape gesture (scrub with two fingers).
    * @platform ios
    */
   onAccessibilityEscape?: (() => void) | undefined;
diff --git a/node_modules/react-native/Libraries/Components/View/ViewAccessibility.js b/node_modules/react-native/Libraries/Components/View/ViewAccessibility.js
index 18da75e..c62be02 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewAccessibility.js
+++ b/node_modules/react-native/Libraries/Components/View/ViewAccessibility.js
@@ -16,7 +16,6 @@ import type {SyntheticEvent} from '../../Types/CoreEventTypes';
 export type AccessibilityRole =
   | 'none'
   | 'button'
-  | 'dropdownlist'
   | 'togglebutton'
   | 'link'
   | 'search'
@@ -45,15 +44,7 @@ export type AccessibilityRole =
   | 'timer'
   | 'list'
   | 'toolbar'
-  | 'grid'
-  | 'pager'
-  | 'scrollview'
-  | 'horizontalscrollview'
-  | 'viewgroup'
-  | 'webview'
-  | 'drawerlayout'
-  | 'slidingdrawer'
-  | 'iconmenu';
+  | 'grid';
 
 // Role types for web
 export type Role =
diff --git a/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js b/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js
index d8052fb..7f41843 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js
+++ b/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js
@@ -45,10 +45,7 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig =
           borderTopEndRadius: true,
           borderBottomStartRadius: true,
           borderBottomEndRadius: true,
-          borderEndEndRadius: true,
-          borderEndStartRadius: true,
-          borderStartEndRadius: true,
-          borderStartStartRadius: true,
+
           borderStyle: true,
           hitSlop: true,
           pointerEvents: true,
@@ -64,36 +61,15 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig =
           borderStartWidth: true,
           borderEndWidth: true,
 
-          borderColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderLeftColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderRightColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderTopColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
+          borderColor: {process: require('../../StyleSheet/processColor')},
+          borderLeftColor: {process: require('../../StyleSheet/processColor')},
+          borderRightColor: {process: require('../../StyleSheet/processColor')},
+          borderTopColor: {process: require('../../StyleSheet/processColor')},
           borderBottomColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderStartColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderEndColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderBlockColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderBlockEndColor: {
-            process: require('../../StyleSheet/processColor').default,
-          },
-          borderBlockStartColor: {
-            process: require('../../StyleSheet/processColor').default,
+            process: require('../../StyleSheet/processColor'),
           },
+          borderStartColor: {process: require('../../StyleSheet/processColor')},
+          borderEndColor: {process: require('../../StyleSheet/processColor')},
 
           focusable: true,
           overflow: true,
diff --git a/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts b/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts
index 53f5e82..b7da46f 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts
+++ b/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts
@@ -173,7 +173,7 @@ export interface ViewProps
     Touchable,
     PointerEvents,
     AccessibilityProps {
-  children?: React.ReactNode | undefined;
+  children?: React.ReactNode;
   /**
    * This defines how far a touch event can start away from the view.
    * Typical interface guidelines recommend touch targets that are at least
diff --git a/node_modules/react-native/Libraries/Components/View/ViewPropTypes.js b/node_modules/react-native/Libraries/Components/View/ViewPropTypes.js
index e96654a..2330f45 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewPropTypes.js
+++ b/node_modules/react-native/Libraries/Components/View/ViewPropTypes.js
@@ -543,7 +543,7 @@ export type ViewProps = $ReadOnly<{|
   'aria-hidden'?: ?boolean,
 
   /**
-   * It represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.
+   * It reperesents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.
    *
    * @platform android
    */
diff --git a/node_modules/react-native/Libraries/Core/Devtools/openFileInEditor.js b/node_modules/react-native/Libraries/Core/Devtools/openFileInEditor.js
index 4dd8dc0..c9eb343 100644
--- a/node_modules/react-native/Libraries/Core/Devtools/openFileInEditor.js
+++ b/node_modules/react-native/Libraries/Core/Devtools/openFileInEditor.js
@@ -13,7 +13,6 @@
 const getDevServer = require('./getDevServer');
 
 function openFileInEditor(file: string, lineNumber: number) {
-  // $FlowFixMe[unused-promise]
   fetch(getDevServer().url + 'open-stack-frame', {
     method: 'POST',
     headers: {
diff --git a/node_modules/react-native/Libraries/Core/Devtools/openURLInBrowser.js b/node_modules/react-native/Libraries/Core/Devtools/openURLInBrowser.js
index 66f8ccb..986fa5d 100644
--- a/node_modules/react-native/Libraries/Core/Devtools/openURLInBrowser.js
+++ b/node_modules/react-native/Libraries/Core/Devtools/openURLInBrowser.js
@@ -13,7 +13,6 @@
 const getDevServer = require('./getDevServer');
 
 function openURLInBrowser(url: string) {
-  // $FlowFixMe[unused-promise]
   fetch(getDevServer().url + 'open-url', {
     method: 'POST',
     body: JSON.stringify({url}),
diff --git a/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js b/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js
index 9b84537..c85ddf0 100644
--- a/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js
+++ b/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js
@@ -22,7 +22,7 @@ function convertHermesStack(stack: HermesParsedStack): Array<StackFrame> {
       continue;
     }
     const {location, functionName} = entry;
-    if (location.type === 'NATIVE' || location.type === 'INTERNAL_BYTECODE') {
+    if (location.type === 'NATIVE') {
       continue;
     }
     frames.push({
@@ -48,7 +48,7 @@ function parseErrorStack(errorStack?: string): Array<StackFrame> {
     ? errorStack
     : global.HermesInternal
     ? convertHermesStack(parseHermesStack(errorStack))
-    : stacktraceParser.parse(errorStack).map((frame): StackFrame => ({
+    : stacktraceParser.parse(errorStack).map(frame => ({
         ...frame,
         column: frame.column != null ? frame.column - 1 : null,
       }));
diff --git a/node_modules/react-native/Libraries/Core/Devtools/parseHermesStack.js b/node_modules/react-native/Libraries/Core/Devtools/parseHermesStack.js
index 1193afd..6670cfd 100644
--- a/node_modules/react-native/Libraries/Core/Devtools/parseHermesStack.js
+++ b/node_modules/react-native/Libraries/Core/Devtools/parseHermesStack.js
@@ -10,54 +10,46 @@
 
 'use strict';
 
-type HermesStackLocationNative = $ReadOnly<{
-  type: 'NATIVE',
-}>;
+type HermesStackLocationNative = {|
+  +type: 'NATIVE',
+|};
 
-type HermesStackLocationSource = $ReadOnly<{
-  type: 'SOURCE',
-  sourceUrl: string,
-  line1Based: number,
-  column1Based: number,
-}>;
+type HermesStackLocationSource = {|
+  +type: 'SOURCE',
+  +sourceUrl: string,
+  +line1Based: number,
+  +column1Based: number,
+|};
 
-type HermesStackLocationInternalBytecode = $ReadOnly<{
-  type: 'INTERNAL_BYTECODE',
-  sourceUrl: string,
-  line1Based: number,
-  virtualOffset0Based: number,
-}>;
-
-type HermesStackLocationBytecode = $ReadOnly<{
-  type: 'BYTECODE',
-  sourceUrl: string,
-  line1Based: number,
-  virtualOffset0Based: number,
-}>;
+type HermesStackLocationBytecode = {|
+  +type: 'BYTECODE',
+  +sourceUrl: string,
+  +line1Based: number,
+  +virtualOffset0Based: number,
+|};
 
 type HermesStackLocation =
   | HermesStackLocationNative
   | HermesStackLocationSource
-  | HermesStackLocationInternalBytecode
   | HermesStackLocationBytecode;
 
-type HermesStackEntryFrame = $ReadOnly<{
-  type: 'FRAME',
-  location: HermesStackLocation,
-  functionName: string,
-}>;
+type HermesStackEntryFrame = {|
+  +type: 'FRAME',
+  +location: HermesStackLocation,
+  +functionName: string,
+|};
 
-type HermesStackEntrySkipped = $ReadOnly<{
-  type: 'SKIPPED',
-  count: number,
-}>;
+type HermesStackEntrySkipped = {|
+  +type: 'SKIPPED',
+  +count: number,
+|};
 
 type HermesStackEntry = HermesStackEntryFrame | HermesStackEntrySkipped;
 
-export type HermesParsedStack = $ReadOnly<{
-  message: string,
-  entries: $ReadOnlyArray<HermesStackEntry>,
-}>;
+export type HermesParsedStack = {|
+  +message: string,
+  +entries: $ReadOnlyArray<HermesStackEntry>,
+|};
 
 // Capturing groups:
 // 1. function name
@@ -73,11 +65,6 @@ const RE_FRAME =
 // 1. count of skipped frames
 const RE_SKIPPED = /^ {4}... skipping (\d+) frames$/;
 
-function isInternalBytecodeSourceUrl(sourceUrl: string): boolean {
-  // See https://github.com/facebook/hermes/blob/3332fa020cae0bab751f648db7c94e1d687eeec7/lib/VM/Runtime.cpp#L1100
-  return sourceUrl === 'InternalBytecode.js';
-}
-
 function parseLine(line: string): ?HermesStackEntry {
   const asFrame = line.match(RE_FRAME);
   if (asFrame) {
@@ -88,19 +75,12 @@ function parseLine(line: string): ?HermesStackEntry {
         asFrame[2] === 'native'
           ? {type: 'NATIVE'}
           : asFrame[3] === 'address at '
-          ? isInternalBytecodeSourceUrl(asFrame[4])
-            ? {
-                type: 'INTERNAL_BYTECODE',
-                sourceUrl: asFrame[4],
-                line1Based: Number.parseInt(asFrame[5], 10),
-                virtualOffset0Based: Number.parseInt(asFrame[6], 10),
-              }
-            : {
-                type: 'BYTECODE',
-                sourceUrl: asFrame[4],
-                line1Based: Number.parseInt(asFrame[5], 10),
-                virtualOffset0Based: Number.parseInt(asFrame[6], 10),
-              }
+          ? {
+              type: 'BYTECODE',
+              sourceUrl: asFrame[4],
+              line1Based: Number.parseInt(asFrame[5], 10),
+              virtualOffset0Based: Number.parseInt(asFrame[6], 10),
+            }
           : {
               type: 'SOURCE',
               sourceUrl: asFrame[4],
diff --git a/node_modules/react-native/Libraries/Core/ExceptionsManager.js b/node_modules/react-native/Libraries/Core/ExceptionsManager.js
index 83cd7f6..4616569 100644
--- a/node_modules/react-native/Libraries/Core/ExceptionsManager.js
+++ b/node_modules/react-native/Libraries/Core/ExceptionsManager.js
@@ -103,7 +103,7 @@ function reportException(
   }
 
   if (__DEV__) {
-    const LogBox = require('../LogBox/LogBox').default;
+    const LogBox = require('../LogBox/LogBox');
     LogBox.addException({
       ...data,
       isComponentError: !!e.isComponentError,
@@ -184,7 +184,7 @@ function reactConsoleErrorHandler(...args) {
     // Throwing an uncaught exception:
     // 1. exception thrown
     // 2. picked up by handleException
-    // 3. should be sent to console.error (not console._errorOriginal, as DevTools might have patched _later_ and it needs to send it to Metro)
+    // 3. should be send to console.error (not console._errorOriginal, as DevTools might have patched _later_ and it needs to send it to Metro)
     // 4. that _might_ bubble again to the `reactConsoleErrorHandle` defined here
     //    -> should not handle exception _again_, to avoid looping / showing twice (this code branch)
     // 5. should still bubble up to original console (which might either be console.log, or the DevTools handler in case that one patched _earlier_)
diff --git a/node_modules/react-native/Libraries/Core/InitializeCore.js b/node_modules/react-native/Libraries/Core/InitializeCore.js
index 25377f6..1379ffd 100644
--- a/node_modules/react-native/Libraries/Core/InitializeCore.js
+++ b/node_modules/react-native/Libraries/Core/InitializeCore.js
@@ -27,7 +27,6 @@
 const start = Date.now();
 
 require('./setUpGlobals');
-require('./setUpDOM');
 require('./setUpPerformance');
 require('./setUpErrorHandling');
 require('./polyfillPromise');
@@ -41,7 +40,7 @@ require('./setUpSegmentFetcher');
 if (__DEV__) {
   require('./checkNativeVersion');
   require('./setUpDeveloperTools');
-  require('../LogBox/LogBox').default.install();
+  require('../LogBox/LogBox').install();
 }
 
 require('../ReactNative/AppRegistry');
diff --git a/node_modules/react-native/Libraries/Core/ReactNativeVersion.js b/node_modules/react-native/Libraries/Core/ReactNativeVersion.js
index b58283d..42d00b3 100644
--- a/node_modules/react-native/Libraries/Core/ReactNativeVersion.js
+++ b/node_modules/react-native/Libraries/Core/ReactNativeVersion.js
@@ -11,7 +11,7 @@
 
 exports.version = {
   major: 0,
-  minor: 72,
-  patch: 3,
+  minor: 71,
+  patch: 12,
   prerelease: null,
 };
diff --git a/node_modules/react-native/Libraries/Core/ReactNativeVersionCheck.js b/node_modules/react-native/Libraries/Core/ReactNativeVersionCheck.js
index dacca44..19f639a 100644
--- a/node_modules/react-native/Libraries/Core/ReactNativeVersionCheck.js
+++ b/node_modules/react-native/Libraries/Core/ReactNativeVersionCheck.js
@@ -39,12 +39,16 @@ exports.checkVersions = function checkVersions(): void {
   }
 };
 
-// Note: in OSS, the prerelease version is usually 0.Y.0-rc.W, so it is a string and not a number
-// Then we need to keep supporting that object shape.
 function _formatVersion(
   version:
-    | (typeof Platform)['constants']['reactNativeVersion']
-    | {major: number, minor: number, patch: number, prerelease: ?string},
+    | {major: number, minor: number, patch: number, prerelease: ?number}
+    | {major: number, minor: number, patch: number, prerelease: ?string}
+    | $TEMPORARY$object<{
+        major: number,
+        minor: number,
+        patch: number,
+        prerelease: null,
+      }>,
 ): string {
   return (
     `${version.major}.${version.minor}.${version.patch}` +
diff --git a/node_modules/react-native/Libraries/Core/Timers/JSTimers.js b/node_modules/react-native/Libraries/Core/Timers/JSTimers.js
index f996f9c..33f8a68 100644
--- a/node_modules/react-native/Libraries/Core/Timers/JSTimers.js
+++ b/node_modules/react-native/Libraries/Core/Timers/JSTimers.js
@@ -379,7 +379,7 @@ const JSTimers = {
 
   callIdleCallbacks: function (frameTime: number) {
     if (
-      FRAME_DURATION - (Date.now() - frameTime) <
+      FRAME_DURATION - (global.performance.now() - frameTime) <
       IDLE_CALLBACK_FRAME_DEADLINE
     ) {
       return;
diff --git a/node_modules/react-native/Libraries/Core/Timers/immediateShim.js b/node_modules/react-native/Libraries/Core/Timers/immediateShim.js
index 29af6e5..43915d6 100644
--- a/node_modules/react-native/Libraries/Core/Timers/immediateShim.js
+++ b/node_modules/react-native/Libraries/Core/Timers/immediateShim.js
@@ -40,7 +40,6 @@ function setImmediate(callback: Function, ...args: any): number {
     clearedImmediates.delete(id);
   }
 
-  // $FlowFixMe[incompatible-call]
   global.queueMicrotask(() => {
     if (!clearedImmediates.has(id)) {
       callback.apply(undefined, args);
diff --git a/node_modules/react-native/Libraries/Core/Timers/queueMicrotask.js b/node_modules/react-native/Libraries/Core/Timers/queueMicrotask.js
index 5cb8529..7c33d9f 100644
--- a/node_modules/react-native/Libraries/Core/Timers/queueMicrotask.js
+++ b/node_modules/react-native/Libraries/Core/Timers/queueMicrotask.js
@@ -13,7 +13,7 @@
 let resolvedPromise;
 
 /**
- * Polyfill for the microtask queueing API defined by WHATWG HTML spec.
+ * Polyfill for the microtask queuening API defined by WHATWG HTMP spec.
  * https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask
  *
  * The method must queue a microtask to invoke @param {function} callback, and
diff --git a/node_modules/react-native/Libraries/Core/setUpAlert.js b/node_modules/react-native/Libraries/Core/setUpAlert.js
index 777f7f8..85bf358 100644
--- a/node_modules/react-native/Libraries/Core/setUpAlert.js
+++ b/node_modules/react-native/Libraries/Core/setUpAlert.js
@@ -15,7 +15,7 @@
  * You can use this module directly, or just require InitializeCore.
  */
 if (!global.alert) {
-  global.alert = function (text: string) {
+  global.alert = function (text) {
     // Require Alert on demand. Requiring it too early can lead to issues
     // with things like Platform not being fully initialized.
     require('../Alert/Alert').alert('Alert', '' + text);
diff --git a/node_modules/react-native/Libraries/Core/setUpDOM.js b/node_modules/react-native/Libraries/Core/setUpDOM.js
deleted file mode 100644
index e25aa01..0000000
--- a/node_modules/react-native/Libraries/Core/setUpDOM.js
+++ /dev/null
@@ -1,18 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-import DOMRect from '../DOM/Geometry/DOMRect';
-import DOMRectReadOnly from '../DOM/Geometry/DOMRectReadOnly';
-
-// $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it
-global.DOMRect = DOMRect;
-
-// $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it
-global.DOMRectReadOnly = DOMRectReadOnly;
diff --git a/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js b/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js
index 4247d3b..06f2079 100644
--- a/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js
+++ b/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js
@@ -56,7 +56,7 @@ if (__DEV__) {
         'debug',
       ].forEach(level => {
         const originalFunction = console[level];
-        console[level] = function (...args: $ReadOnlyArray<mixed>) {
+        console[level] = function (...args) {
           HMRClient.log(level, args);
           originalFunction.apply(console, args);
         };
diff --git a/node_modules/react-native/Libraries/Core/setUpGlobals.js b/node_modules/react-native/Libraries/Core/setUpGlobals.js
index 8ddff03..4d74080 100644
--- a/node_modules/react-native/Libraries/Core/setUpGlobals.js
+++ b/node_modules/react-native/Libraries/Core/setUpGlobals.js
@@ -15,21 +15,18 @@
  * You can use this module directly, or just require InitializeCore.
  */
 if (global.window === undefined) {
-  // $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it.
+  // $FlowFixMe[cannot-write]
   global.window = global;
 }
 
 if (global.self === undefined) {
-  // $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it.
+  // $FlowFixMe[cannot-write]
   global.self = global;
 }
 
 // Set up process
-// $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it.
 global.process = global.process || {};
-// $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it.
 global.process.env = global.process.env || {};
 if (!global.process.env.NODE_ENV) {
-  // $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it.
   global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';
 }
diff --git a/node_modules/react-native/Libraries/Core/setUpNavigator.js b/node_modules/react-native/Libraries/Core/setUpNavigator.js
index bcf2cbd..1dbe429 100644
--- a/node_modules/react-native/Libraries/Core/setUpNavigator.js
+++ b/node_modules/react-native/Libraries/Core/setUpNavigator.js
@@ -12,11 +12,10 @@
 
 const {polyfillObjectProperty} = require('../Utilities/PolyfillFunctions');
 
-const navigator = global.navigator;
+let navigator = global.navigator;
 if (navigator === undefined) {
-  // $FlowExpectedError[cannot-write] The global isn't writable anywhere but here, where we define it.
-  global.navigator = {product: 'ReactNative'};
-} else {
-  // see https://github.com/facebook/react-native/issues/10881
-  polyfillObjectProperty(navigator, 'product', () => 'ReactNative');
+  global.navigator = navigator = {};
 }
+
+// see https://github.com/facebook/react-native/issues/10881
+polyfillObjectProperty(navigator, 'product', () => 'ReactNative');
diff --git a/node_modules/react-native/Libraries/Core/setUpPerformance.js b/node_modules/react-native/Libraries/Core/setUpPerformance.js
index c5f2589..6d59a86 100644
--- a/node_modules/react-native/Libraries/Core/setUpPerformance.js
+++ b/node_modules/react-native/Libraries/Core/setUpPerformance.js
@@ -8,29 +8,19 @@
  * @format
  */
 
-import NativePerformance from '../WebPerformance/NativePerformance';
-import Performance from '../WebPerformance/Performance';
+'use strict';
 
-// In case if the native implementation of the Performance API is available, use it,
-// otherwise fall back to the legacy/default one, which only defines 'Performance.now()'
-if (NativePerformance) {
-  // $FlowExpectedError[cannot-write]
-  global.performance = new Performance();
-} else {
-  if (!global.performance) {
-    // $FlowExpectedError[cannot-write]
-    global.performance = ({}: {now?: () => number});
-  }
+if (!global.performance) {
+  global.performance = ({}: {now?: () => number});
+}
 
-  /**
-   * Returns a double, measured in milliseconds.
-   * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now
-   */
-  if (typeof global.performance.now !== 'function') {
-    // $FlowExpectedError[cannot-write]
-    global.performance.now = function () {
-      const performanceNow = global.nativePerformanceNow || Date.now;
-      return performanceNow();
-    };
-  }
+/**
+ * Returns a double, measured in milliseconds.
+ * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now
+ */
+if (typeof global.performance.now !== 'function') {
+  global.performance.now = function () {
+    const performanceNow = global.nativePerformanceNow || Date.now;
+    return performanceNow();
+  };
 }
diff --git a/node_modules/react-native/Libraries/Core/setUpReactDevTools.js b/node_modules/react-native/Libraries/Core/setUpReactDevTools.js
index ecdd14a..be647e3 100644
--- a/node_modules/react-native/Libraries/Core/setUpReactDevTools.js
+++ b/node_modules/react-native/Libraries/Core/setUpReactDevTools.js
@@ -62,7 +62,6 @@ if (__DEV__) {
       });
 
       const ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');
-      const devToolsSettingsManager = require('../DevToolsSettings/DevToolsSettingsManager');
 
       reactDevTools.connectToDevTools({
         isAppActive,
@@ -71,7 +70,6 @@ if (__DEV__) {
           ReactNativeStyleAttributes,
         ),
         websocket: ws,
-        devToolsSettingsManager,
       });
     }
   };
diff --git a/node_modules/react-native/Libraries/Core/setUpSegmentFetcher.js b/node_modules/react-native/Libraries/Core/setUpSegmentFetcher.js
index 2a7115c..05ec6c1 100644
--- a/node_modules/react-native/Libraries/Core/setUpSegmentFetcher.js
+++ b/node_modules/react-native/Libraries/Core/setUpSegmentFetcher.js
@@ -11,6 +11,7 @@
 'use strict';
 
 export type FetchSegmentFunction = typeof __fetchSegment;
+export type GetSegmentFunction = typeof __getSegment;
 
 /**
  * Set up SegmentFetcher.
@@ -50,3 +51,43 @@ function __fetchSegment(
 }
 
 global.__fetchSegment = __fetchSegment;
+
+function __getSegment(
+  segmentId: number,
+  options: $ReadOnly<{
+    otaBuildNumber: ?string,
+    requestedModuleName: string,
+    segmentHash: string,
+  }>,
+  callback: (?Error, ?string) => void,
+) {
+  const SegmentFetcher =
+    require('./SegmentFetcher/NativeSegmentFetcher').default;
+
+  if (!SegmentFetcher.getSegment) {
+    throw new Error('SegmentFetcher.getSegment must be defined');
+  }
+
+  SegmentFetcher.getSegment(
+    segmentId,
+    options,
+    (
+      errorObject: ?{
+        message: string,
+        code: string,
+        ...
+      },
+      path: ?string,
+    ) => {
+      if (errorObject) {
+        const error = new Error(errorObject.message);
+        (error: any).code = errorObject.code; // flowlint-line unclear-type: off
+        callback(error);
+      }
+
+      callback(null, path);
+    },
+  );
+}
+
+global.__getSegment = __getSegment;
diff --git a/node_modules/react-native/Libraries/Core/setUpTimers.js b/node_modules/react-native/Libraries/Core/setUpTimers.js
index 86d7386..b2b036f 100644
--- a/node_modules/react-native/Libraries/Core/setUpTimers.js
+++ b/node_modules/react-native/Libraries/Core/setUpTimers.js
@@ -61,7 +61,7 @@ if (global.RN$Bridgeless !== true) {
  * as the Promise.
  */
 if (hasPromiseQueuedToJSVM) {
-  // When promise queues to the JSVM microtasks queue, we shim the immediate
+  // When promise queues to the JSVM microtasks queue, we shim the immedaite
   // APIs via `queueMicrotask` to maintain the backward compatibility.
   polyfillGlobal(
     'setImmediate',
@@ -95,7 +95,7 @@ if (hasHermesPromiseQueuedToJSVM) {
   // Fast path for Hermes.
   polyfillGlobal('queueMicrotask', () => global.HermesInternal?.enqueueJob);
 } else {
-  // Polyfill it with promise (regardless it's polyfilled or native) otherwise.
+  // Polyfill it with promise (regardless it's polyfiled or native) otherwise.
   polyfillGlobal(
     'queueMicrotask',
     () => require('./Timers/queueMicrotask.js').default,
diff --git a/node_modules/react-native/Libraries/DOM/Geometry/DOMRect.js b/node_modules/react-native/Libraries/DOM/Geometry/DOMRect.js
deleted file mode 100644
index 07af232..0000000
--- a/node_modules/react-native/Libraries/DOM/Geometry/DOMRect.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-/**
- * The JSDoc comments in this file have been extracted from [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).
- * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect/contributors.txt),
- * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).
- */
-
-import DOMRectReadOnly, {type DOMRectLike} from './DOMRectReadOnly';
-
-// flowlint unsafe-getters-setters:off
-
-/**
- * A `DOMRect` describes the size and position of a rectangle.
- * The type of box represented by the `DOMRect` is specified by the method or property that returned it.
- *
- * This is a (mostly) spec-compliant version of `DOMRect` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).
- */
-export default class DOMRect extends DOMRectReadOnly {
-  /**
-   * The x coordinate of the `DOMRect`'s origin.
-   */
-  get x(): number {
-    return this.__getInternalX();
-  }
-
-  set x(x: ?number) {
-    this.__setInternalX(x);
-  }
-
-  /**
-   * The y coordinate of the `DOMRect`'s origin.
-   */
-  get y(): number {
-    return this.__getInternalY();
-  }
-
-  set y(y: ?number) {
-    this.__setInternalY(y);
-  }
-
-  /**
-   * The width of the `DOMRect`.
-   */
-  get width(): number {
-    return this.__getInternalWidth();
-  }
-
-  set width(width: ?number) {
-    this.__setInternalWidth(width);
-  }
-
-  /**
-   * The height of the `DOMRect`.
-   */
-  get height(): number {
-    return this.__getInternalHeight();
-  }
-
-  set height(height: ?number) {
-    this.__setInternalHeight(height);
-  }
-
-  /**
-   * Creates a new `DOMRect` object with a given location and dimensions.
-   */
-  static fromRect(rect?: ?DOMRectLike): DOMRect {
-    if (!rect) {
-      return new DOMRect();
-    }
-
-    return new DOMRect(rect.x, rect.y, rect.width, rect.height);
-  }
-}
diff --git a/node_modules/react-native/Libraries/DOM/Geometry/DOMRectReadOnly.js b/node_modules/react-native/Libraries/DOM/Geometry/DOMRectReadOnly.js
deleted file mode 100644
index ce5df67..0000000
--- a/node_modules/react-native/Libraries/DOM/Geometry/DOMRectReadOnly.js
+++ /dev/null
@@ -1,188 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-/**
- * The JSDoc comments in this file have been extracted from [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).
- * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/contributors.txt),
- * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).
- */
-
-// flowlint sketchy-null:off, unsafe-getters-setters:off
-
-export interface DOMRectLike {
-  x?: ?number;
-  y?: ?number;
-  width?: ?number;
-  height?: ?number;
-}
-
-function castToNumber(value: mixed): number {
-  return value ? Number(value) : 0;
-}
-
-/**
- * The `DOMRectReadOnly` interface specifies the standard properties used by `DOMRect` to define a rectangle whose properties are immutable.
- *
- * This is a (mostly) spec-compliant version of `DOMRectReadOnly` (https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).
- */
-export default class DOMRectReadOnly {
-  _x: number;
-  _y: number;
-  _width: number;
-  _height: number;
-
-  constructor(x: ?number, y: ?number, width: ?number, height: ?number) {
-    this.__setInternalX(x);
-    this.__setInternalY(y);
-    this.__setInternalWidth(width);
-    this.__setInternalHeight(height);
-  }
-
-  /**
-   * The x coordinate of the `DOMRectReadOnly`'s origin.
-   */
-  get x(): number {
-    return this._x;
-  }
-
-  /**
-   * The y coordinate of the `DOMRectReadOnly`'s origin.
-   */
-  get y(): number {
-    return this._y;
-  }
-
-  /**
-   * The width of the `DOMRectReadOnly`.
-   */
-  get width(): number {
-    return this._width;
-  }
-
-  /**
-   * The height of the `DOMRectReadOnly`.
-   */
-  get height(): number {
-    return this._height;
-  }
-
-  /**
-   * Returns the top coordinate value of the `DOMRect` (has the same value as `y`, or `y + height` if `height` is negative).
-   */
-  get top(): number {
-    const height = this._height;
-    const y = this._y;
-
-    if (height < 0) {
-      return y + height;
-    }
-
-    return y;
-  }
-
-  /**
-   * Returns the right coordinate value of the `DOMRect` (has the same value as ``x + width`, or `x` if `width` is negative).
-   */
-  get right(): number {
-    const width = this._width;
-    const x = this._x;
-
-    if (width < 0) {
-      return x;
-    }
-
-    return x + width;
-  }
-
-  /**
-   * Returns the bottom coordinate value of the `DOMRect` (has the same value as `y + height`, or `y` if `height` is negative).
-   */
-  get bottom(): number {
-    const height = this._height;
-    const y = this._y;
-
-    if (height < 0) {
-      return y;
-    }
-
-    return y + height;
-  }
-
-  /**
-   * Returns the left coordinate value of the `DOMRect` (has the same value as `x`, or `x + width` if `width` is negative).
-   */
-  get left(): number {
-    const width = this._width;
-    const x = this._x;
-
-    if (width < 0) {
-      return x + width;
-    }
-
-    return x;
-  }
-
-  toJSON(): {
-    x: number,
-    y: number,
-    width: number,
-    height: number,
-    top: number,
-    left: number,
-    bottom: number,
-    right: number,
-  } {
-    const {x, y, width, height, top, left, bottom, right} = this;
-    return {x, y, width, height, top, left, bottom, right};
-  }
-
-  /**
-   * Creates a new `DOMRectReadOnly` object with a given location and dimensions.
-   */
-  static fromRect(rect?: ?DOMRectLike): DOMRectReadOnly {
-    if (!rect) {
-      return new DOMRectReadOnly();
-    }
-
-    return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);
-  }
-
-  __getInternalX(): number {
-    return this._x;
-  }
-
-  __getInternalY(): number {
-    return this._y;
-  }
-
-  __getInternalWidth(): number {
-    return this._width;
-  }
-
-  __getInternalHeight(): number {
-    return this._height;
-  }
-
-  __setInternalX(x: ?number) {
-    this._x = castToNumber(x);
-  }
-
-  __setInternalY(y: ?number) {
-    this._y = castToNumber(y);
-  }
-
-  __setInternalWidth(width: ?number) {
-    this._width = castToNumber(width);
-  }
-
-  __setInternalHeight(height: ?number) {
-    this._height = castToNumber(height);
-  }
-}
diff --git a/node_modules/react-native/Libraries/DOM/Nodes/ReactNativeElement.js b/node_modules/react-native/Libraries/DOM/Nodes/ReactNativeElement.js
deleted file mode 100644
index 1f9e9b7..0000000
--- a/node_modules/react-native/Libraries/DOM/Nodes/ReactNativeElement.js
+++ /dev/null
@@ -1,75 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type {
-  HostComponent,
-  MeasureInWindowOnSuccessCallback,
-  MeasureLayoutOnSuccessCallback,
-  MeasureOnSuccessCallback,
-} from '../../Renderer/shims/ReactNativeTypes';
-import type {ElementRef} from 'react';
-
-import ReadOnlyElement from './ReadOnlyElement';
-
-export default class ReactNativeElement extends ReadOnlyElement {
-  get offsetHeight(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get offsetLeft(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get offsetParent(): ReadOnlyElement | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get offsetTop(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get offsetWidth(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  /**
-   * React Native compatibility methods
-   */
-
-  blur(): void {
-    throw new TypeError('Unimplemented');
-  }
-
-  focus(): void {
-    throw new TypeError('Unimplemented');
-  }
-
-  measure(callback: MeasureOnSuccessCallback): void {
-    throw new TypeError('Unimplemented');
-  }
-
-  measureInWindow(callback: MeasureInWindowOnSuccessCallback): void {
-    throw new TypeError('Unimplemented');
-  }
-
-  measureLayout(
-    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,
-    onSuccess: MeasureLayoutOnSuccessCallback,
-    onFail?: () => void /* currently unused */,
-  ): void {
-    throw new TypeError('Unimplemented');
-  }
-
-  setNativeProps(nativeProps: {...}): void {
-    throw new TypeError('Unimplemented');
-  }
-}
diff --git a/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyElement.js b/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyElement.js
deleted file mode 100644
index 1307ba5..0000000
--- a/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyElement.js
+++ /dev/null
@@ -1,89 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type HTMLCollection from '../OldStyleCollections/HTMLCollection';
-
-import ReadOnlyNode from './ReadOnlyNode';
-
-export default class ReadOnlyElement extends ReadOnlyNode {
-  get childElementCount(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get children(): HTMLCollection<ReadOnlyElement> {
-    throw new TypeError('Unimplemented');
-  }
-
-  get clientHeight(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get clientLeft(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get clientTop(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get clientWidth(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get firstElementChild(): ReadOnlyElement | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get id(): string {
-    throw new TypeError('Unimplemented');
-  }
-
-  get lastElementChild(): ReadOnlyElement | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get nextElementSibling(): ReadOnlyElement | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get previousElementSibling(): ReadOnlyElement | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get scrollHeight(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get scrollLeft(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get scrollTop(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get scrollWidth(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get tagName(): string {
-    throw new TypeError('Unimplemented');
-  }
-
-  getBoundingClientRect(): DOMRect {
-    throw new TypeError('Unimplemented');
-  }
-
-  getClientRects(): DOMRectList {
-    throw new TypeError('Unimplemented');
-  }
-}
diff --git a/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyNode.js b/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyNode.js
deleted file mode 100644
index d6cc6b8..0000000
--- a/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyNode.js
+++ /dev/null
@@ -1,167 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type NodeList from '../OldStyleCollections/NodeList';
-import type ReadOnlyElement from './ReadOnlyElement';
-
-export default class ReadOnlyNode {
-  get childNodes(): NodeList<ReadOnlyNode> {
-    throw new TypeError('Unimplemented');
-  }
-
-  get firstChild(): ReadOnlyNode | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get isConnected(): boolean {
-    throw new TypeError('Unimplemented');
-  }
-
-  get lastChild(): ReadOnlyNode | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get nextSibling(): ReadOnlyNode | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get nodeName(): string {
-    throw new TypeError('Unimplemented');
-  }
-
-  get nodeType(): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  get nodeValue(): string | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get parentElement(): ReadOnlyElement | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get parentNode(): ReadOnlyNode | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get previousSibling(): ReadOnlyNode | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  get textContent(): string | null {
-    throw new TypeError('Unimplemented');
-  }
-
-  compareDocumentPosition(otherNode: ReadOnlyNode): number {
-    throw new TypeError('Unimplemented');
-  }
-
-  contains(otherNode: ReadOnlyNode): boolean {
-    throw new TypeError('Unimplemented');
-  }
-
-  getRootNode(): ReadOnlyNode {
-    throw new TypeError('Unimplemented');
-  }
-
-  hasChildNodes(): boolean {
-    throw new TypeError('Unimplemented');
-  }
-
-  /*
-   * Node types, as returned by the `nodeType` property.
-   */
-
-  /**
-   * Type of Element, HTMLElement and ReactNativeElement instances.
-   */
-  static ELEMENT_NODE: number = 1;
-  /**
-   * Currently Unused in React Native.
-   */
-  static ATTRIBUTE_NODE: number = 2;
-  /**
-   * Text nodes.
-   */
-  static TEXT_NODE: number = 3;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static CDATA_SECTION_NODE: number = 4;
-  /**
-   * @deprecated
-   */
-  static ENTITY_REFERENCE_NODE: number = 5;
-  /**
-   * @deprecated
-   */
-  static ENTITY_NODE: number = 6;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static PROCESSING_INSTRUCTION_NODE: number = 7;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static COMMENT_NODE: number = 8;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static DOCUMENT_NODE: number = 9;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static DOCUMENT_TYPE_NODE: number = 10;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static DOCUMENT_FRAGMENT_NODE: number = 11;
-  /**
-   * @deprecated
-   */
-  static NOTATION_NODE: number = 12;
-
-  /*
-   * Document position flags. Used to check the return value of
-   * `compareDocumentPosition()`.
-   */
-
-  /**
-   * Both nodes are in different documents.
-   */
-  static DOCUMENT_POSITION_DISCONNECTED: number = 1;
-  /**
-   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both
-   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)
-   * or (if they are disconnected) in an arbitrary but consistent ordering.
-   */
-  static DOCUMENT_POSITION_PRECEDING: number = 2;
-  /**
-   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both
-   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)
-   * or (if they are disconnected) in an arbitrary but consistent ordering.
-   */
-  static DOCUMENT_POSITION_FOLLOWING: number = 4;
-  /**
-   * `otherNode` is an ancestor of the node.
-   */
-  static DOCUMENT_POSITION_CONTAINS: number = 8;
-  /**
-   * `otherNode` is a descendant of the node.
-   */
-  static DOCUMENT_POSITION_CONTAINED_BY: number = 16;
-  /**
-   * @deprecated Unused in React Native.
-   */
-  static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number = 32;
-}
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/ArrayLikeUtils.js b/node_modules/react-native/Libraries/DOM/OldStyleCollections/ArrayLikeUtils.js
deleted file mode 100644
index d906b08..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/ArrayLikeUtils.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-/**
- * This definition is different from the current built-in type `$ArrayLike`
- * provided by Flow, in that this is an interface and that one is an object.
- *
- * The difference is important because, when using objects, Flow thinks
- * a `length` property would be copied over when using the spread operator,
- * which is incorrect.
- */
-export interface ArrayLike<T> extends Iterable<T> {
-  // This property should've been read-only as well, but Flow doesn't handle
-  // read-only indexers correctly (thinks reads are writes and fails).
-  [indexer: number]: T;
-  +length: number;
-}
-
-export function* createValueIterator<T>(arrayLike: ArrayLike<T>): Iterator<T> {
-  for (let i = 0; i < arrayLike.length; i++) {
-    yield arrayLike[i];
-  }
-}
-
-export function* createKeyIterator<T>(
-  arrayLike: ArrayLike<T>,
-): Iterator<number> {
-  for (let i = 0; i < arrayLike.length; i++) {
-    yield i;
-  }
-}
-
-export function* createEntriesIterator<T>(
-  arrayLike: ArrayLike<T>,
-): Iterator<[number, T]> {
-  for (let i = 0; i < arrayLike.length; i++) {
-    yield [i, arrayLike[i]];
-  }
-}
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/DOMRectList.js b/node_modules/react-native/Libraries/DOM/OldStyleCollections/DOMRectList.js
deleted file mode 100644
index 9365a9a..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/DOMRectList.js
+++ /dev/null
@@ -1,76 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type DOMRectReadOnly from '../Geometry/DOMRectReadOnly';
-import type {ArrayLike} from './ArrayLikeUtils';
-
-import {createValueIterator} from './ArrayLikeUtils';
-
-// IMPORTANT: The Flow type definition for this module is defined in `DOMRectList.js.flow`
-// because Flow only supports indexers in classes in declaration files.
-
-// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable interface.
-export default class DOMRectList implements Iterable<DOMRectReadOnly> {
-  _length: number;
-
-  /**
-   * Use `createDOMRectList` to create instances of this class.
-   *
-   * @private This is not defined in the declaration file, so users will not see
-   *          the signature of the constructor.
-   */
-  constructor(elements: $ReadOnlyArray<DOMRectReadOnly>) {
-    for (let i = 0; i < elements.length; i++) {
-      Object.defineProperty(this, i, {
-        value: elements[i],
-        enumerable: true,
-        configurable: false,
-        writable: false,
-      });
-    }
-
-    this._length = elements.length;
-  }
-
-  get length(): number {
-    return this._length;
-  }
-
-  item(index: number): DOMRectReadOnly | null {
-    if (index < 0 || index >= this._length) {
-      return null;
-    }
-
-    // assigning to the interface allows us to access the indexer property in a
-    // type-safe way.
-    // eslint-disable-next-line consistent-this
-    const arrayLike: ArrayLike<DOMRectReadOnly> = this;
-    return arrayLike[index];
-  }
-
-  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
-  [Symbol.iterator](): Iterator<DOMRectReadOnly> {
-    return createValueIterator(this);
-  }
-}
-
-/**
- * This is an internal method to create instances of `DOMRectList`,
- * which avoids leaking its constructor to end users.
- * We can do that because the external definition of `DOMRectList` lives in
- * `DOMRectList.js.flow`, not here.
- */
-export function createDOMRectList(
-  elements: $ReadOnlyArray<DOMRectReadOnly>,
-): DOMRectList {
-  return new DOMRectList(elements);
-}
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/DOMRectList.js.flow b/node_modules/react-native/Libraries/DOM/OldStyleCollections/DOMRectList.js.flow
deleted file mode 100644
index cb2cc26..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/DOMRectList.js.flow
+++ /dev/null
@@ -1,27 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-import type {ArrayLike} from './ArrayLikeUtils';
-import type DOMRectReadOnly from '../Geometry/DOMRectReadOnly';
-
-declare export default class DOMRectList
-  implements Iterable<DOMRectReadOnly>, ArrayLike<DOMRectReadOnly>
-{
-  // This property should've been read-only as well, but Flow doesn't handle
-  // read-only indexers correctly (thinks reads are writes and fails).
-  [index: number]: DOMRectReadOnly;
-  +length: number;
-  item(index: number): DOMRectReadOnly | null;
-  @@iterator(): Iterator<DOMRectReadOnly>;
-}
-
-declare export function createDOMRectList(
-  domRects: $ReadOnlyArray<DOMRectReadOnly>,
-): DOMRectList;
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/HTMLCollection.js b/node_modules/react-native/Libraries/DOM/OldStyleCollections/HTMLCollection.js
deleted file mode 100644
index 18cbd0a..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/HTMLCollection.js
+++ /dev/null
@@ -1,82 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type {ArrayLike} from './ArrayLikeUtils';
-
-import {createValueIterator} from './ArrayLikeUtils';
-
-// IMPORTANT: The type definition for this module is defined in `HTMLCollection.js.flow`
-// because Flow only supports indexers in classes in declaration files.
-
-// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.
-export default class HTMLCollection<T> implements Iterable<T>, ArrayLike<T> {
-  _length: number;
-
-  /**
-   * Use `createHTMLCollection` to create instances of this class.
-   *
-   * @private This is not defined in the declaration file, so users will not see
-   *          the signature of the constructor.
-   */
-  constructor(elements: $ReadOnlyArray<T>) {
-    for (let i = 0; i < elements.length; i++) {
-      Object.defineProperty(this, i, {
-        value: elements[i],
-        enumerable: true,
-        configurable: false,
-        writable: false,
-      });
-    }
-
-    this._length = elements.length;
-  }
-
-  get length(): number {
-    return this._length;
-  }
-
-  item(index: number): T | null {
-    if (index < 0 || index >= this._length) {
-      return null;
-    }
-
-    // assigning to the interface allows us to access the indexer property in a
-    // type-safe way.
-    // eslint-disable-next-line consistent-this
-    const arrayLike: ArrayLike<T> = this;
-    return arrayLike[index];
-  }
-
-  /**
-   * @deprecated Unused in React Native.
-   */
-  namedItem(name: string): T | null {
-    return null;
-  }
-
-  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
-  [Symbol.iterator](): Iterator<T> {
-    return createValueIterator(this);
-  }
-}
-
-/**
- * This is an internal method to create instances of `HTMLCollection`,
- * which avoids leaking its constructor to end users.
- * We can do that because the external definition of `HTMLCollection` lives in
- * `HTMLCollection.js.flow`, not here.
- */
-export function createHTMLCollection<T>(
-  elements: $ReadOnlyArray<T>,
-): HTMLCollection<T> {
-  return new HTMLCollection(elements);
-}
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/HTMLCollection.js.flow b/node_modules/react-native/Libraries/DOM/OldStyleCollections/HTMLCollection.js.flow
deleted file mode 100644
index 8f14d1d..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/HTMLCollection.js.flow
+++ /dev/null
@@ -1,27 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-import type {ArrayLike} from './ArrayLikeUtils';
-
-declare export default class HTMLCollection<+T>
-  implements Iterable<T>, ArrayLike<T>
-{
-  // This property should've been read-only as well, but Flow doesn't handle
-  // read-only indexers correctly (thinks reads are writes and fails).
-  [index: number]: T;
-  +length: number;
-  item(index: number): T | null;
-  namedItem(name: string): T | null;
-  @@iterator(): Iterator<T>;
-}
-
-declare export function createHTMLCollection<T>(
-  elements: $ReadOnlyArray<T>,
-): HTMLCollection<T>;
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/NodeList.js b/node_modules/react-native/Libraries/DOM/OldStyleCollections/NodeList.js
deleted file mode 100644
index 592919e..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/NodeList.js
+++ /dev/null
@@ -1,104 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type {ArrayLike} from './ArrayLikeUtils';
-
-import {
-  createEntriesIterator,
-  createKeyIterator,
-  createValueIterator,
-} from './ArrayLikeUtils';
-
-// IMPORTANT: The Flow type definition for this module is defined in `NodeList.js.flow`
-// because Flow only supports indexers in classes in declaration files.
-
-// $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.
-export default class NodeList<T> implements Iterable<T>, ArrayLike<T> {
-  _length: number;
-
-  /**
-   * Use `createNodeList` to create instances of this class.
-   *
-   * @private This is not defined in the declaration file, so users will not see
-   *          the signature of the constructor.
-   */
-  constructor(elements: $ReadOnlyArray<T>) {
-    for (let i = 0; i < elements.length; i++) {
-      Object.defineProperty(this, i, {
-        value: elements[i],
-        writable: false,
-      });
-    }
-    this._length = elements.length;
-  }
-
-  get length(): number {
-    return this._length;
-  }
-
-  item(index: number): T | null {
-    if (index < 0 || index >= this._length) {
-      return null;
-    }
-
-    // assigning to the interface allows us to access the indexer property in a
-    // type-safe way.
-    // eslint-disable-next-line consistent-this
-    const arrayLike: ArrayLike<T> = this;
-    return arrayLike[index];
-  }
-
-  entries(): Iterator<[number, T]> {
-    return createEntriesIterator(this);
-  }
-
-  forEach<ThisType>(
-    callbackFn: (value: T, index: number, array: NodeList<T>) => mixed,
-    thisArg?: ThisType,
-  ): void {
-    // assigning to the interface allows us to access the indexer property in a
-    // type-safe way.
-    // eslint-disable-next-line consistent-this
-    const arrayLike: ArrayLike<T> = this;
-
-    for (let index = 0; index < this._length; index++) {
-      if (thisArg == null) {
-        callbackFn(arrayLike[index], index, this);
-      } else {
-        callbackFn.call(thisArg, arrayLike[index], index, this);
-      }
-    }
-  }
-
-  keys(): Iterator<number> {
-    return createKeyIterator(this);
-  }
-
-  values(): Iterator<T> {
-    return createValueIterator(this);
-  }
-
-  // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
-  [Symbol.iterator](): Iterator<T> {
-    return createValueIterator(this);
-  }
-}
-
-/**
- * This is an internal method to create instances of `NodeList`,
- * which avoids leaking its constructor to end users.
- * We can do that because the external definition of `NodeList` lives in
- * `NodeList.js.flow`, not here.
- */
-export function createNodeList<T>(elements: $ReadOnlyArray<T>): NodeList<T> {
-  return new NodeList(elements);
-}
diff --git a/node_modules/react-native/Libraries/DOM/OldStyleCollections/NodeList.js.flow b/node_modules/react-native/Libraries/DOM/OldStyleCollections/NodeList.js.flow
deleted file mode 100644
index 89e02ee..0000000
--- a/node_modules/react-native/Libraries/DOM/OldStyleCollections/NodeList.js.flow
+++ /dev/null
@@ -1,31 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-import type {ArrayLike} from './ArrayLikeUtils';
-
-declare export default class NodeList<+T> implements Iterable<T>, ArrayLike<T> {
-  // This property should've been read-only as well, but Flow doesn't handle
-  // read-only indexers correctly (thinks reads are writes and fails).
-  [index: number]: T;
-  +length: number;
-  item(index: number): T | null;
-  entries(): Iterator<[number, T]>;
-  forEach<ThisType>(
-    callbackFn: (value: T, index: number, array: NodeList<T>) => mixed,
-    thisArg?: ThisType,
-  ): void;
-  keys(): Iterator<number>;
-  values(): Iterator<T>;
-  @@iterator(): Iterator<T>;
-}
-
-declare export function createNodeList<T>(
-  elements: $ReadOnlyArray<T>,
-): NodeList<T>;
diff --git a/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.android.js b/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.android.js
deleted file mode 100644
index f5399c4..0000000
--- a/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.android.js
+++ /dev/null
@@ -1,35 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict-local
- * @format
- */
-
-import DevSettings from '../Utilities/DevSettings';
-import NativeDevToolsSettingsManager from './NativeDevToolsSettingsManager';
-
-module.exports = {
-  setConsolePatchSettings(newSettings: string) {
-    NativeDevToolsSettingsManager?.setConsolePatchSettings(newSettings);
-  },
-  getConsolePatchSettings(): ?string {
-    return NativeDevToolsSettingsManager?.getConsolePatchSettings();
-  },
-  setProfilingSettings(newSettings: string) {
-    if (NativeDevToolsSettingsManager?.setProfilingSettings != null) {
-      NativeDevToolsSettingsManager.setProfilingSettings(newSettings);
-    }
-  },
-  getProfilingSettings(): ?string {
-    if (NativeDevToolsSettingsManager?.getProfilingSettings != null) {
-      return NativeDevToolsSettingsManager.getProfilingSettings();
-    }
-    return null;
-  },
-  reload(): void {
-    DevSettings?.reload();
-  },
-};
diff --git a/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.d.ts b/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.d.ts
deleted file mode 100644
index cbb5971..0000000
--- a/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.d.ts
+++ /dev/null
@@ -1,20 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-export interface DevToolsSettingsManagerStatic {
-  reload(): void;
-  setConsolePatchSettings(newSettings: string): void;
-  getConsolePatchSettings(): string | null;
-  setProfilingSettings(newSettings: string): void;
-  getProfilingSettings(): string | null;
-}
-
-export const DevToolsSettingsManager: DevToolsSettingsManagerStatic;
-export type DevToolsSettingsManager = DevToolsSettingsManagerStatic;
diff --git a/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.ios.js b/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.ios.js
deleted file mode 100644
index 534152b..0000000
--- a/node_modules/react-native/Libraries/DevToolsSettings/DevToolsSettingsManager.ios.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict-local
- * @format
- */
-
-import Settings from '../Settings/Settings';
-import DevSettings from '../Utilities/DevSettings';
-
-const CONSOLE_PATCH_SETTINGS_KEY = 'ReactDevTools::ConsolePatchSettings';
-const PROFILING_SETTINGS_KEY = 'ReactDevTools::ProfilingSettings';
-
-const DevToolsSettingsManager = {
-  setConsolePatchSettings(newConsolePatchSettings: string): void {
-    Settings.set({
-      [CONSOLE_PATCH_SETTINGS_KEY]: newConsolePatchSettings,
-    });
-  },
-  getConsolePatchSettings(): ?string {
-    const value = Settings.get(CONSOLE_PATCH_SETTINGS_KEY);
-    if (typeof value === 'string') {
-      return value;
-    }
-    return null;
-  },
-
-  setProfilingSettings(newProfilingSettings: string): void {
-    Settings.set({
-      [PROFILING_SETTINGS_KEY]: newProfilingSettings,
-    });
-  },
-  getProfilingSettings(): ?string {
-    const value = Settings.get(PROFILING_SETTINGS_KEY);
-    if (typeof value === 'string') {
-      return value;
-    }
-    return null;
-  },
-
-  reload(): void {
-    DevSettings?.reload();
-  },
-};
-
-module.exports = DevToolsSettingsManager;
diff --git a/node_modules/react-native/Libraries/DevToolsSettings/NativeDevToolsSettingsManager.js b/node_modules/react-native/Libraries/DevToolsSettings/NativeDevToolsSettingsManager.js
deleted file mode 100644
index 8370f8f..0000000
--- a/node_modules/react-native/Libraries/DevToolsSettings/NativeDevToolsSettingsManager.js
+++ /dev/null
@@ -1,24 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-import type {TurboModule} from '../TurboModule/RCTExport';
-
-import * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';
-
-export interface Spec extends TurboModule {
-  +setConsolePatchSettings: (newConsolePatchSettings: string) => void;
-  +getConsolePatchSettings: () => ?string;
-  +setProfilingSettings?: (newProfilingSettings: string) => void;
-  +getProfilingSettings?: () => ?string;
-}
-
-export default (TurboModuleRegistry.get<Spec>(
-  'DevToolsSettingsManager',
-): ?Spec);
diff --git a/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts b/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts
index 911d0a7..c9f30d0 100644
--- a/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts
+++ b/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts
@@ -7,8 +7,9 @@
  * @format
  */
 
-import EventEmitter, {
+import {
   EmitterSubscription,
+  EventEmitter,
 } from '../vendor/emitter/EventEmitter';
 
 /**
diff --git a/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts b/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts
index 7c5563b..1e92935 100644
--- a/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts
+++ b/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts
@@ -7,8 +7,9 @@
  * @format
  */
 
-import EventEmitter, {
+import {
   EmitterSubscription,
+  EventEmitter,
   EventSubscriptionVendor,
 } from '../vendor/emitter/EventEmitter';
 
diff --git a/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js b/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js
index 2569832..65fe57d 100644
--- a/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js
+++ b/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js
@@ -21,12 +21,4 @@ type RCTDeviceEventDefinitions = $FlowFixMe;
  *
  * NativeModules that emit events should instead subclass `NativeEventEmitter`.
  */
-const RCTDeviceEventEmitter: IEventEmitter<RCTDeviceEventDefinitions> =
-  new EventEmitter();
-
-Object.defineProperty(global, '__rctDeviceEventEmitter', {
-  configurable: true,
-  value: RCTDeviceEventEmitter,
-});
-
-export default (RCTDeviceEventEmitter: IEventEmitter<RCTDeviceEventDefinitions>);
+export default (new EventEmitter(): IEventEmitter<RCTDeviceEventDefinitions>);
diff --git a/node_modules/react-native/Libraries/Events/EventPolyfill.js b/node_modules/react-native/Libraries/Events/EventPolyfill.js
index dda91a3..e6e0e7b 100644
--- a/node_modules/react-native/Libraries/Events/EventPolyfill.js
+++ b/node_modules/react-native/Libraries/Events/EventPolyfill.js
@@ -159,7 +159,7 @@ class EventPolyfill implements IEvent {
   // data with the other in sync.
   _syntheticEvent: mixed;
 
-  constructor(type: string, eventInitDict?: Event$Init) {
+  constructor(type: string, eventInitDict?: Event$Init): void {
     this.type = type;
     this.bubbles = !!(eventInitDict?.bubbles || false);
     this.cancelable = !!(eventInitDict?.cancelable || false);
diff --git a/node_modules/react-native/Libraries/FBLazyVector/BUCK b/node_modules/react-native/Libraries/FBLazyVector/BUCK
index 515bf0d..56dd699 100644
--- a/node_modules/react-native/Libraries/FBLazyVector/BUCK
+++ b/node_modules/react-native/Libraries/FBLazyVector/BUCK
@@ -1,6 +1,6 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "rn_apple_library")
+load("//tools/build_defs/oss:rn_defs.bzl", "fb_apple_library")
 
-rn_apple_library(
+fb_apple_library(
     name = "FBLazyVector",
     exported_headers = [
         "FBLazyVector/FBLazyIterator.h",
diff --git a/node_modules/react-native/Libraries/FBLazyVector/FBLazyVector.podspec b/node_modules/react-native/Libraries/FBLazyVector/FBLazyVector.podspec
index b8473d5..41a0f75 100644
--- a/node_modules/react-native/Libraries/FBLazyVector/FBLazyVector.podspec
+++ b/node_modules/react-native/Libraries/FBLazyVector/FBLazyVector.podspec
@@ -22,7 +22,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{c,h,m,mm,cpp}"
diff --git a/node_modules/react-native/Libraries/Image/AssetRegistry.js b/node_modules/react-native/Libraries/Image/AssetRegistry.js
index 098d663..78613fb 100644
--- a/node_modules/react-native/Libraries/Image/AssetRegistry.js
+++ b/node_modules/react-native/Libraries/Image/AssetRegistry.js
@@ -10,4 +10,4 @@
 
 'use strict';
 
-module.exports = require('@react-native/assets-registry/registry');
+module.exports = require('@react-native/assets/registry');
diff --git a/node_modules/react-native/Libraries/Image/AssetSourceResolver.js b/node_modules/react-native/Libraries/Image/AssetSourceResolver.js
index d7ae700..5e7f2c2 100644
--- a/node_modules/react-native/Libraries/Image/AssetSourceResolver.js
+++ b/node_modules/react-native/Libraries/Image/AssetSourceResolver.js
@@ -18,16 +18,16 @@ export type ResolvedAssetSource = {|
   +scale: number,
 |};
 
-import type {PackagerAsset} from '@react-native/assets-registry/registry';
+import type {PackagerAsset} from '@react-native/assets/registry';
 
-const PixelRatio = require('../Utilities/PixelRatio').default;
+const PixelRatio = require('../Utilities/PixelRatio');
 const Platform = require('../Utilities/Platform');
 const {pickScale} = require('./AssetUtils');
 const {
   getAndroidResourceFolderName,
   getAndroidResourceIdentifier,
   getBasePath,
-} = require('@react-native/assets-registry/path-support');
+} = require('@react-native/assets/path-support');
 const invariant = require('invariant');
 
 /**
diff --git a/node_modules/react-native/Libraries/Image/Image.android.js b/node_modules/react-native/Libraries/Image/Image.android.js
index 18a1c3f..ca219fa 100644
--- a/node_modules/react-native/Libraries/Image/Image.android.js
+++ b/node_modules/react-native/Libraries/Image/Image.android.js
@@ -152,13 +152,10 @@ const BaseImage = (props: ImagePropsType, forwardedRef) => {
   let style;
   let sources;
   if (Array.isArray(source)) {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     style = flattenStyle([styles.base, props.style]);
     sources = source;
   } else {
-    // $FlowFixMe[incompatible-type]
     const {width = props.width, height = props.height, uri} = source;
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     style = flattenStyle([{width, height}, styles.base, props.style]);
     sources = [source];
     if (uri === '') {
diff --git a/node_modules/react-native/Libraries/Image/Image.d.ts b/node_modules/react-native/Libraries/Image/Image.d.ts
index 20b3808..dd2c089 100644
--- a/node_modules/react-native/Libraries/Image/Image.d.ts
+++ b/node_modules/react-native/Libraries/Image/Image.d.ts
@@ -12,7 +12,7 @@ import {Constructor} from '../../types/private/Utilities';
 import {AccessibilityProps} from '../Components/View/ViewAccessibility';
 import {Insets} from '../../types/public/Insets';
 import {NativeMethods} from '../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../StyleSheet/StyleSheet';
+import {StyleProp} from '../StyleSheet/StyleSheet';
 import {ImageStyle, ViewStyle} from '../StyleSheet/StyleSheetTypes';
 import {LayoutChangeEvent, NativeSyntheticEvent} from '../Types/CoreEventTypes';
 import {ImageResizeMode} from './ImageResizeMode';
@@ -225,21 +225,6 @@ export interface ImagePropsBase
    */
   source: ImageSourcePropType;
 
-  /**
-   * A string representing the resource identifier for the image. Similar to
-   * src from HTML.
-   *
-   * See https://reactnative.dev/docs/image#src
-   */
-  src?: string | undefined;
-
-  /**
-   * Similar to srcset from HTML.
-   *
-   * See https://reactnative.dev/docs/image#srcset
-   */
-  srcSet?: string | undefined;
-
   /**
    * similarly to `source`, this property represents the resource used to render
    * the loading indicator for the image, displayed until image is ready to be
@@ -269,52 +254,6 @@ export interface ImagePropsBase
    * See https://reactnative.dev/docs/image#alt
    */
   alt?: string | undefined;
-
-  /**
-   * Height of the image component.
-   *
-   * See https://reactnative.dev/docs/image#height
-   */
-  height?: number | undefined;
-
-  /**
-   * Width of the image component.
-   *
-   * See https://reactnative.dev/docs/image#width
-   */
-  width?: number | undefined;
-
-  /**
-   * Adds the CORS related header to the request.
-   * Similar to crossorigin from HTML.
-   *
-   * See https://reactnative.dev/docs/image#crossorigin
-   */
-  crossOrigin?: 'anonymous' | 'use-credentials' | undefined;
-
-  /**
-   * Changes the color of all the non-transparent pixels to the tintColor.
-   *
-   * See https://reactnative.dev/docs/image#tintcolor
-   */
-  tintColor?: ColorValue | undefined;
-
-  /**
-   * A string indicating which referrer to use when fetching the resource.
-   * Similar to referrerpolicy from HTML.
-   *
-   * See https://reactnative.dev/docs/image#referrerpolicy
-   */
-  referrerPolicy?:
-    | 'no-referrer'
-    | 'no-referrer-when-downgrade'
-    | 'origin'
-    | 'origin-when-cross-origin'
-    | 'same-origin'
-    | 'strict-origin'
-    | 'strict-origin-when-cross-origin'
-    | 'unsafe-url'
-    | undefined;
 }
 
 export interface ImageProps extends ImagePropsBase {
@@ -359,7 +298,7 @@ export class Image extends ImageBase {
 }
 
 export interface ImageBackgroundProps extends ImagePropsBase {
-  children?: React.ReactNode | undefined;
+  children?: React.ReactNode;
   imageStyle?: StyleProp<ImageStyle> | undefined;
   style?: StyleProp<ViewStyle> | undefined;
   imageRef?(image: Image): void;
diff --git a/node_modules/react-native/Libraries/Image/Image.ios.js b/node_modules/react-native/Libraries/Image/Image.ios.js
index ab1f443..6f1d72f 100644
--- a/node_modules/react-native/Libraries/Image/Image.ios.js
+++ b/node_modules/react-native/Libraries/Image/Image.ios.js
@@ -114,13 +114,10 @@ const BaseImage = (props: ImagePropsType, forwardedRef) => {
   let sources;
   let style: ImageStyleProp;
   if (Array.isArray(source)) {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     style = flattenStyle([styles.base, props.style]) || {};
     sources = source;
   } else {
-    // $FlowFixMe[incompatible-type]
     const {width = props.width, height = props.height, uri} = source;
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     style = flattenStyle([{width, height}, styles.base, props.style]) || {};
     sources = [source];
 
diff --git a/node_modules/react-native/Libraries/Image/ImageBackground.js b/node_modules/react-native/Libraries/Image/ImageBackground.js
index 7a51378..7beb733 100644
--- a/node_modules/react-native/Libraries/Image/ImageBackground.js
+++ b/node_modules/react-native/Libraries/Image/ImageBackground.js
@@ -76,7 +76,6 @@ class ImageBackground extends React.Component<ImageBackgroundProps> {
       ...props
     } = this.props;
 
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     const flattenedStyle = flattenStyle(style);
     return (
       <View
diff --git a/node_modules/react-native/Libraries/Image/ImageProps.js b/node_modules/react-native/Libraries/Image/ImageProps.js
index 7f3166d..5822188 100644
--- a/node_modules/react-native/Libraries/Image/ImageProps.js
+++ b/node_modules/react-native/Libraries/Image/ImageProps.js
@@ -93,7 +93,7 @@ export type ImageProps = {|
   'aria-label'?: ?Stringish,
 
   /**
-   * Represents the nativeID of the associated label. When the assistive technology focuses on the component with this props.
+   * Reperesents the nativeID of the associated label. When the assistive technology focuses on the component with this props.
    *
    * @platform android
    */
diff --git a/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js b/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js
index bd9ae7d..5c30ef7 100644
--- a/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js
+++ b/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js
@@ -71,7 +71,7 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig =
           internal_analyticTag: true,
           resizeMode: true,
           tintColor: {
-            process: require('../StyleSheet/processColor').default,
+            process: require('../StyleSheet/processColor'),
           },
           borderBottomLeftRadius: true,
           borderTopLeftRadius: true,
@@ -82,10 +82,10 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig =
           shouldNotifyLoadEvents: true,
           defaultSrc: true,
           overlayColor: {
-            process: require('../StyleSheet/processColor').default,
+            process: require('../StyleSheet/processColor'),
           },
           borderColor: {
-            process: require('../StyleSheet/processColor').default,
+            process: require('../StyleSheet/processColor'),
           },
           accessible: true,
           progressiveRenderingEnabled: true,
@@ -130,7 +130,7 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig =
           resizeMode: true,
           source: true,
           tintColor: {
-            process: require('../StyleSheet/processColor').default,
+            process: require('../StyleSheet/processColor'),
           },
           ...ConditionallyIgnoredEventHandlers({
             onLoadStart: true,
diff --git a/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js.flow b/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js.flow
index 4bb29f0..f5ca832 100644
--- a/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js.flow
+++ b/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js.flow
@@ -12,7 +12,10 @@ import type {ResolvedAssetSource} from './AssetSourceResolver';
 import type {ImageProps} from './ImageProps';
 import type {ViewProps} from '../Components/View/ViewPropTypes';
 import {ConditionallyIgnoredEventHandlers} from '../NativeComponent/ViewConfigIgnore';
-import type {HostComponent} from '../Renderer/shims/ReactNativeTypes';
+import type {
+  HostComponent,
+  PartialViewConfig,
+} from '../Renderer/shims/ReactNativeTypes';
 import type {
   ColorValue,
   DangerouslyImpreciseStyle,
diff --git a/node_modules/react-native/Libraries/Image/RCTImageCache.h b/node_modules/react-native/Libraries/Image/RCTImageCache.h
index 3f09976..d90de9b 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageCache.h
+++ b/node_modules/react-native/Libraries/Image/RCTImageCache.h
@@ -39,7 +39,7 @@
 @interface RCTImageCache : NSObject <RCTImageCache>
 
 RCT_EXTERN void RCTSetImageCacheLimits(
-    NSUInteger maxCacheableDecodedImageSizeInBytes,
+    NSUInteger maxCachableDecodedImageSizeInBytes,
     NSUInteger imageCacheTotalCostLimit);
 
 @end
diff --git a/node_modules/react-native/Libraries/Image/RCTImageCache.m b/node_modules/react-native/Libraries/Image/RCTImageCache.m
index 5fa3e14..5a06151 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageCache.m
+++ b/node_modules/react-native/Libraries/Image/RCTImageCache.m
@@ -18,12 +18,12 @@
 
 #import <React/RCTImageUtils.h>
 
-static NSUInteger RCTMaxCacheableDecodedImageSizeInBytes = 2 * 1024 * 1024;
+static NSUInteger RCTMaxCachableDecodedImageSizeInBytes = 2 * 1024 * 1024;
 static NSUInteger RCTImageCacheTotalCostLimit = 20 * 1024 * 1024;
 
-void RCTSetImageCacheLimits(NSUInteger maxCacheableDecodedImageSizeInBytes, NSUInteger imageCacheTotalCostLimit)
+void RCTSetImageCacheLimits(NSUInteger maxCachableDecodedImageSizeInBytes, NSUInteger imageCacheTotalCostLimit)
 {
-  RCTMaxCacheableDecodedImageSizeInBytes = maxCacheableDecodedImageSizeInBytes;
+  RCTMaxCachableDecodedImageSizeInBytes = maxCachableDecodedImageSizeInBytes;
   RCTImageCacheTotalCostLimit = imageCacheTotalCostLimit;
 }
 
@@ -73,7 +73,7 @@ - (void)addImageToCache:(UIImage *)image forKey:(NSString *)cacheKey
     return;
   }
   NSInteger bytes = image.reactDecodedImageBytes;
-  if (bytes <= RCTMaxCacheableDecodedImageSizeInBytes) {
+  if (bytes <= RCTMaxCachableDecodedImageSizeInBytes) {
     [self->_decodedImageCache setObject:image forKey:cacheKey cost:bytes];
   }
 }
diff --git a/node_modules/react-native/Libraries/Image/RCTImageView.mm b/node_modules/react-native/Libraries/Image/RCTImageView.mm
index 8f96505..050a447 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageView.mm
+++ b/node_modules/react-native/Libraries/Image/RCTImageView.mm
@@ -137,7 +137,7 @@ - (void)updateWithImage:(UIImage *)image
     image = [image resizableImageWithCapInsets:_capInsets resizingMode:UIImageResizingModeStretch];
   }
 
-  // Apply trilinear filtering to smooth out missized images
+  // Apply trilinear filtering to smooth out mis-sized images
   _imageView.layer.minificationFilter = kCAFilterTrilinear;
   _imageView.layer.magnificationFilter = kCAFilterTrilinear;
 
diff --git a/node_modules/react-native/Libraries/Image/React-RCTImage.podspec b/node_modules/react-native/Libraries/Image/React-RCTImage.podspec
index c7779c6..614245a 100644
--- a/node_modules/react-native/Libraries/Image/React-RCTImage.podspec
+++ b/node_modules/react-native/Libraries/Image/React-RCTImage.podspec
@@ -19,19 +19,6 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\""
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTImage"
   s.version                = version
@@ -39,7 +26,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/image"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -49,7 +36,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
 
   s.dependency "RCT-Folly", folly_version
diff --git a/node_modules/react-native/Libraries/Image/RelativeImageStub.js b/node_modules/react-native/Libraries/Image/RelativeImageStub.js
index fbb125a..c8cf0f4 100644
--- a/node_modules/react-native/Libraries/Image/RelativeImageStub.js
+++ b/node_modules/react-native/Libraries/Image/RelativeImageStub.js
@@ -13,7 +13,7 @@
 // This is a stub for flow to make it understand require('./icon.png')
 // See metro/src/Bundler/index.js
 
-const AssetRegistry = require('@react-native/assets-registry/registry');
+const AssetRegistry = require('@react-native/assets/registry');
 
 module.exports = (AssetRegistry.registerAsset({
   __packager_asset: true,
diff --git a/node_modules/react-native/Libraries/Image/TextInlineImageNativeComponent.js b/node_modules/react-native/Libraries/Image/TextInlineImageNativeComponent.js
index ff0bdb2..1ce6818 100644
--- a/node_modules/react-native/Libraries/Image/TextInlineImageNativeComponent.js
+++ b/node_modules/react-native/Libraries/Image/TextInlineImageNativeComponent.js
@@ -36,7 +36,7 @@ export const __INTERNAL_VIEW_CONFIG: PartialViewConfig = {
     resizeMode: true,
     src: true,
     tintColor: {
-      process: require('../StyleSheet/processColor').default,
+      process: require('../StyleSheet/processColor'),
     },
     headers: true,
   },
diff --git a/node_modules/react-native/Libraries/Image/resolveAssetSource.js b/node_modules/react-native/Libraries/Image/resolveAssetSource.js
index 2ff2bcf..8848a0f 100644
--- a/node_modules/react-native/Libraries/Image/resolveAssetSource.js
+++ b/node_modules/react-native/Libraries/Image/resolveAssetSource.js
@@ -16,7 +16,7 @@ import type {ResolvedAssetSource} from './AssetSourceResolver';
 
 const AssetSourceResolver = require('./AssetSourceResolver');
 const {pickScale} = require('./AssetUtils');
-const AssetRegistry = require('@react-native/assets-registry/registry');
+const AssetRegistry = require('@react-native/assets/registry');
 
 let _customSourceTransformer, _serverURL, _scriptURL;
 
diff --git a/node_modules/react-native/Libraries/Inspector/DevtoolsOverlay.js b/node_modules/react-native/Libraries/Inspector/DevtoolsOverlay.js
index 37d1ebb..a471167 100644
--- a/node_modules/react-native/Libraries/Inspector/DevtoolsOverlay.js
+++ b/node_modules/react-native/Libraries/Inspector/DevtoolsOverlay.js
@@ -8,7 +8,6 @@
  * @flow
  */
 
-import type {PointerEvent} from '../Types/CoreEventTypes';
 import type {PressEvent} from '../Types/CoreEventTypes';
 import type {HostRef} from './getInspectorDataForViewAtPoint';
 
@@ -51,12 +50,8 @@ export default function DevtoolsOverlay({
 
     function onAgentShowNativeHighlight(node: any) {
       clearTimeout(hideTimeoutId);
-
-      // `publicInstance` => Fabric
-      // TODO: remove this check when syncing the new version of the renderer from React to React Native.
-      // `canonical` => Legacy Fabric
-      // `node` => Legacy renderer
-      const component = node.publicInstance ?? node.canonical ?? node;
+      // Shape of `node` is different in Fabric.
+      const component = node.canonical ?? node;
       if (!component || !component.measure) {
         return;
       }
@@ -130,11 +125,11 @@ export default function DevtoolsOverlay({
       getInspectorDataForViewAtPoint(inspectedView, x, y, viewData => {
         const {touchedViewTag, closestInstance, frame} = viewData;
         if (closestInstance != null || touchedViewTag != null) {
-          // We call `selectNode` for both non-fabric(viewTag) and fabric(instance),
-          // this makes sure it works for both architectures.
-          agent.selectNode(findNodeHandle(touchedViewTag));
           if (closestInstance != null) {
+            // Fabric
             agent.selectNode(closestInstance);
+          } else {
+            agent.selectNode(findNodeHandle(touchedViewTag));
           }
           setInspected({
             frame,
@@ -158,14 +153,14 @@ export default function DevtoolsOverlay({
   }, []);
 
   const onPointerMove = useCallback(
-    (e: PointerEvent) => {
+    e => {
       findViewForLocation(e.nativeEvent.x, e.nativeEvent.y);
     },
     [findViewForLocation],
   );
 
   const onResponderMove = useCallback(
-    (e: PressEvent) => {
+    e => {
       findViewForLocation(
         e.nativeEvent.touches[0].locationX,
         e.nativeEvent.touches[0].locationY,
@@ -174,7 +169,7 @@ export default function DevtoolsOverlay({
     [findViewForLocation],
   );
 
-  const shouldSetResponder = useCallback(
+  const shouldSetResponser = useCallback(
     (e: PressEvent): boolean => {
       onResponderMove(e);
       return true;
@@ -184,19 +179,17 @@ export default function DevtoolsOverlay({
 
   let highlight = inspected ? <ElementBox frame={inspected.frame} /> : null;
   if (isInspecting) {
-    const events =
-      // Pointer events only work on fabric
-      ReactNativeFeatureFlags.shouldEmitW3CPointerEvents()
-        ? {
-            onPointerMove,
-            onPointerDown: onPointerMove,
-            onPointerUp: stopInspecting,
-          }
-        : {
-            onStartShouldSetResponder: shouldSetResponder,
-            onResponderMove: onResponderMove,
-            onResponderRelease: stopInspecting,
-          };
+    const events = ReactNativeFeatureFlags.shouldEmitW3CPointerEvents
+      ? {
+          onPointerMove,
+          onPointerDown: onPointerMove,
+          onPointerUp: stopInspecting,
+        }
+      : {
+          onStartShouldSetResponder: shouldSetResponser,
+          onResponderMove: onResponderMove,
+          onResponderRelease: stopInspecting,
+        };
     return (
       <View
         nativeID="devToolsInspectorOverlay"
diff --git a/node_modules/react-native/Libraries/Inspector/ElementBox.js b/node_modules/react-native/Libraries/Inspector/ElementBox.js
index 49c98db..f5064cb 100644
--- a/node_modules/react-native/Libraries/Inspector/ElementBox.js
+++ b/node_modules/react-native/Libraries/Inspector/ElementBox.js
@@ -13,14 +13,13 @@
 const View = require('../Components/View/View');
 const flattenStyle = require('../StyleSheet/flattenStyle');
 const StyleSheet = require('../StyleSheet/StyleSheet');
-const Dimensions = require('../Utilities/Dimensions').default;
+const Dimensions = require('../Utilities/Dimensions');
 const BorderBox = require('./BorderBox');
 const resolveBoxStyle = require('./resolveBoxStyle');
 const React = require('react');
 
 class ElementBox extends React.Component<$FlowFixMeProps> {
   render(): React.Node {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     const style = flattenStyle(this.props.style) || {};
     let margin = resolveBoxStyle('margin', style);
     let padding = resolveBoxStyle('padding', style);
@@ -124,14 +123,12 @@ function resolveSizeInPlace(
 ) {
   if (style[direction] !== null && typeof style[direction] === 'string') {
     if (style[direction].indexOf('%') !== -1) {
-      // $FlowFixMe[prop-missing]
       style[direction] =
         (parseFloat(style[direction]) / 100.0) *
         Dimensions.get('window')[dimension];
     }
     if (style[direction] === 'auto') {
       // Ignore auto sizing in frame drawing due to complexity of correctly rendering this
-      // $FlowFixMe[prop-missing]
       style[direction] = 0;
     }
   }
diff --git a/node_modules/react-native/Libraries/Inspector/Inspector.js b/node_modules/react-native/Libraries/Inspector/Inspector.js
index bc76e79..d660528 100644
--- a/node_modules/react-native/Libraries/Inspector/Inspector.js
+++ b/node_modules/react-native/Libraries/Inspector/Inspector.js
@@ -18,7 +18,7 @@ const View = require('../Components/View/View');
 const PressabilityDebug = require('../Pressability/PressabilityDebug');
 const {findNodeHandle} = require('../ReactNative/RendererProxy');
 const StyleSheet = require('../StyleSheet/StyleSheet');
-const Dimensions = require('../Utilities/Dimensions').default;
+const Dimensions = require('../Utilities/Dimensions');
 const Platform = require('../Utilities/Platform');
 const getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');
 const InspectorOverlay = require('./InspectorOverlay');
@@ -142,11 +142,12 @@ class Inspector extends React.Component<
       // Sync the touched view with React DevTools.
       // Note: This is Paper only. To support Fabric,
       // DevTools needs to be updated to not rely on view tags.
-      const agent = this.state.devtoolsAgent;
-      if (agent) {
-        agent.selectNode(findNodeHandle(touchedViewTag));
+      if (this.state.devtoolsAgent) {
         if (closestInstance != null) {
-          agent.selectNode(closestInstance);
+          // Fabric
+          this.state.devtoolsAgent.selectNode(closestInstance);
+        } else if (touchedViewTag != null) {
+          this.state.devtoolsAgent.selectNode(findNodeHandle(touchedViewTag));
         }
       }
 
diff --git a/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js b/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js
index c8973ba..f6bb0b7 100644
--- a/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js
+++ b/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js
@@ -15,7 +15,7 @@ import type {PressEvent} from '../Types/CoreEventTypes';
 
 const View = require('../Components/View/View');
 const StyleSheet = require('../StyleSheet/StyleSheet');
-const Dimensions = require('../Utilities/Dimensions').default;
+const Dimensions = require('../Utilities/Dimensions');
 const ElementBox = require('./ElementBox');
 const React = require('react');
 
@@ -36,7 +36,7 @@ class InspectorOverlay extends React.Component<Props> {
     this.props.onTouchPoint(locationX, locationY);
   };
 
-  shouldSetResponder: (e: PressEvent) => boolean = (e: PressEvent): boolean => {
+  shouldSetResponser: (e: PressEvent) => boolean = (e: PressEvent): boolean => {
     this.findViewForTouchEvent(e);
     return true;
   };
@@ -54,7 +54,7 @@ class InspectorOverlay extends React.Component<Props> {
 
     return (
       <View
-        onStartShouldSetResponder={this.shouldSetResponder}
+        onStartShouldSetResponder={this.shouldSetResponser}
         onResponderMove={this.findViewForTouchEvent}
         nativeID="inspectorOverlay" /* TODO: T68258846. */
         style={[styles.inspector, {height: Dimensions.get('window').height}]}>
diff --git a/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js b/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js
index c6d1ec3..169318c 100644
--- a/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js
+++ b/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js
@@ -10,7 +10,7 @@
 
 'use strict';
 
-import type {RenderItemProps} from '@react-native/virtualized-lists';
+import type {RenderItemProps} from '../Lists/VirtualizedList';
 
 const ScrollView = require('../Components/ScrollView/ScrollView');
 const TouchableHighlight = require('../Components/Touchable/TouchableHighlight');
diff --git a/node_modules/react-native/Libraries/Interaction/Batchinator.js b/node_modules/react-native/Libraries/Interaction/Batchinator.js
new file mode 100644
index 0000000..2ca2d79
--- /dev/null
+++ b/node_modules/react-native/Libraries/Interaction/Batchinator.js
@@ -0,0 +1,76 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+'use strict';
+
+const InteractionManager = require('./InteractionManager');
+
+/**
+ * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the
+ * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,
+ * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri
+ * interactions are done running.
+ *
+ * Make sure to cleanup with dispose().  Example:
+ *
+ *   class Widget extends React.Component {
+ *     _batchedSave: new Batchinator(() => this._saveState, 1000);
+ *     _saveSate() {
+ *       // save this.state to disk
+ *     }
+ *     componentDidUpdate() {
+ *       this._batchedSave.schedule();
+ *     }
+ *     componentWillUnmount() {
+ *       this._batchedSave.dispose();
+ *     }
+ *     ...
+ *   }
+ */
+class Batchinator {
+  _callback: () => void;
+  _delay: number;
+  _taskHandle: ?{cancel: () => void, ...};
+  constructor(callback: () => void, delayMS: number) {
+    this._delay = delayMS;
+    this._callback = callback;
+  }
+  /*
+   * Cleanup any pending tasks.
+   *
+   * By default, if there is a pending task the callback is run immediately. Set the option abort to
+   * true to not call the callback if it was pending.
+   */
+  dispose(options: {abort: boolean, ...} = {abort: false}) {
+    if (this._taskHandle) {
+      this._taskHandle.cancel();
+      if (!options.abort) {
+        this._callback();
+      }
+      this._taskHandle = null;
+    }
+  }
+  schedule() {
+    if (this._taskHandle) {
+      return;
+    }
+    const timeoutHandle = setTimeout(() => {
+      this._taskHandle = InteractionManager.runAfterInteractions(() => {
+        // Note that we clear the handle before invoking the callback so that if the callback calls
+        // schedule again, it will actually schedule another task.
+        this._taskHandle = null;
+        this._callback();
+      });
+    }, this._delay);
+    this._taskHandle = {cancel: () => clearTimeout(timeoutHandle)};
+  }
+}
+
+module.exports = Batchinator;
diff --git a/node_modules/react-native/Libraries/Interaction/BridgeSpyStallHandler.js b/node_modules/react-native/Libraries/Interaction/BridgeSpyStallHandler.js
new file mode 100644
index 0000000..783875c
--- /dev/null
+++ b/node_modules/react-native/Libraries/Interaction/BridgeSpyStallHandler.js
@@ -0,0 +1,63 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow
+ */
+
+'use strict';
+
+import type {SpyData} from '../BatchedBridge/MessageQueue';
+
+const MessageQueue = require('../BatchedBridge/MessageQueue');
+const infoLog = require('../Utilities/infoLog');
+const JSEventLoopWatchdog = require('./JSEventLoopWatchdog');
+
+const BridgeSpyStallHandler = {
+  register: function () {
+    let spyBuffer: Array<SpyData> = [];
+    MessageQueue.spy(data => {
+      spyBuffer.push(data);
+    });
+    const TO_JS = 0;
+    JSEventLoopWatchdog.addHandler({
+      onStall: () => {
+        infoLog(
+          spyBuffer.length + ' bridge messages during stall: ',
+          spyBuffer.map(info => {
+            let args: string | Array<?string> = '<args>';
+            try {
+              args = JSON.stringify(info.args);
+            } catch (e1) {
+              if (Array.isArray(info.args)) {
+                args = info.args.map(arg => {
+                  try {
+                    return JSON.stringify(arg);
+                  } catch (e2) {
+                    return '?';
+                  }
+                });
+              } else {
+                args = 'keys:' + JSON.stringify(Object.keys(info.args));
+              }
+            }
+            return (
+              `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +
+              `${info.module ? info.module + '.' : ''}${
+                info.method
+              }(${JSON.stringify(args)})`
+            );
+          }),
+        );
+      },
+      onIterate: () => {
+        spyBuffer = [];
+      },
+    });
+  },
+};
+
+module.exports = BridgeSpyStallHandler;
diff --git a/node_modules/react-native/Libraries/Interaction/InteractionStallDebugger.js b/node_modules/react-native/Libraries/Interaction/InteractionStallDebugger.js
new file mode 100644
index 0000000..f932ddc
--- /dev/null
+++ b/node_modules/react-native/Libraries/Interaction/InteractionStallDebugger.js
@@ -0,0 +1,23 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+'use strict';
+
+const BridgeSpyStallHandler = require('./BridgeSpyStallHandler');
+const JSEventLoopWatchdog = require('./JSEventLoopWatchdog');
+
+const InteractionStallDebugger = {
+  install(options: {thresholdMS: number, ...}): void {
+    JSEventLoopWatchdog.install(options);
+    BridgeSpyStallHandler.register();
+  },
+};
+
+module.exports = InteractionStallDebugger;
diff --git a/node_modules/react-native/Libraries/Interaction/JSEventLoopWatchdog.js b/node_modules/react-native/Libraries/Interaction/JSEventLoopWatchdog.js
index 113d073..3eae297 100644
--- a/node_modules/react-native/Libraries/Interaction/JSEventLoopWatchdog.js
+++ b/node_modules/react-native/Libraries/Interaction/JSEventLoopWatchdog.js
@@ -27,7 +27,7 @@ type Handler = {
  * other events from being processed in a timely manner.
  *
  * The "stall" time is defined as the amount of time in access of the acceptable
- * threshold, which is typically around 100-200ms. So if the threshold is set to
+ * threshold, which is typically around 100-200ms. So if the treshold is set to
  * 100 and a timer fires 150 ms later than it was scheduled because the event
  * loop was tied up, that would be considered a 50ms stall.
  *
diff --git a/node_modules/react-native/Libraries/Interaction/PanResponder.flow.js b/node_modules/react-native/Libraries/Interaction/PanResponder.flow.js
new file mode 100644
index 0000000..3db37a4
--- /dev/null
+++ b/node_modules/react-native/Libraries/Interaction/PanResponder.flow.js
@@ -0,0 +1,257 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow
+ * @format
+ */
+
+'use strict';
+
+import type {PressEvent} from '../Types/CoreEventTypes';
+
+/**
+ * `PanResponder` reconciles several touches into a single gesture. It makes
+ * single-touch gestures resilient to extra touches, and can be used to
+ * recognize simple multi-touch gestures.
+ *
+ * By default, `PanResponder` holds an `InteractionManager` handle to block
+ * long-running JS events from interrupting active gestures.
+ *
+ * It provides a predictable wrapper of the responder handlers provided by the
+ * [gesture responder system](docs/gesture-responder-system.html).
+ * For each handler, it provides a new `gestureState` object alongside the
+ * native event object:
+ *
+ * ```
+ * onPanResponderMove: (event, gestureState) => {}
+ * ```
+ *
+ * A native event is a synthetic touch event with the following form:
+ *
+ *  - `nativeEvent`
+ *      + `changedTouches` - Array of all touch events that have changed since the last event
+ *      + `identifier` - The ID of the touch
+ *      + `locationX` - The X position of the touch, relative to the element
+ *      + `locationY` - The Y position of the touch, relative to the element
+ *      + `pageX` - The X position of the touch, relative to the root element
+ *      + `pageY` - The Y position of the touch, relative to the root element
+ *      + `target` - The node id of the element receiving the touch event
+ *      + `timestamp` - A time identifier for the touch, useful for velocity calculation
+ *      + `touches` - Array of all current touches on the screen
+ *
+ * A `gestureState` object has the following:
+ *
+ *  - `stateID` - ID of the gestureState- persisted as long as there at least
+ *     one touch on screen
+ *  - `moveX` - the latest screen coordinates of the recently-moved touch
+ *  - `moveY` - the latest screen coordinates of the recently-moved touch
+ *  - `x0` - the screen coordinates of the responder grant
+ *  - `y0` - the screen coordinates of the responder grant
+ *  - `dx` - accumulated distance of the gesture since the touch started
+ *  - `dy` - accumulated distance of the gesture since the touch started
+ *  - `vx` - current velocity of the gesture
+ *  - `vy` - current velocity of the gesture
+ *  - `numberActiveTouches` - Number of touches currently on screen
+ *
+ * ### Basic Usage
+ *
+ * ```
+ *   componentWillMount: function() {
+ *     this._panResponder = PanResponder.create({
+ *       // Ask to be the responder:
+ *       onStartShouldSetPanResponder: (evt, gestureState) => true,
+ *       onStartShouldSetPanResponderCapture: (evt, gestureState) => true,
+ *       onMoveShouldSetPanResponder: (evt, gestureState) => true,
+ *       onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,
+ *
+ *       onPanResponderGrant: (evt, gestureState) => {
+ *         // The gesture has started. Show visual feedback so the user knows
+ *         // what is happening!
+ *
+ *         // gestureState.d{x,y} will be set to zero now
+ *       },
+ *       onPanResponderMove: (evt, gestureState) => {
+ *         // The most recent move distance is gestureState.move{X,Y}
+ *
+ *         // The accumulated gesture distance since becoming responder is
+ *         // gestureState.d{x,y}
+ *       },
+ *       onPanResponderTerminationRequest: (evt, gestureState) => true,
+ *       onPanResponderRelease: (evt, gestureState) => {
+ *         // The user has released all touches while this view is the
+ *         // responder. This typically means a gesture has succeeded
+ *       },
+ *       onPanResponderTerminate: (evt, gestureState) => {
+ *         // Another component has become the responder, so this gesture
+ *         // should be cancelled
+ *       },
+ *       onShouldBlockNativeResponder: (evt, gestureState) => {
+ *         // Returns whether this component should block native components from becoming the JS
+ *         // responder. Returns true by default. Is currently only supported on android.
+ *         return true;
+ *       },
+ *     });
+ *   },
+ *
+ *   render: function() {
+ *     return (
+ *       <View {...this._panResponder.panHandlers} />
+ *     );
+ *   },
+ *
+ * ```
+ *
+ * ### Working Example
+ *
+ * To see it in action, try the
+ * [PanResponder example in RNTester](https://github.com/facebook/react-native/blob/HEAD/packages/rn-tester/js/examples/PanResponder/PanResponderExample.js)
+ */
+
+export type GestureState = {|
+  /**
+   * ID of the gestureState - persisted as long as there at least one touch on screen
+   */
+  stateID: number,
+
+  /**
+   * The latest screen coordinates of the recently-moved touch
+   */
+  moveX: number,
+
+  /**
+   * The latest screen coordinates of the recently-moved touch
+   */
+  moveY: number,
+
+  /**
+   * The screen coordinates of the responder grant
+   */
+  x0: number,
+
+  /**
+   * The screen coordinates of the responder grant
+   */
+  y0: number,
+
+  /**
+   * Accumulated distance of the gesture since the touch started
+   */
+  dx: number,
+
+  /**
+   * Accumulated distance of the gesture since the touch started
+   */
+  dy: number,
+
+  /**
+   * Current velocity of the gesture
+   */
+  vx: number,
+
+  /**
+   * Current velocity of the gesture
+   */
+  vy: number,
+
+  /**
+   * Number of touches currently on screen
+   */
+  numberActiveTouches: number,
+
+  /**
+   * All `gestureState` accounts for timeStamps up until this value
+   *
+   * @private
+   */
+  _accountsForMovesUpTo: number,
+|};
+
+type ActiveCallback = (
+  event: PressEvent,
+  gestureState: GestureState,
+) => boolean;
+
+type PassiveCallback = (event: PressEvent, gestureState: GestureState) => mixed;
+
+type PanHandlers = {|
+  onMoveShouldSetResponder: (event: PressEvent) => boolean,
+  onMoveShouldSetResponderCapture: (event: PressEvent) => boolean,
+  onResponderEnd: (event: PressEvent) => void,
+  onResponderGrant: (event: PressEvent) => boolean,
+  onResponderMove: (event: PressEvent) => void,
+  onResponderReject: (event: PressEvent) => void,
+  onResponderRelease: (event: PressEvent) => void,
+  onResponderStart: (event: PressEvent) => void,
+  onResponderTerminate: (event: PressEvent) => void,
+  onResponderTerminationRequest: (event: PressEvent) => boolean,
+  onStartShouldSetResponder: (event: PressEvent) => boolean,
+  onStartShouldSetResponderCapture: (event: PressEvent) => boolean,
+|};
+
+type PanResponderConfig = $ReadOnly<{|
+  onMoveShouldSetPanResponder?: ?ActiveCallback,
+  onMoveShouldSetPanResponderCapture?: ?ActiveCallback,
+  onStartShouldSetPanResponder?: ?ActiveCallback,
+  onStartShouldSetPanResponderCapture?: ?ActiveCallback,
+  /**
+   * The body of `onResponderGrant` returns a bool, but the vast majority of
+   * callsites return void and this TODO notice is found in it:
+   *   TODO: t7467124 investigate if this can be removed
+   */
+  onPanResponderGrant?: ?(PassiveCallback | ActiveCallback),
+  onPanResponderReject?: ?PassiveCallback,
+  onPanResponderStart?: ?PassiveCallback,
+  onPanResponderEnd?: ?PassiveCallback,
+  onPanResponderRelease?: ?PassiveCallback,
+  onPanResponderMove?: ?PassiveCallback,
+  onPanResponderTerminate?: ?PassiveCallback,
+  onPanResponderTerminationRequest?: ?ActiveCallback,
+  onShouldBlockNativeResponder?: ?ActiveCallback,
+|}>;
+
+export type PanResponderType = {
+  _initializeGestureState: (gestureState: GestureState) => void,
+  _updateGestureStateOnMove: (
+    gestureState: GestureState,
+    touchHistory: $PropertyType<PressEvent, 'touchHistory'>,
+  ) => void,
+  /**
+   * @param {object} config Enhanced versions of all of the responder callbacks
+   * that provide not only the typical `ResponderSyntheticEvent`, but also the
+   * `PanResponder` gesture state.  Simply replace the word `Responder` with
+   * `PanResponder` in each of the typical `onResponder*` callbacks. For
+   * example, the `config` object would look like:
+   *
+   *  - `onMoveShouldSetPanResponder: (e, gestureState) => {...}`
+   *  - `onMoveShouldSetPanResponderCapture: (e, gestureState) => {...}`
+   *  - `onStartShouldSetPanResponder: (e, gestureState) => {...}`
+   *  - `onStartShouldSetPanResponderCapture: (e, gestureState) => {...}`
+   *  - `onPanResponderReject: (e, gestureState) => {...}`
+   *  - `onPanResponderGrant: (e, gestureState) => {...}`
+   *  - `onPanResponderStart: (e, gestureState) => {...}`
+   *  - `onPanResponderEnd: (e, gestureState) => {...}`
+   *  - `onPanResponderRelease: (e, gestureState) => {...}`
+   *  - `onPanResponderMove: (e, gestureState) => {...}`
+   *  - `onPanResponderTerminate: (e, gestureState) => {...}`
+   *  - `onPanResponderTerminationRequest: (e, gestureState) => {...}`
+   *  - `onShouldBlockNativeResponder: (e, gestureState) => {...}`
+   *
+   *  In general, for events that have capture equivalents, we update the
+   *  gestureState once in the capture phase and can use it in the bubble phase
+   *  as well.
+   *
+   *  Be careful with onStartShould* callbacks. They only reflect updated
+   *  `gestureState` for start/end events that bubble/capture to the Node.
+   *  Once the node is the responder, you can rely on every start/end event
+   *  being processed by the gesture and `gestureState` being updated
+   *  accordingly. (numberActiveTouches) may not be totally accurate unless you
+   *  are the responder.
+   */
+  create: (config: PanResponderConfig) => {
+    getInteractionHandle: () => ?number,
+    panHandlers: PanHandlers,
+  },
+};
diff --git a/node_modules/react-native/Libraries/Interaction/PanResponder.js b/node_modules/react-native/Libraries/Interaction/PanResponder.js
index e64011e..02658c1 100644
--- a/node_modules/react-native/Libraries/Interaction/PanResponder.js
+++ b/node_modules/react-native/Libraries/Interaction/PanResponder.js
@@ -11,6 +11,7 @@
 'use strict';
 
 import type {PressEvent} from '../Types/CoreEventTypes';
+import type {PanResponderType} from './PanResponder.flow.js';
 
 const InteractionManager = require('./InteractionManager');
 const TouchHistoryMath = require('./TouchHistoryMath');
@@ -190,7 +191,7 @@ type ActiveCallback = (
 
 type PassiveCallback = (event: PressEvent, gestureState: GestureState) => mixed;
 
-export type PanHandlers = {|
+type PanHandlers = {|
   onMoveShouldSetResponder: (event: PressEvent) => boolean,
   onMoveShouldSetResponderCapture: (event: PressEvent) => boolean,
   onResponderEnd: (event: PressEvent) => void,
@@ -226,7 +227,7 @@ type PanResponderConfig = $ReadOnly<{|
   onShouldBlockNativeResponder?: ?ActiveCallback,
 |}>;
 
-const PanResponder = {
+const PanResponder: PanResponderType = {
   /**
    *
    * A graphical explanation of the touch data flow:
@@ -398,10 +399,10 @@ const PanResponder = {
    *  accordingly. (numberActiveTouches) may not be totally accurate unless you
    *  are the responder.
    */
-  create(config: PanResponderConfig): {
+  create(config: PanResponderConfig): $TEMPORARY$object<{|
     getInteractionHandle: () => ?number,
     panHandlers: PanHandlers,
-  } {
+  |}> {
     const interactionState = {
       handle: (null: ?number),
     };
@@ -579,4 +580,4 @@ export type PanResponderInstance = $Call<
   PanResponderConfig,
 >;
 
-export default PanResponder;
+module.exports = PanResponder;
diff --git a/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js b/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
index e4489d0..a8c20e3 100644
--- a/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
+++ b/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
@@ -17,7 +17,6 @@ import type {
   LayoutAnimationType,
 } from '../Renderer/shims/ReactNativeTypes';
 
-import {getFabricUIManager} from '../ReactNative/FabricUIManager';
 import ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';
 import Platform from '../Utilities/Platform';
 
@@ -78,7 +77,7 @@ function configureNext(
 
   // In Fabric, LayoutAnimations are unconditionally enabled for Android, and
   // conditionally enabled on iOS (pending fully shipping; this is a temporary state).
-  const FabricUIManager = getFabricUIManager();
+  const FabricUIManager: FabricUIManagerSpec = global?.nativeFabricUIManager;
   if (FabricUIManager?.configureNextLayoutAnimation) {
     global?.nativeFabricUIManager?.configureNextLayoutAnimation(
       config,
diff --git a/node_modules/react-native/Libraries/Linking/Linking.js b/node_modules/react-native/Libraries/Linking/Linking.js
index 76d1879..a59fa72 100644
--- a/node_modules/react-native/Libraries/Linking/Linking.js
+++ b/node_modules/react-native/Libraries/Linking/Linking.js
@@ -11,6 +11,7 @@
 import type {EventSubscription} from '../vendor/emitter/EventEmitter';
 
 import NativeEventEmitter from '../EventEmitter/NativeEventEmitter';
+import InteractionManager from '../Interaction/InteractionManager';
 import Platform from '../Utilities/Platform';
 import NativeIntentAndroid from './NativeIntentAndroid';
 import NativeLinkingManager from './NativeLinkingManager';
@@ -95,7 +96,9 @@ class Linking extends NativeEventEmitter<LinkingEventDefinitions> {
    */
   getInitialURL(): Promise<?string> {
     return Platform.OS === 'android'
-      ? nullthrows(NativeIntentAndroid).getInitialURL()
+      ? InteractionManager.runAfterInteractions().then(() =>
+          nullthrows(NativeIntentAndroid).getInitialURL(),
+        )
       : nullthrows(NativeLinkingManager).getInitialURL();
   }
 
diff --git a/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec b/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec
index 9c03c13..1def019 100644
--- a/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec
+++ b/node_modules/react-native/Libraries/LinkingIOS/React-RCTLinking.podspec
@@ -19,22 +19,6 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers\""
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTLinking"
   s.version                = version
@@ -42,7 +26,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/linking"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -52,7 +36,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
 
   s.dependency "React-Codegen", version
diff --git a/node_modules/react-native/Libraries/Lists/CellRenderMask.js b/node_modules/react-native/Libraries/Lists/CellRenderMask.js
new file mode 100644
index 0000000..6258838
--- /dev/null
+++ b/node_modules/react-native/Libraries/Lists/CellRenderMask.js
@@ -0,0 +1,155 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+import invariant from 'invariant';
+
+export type CellRegion = {
+  first: number,
+  last: number,
+  isSpacer: boolean,
+};
+
+export class CellRenderMask {
+  _numCells: number;
+  _regions: Array<CellRegion>;
+
+  constructor(numCells: number) {
+    invariant(
+      numCells >= 0,
+      'CellRenderMask must contain a non-negative number os cells',
+    );
+
+    this._numCells = numCells;
+
+    if (numCells === 0) {
+      this._regions = [];
+    } else {
+      this._regions = [
+        {
+          first: 0,
+          last: numCells - 1,
+          isSpacer: true,
+        },
+      ];
+    }
+  }
+
+  enumerateRegions(): $ReadOnlyArray<CellRegion> {
+    return this._regions;
+  }
+
+  addCells(cells: {first: number, last: number}): void {
+    invariant(
+      cells.first >= 0 &&
+        cells.first < this._numCells &&
+        cells.last >= -1 &&
+        cells.last < this._numCells &&
+        cells.last >= cells.first - 1,
+      'CellRenderMask.addCells called with invalid cell range',
+    );
+
+    // VirtualizedList uses inclusive ranges, where zero-count states are
+    // possible. E.g. [0, -1] for no cells, starting at 0.
+    if (cells.last < cells.first) {
+      return;
+    }
+
+    const [firstIntersect, firstIntersectIdx] = this._findRegion(cells.first);
+    const [lastIntersect, lastIntersectIdx] = this._findRegion(cells.last);
+
+    // Fast-path if the cells to add are already all present in the mask. We
+    // will otherwise need to do some mutation.
+    if (firstIntersectIdx === lastIntersectIdx && !firstIntersect.isSpacer) {
+      return;
+    }
+
+    // We need to replace the existing covered regions with 1-3 new regions
+    // depending whether we need to split spacers out of overlapping regions.
+    const newLeadRegion: Array<CellRegion> = [];
+    const newTailRegion: Array<CellRegion> = [];
+    const newMainRegion: CellRegion = {
+      ...cells,
+      isSpacer: false,
+    };
+
+    if (firstIntersect.first < newMainRegion.first) {
+      if (firstIntersect.isSpacer) {
+        newLeadRegion.push({
+          first: firstIntersect.first,
+          last: newMainRegion.first - 1,
+          isSpacer: true,
+        });
+      } else {
+        newMainRegion.first = firstIntersect.first;
+      }
+    }
+
+    if (lastIntersect.last > newMainRegion.last) {
+      if (lastIntersect.isSpacer) {
+        newTailRegion.push({
+          first: newMainRegion.last + 1,
+          last: lastIntersect.last,
+          isSpacer: true,
+        });
+      } else {
+        newMainRegion.last = lastIntersect.last;
+      }
+    }
+
+    const replacementRegions: Array<CellRegion> = [
+      ...newLeadRegion,
+      newMainRegion,
+      ...newTailRegion,
+    ];
+    const numRegionsToDelete = lastIntersectIdx - firstIntersectIdx + 1;
+    this._regions.splice(
+      firstIntersectIdx,
+      numRegionsToDelete,
+      ...replacementRegions,
+    );
+  }
+
+  numCells(): number {
+    return this._numCells;
+  }
+
+  equals(other: CellRenderMask): boolean {
+    return (
+      this._numCells === other._numCells &&
+      this._regions.length === other._regions.length &&
+      this._regions.every(
+        (region, i) =>
+          region.first === other._regions[i].first &&
+          region.last === other._regions[i].last &&
+          region.isSpacer === other._regions[i].isSpacer,
+      )
+    );
+  }
+
+  _findRegion(cellIdx: number): [CellRegion, number] {
+    let firstIdx = 0;
+    let lastIdx = this._regions.length - 1;
+
+    while (firstIdx <= lastIdx) {
+      const middleIdx = Math.floor((firstIdx + lastIdx) / 2);
+      const middleRegion = this._regions[middleIdx];
+
+      if (cellIdx >= middleRegion.first && cellIdx <= middleRegion.last) {
+        return [middleRegion, middleIdx];
+      } else if (cellIdx < middleRegion.first) {
+        lastIdx = middleIdx - 1;
+      } else if (cellIdx > middleRegion.last) {
+        firstIdx = middleIdx + 1;
+      }
+    }
+
+    invariant(false, `A region was not found containing cellIdx ${cellIdx}`);
+  }
+}
diff --git a/node_modules/react-native/Libraries/Lists/ChildListCollection.js b/node_modules/react-native/Libraries/Lists/ChildListCollection.js
new file mode 100644
index 0000000..9c12031
--- /dev/null
+++ b/node_modules/react-native/Libraries/Lists/ChildListCollection.js
@@ -0,0 +1,72 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+import invariant from 'invariant';
+
+export default class ChildListCollection<TList> {
+  _cellKeyToChildren: Map<string, Set<TList>> = new Map();
+  _childrenToCellKey: Map<TList, string> = new Map();
+
+  add(list: TList, cellKey: string): void {
+    invariant(
+      !this._childrenToCellKey.has(list),
+      'Trying to add already present child list',
+    );
+
+    const cellLists = this._cellKeyToChildren.get(cellKey) ?? new Set();
+    cellLists.add(list);
+    this._cellKeyToChildren.set(cellKey, cellLists);
+
+    this._childrenToCellKey.set(list, cellKey);
+  }
+
+  remove(list: TList): void {
+    const cellKey = this._childrenToCellKey.get(list);
+    invariant(cellKey != null, 'Trying to remove non-present child list');
+    this._childrenToCellKey.delete(list);
+
+    const cellLists = this._cellKeyToChildren.get(cellKey);
+    invariant(cellLists, '_cellKeyToChildren should contain cellKey');
+    cellLists.delete(list);
+
+    if (cellLists.size === 0) {
+      this._cellKeyToChildren.delete(cellKey);
+    }
+  }
+
+  forEach(fn: TList => void): void {
+    for (const listSet of this._cellKeyToChildren.values()) {
+      for (const list of listSet) {
+        fn(list);
+      }
+    }
+  }
+
+  forEachInCell(cellKey: string, fn: TList => void): void {
+    const listSet = this._cellKeyToChildren.get(cellKey) ?? [];
+    for (const list of listSet) {
+      fn(list);
+    }
+  }
+
+  anyInCell(cellKey: string, fn: TList => boolean): boolean {
+    const listSet = this._cellKeyToChildren.get(cellKey) ?? [];
+    for (const list of listSet) {
+      if (fn(list)) {
+        return true;
+      }
+    }
+    return false;
+  }
+
+  size(): number {
+    return this._childrenToCellKey.size;
+  }
+}
diff --git a/node_modules/react-native/Libraries/Lists/FillRateHelper.js b/node_modules/react-native/Libraries/Lists/FillRateHelper.js
index 141fe98..87482e7 100644
--- a/node_modules/react-native/Libraries/Lists/FillRateHelper.js
+++ b/node_modules/react-native/Libraries/Lists/FillRateHelper.js
@@ -10,10 +10,244 @@
 
 'use strict';
 
-import {typeof FillRateHelper as FillRateHelperType} from '@react-native/virtualized-lists';
+import type {FrameMetricProps} from './VirtualizedListProps';
 
-const FillRateHelper: FillRateHelperType =
-  require('@react-native/virtualized-lists').FillRateHelper;
+export type FillRateInfo = Info;
+
+class Info {
+  any_blank_count: number = 0;
+  any_blank_ms: number = 0;
+  any_blank_speed_sum: number = 0;
+  mostly_blank_count: number = 0;
+  mostly_blank_ms: number = 0;
+  pixels_blank: number = 0;
+  pixels_sampled: number = 0;
+  pixels_scrolled: number = 0;
+  total_time_spent: number = 0;
+  sample_count: number = 0;
+}
+
+type FrameMetrics = {
+  inLayout?: boolean,
+  length: number,
+  offset: number,
+  ...
+};
+
+const DEBUG = false;
+
+let _listeners: Array<(Info) => void> = [];
+let _minSampleCount = 10;
+let _sampleRate = DEBUG ? 1 : null;
+
+/**
+ * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.
+ * By default the sampling rate is set to zero and this will do nothing. If you want to collect
+ * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.
+ *
+ * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with
+ * `SceneTracker.getActiveScene` to determine the context of the events.
+ */
+class FillRateHelper {
+  _anyBlankStartTime: ?number = null;
+  _enabled = false;
+  _getFrameMetrics: (index: number, props: FrameMetricProps) => ?FrameMetrics;
+  _info: Info = new Info();
+  _mostlyBlankStartTime: ?number = null;
+  _samplesStartTime: ?number = null;
+
+  static addListener(callback: FillRateInfo => void): {
+    remove: () => void,
+    ...
+  } {
+    if (_sampleRate === null) {
+      console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');
+    }
+    _listeners.push(callback);
+    return {
+      remove: () => {
+        _listeners = _listeners.filter(listener => callback !== listener);
+      },
+    };
+  }
+
+  static setSampleRate(sampleRate: number) {
+    _sampleRate = sampleRate;
+  }
+
+  static setMinSampleCount(minSampleCount: number) {
+    _minSampleCount = minSampleCount;
+  }
+
+  constructor(
+    getFrameMetrics: (index: number, props: FrameMetricProps) => ?FrameMetrics,
+  ) {
+    this._getFrameMetrics = getFrameMetrics;
+    this._enabled = (_sampleRate || 0) > Math.random();
+    this._resetData();
+  }
+
+  activate() {
+    if (this._enabled && this._samplesStartTime == null) {
+      DEBUG && console.debug('FillRateHelper: activate');
+      this._samplesStartTime = global.performance.now();
+    }
+  }
+
+  deactivateAndFlush() {
+    if (!this._enabled) {
+      return;
+    }
+    const start = this._samplesStartTime; // const for flow
+    if (start == null) {
+      DEBUG &&
+        console.debug('FillRateHelper: bail on deactivate with no start time');
+      return;
+    }
+    if (this._info.sample_count < _minSampleCount) {
+      // Don't bother with under-sampled events.
+      this._resetData();
+      return;
+    }
+    const total_time_spent = global.performance.now() - start;
+    const info: any = {
+      ...this._info,
+      total_time_spent,
+    };
+    if (DEBUG) {
+      const derived = {
+        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,
+        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),
+        avg_speed_when_any_blank:
+          this._info.any_blank_speed_sum / this._info.any_blank_count,
+        any_blank_per_min:
+          this._info.any_blank_count / (total_time_spent / 1000 / 60),
+        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,
+        mostly_blank_per_min:
+          this._info.mostly_blank_count / (total_time_spent / 1000 / 60),
+        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent,
+      };
+      for (const key in derived) {
+        // $FlowFixMe[prop-missing]
+        derived[key] = Math.round(1000 * derived[key]) / 1000;
+      }
+      console.debug('FillRateHelper deactivateAndFlush: ', {derived, info});
+    }
+    _listeners.forEach(listener => listener(info));
+    this._resetData();
+  }
+
+  computeBlankness(
+    props: {
+      ...FrameMetricProps,
+      initialNumToRender?: ?number,
+      ...
+    },
+    cellsAroundViewport: {
+      first: number,
+      last: number,
+      ...
+    },
+    scrollMetrics: {
+      dOffset: number,
+      offset: number,
+      velocity: number,
+      visibleLength: number,
+      ...
+    },
+  ): number {
+    if (
+      !this._enabled ||
+      props.getItemCount(props.data) === 0 ||
+      cellsAroundViewport.last < cellsAroundViewport.first ||
+      this._samplesStartTime == null
+    ) {
+      return 0;
+    }
+    const {dOffset, offset, velocity, visibleLength} = scrollMetrics;
+
+    // Denominator metrics that we track for all events - most of the time there is no blankness and
+    // we want to capture that.
+    this._info.sample_count++;
+    this._info.pixels_sampled += Math.round(visibleLength);
+    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));
+    const scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec
+
+    // Whether blank now or not, record the elapsed time blank if we were blank last time.
+    const now = global.performance.now();
+    if (this._anyBlankStartTime != null) {
+      this._info.any_blank_ms += now - this._anyBlankStartTime;
+    }
+    this._anyBlankStartTime = null;
+    if (this._mostlyBlankStartTime != null) {
+      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;
+    }
+    this._mostlyBlankStartTime = null;
+
+    let blankTop = 0;
+    let first = cellsAroundViewport.first;
+    let firstFrame = this._getFrameMetrics(first, props);
+    while (
+      first <= cellsAroundViewport.last &&
+      (!firstFrame || !firstFrame.inLayout)
+    ) {
+      firstFrame = this._getFrameMetrics(first, props);
+      first++;
+    }
+    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header
+    // as blank.
+    if (firstFrame && first > 0) {
+      blankTop = Math.min(
+        visibleLength,
+        Math.max(0, firstFrame.offset - offset),
+      );
+    }
+    let blankBottom = 0;
+    let last = cellsAroundViewport.last;
+    let lastFrame = this._getFrameMetrics(last, props);
+    while (
+      last >= cellsAroundViewport.first &&
+      (!lastFrame || !lastFrame.inLayout)
+    ) {
+      lastFrame = this._getFrameMetrics(last, props);
+      last--;
+    }
+    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the
+    // footer as blank.
+    if (lastFrame && last < props.getItemCount(props.data) - 1) {
+      const bottomEdge = lastFrame.offset + lastFrame.length;
+      blankBottom = Math.min(
+        visibleLength,
+        Math.max(0, offset + visibleLength - bottomEdge),
+      );
+    }
+    const pixels_blank = Math.round(blankTop + blankBottom);
+    const blankness = pixels_blank / visibleLength;
+    if (blankness > 0) {
+      this._anyBlankStartTime = now;
+      this._info.any_blank_speed_sum += scrollSpeed;
+      this._info.any_blank_count++;
+      this._info.pixels_blank += pixels_blank;
+      if (blankness > 0.5) {
+        this._mostlyBlankStartTime = now;
+        this._info.mostly_blank_count++;
+      }
+    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {
+      this.deactivateAndFlush();
+    }
+    return blankness;
+  }
+
+  enabled(): boolean {
+    return this._enabled;
+  }
+
+  _resetData() {
+    this._anyBlankStartTime = null;
+    this._info = new Info();
+    this._mostlyBlankStartTime = null;
+    this._samplesStartTime = null;
+  }
+}
 
-export type {FillRateInfo} from '@react-native/virtualized-lists';
 module.exports = FillRateHelper;
diff --git a/node_modules/react-native/Libraries/Lists/FlatList.d.ts b/node_modules/react-native/Libraries/Lists/FlatList.d.ts
index b6b2867..4f60e18 100644
--- a/node_modules/react-native/Libraries/Lists/FlatList.d.ts
+++ b/node_modules/react-native/Libraries/Lists/FlatList.d.ts
@@ -12,7 +12,7 @@ import type {
   ListRenderItem,
   ViewToken,
   VirtualizedListProps,
-} from '@react-native/virtualized-lists';
+} from './VirtualizedList';
 import type {ScrollViewComponent} from '../Components/ScrollView/ScrollView';
 import type {StyleProp} from '../StyleSheet/StyleSheet';
 import type {ViewStyle} from '../StyleSheet/StyleSheetTypes';
@@ -41,7 +41,7 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
 
   /**
    * An array (or array-like list) of items to render. Other data types can be
-   * used by targeting VirtualizedList directly.
+   * used by targetting VirtualizedList directly.
    */
   data: ArrayLike<ItemT> | null | undefined;
 
@@ -50,7 +50,7 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
    * If any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,
    * stick it here and treat it immutably.
    */
-  extraData?: any | undefined;
+  extraData?: any;
 
   /**
    * `getItemLayout` is an optional optimization that lets us skip measurement of dynamic
@@ -66,7 +66,7 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
    */
   getItemLayout?:
     | ((
-        data: ArrayLike<ItemT> | null | undefined,
+        data: Array<ItemT> | null | undefined,
         index: number,
       ) => {length: number; offset: number; index: number})
     | undefined;
@@ -104,6 +104,19 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
    */
   numColumns?: number | undefined;
 
+  /**
+   * Called once when the scroll position gets within onEndReachedThreshold of the rendered content.
+   */
+  onEndReached?: ((info: {distanceFromEnd: number}) => void) | null | undefined;
+
+  /**
+   * How far from the end (in units of visible length of the list) the bottom edge of the
+   * list must be from the end of the content to trigger the `onEndReached` callback.
+   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is
+   * within half the visible length of the list.
+   */
+  onEndReachedThreshold?: number | null | undefined;
+
   /**
    * If provided, a standard RefreshControl will be added for "Pull to Refresh" functionality.
    * Make sure to also set the refreshing prop correctly.
@@ -132,7 +145,7 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
    * _renderItem = ({item}) => (
    *   <TouchableOpacity onPress={() => this._onPress(item)}>
    *     <Text>{item.title}</Text>
-   *   </TouchableOpacity>
+   *   <TouchableOpacity/>
    * );
    * ...
    * <FlatList data={[{title: 'Title Text', key: 'item1'}]} renderItem={this._renderItem} />
@@ -144,7 +157,7 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
   /**
    * See `ViewabilityHelper` for flow type and further documentation.
    */
-  viewabilityConfig?: any | undefined;
+  viewabilityConfig?: any;
 
   /**
    * Note: may have bugs (missing content) in some circumstances - use at your own risk.
@@ -166,10 +179,9 @@ export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
   fadingEdgeLength?: number | undefined;
 }
 
-export abstract class FlatListComponent<
-  ItemT,
-  Props,
-> extends React.Component<Props> {
+export class FlatList<ItemT = any> extends React.Component<
+  FlatListProps<ItemT>
+> {
   /**
    * Scrolls to the end of the content. May be janky without `getItemLayout` prop.
    */
@@ -237,8 +249,3 @@ export abstract class FlatListComponent<
   // TODO: use `unknown` instead of `any` for Typescript >= 3.0
   setNativeProps: (props: {[key: string]: any}) => void;
 }
-
-export class FlatList<ItemT = any> extends FlatListComponent<
-  ItemT,
-  FlatListProps<ItemT>
-> {}
diff --git a/node_modules/react-native/Libraries/Lists/FlatList.js b/node_modules/react-native/Libraries/Lists/FlatList.js
index ddb929e..9b280f2 100644
--- a/node_modules/react-native/Libraries/Lists/FlatList.js
+++ b/node_modules/react-native/Libraries/Lists/FlatList.js
@@ -11,17 +11,14 @@
 import typeof ScrollViewNativeComponent from '../Components/ScrollView/ScrollViewNativeComponent';
 import type {ViewStyleProp} from '../StyleSheet/StyleSheet';
 import type {
-  RenderItemProps,
-  RenderItemType,
   ViewabilityConfigCallbackPair,
   ViewToken,
-} from '@react-native/virtualized-lists';
+} from './ViewabilityHelper';
+import type {RenderItemProps, RenderItemType} from './VirtualizedList';
 
 import {type ScrollResponderType} from '../Components/ScrollView/ScrollView';
-import {
-  VirtualizedList,
-  keyExtractor as defaultKeyExtractor,
-} from '@react-native/virtualized-lists';
+import VirtualizedList from './VirtualizedList';
+import {keyExtractor as defaultKeyExtractor} from './VirtualizeUtils';
 import memoizeOne from 'memoize-one';
 
 const View = require('../Components/View/View');
@@ -34,7 +31,7 @@ const React = require('react');
 type RequiredProps<ItemT> = {|
   /**
    * An array (or array-like list) of items to render. Other data types can be
-   * used by targeting VirtualizedList directly.
+   * used by targetting VirtualizedList directly.
    */
   data: ?$ArrayLike<ItemT>,
 |};
@@ -91,7 +88,7 @@ type OptionalProps<ItemT> = {|
    * specify `ItemSeparatorComponent`.
    */
   getItemLayout?: (
-    data: ?$ArrayLike<ItemT>,
+    data: ?Array<ItemT>,
     index: number,
   ) => {
     length: number,
diff --git a/node_modules/react-native/Libraries/Lists/FlatList.js.flow b/node_modules/react-native/Libraries/Lists/FlatList.js.flow
index 304a100..4a0ee0b 100644
--- a/node_modules/react-native/Libraries/Lists/FlatList.js.flow
+++ b/node_modules/react-native/Libraries/Lists/FlatList.js.flow
@@ -15,12 +15,11 @@ import typeof ScrollViewNativeComponent from '../Components/ScrollView/ScrollVie
 import {type ScrollResponderType} from '../Components/ScrollView/ScrollView';
 import type {ViewStyleProp} from '../StyleSheet/StyleSheet';
 import type {
-  RenderItemType,
-  RenderItemProps,
   ViewToken,
   ViewabilityConfigCallbackPair,
-} from '@react-native/virtualized-lists';
-import {typeof VirtualizedList} from '@react-native/virtualized-lists';
+} from './ViewabilityHelper';
+import type {RenderItemType, RenderItemProps} from './VirtualizedList';
+import typeof VirtualizedList from './VirtualizedList';
 
 type RequiredProps<ItemT> = {|
   /**
diff --git a/node_modules/react-native/Libraries/Lists/SectionList.d.ts b/node_modules/react-native/Libraries/Lists/SectionList.d.ts
index 3960922..ae1b10d 100644
--- a/node_modules/react-native/Libraries/Lists/SectionList.d.ts
+++ b/node_modules/react-native/Libraries/Lists/SectionList.d.ts
@@ -11,7 +11,7 @@ import type * as React from 'react';
 import type {
   ListRenderItemInfo,
   VirtualizedListWithoutRenderItemProps,
-} from '@react-native/virtualized-lists';
+} from './VirtualizedList';
 import type {
   ScrollView,
   ScrollViewProps,
@@ -75,7 +75,7 @@ export interface SectionListProps<ItemT, SectionT = DefaultSectionT>
    * If any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the `data` prop,
    * stick it here and treat it immutably.
    */
-  extraData?: any | undefined;
+  extraData?: any;
 
   /**
    * `getItemLayout` is an optional optimization that lets us skip measurement of dynamic
@@ -210,9 +210,10 @@ export interface SectionListScrollParams {
   viewPosition?: number | undefined;
 }
 
-export abstract class SectionListComponent<
-  Props,
-> extends React.Component<Props> {
+export class SectionList<
+  ItemT = any,
+  SectionT = DefaultSectionT,
+> extends React.Component<SectionListProps<ItemT, SectionT>> {
   /**
    * Scrolls to the item at the specified sectionIndex and itemIndex (within the section)
    * positioned in the viewable area such that viewPosition 0 places it at the top
@@ -245,11 +246,6 @@ export abstract class SectionListComponent<
   getScrollableNode(): NodeHandle | undefined;
 }
 
-export class SectionList<
-  ItemT = any,
-  SectionT = DefaultSectionT,
-> extends SectionListComponent<SectionListProps<ItemT, SectionT>> {}
-
 /* This definition is deprecated because it extends the wrong base type */
 export interface SectionListStatic<ItemT, SectionT = DefaultSectionT>
   extends React.ComponentClass<SectionListProps<ItemT, SectionT>> {
diff --git a/node_modules/react-native/Libraries/Lists/SectionList.js b/node_modules/react-native/Libraries/Lists/SectionList.js
index 0f19948..3520b31 100644
--- a/node_modules/react-native/Libraries/Lists/SectionList.js
+++ b/node_modules/react-native/Libraries/Lists/SectionList.js
@@ -12,13 +12,13 @@
 
 import type {ScrollResponderType} from '../Components/ScrollView/ScrollView';
 import type {
+  Props as VirtualizedSectionListProps,
   ScrollToLocationParamsType,
   SectionBase as _SectionBase,
-  VirtualizedSectionListProps,
-} from '@react-native/virtualized-lists';
+} from './VirtualizedSectionList';
 
 import Platform from '../Utilities/Platform';
-import {VirtualizedSectionList} from '@react-native/virtualized-lists';
+import VirtualizedSectionList from './VirtualizedSectionList';
 import * as React from 'react';
 
 type Item = any;
@@ -248,9 +248,7 @@ export default class SectionList<
         {...restProps}
         stickySectionHeadersEnabled={stickySectionHeadersEnabled}
         ref={this._captureRef}
-        // $FlowFixMe[missing-local-annot]
         getItemCount={items => items.length}
-        // $FlowFixMe[missing-local-annot]
         getItem={(items, index) => items[index]}
       />
     );
diff --git a/node_modules/react-native/Libraries/Lists/SectionListModern.js b/node_modules/react-native/Libraries/Lists/SectionListModern.js
index d9676f1..c7856e1 100644
--- a/node_modules/react-native/Libraries/Lists/SectionListModern.js
+++ b/node_modules/react-native/Libraries/Lists/SectionListModern.js
@@ -12,14 +12,14 @@
 
 import type {ScrollResponderType} from '../Components/ScrollView/ScrollView';
 import type {
+  Props as VirtualizedSectionListProps,
   ScrollToLocationParamsType,
   SectionBase as _SectionBase,
-  VirtualizedSectionListProps,
-} from '@react-native/virtualized-lists';
+} from './VirtualizedSectionList';
 import type {AbstractComponent, Element, ElementRef} from 'react';
 
 import Platform from '../Utilities/Platform';
-import {VirtualizedSectionList} from '@react-native/virtualized-lists';
+import VirtualizedSectionList from './VirtualizedSectionList';
 import React, {forwardRef, useImperativeHandle, useRef} from 'react';
 
 type Item = any;
diff --git a/node_modules/react-native/Libraries/Lists/StateSafePureComponent.js b/node_modules/react-native/Libraries/Lists/StateSafePureComponent.js
new file mode 100644
index 0000000..77db4b4
--- /dev/null
+++ b/node_modules/react-native/Libraries/Lists/StateSafePureComponent.js
@@ -0,0 +1,85 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+import invariant from 'invariant';
+import * as React from 'react';
+
+/**
+ * `setState` is called asynchronously, and should not rely on the value of
+ * `this.props` or `this.state`:
+ * https://reactjs.org/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous
+ *
+ * SafePureComponent adds runtime enforcement, to catch cases where these
+ * variables are read in a state updater function, instead of the ones passed
+ * in.
+ */
+export default class StateSafePureComponent<
+  Props,
+  State: interface {},
+> extends React.PureComponent<Props, State> {
+  _inAsyncStateUpdate = false;
+
+  constructor(props: Props) {
+    super(props);
+    this._installSetStateHooks();
+  }
+
+  setState(
+    partialState: ?($Shape<State> | ((State, Props) => ?$Shape<State>)),
+    callback?: () => mixed,
+  ): void {
+    if (typeof partialState === 'function') {
+      super.setState((state, props) => {
+        this._inAsyncStateUpdate = true;
+        let ret;
+        try {
+          ret = partialState(state, props);
+        } catch (err) {
+          throw err;
+        } finally {
+          this._inAsyncStateUpdate = false;
+        }
+        return ret;
+      }, callback);
+    } else {
+      super.setState(partialState, callback);
+    }
+  }
+
+  _installSetStateHooks() {
+    const that = this;
+    let {props, state} = this;
+
+    Object.defineProperty(this, 'props', {
+      get() {
+        invariant(
+          !that._inAsyncStateUpdate,
+          '"this.props" should not be accessed during state updates',
+        );
+        return props;
+      },
+      set(newProps: Props) {
+        props = newProps;
+      },
+    });
+    Object.defineProperty(this, 'state', {
+      get() {
+        invariant(
+          !that._inAsyncStateUpdate,
+          '"this.state" should not be acceessed during state updates',
+        );
+        return state;
+      },
+      set(newState: State) {
+        state = newState;
+      },
+    });
+  }
+}
diff --git a/node_modules/react-native/Libraries/Lists/ViewabilityHelper.js b/node_modules/react-native/Libraries/Lists/ViewabilityHelper.js
index c7dedfd..33a9811 100644
--- a/node_modules/react-native/Libraries/Lists/ViewabilityHelper.js
+++ b/node_modules/react-native/Libraries/Lists/ViewabilityHelper.js
@@ -10,15 +10,351 @@
 
 'use strict';
 
-export type {
-  ViewToken,
-  ViewabilityConfig,
-  ViewabilityConfigCallbackPair,
-} from '@react-native/virtualized-lists';
+import type {FrameMetricProps} from './VirtualizedListProps';
 
-import {typeof ViewabilityHelper as ViewabilityHelperType} from '@react-native/virtualized-lists';
+const invariant = require('invariant');
 
-const ViewabilityHelper: ViewabilityHelperType =
-  require('@react-native/virtualized-lists').ViewabilityHelper;
+export type ViewToken = {
+  item: any,
+  key: string,
+  index: ?number,
+  isViewable: boolean,
+  section?: any,
+  ...
+};
+
+export type ViewabilityConfigCallbackPair = {
+  viewabilityConfig: ViewabilityConfig,
+  onViewableItemsChanged: (info: {
+    viewableItems: Array<ViewToken>,
+    changed: Array<ViewToken>,
+    ...
+  }) => void,
+  ...
+};
+
+export type ViewabilityConfig = {|
+  /**
+   * Minimum amount of time (in milliseconds) that an item must be physically viewable before the
+   * viewability callback will be fired. A high number means that scrolling through content without
+   * stopping will not mark the content as viewable.
+   */
+  minimumViewTime?: number,
+
+  /**
+   * Percent of viewport that must be covered for a partially occluded item to count as
+   * "viewable", 0-100. Fully visible items are always considered viewable. A value of 0 means
+   * that a single pixel in the viewport makes the item viewable, and a value of 100 means that
+   * an item must be either entirely visible or cover the entire viewport to count as viewable.
+   */
+  viewAreaCoveragePercentThreshold?: number,
+
+  /**
+   * Similar to `viewAreaPercentThreshold`, but considers the percent of the item that is visible,
+   * rather than the fraction of the viewable area it covers.
+   */
+  itemVisiblePercentThreshold?: number,
+
+  /**
+   * Nothing is considered viewable until the user scrolls or `recordInteraction` is called after
+   * render.
+   */
+  waitForInteraction?: boolean,
+|};
+
+/**
+ * A Utility class for calculating viewable items based on current metrics like scroll position and
+ * layout.
+ *
+ * An item is said to be in a "viewable" state when any of the following
+ * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`
+ * is true):
+ *
+ * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item
+ *   visible in the view area >= `itemVisiblePercentThreshold`.
+ * - Entirely visible on screen
+ */
+class ViewabilityHelper {
+  _config: ViewabilityConfig;
+  _hasInteracted: boolean = false;
+  _timers: Set<number> = new Set();
+  _viewableIndices: Array<number> = [];
+  _viewableItems: Map<string, ViewToken> = new Map();
+
+  constructor(
+    config: ViewabilityConfig = {viewAreaCoveragePercentThreshold: 0},
+  ) {
+    this._config = config;
+  }
+
+  /**
+   * Cleanup, e.g. on unmount. Clears any pending timers.
+   */
+  dispose() {
+    /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This
+     * comment suppresses an error found when Flow v0.63 was deployed. To see
+     * the error delete this comment and run Flow. */
+    this._timers.forEach(clearTimeout);
+  }
+
+  /**
+   * Determines which items are viewable based on the current metrics and config.
+   */
+  computeViewableItems(
+    props: FrameMetricProps,
+    scrollOffset: number,
+    viewportHeight: number,
+    getFrameMetrics: (
+      index: number,
+      props: FrameMetricProps,
+    ) => ?{
+      length: number,
+      offset: number,
+      ...
+    },
+    // Optional optimization to reduce the scan size
+    renderRange?: {
+      first: number,
+      last: number,
+      ...
+    },
+  ): Array<number> {
+    const itemCount = props.getItemCount(props.data);
+    const {itemVisiblePercentThreshold, viewAreaCoveragePercentThreshold} =
+      this._config;
+    const viewAreaMode = viewAreaCoveragePercentThreshold != null;
+    const viewablePercentThreshold = viewAreaMode
+      ? viewAreaCoveragePercentThreshold
+      : itemVisiblePercentThreshold;
+    invariant(
+      viewablePercentThreshold != null &&
+        (itemVisiblePercentThreshold != null) !==
+          (viewAreaCoveragePercentThreshold != null),
+      'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold',
+    );
+    const viewableIndices = [];
+    if (itemCount === 0) {
+      return viewableIndices;
+    }
+    let firstVisible = -1;
+    const {first, last} = renderRange || {first: 0, last: itemCount - 1};
+    if (last >= itemCount) {
+      console.warn(
+        'Invalid render range computing viewability ' +
+          JSON.stringify({renderRange, itemCount}),
+      );
+      return [];
+    }
+    for (let idx = first; idx <= last; idx++) {
+      const metrics = getFrameMetrics(idx, props);
+      if (!metrics) {
+        continue;
+      }
+      const top = metrics.offset - scrollOffset;
+      const bottom = top + metrics.length;
+      if (top < viewportHeight && bottom > 0) {
+        firstVisible = idx;
+        if (
+          _isViewable(
+            viewAreaMode,
+            viewablePercentThreshold,
+            top,
+            bottom,
+            viewportHeight,
+            metrics.length,
+          )
+        ) {
+          viewableIndices.push(idx);
+        }
+      } else if (firstVisible >= 0) {
+        break;
+      }
+    }
+    return viewableIndices;
+  }
+
+  /**
+   * Figures out which items are viewable and how that has changed from before and calls
+   * `onViewableItemsChanged` as appropriate.
+   */
+  onUpdate(
+    props: FrameMetricProps,
+    scrollOffset: number,
+    viewportHeight: number,
+    getFrameMetrics: (
+      index: number,
+      props: FrameMetricProps,
+    ) => ?{
+      length: number,
+      offset: number,
+      ...
+    },
+    createViewToken: (
+      index: number,
+      isViewable: boolean,
+      props: FrameMetricProps,
+    ) => ViewToken,
+    onViewableItemsChanged: ({
+      viewableItems: Array<ViewToken>,
+      changed: Array<ViewToken>,
+      ...
+    }) => void,
+    // Optional optimization to reduce the scan size
+    renderRange?: {
+      first: number,
+      last: number,
+      ...
+    },
+  ): void {
+    const itemCount = props.getItemCount(props.data);
+    if (
+      (this._config.waitForInteraction && !this._hasInteracted) ||
+      itemCount === 0 ||
+      !getFrameMetrics(0, props)
+    ) {
+      return;
+    }
+    let viewableIndices: Array<number> = [];
+    if (itemCount) {
+      viewableIndices = this.computeViewableItems(
+        props,
+        scrollOffset,
+        viewportHeight,
+        getFrameMetrics,
+        renderRange,
+      );
+    }
+    if (
+      this._viewableIndices.length === viewableIndices.length &&
+      this._viewableIndices.every((v, ii) => v === viewableIndices[ii])
+    ) {
+      // We might get a lot of scroll events where visibility doesn't change and we don't want to do
+      // extra work in those cases.
+      return;
+    }
+    this._viewableIndices = viewableIndices;
+    if (this._config.minimumViewTime) {
+      const handle: TimeoutID = setTimeout(() => {
+        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This
+         * comment suppresses an error found when Flow v0.63 was deployed. To
+         * see the error delete this comment and run Flow. */
+        this._timers.delete(handle);
+        this._onUpdateSync(
+          props,
+          viewableIndices,
+          onViewableItemsChanged,
+          createViewToken,
+        );
+      }, this._config.minimumViewTime);
+      /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This
+       * comment suppresses an error found when Flow v0.63 was deployed. To see
+       * the error delete this comment and run Flow. */
+      this._timers.add(handle);
+    } else {
+      this._onUpdateSync(
+        props,
+        viewableIndices,
+        onViewableItemsChanged,
+        createViewToken,
+      );
+    }
+  }
+
+  /**
+   * clean-up cached _viewableIndices to evaluate changed items on next update
+   */
+  resetViewableIndices() {
+    this._viewableIndices = [];
+  }
+
+  /**
+   * Records that an interaction has happened even if there has been no scroll.
+   */
+  recordInteraction() {
+    this._hasInteracted = true;
+  }
+
+  _onUpdateSync(
+    props: FrameMetricProps,
+    viewableIndicesToCheck: Array<number>,
+    onViewableItemsChanged: ({
+      changed: Array<ViewToken>,
+      viewableItems: Array<ViewToken>,
+      ...
+    }) => void,
+    createViewToken: (
+      index: number,
+      isViewable: boolean,
+      props: FrameMetricProps,
+    ) => ViewToken,
+  ) {
+    // Filter out indices that have gone out of view since this call was scheduled.
+    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii =>
+      this._viewableIndices.includes(ii),
+    );
+    const prevItems = this._viewableItems;
+    const nextItems = new Map(
+      viewableIndicesToCheck.map(ii => {
+        const viewable = createViewToken(ii, true, props);
+        return [viewable.key, viewable];
+      }),
+    );
+
+    const changed = [];
+    for (const [key, viewable] of nextItems) {
+      if (!prevItems.has(key)) {
+        changed.push(viewable);
+      }
+    }
+    for (const [key, viewable] of prevItems) {
+      if (!nextItems.has(key)) {
+        changed.push({...viewable, isViewable: false});
+      }
+    }
+    if (changed.length > 0) {
+      this._viewableItems = nextItems;
+      onViewableItemsChanged({
+        viewableItems: Array.from(nextItems.values()),
+        changed,
+        viewabilityConfig: this._config,
+      });
+    }
+  }
+}
+
+function _isViewable(
+  viewAreaMode: boolean,
+  viewablePercentThreshold: number,
+  top: number,
+  bottom: number,
+  viewportHeight: number,
+  itemLength: number,
+): boolean {
+  if (_isEntirelyVisible(top, bottom, viewportHeight)) {
+    return true;
+  } else {
+    const pixels = _getPixelsVisible(top, bottom, viewportHeight);
+    const percent =
+      100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
+    return percent >= viewablePercentThreshold;
+  }
+}
+
+function _getPixelsVisible(
+  top: number,
+  bottom: number,
+  viewportHeight: number,
+): number {
+  const visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
+  return Math.max(0, visibleHeight);
+}
+
+function _isEntirelyVisible(
+  top: number,
+  bottom: number,
+  viewportHeight: number,
+): boolean {
+  return top >= 0 && bottom <= viewportHeight && bottom > top;
+}
 
 module.exports = ViewabilityHelper;
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizeUtils.js b/node_modules/react-native/Libraries/Lists/VirtualizeUtils.js
index 535d25b..3a70d9f 100644
--- a/node_modules/react-native/Libraries/Lists/VirtualizeUtils.js
+++ b/node_modules/react-native/Libraries/Lists/VirtualizeUtils.js
@@ -10,9 +10,249 @@
 
 'use strict';
 
-import {typeof keyExtractor as KeyExtractorType} from '@react-native/virtualized-lists';
+import type {FrameMetricProps} from './VirtualizedListProps';
 
-const keyExtractor: KeyExtractorType =
-  require('@react-native/virtualized-lists').keyExtractor;
+/**
+ * Used to find the indices of the frames that overlap the given offsets. Useful for finding the
+ * items that bound different windows of content, such as the visible area or the buffered overscan
+ * area.
+ */
+export function elementsThatOverlapOffsets(
+  offsets: Array<number>,
+  props: FrameMetricProps,
+  getFrameMetrics: (
+    index: number,
+    props: FrameMetricProps,
+  ) => {
+    length: number,
+    offset: number,
+    ...
+  },
+  zoomScale: number = 1,
+): Array<number> {
+  const itemCount = props.getItemCount(props.data);
+  const result = [];
+  for (let offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {
+    const currentOffset = offsets[offsetIndex];
+    let left = 0;
+    let right = itemCount - 1;
+
+    while (left <= right) {
+      // eslint-disable-next-line no-bitwise
+      const mid = left + ((right - left) >>> 1);
+      const frame = getFrameMetrics(mid, props);
+      const scaledOffsetStart = frame.offset * zoomScale;
+      const scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;
+
+      // We want the first frame that contains the offset, with inclusive bounds. Thus, for the
+      // first frame the scaledOffsetStart is inclusive, while for other frames it is exclusive.
+      if (
+        (mid === 0 && currentOffset < scaledOffsetStart) ||
+        (mid !== 0 && currentOffset <= scaledOffsetStart)
+      ) {
+        right = mid - 1;
+      } else if (currentOffset > scaledOffsetEnd) {
+        left = mid + 1;
+      } else {
+        result[offsetIndex] = mid;
+        break;
+      }
+    }
+  }
+
+  return result;
+}
+
+/**
+ * Computes the number of elements in the `next` range that are new compared to the `prev` range.
+ * Handy for calculating how many new items will be rendered when the render window changes so we
+ * can restrict the number of new items render at once so that content can appear on the screen
+ * faster.
+ */
+export function newRangeCount(
+  prev: {
+    first: number,
+    last: number,
+    ...
+  },
+  next: {
+    first: number,
+    last: number,
+    ...
+  },
+): number {
+  return (
+    next.last -
+    next.first +
+    1 -
+    Math.max(
+      0,
+      1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first),
+    )
+  );
+}
+
+/**
+ * Custom logic for determining which items should be rendered given the current frame and scroll
+ * metrics, as well as the previous render state. The algorithm may evolve over time, but generally
+ * prioritizes the visible area first, then expands that with overscan regions ahead and behind,
+ * biased in the direction of scroll.
+ */
+export function computeWindowedRenderLimits(
+  props: FrameMetricProps,
+  maxToRenderPerBatch: number,
+  windowSize: number,
+  prev: {
+    first: number,
+    last: number,
+  },
+  getFrameMetricsApprox: (
+    index: number,
+    props: FrameMetricProps,
+  ) => {
+    length: number,
+    offset: number,
+    ...
+  },
+  scrollMetrics: {
+    dt: number,
+    offset: number,
+    velocity: number,
+    visibleLength: number,
+    zoomScale: number,
+    ...
+  },
+): {
+  first: number,
+  last: number,
+} {
+  const itemCount = props.getItemCount(props.data);
+  if (itemCount === 0) {
+    return {first: 0, last: -1};
+  }
+  const {offset, velocity, visibleLength, zoomScale = 1} = scrollMetrics;
+
+  // Start with visible area, then compute maximum overscan region by expanding from there, biased
+  // in the direction of scroll. Total overscan area is capped, which should cap memory consumption
+  // too.
+  const visibleBegin = Math.max(0, offset);
+  const visibleEnd = visibleBegin + visibleLength;
+  const overscanLength = (windowSize - 1) * visibleLength;
+
+  // Considering velocity seems to introduce more churn than it's worth.
+  const leadFactor = 0.5; // Math.max(0, Math.min(1, velocity / 25 + 0.5));
+
+  const fillPreference =
+    velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';
+
+  const overscanBegin = Math.max(
+    0,
+    visibleBegin - (1 - leadFactor) * overscanLength,
+  );
+  const overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);
+
+  const lastItemOffset =
+    getFrameMetricsApprox(itemCount - 1, props).offset * zoomScale;
+  if (lastItemOffset < overscanBegin) {
+    // Entire list is before our overscan window
+    return {
+      first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),
+      last: itemCount - 1,
+    };
+  }
+
+  // Find the indices that correspond to the items at the render boundaries we're targeting.
+  let [overscanFirst, first, last, overscanLast] = elementsThatOverlapOffsets(
+    [overscanBegin, visibleBegin, visibleEnd, overscanEnd],
+    props,
+    getFrameMetricsApprox,
+    zoomScale,
+  );
+  overscanFirst = overscanFirst == null ? 0 : overscanFirst;
+  first = first == null ? Math.max(0, overscanFirst) : first;
+  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
+  last =
+    last == null
+      ? Math.min(overscanLast, first + maxToRenderPerBatch - 1)
+      : last;
+  const visible = {first, last};
+
+  // We want to limit the number of new cells we're rendering per batch so that we can fill the
+  // content on the screen quickly. If we rendered the entire overscan window at once, the user
+  // could be staring at white space for a long time waiting for a bunch of offscreen content to
+  // render.
+  let newCellCount = newRangeCount(prev, visible);
+
+  while (true) {
+    if (first <= overscanFirst && last >= overscanLast) {
+      // If we fill the entire overscan range, we're done.
+      break;
+    }
+    const maxNewCells = newCellCount >= maxToRenderPerBatch;
+    const firstWillAddMore = first <= prev.first || first > prev.last;
+    const firstShouldIncrement =
+      first > overscanFirst && (!maxNewCells || !firstWillAddMore);
+    const lastWillAddMore = last >= prev.last || last < prev.first;
+    const lastShouldIncrement =
+      last < overscanLast && (!maxNewCells || !lastWillAddMore);
+    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
+      // We only want to stop if we've hit maxNewCells AND we cannot increment first or last
+      // without rendering new items. This let's us preserve as many already rendered items as
+      // possible, reducing render churn and keeping the rendered overscan range as large as
+      // possible.
+      break;
+    }
+    if (
+      firstShouldIncrement &&
+      !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)
+    ) {
+      if (firstWillAddMore) {
+        newCellCount++;
+      }
+      first--;
+    }
+    if (
+      lastShouldIncrement &&
+      !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)
+    ) {
+      if (lastWillAddMore) {
+        newCellCount++;
+      }
+      last++;
+    }
+  }
+  if (
+    !(
+      last >= first &&
+      first >= 0 &&
+      last < itemCount &&
+      first >= overscanFirst &&
+      last <= overscanLast &&
+      first <= visible.first &&
+      last >= visible.last
+    )
+  ) {
+    throw new Error(
+      'Bad window calculation ' +
+        JSON.stringify({
+          first,
+          last,
+          itemCount,
+          overscanFirst,
+          overscanLast,
+          visible,
+        }),
+    );
+  }
+  return {first, last};
+}
 
-module.exports = {keyExtractor};
+export function keyExtractor(item: any, index: number): string {
+  if (typeof item === 'object' && item?.key != null) {
+    return item.key;
+  }
+  if (typeof item === 'object' && item?.id != null) {
+    return item.id;
+  }
+  return String(index);
+}
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts b/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts
new file mode 100644
index 0000000..eaef385
--- /dev/null
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts
@@ -0,0 +1,347 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+import type * as React from 'react';
+import type {LayoutChangeEvent} from '../../types';
+import {StyleProp} from '../StyleSheet/StyleSheet';
+import {ViewStyle} from '../StyleSheet/StyleSheetTypes';
+import type {
+  ScrollResponderMixin,
+  ScrollView,
+  ScrollViewProps,
+} from '../Components/ScrollView/ScrollView';
+import type {View} from '../Components/View/View';
+
+export interface ViewToken {
+  item: any;
+  key: string;
+  index: number | null;
+  isViewable: boolean;
+  section?: any;
+}
+
+export interface ViewabilityConfig {
+  /**
+   * Minimum amount of time (in milliseconds) that an item must be physically viewable before the
+   * viewability callback will be fired. A high number means that scrolling through content without
+   * stopping will not mark the content as viewable.
+   */
+  minimumViewTime?: number | undefined;
+
+  /**
+   * Percent of viewport that must be covered for a partially occluded item to count as
+   * "viewable", 0-100. Fully visible items are always considered viewable. A value of 0 means
+   * that a single pixel in the viewport makes the item viewable, and a value of 100 means that
+   * an item must be either entirely visible or cover the entire viewport to count as viewable.
+   */
+  viewAreaCoveragePercentThreshold?: number | undefined;
+
+  /**
+   * Similar to `viewAreaCoveragePercentThreshold`, but considers the percent of the item that is visible,
+   * rather than the fraction of the viewable area it covers.
+   */
+  itemVisiblePercentThreshold?: number | undefined;
+
+  /**
+   * Nothing is considered viewable until the user scrolls or `recordInteraction` is called after
+   * render.
+   */
+  waitForInteraction?: boolean | undefined;
+}
+
+export interface ViewabilityConfigCallbackPair {
+  viewabilityConfig: ViewabilityConfig;
+  onViewableItemsChanged:
+    | ((info: {
+        viewableItems: Array<ViewToken>;
+        changed: Array<ViewToken>;
+      }) => void)
+    | null;
+}
+
+export type ViewabilityConfigCallbackPairs = ViewabilityConfigCallbackPair[];
+
+/**
+ * @see https://reactnative.dev/docs/flatlist#props
+ */
+
+export interface ListRenderItemInfo<ItemT> {
+  item: ItemT;
+
+  index: number;
+
+  separators: {
+    highlight: () => void;
+    unhighlight: () => void;
+    updateProps: (select: 'leading' | 'trailing', newProps: any) => void;
+  };
+}
+
+export type ListRenderItem<ItemT> = (
+  info: ListRenderItemInfo<ItemT>,
+) => React.ReactElement | null;
+
+/**
+ * @see https://reactnative.dev/docs/virtualizedlist
+ */
+export class VirtualizedList<ItemT> extends React.Component<
+  VirtualizedListProps<ItemT>
+> {
+  scrollToEnd: (params?: {animated?: boolean | undefined}) => void;
+  scrollToIndex: (params: {
+    animated?: boolean | undefined;
+    index: number;
+    viewOffset?: number | undefined;
+    viewPosition?: number | undefined;
+  }) => void;
+  scrollToItem: (params: {
+    animated?: boolean | undefined;
+    item: ItemT;
+    viewOffset?: number | undefined;
+    viewPosition?: number | undefined;
+  }) => void;
+
+  /**
+   * Scroll to a specific content pixel offset in the list.
+   * Param `offset` expects the offset to scroll to. In case of horizontal is true, the
+   * offset is the x-value, in any other case the offset is the y-value.
+   * Param `animated` (true by default) defines whether the list should do an animation while scrolling.
+   */
+  scrollToOffset: (params: {
+    animated?: boolean | undefined;
+    offset: number;
+  }) => void;
+
+  recordInteraction: () => void;
+
+  getScrollRef: () =>
+    | React.ElementRef<typeof ScrollView>
+    | React.ElementRef<typeof View>
+    | null;
+
+  getScrollResponder: () => ScrollResponderMixin | null;
+}
+
+/**
+ * @see https://reactnative.dev/docs/virtualizedlist#props
+ */
+
+export interface VirtualizedListProps<ItemT>
+  extends VirtualizedListWithoutRenderItemProps<ItemT> {
+  renderItem: ListRenderItem<ItemT> | null | undefined;
+}
+
+export interface VirtualizedListWithoutRenderItemProps<ItemT>
+  extends ScrollViewProps {
+  /**
+   * Rendered in between each item, but not at the top or bottom
+   */
+  ItemSeparatorComponent?: React.ComponentType<any> | null | undefined;
+
+  /**
+   * Rendered when the list is empty. Can be a React Component Class, a render function, or
+   * a rendered element.
+   */
+  ListEmptyComponent?:
+    | React.ComponentType<any>
+    | React.ReactElement
+    | null
+    | undefined;
+
+  /**
+   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or
+   * a rendered element.
+   */
+  ListFooterComponent?:
+    | React.ComponentType<any>
+    | React.ReactElement
+    | null
+    | undefined;
+
+  /**
+   * Styling for internal View for ListFooterComponent
+   */
+  ListFooterComponentStyle?: StyleProp<ViewStyle> | undefined;
+
+  /**
+   * Rendered at the top of all the items. Can be a React Component Class, a render function, or
+   * a rendered element.
+   */
+  ListHeaderComponent?:
+    | React.ComponentType<any>
+    | React.ReactElement
+    | null
+    | undefined;
+
+  /**
+   * Styling for internal View for ListHeaderComponent
+   */
+  ListHeaderComponentStyle?: StyleProp<ViewStyle> | undefined;
+
+  /**
+   * The default accessor functions assume this is an Array<{key: string}> but you can override
+   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.
+   */
+  data?: any;
+
+  /**
+   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and
+   * implementation, but with a significant perf hit.
+   */
+  debug?: boolean | undefined;
+
+  /**
+   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully
+   * unmounts react instances that are outside of the render window. You should only need to disable
+   * this for debugging purposes.
+   */
+  disableVirtualization?: boolean | undefined;
+
+  /**
+   * A marker property for telling the list to re-render (since it implements `PureComponent`). If
+   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the
+   * `data` prop, stick it here and treat it immutably.
+   */
+  extraData?: any;
+
+  /**
+   * A generic accessor for extracting an item from any sort of data blob.
+   */
+  getItem?: ((data: any, index: number) => ItemT) | undefined;
+
+  /**
+   * Determines how many items are in the data blob.
+   */
+  getItemCount?: ((data: any) => number) | undefined;
+
+  getItemLayout?:
+    | ((
+        data: any,
+        index: number,
+      ) => {
+        length: number;
+        offset: number;
+        index: number;
+      })
+    | undefined;
+
+  horizontal?: boolean | null | undefined;
+
+  /**
+   * How many items to render in the initial batch. This should be enough to fill the screen but not
+   * much more. Note these items will never be unmounted as part of the windowed rendering in order
+   * to improve perceived performance of scroll-to-top actions.
+   */
+  initialNumToRender?: number | undefined;
+
+  /**
+   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This
+   * disables the "scroll to top" optimization that keeps the first `initialNumToRender` items
+   * always rendered and immediately renders the items starting at this initial index. Requires
+   * `getItemLayout` to be implemented.
+   */
+  initialScrollIndex?: number | null | undefined;
+
+  /**
+   * Reverses the direction of scroll. Uses scale transforms of -1.
+   */
+  inverted?: boolean | null | undefined;
+
+  keyExtractor?: ((item: ItemT, index: number) => string) | undefined;
+
+  /**
+   * The maximum number of items to render in each incremental render batch. The more rendered at
+   * once, the better the fill rate, but responsiveness my suffer because rendering content may
+   * interfere with responding to button taps or other interactions.
+   */
+  maxToRenderPerBatch?: number | undefined;
+
+  onEndReached?: ((info: {distanceFromEnd: number}) => void) | null | undefined;
+
+  onEndReachedThreshold?: number | null | undefined;
+
+  onLayout?: ((event: LayoutChangeEvent) => void) | undefined;
+
+  /**
+   * If provided, a standard RefreshControl will be added for "Pull to Refresh" functionality. Make
+   * sure to also set the `refreshing` prop correctly.
+   */
+  onRefresh?: (() => void) | null | undefined;
+
+  /**
+   * Used to handle failures when scrolling to an index that has not been measured yet.
+   * Recommended action is to either compute your own offset and `scrollTo` it, or scroll as far
+   * as possible and then try again after more items have been rendered.
+   */
+  onScrollToIndexFailed?:
+    | ((info: {
+        index: number;
+        highestMeasuredFrameIndex: number;
+        averageItemLength: number;
+      }) => void)
+    | undefined;
+
+  /**
+   * Called when the viewability of rows changes, as defined by the
+   * `viewabilityConfig` prop.
+   */
+  onViewableItemsChanged?:
+    | ((info: {
+        viewableItems: Array<ViewToken>;
+        changed: Array<ViewToken>;
+      }) => void)
+    | null
+    | undefined;
+
+  /**
+   * Set this when offset is needed for the loading indicator to show correctly.
+   * @platform android
+   */
+  progressViewOffset?: number | undefined;
+
+  /**
+   * Set this true while waiting for new data from a refresh.
+   */
+  refreshing?: boolean | null | undefined;
+
+  /**
+   * Note: may have bugs (missing content) in some circumstances - use at your own risk.
+   *
+   * This may improve scroll performance for large lists.
+   */
+  removeClippedSubviews?: boolean | undefined;
+
+  /**
+   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.
+   */
+  renderScrollComponent?:
+    | ((props: ScrollViewProps) => React.ReactElement<ScrollViewProps>)
+    | undefined;
+
+  /**
+   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off
+   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.
+   */
+  updateCellsBatchingPeriod?: number | undefined;
+
+  viewabilityConfig?: ViewabilityConfig | undefined;
+
+  viewabilityConfigCallbackPairs?: ViewabilityConfigCallbackPairs | undefined;
+
+  /**
+   * Determines the maximum number of items rendered outside of the visible area, in units of
+   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will
+   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing
+   * this number will reduce memory consumption and may improve performance, but will increase the
+   * chance that fast scrolling may reveal momentary blank areas of unrendered content.
+   */
+  windowSize?: number | undefined;
+
+  CellRendererComponent?: React.ComponentType<any> | undefined;
+}
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedList.js b/node_modules/react-native/Libraries/Lists/VirtualizedList.js
index 2488b1e..4534330 100644
--- a/node_modules/react-native/Libraries/Lists/VirtualizedList.js
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedList.js
@@ -8,16 +8,1876 @@
  * @format
  */
 
-'use strict';
-
-import {typeof VirtualizedList as VirtualizedListType} from '@react-native/virtualized-lists';
-
-const VirtualizedList: VirtualizedListType =
-  require('@react-native/virtualized-lists').VirtualizedList;
-
-export type {
+import type {ScrollResponderType} from '../Components/ScrollView/ScrollView';
+import type {ViewStyleProp} from '../StyleSheet/StyleSheet';
+import type {LayoutEvent, ScrollEvent} from '../Types/CoreEventTypes';
+import type {ViewToken} from './ViewabilityHelper';
+import type {
+  FrameMetricProps,
+  Item,
+  Props,
   RenderItemProps,
   RenderItemType,
   Separators,
-} from '@react-native/virtualized-lists';
-module.exports = VirtualizedList;
+} from './VirtualizedListProps';
+
+import RefreshControl from '../Components/RefreshControl/RefreshControl';
+import ScrollView from '../Components/ScrollView/ScrollView';
+import View from '../Components/View/View';
+import Batchinator from '../Interaction/Batchinator';
+import {findNodeHandle} from '../ReactNative/RendererProxy';
+import flattenStyle from '../StyleSheet/flattenStyle';
+import StyleSheet from '../StyleSheet/StyleSheet';
+import clamp from '../Utilities/clamp';
+import infoLog from '../Utilities/infoLog';
+import {CellRenderMask} from './CellRenderMask';
+import ChildListCollection from './ChildListCollection';
+import FillRateHelper from './FillRateHelper';
+import StateSafePureComponent from './StateSafePureComponent';
+import ViewabilityHelper from './ViewabilityHelper';
+import CellRenderer from './VirtualizedListCellRenderer';
+import {
+  VirtualizedListCellContextProvider,
+  VirtualizedListContext,
+  VirtualizedListContextProvider,
+} from './VirtualizedListContext.js';
+import {
+  computeWindowedRenderLimits,
+  keyExtractor as defaultKeyExtractor,
+} from './VirtualizeUtils';
+import invariant from 'invariant';
+import * as React from 'react';
+
+export type {RenderItemProps, RenderItemType, Separators};
+
+const ON_END_REACHED_EPSILON = 0.001;
+
+let _usedIndexForKey = false;
+let _keylessItemComponentName: string = '';
+
+type ViewabilityHelperCallbackTuple = {
+  viewabilityHelper: ViewabilityHelper,
+  onViewableItemsChanged: (info: {
+    viewableItems: Array<ViewToken>,
+    changed: Array<ViewToken>,
+    ...
+  }) => void,
+  ...
+};
+
+type State = {
+  renderMask: CellRenderMask,
+  cellsAroundViewport: {first: number, last: number},
+};
+
+/**
+ * Default Props Helper Functions
+ * Use the following helper functions for default values
+ */
+
+// horizontalOrDefault(this.props.horizontal)
+function horizontalOrDefault(horizontal: ?boolean) {
+  return horizontal ?? false;
+}
+
+// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)
+function initialNumToRenderOrDefault(initialNumToRender: ?number) {
+  return initialNumToRender ?? 10;
+}
+
+// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)
+function maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {
+  return maxToRenderPerBatch ?? 10;
+}
+
+// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)
+function onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {
+  return onEndReachedThreshold ?? 2;
+}
+
+// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)
+function scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {
+  return scrollEventThrottle ?? 50;
+}
+
+// windowSizeOrDefault(this.props.windowSize)
+function windowSizeOrDefault(windowSize: ?number) {
+  return windowSize ?? 21;
+}
+
+function findLastWhere<T>(
+  arr: $ReadOnlyArray<T>,
+  predicate: (element: T) => boolean,
+): T | null {
+  for (let i = arr.length - 1; i >= 0; i--) {
+    if (predicate(arr[i])) {
+      return arr[i];
+    }
+  }
+
+  return null;
+}
+
+/**
+ * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)
+ * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better
+ * documented. In general, this should only really be used if you need more flexibility than
+ * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.
+ *
+ * Virtualization massively improves memory consumption and performance of large lists by
+ * maintaining a finite render window of active items and replacing all items outside of the render
+ * window with appropriately sized blank space. The window adapts to scrolling behavior, and items
+ * are rendered incrementally with low-pri (after any running interactions) if they are far from the
+ * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.
+ *
+ * Some caveats:
+ *
+ * - Internal state is not preserved when content scrolls out of the render window. Make sure all
+ *   your data is captured in the item data or external stores like Flux, Redux, or Relay.
+ * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-
+ *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop
+ *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on
+ *   changes. This includes the `data` prop and parent component state.
+ * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously
+ *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see
+ *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,
+ *   and we are working on improving it behind the scenes.
+ * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.
+ *   Alternatively, you can provide a custom `keyExtractor` prop.
+ * - As an effort to remove defaultProps, use helper functions when referencing certain props
+ *
+ */
+export default class VirtualizedList extends StateSafePureComponent<
+  Props,
+  State,
+> {
+  static contextType: typeof VirtualizedListContext = VirtualizedListContext;
+
+  // scrollToEnd may be janky without getItemLayout prop
+  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {
+    const animated = params ? params.animated : true;
+    const veryLast = this.props.getItemCount(this.props.data) - 1;
+    if (veryLast < 0) {
+      return;
+    }
+    const frame = this.__getFrameMetricsApprox(veryLast, this.props);
+    const offset = Math.max(
+      0,
+      frame.offset +
+        frame.length +
+        this._footerLength -
+        this._scrollMetrics.visibleLength,
+    );
+
+    if (this._scrollRef == null) {
+      return;
+    }
+
+    if (this._scrollRef.scrollTo == null) {
+      console.warn(
+        'No scrollTo method provided. This may be because you have two nested ' +
+          'VirtualizedLists with the same orientation, or because you are ' +
+          'using a custom component that does not implement scrollTo.',
+      );
+      return;
+    }
+
+    this._scrollRef.scrollTo(
+      horizontalOrDefault(this.props.horizontal)
+        ? {x: offset, animated}
+        : {y: offset, animated},
+    );
+  }
+
+  // scrollToIndex may be janky without getItemLayout prop
+  scrollToIndex(params: {
+    animated?: ?boolean,
+    index: number,
+    viewOffset?: number,
+    viewPosition?: number,
+    ...
+  }): $FlowFixMe {
+    const {
+      data,
+      horizontal,
+      getItemCount,
+      getItemLayout,
+      onScrollToIndexFailed,
+    } = this.props;
+    const {animated, index, viewOffset, viewPosition} = params;
+    invariant(
+      index >= 0,
+      `scrollToIndex out of range: requested index ${index} but minimum is 0`,
+    );
+    invariant(
+      getItemCount(data) >= 1,
+      `scrollToIndex out of range: item length ${getItemCount(
+        data,
+      )} but minimum is 1`,
+    );
+    invariant(
+      index < getItemCount(data),
+      `scrollToIndex out of range: requested index ${index} is out of 0 to ${
+        getItemCount(data) - 1
+      }`,
+    );
+    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {
+      invariant(
+        !!onScrollToIndexFailed,
+        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +
+          'otherwise there is no way to know the location of offscreen indices or handle failures.',
+      );
+      onScrollToIndexFailed({
+        averageItemLength: this._averageCellLength,
+        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,
+        index,
+      });
+      return;
+    }
+    const frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);
+    const offset =
+      Math.max(
+        0,
+        this._getOffsetApprox(index, this.props) -
+          (viewPosition || 0) *
+            (this._scrollMetrics.visibleLength - frame.length),
+      ) - (viewOffset || 0);
+
+    if (this._scrollRef == null) {
+      return;
+    }
+
+    if (this._scrollRef.scrollTo == null) {
+      console.warn(
+        'No scrollTo method provided. This may be because you have two nested ' +
+          'VirtualizedLists with the same orientation, or because you are ' +
+          'using a custom component that does not implement scrollTo.',
+      );
+      return;
+    }
+
+    this._scrollRef.scrollTo(
+      horizontal ? {x: offset, animated} : {y: offset, animated},
+    );
+  }
+
+  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -
+  // use scrollToIndex instead if possible.
+  scrollToItem(params: {
+    animated?: ?boolean,
+    item: Item,
+    viewOffset?: number,
+    viewPosition?: number,
+    ...
+  }) {
+    const {item} = params;
+    const {data, getItem, getItemCount} = this.props;
+    const itemCount = getItemCount(data);
+    for (let index = 0; index < itemCount; index++) {
+      if (getItem(data, index) === item) {
+        this.scrollToIndex({...params, index});
+        break;
+      }
+    }
+  }
+
+  /**
+   * Scroll to a specific content pixel offset in the list.
+   *
+   * Param `offset` expects the offset to scroll to.
+   * In case of `horizontal` is true, the offset is the x-value,
+   * in any other case the offset is the y-value.
+   *
+   * Param `animated` (`true` by default) defines whether the list
+   * should do an animation while scrolling.
+   */
+  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {
+    const {animated, offset} = params;
+
+    if (this._scrollRef == null) {
+      return;
+    }
+
+    if (this._scrollRef.scrollTo == null) {
+      console.warn(
+        'No scrollTo method provided. This may be because you have two nested ' +
+          'VirtualizedLists with the same orientation, or because you are ' +
+          'using a custom component that does not implement scrollTo.',
+      );
+      return;
+    }
+
+    this._scrollRef.scrollTo(
+      horizontalOrDefault(this.props.horizontal)
+        ? {x: offset, animated}
+        : {y: offset, animated},
+    );
+  }
+
+  recordInteraction() {
+    this._nestedChildLists.forEach(childList => {
+      childList.recordInteraction();
+    });
+    this._viewabilityTuples.forEach(t => {
+      t.viewabilityHelper.recordInteraction();
+    });
+    this._updateViewableItems(this.props, this.state.cellsAroundViewport);
+  }
+
+  flashScrollIndicators() {
+    if (this._scrollRef == null) {
+      return;
+    }
+
+    this._scrollRef.flashScrollIndicators();
+  }
+
+  /**
+   * Provides a handle to the underlying scroll responder.
+   * Note that `this._scrollRef` might not be a `ScrollView`, so we
+   * need to check that it responds to `getScrollResponder` before calling it.
+   */
+  getScrollResponder(): ?ScrollResponderType {
+    if (this._scrollRef && this._scrollRef.getScrollResponder) {
+      return this._scrollRef.getScrollResponder();
+    }
+  }
+
+  getScrollableNode(): ?number {
+    if (this._scrollRef && this._scrollRef.getScrollableNode) {
+      return this._scrollRef.getScrollableNode();
+    } else {
+      return findNodeHandle(this._scrollRef);
+    }
+  }
+
+  getScrollRef():
+    | ?React.ElementRef<typeof ScrollView>
+    | ?React.ElementRef<typeof View> {
+    if (this._scrollRef && this._scrollRef.getScrollRef) {
+      return this._scrollRef.getScrollRef();
+    } else {
+      return this._scrollRef;
+    }
+  }
+
+  setNativeProps(props: Object) {
+    if (this._scrollRef) {
+      this._scrollRef.setNativeProps(props);
+    }
+  }
+
+  _getCellKey(): string {
+    return this.context?.cellKey || 'rootList';
+  }
+
+  // $FlowFixMe[missing-local-annot]
+  _getScrollMetrics = () => {
+    return this._scrollMetrics;
+  };
+
+  hasMore(): boolean {
+    return this._hasMore;
+  }
+
+  // $FlowFixMe[missing-local-annot]
+  _getOutermostParentListRef = () => {
+    if (this._isNestedWithSameOrientation()) {
+      return this.context.getOutermostParentListRef();
+    } else {
+      return this;
+    }
+  };
+
+  _registerAsNestedChild = (childList: {
+    cellKey: string,
+    ref: React.ElementRef<typeof VirtualizedList>,
+  }): void => {
+    this._nestedChildLists.add(childList.ref, childList.cellKey);
+    if (this._hasInteracted) {
+      childList.ref.recordInteraction();
+    }
+  };
+
+  _unregisterAsNestedChild = (childList: {
+    ref: React.ElementRef<typeof VirtualizedList>,
+  }): void => {
+    this._nestedChildLists.remove(childList.ref);
+  };
+
+  state: State;
+
+  constructor(props: Props) {
+    super(props);
+    invariant(
+      // $FlowFixMe[prop-missing]
+      !props.onScroll || !props.onScroll.__isNative,
+      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +
+        'to support native onScroll events with useNativeDriver',
+    );
+    invariant(
+      windowSizeOrDefault(props.windowSize) > 0,
+      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',
+    );
+
+    invariant(
+      props.getItemCount,
+      'VirtualizedList: The "getItemCount" prop must be provided',
+    );
+
+    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);
+    this._updateCellsToRenderBatcher = new Batchinator(
+      this._updateCellsToRender,
+      this.props.updateCellsBatchingPeriod ?? 50,
+    );
+
+    if (this.props.viewabilityConfigCallbackPairs) {
+      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(
+        pair => ({
+          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),
+          onViewableItemsChanged: pair.onViewableItemsChanged,
+        }),
+      );
+    } else {
+      const {onViewableItemsChanged, viewabilityConfig} = this.props;
+      if (onViewableItemsChanged) {
+        this._viewabilityTuples.push({
+          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),
+          onViewableItemsChanged: onViewableItemsChanged,
+        });
+      }
+    }
+
+    invariant(
+      !this.context,
+      'Unexpectedly saw VirtualizedListContext available in ctor',
+    );
+
+    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);
+
+    this.state = {
+      cellsAroundViewport: initialRenderRegion,
+      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),
+    };
+  }
+
+  static _createRenderMask(
+    props: Props,
+    cellsAroundViewport: {first: number, last: number},
+    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,
+  ): CellRenderMask {
+    const itemCount = props.getItemCount(props.data);
+
+    invariant(
+      cellsAroundViewport.first >= 0 &&
+        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&
+        cellsAroundViewport.last < itemCount,
+      `Invalid cells around viewport "[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]" was passed to VirtualizedList._createRenderMask`,
+    );
+
+    const renderMask = new CellRenderMask(itemCount);
+
+    if (itemCount > 0) {
+      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];
+      for (const region of allRegions) {
+        renderMask.addCells(region);
+      }
+
+      // The initially rendered cells are retained as part of the
+      // "scroll-to-top" optimization
+      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {
+        const initialRegion = VirtualizedList._initialRenderRegion(props);
+        renderMask.addCells(initialRegion);
+      }
+
+      // The layout coordinates of sticker headers may be off-screen while the
+      // actual header is on-screen. Keep the most recent before the viewport
+      // rendered, even if its layout coordinates are not in viewport.
+      const stickyIndicesSet = new Set(props.stickyHeaderIndices);
+      VirtualizedList._ensureClosestStickyHeader(
+        props,
+        stickyIndicesSet,
+        renderMask,
+        cellsAroundViewport.first,
+      );
+    }
+
+    return renderMask;
+  }
+
+  static _initialRenderRegion(props: Props): {first: number, last: number} {
+    const itemCount = props.getItemCount(props.data);
+    const scrollIndex = Math.floor(Math.max(0, props.initialScrollIndex ?? 0));
+
+    return {
+      first: scrollIndex,
+      last:
+        Math.min(
+          itemCount,
+          scrollIndex + initialNumToRenderOrDefault(props.initialNumToRender),
+        ) - 1,
+    };
+  }
+
+  static _ensureClosestStickyHeader(
+    props: Props,
+    stickyIndicesSet: Set<number>,
+    renderMask: CellRenderMask,
+    cellIdx: number,
+  ) {
+    const stickyOffset = props.ListHeaderComponent ? 1 : 0;
+
+    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {
+      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {
+        renderMask.addCells({first: itemIdx, last: itemIdx});
+        break;
+      }
+    }
+  }
+
+  _adjustCellsAroundViewport(
+    props: Props,
+    cellsAroundViewport: {first: number, last: number},
+  ): {first: number, last: number} {
+    const {data, getItemCount} = props;
+    const onEndReachedThreshold = onEndReachedThresholdOrDefault(
+      props.onEndReachedThreshold,
+    );
+    this._updateViewableItems(props, cellsAroundViewport);
+
+    const {contentLength, offset, visibleLength} = this._scrollMetrics;
+    const distanceFromEnd = contentLength - visibleLength - offset;
+
+    // Wait until the scroll view metrics have been set up. And until then,
+    // we will trust the initialNumToRender suggestion
+    if (visibleLength <= 0 || contentLength <= 0) {
+      return cellsAroundViewport.last >= getItemCount(data)
+        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)
+        : cellsAroundViewport;
+    }
+
+    let newCellsAroundViewport: {first: number, last: number};
+    if (props.disableVirtualization) {
+      const renderAhead =
+        distanceFromEnd < onEndReachedThreshold * visibleLength
+          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)
+          : 0;
+
+      newCellsAroundViewport = {
+        first: 0,
+        last: Math.min(
+          cellsAroundViewport.last + renderAhead,
+          getItemCount(data) - 1,
+        ),
+      };
+    } else {
+      // If we have a non-zero initialScrollIndex and run this before we've scrolled,
+      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.
+      // So let's wait until we've scrolled the view to the right place. And until then,
+      // we will trust the initialScrollIndex suggestion.
+
+      // Thus, we want to recalculate the windowed render limits if any of the following hold:
+      // - initialScrollIndex is undefined or is 0
+      // - initialScrollIndex > 0 AND scrolling is complete
+      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case
+      //   where the list is shorter than the visible area)
+      if (
+        props.initialScrollIndex &&
+        !this._scrollMetrics.offset &&
+        Math.abs(distanceFromEnd) >= Number.EPSILON
+      ) {
+        return cellsAroundViewport.last >= getItemCount(data)
+          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)
+          : cellsAroundViewport;
+      }
+
+      newCellsAroundViewport = computeWindowedRenderLimits(
+        props,
+        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),
+        windowSizeOrDefault(props.windowSize),
+        cellsAroundViewport,
+        this.__getFrameMetricsApprox,
+        this._scrollMetrics,
+      );
+      invariant(
+        newCellsAroundViewport.last < getItemCount(data),
+        'computeWindowedRenderLimits() should return range in-bounds',
+      );
+    }
+
+    if (this._nestedChildLists.size() > 0) {
+      // If some cell in the new state has a child list in it, we should only render
+      // up through that item, so that we give that list a chance to render.
+      // Otherwise there's churn from multiple child lists mounting and un-mounting
+      // their items.
+
+      // Will this prevent rendering if the nested list doesn't realize the end?
+      const childIdx = this._findFirstChildWithMore(
+        newCellsAroundViewport.first,
+        newCellsAroundViewport.last,
+      );
+
+      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;
+    }
+
+    return newCellsAroundViewport;
+  }
+
+  _findFirstChildWithMore(first: number, last: number): number | null {
+    for (let ii = first; ii <= last; ii++) {
+      const cellKeyForIndex = this._indicesToKeys.get(ii);
+      if (
+        cellKeyForIndex != null &&
+        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>
+          childList.hasMore(),
+        )
+      ) {
+        return ii;
+      }
+    }
+
+    return null;
+  }
+
+  componentDidMount() {
+    if (this._isNestedWithSameOrientation()) {
+      this.context.registerAsNestedChild({
+        ref: this,
+        cellKey: this.context.cellKey,
+      });
+    }
+  }
+
+  componentWillUnmount() {
+    if (this._isNestedWithSameOrientation()) {
+      this.context.unregisterAsNestedChild({ref: this});
+    }
+    this._updateCellsToRenderBatcher.dispose({abort: true});
+    this._viewabilityTuples.forEach(tuple => {
+      tuple.viewabilityHelper.dispose();
+    });
+    this._fillRateHelper.deactivateAndFlush();
+  }
+
+  static getDerivedStateFromProps(newProps: Props, prevState: State): State {
+    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make
+    // sure we're rendering a reasonable range here.
+    const itemCount = newProps.getItemCount(newProps.data);
+    if (itemCount === prevState.renderMask.numCells()) {
+      return prevState;
+    }
+
+    const constrainedCells = VirtualizedList._constrainToItemCount(
+      prevState.cellsAroundViewport,
+      newProps,
+    );
+
+    return {
+      cellsAroundViewport: constrainedCells,
+      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),
+    };
+  }
+
+  _pushCells(
+    cells: Array<Object>,
+    stickyHeaderIndices: Array<number>,
+    stickyIndicesFromProps: Set<number>,
+    first: number,
+    last: number,
+    inversionStyle: ViewStyleProp,
+  ) {
+    const {
+      CellRendererComponent,
+      ItemSeparatorComponent,
+      ListHeaderComponent,
+      ListItemComponent,
+      data,
+      debug,
+      getItem,
+      getItemCount,
+      getItemLayout,
+      horizontal,
+      renderItem,
+    } = this.props;
+    const stickyOffset = ListHeaderComponent ? 1 : 0;
+    const end = getItemCount(data) - 1;
+    let prevCellKey;
+    last = Math.min(end, last);
+    for (let ii = first; ii <= last; ii++) {
+      const item = getItem(data, ii);
+      const key = this._keyExtractor(item, ii, this.props);
+      this._indicesToKeys.set(ii, key);
+      if (stickyIndicesFromProps.has(ii + stickyOffset)) {
+        stickyHeaderIndices.push(cells.length);
+      }
+      cells.push(
+        <CellRenderer
+          CellRendererComponent={CellRendererComponent}
+          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}
+          ListItemComponent={ListItemComponent}
+          cellKey={key}
+          debug={debug}
+          fillRateHelper={this._fillRateHelper}
+          getItemLayout={getItemLayout}
+          horizontal={horizontal}
+          index={ii}
+          inversionStyle={inversionStyle}
+          item={item}
+          key={key}
+          prevCellKey={prevCellKey}
+          onCellLayout={this._onCellLayout}
+          onUpdateSeparators={this._onUpdateSeparators}
+          onCellFocusCapture={e => this._onCellFocusCapture(key)}
+          onUnmount={this._onCellUnmount}
+          ref={ref => {
+            this._cellRefs[key] = ref;
+          }}
+          renderItem={renderItem}
+        />,
+      );
+      prevCellKey = key;
+    }
+  }
+
+  static _constrainToItemCount(
+    cells: {first: number, last: number},
+    props: Props,
+  ): {first: number, last: number} {
+    const itemCount = props.getItemCount(props.data);
+    const last = Math.min(itemCount - 1, cells.last);
+
+    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(
+      props.maxToRenderPerBatch,
+    );
+
+    return {
+      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),
+      last,
+    };
+  }
+
+  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {
+    keys.forEach(key => {
+      const ref = key != null && this._cellRefs[key];
+      ref && ref.updateSeparatorProps(newProps);
+    });
+  };
+
+  _isNestedWithSameOrientation(): boolean {
+    const nestedContext = this.context;
+    return !!(
+      nestedContext &&
+      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)
+    );
+  }
+
+  _getSpacerKey = (isVertical: boolean): string =>
+    isVertical ? 'height' : 'width';
+
+  _keyExtractor(
+    item: Item,
+    index: number,
+    props: {
+      keyExtractor?: ?(item: Item, index: number) => string,
+      ...
+    },
+    // $FlowFixMe[missing-local-annot]
+  ) {
+    if (props.keyExtractor != null) {
+      return props.keyExtractor(item, index);
+    }
+
+    const key = defaultKeyExtractor(item, index);
+    if (key === String(index)) {
+      _usedIndexForKey = true;
+      if (item.type && item.type.displayName) {
+        _keylessItemComponentName = item.type.displayName;
+      }
+    }
+    return key;
+  }
+
+  render(): React.Node {
+    if (__DEV__) {
+      const flatStyles = flattenStyle(this.props.contentContainerStyle);
+      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {
+        console.warn(
+          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +
+            'Consider using `numColumns` with `FlatList` instead.',
+        );
+      }
+    }
+    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =
+      this.props;
+    const {data, horizontal} = this.props;
+    const inversionStyle = this.props.inverted
+      ? horizontalOrDefault(this.props.horizontal)
+        ? styles.horizontallyInverted
+        : styles.verticallyInverted
+      : null;
+    const cells: Array<any | React.Node> = [];
+    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
+    const stickyHeaderIndices = [];
+
+    // 1. Add cell for ListHeaderComponent
+    if (ListHeaderComponent) {
+      if (stickyIndicesFromProps.has(0)) {
+        stickyHeaderIndices.push(0);
+      }
+      const element = React.isValidElement(ListHeaderComponent) ? (
+        ListHeaderComponent
+      ) : (
+        // $FlowFixMe[not-a-component]
+        // $FlowFixMe[incompatible-type-arg]
+        <ListHeaderComponent />
+      );
+      cells.push(
+        <VirtualizedListCellContextProvider
+          cellKey={this._getCellKey() + '-header'}
+          key="$header">
+          <View
+            onLayout={this._onLayoutHeader}
+            style={StyleSheet.compose(
+              inversionStyle,
+              this.props.ListHeaderComponentStyle,
+            )}>
+            {
+              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors
+              element
+            }
+          </View>
+        </VirtualizedListCellContextProvider>,
+      );
+    }
+
+    // 2a. Add a cell for ListEmptyComponent if applicable
+    const itemCount = this.props.getItemCount(data);
+    if (itemCount === 0 && ListEmptyComponent) {
+      const element: React.Element<any> = ((React.isValidElement(
+        ListEmptyComponent,
+      ) ? (
+        ListEmptyComponent
+      ) : (
+        // $FlowFixMe[not-a-component]
+        // $FlowFixMe[incompatible-type-arg]
+        <ListEmptyComponent />
+      )): any);
+      cells.push(
+        <VirtualizedListCellContextProvider
+          cellKey={this._getCellKey() + '-empty'}
+          key="$empty">
+          {React.cloneElement(element, {
+            onLayout: (event: LayoutEvent) => {
+              this._onLayoutEmpty(event);
+              if (element.props.onLayout) {
+                element.props.onLayout(event);
+              }
+            },
+            style: StyleSheet.compose(inversionStyle, element.props.style),
+          })}
+        </VirtualizedListCellContextProvider>,
+      );
+    }
+
+    // 2b. Add cells and spacers for each item
+    if (itemCount > 0) {
+      _usedIndexForKey = false;
+      _keylessItemComponentName = '';
+      const spacerKey = this._getSpacerKey(!horizontal);
+
+      const renderRegions = this.state.renderMask.enumerateRegions();
+      const lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);
+
+      for (const section of renderRegions) {
+        if (section.isSpacer) {
+          // Legacy behavior is to avoid spacers when virtualization is
+          // disabled (including head spacers on initial render).
+          if (this.props.disableVirtualization) {
+            continue;
+          }
+
+          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to
+          // prevent the user for hyperscrolling into un-measured area because otherwise content will
+          // likely jump around as it renders in above the viewport.
+          const isLastSpacer = section === lastSpacer;
+          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;
+          const last = constrainToMeasured
+            ? clamp(
+                section.first - 1,
+                section.last,
+                this._highestMeasuredFrameIndex,
+              )
+            : section.last;
+
+          const firstMetrics = this.__getFrameMetricsApprox(
+            section.first,
+            this.props,
+          );
+          const lastMetrics = this.__getFrameMetricsApprox(last, this.props);
+          const spacerSize =
+            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;
+          cells.push(
+            <View
+              key={`$spacer-${section.first}`}
+              style={{[spacerKey]: spacerSize}}
+            />,
+          );
+        } else {
+          this._pushCells(
+            cells,
+            stickyHeaderIndices,
+            stickyIndicesFromProps,
+            section.first,
+            section.last,
+            inversionStyle,
+          );
+        }
+      }
+
+      if (!this._hasWarned.keys && _usedIndexForKey) {
+        console.warn(
+          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +
+            'item or provide a custom keyExtractor.',
+          _keylessItemComponentName,
+        );
+        this._hasWarned.keys = true;
+      }
+    }
+
+    // 3. Add cell for ListFooterComponent
+    if (ListFooterComponent) {
+      const element = React.isValidElement(ListFooterComponent) ? (
+        ListFooterComponent
+      ) : (
+        // $FlowFixMe[not-a-component]
+        // $FlowFixMe[incompatible-type-arg]
+        <ListFooterComponent />
+      );
+      cells.push(
+        <VirtualizedListCellContextProvider
+          cellKey={this._getFooterCellKey()}
+          key="$footer">
+          <View
+            onLayout={this._onLayoutFooter}
+            style={StyleSheet.compose(
+              inversionStyle,
+              this.props.ListFooterComponentStyle,
+            )}>
+            {
+              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors
+              element
+            }
+          </View>
+        </VirtualizedListCellContextProvider>,
+      );
+    }
+
+    // 4. Render the ScrollView
+    const scrollProps = {
+      ...this.props,
+      onContentSizeChange: this._onContentSizeChange,
+      onLayout: this._onLayout,
+      onScroll: this._onScroll,
+      onScrollBeginDrag: this._onScrollBeginDrag,
+      onScrollEndDrag: this._onScrollEndDrag,
+      onMomentumScrollBegin: this._onMomentumScrollBegin,
+      onMomentumScrollEnd: this._onMomentumScrollEnd,
+      scrollEventThrottle: scrollEventThrottleOrDefault(
+        this.props.scrollEventThrottle,
+      ), // TODO: Android support
+      invertStickyHeaders:
+        this.props.invertStickyHeaders !== undefined
+          ? this.props.invertStickyHeaders
+          : this.props.inverted,
+      stickyHeaderIndices,
+      style: inversionStyle
+        ? [inversionStyle, this.props.style]
+        : this.props.style,
+    };
+
+    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;
+
+    const innerRet = (
+      <VirtualizedListContextProvider
+        value={{
+          cellKey: null,
+          getScrollMetrics: this._getScrollMetrics,
+          horizontal: horizontalOrDefault(this.props.horizontal),
+          getOutermostParentListRef: this._getOutermostParentListRef,
+          registerAsNestedChild: this._registerAsNestedChild,
+          unregisterAsNestedChild: this._unregisterAsNestedChild,
+        }}>
+        {React.cloneElement(
+          (
+            this.props.renderScrollComponent ||
+            this._defaultRenderScrollComponent
+          )(scrollProps),
+          {
+            ref: this._captureScrollRef,
+          },
+          cells,
+        )}
+      </VirtualizedListContextProvider>
+    );
+    let ret: React.Node = innerRet;
+    if (__DEV__) {
+      ret = (
+        <ScrollView.Context.Consumer>
+          {scrollContext => {
+            if (
+              scrollContext != null &&
+              !scrollContext.horizontal ===
+                !horizontalOrDefault(this.props.horizontal) &&
+              !this._hasWarned.nesting &&
+              this.context == null &&
+              this.props.scrollEnabled !== false
+            ) {
+              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170
+              console.error(
+                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +
+                  'orientation because it can break windowing and other functionality - use another ' +
+                  'VirtualizedList-backed container instead.',
+              );
+              this._hasWarned.nesting = true;
+            }
+            return innerRet;
+          }}
+        </ScrollView.Context.Consumer>
+      );
+    }
+    if (this.props.debug) {
+      return (
+        <View style={styles.debug}>
+          {ret}
+          {this._renderDebugOverlay()}
+        </View>
+      );
+    } else {
+      return ret;
+    }
+  }
+
+  componentDidUpdate(prevProps: Props) {
+    const {data, extraData} = this.props;
+    if (data !== prevProps.data || extraData !== prevProps.extraData) {
+      // clear the viewableIndices cache to also trigger
+      // the onViewableItemsChanged callback with the new data
+      this._viewabilityTuples.forEach(tuple => {
+        tuple.viewabilityHelper.resetViewableIndices();
+      });
+    }
+    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen
+    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true
+    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with
+    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The
+    // `_scheduleCellsToRenderUpdate` will check this condition and not perform
+    // another hiPri update.
+    const hiPriInProgress = this._hiPriInProgress;
+    this._scheduleCellsToRenderUpdate();
+    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`
+    // is triggered with `this._hiPriInProgress = true`
+    if (hiPriInProgress) {
+      this._hiPriInProgress = false;
+    }
+  }
+
+  _averageCellLength = 0;
+  _cellRefs: {[string]: null | CellRenderer<any>} = {};
+  _fillRateHelper: FillRateHelper;
+  _frames: {
+    [string]: {
+      inLayout?: boolean,
+      index: number,
+      length: number,
+      offset: number,
+    },
+  } = {};
+  _footerLength = 0;
+  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex
+  _hasTriggeredInitialScrollToIndex = false;
+  _hasInteracted = false;
+  _hasMore = false;
+  _hasWarned: {[string]: boolean} = {};
+  _headerLength = 0;
+  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update
+  _highestMeasuredFrameIndex = 0;
+  _indicesToKeys: Map<number, string> = new Map();
+  _lastFocusedCellKey: ?string = null;
+  _nestedChildLists: ChildListCollection<VirtualizedList> =
+    new ChildListCollection();
+  _offsetFromParentVirtualizedList: number = 0;
+  _prevParentOffset: number = 0;
+  // $FlowFixMe[missing-local-annot]
+  _scrollMetrics = {
+    contentLength: 0,
+    dOffset: 0,
+    dt: 10,
+    offset: 0,
+    timestamp: 0,
+    velocity: 0,
+    visibleLength: 0,
+    zoomScale: 1,
+  };
+  _scrollRef: ?React.ElementRef<any> = null;
+  _sentEndForContentLength = 0;
+  _totalCellLength = 0;
+  _totalCellsMeasured = 0;
+  _updateCellsToRenderBatcher: Batchinator;
+  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];
+
+  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's
+   * LTI update could not be added via codemod */
+  _captureScrollRef = ref => {
+    this._scrollRef = ref;
+  };
+
+  _computeBlankness() {
+    this._fillRateHelper.computeBlankness(
+      this.props,
+      this.state.cellsAroundViewport,
+      this._scrollMetrics,
+    );
+  }
+
+  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's
+   * LTI update could not be added via codemod */
+  _defaultRenderScrollComponent = props => {
+    const onRefresh = props.onRefresh;
+    if (this._isNestedWithSameOrientation()) {
+      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors
+      return <View {...props} />;
+    } else if (onRefresh) {
+      invariant(
+        typeof props.refreshing === 'boolean',
+        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +
+          JSON.stringify(props.refreshing ?? 'undefined') +
+          '`',
+      );
+      return (
+        // $FlowFixMe[prop-missing] Invalid prop usage
+        // $FlowFixMe[incompatible-use]
+        <ScrollView
+          {...props}
+          refreshControl={
+            props.refreshControl == null ? (
+              <RefreshControl
+                // $FlowFixMe[incompatible-type]
+                refreshing={props.refreshing}
+                onRefresh={onRefresh}
+                progressViewOffset={props.progressViewOffset}
+              />
+            ) : (
+              props.refreshControl
+            )
+          }
+        />
+      );
+    } else {
+      // $FlowFixMe[prop-missing] Invalid prop usage
+      // $FlowFixMe[incompatible-use]
+      return <ScrollView {...props} />;
+    }
+  };
+
+  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {
+    const layout = e.nativeEvent.layout;
+    const next = {
+      offset: this._selectOffset(layout),
+      length: this._selectLength(layout),
+      index,
+      inLayout: true,
+    };
+    const curr = this._frames[cellKey];
+    if (
+      !curr ||
+      next.offset !== curr.offset ||
+      next.length !== curr.length ||
+      index !== curr.index
+    ) {
+      this._totalCellLength += next.length - (curr ? curr.length : 0);
+      this._totalCellsMeasured += curr ? 0 : 1;
+      this._averageCellLength =
+        this._totalCellLength / this._totalCellsMeasured;
+      this._frames[cellKey] = next;
+      this._highestMeasuredFrameIndex = Math.max(
+        this._highestMeasuredFrameIndex,
+        index,
+      );
+      this._scheduleCellsToRenderUpdate();
+    } else {
+      this._frames[cellKey].inLayout = true;
+    }
+
+    this._triggerRemeasureForChildListsInCell(cellKey);
+
+    this._computeBlankness();
+    this._updateViewableItems(this.props, this.state.cellsAroundViewport);
+  };
+
+  _onCellFocusCapture(cellKey: string) {
+    this._lastFocusedCellKey = cellKey;
+    const renderMask = VirtualizedList._createRenderMask(
+      this.props,
+      this.state.cellsAroundViewport,
+      this._getNonViewportRenderRegions(this.props),
+    );
+
+    this.setState(state => {
+      if (!renderMask.equals(state.renderMask)) {
+        return {renderMask};
+      }
+      return null;
+    });
+  }
+
+  _onCellUnmount = (cellKey: string) => {
+    const curr = this._frames[cellKey];
+    if (curr) {
+      this._frames[cellKey] = {...curr, inLayout: false};
+    }
+  };
+
+  _triggerRemeasureForChildListsInCell(cellKey: string): void {
+    this._nestedChildLists.forEachInCell(cellKey, childList => {
+      childList.measureLayoutRelativeToContainingList();
+    });
+  }
+
+  measureLayoutRelativeToContainingList(): void {
+    // TODO (T35574538): findNodeHandle sometimes crashes with "Unable to find
+    // node on an unmounted component" during scrolling
+    try {
+      if (!this._scrollRef) {
+        return;
+      }
+      // We are assuming that getOutermostParentListRef().getScrollRef()
+      // is a non-null reference to a ScrollView
+      this._scrollRef.measureLayout(
+        this.context.getOutermostParentListRef().getScrollRef(),
+        (x, y, width, height) => {
+          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});
+          this._scrollMetrics.contentLength = this._selectLength({
+            width,
+            height,
+          });
+          const scrollMetrics = this._convertParentScrollMetrics(
+            this.context.getScrollMetrics(),
+          );
+
+          const metricsChanged =
+            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||
+            this._scrollMetrics.offset !== scrollMetrics.offset;
+
+          if (metricsChanged) {
+            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;
+            this._scrollMetrics.offset = scrollMetrics.offset;
+
+            // If metrics of the scrollView changed, then we triggered remeasure for child list
+            // to ensure VirtualizedList has the right information.
+            this._nestedChildLists.forEach(childList => {
+              childList.measureLayoutRelativeToContainingList();
+            });
+          }
+        },
+        error => {
+          console.warn(
+            "VirtualizedList: Encountered an error while measuring a list's" +
+              ' offset from its containing VirtualizedList.',
+          );
+        },
+      );
+    } catch (error) {
+      console.warn(
+        'measureLayoutRelativeToContainingList threw an error',
+        error.stack,
+      );
+    }
+  }
+
+  _onLayout = (e: LayoutEvent) => {
+    if (this._isNestedWithSameOrientation()) {
+      // Need to adjust our scroll metrics to be relative to our containing
+      // VirtualizedList before we can make claims about list item viewability
+      this.measureLayoutRelativeToContainingList();
+    } else {
+      this._scrollMetrics.visibleLength = this._selectLength(
+        e.nativeEvent.layout,
+      );
+    }
+    this.props.onLayout && this.props.onLayout(e);
+    this._scheduleCellsToRenderUpdate();
+    this._maybeCallOnEndReached();
+  };
+
+  _onLayoutEmpty = (e: LayoutEvent) => {
+    this.props.onLayout && this.props.onLayout(e);
+  };
+
+  _getFooterCellKey(): string {
+    return this._getCellKey() + '-footer';
+  }
+
+  _onLayoutFooter = (e: LayoutEvent) => {
+    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());
+    this._footerLength = this._selectLength(e.nativeEvent.layout);
+  };
+
+  _onLayoutHeader = (e: LayoutEvent) => {
+    this._headerLength = this._selectLength(e.nativeEvent.layout);
+  };
+
+  // $FlowFixMe[missing-local-annot]
+  _renderDebugOverlay() {
+    const normalize =
+      this._scrollMetrics.visibleLength /
+      (this._scrollMetrics.contentLength || 1);
+    const framesInLayout = [];
+    const itemCount = this.props.getItemCount(this.props.data);
+    for (let ii = 0; ii < itemCount; ii++) {
+      const frame = this.__getFrameMetricsApprox(ii, this.props);
+      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment
+       * suppresses an error found when Flow v0.68 was deployed. To see the
+       * error delete this comment and run Flow. */
+      if (frame.inLayout) {
+        framesInLayout.push(frame);
+      }
+    }
+    const windowTop = this.__getFrameMetricsApprox(
+      this.state.cellsAroundViewport.first,
+      this.props,
+    ).offset;
+    const frameLast = this.__getFrameMetricsApprox(
+      this.state.cellsAroundViewport.last,
+      this.props,
+    );
+    const windowLen = frameLast.offset + frameLast.length - windowTop;
+    const visTop = this._scrollMetrics.offset;
+    const visLen = this._scrollMetrics.visibleLength;
+
+    return (
+      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>
+        {framesInLayout.map((f, ii) => (
+          <View
+            key={'f' + ii}
+            style={[
+              styles.debugOverlayBase,
+              styles.debugOverlayFrame,
+              {
+                top: f.offset * normalize,
+                height: f.length * normalize,
+              },
+            ]}
+          />
+        ))}
+        <View
+          style={[
+            styles.debugOverlayBase,
+            styles.debugOverlayFrameLast,
+            {
+              top: windowTop * normalize,
+              height: windowLen * normalize,
+            },
+          ]}
+        />
+        <View
+          style={[
+            styles.debugOverlayBase,
+            styles.debugOverlayFrameVis,
+            {
+              top: visTop * normalize,
+              height: visLen * normalize,
+            },
+          ]}
+        />
+      </View>
+    );
+  }
+
+  _selectLength(
+    metrics: $ReadOnly<{
+      height: number,
+      width: number,
+      ...
+    }>,
+  ): number {
+    return !horizontalOrDefault(this.props.horizontal)
+      ? metrics.height
+      : metrics.width;
+  }
+
+  _selectOffset(
+    metrics: $ReadOnly<{
+      x: number,
+      y: number,
+      ...
+    }>,
+  ): number {
+    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;
+  }
+
+  _maybeCallOnEndReached() {
+    const {data, getItemCount, onEndReached, onEndReachedThreshold} =
+      this.props;
+    const {contentLength, visibleLength, offset} = this._scrollMetrics;
+    let distanceFromEnd = contentLength - visibleLength - offset;
+
+    // Especially when oERT is zero it's necessary to 'floor' very small distanceFromEnd values to be 0
+    // since debouncing causes us to not fire this event for every single "pixel" we scroll and can thus
+    // be at the "end" of the list with a distanceFromEnd approximating 0 but not quite there.
+    if (distanceFromEnd < ON_END_REACHED_EPSILON) {
+      distanceFromEnd = 0;
+    }
+
+    // TODO: T121172172 Look into why we're "defaulting" to a threshold of 2 when oERT is not present
+    const threshold =
+      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;
+    if (
+      onEndReached &&
+      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&
+      distanceFromEnd <= threshold &&
+      this._scrollMetrics.contentLength !== this._sentEndForContentLength
+    ) {
+      // Only call onEndReached once for a given content length
+      this._sentEndForContentLength = this._scrollMetrics.contentLength;
+      onEndReached({distanceFromEnd});
+    } else if (distanceFromEnd > threshold) {
+      // If the user scrolls away from the end and back again cause
+      // an onEndReached to be triggered again
+      this._sentEndForContentLength = 0;
+    }
+  }
+
+  _onContentSizeChange = (width: number, height: number) => {
+    if (
+      width > 0 &&
+      height > 0 &&
+      this.props.initialScrollIndex != null &&
+      this.props.initialScrollIndex > 0 &&
+      !this._hasTriggeredInitialScrollToIndex
+    ) {
+      if (this.props.contentOffset == null) {
+        this.scrollToIndex({
+          animated: false,
+          index: this.props.initialScrollIndex,
+        });
+      }
+      this._hasTriggeredInitialScrollToIndex = true;
+    }
+    if (this.props.onContentSizeChange) {
+      this.props.onContentSizeChange(width, height);
+    }
+    this._scrollMetrics.contentLength = this._selectLength({height, width});
+    this._scheduleCellsToRenderUpdate();
+    this._maybeCallOnEndReached();
+  };
+
+  /* Translates metrics from a scroll event in a parent VirtualizedList into
+   * coordinates relative to the child list.
+   */
+  _convertParentScrollMetrics = (metrics: {
+    visibleLength: number,
+    offset: number,
+    ...
+  }): $FlowFixMe => {
+    // Offset of the top of the nested list relative to the top of its parent's viewport
+    const offset = metrics.offset - this._offsetFromParentVirtualizedList;
+    // Child's visible length is the same as its parent's
+    const visibleLength = metrics.visibleLength;
+    const dOffset = offset - this._scrollMetrics.offset;
+    const contentLength = this._scrollMetrics.contentLength;
+
+    return {
+      visibleLength,
+      contentLength,
+      offset,
+      dOffset,
+    };
+  };
+
+  _onScroll = (e: Object) => {
+    this._nestedChildLists.forEach(childList => {
+      childList._onScroll(e);
+    });
+    if (this.props.onScroll) {
+      this.props.onScroll(e);
+    }
+    const timestamp = e.timeStamp;
+    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);
+    let contentLength = this._selectLength(e.nativeEvent.contentSize);
+    let offset = this._selectOffset(e.nativeEvent.contentOffset);
+    let dOffset = offset - this._scrollMetrics.offset;
+
+    if (this._isNestedWithSameOrientation()) {
+      if (this._scrollMetrics.contentLength === 0) {
+        // Ignore scroll events until onLayout has been called and we
+        // know our offset from our offset from our parent
+        return;
+      }
+      ({visibleLength, contentLength, offset, dOffset} =
+        this._convertParentScrollMetrics({
+          visibleLength,
+          offset,
+        }));
+    }
+
+    const dt = this._scrollMetrics.timestamp
+      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)
+      : 1;
+    const velocity = dOffset / dt;
+
+    if (
+      dt > 500 &&
+      this._scrollMetrics.dt > 500 &&
+      contentLength > 5 * visibleLength &&
+      !this._hasWarned.perf
+    ) {
+      infoLog(
+        'VirtualizedList: You have a large list that is slow to update - make sure your ' +
+          'renderItem function renders components that follow React performance best practices ' +
+          'like PureComponent, shouldComponentUpdate, etc.',
+        {dt, prevDt: this._scrollMetrics.dt, contentLength},
+      );
+      this._hasWarned.perf = true;
+    }
+
+    // For invalid negative values (w/ RTL), set this to 1.
+    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;
+    this._scrollMetrics = {
+      contentLength,
+      dt,
+      dOffset,
+      offset,
+      timestamp,
+      velocity,
+      visibleLength,
+      zoomScale,
+    };
+    this._updateViewableItems(this.props, this.state.cellsAroundViewport);
+    if (!this.props) {
+      return;
+    }
+    this._maybeCallOnEndReached();
+    if (velocity !== 0) {
+      this._fillRateHelper.activate();
+    }
+    this._computeBlankness();
+    this._scheduleCellsToRenderUpdate();
+  };
+
+  _scheduleCellsToRenderUpdate() {
+    const {first, last} = this.state.cellsAroundViewport;
+    const {offset, visibleLength, velocity} = this._scrollMetrics;
+    const itemCount = this.props.getItemCount(this.props.data);
+    let hiPri = false;
+    const onEndReachedThreshold = onEndReachedThresholdOrDefault(
+      this.props.onEndReachedThreshold,
+    );
+    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;
+    // Mark as high priority if we're close to the start of the first item
+    // But only if there are items before the first rendered item
+    if (first > 0) {
+      const distTop =
+        offset - this.__getFrameMetricsApprox(first, this.props).offset;
+      hiPri =
+        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);
+    }
+    // Mark as high priority if we're close to the end of the last item
+    // But only if there are items after the last rendered item
+    if (last >= 0 && last < itemCount - 1) {
+      const distBottom =
+        this.__getFrameMetricsApprox(last, this.props).offset -
+        (offset + visibleLength);
+      hiPri =
+        hiPri ||
+        distBottom < 0 ||
+        (velocity > 2 && distBottom < scrollingThreshold);
+    }
+    // Only trigger high-priority updates if we've actually rendered cells,
+    // and with that size estimate, accurately compute how many cells we should render.
+    // Otherwise, it would just render as many cells as it can (of zero dimension),
+    // each time through attempting to render more (limited by maxToRenderPerBatch),
+    // starving the renderer from actually laying out the objects and computing _averageCellLength.
+    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate
+    // We shouldn't do another hipri cellToRenderUpdate
+    if (
+      hiPri &&
+      (this._averageCellLength || this.props.getItemLayout) &&
+      !this._hiPriInProgress
+    ) {
+      this._hiPriInProgress = true;
+      // Don't worry about interactions when scrolling quickly; focus on filling content as fast
+      // as possible.
+      this._updateCellsToRenderBatcher.dispose({abort: true});
+      this._updateCellsToRender();
+      return;
+    } else {
+      this._updateCellsToRenderBatcher.schedule();
+    }
+  }
+
+  _onScrollBeginDrag = (e: ScrollEvent): void => {
+    this._nestedChildLists.forEach(childList => {
+      childList._onScrollBeginDrag(e);
+    });
+    this._viewabilityTuples.forEach(tuple => {
+      tuple.viewabilityHelper.recordInteraction();
+    });
+    this._hasInteracted = true;
+    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
+  };
+
+  _onScrollEndDrag = (e: ScrollEvent): void => {
+    this._nestedChildLists.forEach(childList => {
+      childList._onScrollEndDrag(e);
+    });
+    const {velocity} = e.nativeEvent;
+    if (velocity) {
+      this._scrollMetrics.velocity = this._selectOffset(velocity);
+    }
+    this._computeBlankness();
+    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
+  };
+
+  _onMomentumScrollBegin = (e: ScrollEvent): void => {
+    this._nestedChildLists.forEach(childList => {
+      childList._onMomentumScrollBegin(e);
+    });
+    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
+  };
+
+  _onMomentumScrollEnd = (e: ScrollEvent): void => {
+    this._nestedChildLists.forEach(childList => {
+      childList._onMomentumScrollEnd(e);
+    });
+    this._scrollMetrics.velocity = 0;
+    this._computeBlankness();
+    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
+  };
+
+  _updateCellsToRender = () => {
+    this.setState((state, props) => {
+      const cellsAroundViewport = this._adjustCellsAroundViewport(
+        props,
+        state.cellsAroundViewport,
+      );
+      const renderMask = VirtualizedList._createRenderMask(
+        props,
+        cellsAroundViewport,
+        this._getNonViewportRenderRegions(props),
+      );
+
+      if (
+        cellsAroundViewport.first === state.cellsAroundViewport.first &&
+        cellsAroundViewport.last === state.cellsAroundViewport.last &&
+        renderMask.equals(state.renderMask)
+      ) {
+        return null;
+      }
+
+      return {cellsAroundViewport, renderMask};
+    });
+  };
+
+  _createViewToken = (
+    index: number,
+    isViewable: boolean,
+    props: FrameMetricProps,
+    // $FlowFixMe[missing-local-annot]
+  ) => {
+    const {data, getItem} = props;
+    const item = getItem(data, index);
+    return {
+      index,
+      item,
+      key: this._keyExtractor(item, index, props),
+      isViewable,
+    };
+  };
+
+  /**
+   * Gets an approximate offset to an item at a given index. Supports
+   * fractional indices.
+   */
+  _getOffsetApprox = (index: number, props: FrameMetricProps): number => {
+    if (Number.isInteger(index)) {
+      return this.__getFrameMetricsApprox(index, props).offset;
+    } else {
+      const frameMetrics = this.__getFrameMetricsApprox(
+        Math.floor(index),
+        props,
+      );
+      const remainder = index - Math.floor(index);
+      return frameMetrics.offset + remainder * frameMetrics.length;
+    }
+  };
+
+  __getFrameMetricsApprox: (
+    index: number,
+    props: FrameMetricProps,
+  ) => {
+    length: number,
+    offset: number,
+    ...
+  } = (index, props) => {
+    const frame = this._getFrameMetrics(index, props);
+    if (frame && frame.index === index) {
+      // check for invalid frames due to row re-ordering
+      return frame;
+    } else {
+      const {data, getItemCount, getItemLayout} = props;
+      invariant(
+        index >= 0 && index < getItemCount(data),
+        'Tried to get frame for out of range index ' + index,
+      );
+      invariant(
+        !getItemLayout,
+        'Should not have to estimate frames when a measurement metrics function is provided',
+      );
+      return {
+        length: this._averageCellLength,
+        offset: this._averageCellLength * index,
+      };
+    }
+  };
+
+  _getFrameMetrics = (
+    index: number,
+    props: FrameMetricProps,
+  ): ?{
+    length: number,
+    offset: number,
+    index: number,
+    inLayout?: boolean,
+    ...
+  } => {
+    const {data, getItem, getItemCount, getItemLayout} = props;
+    invariant(
+      index >= 0 && index < getItemCount(data),
+      'Tried to get frame for out of range index ' + index,
+    );
+    const item = getItem(data, index);
+    const frame = item && this._frames[this._keyExtractor(item, index, props)];
+    if (!frame || frame.index !== index) {
+      if (getItemLayout) {
+        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment
+         * suppresses an error found when Flow v0.63 was deployed. To see the error
+         * delete this comment and run Flow. */
+        return getItemLayout(data, index);
+      }
+    }
+    return frame;
+  };
+
+  _getNonViewportRenderRegions = (
+    props: FrameMetricProps,
+  ): $ReadOnlyArray<{
+    first: number,
+    last: number,
+  }> => {
+    // Keep a viewport's worth of content around the last focused cell to allow
+    // random navigation around it without any blanking. E.g. tabbing from one
+    // focused item out of viewport to another.
+    if (
+      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])
+    ) {
+      return [];
+    }
+
+    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];
+    const focusedCellIndex = lastFocusedCellRenderer.props.index;
+    const itemCount = props.getItemCount(props.data);
+
+    // The cell may have been unmounted and have a stale index
+    if (
+      focusedCellIndex >= itemCount ||
+      this._indicesToKeys.get(focusedCellIndex) !== this._lastFocusedCellKey
+    ) {
+      return [];
+    }
+
+    let first = focusedCellIndex;
+    let heightOfCellsBeforeFocused = 0;
+    for (
+      let i = first - 1;
+      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;
+      i--
+    ) {
+      first--;
+      heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(
+        i,
+        props,
+      ).length;
+    }
+
+    let last = focusedCellIndex;
+    let heightOfCellsAfterFocused = 0;
+    for (
+      let i = last + 1;
+      i < itemCount &&
+      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;
+      i++
+    ) {
+      last++;
+      heightOfCellsAfterFocused += this.__getFrameMetricsApprox(
+        i,
+        props,
+      ).length;
+    }
+
+    return [{first, last}];
+  };
+
+  _updateViewableItems(
+    props: FrameMetricProps,
+    cellsAroundViewport: {first: number, last: number},
+  ) {
+    this._viewabilityTuples.forEach(tuple => {
+      tuple.viewabilityHelper.onUpdate(
+        props,
+        this._scrollMetrics.offset,
+        this._scrollMetrics.visibleLength,
+        this._getFrameMetrics,
+        this._createViewToken,
+        tuple.onViewableItemsChanged,
+        cellsAroundViewport,
+      );
+    });
+  }
+}
+
+const styles = StyleSheet.create({
+  verticallyInverted: {
+    transform: [{scaleY: -1}],
+  },
+  horizontallyInverted: {
+    transform: [{scaleX: -1}],
+  },
+  debug: {
+    flex: 1,
+  },
+  debugOverlayBase: {
+    position: 'absolute',
+    top: 0,
+    right: 0,
+  },
+  debugOverlay: {
+    bottom: 0,
+    width: 20,
+    borderColor: 'blue',
+    borderWidth: 1,
+  },
+  debugOverlayFrame: {
+    left: 0,
+    backgroundColor: 'orange',
+  },
+  debugOverlayFrameLast: {
+    left: 0,
+    borderColor: 'green',
+    borderWidth: 2,
+  },
+  debugOverlayFrameVis: {
+    left: 0,
+    borderColor: 'red',
+    borderWidth: 2,
+  },
+});
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedListCellRenderer.js b/node_modules/react-native/Libraries/Lists/VirtualizedListCellRenderer.js
new file mode 100644
index 0000000..e45e082
--- /dev/null
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedListCellRenderer.js
@@ -0,0 +1,259 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow
+ * @format
+ */
+
+import type {ViewStyleProp} from '../StyleSheet/StyleSheet';
+import type {FocusEvent, LayoutEvent} from '../Types/CoreEventTypes';
+import type FillRateHelper from './FillRateHelper';
+import type {RenderItemType} from './VirtualizedListProps';
+
+import View from '../Components/View/View';
+import StyleSheet from '../StyleSheet/StyleSheet';
+import {VirtualizedListCellContextProvider} from './VirtualizedListContext.js';
+import invariant from 'invariant';
+import * as React from 'react';
+
+export type Props<ItemT> = {
+  CellRendererComponent?: ?React.ComponentType<any>,
+  ItemSeparatorComponent: ?React.ComponentType<
+    any | {highlighted: boolean, leadingItem: ?ItemT},
+  >,
+  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),
+  cellKey: string,
+  debug?: ?boolean,
+  fillRateHelper: FillRateHelper,
+  getItemLayout?: (
+    data: any,
+    index: number,
+  ) => {
+    length: number,
+    offset: number,
+    index: number,
+    ...
+  },
+  horizontal: ?boolean,
+  index: number,
+  inversionStyle: ViewStyleProp,
+  item: ItemT,
+  onCellLayout: (event: LayoutEvent, cellKey: string, index: number) => void,
+  onCellFocusCapture?: (event: FocusEvent) => void,
+  onUnmount: (cellKey: string) => void,
+  onUpdateSeparators: (
+    cellKeys: Array<?string>,
+    props: $Shape<SeparatorProps<ItemT>>,
+  ) => void,
+  prevCellKey: ?string,
+  renderItem?: ?RenderItemType<ItemT>,
+  ...
+};
+
+type SeparatorProps<ItemT> = $ReadOnly<{|
+  highlighted: boolean,
+  leadingItem: ?ItemT,
+|}>;
+
+type State<ItemT> = {
+  separatorProps: SeparatorProps<ItemT>,
+  ...
+};
+
+export default class CellRenderer<ItemT> extends React.Component<
+  Props<ItemT>,
+  State<ItemT>,
+> {
+  state: State<ItemT> = {
+    separatorProps: {
+      highlighted: false,
+      leadingItem: this.props.item,
+    },
+  };
+
+  static getDerivedStateFromProps(
+    props: Props<ItemT>,
+    prevState: State<ItemT>,
+  ): ?State<ItemT> {
+    return {
+      separatorProps: {
+        ...prevState.separatorProps,
+        leadingItem: props.item,
+      },
+    };
+  }
+
+  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not
+  // reused by SectionList and we can keep VirtualizedList simpler.
+  // $FlowFixMe[missing-local-annot]
+  _separators = {
+    highlight: () => {
+      const {cellKey, prevCellKey} = this.props;
+      this.props.onUpdateSeparators([cellKey, prevCellKey], {
+        highlighted: true,
+      });
+    },
+    unhighlight: () => {
+      const {cellKey, prevCellKey} = this.props;
+      this.props.onUpdateSeparators([cellKey, prevCellKey], {
+        highlighted: false,
+      });
+    },
+    updateProps: (
+      select: 'leading' | 'trailing',
+      newProps: SeparatorProps<ItemT>,
+    ) => {
+      const {cellKey, prevCellKey} = this.props;
+      this.props.onUpdateSeparators(
+        [select === 'leading' ? prevCellKey : cellKey],
+        newProps,
+      );
+    },
+  };
+
+  updateSeparatorProps(newProps: SeparatorProps<ItemT>) {
+    this.setState(state => ({
+      separatorProps: {...state.separatorProps, ...newProps},
+    }));
+  }
+
+  componentWillUnmount() {
+    this.props.onUnmount(this.props.cellKey);
+  }
+
+  _onLayout = (nativeEvent: LayoutEvent): void => {
+    this.props.onCellLayout &&
+      this.props.onCellLayout(
+        nativeEvent,
+        this.props.cellKey,
+        this.props.index,
+      );
+  };
+
+  _renderElement(
+    renderItem: ?RenderItemType<ItemT>,
+    ListItemComponent: any,
+    item: ItemT,
+    index: number,
+  ): React.Node {
+    if (renderItem && ListItemComponent) {
+      console.warn(
+        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +
+          ' precedence over renderItem.',
+      );
+    }
+
+    if (ListItemComponent) {
+      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This
+       * comment suppresses an error found when Flow v0.108 was deployed. To
+       * see the error, delete this comment and run Flow. */
+      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)
+       * This comment suppresses an error found when Flow v0.108 was deployed.
+       * To see the error, delete this comment and run Flow. */
+      return React.createElement(ListItemComponent, {
+        item,
+        index,
+        separators: this._separators,
+      });
+    }
+
+    if (renderItem) {
+      return renderItem({
+        item,
+        index,
+        separators: this._separators,
+      });
+    }
+
+    invariant(
+      false,
+      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',
+    );
+  }
+
+  render(): React.Node {
+    const {
+      CellRendererComponent,
+      ItemSeparatorComponent,
+      ListItemComponent,
+      debug,
+      fillRateHelper,
+      getItemLayout,
+      horizontal,
+      item,
+      index,
+      inversionStyle,
+      onCellFocusCapture,
+      renderItem,
+    } = this.props;
+    const element = this._renderElement(
+      renderItem,
+      ListItemComponent,
+      item,
+      index,
+    );
+
+    const onLayout =
+      (getItemLayout && !debug && !fillRateHelper.enabled()) ||
+      !this.props.onCellLayout
+        ? undefined
+        : this._onLayout;
+    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and
+    // called explicitly by `ScrollViewStickyHeader`.
+    const itemSeparator = React.isValidElement(ItemSeparatorComponent)
+      ? ItemSeparatorComponent
+      : ItemSeparatorComponent && (
+          <ItemSeparatorComponent {...this.state.separatorProps} />
+        );
+    const cellStyle = inversionStyle
+      ? horizontal
+        ? [styles.rowReverse, inversionStyle]
+        : [styles.columnReverse, inversionStyle]
+      : horizontal
+      ? [styles.row, inversionStyle]
+      : inversionStyle;
+    const result = !CellRendererComponent ? (
+      <View
+        style={cellStyle}
+        onLayout={onLayout}
+        onFocusCapture={onCellFocusCapture}
+        /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *
+        This comment suppresses an error found when Flow v0.89 was deployed. *
+        To see the error, delete this comment and run Flow. */
+      >
+        {element}
+        {itemSeparator}
+      </View>
+    ) : (
+      <CellRendererComponent
+        {...this.props}
+        style={cellStyle}
+        onLayout={onLayout}
+        onFocusCapture={onCellFocusCapture}>
+        {element}
+        {itemSeparator}
+      </CellRendererComponent>
+    );
+
+    return (
+      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>
+        {result}
+      </VirtualizedListCellContextProvider>
+    );
+  }
+}
+
+const styles = StyleSheet.create({
+  row: {
+    flexDirection: 'row',
+  },
+  rowReverse: {
+    flexDirection: 'row-reverse',
+  },
+  columnReverse: {
+    flexDirection: 'column-reverse',
+  },
+});
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js b/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js
index 5686ccf..bca5724 100644
--- a/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedListContext.js
@@ -4,15 +4,113 @@
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * @flow
+ * @flow strict-local
  * @format
  */
 
-'use strict';
+import typeof VirtualizedList from './VirtualizedList';
 
-import {typeof VirtualizedListContextResetter as VirtualizedListContextResetterType} from '@react-native/virtualized-lists';
+import * as React from 'react';
+import {useContext, useMemo} from 'react';
 
-const VirtualizedListContextResetter: VirtualizedListContextResetterType =
-  require('@react-native/virtualized-lists').VirtualizedListContextResetter;
+type Context = $ReadOnly<{
+  cellKey: ?string,
+  getScrollMetrics: () => {
+    contentLength: number,
+    dOffset: number,
+    dt: number,
+    offset: number,
+    timestamp: number,
+    velocity: number,
+    visibleLength: number,
+    zoomScale: number,
+  },
+  horizontal: ?boolean,
+  getOutermostParentListRef: () => React.ElementRef<VirtualizedList>,
+  registerAsNestedChild: ({
+    cellKey: string,
+    ref: React.ElementRef<VirtualizedList>,
+  }) => void,
+  unregisterAsNestedChild: ({
+    ref: React.ElementRef<VirtualizedList>,
+  }) => void,
+}>;
 
-module.exports = {VirtualizedListContextResetter};
+export const VirtualizedListContext: React.Context<?Context> =
+  React.createContext(null);
+if (__DEV__) {
+  VirtualizedListContext.displayName = 'VirtualizedListContext';
+}
+
+/**
+ * Resets the context. Intended for use by portal-like components (e.g. Modal).
+ */
+export function VirtualizedListContextResetter({
+  children,
+}: {
+  children: React.Node,
+}): React.Node {
+  return (
+    <VirtualizedListContext.Provider value={null}>
+      {children}
+    </VirtualizedListContext.Provider>
+  );
+}
+
+/**
+ * Sets the context with memoization. Intended to be used by `VirtualizedList`.
+ */
+export function VirtualizedListContextProvider({
+  children,
+  value,
+}: {
+  children: React.Node,
+  value: Context,
+}): React.Node {
+  // Avoid setting a newly created context object if the values are identical.
+  const context = useMemo(
+    () => ({
+      cellKey: null,
+      getScrollMetrics: value.getScrollMetrics,
+      horizontal: value.horizontal,
+      getOutermostParentListRef: value.getOutermostParentListRef,
+      registerAsNestedChild: value.registerAsNestedChild,
+      unregisterAsNestedChild: value.unregisterAsNestedChild,
+    }),
+    [
+      value.getScrollMetrics,
+      value.horizontal,
+      value.getOutermostParentListRef,
+      value.registerAsNestedChild,
+      value.unregisterAsNestedChild,
+    ],
+  );
+  return (
+    <VirtualizedListContext.Provider value={context}>
+      {children}
+    </VirtualizedListContext.Provider>
+  );
+}
+
+/**
+ * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.
+ */
+export function VirtualizedListCellContextProvider({
+  cellKey,
+  children,
+}: {
+  cellKey: string,
+  children: React.Node,
+}): React.Node {
+  // Avoid setting a newly created context object if the values are identical.
+  const currContext = useContext(VirtualizedListContext);
+  const context = useMemo(
+    () => (currContext == null ? null : {...currContext, cellKey}),
+    [currContext, cellKey],
+  );
+  return (
+    <VirtualizedListContext.Provider value={context}>
+      {children}
+    </VirtualizedListContext.Provider>
+  );
+}
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedListProps.js b/node_modules/react-native/Libraries/Lists/VirtualizedListProps.js
new file mode 100644
index 0000000..59e57f2
--- /dev/null
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedListProps.js
@@ -0,0 +1,279 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow
+ * @format
+ */
+
+import typeof ScrollView from '../Components/ScrollView/ScrollView';
+import type {ViewStyleProp} from '../StyleSheet/StyleSheet';
+import type {
+  ViewabilityConfig,
+  ViewabilityConfigCallbackPair,
+  ViewToken,
+} from './ViewabilityHelper';
+
+import * as React from 'react';
+
+export type Item = any;
+
+export type Separators = {
+  highlight: () => void,
+  unhighlight: () => void,
+  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,
+  ...
+};
+
+export type RenderItemProps<ItemT> = {
+  item: ItemT,
+  index: number,
+  separators: Separators,
+  ...
+};
+
+export type RenderItemType<ItemT> = (
+  info: RenderItemProps<ItemT>,
+) => React.Node;
+
+type RequiredProps = {|
+  /**
+   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override
+   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.
+   */
+  data?: any,
+  /**
+   * A generic accessor for extracting an item from any sort of data blob.
+   */
+  getItem: (data: any, index: number) => ?Item,
+  /**
+   * Determines how many items are in the data blob.
+   */
+  getItemCount: (data: any) => number,
+|};
+type OptionalProps = {|
+  renderItem?: ?RenderItemType<Item>,
+  /**
+   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and
+   * implementation, but with a significant perf hit.
+   */
+  debug?: ?boolean,
+  /**
+   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully
+   * unmounts react instances that are outside of the render window. You should only need to disable
+   * this for debugging purposes. Defaults to false.
+   */
+  disableVirtualization?: ?boolean,
+  /**
+   * A marker property for telling the list to re-render (since it implements `PureComponent`). If
+   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the
+   * `data` prop, stick it here and treat it immutably.
+   */
+  extraData?: any,
+  // e.g. height, y
+  getItemLayout?: (
+    data: any,
+    index: number,
+  ) => {
+    length: number,
+    offset: number,
+    index: number,
+    ...
+  },
+  horizontal?: ?boolean,
+  /**
+   * How many items to render in the initial batch. This should be enough to fill the screen but not
+   * much more. Note these items will never be unmounted as part of the windowed rendering in order
+   * to improve perceived performance of scroll-to-top actions.
+   */
+  initialNumToRender?: ?number,
+  /**
+   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This
+   * disables the "scroll to top" optimization that keeps the first `initialNumToRender` items
+   * always rendered and immediately renders the items starting at this initial index. Requires
+   * `getItemLayout` to be implemented.
+   */
+  initialScrollIndex?: ?number,
+  /**
+   * Reverses the direction of scroll. Uses scale transforms of -1.
+   */
+  inverted?: ?boolean,
+  keyExtractor?: ?(item: Item, index: number) => string,
+  /**
+   * Each cell is rendered using this element. Can be a React Component Class,
+   * or a render function. Defaults to using View.
+   */
+  CellRendererComponent?: ?React.ComponentType<any>,
+  /**
+   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and
+   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`
+   * which will update the `highlighted` prop, but you can also add custom props with
+   * `separators.updateProps`.
+   */
+  ItemSeparatorComponent?: ?React.ComponentType<any>,
+  /**
+   * Takes an item from `data` and renders it into the list. Example usage:
+   *
+   *     <FlatList
+   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (
+   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />
+   *       )}
+   *       data={[{title: 'Title Text', key: 'item1'}]}
+   *       ListItemComponent={({item, separators}) => (
+   *         <TouchableHighlight
+   *           onPress={() => this._onPress(item)}
+   *           onShowUnderlay={separators.highlight}
+   *           onHideUnderlay={separators.unhighlight}>
+   *           <View style={{backgroundColor: 'white'}}>
+   *             <Text>{item.title}</Text>
+   *           </View>
+   *         </TouchableHighlight>
+   *       )}
+   *     />
+   *
+   * Provides additional metadata like `index` if you need it, as well as a more generic
+   * `separators.updateProps` function which let's you set whatever props you want to change the
+   * rendering of either the leading separator or trailing separator in case the more common
+   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for
+   * your use-case.
+   */
+  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),
+  /**
+   * Rendered when the list is empty. Can be a React Component Class, a render function, or
+   * a rendered element.
+   */
+  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),
+  /**
+   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or
+   * a rendered element.
+   */
+  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),
+  /**
+   * Styling for internal View for ListFooterComponent
+   */
+  ListFooterComponentStyle?: ViewStyleProp,
+  /**
+   * Rendered at the top of all the items. Can be a React Component Class, a render function, or
+   * a rendered element.
+   */
+  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),
+  /**
+   * Styling for internal View for ListHeaderComponent
+   */
+  ListHeaderComponentStyle?: ViewStyleProp,
+  /**
+   * The maximum number of items to render in each incremental render batch. The more rendered at
+   * once, the better the fill rate, but responsiveness may suffer because rendering content may
+   * interfere with responding to button taps or other interactions.
+   */
+  maxToRenderPerBatch?: ?number,
+  /**
+   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered
+   * content.
+   */
+  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,
+  /**
+   * How far from the end (in units of visible length of the list) the bottom edge of the
+   * list must be from the end of the content to trigger the `onEndReached` callback.
+   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is
+   * within half the visible length of the list. A value of 0 will not trigger until scrolling
+   * to the very end of the list.
+   */
+  onEndReachedThreshold?: ?number,
+  /**
+   * If provided, a standard RefreshControl will be added for "Pull to Refresh" functionality. Make
+   * sure to also set the `refreshing` prop correctly.
+   */
+  onRefresh?: ?() => void,
+  /**
+   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended
+   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and
+   * then try again after more items have been rendered.
+   */
+  onScrollToIndexFailed?: ?(info: {
+    index: number,
+    highestMeasuredFrameIndex: number,
+    averageItemLength: number,
+    ...
+  }) => void,
+  /**
+   * Called when the viewability of rows changes, as defined by the
+   * `viewabilityConfig` prop.
+   */
+  onViewableItemsChanged?: ?(info: {
+    viewableItems: Array<ViewToken>,
+    changed: Array<ViewToken>,
+    ...
+  }) => void,
+  persistentScrollbar?: ?boolean,
+  /**
+   * Set this when offset is needed for the loading indicator to show correctly.
+   */
+  progressViewOffset?: number,
+  /**
+   * A custom refresh control element. When set, it overrides the default
+   * <RefreshControl> component built internally. The onRefresh and refreshing
+   * props are also ignored. Only works for vertical VirtualizedList.
+   */
+  refreshControl?: ?React.Element<any>,
+  /**
+   * Set this true while waiting for new data from a refresh.
+   */
+  refreshing?: ?boolean,
+  /**
+   * Note: may have bugs (missing content) in some circumstances - use at your own risk.
+   *
+   * This may improve scroll performance for large lists.
+   */
+  removeClippedSubviews?: boolean,
+  /**
+   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.
+   */
+  renderScrollComponent?: (props: Object) => React.Element<any>,
+  /**
+   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off
+   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.
+   */
+  updateCellsBatchingPeriod?: ?number,
+  /**
+   * See `ViewabilityHelper` for flow type and further documentation.
+   */
+  viewabilityConfig?: ViewabilityConfig,
+  /**
+   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged
+   * will be called when its corresponding ViewabilityConfig's conditions are met.
+   */
+  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,
+  /**
+   * Determines the maximum number of items rendered outside of the visible area, in units of
+   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will
+   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing
+   * this number will reduce memory consumption and may improve performance, but will increase the
+   * chance that fast scrolling may reveal momentary blank areas of unrendered content.
+   */
+  windowSize?: ?number,
+  /**
+   * The legacy implementation is no longer supported.
+   */
+  legacyImplementation?: empty,
+|};
+
+export type Props = {|
+  ...React.ElementConfig<ScrollView>,
+  ...RequiredProps,
+  ...OptionalProps,
+|};
+
+/**
+ * Subset of properties needed to calculate frame metrics
+ */
+export type FrameMetricProps = {
+  data: RequiredProps['data'],
+  getItemCount: RequiredProps['getItemCount'],
+  getItem: RequiredProps['getItem'],
+  getItemLayout?: OptionalProps['getItemLayout'],
+  keyExtractor?: OptionalProps['keyExtractor'],
+  ...
+};
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js b/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js
index 242dfe3..6d9aecd 100644
--- a/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js
@@ -8,15 +8,608 @@
  * @format
  */
 
-'use strict';
+import type {ViewToken} from './ViewabilityHelper';
 
-import {typeof VirtualizedSectionList as VirtualizedSectionListType} from '@react-native/virtualized-lists';
+import View from '../Components/View/View';
+import VirtualizedList from './VirtualizedList';
+import {keyExtractor as defaultKeyExtractor} from './VirtualizeUtils';
+import invariant from 'invariant';
+import * as React from 'react';
 
-const VirtualizedSectionList: VirtualizedSectionListType =
-  require('@react-native/virtualized-lists').VirtualizedSectionList;
+type Item = any;
 
-export type {
-  SectionBase,
-  ScrollToLocationParamsType,
-} from '@react-native/virtualized-lists';
-module.exports = VirtualizedSectionList;
+export type SectionBase<SectionItemT> = {
+  /**
+   * The data for rendering items in this section.
+   */
+  data: $ReadOnlyArray<SectionItemT>,
+  /**
+   * Optional key to keep track of section re-ordering. If you don't plan on re-ordering sections,
+   * the array index will be used by default.
+   */
+  key?: string,
+  // Optional props will override list-wide props just for this section.
+  renderItem?: ?(info: {
+    item: SectionItemT,
+    index: number,
+    section: SectionBase<SectionItemT>,
+    separators: {
+      highlight: () => void,
+      unhighlight: () => void,
+      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,
+      ...
+    },
+    ...
+  }) => null | React.Element<any>,
+  ItemSeparatorComponent?: ?React.ComponentType<any>,
+  keyExtractor?: (item: SectionItemT, index?: ?number) => string,
+  ...
+};
+
+type RequiredProps<SectionT: SectionBase<any>> = {|
+  sections: $ReadOnlyArray<SectionT>,
+|};
+
+type OptionalProps<SectionT: SectionBase<any>> = {|
+  /**
+   * Default renderer for every item in every section.
+   */
+  renderItem?: (info: {
+    item: Item,
+    index: number,
+    section: SectionT,
+    separators: {
+      highlight: () => void,
+      unhighlight: () => void,
+      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,
+      ...
+    },
+    ...
+  }) => null | React.Element<any>,
+  /**
+   * Rendered at the top of each section. These stick to the top of the `ScrollView` by default on
+   * iOS. See `stickySectionHeadersEnabled`.
+   */
+  renderSectionHeader?: ?(info: {
+    section: SectionT,
+    ...
+  }) => null | React.Element<any>,
+  /**
+   * Rendered at the bottom of each section.
+   */
+  renderSectionFooter?: ?(info: {
+    section: SectionT,
+    ...
+  }) => null | React.Element<any>,
+  /**
+   * Rendered at the top and bottom of each section (note this is different from
+   * `ItemSeparatorComponent` which is only rendered between items). These are intended to separate
+   * sections from the headers above and below and typically have the same highlight response as
+   * `ItemSeparatorComponent`. Also receives `highlighted`, `[leading/trailing][Item/Separator]`,
+   * and any custom props from `separators.updateProps`.
+   */
+  SectionSeparatorComponent?: ?React.ComponentType<any>,
+  /**
+   * Makes section headers stick to the top of the screen until the next one pushes it off. Only
+   * enabled by default on iOS because that is the platform standard there.
+   */
+  stickySectionHeadersEnabled?: boolean,
+  onEndReached?: ?({distanceFromEnd: number, ...}) => void,
+|};
+
+type VirtualizedListProps = React.ElementConfig<typeof VirtualizedList>;
+
+export type Props<SectionT> = {|
+  ...RequiredProps<SectionT>,
+  ...OptionalProps<SectionT>,
+  ...$Diff<
+    VirtualizedListProps,
+    {
+      renderItem: $PropertyType<VirtualizedListProps, 'renderItem'>,
+      data: $PropertyType<VirtualizedListProps, 'data'>,
+      ...
+    },
+  >,
+|};
+export type ScrollToLocationParamsType = {|
+  animated?: ?boolean,
+  itemIndex: number,
+  sectionIndex: number,
+  viewOffset?: number,
+  viewPosition?: number,
+|};
+
+type State = {childProps: VirtualizedListProps, ...};
+
+/**
+ * Right now this just flattens everything into one list and uses VirtualizedList under the
+ * hood. The only operation that might not scale well is concatting the data arrays of all the
+ * sections when new props are received, which should be plenty fast for up to ~10,000 items.
+ */
+class VirtualizedSectionList<
+  SectionT: SectionBase<any>,
+> extends React.PureComponent<Props<SectionT>, State> {
+  scrollToLocation(params: ScrollToLocationParamsType) {
+    let index = params.itemIndex;
+    for (let i = 0; i < params.sectionIndex; i++) {
+      index += this.props.getItemCount(this.props.sections[i].data) + 2;
+    }
+    let viewOffset = params.viewOffset || 0;
+    if (this._listRef == null) {
+      return;
+    }
+    if (params.itemIndex > 0 && this.props.stickySectionHeadersEnabled) {
+      const frame = this._listRef.__getFrameMetricsApprox(
+        index - params.itemIndex,
+        this._listRef.props,
+      );
+      viewOffset += frame.length;
+    }
+    const toIndexParams = {
+      ...params,
+      viewOffset,
+      index,
+    };
+    // $FlowFixMe[incompatible-use]
+    this._listRef.scrollToIndex(toIndexParams);
+  }
+
+  getListRef(): ?React.ElementRef<typeof VirtualizedList> {
+    return this._listRef;
+  }
+
+  render(): React.Node {
+    const {
+      ItemSeparatorComponent, // don't pass through, rendered with renderItem
+      SectionSeparatorComponent,
+      renderItem: _renderItem,
+      renderSectionFooter,
+      renderSectionHeader,
+      sections: _sections,
+      stickySectionHeadersEnabled,
+      ...passThroughProps
+    } = this.props;
+
+    const listHeaderOffset = this.props.ListHeaderComponent ? 1 : 0;
+
+    const stickyHeaderIndices = this.props.stickySectionHeadersEnabled
+      ? ([]: Array<number>)
+      : undefined;
+
+    let itemCount = 0;
+    for (const section of this.props.sections) {
+      // Track the section header indices
+      if (stickyHeaderIndices != null) {
+        stickyHeaderIndices.push(itemCount + listHeaderOffset);
+      }
+
+      // Add two for the section header and footer.
+      itemCount += 2;
+      itemCount += this.props.getItemCount(section.data);
+    }
+    const renderItem = this._renderItem(itemCount);
+
+    return (
+      <VirtualizedList
+        {...passThroughProps}
+        keyExtractor={this._keyExtractor}
+        stickyHeaderIndices={stickyHeaderIndices}
+        renderItem={renderItem}
+        data={this.props.sections}
+        getItem={(sections, index) =>
+          this._getItem(this.props, sections, index)
+        }
+        getItemCount={() => itemCount}
+        onViewableItemsChanged={
+          this.props.onViewableItemsChanged
+            ? this._onViewableItemsChanged
+            : undefined
+        }
+        ref={this._captureRef}
+      />
+    );
+  }
+
+  _getItem(
+    props: Props<SectionT>,
+    sections: ?$ReadOnlyArray<Item>,
+    index: number,
+  ): ?Item {
+    if (!sections) {
+      return null;
+    }
+    let itemIdx = index - 1;
+    for (let i = 0; i < sections.length; i++) {
+      const section = sections[i];
+      const sectionData = section.data;
+      const itemCount = props.getItemCount(sectionData);
+      if (itemIdx === -1 || itemIdx === itemCount) {
+        // We intend for there to be overflow by one on both ends of the list.
+        // This will be for headers and footers. When returning a header or footer
+        // item the section itself is the item.
+        return section;
+      } else if (itemIdx < itemCount) {
+        // If we are in the bounds of the list's data then return the item.
+        return props.getItem(sectionData, itemIdx);
+      } else {
+        itemIdx -= itemCount + 2; // Add two for the header and footer
+      }
+    }
+    return null;
+  }
+
+  // $FlowFixMe[missing-local-annot]
+  _keyExtractor = (item: Item, index: number) => {
+    const info = this._subExtractor(index);
+    return (info && info.key) || String(index);
+  };
+
+  _subExtractor(index: number): ?{
+    section: SectionT,
+    // Key of the section or combined key for section + item
+    key: string,
+    // Relative index within the section
+    index: ?number,
+    // True if this is the section header
+    header?: ?boolean,
+    leadingItem?: ?Item,
+    leadingSection?: ?SectionT,
+    trailingItem?: ?Item,
+    trailingSection?: ?SectionT,
+    ...
+  } {
+    let itemIndex = index;
+    const {getItem, getItemCount, keyExtractor, sections} = this.props;
+    for (let i = 0; i < sections.length; i++) {
+      const section = sections[i];
+      const sectionData = section.data;
+      const key = section.key || String(i);
+      itemIndex -= 1; // The section adds an item for the header
+      if (itemIndex >= getItemCount(sectionData) + 1) {
+        itemIndex -= getItemCount(sectionData) + 1; // The section adds an item for the footer.
+      } else if (itemIndex === -1) {
+        return {
+          section,
+          key: key + ':header',
+          index: null,
+          header: true,
+          trailingSection: sections[i + 1],
+        };
+      } else if (itemIndex === getItemCount(sectionData)) {
+        return {
+          section,
+          key: key + ':footer',
+          index: null,
+          header: false,
+          trailingSection: sections[i + 1],
+        };
+      } else {
+        const extractor =
+          section.keyExtractor || keyExtractor || defaultKeyExtractor;
+        return {
+          section,
+          key:
+            key + ':' + extractor(getItem(sectionData, itemIndex), itemIndex),
+          index: itemIndex,
+          leadingItem: getItem(sectionData, itemIndex - 1),
+          leadingSection: sections[i - 1],
+          trailingItem: getItem(sectionData, itemIndex + 1),
+          trailingSection: sections[i + 1],
+        };
+      }
+    }
+  }
+
+  _convertViewable = (viewable: ViewToken): ?ViewToken => {
+    invariant(viewable.index != null, 'Received a broken ViewToken');
+    const info = this._subExtractor(viewable.index);
+    if (!info) {
+      return null;
+    }
+    const keyExtractorWithNullableIndex = info.section.keyExtractor;
+    const keyExtractorWithNonNullableIndex =
+      this.props.keyExtractor || defaultKeyExtractor;
+    const key =
+      keyExtractorWithNullableIndex != null
+        ? keyExtractorWithNullableIndex(viewable.item, info.index)
+        : keyExtractorWithNonNullableIndex(viewable.item, info.index ?? 0);
+
+    return {
+      ...viewable,
+      index: info.index,
+      key,
+      section: info.section,
+    };
+  };
+
+  _onViewableItemsChanged = ({
+    viewableItems,
+    changed,
+  }: {
+    viewableItems: Array<ViewToken>,
+    changed: Array<ViewToken>,
+    ...
+  }) => {
+    const onViewableItemsChanged = this.props.onViewableItemsChanged;
+    if (onViewableItemsChanged != null) {
+      onViewableItemsChanged({
+        viewableItems: viewableItems
+          .map(this._convertViewable, this)
+          .filter(Boolean),
+        changed: changed.map(this._convertViewable, this).filter(Boolean),
+      });
+    }
+  };
+
+  _renderItem =
+    (listItemCount: number): $FlowFixMe =>
+    // eslint-disable-next-line react/no-unstable-nested-components
+    ({item, index}: {item: Item, index: number, ...}) => {
+      const info = this._subExtractor(index);
+      if (!info) {
+        return null;
+      }
+      const infoIndex = info.index;
+      if (infoIndex == null) {
+        const {section} = info;
+        if (info.header === true) {
+          const {renderSectionHeader} = this.props;
+          return renderSectionHeader ? renderSectionHeader({section}) : null;
+        } else {
+          const {renderSectionFooter} = this.props;
+          return renderSectionFooter ? renderSectionFooter({section}) : null;
+        }
+      } else {
+        const renderItem = info.section.renderItem || this.props.renderItem;
+        const SeparatorComponent = this._getSeparatorComponent(
+          index,
+          info,
+          listItemCount,
+        );
+        invariant(renderItem, 'no renderItem!');
+        return (
+          <ItemWithSeparator
+            SeparatorComponent={SeparatorComponent}
+            LeadingSeparatorComponent={
+              infoIndex === 0 ? this.props.SectionSeparatorComponent : undefined
+            }
+            cellKey={info.key}
+            index={infoIndex}
+            item={item}
+            leadingItem={info.leadingItem}
+            leadingSection={info.leadingSection}
+            prevCellKey={(this._subExtractor(index - 1) || {}).key}
+            // Callback to provide updateHighlight for this item
+            setSelfHighlightCallback={this._setUpdateHighlightFor}
+            setSelfUpdatePropsCallback={this._setUpdatePropsFor}
+            // Provide child ability to set highlight/updateProps for previous item using prevCellKey
+            updateHighlightFor={this._updateHighlightFor}
+            updatePropsFor={this._updatePropsFor}
+            renderItem={renderItem}
+            section={info.section}
+            trailingItem={info.trailingItem}
+            trailingSection={info.trailingSection}
+            inverted={!!this.props.inverted}
+          />
+        );
+      }
+    };
+
+  _updatePropsFor = (cellKey: string, value: any) => {
+    const updateProps = this._updatePropsMap[cellKey];
+    if (updateProps != null) {
+      updateProps(value);
+    }
+  };
+
+  _updateHighlightFor = (cellKey: string, value: boolean) => {
+    const updateHighlight = this._updateHighlightMap[cellKey];
+    if (updateHighlight != null) {
+      updateHighlight(value);
+    }
+  };
+
+  _setUpdateHighlightFor = (
+    cellKey: string,
+    updateHighlightFn: ?(boolean) => void,
+  ) => {
+    if (updateHighlightFn != null) {
+      this._updateHighlightMap[cellKey] = updateHighlightFn;
+    } else {
+      delete this._updateHighlightFor[cellKey];
+    }
+  };
+
+  _setUpdatePropsFor = (cellKey: string, updatePropsFn: ?(boolean) => void) => {
+    if (updatePropsFn != null) {
+      this._updatePropsMap[cellKey] = updatePropsFn;
+    } else {
+      delete this._updatePropsMap[cellKey];
+    }
+  };
+
+  _getSeparatorComponent(
+    index: number,
+    info?: ?Object,
+    listItemCount: number,
+  ): ?React.ComponentType<any> {
+    info = info || this._subExtractor(index);
+    if (!info) {
+      return null;
+    }
+    const ItemSeparatorComponent =
+      info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
+    const {SectionSeparatorComponent} = this.props;
+    const isLastItemInList = index === listItemCount - 1;
+    const isLastItemInSection =
+      info.index === this.props.getItemCount(info.section.data) - 1;
+    if (SectionSeparatorComponent && isLastItemInSection) {
+      return SectionSeparatorComponent;
+    }
+    if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
+      return ItemSeparatorComponent;
+    }
+    return null;
+  }
+
+  _updateHighlightMap: {[string]: (boolean) => void} = {};
+  _updatePropsMap: {[string]: void | (boolean => void)} = {};
+  _listRef: ?React.ElementRef<typeof VirtualizedList>;
+  _captureRef = (ref: null | React$ElementRef<Class<VirtualizedList>>) => {
+    this._listRef = ref;
+  };
+}
+
+type ItemWithSeparatorCommonProps = $ReadOnly<{|
+  leadingItem: ?Item,
+  leadingSection: ?Object,
+  section: Object,
+  trailingItem: ?Item,
+  trailingSection: ?Object,
+|}>;
+
+type ItemWithSeparatorProps = $ReadOnly<{|
+  ...ItemWithSeparatorCommonProps,
+  LeadingSeparatorComponent: ?React.ComponentType<any>,
+  SeparatorComponent: ?React.ComponentType<any>,
+  cellKey: string,
+  index: number,
+  item: Item,
+  setSelfHighlightCallback: (
+    cellKey: string,
+    updateFn: ?(boolean) => void,
+  ) => void,
+  setSelfUpdatePropsCallback: (
+    cellKey: string,
+    updateFn: ?(boolean) => void,
+  ) => void,
+  prevCellKey?: ?string,
+  updateHighlightFor: (prevCellKey: string, value: boolean) => void,
+  updatePropsFor: (prevCellKey: string, value: Object) => void,
+  renderItem: Function,
+  inverted: boolean,
+|}>;
+
+function ItemWithSeparator(props: ItemWithSeparatorProps): React.Node {
+  const {
+    LeadingSeparatorComponent,
+    // this is the trailing separator and is associated with this item
+    SeparatorComponent,
+    cellKey,
+    prevCellKey,
+    setSelfHighlightCallback,
+    updateHighlightFor,
+    setSelfUpdatePropsCallback,
+    updatePropsFor,
+    item,
+    index,
+    section,
+    inverted,
+  } = props;
+
+  const [leadingSeparatorHiglighted, setLeadingSeparatorHighlighted] =
+    React.useState(false);
+
+  const [separatorHighlighted, setSeparatorHighlighted] = React.useState(false);
+
+  const [leadingSeparatorProps, setLeadingSeparatorProps] = React.useState({
+    leadingItem: props.leadingItem,
+    leadingSection: props.leadingSection,
+    section: props.section,
+    trailingItem: props.item,
+    trailingSection: props.trailingSection,
+  });
+  const [separatorProps, setSeparatorProps] = React.useState({
+    leadingItem: props.item,
+    leadingSection: props.leadingSection,
+    section: props.section,
+    trailingItem: props.trailingItem,
+    trailingSection: props.trailingSection,
+  });
+
+  React.useEffect(() => {
+    setSelfHighlightCallback(cellKey, setSeparatorHighlighted);
+    setSelfUpdatePropsCallback(cellKey, setSeparatorProps);
+
+    return () => {
+      setSelfUpdatePropsCallback(cellKey, null);
+      setSelfHighlightCallback(cellKey, null);
+    };
+  }, [
+    cellKey,
+    setSelfHighlightCallback,
+    setSeparatorProps,
+    setSelfUpdatePropsCallback,
+  ]);
+
+  const separators = {
+    highlight: () => {
+      setLeadingSeparatorHighlighted(true);
+      setSeparatorHighlighted(true);
+      if (prevCellKey != null) {
+        updateHighlightFor(prevCellKey, true);
+      }
+    },
+    unhighlight: () => {
+      setLeadingSeparatorHighlighted(false);
+      setSeparatorHighlighted(false);
+      if (prevCellKey != null) {
+        updateHighlightFor(prevCellKey, false);
+      }
+    },
+    updateProps: (
+      select: 'leading' | 'trailing',
+      newProps: $Shape<ItemWithSeparatorCommonProps>,
+    ) => {
+      if (select === 'leading') {
+        if (LeadingSeparatorComponent != null) {
+          setLeadingSeparatorProps({...leadingSeparatorProps, ...newProps});
+        } else if (prevCellKey != null) {
+          // update the previous item's separator
+          updatePropsFor(prevCellKey, {...leadingSeparatorProps, ...newProps});
+        }
+      } else if (select === 'trailing' && SeparatorComponent != null) {
+        setSeparatorProps({...separatorProps, ...newProps});
+      }
+    },
+  };
+  const element = props.renderItem({
+    item,
+    index,
+    section,
+    separators,
+  });
+  const leadingSeparator = LeadingSeparatorComponent != null && (
+    <LeadingSeparatorComponent
+      highlighted={leadingSeparatorHiglighted}
+      {...leadingSeparatorProps}
+    />
+  );
+  const separator = SeparatorComponent != null && (
+    <SeparatorComponent
+      highlighted={separatorHighlighted}
+      {...separatorProps}
+    />
+  );
+  return leadingSeparator || separator ? (
+    <View>
+      {inverted === false ? leadingSeparator : separator}
+      {element}
+      {inverted === false ? separator : leadingSeparator}
+    </View>
+  ) : (
+    element
+  );
+}
+
+/* $FlowFixMe[class-object-subtyping] added when improving typing for this
+ * parameters */
+// $FlowFixMe[method-unbinding]
+module.exports = (VirtualizedSectionList: React.AbstractComponent<
+  React.ElementConfig<typeof VirtualizedSectionList>,
+  $ReadOnly<{
+    getListRef: () => ?React.ElementRef<typeof VirtualizedList>,
+    scrollToLocation: (params: ScrollToLocationParamsType) => void,
+    ...
+  }>,
+>);
diff --git a/node_modules/react-native/Libraries/Lists/__flowtests__/FlatList-flowtest.js b/node_modules/react-native/Libraries/Lists/__flowtests__/FlatList-flowtest.js
index 7b42508..fb62a18 100644
--- a/node_modules/react-native/Libraries/Lists/__flowtests__/FlatList-flowtest.js
+++ b/node_modules/react-native/Libraries/Lists/__flowtests__/FlatList-flowtest.js
@@ -93,7 +93,6 @@ module.exports = {
       <FlatList
         // $FlowExpectedError - bad title type number, should be string
         renderItem={(info: {item: {title: number}}) => <span />}
-        // $FlowExpectedError - bad title type number, should be string
         data={data}
       />,
       // EverythingIsFine
diff --git a/node_modules/react-native/Libraries/Lists/__flowtests__/SectionList-flowtest.js b/node_modules/react-native/Libraries/Lists/__flowtests__/SectionList-flowtest.js
index 9f878d8..4112d87 100644
--- a/node_modules/react-native/Libraries/Lists/__flowtests__/SectionList-flowtest.js
+++ b/node_modules/react-native/Libraries/Lists/__flowtests__/SectionList-flowtest.js
@@ -76,7 +76,7 @@ module.exports = {
   },
 
   testBadInheritedDefaultProp(): React.MixedElement {
-    const sections: $FlowFixMe = [];
+    const sections = [];
     return (
       <SectionList
         renderItem={renderMyListItem}
diff --git a/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js b/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js
index d3e06b0..6c5e160 100644
--- a/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js
+++ b/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js
@@ -154,7 +154,7 @@ function appendNewLog(newLog: LogBoxLog) {
   if (newLog.level === 'fatal') {
     // If possible, to avoid jank, we don't want to open the error before
     // it's symbolicated. To do that, we optimistically wait for
-    // symbolication for up to a second before adding the log.
+    // sybolication for up to a second before adding the log.
     const OPTIMISTIC_WAIT_TIME = 1000;
 
     let addPendingLog: ?() => void = () => {
diff --git a/node_modules/react-native/Libraries/LogBox/Data/parseLogBoxLog.js b/node_modules/react-native/Libraries/LogBox/Data/parseLogBoxLog.js
index 7b91d69..a8d2810 100644
--- a/node_modules/react-native/Libraries/LogBox/Data/parseLogBoxLog.js
+++ b/node_modules/react-native/Libraries/LogBox/Data/parseLogBoxLog.js
@@ -14,12 +14,38 @@ import type {LogBoxLogData} from './LogBoxLog';
 import parseErrorStack from '../../Core/Devtools/parseErrorStack';
 import UTFSequence from '../../UTFSequence';
 import stringifySafe from '../../Utilities/stringifySafe';
+import ansiRegex from 'ansi-regex';
+
+const ANSI_REGEX = ansiRegex().source;
 
 const BABEL_TRANSFORM_ERROR_FORMAT =
   /^(?:TransformError )?(?:SyntaxError: |ReferenceError: )(.*): (.*) \((\d+):(\d+)\)\n\n([\s\S]+)/;
+
+// https://github.com/babel/babel/blob/33dbb85e9e9fe36915273080ecc42aee62ed0ade/packages/babel-code-frame/src/index.ts#L183-L184
+const BABEL_CODE_FRAME_MARKER_PATTERN = new RegExp(
+  [
+    // Beginning of a line (per 'm' flag)
+    '^',
+    // Optional ANSI escapes for colors
+    `(?:${ANSI_REGEX})*`,
+    // Marker
+    '>',
+    // Optional ANSI escapes for colors
+    `(?:${ANSI_REGEX})*`,
+    // Left padding for line number
+    ' +',
+    // Line number
+    '[0-9]+',
+    // Gutter
+    ' \\|',
+  ].join(''),
+  'm',
+);
+
 const BABEL_CODE_FRAME_ERROR_FORMAT =
   // eslint-disable-next-line no-control-regex
   /^(?:TransformError )?(?:.*):? (?:.*?)(\/.*): ([\s\S]+?)\n([ >]{2}[\d\s]+ \|[\s\S]+|\u{001b}[\s\S]+)/u;
+
 const METRO_ERROR_FORMAT =
   /^(?:InternalError Metro has encountered an error:) (.*): (.*) \((\d+):(\d+)\)\n\n([\s\S]+)/u;
 
@@ -241,27 +267,31 @@ export function parseLogBoxException(
     };
   }
 
-  const babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);
+  // Perform a cheap match first before trying to parse the full message, which
+  // can get expensive for arbitrary input.
+  if (BABEL_CODE_FRAME_MARKER_PATTERN.test(message)) {
+    const babelCodeFrameError = message.match(BABEL_CODE_FRAME_ERROR_FORMAT);
 
-  if (babelCodeFrameError) {
-    // Codeframe errors are thrown from any use of buildCodeFrameError.
-    const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);
-    return {
-      level: 'syntax',
-      stack: [],
-      isComponentError: false,
-      componentStack: [],
-      codeFrame: {
-        fileName,
-        location: null, // We are not given the location.
-        content: codeFrame,
-      },
-      message: {
-        content,
-        substitutions: [],
-      },
-      category: `${fileName}-${1}-${1}`,
-    };
+    if (babelCodeFrameError) {
+      // Codeframe errors are thrown from any use of buildCodeFrameError.
+      const [fileName, content, codeFrame] = babelCodeFrameError.slice(1);
+      return {
+        level: 'syntax',
+        stack: [],
+        isComponentError: false,
+        componentStack: [],
+        codeFrame: {
+          fileName,
+          location: null, // We are not given the location.
+          content: codeFrame,
+        },
+        message: {
+          content,
+          substitutions: [],
+        },
+        category: `${fileName}-${1}-${1}`,
+      };
+    }
   }
 
   if (message.match(/^TransformError /)) {
@@ -302,7 +332,7 @@ export function parseLogBoxException(
   }
 
   // Most `console.error` calls won't have a componentStack. We parse them like
-  // regular logs which have the component stack buried in the message.
+  // regular logs which have the component stack burried in the message.
   return {
     level: 'error',
     stack: error.stack,
diff --git a/node_modules/react-native/Libraries/LogBox/LogBox.js b/node_modules/react-native/Libraries/LogBox/LogBox.js
index 22c7596..a597ca5 100644
--- a/node_modules/react-native/Libraries/LogBox/LogBox.js
+++ b/node_modules/react-native/Libraries/LogBox/LogBox.js
@@ -258,4 +258,4 @@ if (__DEV__) {
   };
 }
 
-export default (LogBox: ILogBox);
+module.exports = (LogBox: ILogBox);
diff --git a/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js b/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js
index 110e411..68c571f 100644
--- a/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js
+++ b/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspector.js
@@ -92,7 +92,9 @@ const headerTitleMap = {
   component: 'Render Error',
 };
 
-function LogBoxInspectorBody(props: {log: LogBoxLog, onRetry: () => void}) {
+function LogBoxInspectorBody(
+  props: $TEMPORARY$object<{log: LogBoxLog, onRetry: () => void}>,
+) {
   const [collapsed, setCollapsed] = React.useState(true);
 
   React.useEffect(() => {
diff --git a/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorSourceMapStatus.js b/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorSourceMapStatus.js
index f54d001..c5eb157 100644
--- a/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorSourceMapStatus.js
+++ b/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorSourceMapStatus.js
@@ -41,7 +41,6 @@ function LogBoxInspectorSourceMapStatus(props: Props): React.Node {
             useNativeDriver: true,
           }),
         );
-        // $FlowFixMe[incompatible-call]
         setState({
           animation,
           rotate: animated.interpolate({
diff --git a/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js b/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js
index 98326f9..78fb0bd 100644
--- a/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js
+++ b/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorStackFrame.js
@@ -19,10 +19,10 @@ import LogBoxButton from './LogBoxButton';
 import * as LogBoxStyle from './LogBoxStyle';
 import * as React from 'react';
 
-type Props = $ReadOnly<{
+type Props = $ReadOnly<{|
   frame: StackFrame,
   onPress?: ?(event: PressEvent) => void,
-}>;
+|}>;
 
 function LogBoxInspectorStackFrame(props: Props): React.Node {
   const {frame, onPress} = props;
diff --git a/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js b/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js
index 805b47e..02ecf3d 100644
--- a/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js
+++ b/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js
@@ -11,8 +11,6 @@
 import type {TextStyleProp} from '../../StyleSheet/StyleSheet';
 import type {Message} from '../Data/parseLogBoxLog';
 
-import Linking from '../../Linking/Linking';
-import StyleSheet from '../../StyleSheet/StyleSheet';
 import Text from '../../Text/Text';
 import * as React from 'react';
 
@@ -24,82 +22,6 @@ type Props = {
   ...
 };
 
-type Range = {
-  lowerBound: number,
-  upperBound: number,
-};
-
-function getLinkRanges(string: string): $ReadOnlyArray<Range> {
-  const regex = /https?:\/\/[^\s$.?#].[^\s]*/gi;
-  const matches = [];
-
-  let regexResult: RegExp$matchResult | null;
-  while ((regexResult = regex.exec(string)) !== null) {
-    if (regexResult != null) {
-      matches.push({
-        lowerBound: regexResult.index,
-        upperBound: regex.lastIndex,
-      });
-    }
-  }
-
-  return matches;
-}
-
-function TappableLinks(props: {
-  content: string,
-  style: void | TextStyleProp,
-}): React.Node {
-  const matches = getLinkRanges(props.content);
-
-  if (matches.length === 0) {
-    // No URLs detected. Just return the content.
-    return <Text style={props.style}>{props.content}</Text>;
-  }
-
-  // URLs were detected. Construct array of Text nodes.
-
-  let fragments: Array<React.Node> = [];
-  let indexCounter = 0;
-  let startIndex = 0;
-
-  for (const linkRange of matches) {
-    if (startIndex < linkRange.lowerBound) {
-      const text = props.content.substring(startIndex, linkRange.lowerBound);
-      fragments.push(<Text key={++indexCounter}>{text}</Text>);
-    }
-
-    const link = props.content.substring(
-      linkRange.lowerBound,
-      linkRange.upperBound,
-    );
-    fragments.push(
-      <Text
-        onPress={() => {
-          // $FlowFixMe[unused-promise]
-          Linking.openURL(link);
-        }}
-        key={++indexCounter}
-        style={styles.linkText}>
-        {link}
-      </Text>,
-    );
-
-    startIndex = linkRange.upperBound;
-  }
-
-  if (startIndex < props.content.length) {
-    const text = props.content.substring(startIndex);
-    fragments.push(
-      <Text key={++indexCounter} style={props.style}>
-        {text}
-      </Text>,
-    );
-  }
-
-  return <Text style={props.style}>{fragments}</Text>;
-}
-
 const cleanContent = (content: string) =>
   content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');
 
@@ -127,7 +49,9 @@ function LogBoxMessage(props: Props): React.Node {
 
     if (length < maxLength) {
       elements.push(
-        <TappableLinks content={cleanMessage} key={key} style={style} />,
+        <Text key={key} style={style}>
+          {cleanMessage}
+        </Text>,
       );
     }
 
@@ -146,12 +70,12 @@ function LogBoxMessage(props: Props): React.Node {
       createUnderLength(key, prevPart);
     }
 
-    const substitutionPart = content.substr(
+    const substititionPart = content.substr(
       substitution.offset,
       substitution.length,
     );
 
-    createUnderLength(key + '.5', substitutionPart, substitutionStyle);
+    createUnderLength(key + '.5', substititionPart, substitutionStyle);
     return substitution.offset + substitution.length;
   }, 0);
 
@@ -163,10 +87,4 @@ function LogBoxMessage(props: Props): React.Node {
   return <>{elements}</>;
 }
 
-const styles = StyleSheet.create({
-  linkText: {
-    textDecorationLine: 'underline',
-  },
-});
-
 export default LogBoxMessage;
diff --git a/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js b/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js
index 826108f..ae9163f 100644
--- a/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js
+++ b/node_modules/react-native/Libraries/LogBox/UI/LogBoxNotification.js
@@ -21,13 +21,13 @@ import LogBoxMessage from './LogBoxMessage';
 import * as LogBoxStyle from './LogBoxStyle';
 import * as React from 'react';
 
-type Props = $ReadOnly<{
+type Props = $ReadOnly<{|
   log: LogBoxLog,
   totalLogCount: number,
   level: 'warn' | 'error',
   onPressOpen: () => void,
   onPressDismiss: () => void,
-}>;
+|}>;
 
 function LogBoxLogNotification(props: Props): React.Node {
   const {totalLogCount, level, log} = props;
@@ -56,7 +56,9 @@ function LogBoxLogNotification(props: Props): React.Node {
   );
 }
 
-function CountBadge(props: {count: number, level: 'error' | 'warn'}) {
+function CountBadge(
+  props: $TEMPORARY$object<{count: number, level: 'error' | 'warn'}>,
+) {
   return (
     <View style={countStyles.outside}>
       {/* $FlowFixMe[incompatible-type] (>=0.114.0) This suppression was added
@@ -71,7 +73,7 @@ function CountBadge(props: {count: number, level: 'error' | 'warn'}) {
   );
 }
 
-function Message(props: {message: MessageType}) {
+function Message(props: $TEMPORARY$object<{message: MessageType}>) {
   return (
     <View style={messageStyles.container}>
       <Text numberOfLines={1} style={messageStyles.text}>
@@ -87,7 +89,7 @@ function Message(props: {message: MessageType}) {
   );
 }
 
-function DismissButton(props: {onPress: () => void}) {
+function DismissButton(props: $TEMPORARY$object<{onPress: () => void}>) {
   return (
     <View style={dismissStyles.container}>
       <LogBoxButton
diff --git a/node_modules/react-native/Libraries/Modal/Modal.js b/node_modules/react-native/Libraries/Modal/Modal.js
index 9750d2e..b41ec14 100644
--- a/node_modules/react-native/Libraries/Modal/Modal.js
+++ b/node_modules/react-native/Libraries/Modal/Modal.js
@@ -13,11 +13,11 @@ import type {RootTag} from '../ReactNative/RootTag';
 import type {DirectEventHandler} from '../Types/CodegenTypes';
 
 import NativeEventEmitter from '../EventEmitter/NativeEventEmitter';
+import {VirtualizedListContextResetter} from '../Lists/VirtualizedListContext.js';
 import {type EventSubscription} from '../vendor/emitter/EventEmitter';
 import ModalInjection from './ModalInjection';
 import NativeModalManager from './NativeModalManager';
 import RCTModalHostView from './RCTModalHostViewNativeComponent';
-import {VirtualizedListContextResetter} from '@react-native/virtualized-lists';
 
 const ScrollView = require('../Components/ScrollView/ScrollView');
 const View = require('../Components/View/View');
@@ -91,7 +91,7 @@ export type Props = $ReadOnly<{|
    * The `statusBarTranslucent` prop determines whether your modal should go under
    * the system statusbar.
    *
-   * See https://reactnative.dev/docs/modal.html#statusbartranslucent-android
+   * See https://reactnative.dev/docs/modal#transparent
    */
   statusBarTranslucent?: ?boolean,
 
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTColorAnimatedNode.m b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTColorAnimatedNode.m
index d35d638..3a86978 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTColorAnimatedNode.m
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTColorAnimatedNode.m
@@ -8,8 +8,6 @@
 #import <React/RCTColorAnimatedNode.h>
 #import <React/RCTValueAnimatedNode.h>
 
-#import <React/RCTAnimationUtils.h>
-
 @implementation RCTColorAnimatedNode
 
 - (void)performUpdate
@@ -21,7 +19,8 @@ - (void)performUpdate
   RCTValueAnimatedNode *bNode = (RCTValueAnimatedNode *)[self.parentNodes objectForKey:self.config[@"b"]];
   RCTValueAnimatedNode *aNode = (RCTValueAnimatedNode *)[self.parentNodes objectForKey:self.config[@"a"]];
 
-  _color = RCTColorFromComponents(rNode.value, gNode.value, bNode.value, aNode.value);
+  _color = ((int)round(aNode.value * 255) & 0xff) << 24 | ((int)round(rNode.value) & 0xff) << 16 |
+      ((int)round(gNode.value) & 0xff) << 8 | ((int)round(bNode.value) & 0xff);
 
   // TODO (T111179606): Support platform colors for color animations
 }
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.h b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.h
index d56395d..2ac1650 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.h
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.h
@@ -7,20 +7,6 @@
 
 #import "RCTValueAnimatedNode.h"
 
-#import <React/RCTDefines.h>
-
-NS_ASSUME_NONNULL_BEGIN
-
-RCT_EXTERN NSString *RCTInterpolateString(
-    NSString *pattern,
-    CGFloat inputValue,
-    NSArray *inputRange,
-    NSArray<NSArray<NSNumber *> *> *outputRange,
-    NSString *extrapolateLeft,
-    NSString *extrapolateRight);
-
 @interface RCTInterpolationAnimatedNode : RCTValueAnimatedNode
 
 @end
-
-NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.m b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.m
index b8a0949..3950d4f 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.m
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTInterpolationAnimatedNode.m
@@ -8,116 +8,91 @@
 #import <React/RCTInterpolationAnimatedNode.h>
 
 #import <React/RCTAnimationUtils.h>
-#import <React/RCTConvert.h>
 
 static NSRegularExpression *regex;
 
-typedef NS_ENUM(NSInteger, RCTInterpolationOutputType) {
-  RCTInterpolationOutputNumber,
-  RCTInterpolationOutputColor,
-  RCTInterpolationOutputString,
-};
-
-static NSRegularExpression *getNumericComponentRegex()
-{
-  static NSRegularExpression *regex;
-  static dispatch_once_t onceToken;
-  dispatch_once(&onceToken, ^{
-    NSString *fpRegex = @"[+-]?(\\d+\\.?\\d*|\\.\\d+)([eE][+-]?\\d+)?";
-    regex = [NSRegularExpression regularExpressionWithPattern:fpRegex
-                                                      options:NSRegularExpressionCaseInsensitive
-                                                        error:nil];
-  });
-  return regex;
-}
-
-static NSArray<NSArray<NSNumber *> *> *outputFromStringPattern(NSString *input)
-{
-  NSMutableArray *output = [NSMutableArray array];
-  [getNumericComponentRegex()
-      enumerateMatchesInString:input
-                       options:0
-                         range:NSMakeRange(0, input.length)
-                    usingBlock:^(NSTextCheckingResult *_Nullable result, NSMatchingFlags flags, BOOL *_Nonnull stop) {
-                      [output addObject:@([[input substringWithRange:result.range] doubleValue])];
-                    }];
-  return output;
-}
-
-NSString *RCTInterpolateString(
-    NSString *pattern,
-    CGFloat inputValue,
-    NSArray<NSNumber *> *inputRange,
-    NSArray<NSArray<NSNumber *> *> *outputRange,
-    NSString *extrapolateLeft,
-    NSString *extrapolateRight)
-{
-  NSUInteger rangeIndex = RCTFindIndexOfNearestValue(inputValue, inputRange);
-
-  NSMutableString *output = [NSMutableString stringWithString:pattern];
-  NSArray<NSTextCheckingResult *> *matches =
-      [getNumericComponentRegex() matchesInString:pattern options:0 range:NSMakeRange(0, pattern.length)];
-  NSInteger matchIndex = matches.count - 1;
-  for (NSTextCheckingResult *match in [matches reverseObjectEnumerator]) {
-    CGFloat val = RCTInterpolateValue(
-        inputValue,
-        [inputRange[rangeIndex] doubleValue],
-        [inputRange[rangeIndex + 1] doubleValue],
-        [outputRange[rangeIndex][matchIndex] doubleValue],
-        [outputRange[rangeIndex + 1][matchIndex] doubleValue],
-        extrapolateLeft,
-        extrapolateRight);
-    [output replaceCharactersInRange:match.range withString:[@(val) stringValue]];
-    matchIndex--;
-  }
-  return output;
-}
-
 @implementation RCTInterpolationAnimatedNode {
   __weak RCTValueAnimatedNode *_parentNode;
   NSArray<NSNumber *> *_inputRange;
-  NSArray *_outputRange;
+  NSArray<NSNumber *> *_outputRange;
+  NSArray<NSArray<NSNumber *> *> *_outputs;
+  NSArray<NSString *> *_soutputRange;
   NSString *_extrapolateLeft;
   NSString *_extrapolateRight;
-  RCTInterpolationOutputType _outputType;
-  id _Nullable _outputvalue;
-  NSString *_Nullable _outputPattern;
-
+  NSUInteger _numVals;
+  bool _hasStringOutput;
+  bool _shouldRound;
   NSArray<NSTextCheckingResult *> *_matches;
 }
 
 - (instancetype)initWithTag:(NSNumber *)tag config:(NSDictionary<NSString *, id> *)config
 {
+  static dispatch_once_t onceToken;
+  dispatch_once(&onceToken, ^{
+    NSString *fpRegex = @"[+-]?(\\d+\\.?\\d*|\\.\\d+)([eE][+-]?\\d+)?";
+    regex = [NSRegularExpression regularExpressionWithPattern:fpRegex
+                                                      options:NSRegularExpressionCaseInsensitive
+                                                        error:nil];
+  });
   if ((self = [super initWithTag:tag config:config])) {
-    _inputRange = config[@"inputRange"];
+    _inputRange = [config[@"inputRange"] copy];
+    NSMutableArray *outputRange = [NSMutableArray array];
+    NSMutableArray *soutputRange = [NSMutableArray array];
+    NSMutableArray<NSMutableArray<NSNumber *> *> *_outputRanges = [NSMutableArray array];
+
+    _hasStringOutput = NO;
+    for (id value in config[@"outputRange"]) {
+      if ([value isKindOfClass:[NSNumber class]]) {
+        [outputRange addObject:value];
+      } else if ([value isKindOfClass:[NSString class]]) {
+        /**
+         * Supports string shapes by extracting numbers so new values can be computed,
+         * and recombines those values into new strings of the same shape.  Supports
+         * things like:
+         *
+         *   rgba(123, 42, 99, 0.36) // colors
+         *   -45deg                  // values with units
+         */
+        NSMutableArray *output = [NSMutableArray array];
+        [_outputRanges addObject:output];
+        [soutputRange addObject:value];
+
+        _matches = [regex matchesInString:value options:0 range:NSMakeRange(0, [value length])];
+        for (NSTextCheckingResult *match in _matches) {
+          NSString *strNumber = [value substringWithRange:match.range];
+          [output addObject:[NSNumber numberWithDouble:strNumber.doubleValue]];
+        }
 
-    NSArray *outputRangeConfig = config[@"outputRange"];
-    if ([config[@"outputType"] isEqual:@"color"]) {
-      _outputType = RCTInterpolationOutputColor;
-    } else if ([outputRangeConfig[0] isKindOfClass:[NSString class]]) {
-      _outputType = RCTInterpolationOutputString;
-      _outputPattern = outputRangeConfig[0];
-    } else {
-      _outputType = RCTInterpolationOutputNumber;
+        _hasStringOutput = YES;
+        [outputRange addObject:[output objectAtIndex:0]];
+      }
     }
-
-    NSMutableArray *outputRange = [NSMutableArray arrayWithCapacity:outputRangeConfig.count];
-    for (id value in outputRangeConfig) {
-      switch (_outputType) {
-        case RCTInterpolationOutputColor: {
-          UIColor *color = [RCTConvert UIColor:value];
-          [outputRange addObject:color ? color : [UIColor whiteColor]];
-          break;
+    if (_hasStringOutput) {
+      // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']
+      // ->
+      // [
+      //   [0, 50],
+      //   [100, 150],
+      //   [200, 250],
+      //   [0, 0.5],
+      // ]
+      _numVals = [_matches count];
+      NSString *value = [soutputRange objectAtIndex:0];
+      _shouldRound = [value containsString:@"rgb"];
+      _matches = [regex matchesInString:value options:0 range:NSMakeRange(0, [value length])];
+      NSMutableArray<NSMutableArray<NSNumber *> *> *outputs = [NSMutableArray arrayWithCapacity:_numVals];
+      NSUInteger size = [soutputRange count];
+      for (NSUInteger j = 0; j < _numVals; j++) {
+        NSMutableArray *output = [NSMutableArray arrayWithCapacity:size];
+        [outputs addObject:output];
+        for (int i = 0; i < size; i++) {
+          [output addObject:[[_outputRanges objectAtIndex:i] objectAtIndex:j]];
         }
-        case RCTInterpolationOutputString:
-          [outputRange addObject:outputFromStringPattern(value)];
-          break;
-        case RCTInterpolationOutputNumber:
-          [outputRange addObject:value];
-          break;
       }
+      _outputs = [outputs copy];
     }
-    _outputRange = outputRange;
+    _outputRange = [outputRange copy];
+    _soutputRange = [soutputRange copy];
     _extrapolateLeft = config[@"extrapolateLeft"];
     _extrapolateRight = config[@"extrapolateRight"];
   }
@@ -148,24 +123,43 @@ - (void)performUpdate
   }
 
   CGFloat inputValue = _parentNode.value;
-  switch (_outputType) {
-    case RCTInterpolationOutputColor:
-      _outputvalue = @(RCTInterpolateColorInRange(inputValue, _inputRange, _outputRange));
-      break;
-    case RCTInterpolationOutputString:
-      _outputvalue = RCTInterpolateString(
-          _outputPattern, inputValue, _inputRange, _outputRange, _extrapolateLeft, _extrapolateRight);
-      break;
-    case RCTInterpolationOutputNumber:
-      self.value =
-          RCTInterpolateValueInRange(inputValue, _inputRange, _outputRange, _extrapolateLeft, _extrapolateRight);
-      break;
-  }
-}
 
-- (id)animatedObject
-{
-  return _outputvalue;
+  CGFloat interpolated =
+      RCTInterpolateValueInRange(inputValue, _inputRange, _outputRange, _extrapolateLeft, _extrapolateRight);
+  self.value = interpolated;
+  if (_hasStringOutput) {
+    // 'rgba(0, 100, 200, 0)'
+    // ->
+    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'
+    if (_numVals > 1) {
+      NSString *text = _soutputRange[0];
+      NSMutableString *formattedText = [NSMutableString stringWithString:text];
+      NSUInteger i = _numVals;
+      for (NSTextCheckingResult *match in [_matches reverseObjectEnumerator]) {
+        CGFloat val =
+            RCTInterpolateValueInRange(inputValue, _inputRange, _outputs[--i], _extrapolateLeft, _extrapolateRight);
+        NSString *str;
+        if (_shouldRound) {
+          // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to
+          // round the opacity (4th column).
+          bool isAlpha = i == 3;
+          CGFloat rounded = isAlpha ? round(val * 1000) / 1000 : round(val);
+          str = isAlpha ? [NSString stringWithFormat:@"%1.3f", rounded] : [NSString stringWithFormat:@"%1.0f", rounded];
+        } else {
+          NSNumber *numberValue = [NSNumber numberWithDouble:val];
+          str = [numberValue stringValue];
+        }
+
+        [formattedText replaceCharactersInRange:[match range] withString:str];
+      }
+      self.animatedObject = formattedText;
+    } else {
+      self.animatedObject = [regex stringByReplacingMatchesInString:_soutputRange[0]
+                                                            options:0
+                                                              range:NSMakeRange(0, _soutputRange[0].length)
+                                                       withTemplate:[NSString stringWithFormat:@"%1f", interpolated]];
+    }
+  }
 }
 
 @end
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTPropsAnimatedNode.m b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTPropsAnimatedNode.m
index fdc5f88..9b732b3 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTPropsAnimatedNode.m
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTPropsAnimatedNode.m
@@ -76,7 +76,7 @@ - (void)restoreDefaultValues
 {
   if (_managedByFabric) {
     // Restoring to default values causes render of inconsistent state
-    // to the user because it isn't synchronised with Fabric's UIManager.
+    // to the user because it isn't synchonised with Fabric's UIManager.
     return;
   }
   // Restore the default value for all props that were modified by this node.
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTStyleAnimatedNode.m b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTStyleAnimatedNode.m
index 180b2b1..e99992e 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTStyleAnimatedNode.m
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTStyleAnimatedNode.m
@@ -38,12 +38,7 @@ - (void)performUpdate
     if (node) {
       if ([node isKindOfClass:[RCTValueAnimatedNode class]]) {
         RCTValueAnimatedNode *valueAnimatedNode = (RCTValueAnimatedNode *)node;
-        id animatedObject = valueAnimatedNode.animatedObject;
-        if (animatedObject) {
-          _propsDictionary[property] = animatedObject;
-        } else {
-          _propsDictionary[property] = @(valueAnimatedNode.value);
-        }
+        _propsDictionary[property] = @(valueAnimatedNode.value);
       } else if ([node isKindOfClass:[RCTTransformAnimatedNode class]]) {
         RCTTransformAnimatedNode *transformAnimatedNode = (RCTTransformAnimatedNode *)node;
         [_propsDictionary addEntriesFromDictionary:transformAnimatedNode.propsDictionary];
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.h b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.h
index 84d220b..ccc3346 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.h
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.h
@@ -24,7 +24,7 @@
 - (void)extractOffset;
 
 @property (nonatomic, assign) CGFloat value;
-@property (nonatomic, strong, readonly) id animatedObject;
+@property (nonatomic, strong) id animatedObject;
 @property (nonatomic, weak) id<RCTValueAnimatedNodeObserver> valueObserver;
 
 @end
diff --git a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.m b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.m
index 60d118c..d128c9d 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.m
+++ b/node_modules/react-native/Libraries/NativeAnimation/Nodes/RCTValueAnimatedNode.m
@@ -43,11 +43,6 @@ - (CGFloat)value
   return _value + _offset;
 }
 
-- (id)animatedObject
-{
-  return nil;
-}
-
 - (void)setValue:(CGFloat)value
 {
   _value = value;
diff --git a/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.h b/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.h
index 77152f4..97594f3 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.h
+++ b/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.h
@@ -10,11 +10,16 @@
 
 #import <React/RCTDefines.h>
 
-RCT_EXTERN NSString *const EXTRAPOLATE_TYPE_IDENTITY;
-RCT_EXTERN NSString *const EXTRAPOLATE_TYPE_CLAMP;
-RCT_EXTERN NSString *const EXTRAPOLATE_TYPE_EXTEND;
+static NSString *const EXTRAPOLATE_TYPE_IDENTITY = @"identity";
+static NSString *const EXTRAPOLATE_TYPE_CLAMP = @"clamp";
+static NSString *const EXTRAPOLATE_TYPE_EXTEND = @"extend";
 
-RCT_EXTERN NSUInteger RCTFindIndexOfNearestValue(CGFloat value, NSArray<NSNumber *> *range);
+RCT_EXTERN CGFloat RCTInterpolateValueInRange(
+    CGFloat value,
+    NSArray<NSNumber *> *inputRange,
+    NSArray<NSNumber *> *outputRange,
+    NSString *extrapolateLeft,
+    NSString *extrapolateRight);
 
 RCT_EXTERN CGFloat RCTInterpolateValue(
     CGFloat value,
@@ -25,18 +30,8 @@ RCT_EXTERN CGFloat RCTInterpolateValue(
     NSString *extrapolateLeft,
     NSString *extrapolateRight);
 
-RCT_EXTERN CGFloat RCTInterpolateValueInRange(
-    CGFloat value,
-    NSArray<NSNumber *> *inputRange,
-    NSArray<NSNumber *> *outputRange,
-    NSString *extrapolateLeft,
-    NSString *extrapolateRight);
-
-RCT_EXTERN uint32_t
-RCTInterpolateColorInRange(CGFloat value, NSArray<NSNumber *> *inputRange, NSArray<UIColor *> *outputRange);
-
-// Represents a color as a int32_t. RGB components are assumed to be in [0-255] range and alpha in [0-1] range
-RCT_EXTERN uint32_t RCTColorFromComponents(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha);
+RCT_EXTERN CGFloat RCTRadiansToDegrees(CGFloat radians);
+RCT_EXTERN CGFloat RCTDegreesToRadians(CGFloat degrees);
 
 /**
  * Coefficient to slow down animations, respects the ios
diff --git a/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.m b/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.m
index f628826..1f97b22 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.m
+++ b/node_modules/react-native/Libraries/NativeAnimation/RCTAnimationUtils.m
@@ -9,11 +9,7 @@
 
 #import <React/RCTLog.h>
 
-NSString *const EXTRAPOLATE_TYPE_IDENTITY = @"identity";
-NSString *const EXTRAPOLATE_TYPE_CLAMP = @"clamp";
-NSString *const EXTRAPOLATE_TYPE_EXTEND = @"extend";
-
-NSUInteger RCTFindIndexOfNearestValue(CGFloat value, NSArray<NSNumber *> *range)
+static NSUInteger _RCTFindIndexOfNearestValue(CGFloat value, NSArray<NSNumber *> *range)
 {
   NSUInteger index;
   NSUInteger rangeCount = range.count;
@@ -75,7 +71,7 @@ CGFloat RCTInterpolateValueInRange(
     NSString *extrapolateLeft,
     NSString *extrapolateRight)
 {
-  NSUInteger rangeIndex = RCTFindIndexOfNearestValue(value, inputRange);
+  NSUInteger rangeIndex = _RCTFindIndexOfNearestValue(value, inputRange);
   CGFloat inputMin = inputRange[rangeIndex].doubleValue;
   CGFloat inputMax = inputRange[rangeIndex + 1].doubleValue;
   CGFloat outputMin = outputRange[rangeIndex].doubleValue;
@@ -84,28 +80,14 @@ CGFloat RCTInterpolateValueInRange(
   return RCTInterpolateValue(value, inputMin, inputMax, outputMin, outputMax, extrapolateLeft, extrapolateRight);
 }
 
-uint32_t RCTInterpolateColorInRange(CGFloat value, NSArray<NSNumber *> *inputRange, NSArray<UIColor *> *outputRange)
+CGFloat RCTRadiansToDegrees(CGFloat radians)
 {
-  NSUInteger rangeIndex = RCTFindIndexOfNearestValue(value, inputRange);
-  CGFloat inputMin = inputRange[rangeIndex].doubleValue;
-  CGFloat inputMax = inputRange[rangeIndex + 1].doubleValue;
-
-  CGFloat redMin, greenMin, blueMin, alphaMin;
-  [outputRange[rangeIndex] getRed:&redMin green:&greenMin blue:&blueMin alpha:&alphaMin];
-  CGFloat redMax, greenMax, blueMax, alphaMax;
-  [outputRange[rangeIndex + 1] getRed:&redMax green:&greenMax blue:&blueMax alpha:&alphaMax];
-
-  return RCTColorFromComponents(
-      0xFF * (redMin + (value - inputMin) * (redMax - redMin) / (inputMax - inputMin)),
-      0xFF * (greenMin + (value - inputMin) * (greenMax - greenMin) / (inputMax - inputMin)),
-      0xFF * (blueMin + (value - inputMin) * (blueMax - blueMin) / (inputMax - inputMin)),
-      alphaMin + (value - inputMin) * (alphaMax - alphaMin) / (inputMax - inputMin));
+  return radians * 180.0 / M_PI;
 }
 
-uint32_t RCTColorFromComponents(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
+CGFloat RCTDegreesToRadians(CGFloat degrees)
 {
-  return ((uint32_t)round(alpha * 255) & 0xFF) << 24 | ((uint32_t)round(red) & 0xFF) << 16 |
-      ((uint32_t)round(green) & 0xFF) << 8 | ((uint32_t)round(blue) & 0xFF);
+  return degrees / 180.0 * M_PI;
 }
 
 #if TARGET_IPHONE_SIMULATOR
diff --git a/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec b/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec
index 9660837..2a15aed 100644
--- a/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec
+++ b/node_modules/react-native/Libraries/NativeAnimation/React-RCTAnimation.podspec
@@ -19,26 +19,13 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\""
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTAnimation"
   s.version                = version
   s.summary                = "A native driver for the Animated API."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -48,7 +35,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(" ")
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
 
   s.dependency "RCT-Folly", folly_version
diff --git a/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js b/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js
index a742b0d..6d2a048 100644
--- a/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js
+++ b/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.android.js
@@ -160,11 +160,11 @@ const directEventTypes = {
 
 const validAttributesForNonEventProps = {
   // @ReactProps from BaseViewManager
-  backgroundColor: {process: require('../StyleSheet/processColor').default},
+  backgroundColor: {process: require('../StyleSheet/processColor')},
   transform: true,
   opacity: true,
   elevation: true,
-  shadowColor: {process: require('../StyleSheet/processColor').default},
+  shadowColor: {process: require('../StyleSheet/processColor')},
   zIndex: true,
   renderToHardwareTextureAndroid: true,
   testID: true,
@@ -212,36 +212,24 @@ const validAttributesForNonEventProps = {
   display: true,
 
   margin: true,
-  marginBlock: true,
-  marginBlockEnd: true,
-  marginBlockStart: true,
-  marginBottom: true,
-  marginEnd: true,
+  marginVertical: true,
   marginHorizontal: true,
-  marginInline: true,
-  marginInlineEnd: true,
-  marginInlineStart: true,
-  marginLeft: true,
-  marginRight: true,
   marginStart: true,
+  marginEnd: true,
   marginTop: true,
-  marginVertical: true,
+  marginBottom: true,
+  marginLeft: true,
+  marginRight: true,
 
   padding: true,
-  paddingBlock: true,
-  paddingBlockEnd: true,
-  paddingBlockStart: true,
-  paddingBottom: true,
-  paddingEnd: true,
+  paddingVertical: true,
   paddingHorizontal: true,
-  paddingInline: true,
-  paddingInlineEnd: true,
-  paddingInlineStart: true,
-  paddingLeft: true,
-  paddingRight: true,
   paddingStart: true,
+  paddingEnd: true,
   paddingTop: true,
-  paddingVertical: true,
+  paddingBottom: true,
+  paddingLeft: true,
+  paddingRight: true,
 
   borderWidth: true,
   borderStartWidth: true,
diff --git a/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.ios.js b/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.ios.js
index fd334f4..093588c 100644
--- a/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.ios.js
+++ b/node_modules/react-native/Libraries/NativeComponent/BaseViewConfig.ios.js
@@ -176,10 +176,10 @@ const validAttributesForNonEventProps = {
   accessibilityElementsHidden: true,
   accessibilityIgnoresInvertColors: true,
   testID: true,
-  backgroundColor: {process: require('../StyleSheet/processColor').default},
+  backgroundColor: {process: require('../StyleSheet/processColor')},
   backfaceVisibility: true,
   opacity: true,
-  shadowColor: {process: require('../StyleSheet/processColor').default},
+  shadowColor: {process: require('../StyleSheet/processColor')},
   shadowOffset: {diff: require('../Utilities/differ/sizesDiffer')},
   shadowOpacity: true,
   shadowRadius: true,
@@ -193,7 +193,7 @@ const validAttributesForNonEventProps = {
   pointerEvents: true,
   removeClippedSubviews: true,
   borderRadius: true,
-  borderColor: {process: require('../StyleSheet/processColor').default},
+  borderColor: {process: require('../StyleSheet/processColor')},
   borderCurve: true,
   borderWidth: true,
   borderStyle: true,
@@ -201,17 +201,17 @@ const validAttributesForNonEventProps = {
   collapsable: true,
 
   borderTopWidth: true,
-  borderTopColor: {process: require('../StyleSheet/processColor').default},
+  borderTopColor: {process: require('../StyleSheet/processColor')},
   borderRightWidth: true,
-  borderRightColor: {process: require('../StyleSheet/processColor').default},
+  borderRightColor: {process: require('../StyleSheet/processColor')},
   borderBottomWidth: true,
-  borderBottomColor: {process: require('../StyleSheet/processColor').default},
+  borderBottomColor: {process: require('../StyleSheet/processColor')},
   borderLeftWidth: true,
-  borderLeftColor: {process: require('../StyleSheet/processColor').default},
+  borderLeftColor: {process: require('../StyleSheet/processColor')},
   borderStartWidth: true,
-  borderStartColor: {process: require('../StyleSheet/processColor').default},
+  borderStartColor: {process: require('../StyleSheet/processColor')},
   borderEndWidth: true,
-  borderEndColor: {process: require('../StyleSheet/processColor').default},
+  borderEndColor: {process: require('../StyleSheet/processColor')},
 
   borderTopLeftRadius: true,
   borderTopRightRadius: true,
@@ -221,10 +221,6 @@ const validAttributesForNonEventProps = {
   borderBottomRightRadius: true,
   borderBottomStartRadius: true,
   borderBottomEndRadius: true,
-  borderEndEndRadius: true,
-  borderEndStartRadius: true,
-  borderStartEndRadius: true,
-  borderStartStartRadius: true,
   display: true,
   zIndex: true,
 
@@ -253,37 +249,25 @@ const validAttributesForNonEventProps = {
   // borderEndWidth: true,
   // borderWidth: true,
 
-  margin: true,
-  marginBlock: true,
-  marginBlockEnd: true,
-  marginBlockStart: true,
+  marginTop: true,
+  marginRight: true,
   marginBottom: true,
-  marginEnd: true,
-  marginHorizontal: true,
-  marginInline: true,
-  marginInlineEnd: true,
-  marginInlineStart: true,
   marginLeft: true,
-  marginRight: true,
   marginStart: true,
-  marginTop: true,
+  marginEnd: true,
   marginVertical: true,
+  marginHorizontal: true,
+  margin: true,
 
-  padding: true,
-  paddingBlock: true,
-  paddingBlockEnd: true,
-  paddingBlockStart: true,
+  paddingTop: true,
+  paddingRight: true,
   paddingBottom: true,
-  paddingEnd: true,
-  paddingHorizontal: true,
-  paddingInline: true,
-  paddingInlineEnd: true,
-  paddingInlineStart: true,
   paddingLeft: true,
-  paddingRight: true,
   paddingStart: true,
-  paddingTop: true,
+  paddingEnd: true,
   paddingVertical: true,
+  paddingHorizontal: true,
+  padding: true,
 
   flex: true,
   flexGrow: true,
diff --git a/node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js b/node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js
index cb6ac57..cebacfc 100644
--- a/node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js
+++ b/node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js
@@ -3,9 +3,6 @@
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
  */
 
 let componentNameToExists: Map<string, boolean> = new Map();
@@ -14,7 +11,7 @@ let componentNameToExists: Map<string, boolean> = new Map();
  * Unstable API. Do not use!
  *
  * This method returns if the component with name received as a parameter
- * is registered in the native platform.
+ * is registed in the native platform.
  */
 export function unstable_hasComponent(name: string): boolean {
   let hasNativeComponent = componentNameToExists.get(name);
diff --git a/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js b/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js
index 6f4ac62..a15e602 100644
--- a/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js
+++ b/node_modules/react-native/Libraries/NativeComponent/ViewConfig.js
@@ -32,7 +32,6 @@ export function createViewConfig(
       PlatformBaseViewConfig.directEventTypes,
       partialViewConfig.directEventTypes,
     ),
-    // $FlowFixMe[incompatible-return]
     validAttributes: composeIndexers(
       // $FlowFixMe[incompatible-call] `style` property confuses Flow.
       PlatformBaseViewConfig.validAttributes,
diff --git a/node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js b/node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js
index 99a067e..dbbea9d 100644
--- a/node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js
+++ b/node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js
@@ -37,7 +37,10 @@ export function DynamicallyInjectedByGestureHandler<T: {...}>(object: T): T {
 export function ConditionallyIgnoredEventHandlers<T: {[name: string]: true}>(
   value: T,
 ): T | void {
-  if (Platform.OS === 'ios') {
+  if (
+    Platform.OS === 'ios' &&
+    !(global.RN$ViewConfigEventValidAttributesDisabled === true)
+  ) {
     return value;
   }
   return undefined;
diff --git a/node_modules/react-native/Libraries/Network/RCTNetworking.android.js b/node_modules/react-native/Libraries/Network/RCTNetworking.android.js
index 69458bc..4a46103 100644
--- a/node_modules/react-native/Libraries/Network/RCTNetworking.android.js
+++ b/node_modules/react-native/Libraries/Network/RCTNetworking.android.js
@@ -22,7 +22,7 @@ type Header = [string, string];
 // Convert FormData headers to arrays, which are easier to consume in
 // native on Android.
 function convertHeadersMapToArray(headers: Object): Array<Header> {
-  const headerArray: Array<Header> = [];
+  const headerArray = [];
   for (const name in headers) {
     headerArray.push([name, headers[name]]);
   }
@@ -91,4 +91,4 @@ class RCTNetworking extends NativeEventEmitter<$FlowFixMe> {
   }
 }
 
-export default (new RCTNetworking(): RCTNetworking);
+module.exports = (new RCTNetworking(): RCTNetworking);
diff --git a/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js b/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js
index 4b49b50..08e6208 100644
--- a/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js
+++ b/node_modules/react-native/Libraries/Network/RCTNetworking.ios.js
@@ -109,4 +109,4 @@ const RCTNetworking = {
   },
 };
 
-export default RCTNetworking;
+module.exports = RCTNetworking;
diff --git a/node_modules/react-native/Libraries/Network/RCTNetworking.mm b/node_modules/react-native/Libraries/Network/RCTNetworking.mm
index 9b9c127..24c1752 100644
--- a/node_modules/react-native/Libraries/Network/RCTNetworking.mm
+++ b/node_modules/react-native/Libraries/Network/RCTNetworking.mm
@@ -111,7 +111,7 @@ - (RCTURLRequestCancellationBlock)handleResult:(NSDictionary<NSString *, id> *)r
   // Print headers.
   NSMutableDictionary<NSString *, NSString *> *headers = [_parts[0][@"headers"] mutableCopy];
   NSString *partContentType = result[@"contentType"];
-  if (partContentType != nil && ![partContentType isEqual:[NSNull null]]) {
+  if (partContentType != nil) {
     headers[@"content-type"] = partContentType;
   }
   [headers enumerateKeysAndObjectsUsingBlock:^(NSString *parameterKey, NSString *parameterValue, BOOL *stop) {
@@ -331,8 +331,7 @@ - (RCTURLRequestCancellationBlock)buildRequest:(NSDictionary<NSString *, id> *)q
                                 request.HTTPBody = result[@"body"];
                                 NSString *dataContentType = result[@"contentType"];
                                 NSString *requestContentType = [request valueForHTTPHeaderField:@"Content-Type"];
-                                BOOL isMultipart = ![dataContentType isEqual:[NSNull null]] &&
-                                    [dataContentType hasPrefix:@"multipart"];
+                                BOOL isMultipart = [dataContentType hasPrefix:@"multipart"];
 
                                 // For multipart requests we need to override caller-specified content type with one
                                 // from the data object, because it contains the boundary string
diff --git a/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec b/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec
index 05513c9..c0bd78a 100644
--- a/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec
+++ b/node_modules/react-native/Libraries/Network/React-RCTNetwork.podspec
@@ -19,30 +19,13 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers\"",
-
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTNetwork"
   s.version                = version
   s.summary                = "The networking library of React Native."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -52,7 +35,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
   s.frameworks             = "MobileCoreServices"
 
diff --git a/node_modules/react-native/Libraries/Network/XMLHttpRequest.js b/node_modules/react-native/Libraries/Network/XMLHttpRequest.js
index f66d194..abf008c 100644
--- a/node_modules/react-native/Libraries/Network/XMLHttpRequest.js
+++ b/node_modules/react-native/Libraries/Network/XMLHttpRequest.js
@@ -16,7 +16,7 @@ import {type EventSubscription} from '../vendor/emitter/EventEmitter';
 
 const BlobManager = require('../Blob/BlobManager');
 const GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');
-const RCTNetworking = require('./RCTNetworking').default;
+const RCTNetworking = require('./RCTNetworking');
 const base64 = require('base64-js');
 const EventTarget = require('event-target-shim');
 const invariant = require('invariant');
diff --git a/node_modules/react-native/Libraries/Performance/PureComponentDebug.js b/node_modules/react-native/Libraries/Performance/PureComponentDebug.js
new file mode 100644
index 0000000..91ca67c
--- /dev/null
+++ b/node_modules/react-native/Libraries/Performance/PureComponentDebug.js
@@ -0,0 +1,74 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+'use strict';
+
+const React = require('react');
+
+opaque type DoNotCommitUsageOfPureComponentDebug = {...};
+
+/**
+ * Identifies which prop or state changes triggered a re-render of a PureComponent. Usage:
+ *
+ * Change `extends React.PureComponent` to `extends PureComponentDebug` or inject it
+ * everywhere by putting this line in your app setup:
+ *
+ *    React.PureComponent = require('PureComponentDebug');
+ *
+ * Should only be used for local testing, and will trigger a flow failure if you try to
+ * commit any usages.
+ */
+class PureComponentDebug<
+  P: DoNotCommitUsageOfPureComponentDebug,
+  S: ?{...} = void,
+> extends React.Component<P, S> {
+  shouldComponentUpdate(nextProps: P, nextState: S): boolean {
+    const tag = this.constructor.name;
+    let ret = false;
+    const prevPropsKeys = Object.keys(this.props);
+    const nextPropsKeys = Object.keys(nextProps);
+    if (prevPropsKeys.length !== nextPropsKeys.length) {
+      ret = true;
+      console.warn(
+        'PureComponentDebug: different prop keys',
+        tag,
+        prevPropsKeys.filter(key => !nextPropsKeys.includes(key)),
+        nextPropsKeys.filter(key => !prevPropsKeys.includes(key)),
+      );
+    }
+    const prevStateKeys = Object.keys(this.state || {});
+    const nextStateKeys = Object.keys(nextState || {});
+    if (prevStateKeys.length !== nextStateKeys.length) {
+      ret = true;
+      console.warn(
+        'PureComponentDebug: different state keys',
+        tag,
+        prevStateKeys.filter(key => !nextStateKeys.includes(key)),
+        nextStateKeys.filter(key => !prevStateKeys.includes(key)),
+      );
+    }
+    for (const key in this.props) {
+      if (this.props[key] !== nextProps[key]) {
+        ret = true;
+        console.warn('PureComponentDebug: different prop values', tag, key);
+      }
+    }
+    for (const key in this.state) {
+      // $FlowFixMe[incompatible-use]
+      if (this.state[key] !== (nextState || {})[key]) {
+        ret = true;
+        console.warn('PureComponentDebug: different state values', tag, key);
+      }
+    }
+    return ret;
+  }
+}
+
+module.exports = PureComponentDebug;
diff --git a/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js b/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js
index e975ba4..094b3cc 100644
--- a/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js
+++ b/node_modules/react-native/Libraries/PermissionsAndroid/PermissionsAndroid.js
@@ -75,6 +75,7 @@ const PERMISSIONS = Object.freeze({
   ANSWER_PHONE_CALLS: 'android.permission.ANSWER_PHONE_CALLS',
   READ_PHONE_NUMBERS: 'android.permission.READ_PHONE_NUMBERS',
   UWB_RANGING: 'android.permission.UWB_RANGING',
+  POST_NOTIFICATION: 'android.permission.POST_NOTIFICATIONS', // Remove in 0.72
   POST_NOTIFICATIONS: 'android.permission.POST_NOTIFICATIONS',
   NEARBY_WIFI_DEVICES: 'android.permission.NEARBY_WIFI_DEVICES',
 });
@@ -106,6 +107,7 @@ class PermissionsAndroid {
     CAMERA: string,
     GET_ACCOUNTS: string,
     NEARBY_WIFI_DEVICES: string,
+    POST_NOTIFICATION: string, // Remove in 0.72
     POST_NOTIFICATIONS: string,
     PROCESS_OUTGOING_CALLS: string,
     READ_CALENDAR: string,
diff --git a/node_modules/react-native/Libraries/Pressability/Pressability.js b/node_modules/react-native/Libraries/Pressability/Pressability.js
index 8bf51ee..5fa9b89 100644
--- a/node_modules/react-native/Libraries/Pressability/Pressability.js
+++ b/node_modules/react-native/Libraries/Pressability/Pressability.js
@@ -112,7 +112,7 @@ export type PressabilityConfig = $ReadOnly<{|
   onLongPress?: ?(event: PressEvent) => mixed,
 
   /**
-   * Called when a press gesture has been triggered.
+   * Called when a press gestute has been triggered.
    */
   onPress?: ?(event: PressEvent) => mixed,
 
@@ -281,8 +281,6 @@ const DEFAULT_PRESS_RECT_OFFSETS = {
 };
 const DEFAULT_MIN_PRESS_DURATION = 130;
 
-const DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE = 10;
-let longPressDeactivationDistance = DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE;
 /**
  * Pressability implements press handling capabilities.
  *
@@ -432,10 +430,6 @@ export default class Pressability {
     return this._eventHandlers;
   }
 
-  static setLongPressDeactivationDistance(distance: number): void {
-    longPressDeactivationDistance = distance;
-  }
-
   _createEventHandlers(): EventHandlers {
     const focusEventHandlers = {
       onBlur: (event: BlurEvent): void => {
@@ -514,7 +508,7 @@ export default class Pressability {
         if (this._touchActivatePosition != null) {
           const deltaX = this._touchActivatePosition.pageX - touch.pageX;
           const deltaY = this._touchActivatePosition.pageY - touch.pageY;
-          if (Math.hypot(deltaX, deltaY) > longPressDeactivationDistance) {
+          if (Math.hypot(deltaX, deltaY) > 10) {
             this._cancelLongPressDelayTimeout();
           }
         }
@@ -565,8 +559,8 @@ export default class Pressability {
       ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()
     ) {
       const hoverPointerEvents = {
-        onPointerEnter: (undefined: void | (PointerEvent => void)),
-        onPointerLeave: (undefined: void | (PointerEvent => void)),
+        onPointerEnter: undefined,
+        onPointerLeave: undefined,
       };
       const {onHoverIn, onHoverOut} = this._config;
       if (onHoverIn != null) {
diff --git a/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec b/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec
index e9549ee..4d410d7 100644
--- a/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec
+++ b/node_modules/react-native/Libraries/PushNotificationIOS/React-RCTPushNotification.podspec
@@ -19,19 +19,6 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\""
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTPushNotification"
   s.version                = version
@@ -39,7 +26,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/pushnotificationios"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -49,7 +36,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
   s.framework              = "UserNotifications"
 
diff --git a/node_modules/react-native/Libraries/RCTRequired/BUCK b/node_modules/react-native/Libraries/RCTRequired/BUCK
index 8e01b72..579d95b 100644
--- a/node_modules/react-native/Libraries/RCTRequired/BUCK
+++ b/node_modules/react-native/Libraries/RCTRequired/BUCK
@@ -1,6 +1,6 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "rn_apple_library")
+load("//tools/build_defs/oss:rn_defs.bzl", "fb_apple_library")
 
-rn_apple_library(
+fb_apple_library(
     name = "RCTRequired",
     exported_headers = [
         "RCTRequired/RCTRequired.h",
@@ -8,7 +8,6 @@ rn_apple_library(
     autoglob = False,
     complete_nullability = True,
     contacts = ["oncall+react_native@xmail.facebook.com"],
-    disable_infer_precompiled_header = True,
     extension_api_only = True,
     frameworks = ["Foundation"],
     labels = [
diff --git a/node_modules/react-native/Libraries/RCTRequired/RCTRequired.podspec b/node_modules/react-native/Libraries/RCTRequired/RCTRequired.podspec
index dc38d2a..a0f1a64 100644
--- a/node_modules/react-native/Libraries/RCTRequired/RCTRequired.podspec
+++ b/node_modules/react-native/Libraries/RCTRequired/RCTRequired.podspec
@@ -22,7 +22,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{c,h,m,mm,cpp}"
diff --git a/node_modules/react-native/Libraries/ReactNative/AppContainer.js b/node_modules/react-native/Libraries/ReactNative/AppContainer.js
index 59c0cb1..cf3f1d0 100644
--- a/node_modules/react-native/Libraries/ReactNative/AppContainer.js
+++ b/node_modules/react-native/Libraries/ReactNative/AppContainer.js
@@ -32,7 +32,6 @@ type Props = $ReadOnly<{|
 type State = {|
   inspector: ?React.Node,
   devtoolsOverlay: ?React.Node,
-  traceUpdateOverlay: ?React.Node,
   mainKey: number,
   hasError: boolean,
 |};
@@ -41,7 +40,6 @@ class AppContainer extends React.Component<Props, State> {
   state: State = {
     inspector: null,
     devtoolsOverlay: null,
-    traceUpdateOverlay: null,
     mainKey: 1,
     hasError: false,
   };
@@ -77,10 +75,7 @@ class AppContainer extends React.Component<Props, State> {
           const devtoolsOverlay = (
             <DevtoolsOverlay inspectedView={this._mainRef} />
           );
-          const TraceUpdateOverlay =
-            require('../Components/TraceUpdateOverlay/TraceUpdateOverlay').default;
-          const traceUpdateOverlay = <TraceUpdateOverlay />;
-          this.setState({devtoolsOverlay, traceUpdateOverlay});
+          this.setState({devtoolsOverlay});
         }
       }
     }
@@ -132,7 +127,6 @@ class AppContainer extends React.Component<Props, State> {
       <RootTagContext.Provider value={createRootTag(this.props.rootTag)}>
         <View style={styles.appContainer} pointerEvents="box-none">
           {!this.state.hasError && innerView}
-          {this.state.traceUpdateOverlay}
           {this.state.devtoolsOverlay}
           {this.state.inspector}
           {logBox}
diff --git a/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts b/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts
index fabfa12..2e792e7 100644
--- a/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts
+++ b/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts
@@ -8,7 +8,7 @@
  */
 
 import type * as React from 'react';
-import type {IPerformanceLogger} from '../Utilities/IPerformanceLogger';
+import type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';
 
 type Task = (taskData: any) => Promise<void>;
 type TaskProvider = () => Task;
diff --git a/node_modules/react-native/Libraries/ReactNative/AppRegistry.js b/node_modules/react-native/Libraries/ReactNative/AppRegistry.js
index af3fa3a..45c08d4 100644
--- a/node_modules/react-native/Libraries/ReactNative/AppRegistry.js
+++ b/node_modules/react-native/Libraries/ReactNative/AppRegistry.js
@@ -312,7 +312,6 @@ const AppRegistry = {
           NativeHeadlessJsTaskSupport &&
           reason instanceof HeadlessJsTaskError
         ) {
-          // $FlowFixMe[unused-promise]
           NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(
             retryPosted => {
               if (!retryPosted) {
@@ -341,15 +340,19 @@ const AppRegistry = {
 if (!(global.RN$Bridgeless === true)) {
   BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);
 
-  AppRegistry.registerComponent('LogBox', () => {
-    if (__DEV__) {
-      return require('../LogBox/LogBoxInspectorContainer').default;
-    } else {
-      return function NoOp() {
-        return null;
-      };
-    }
-  });
+  if (__DEV__) {
+    const LogBoxInspector =
+      require('../LogBox/LogBoxInspectorContainer').default;
+    AppRegistry.registerComponent('LogBox', () => LogBoxInspector);
+  } else {
+    AppRegistry.registerComponent(
+      'LogBox',
+      () =>
+        function NoOp() {
+          return null;
+        },
+    );
+  }
 }
 
 module.exports = AppRegistry;
diff --git a/node_modules/react-native/Libraries/ReactNative/FabricUIManager.js b/node_modules/react-native/Libraries/ReactNative/FabricUIManager.js
index e37261a..b73fc1e 100644
--- a/node_modules/react-native/Libraries/ReactNative/FabricUIManager.js
+++ b/node_modules/react-native/Libraries/ReactNative/FabricUIManager.js
@@ -4,7 +4,7 @@
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * @flow strict
+ * @flow strict-local
  * @format
  */
 
@@ -19,7 +19,7 @@ import type {
 import type {RootTag} from '../Types/RootTagTypes';
 
 // TODO: type these properly.
-export opaque type Node = {...};
+type Node = {...};
 type NodeSet = Array<Node>;
 type NodeProps = {...};
 type InstanceHandle = {...};
@@ -53,29 +53,13 @@ export type Spec = {|
   +configureNextLayoutAnimation: (
     config: LayoutAnimationConfig,
     callback: () => void, // check what is returned here
-    errorCallback: () => void,
+    // This error isn't currently called anywhere, so the `error` object is really not defined
+    // $FlowFixMe[unclear-type]
+    errorCallback: (error: Object) => void,
   ) => void,
   +sendAccessibilityEvent: (node: Node, eventType: string) => void,
-  +findShadowNodeByTag_DEPRECATED: (reactTag: number) => ?Node,
-  +getBoundingClientRect: (
-    node: Node,
-  ) => [
-    /* x:*/ number,
-    /* y:*/ number,
-    /* width:*/ number,
-    /* height:*/ number,
-  ],
-  +setNativeProps: (node: Node, newProps: NodeProps) => void,
-  +dispatchCommand: (
-    node: Node,
-    commandName: string,
-    args: Array<mixed>,
-  ) => void,
 |};
 
-// This is exposed as a getter because apps using the legacy renderer AND
-// Fabric can define the binding lazily. If we evaluated the global and cached
-// it in the module we might be caching an `undefined` value before it is set.
-export function getFabricUIManager(): ?Spec {
-  return global.nativeFabricUIManager;
-}
+const FabricUIManager: ?Spec = global.nativeFabricUIManager;
+
+module.exports = FabricUIManager;
diff --git a/node_modules/react-native/Libraries/ReactNative/NativeUIManager.js b/node_modules/react-native/Libraries/ReactNative/NativeUIManager.js
index a9586ee..df161a1 100644
--- a/node_modules/react-native/Libraries/ReactNative/NativeUIManager.js
+++ b/node_modules/react-native/Libraries/ReactNative/NativeUIManager.js
@@ -44,7 +44,7 @@ export interface Spec extends TurboModule {
     commandArgs: ?Array<any>,
   ) => void;
   +measure: (
-    reactTag: number,
+    reactTag: ?number,
     callback: (
       left: number,
       top: number,
@@ -55,7 +55,7 @@ export interface Spec extends TurboModule {
     ) => void,
   ) => void;
   +measureInWindow: (
-    reactTag: number,
+    reactTag: ?number,
     callback: (x: number, y: number, width: number, height: number) => void,
   ) => void;
   +viewIsDescendantOf: (
@@ -64,8 +64,8 @@ export interface Spec extends TurboModule {
     callback: (result: Array<boolean>) => void,
   ) => void;
   +measureLayout: (
-    reactTag: number,
-    ancestorReactTag: number,
+    reactTag: ?number,
+    ancestorReactTag: ?number,
     errorCallback: (error: Object) => void,
     callback: (
       left: number,
@@ -75,7 +75,7 @@ export interface Spec extends TurboModule {
     ) => void,
   ) => void;
   +measureLayoutRelativeToParent: (
-    reactTag: number,
+    reactTag: ?number,
     errorCallback: (error: Object) => void,
     callback: (
       left: number,
diff --git a/node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js b/node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js
index 8881d28..1e5845c 100644
--- a/node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js
+++ b/node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js
@@ -4,10 +4,12 @@
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * @flow strict
+ * @flow strict-local
  * @format
  */
 
+'use strict';
+
 export type FeatureFlags = {|
   /**
    * Function used to enable / disabled Layout Animations in React Native.
@@ -37,14 +39,12 @@ export type FeatureFlags = {|
    */
   animatedShouldUseSingleOp: () => boolean,
   /**
-   * Enables GlobalPerformanceLogger replacement with a WebPerformance API based
-   * implementation
-   */
-  isGlobalWebPerformanceLoggerEnabled: () => boolean,
-  /**
-   * Enables access to the host tree in Fabric using DOM-compatible APIs.
+   * This feature flag enables an experimental render system that allows
+   * to render react components driven by classes written in C++.
    */
-  enableAccessToHostTreeInFabric: () => boolean,
+  enableCppRenderSystem: () => boolean,
+
+  removeListenersOnDetach: () => boolean,
 |};
 
 const ReactNativeFeatureFlags: FeatureFlags = {
@@ -53,8 +53,8 @@ const ReactNativeFeatureFlags: FeatureFlags = {
   shouldPressibilityUseW3CPointerEventsForHover: () => false,
   animatedShouldDebounceQueueFlush: () => false,
   animatedShouldUseSingleOp: () => false,
-  isGlobalWebPerformanceLoggerEnabled: () => false,
-  enableAccessToHostTreeInFabric: () => false,
+  enableCppRenderSystem: () => false,
+  removeListenersOnDetach: () => false,
 };
 
 module.exports = ReactNativeFeatureFlags;
diff --git a/node_modules/react-native/Libraries/ReactNative/UIManager.js b/node_modules/react-native/Libraries/ReactNative/UIManager.js
index e830b96..ffead49 100644
--- a/node_modules/react-native/Libraries/ReactNative/UIManager.js
+++ b/node_modules/react-native/Libraries/ReactNative/UIManager.js
@@ -11,9 +11,6 @@
 import type {RootTag} from '../Types/RootTagTypes';
 import type {Spec} from './NativeUIManager';
 
-import {getFabricUIManager} from './FabricUIManager';
-import nullthrows from 'nullthrows';
-
 export interface UIManagerJSInterface extends Spec {
   +getViewManagerConfig: (viewManagerName: string) => Object;
   +hasViewManagerConfig: (viewManagerName: string) => boolean;
@@ -34,173 +31,9 @@ export interface UIManagerJSInterface extends Spec {
   ) => void;
 }
 
-function isFabricReactTag(reactTag: number): boolean {
-  // React reserves even numbers for Fabric.
-  return reactTag % 2 === 0;
-}
-
-const UIManagerImpl: UIManagerJSInterface =
+const UIManager: UIManagerJSInterface =
   global.RN$Bridgeless === true
     ? require('./BridgelessUIManager')
     : require('./PaperUIManager');
 
-// $FlowFixMe[cannot-spread-interface]
-const UIManager = {
-  ...UIManagerImpl,
-  measure(
-    reactTag: number,
-    callback: (
-      left: number,
-      top: number,
-      width: number,
-      height: number,
-      pageX: number,
-      pageY: number,
-    ) => void,
-  ): void {
-    if (isFabricReactTag(reactTag)) {
-      const FabricUIManager = nullthrows(getFabricUIManager());
-      const shadowNode =
-        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
-      if (shadowNode) {
-        FabricUIManager.measure(shadowNode, callback);
-      } else {
-        console.warn(`measure cannot find view with tag #${reactTag}`);
-        // $FlowFixMe[incompatible-call]
-        callback();
-      }
-    } else {
-      // Paper
-      UIManagerImpl.measure(reactTag, callback);
-    }
-  },
-
-  measureInWindow(
-    reactTag: number,
-    callback: (
-      left: number,
-      top: number,
-      width: number,
-      height: number,
-    ) => void,
-  ): void {
-    if (isFabricReactTag(reactTag)) {
-      const FabricUIManager = nullthrows(getFabricUIManager());
-      const shadowNode =
-        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
-      if (shadowNode) {
-        FabricUIManager.measureInWindow(shadowNode, callback);
-      } else {
-        console.warn(`measure cannot find view with tag #${reactTag}`);
-        // $FlowFixMe[incompatible-call]
-        callback();
-      }
-    } else {
-      // Paper
-      UIManagerImpl.measureInWindow(reactTag, callback);
-    }
-  },
-
-  measureLayout(
-    reactTag: number,
-    ancestorReactTag: number,
-    errorCallback: (error: Object) => void,
-    callback: (
-      left: number,
-      top: number,
-      width: number,
-      height: number,
-    ) => void,
-  ): void {
-    if (isFabricReactTag(reactTag)) {
-      const FabricUIManager = nullthrows(getFabricUIManager());
-      const shadowNode =
-        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
-      const ancestorShadowNode =
-        FabricUIManager.findShadowNodeByTag_DEPRECATED(ancestorReactTag);
-
-      if (!shadowNode || !ancestorShadowNode) {
-        return;
-      }
-
-      FabricUIManager.measureLayout(
-        shadowNode,
-        ancestorShadowNode,
-        errorCallback,
-        callback,
-      );
-    } else {
-      // Paper
-      UIManagerImpl.measureLayout(
-        reactTag,
-        ancestorReactTag,
-        errorCallback,
-        callback,
-      );
-    }
-  },
-
-  measureLayoutRelativeToParent(
-    reactTag: number,
-    errorCallback: (error: Object) => void,
-    callback: (
-      left: number,
-      top: number,
-      width: number,
-      height: number,
-    ) => void,
-  ): void {
-    if (isFabricReactTag(reactTag)) {
-      console.warn(
-        'RCTUIManager.measureLayoutRelativeToParent method is deprecated and it will not be implemented in newer versions of RN (Fabric) - T47686450',
-      );
-      const FabricUIManager = nullthrows(getFabricUIManager());
-      const shadowNode =
-        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
-      if (shadowNode) {
-        FabricUIManager.measure(
-          shadowNode,
-          (left, top, width, height, pageX, pageY) => {
-            callback(left, top, width, height);
-          },
-        );
-      }
-    } else {
-      // Paper
-      UIManagerImpl.measureLayoutRelativeToParent(
-        reactTag,
-        errorCallback,
-        callback,
-      );
-    }
-  },
-
-  dispatchViewManagerCommand(
-    reactTag: number,
-    commandName: number | string,
-    commandArgs: any[],
-  ) {
-    if (isFabricReactTag(reactTag)) {
-      const FabricUIManager = nullthrows(getFabricUIManager());
-      const shadowNode =
-        FabricUIManager.findShadowNodeByTag_DEPRECATED(reactTag);
-      if (shadowNode) {
-        // Transform the accidental CommandID into a CommandName which is the stringified number.
-        // The interop layer knows how to convert this number into the right method name.
-        // Stringify a string is a no-op, so it's safe.
-        commandName = `${commandName}`;
-        FabricUIManager.dispatchCommand(shadowNode, commandName, commandArgs);
-      }
-    } else {
-      UIManagerImpl.dispatchViewManagerCommand(
-        reactTag,
-        // We have some legacy components that are actually already using strings. ¯\_(ツ)_/¯
-        // $FlowFixMe[incompatible-call]
-        commandName,
-        commandArgs,
-      );
-    }
-  },
-};
-
 module.exports = UIManager;
diff --git a/node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js b/node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js
index 34aaea1..eaa6f01 100644
--- a/node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js
+++ b/node_modules/react-native/Libraries/ReactNative/getCachedComponentWithDebugName.js
@@ -8,11 +8,9 @@
  * @format
  */
 
-import type {AbstractComponent} from 'react';
+import type {AbstractComponent, Node} from 'react';
 
-import * as React from 'react';
-
-type NoopComponent = AbstractComponent<{children: React.Node}>;
+type NoopComponent = AbstractComponent<{children: Node}>;
 
 const cache: Map<
   string, // displayName
@@ -25,7 +23,9 @@ export default function getCachedComponentWithDisplayName(
   let ComponentWithDisplayName = cache.get(displayName);
 
   if (!ComponentWithDisplayName) {
-    ComponentWithDisplayName = ({children}: {children: React.Node}) => children;
+    ComponentWithDisplayName = ({
+      children,
+    }: $TEMPORARY$object<{children: Node}>) => children;
     // $FlowFixMe[prop-missing]
     ComponentWithDisplayName.displayName = displayName;
     cache.set(displayName, ComponentWithDisplayName);
diff --git a/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js b/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js
index 6c9f11f..81deeb0 100644
--- a/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js
+++ b/node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js
@@ -12,7 +12,7 @@
 
 const ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');
 const resolveAssetSource = require('../Image/resolveAssetSource');
-const processColor = require('../StyleSheet/processColor').default;
+const processColor = require('../StyleSheet/processColor');
 const processColorArray = require('../StyleSheet/processColorArray');
 const insetsDiffer = require('../Utilities/differ/insetsDiffer');
 const matricesDiffer = require('../Utilities/differ/matricesDiffer');
diff --git a/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts b/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts
index 7f90a05..935762a 100644
--- a/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts
+++ b/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {HostComponent} from '../../types/public/ReactNativeTypes';
+import {HostComponent} from '../../types/public//ReactNativeTypes';
 
 /**
  * Creates values that can be used like React components which represent native
diff --git a/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js b/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js
index e9be731..c17d989 100644
--- a/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js
+++ b/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js
@@ -29,4 +29,4 @@ const requireNativeComponent = <T>(uiViewClassName: string): HostComponent<T> =>
     getNativeComponentAttributes(uiViewClassName),
   ): any): HostComponent<T>);
 
-export default requireNativeComponent;
+module.exports = requireNativeComponent;
diff --git a/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js b/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js
index 2d705ea..8dd6479 100644
--- a/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js
+++ b/node_modules/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface.js
@@ -57,7 +57,6 @@ module.exports = {
     return require('../Utilities/deepFreezeAndThrowOnMutationInDev');
   },
   get flattenStyle(): flattenStyle<DangerouslyImpreciseStyleProp> {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     return require('../StyleSheet/flattenStyle');
   },
   get ReactFiberErrorDialog(): ReactFiberErrorDialog {
diff --git a/node_modules/react-native/Libraries/Reliability/UserFlow.js b/node_modules/react-native/Libraries/Reliability/UserFlow.js
new file mode 100644
index 0000000..7a6262a
--- /dev/null
+++ b/node_modules/react-native/Libraries/Reliability/UserFlow.js
@@ -0,0 +1,158 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict
+ */
+
+'use strict';
+
+const AUTO_INSTANCE_KEY = -1;
+
+export type FlowId = {
+  markerId: number,
+  instanceKey: number,
+};
+
+export type PointData = $Shape<{
+  string: ?{[string]: string, ...},
+  int: ?{[string]: number, ...},
+  double: ?{[string]: number, ...},
+  bool: ?{[string]: boolean, ...},
+  string_array: ?{[string]: $ReadOnlyArray<string>, ...},
+  int_array: ?{[string]: $ReadOnlyArray<number>, ...},
+  double_array: ?{[string]: $ReadOnlyArray<number>, ...},
+  bool_array: ?{[string]: $ReadOnlyArray<boolean>, ...},
+}>;
+
+/**
+ * API for tracking reliability of your user interactions
+ *
+ * Example:
+ * const flowId = UserFlow.newFlowId(QuickLogItentifiersExample.EXAMPLE_EVENT);
+ * ...
+ * UserFlow.start(flowId, {triggerSource: "user_click", cancelOnBackground: true});
+ * ...
+ * UserFlow.addAnnotation(flowId, "cached", "true");
+ * ...
+ * UserFlow.addPoint(flowId, "reload");
+ * ...
+ * UserFlow.endSuccess(flowId);
+ */
+const UserFlow = {
+  /**
+   * Creates FlowId from markerId and instanceKey.
+   * You will pass FlowId in every other method of UserFlow API.
+   *
+   * By default, instanceKey will generate unique instance every time you call userFlowGetId with markerId only.
+   */
+  newFlowId(markerId: number, instanceKey: number = AUTO_INSTANCE_KEY): FlowId {
+    var resolvedInstanceKey = instanceKey;
+    if (instanceKey === AUTO_INSTANCE_KEY) {
+      if (global.nativeUserFlowNextInstanceKey) {
+        resolvedInstanceKey = global.nativeUserFlowNextInstanceKey(markerId);
+      } else {
+        // There is no JSI methods installed, API won't do anything
+        resolvedInstanceKey = 0;
+      }
+    }
+    return {
+      markerId: markerId,
+      instanceKey: resolvedInstanceKey,
+    };
+  },
+
+  /**
+   * Starts new flow.
+   * Example:
+   * UserFlow.start(flowId, {triggerSource: 'user_click', cancelOnBackground: true})
+   *
+   * Specify triggerSource as a place where your flow has started.
+   * Specify if flow should be automatically cancelled if applicaton goes to background.
+   * It is recommended to use true for cancelOnBackground - this reduces amount of lost flows due to instrumentation mistakes.
+   * Only if you know that your flow should survive app backgrounding - use false. This includes cases of tracking cross application interactions.
+   *
+   */
+  start(
+    flowId: FlowId,
+    options: {triggerSource: string, cancelOnBackground: boolean},
+  ): void {
+    if (global.nativeUserFlowStart) {
+      global.nativeUserFlowStart(
+        flowId.markerId,
+        flowId.instanceKey,
+        options.triggerSource,
+        options.cancelOnBackground,
+      );
+    }
+  },
+
+  addAnnotation(
+    flowId: FlowId,
+    annotationName: string,
+    annotationValue: string | boolean,
+  ): void {
+    if (global.nativeUserFlowAddAnnotation) {
+      global.nativeUserFlowAddAnnotation(
+        flowId.markerId,
+        flowId.instanceKey,
+        annotationName,
+        annotationValue,
+      );
+    }
+  },
+
+  addPoint(flowId: FlowId, pointName: string, data: ?PointData = null): void {
+    if (global.nativeUserFlowAddPoint) {
+      global.nativeUserFlowAddPoint(
+        flowId.markerId,
+        flowId.instanceKey,
+        pointName,
+        data,
+      );
+    }
+  },
+
+  endSuccess(flowId: FlowId): void {
+    if (global.nativeUserFlowEndSuccess) {
+      global.nativeUserFlowEndSuccess(flowId.markerId, flowId.instanceKey);
+    }
+  },
+
+  /**
+   * Completes flow as failed
+   *
+   * ErrorName should be short and easily categorazable (it is attached as point to the UserFlow and can be used for aggregations).
+   * For example: io_error, network_error, parse_error, validation_error.
+   * DebugInfo is free-form string, where you can attach detailed error message. It is attached as data to the point (see ErrorName).
+   */
+  endFailure(
+    flowId: FlowId,
+    errorName: string,
+    debugInfo: ?string = null,
+  ): void {
+    if (global.nativeUserFlowEndFail) {
+      global.nativeUserFlowEndFail(
+        flowId.markerId,
+        flowId.instanceKey,
+        errorName,
+        debugInfo,
+      );
+    }
+  },
+
+  endCancel(flowId: FlowId, cancelReason: string): void {
+    if (global.nativeUserFlowEndCancel) {
+      global.nativeUserFlowEndCancel(
+        flowId.markerId,
+        flowId.instanceKey,
+        cancelReason,
+      );
+    }
+  },
+};
+
+module.exports = UserFlow;
diff --git a/node_modules/react-native/Libraries/Renderer/REVISION b/node_modules/react-native/Libraries/Renderer/REVISION
index b808372..21e513e 100644
--- a/node_modules/react-native/Libraries/Renderer/REVISION
+++ b/node_modules/react-native/Libraries/Renderer/REVISION
@@ -1 +1 @@
-fccf3a9fba5fd778c678657c556344b333111cfb
\ No newline at end of file
+ab075a232409ea1f566526c6a5dca30f658280de
\ No newline at end of file
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
index 2f47b2a..beb1a29 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-dev.js
@@ -3419,23 +3419,6 @@ function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
     return callback.apply(context, arguments);
   };
 }
-function warnForStyleProps(props, validAttributes) {
-  {
-    for (var key in validAttributes.style) {
-      if (!(validAttributes[key] || props[key] === undefined)) {
-        error(
-          "You are setting the style `{ %s" +
-            ": ... }` as a prop. You " +
-            "should nest it in a style object. " +
-            "E.g. `{ style: { %s" +
-            ": ... } }`",
-          key,
-          key
-        );
-      }
-    }
-  }
-}
 
 // Modules provided by RN:
 var emptyObject = {};
@@ -5117,8 +5100,7 @@ var _nativeFabricUIManage = nativeFabricUIManager,
   FabricDefaultPriority = _nativeFabricUIManage.unstable_DefaultEventPriority,
   FabricDiscretePriority = _nativeFabricUIManage.unstable_DiscreteEventPriority,
   fabricGetCurrentEventPriority =
-    _nativeFabricUIManage.unstable_getCurrentEventPriority,
-  _setNativeProps = _nativeFabricUIManage.setNativeProps;
+    _nativeFabricUIManage.unstable_getCurrentEventPriority;
 var getViewConfigForType =
   ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get; // Counter for uniquely identifying views.
 // % 10 === 1 means it is a rootTag.
@@ -5217,15 +5199,10 @@ var ReactFabricHostComponent = /*#__PURE__*/ (function() {
 
   _proto.setNativeProps = function setNativeProps(nativeProps) {
     {
-      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);
+      error("Warning: setNativeProps is not currently supported in Fabric");
     }
 
-    var updatePayload = create(nativeProps, this.viewConfig.validAttributes);
-    var stateNode = this._internalInstanceHandle.stateNode;
-
-    if (stateNode != null && updatePayload != null) {
-      _setNativeProps(stateNode.node, updatePayload);
-    }
+    return;
   }; // This API (addEventListener, removeEventListener) attempts to adhere to the
   // w3 Level2 Events spec as much as possible, treating HostComponent as a DOM node.
   //
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
index 7821c74..7da2524 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-prod.js
@@ -1922,7 +1922,6 @@ var _nativeFabricUIManage = nativeFabricUIManager,
   FabricDiscretePriority = _nativeFabricUIManage.unstable_DiscreteEventPriority,
   fabricGetCurrentEventPriority =
     _nativeFabricUIManage.unstable_getCurrentEventPriority,
-  _setNativeProps = _nativeFabricUIManage.setNativeProps,
   getViewConfigForType =
     ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
   nextReactTag = 2;
@@ -1980,18 +1979,7 @@ var ReactFabricHostComponent = (function() {
         );
     }
   };
-  _proto.setNativeProps = function(nativeProps) {
-    nativeProps = diffProperties(
-      null,
-      emptyObject,
-      nativeProps,
-      this.viewConfig.validAttributes
-    );
-    var stateNode = this._internalInstanceHandle.stateNode;
-    null != stateNode &&
-      null != nativeProps &&
-      _setNativeProps(stateNode.node, nativeProps);
-  };
+  _proto.setNativeProps = function() {};
   _proto.addEventListener_unstable = function(eventType, listener, options) {
     if ("string" !== typeof eventType)
       throw Error("addEventListener_unstable eventType must be a string");
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-profiling.js b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-profiling.js
index b1185b2..9ea3a0f 100644
--- a/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-profiling.js
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactFabric-profiling.js
@@ -1981,7 +1981,6 @@ var _nativeFabricUIManage = nativeFabricUIManager,
   FabricDiscretePriority = _nativeFabricUIManage.unstable_DiscreteEventPriority,
   fabricGetCurrentEventPriority =
     _nativeFabricUIManage.unstable_getCurrentEventPriority,
-  _setNativeProps = _nativeFabricUIManage.setNativeProps,
   getViewConfigForType =
     ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
   nextReactTag = 2;
@@ -2039,18 +2038,7 @@ var ReactFabricHostComponent = (function() {
         );
     }
   };
-  _proto.setNativeProps = function(nativeProps) {
-    nativeProps = diffProperties(
-      null,
-      emptyObject,
-      nativeProps,
-      this.viewConfig.validAttributes
-    );
-    var stateNode = this._internalInstanceHandle.stateNode;
-    null != stateNode &&
-      null != nativeProps &&
-      _setNativeProps(stateNode.node, nativeProps);
-  };
+  _proto.setNativeProps = function() {};
   _proto.addEventListener_unstable = function(eventType, listener, options) {
     if ("string" !== typeof eventType)
       throw Error("addEventListener_unstable eventType must be a string");
diff --git a/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer.d.ts b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer.d.ts
new file mode 100644
index 0000000..2624d4a
--- /dev/null
+++ b/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer.d.ts
@@ -0,0 +1,149 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+import {GestureResponderEvent} from '../../Types/CoreEventTypes';
+
+/**
+ * Gesture recognition on mobile devices is much more complicated than web.
+ * A touch can go through several phases as the app determines what the user's intention is.
+ * For example, the app needs to determine if the touch is scrolling, sliding on a widget, or tapping.
+ * This can even change during the duration of a touch. There can also be multiple simultaneous touches.
+ *
+ * The touch responder system is needed to allow components to negotiate these touch interactions
+ * without any additional knowledge about their parent or child components.
+ * This system is implemented in ResponderEventPlugin.js, which contains further details and documentation.
+ *
+ * Best Practices
+ * Users can feel huge differences in the usability of web apps vs. native, and this is one of the big causes.
+ * Every action should have the following attributes:
+ *      Feedback/highlighting- show the user what is handling their touch, and what will happen when they release the gesture
+ *      Cancel-ability- when making an action, the user should be able to abort it mid-touch by dragging their finger away
+ *
+ * These features make users more comfortable while using an app,
+ * because it allows people to experiment and interact without fear of making mistakes.
+ *
+ * TouchableHighlight and Touchable*
+ * The responder system can be complicated to use.
+ * So we have provided an abstract Touchable implementation for things that should be "tappable".
+ * This uses the responder system and allows you to easily configure tap interactions declaratively.
+ * Use TouchableHighlight anywhere where you would use a button or link on web.
+ */
+export interface GestureResponderHandlers {
+  /**
+   * A view can become the touch responder by implementing the correct negotiation methods.
+   * There are two methods to ask the view if it wants to become responder:
+   */
+
+  /**
+   * Does this view want to become responder on the start of a touch?
+   */
+  onStartShouldSetResponder?:
+    | ((event: GestureResponderEvent) => boolean)
+    | undefined;
+
+  /**
+   * Called for every touch move on the View when it is not the responder: does this view want to "claim" touch responsiveness?
+   */
+  onMoveShouldSetResponder?:
+    | ((event: GestureResponderEvent) => boolean)
+    | undefined;
+
+  /**
+   * If the View returns true and attempts to become the responder, one of the following will happen:
+   */
+
+  onResponderEnd?: ((event: GestureResponderEvent) => void) | undefined;
+
+  /**
+   * The View is now responding for touch events.
+   * This is the time to highlight and show the user what is happening
+   */
+  onResponderGrant?: ((event: GestureResponderEvent) => void) | undefined;
+
+  /**
+   * Something else is the responder right now and will not release it
+   */
+  onResponderReject?: ((event: GestureResponderEvent) => void) | undefined;
+
+  /**
+   * If the view is responding, the following handlers can be called:
+   */
+
+  /**
+   * The user is moving their finger
+   */
+  onResponderMove?: ((event: GestureResponderEvent) => void) | undefined;
+
+  /**
+   * Fired at the end of the touch, ie "touchUp"
+   */
+  onResponderRelease?: ((event: GestureResponderEvent) => void) | undefined;
+
+  onResponderStart?: ((event: GestureResponderEvent) => void) | undefined;
+
+  /**
+   *  Something else wants to become responder.
+   *  Should this view release the responder? Returning true allows release
+   */
+  onResponderTerminationRequest?:
+    | ((event: GestureResponderEvent) => boolean)
+    | undefined;
+
+  /**
+   * The responder has been taken from the View.
+   * Might be taken by other views after a call to onResponderTerminationRequest,
+   * or might be taken by the OS without asking (happens with control center/ notification center on iOS)
+   */
+  onResponderTerminate?: ((event: GestureResponderEvent) => void) | undefined;
+
+  /**
+   * onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,
+   * where the deepest node is called first.
+   * That means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.
+   * This is desirable in most cases, because it makes sure all controls and buttons are usable.
+   *
+   * However, sometimes a parent will want to make sure that it becomes responder.
+   * This can be handled by using the capture phase.
+   * Before the responder system bubbles up from the deepest component,
+   * it will do a capture phase, firing on*ShouldSetResponderCapture.
+   * So if a parent View wants to prevent the child from becoming responder on a touch start,
+   * it should have a onStartShouldSetResponderCapture handler which returns true.
+   */
+  onStartShouldSetResponderCapture?:
+    | ((event: GestureResponderEvent) => boolean)
+    | undefined;
+
+  /**
+   * onStartShouldSetResponder and onMoveShouldSetResponder are called with a bubbling pattern,
+   * where the deepest node is called first.
+   * That means that the deepest component will become responder when multiple Views return true for *ShouldSetResponder handlers.
+   * This is desirable in most cases, because it makes sure all controls and buttons are usable.
+   *
+   * However, sometimes a parent will want to make sure that it becomes responder.
+   * This can be handled by using the capture phase.
+   * Before the responder system bubbles up from the deepest component,
+   * it will do a capture phase, firing on*ShouldSetResponderCapture.
+   * So if a parent View wants to prevent the child from becoming responder on a touch start,
+   * it should have a onStartShouldSetResponderCapture handler which returns true.
+   */
+  onMoveShouldSetResponderCapture?:
+    | ((event: GestureResponderEvent) => boolean)
+    | undefined;
+}
+
+/**
+ * React Native also implements unstable_batchedUpdates
+ */
+export function unstable_batchedUpdates<A, B>(
+  callback: (a: A, b: B) => any,
+  a: A,
+  b: B,
+): void;
+export function unstable_batchedUpdates<A>(callback: (a: A) => any, a: A): void;
+export function unstable_batchedUpdates(callback: () => any): void;
diff --git a/node_modules/react-native/Libraries/Renderer/public/ReactFabricPublicInstanceUtils.js b/node_modules/react-native/Libraries/Renderer/public/ReactFabricPublicInstanceUtils.js
deleted file mode 100644
index 1fca1ae..0000000
--- a/node_modules/react-native/Libraries/Renderer/public/ReactFabricPublicInstanceUtils.js
+++ /dev/null
@@ -1,38 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-/**
- * IMPORTANT!!
- *
- * This module cannot import `ReactFabric` (directly or indirectly)
- * because it can be used by apps only using the legacy renderer.
- * In that case `nativeFabricUIManager` isn't defined and `ReactFabric` throws.
- */
-
-export function isPublicInstance(maybeInstance: mixed): boolean {
-  return (
-    maybeInstance != null &&
-    // TODO: implement a better check when the instance is defined in the React Native repository.
-    (maybeInstance.__nativeTag != null ||
-      // TODO: remove this check when syncing the new version of the renderer from React to React Native.
-      isLegacyFabricInstance(maybeInstance))
-  );
-}
-
-function isLegacyFabricInstance(maybeInstance: mixed): boolean {
-  /* eslint-disable dot-notation */
-  return (
-    maybeInstance != null &&
-    // $FlowExpectedError[incompatible-use]
-    maybeInstance['_internalInstanceHandle'] != null &&
-    maybeInstance['_internalInstanceHandle'].stateNode != null &&
-    maybeInstance['_internalInstanceHandle'].stateNode.canonical != null
-  );
-}
diff --git a/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.d.ts b/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.d.ts
new file mode 100644
index 0000000..38e00e1
--- /dev/null
+++ b/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.d.ts
@@ -0,0 +1,141 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+import type * as React from 'react';
+
+export type MeasureOnSuccessCallback = (
+  x: number,
+  y: number,
+  width: number,
+  height: number,
+  pageX: number,
+  pageY: number,
+) => void;
+
+export type MeasureInWindowOnSuccessCallback = (
+  x: number,
+  y: number,
+  width: number,
+  height: number,
+) => void;
+
+export type MeasureLayoutOnSuccessCallback = (
+  left: number,
+  top: number,
+  width: number,
+  height: number,
+) => void;
+
+/**
+ * NativeMethods provides methods to access the underlying native component directly.
+ * This can be useful in cases when you want to focus a view or measure its on-screen dimensions,
+ * for example.
+ * The methods described here are available on most of the default components provided by React Native.
+ * Note, however, that they are not available on composite components that aren't directly backed by a
+ * native view. This will generally include most components that you define in your own app.
+ * For more information, see [Direct Manipulation](https://reactnative.dev/docs/direct-manipulation).
+ * @see https://github.com/facebook/react-native/blob/master/Libraries/Renderer/shims/ReactNativeTypes.js#L87
+ */
+export interface NativeMethods {
+  /**
+   * Determines the location on screen, width, and height of the given view and
+   * returns the values via an async callback. If successful, the callback will
+   * be called with the following arguments:
+   *
+   *  - x
+   *  - y
+   *  - width
+   *  - height
+   *  - pageX
+   *  - pageY
+   *
+   * Note that these measurements are not available until after the rendering
+   * has been completed in native. If you need the measurements as soon as
+   * possible, consider using the [`onLayout`
+   * prop](docs/view.html#onlayout) instead.
+   */
+  measure(callback: MeasureOnSuccessCallback): void;
+
+  /**
+   * Determines the location of the given view in the window and returns the
+   * values via an async callback. If the React root view is embedded in
+   * another native view, this will give you the absolute coordinates. If
+   * successful, the callback will be called with the following
+   * arguments:
+   *
+   *  - x
+   *  - y
+   *  - width
+   *  - height
+   *
+   * Note that these measurements are not available until after the rendering
+   * has been completed in native.
+   */
+  measureInWindow(callback: MeasureInWindowOnSuccessCallback): void;
+
+  /**
+   * Like [`measure()`](#measure), but measures the view relative an ancestor,
+   * specified as `relativeToNativeComponentRef`. This means that the returned x, y
+   * are relative to the origin x, y of the ancestor view.
+   * _Can also be called with a relativeNativeNodeHandle but is deprecated._
+   */
+  measureLayout(
+    relativeToNativeComponentRef: HostComponent<unknown> | number,
+    onSuccess: MeasureLayoutOnSuccessCallback,
+    onFail: () => void /* currently unused */,
+  ): void;
+
+  /**
+   * This function sends props straight to native. They will not participate in
+   * future diff process - this means that if you do not include them in the
+   * next render, they will remain active (see [Direct
+   * Manipulation](https://reactnative.dev/docs/direct-manipulation)).
+   */
+  setNativeProps(nativeProps: object): void;
+
+  /**
+   * Requests focus for the given input or view. The exact behavior triggered
+   * will depend on the platform and type of view.
+   */
+  focus(): void;
+
+  /**
+   * Removes focus from an input or view. This is the opposite of `focus()`.
+   */
+  blur(): void;
+
+  refs: {
+    [key: string]: React.Component<any, any>;
+  };
+}
+
+/**
+ * @deprecated Use NativeMethods instead.
+ */
+export type NativeMethodsMixin = NativeMethods;
+/**
+ * @deprecated Use NativeMethods instead.
+ */
+export type NativeMethodsMixinType = NativeMethods;
+
+/**
+ * Represents a native component, such as those returned from `requireNativeComponent`.
+ *
+ * @see https://github.com/facebook/react-native/blob/v0.62.0-rc.5/Libraries/Renderer/shims/ReactNativeTypes.js
+ *
+ * @todo This should eventually be defined as an AbstractComponent, but that
+ *       should first be introduced in the React typings.
+ */
+export interface HostComponent<P>
+  extends Pick<
+    React.ComponentClass<P>,
+    Exclude<keyof React.ComponentClass<P>, 'new'>
+  > {
+  new (props: P, context?: any): React.Component<P> & Readonly<NativeMethods>;
+}
diff --git a/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.js b/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.js
index 403452e..39ecaf5 100644
--- a/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.js
+++ b/node_modules/react-native/Libraries/Renderer/shims/ReactNativeTypes.js
@@ -6,7 +6,7 @@
  *
  * @noformat
  * @flow strict
- * @generated SignedSource<<265b342f0d29323bebb711ba0bc882ec>>
+ * @generated SignedSource<<d9fed8e0aacc3113ceaf7d8e266300c6>>
  *
  * This file was sync'd from the facebook/react repository.
  */
@@ -51,7 +51,7 @@ export type AttributeConfiguration = $ReadOnly<{
   [propName: string]: AnyAttributeType,
   style: $ReadOnly<{
     [propName: string]: AnyAttributeType,
-    ...
+    ...,
   }>,
   ...
 }>;
@@ -60,7 +60,7 @@ export type PartialAttributeConfiguration = $ReadOnly<{
   [propName: string]: AnyAttributeType,
   style?: $ReadOnly<{
     [propName: string]: AnyAttributeType,
-    ...
+    ...,
   }>,
   ...
 }>;
@@ -79,13 +79,13 @@ export type ViewConfig = $ReadOnly<{
         skipBubbling?: ?boolean,
       }>,
     }>,
-    ...
+    ...,
   }>,
   directEventTypes?: $ReadOnly<{
     [eventName: string]: $ReadOnly<{
       registrationName: string,
     }>,
-    ...
+    ...,
   }>,
   uiViewClassName: string,
   validAttributes: AttributeConfiguration,
@@ -122,7 +122,7 @@ type SecretInternalsType = {
 
 type InspectorDataProps = $ReadOnly<{
   [propName: string]: string,
-  ...
+  ...,
 }>;
 
 type InspectorDataSource = $ReadOnly<{
diff --git a/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js b/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js
index 6fd96f2..d46f2f7 100644
--- a/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js
+++ b/node_modules/react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry.js
@@ -6,7 +6,7 @@
  *
  * @noformat
  * @flow strict-local
- * @generated SignedSource<<47ba85d7f43c9b591d6804827322d00e>>
+ * @generated SignedSource<<bda490a01513d4526005c1e029d5ce93>>
  *
  * This file was sync'd from the facebook/react repository.
  */
@@ -25,20 +25,20 @@ const customBubblingEventTypes: {
       skipBubbling?: ?boolean,
     }>,
   }>,
-  ...
+  ...,
 } = {};
 const customDirectEventTypes: {
   [eventName: string]: $ReadOnly<{
     registrationName: string,
   }>,
-  ...
+  ...,
 } = {};
 
 exports.customBubblingEventTypes = customBubblingEventTypes;
 exports.customDirectEventTypes = customDirectEventTypes;
 
-const viewConfigCallbacks = new Map<string, ?() => ViewConfig>();
-const viewConfigs = new Map<string, ViewConfig>();
+const viewConfigCallbacks = new Map();
+const viewConfigs = new Map();
 
 function processEventTypes(viewConfig: ViewConfig): void {
   const {bubblingEventTypes, directEventTypes} = viewConfig;
@@ -78,7 +78,7 @@ function processEventTypes(viewConfig: ViewConfig): void {
  * A callback is provided to load the view config from UIManager.
  * The callback is deferred until the view is actually rendered.
  */
-exports.register = function (name: string, callback: () => ViewConfig): string {
+exports.register = function(name: string, callback: () => ViewConfig): string {
   invariant(
     !viewConfigCallbacks.has(name),
     'Tried to register two views with the same name %s',
@@ -99,7 +99,7 @@ exports.register = function (name: string, callback: () => ViewConfig): string {
  * If this is the first time the view has been used,
  * This configuration will be lazy-loaded from UIManager.
  */
-exports.get = function (name: string): ViewConfig {
+exports.get = function(name: string): ViewConfig {
   let viewConfig;
   if (!viewConfigs.has(name)) {
     const callback = viewConfigCallbacks.get(name);
diff --git a/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js b/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js
index 0b97635..e1aee01 100644
--- a/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js
+++ b/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js
@@ -6,7 +6,7 @@
  *
  * @noformat
  * @flow strict-local
- * @generated SignedSource<<e5e369f149ed8206141b7a3c2855bb85>>
+ * @generated SignedSource<<7d3d4090dadea2daa09d92e5e66f6e5d>>
  *
  * This file was sync'd from the facebook/react repository.
  */
@@ -26,7 +26,7 @@ const {register} = ReactNativeViewConfigRegistry;
  * @param {string} config iOS View configuration.
  * @private
  */
-const createReactNativeComponentClass = function (
+const createReactNativeComponentClass = function(
   name: string,
   callback: () => ViewConfig,
 ): string {
diff --git a/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec b/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec
index aa6c9f4..11770ad 100644
--- a/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec
+++ b/node_modules/react-native/Libraries/Settings/React-RCTSettings.podspec
@@ -19,22 +19,6 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers\"",
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTSettings"
   s.version                = version
@@ -42,7 +26,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/settings"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -52,7 +36,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
 
   s.dependency "RCT-Folly", folly_version
diff --git a/node_modules/react-native/Libraries/Share/Share.js b/node_modules/react-native/Libraries/Share/Share.js
index 59ffde5..10fff74 100644
--- a/node_modules/react-native/Libraries/Share/Share.js
+++ b/node_modules/react-native/Libraries/Share/Share.js
@@ -11,7 +11,7 @@
 import NativeActionSheetManager from '../ActionSheetIOS/NativeActionSheetManager';
 import NativeShareModule from './NativeShareModule';
 
-const processColor = require('../StyleSheet/processColor').default;
+const processColor = require('../StyleSheet/processColor');
 const Platform = require('../Utilities/Platform');
 const invariant = require('invariant');
 
diff --git a/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js b/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js
index e5d1631..091a5f6 100644
--- a/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js
+++ b/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.ios.js
@@ -78,7 +78,7 @@ export const processColorObject = (
   color: NativeColorValue,
 ): ?NativeColorValue => {
   if ('dynamic' in color && color.dynamic != null) {
-    const processColor = require('./processColor').default;
+    const processColor = require('./processColor');
     const dynamic = color.dynamic;
     const dynamicColor: NativeColorValue = {
       dynamic: {
diff --git a/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js b/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js
index 523cd74..e68df4b 100644
--- a/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js
+++ b/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js
@@ -24,7 +24,7 @@ import type {
 } from './StyleSheetTypes';
 
 const ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');
-const PixelRatio = require('../Utilities/PixelRatio').default;
+const PixelRatio = require('../Utilities/PixelRatio');
 const flatten = require('./flattenStyle');
 
 /**
diff --git a/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts b/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts
index de23c59..f693673 100644
--- a/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts
+++ b/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts
@@ -7,7 +7,6 @@
  * @format
  */
 
-import {Animated} from '../Animated/Animated';
 import {ImageResizeMode} from '../Image/ImageResizeMode';
 import {ColorValue} from './StyleSheet';
 
@@ -18,15 +17,6 @@ type FlexAlignType =
   | 'stretch'
   | 'baseline';
 
-export type DimensionValue =
-  | number
-  | 'auto'
-  | `${number}%`
-  | Animated.AnimatedNode
-  | null;
-type AnimatableNumericValue = number | Animated.AnimatedNode;
-type AnimatableStringValue = string | Animated.AnimatedNode;
-
 /**
  * Flex Prop Types
  * @see https://reactnative.dev/docs/flexbox
@@ -45,17 +35,17 @@ export interface FlexStyle {
   alignSelf?: 'auto' | FlexAlignType | undefined;
   aspectRatio?: number | string | undefined;
   borderBottomWidth?: number | undefined;
-  borderEndWidth?: number | undefined;
+  borderEndWidth?: number | string | undefined;
   borderLeftWidth?: number | undefined;
   borderRightWidth?: number | undefined;
-  borderStartWidth?: number | undefined;
+  borderStartWidth?: number | string | undefined;
   borderTopWidth?: number | undefined;
   borderWidth?: number | undefined;
-  bottom?: DimensionValue | undefined;
+  bottom?: number | string | undefined;
   display?: 'none' | 'flex' | undefined;
-  end?: DimensionValue | undefined;
+  end?: number | string | undefined;
   flex?: number | undefined;
-  flexBasis?: DimensionValue | undefined;
+  flexBasis?: number | string | undefined;
   flexDirection?:
     | 'row'
     | 'column'
@@ -68,7 +58,7 @@ export interface FlexStyle {
   flexGrow?: number | undefined;
   flexShrink?: number | undefined;
   flexWrap?: 'wrap' | 'nowrap' | 'wrap-reverse' | undefined;
-  height?: DimensionValue | undefined;
+  height?: number | string | undefined;
   justifyContent?:
     | 'flex-start'
     | 'flex-end'
@@ -77,35 +67,35 @@ export interface FlexStyle {
     | 'space-around'
     | 'space-evenly'
     | undefined;
-  left?: DimensionValue | undefined;
-  margin?: DimensionValue | undefined;
-  marginBottom?: DimensionValue | undefined;
-  marginEnd?: DimensionValue | undefined;
-  marginHorizontal?: DimensionValue | undefined;
-  marginLeft?: DimensionValue | undefined;
-  marginRight?: DimensionValue | undefined;
-  marginStart?: DimensionValue | undefined;
-  marginTop?: DimensionValue | undefined;
-  marginVertical?: DimensionValue | undefined;
-  maxHeight?: DimensionValue | undefined;
-  maxWidth?: DimensionValue | undefined;
-  minHeight?: DimensionValue | undefined;
-  minWidth?: DimensionValue | undefined;
+  left?: number | string | undefined;
+  margin?: number | string | undefined;
+  marginBottom?: number | string | undefined;
+  marginEnd?: number | string | undefined;
+  marginHorizontal?: number | string | undefined;
+  marginLeft?: number | string | undefined;
+  marginRight?: number | string | undefined;
+  marginStart?: number | string | undefined;
+  marginTop?: number | string | undefined;
+  marginVertical?: number | string | undefined;
+  maxHeight?: number | string | undefined;
+  maxWidth?: number | string | undefined;
+  minHeight?: number | string | undefined;
+  minWidth?: number | string | undefined;
   overflow?: 'visible' | 'hidden' | 'scroll' | undefined;
-  padding?: DimensionValue | undefined;
-  paddingBottom?: DimensionValue | undefined;
-  paddingEnd?: DimensionValue | undefined;
-  paddingHorizontal?: DimensionValue | undefined;
-  paddingLeft?: DimensionValue | undefined;
-  paddingRight?: DimensionValue | undefined;
-  paddingStart?: DimensionValue | undefined;
-  paddingTop?: DimensionValue | undefined;
-  paddingVertical?: DimensionValue | undefined;
+  padding?: number | string | undefined;
+  paddingBottom?: number | string | undefined;
+  paddingEnd?: number | string | undefined;
+  paddingHorizontal?: number | string | undefined;
+  paddingLeft?: number | string | undefined;
+  paddingRight?: number | string | undefined;
+  paddingStart?: number | string | undefined;
+  paddingTop?: number | string | undefined;
+  paddingVertical?: number | string | undefined;
   position?: 'absolute' | 'relative' | undefined;
-  right?: DimensionValue | undefined;
-  start?: DimensionValue | undefined;
-  top?: DimensionValue | undefined;
-  width?: DimensionValue | undefined;
+  right?: number | string | undefined;
+  start?: number | string | undefined;
+  top?: number | string | undefined;
+  width?: number | string | undefined;
   zIndex?: number | undefined;
 
   /**
@@ -116,61 +106,61 @@ export interface FlexStyle {
 
 export interface ShadowStyleIOS {
   shadowColor?: ColorValue | undefined;
-  shadowOffset?: Readonly<{width: number; height: number}> | undefined;
-  shadowOpacity?: AnimatableNumericValue | undefined;
+  shadowOffset?: {width: number; height: number} | undefined;
+  shadowOpacity?: number | undefined;
   shadowRadius?: number | undefined;
 }
 
 interface PerpectiveTransform {
-  perspective: AnimatableNumericValue;
+  perspective: number;
 }
 
 interface RotateTransform {
-  rotate: AnimatableStringValue;
+  rotate: string;
 }
 
 interface RotateXTransform {
-  rotateX: AnimatableStringValue;
+  rotateX: string;
 }
 
 interface RotateYTransform {
-  rotateY: AnimatableStringValue;
+  rotateY: string;
 }
 
 interface RotateZTransform {
-  rotateZ: AnimatableStringValue;
+  rotateZ: string;
 }
 
 interface ScaleTransform {
-  scale: AnimatableNumericValue;
+  scale: number;
 }
 
 interface ScaleXTransform {
-  scaleX: AnimatableNumericValue;
+  scaleX: number;
 }
 
 interface ScaleYTransform {
-  scaleY: AnimatableNumericValue;
+  scaleY: number;
 }
 
 interface TranslateXTransform {
-  translateX: AnimatableNumericValue;
+  translateX: number;
 }
 
 interface TranslateYTransform {
-  translateY: AnimatableNumericValue;
+  translateY: number;
 }
 
 interface SkewXTransform {
-  skewX: AnimatableStringValue;
+  skewX: string;
 }
 
 interface SkewYTransform {
-  skewY: AnimatableStringValue;
+  skewY: string;
 }
 
 interface MatrixTransform {
-  matrix: AnimatableNumericValue[];
+  matrix: number[];
 }
 
 export interface TransformsStyle {
@@ -190,6 +180,7 @@ export interface TransformsStyle {
         | SkewYTransform
         | MatrixTransform
       )[]
+    | string
     | undefined;
   /**
    * @deprecated Use matrix in transform prop instead.
@@ -198,23 +189,23 @@ export interface TransformsStyle {
   /**
    * @deprecated Use rotate in transform prop instead.
    */
-  rotation?: AnimatableNumericValue | undefined;
+  rotation?: number | undefined;
   /**
    * @deprecated Use scaleX in transform prop instead.
    */
-  scaleX?: AnimatableNumericValue | undefined;
+  scaleX?: number | undefined;
   /**
    * @deprecated Use scaleY in transform prop instead.
    */
-  scaleY?: AnimatableNumericValue | undefined;
+  scaleY?: number | undefined;
   /**
    * @deprecated Use translateX in transform prop instead.
    */
-  translateX?: AnimatableNumericValue | undefined;
+  translateX?: number | undefined;
   /**
    * @deprecated Use translateY in transform prop instead.
    */
-  translateY?: AnimatableNumericValue | undefined;
+  translateY?: number | undefined;
 }
 
 /**
@@ -223,36 +214,29 @@ export interface TransformsStyle {
 export interface ViewStyle extends FlexStyle, ShadowStyleIOS, TransformsStyle {
   backfaceVisibility?: 'visible' | 'hidden' | undefined;
   backgroundColor?: ColorValue | undefined;
-  borderBlockColor?: ColorValue | undefined;
-  borderBlockEndColor?: ColorValue | undefined;
-  borderBlockStartColor?: ColorValue | undefined;
   borderBottomColor?: ColorValue | undefined;
-  borderBottomEndRadius?: AnimatableNumericValue | undefined;
-  borderBottomLeftRadius?: AnimatableNumericValue | undefined;
-  borderBottomRightRadius?: AnimatableNumericValue | undefined;
-  borderBottomStartRadius?: AnimatableNumericValue | undefined;
+  borderBottomEndRadius?: number | undefined;
+  borderBottomLeftRadius?: number | undefined;
+  borderBottomRightRadius?: number | undefined;
+  borderBottomStartRadius?: number | undefined;
+  borderBottomWidth?: number | undefined;
   borderColor?: ColorValue | undefined;
-  /**
-   * On iOS 13+, it is possible to change the corner curve of borders.
-   * @platform ios
-   */
-  borderCurve?: 'circular' | 'continuous' | undefined;
   borderEndColor?: ColorValue | undefined;
-  borderEndEndRadius?: AnimatableNumericValue | undefined;
-  borderEndStartRadius?: AnimatableNumericValue | undefined;
   borderLeftColor?: ColorValue | undefined;
-  borderRadius?: AnimatableNumericValue | undefined;
+  borderLeftWidth?: number | undefined;
+  borderRadius?: number | undefined;
   borderRightColor?: ColorValue | undefined;
+  borderRightWidth?: number | undefined;
   borderStartColor?: ColorValue | undefined;
-  borderStartEndRadius?: AnimatableNumericValue | undefined;
-  borderStartStartRadius?: AnimatableNumericValue | undefined;
   borderStyle?: 'solid' | 'dotted' | 'dashed' | undefined;
   borderTopColor?: ColorValue | undefined;
-  borderTopEndRadius?: AnimatableNumericValue | undefined;
-  borderTopLeftRadius?: AnimatableNumericValue | undefined;
-  borderTopRightRadius?: AnimatableNumericValue | undefined;
-  borderTopStartRadius?: AnimatableNumericValue | undefined;
-  opacity?: AnimatableNumericValue | undefined;
+  borderTopEndRadius?: number | undefined;
+  borderTopLeftRadius?: number | undefined;
+  borderTopRightRadius?: number | undefined;
+  borderTopStartRadius?: number | undefined;
+  borderTopWidth?: number | undefined;
+  borderWidth?: number | undefined;
+  opacity?: number | undefined;
   /**
    * Sets the elevation of a view, using Android's underlying
    * [elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).
@@ -262,10 +246,6 @@ export interface ViewStyle extends FlexStyle, ShadowStyleIOS, TransformsStyle {
    * @platform android
    */
   elevation?: number | undefined;
-  /**
-   * Controls whether the View can be the target of touch events.
-   */
-  pointerEvents?: 'box-none' | 'none' | 'box-only' | 'auto' | undefined;
 }
 
 export type FontVariant =
@@ -276,6 +256,7 @@ export type FontVariant =
   | 'proportional-nums';
 export interface TextStyleIOS extends ViewStyle {
   fontVariant?: FontVariant[] | undefined;
+  letterSpacing?: number | undefined;
   textDecorationColor?: ColorValue | undefined;
   textDecorationStyle?: 'solid' | 'double' | 'dotted' | 'dashed' | undefined;
   writingDirection?: 'auto' | 'ltr' | 'rtl' | undefined;
@@ -336,16 +317,16 @@ export interface TextStyle extends TextStyleIOS, TextStyleAndroid, ViewStyle {
 export interface ImageStyle extends FlexStyle, ShadowStyleIOS, TransformsStyle {
   resizeMode?: ImageResizeMode | undefined;
   backfaceVisibility?: 'visible' | 'hidden' | undefined;
-  borderBottomLeftRadius?: AnimatableNumericValue | undefined;
-  borderBottomRightRadius?: AnimatableNumericValue | undefined;
+  borderBottomLeftRadius?: number | undefined;
+  borderBottomRightRadius?: number | undefined;
   backgroundColor?: ColorValue | undefined;
   borderColor?: ColorValue | undefined;
-  borderRadius?: AnimatableNumericValue | undefined;
-  borderTopLeftRadius?: AnimatableNumericValue | undefined;
-  borderTopRightRadius?: AnimatableNumericValue | undefined;
+  borderWidth?: number | undefined;
+  borderRadius?: number | undefined;
+  borderTopLeftRadius?: number | undefined;
+  borderTopRightRadius?: number | undefined;
   overflow?: 'visible' | 'hidden' | undefined;
   overlayColor?: ColorValue | undefined;
   tintColor?: ColorValue | undefined;
-  opacity?: AnimatableNumericValue | undefined;
-  objectFit?: 'cover' | 'contain' | 'fill' | 'scale-down' | undefined;
+  opacity?: number | undefined;
 }
diff --git a/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.js b/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.js
index 03ad89f..14cf6d7 100644
--- a/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.js
+++ b/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.js
@@ -33,9 +33,7 @@ export type EdgeInsetsValue = {
   right: number,
   bottom: number,
 };
-
-export type DimensionValue = number | string | 'auto' | AnimatedNode | null;
-export type AnimatableNumericValue = number | AnimatedNode;
+export type DimensionValue = null | number | string | AnimatedNode;
 
 /**
  * React Native's layout system is based on Flexbox and is powered both
@@ -181,27 +179,8 @@ type ____LayoutStyle_Internal = $ReadOnly<{
    */
   margin?: DimensionValue,
 
-  /** Setting `marginBlock` has the same effect as setting both
-   *  `marginTop` and `marginBottom`.
-   */
-  marginBlock?: DimensionValue,
-
-  /** `marginBlockEnd` works like `margin-block-end`in CSS. Because React
-   *  Native doesn not support `writing-mode` this is always mapped to
-   *  `margin-bottom`. See https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block-end
-   *  for more details.
-   */
-  marginBlockEnd?: DimensionValue,
-
-  /** `marginBlockEnd` works like `margin-block-end`in CSS. Because React
-   *  Native doesn not support `writing-mode` this is always mapped to
-   *  `margin-top`. See https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block-end
-   *  for more details.
-   */
-  marginBlockStart?: DimensionValue,
-
   /** `marginBottom` works like `margin-bottom` in CSS.
-   *  See https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block-start
+   *  See https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom
    *  for more details.
    */
   marginBottom?: DimensionValue,
@@ -217,23 +196,6 @@ type ____LayoutStyle_Internal = $ReadOnly<{
    */
   marginHorizontal?: DimensionValue,
 
-  /** Setting `marginInline` has the same effect as setting
-   *  both `marginLeft` and `marginRight`.
-   */
-  marginInline?: DimensionValue,
-
-  /**
-   * When direction is `ltr`, `marginInlineEnd` is equivalent to `marginRight`.
-   * When direction is `rtl`, `marginInlineEnd` is equivalent to `marginLeft`.
-   */
-  marginInlineEnd?: DimensionValue,
-
-  /**
-   * When direction is `ltr`, `marginInlineStart` is equivalent to `marginLeft`.
-   * When direction is `rtl`, `marginInlineStart` is equivalent to `marginRight`.
-   */
-  marginInlineStart?: DimensionValue,
-
   /** `marginLeft` works like `margin-left` in CSS.
    *  See https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left
    *  for more details.
@@ -270,25 +232,6 @@ type ____LayoutStyle_Internal = $ReadOnly<{
    */
   padding?: DimensionValue,
 
-  /** Setting `paddingBlock` is like setting both of
-   *  `paddingTop` and `paddingBottom`.
-   * See https://developer.mozilla.org/en-US/docs/Web/CSS/padding-block
-   * for more details.
-   */
-  paddingBlock?: DimensionValue,
-
-  /** `paddingBlockEnd` works like `padding-bottom` in CSS.
-   * See https://developer.mozilla.org/en-US/docs/Web/CSS/padding-block-end
-   * for more details.
-   */
-  paddingBlockEnd?: DimensionValue,
-
-  /** `paddingBlockStart` works like `padding-top` in CSS.
-   * See https://developer.mozilla.org/en-US/docs/Web/CSS/padding-block-start
-   * for more details.
-   */
-  paddingBlockStart?: DimensionValue,
-
   /** `paddingBottom` works like `padding-bottom` in CSS.
    * See https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom
    * for more details.
@@ -306,23 +249,6 @@ type ____LayoutStyle_Internal = $ReadOnly<{
    */
   paddingHorizontal?: DimensionValue,
 
-  /** Setting `paddingInline` is like setting both of
-   *  `paddingLeft` and `paddingRight`.
-   */
-  paddingInline?: DimensionValue,
-
-  /**
-   * When direction is `ltr`, `paddingInlineEnd` is equivalent to `paddingRight`.
-   * When direction is `rtl`, `paddingInlineEnd` is equivalent to `paddingLeft`.
-   */
-  paddingInlineEnd?: DimensionValue,
-
-  /**
-   * When direction is `ltr`, `paddingInlineStart` is equivalent to `paddingLeft`.
-   * When direction is `rtl`, `paddingInlineStart` is equivalent to `paddingRight`.
-   */
-  paddingInlineStart?: DimensionValue,
-
   /** `paddingLeft` works like `padding-left` in CSS.
    * See https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left
    * for more details.
@@ -556,19 +482,6 @@ type ____LayoutStyle_Internal = $ReadOnly<{
    *  @platform ios
    */
   direction?: 'inherit' | 'ltr' | 'rtl',
-
-  /**
-   * In React Native, gap works the same way it does in CSS.
-   * If there are two or more children in a container, they will be separated from each other
-   * by the value of the gap - but the children will not be separated from the edges of their parent container.
-   * For horizontal gaps, use columnGap, for vertical gaps, use rowGap, and to apply both at the same time, it's gap.
-   * When align-content or justify-content are set to space-between or space-around, the separation
-   * between children may be larger than the gap value.
-   * See https://developer.mozilla.org/en-US/docs/Web/CSS/gap for more details.
-   */
-  rowGap?: number,
-  columnGap?: number,
-  gap?: number,
 }>;
 
 /**
@@ -599,12 +512,25 @@ export type ____ShadowStyle_InternalCore = $ReadOnly<{
    * Sets the drop shadow opacity (multiplied by the color's alpha component)
    * @platform ios
    */
-  shadowOpacity?: AnimatableNumericValue,
+  shadowOpacity?: number | AnimatedNode,
   /**
    * Sets the drop shadow blur radius
    * @platform ios
    */
   shadowRadius?: number,
+
+  /**
+   * In React Native, gap works the same way it does in CSS.
+   * If there are two or more children in a container, they will be separated from each other
+   * by the value of the gap - but the children will not be separated from the edges of their parent container.
+   * For horizontal gaps, use columnGap, for vertical gaps, use rowGap, and to apply both at the same time, it's gap.
+   * When align-content or justify-content are set to space-between or space-around, the separation
+   * between children may be larger than the gap value.
+   * See https://developer.mozilla.org/en-US/docs/Web/CSS/gap for more details.
+   */
+  rowGap?: number,
+  columnGap?: number,
+  gap?: number,
 }>;
 
 export type ____ShadowStyle_Internal = $ReadOnly<{
@@ -626,31 +552,24 @@ export type ____ViewStyle_InternalCore = $ReadOnly<{
   borderRightColor?: ____ColorValue_Internal,
   borderStartColor?: ____ColorValue_Internal,
   borderTopColor?: ____ColorValue_Internal,
-  borderBlockColor?: ____ColorValue_Internal,
-  borderBlockEndColor?: ____ColorValue_Internal,
-  borderBlockStartColor?: ____ColorValue_Internal,
-  borderRadius?: AnimatableNumericValue,
-  borderBottomEndRadius?: AnimatableNumericValue,
-  borderBottomLeftRadius?: AnimatableNumericValue,
-  borderBottomRightRadius?: AnimatableNumericValue,
-  borderBottomStartRadius?: AnimatableNumericValue,
-  borderEndEndRadius?: AnimatableNumericValue,
-  borderEndStartRadius?: AnimatableNumericValue,
-  borderStartEndRadius?: AnimatableNumericValue,
-  borderStartStartRadius?: AnimatableNumericValue,
-  borderTopEndRadius?: AnimatableNumericValue,
-  borderTopLeftRadius?: AnimatableNumericValue,
-  borderTopRightRadius?: AnimatableNumericValue,
-  borderTopStartRadius?: AnimatableNumericValue,
+  borderRadius?: number | AnimatedNode,
+  borderBottomEndRadius?: number | AnimatedNode,
+  borderBottomLeftRadius?: number | AnimatedNode,
+  borderBottomRightRadius?: number | AnimatedNode,
+  borderBottomStartRadius?: number | AnimatedNode,
+  borderTopEndRadius?: number | AnimatedNode,
+  borderTopLeftRadius?: number | AnimatedNode,
+  borderTopRightRadius?: number | AnimatedNode,
+  borderTopStartRadius?: number | AnimatedNode,
   borderStyle?: 'solid' | 'dotted' | 'dashed',
-  borderWidth?: AnimatableNumericValue,
-  borderBottomWidth?: AnimatableNumericValue,
-  borderEndWidth?: AnimatableNumericValue,
-  borderLeftWidth?: AnimatableNumericValue,
-  borderRightWidth?: AnimatableNumericValue,
-  borderStartWidth?: AnimatableNumericValue,
-  borderTopWidth?: AnimatableNumericValue,
-  opacity?: AnimatableNumericValue,
+  borderWidth?: number | AnimatedNode,
+  borderBottomWidth?: number | AnimatedNode,
+  borderEndWidth?: number | AnimatedNode,
+  borderLeftWidth?: number | AnimatedNode,
+  borderRightWidth?: number | AnimatedNode,
+  borderStartWidth?: number | AnimatedNode,
+  borderTopWidth?: number | AnimatedNode,
+  opacity?: number | AnimatedNode,
   elevation?: number,
   pointerEvents?: 'auto' | 'none' | 'box-none' | 'box-only',
 }>;
diff --git a/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js b/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js
index 7bcc017..f4e7b3e 100644
--- a/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js
+++ b/node_modules/react-native/Libraries/StyleSheet/flattenStyle.js
@@ -15,7 +15,6 @@ import type {____FlattenStyleProp_Internal} from './StyleSheetTypes';
 
 function flattenStyle<+TStyleProp: DangerouslyImpreciseStyleProp>(
   style: ?TStyleProp,
-  // $FlowFixMe[underconstrained-implicit-instantiation]
 ): ?____FlattenStyleProp_Internal<TStyleProp> {
   if (style === null || typeof style !== 'object') {
     return undefined;
@@ -27,7 +26,6 @@ function flattenStyle<+TStyleProp: DangerouslyImpreciseStyleProp>(
 
   const result: {[string]: $FlowFixMe} = {};
   for (let i = 0, styleLength = style.length; i < styleLength; ++i) {
-    // $FlowFixMe[underconstrained-implicit-instantiation]
     const computedStyle = flattenStyle(style[i]);
     if (computedStyle) {
       for (const key in computedStyle) {
diff --git a/node_modules/react-native/Libraries/StyleSheet/normalizeColor.js b/node_modules/react-native/Libraries/StyleSheet/normalizeColor.js
index c9cabcf..dec9004 100755
--- a/node_modules/react-native/Libraries/StyleSheet/normalizeColor.js
+++ b/node_modules/react-native/Libraries/StyleSheet/normalizeColor.js
@@ -13,7 +13,7 @@
 import type {ProcessedColorValue} from './processColor';
 import type {ColorValue} from './StyleSheet';
 
-import _normalizeColor from '@react-native/normalize-colors';
+import _normalizeColor from '@react-native/normalize-color';
 
 function normalizeColor(
   color: ?(ColorValue | ProcessedColorValue),
diff --git a/node_modules/react-native/Libraries/StyleSheet/processColor.js b/node_modules/react-native/Libraries/StyleSheet/processColor.js
index 77eef71..955f81c 100644
--- a/node_modules/react-native/Libraries/StyleSheet/processColor.js
+++ b/node_modules/react-native/Libraries/StyleSheet/processColor.js
@@ -57,4 +57,4 @@ function processColor(color?: ?(number | ColorValue)): ?ProcessedColorValue {
   return normalizedColor;
 }
 
-export default processColor;
+module.exports = processColor;
diff --git a/node_modules/react-native/Libraries/Text/React-RCTText.podspec b/node_modules/react-native/Libraries/Text/React-RCTText.podspec
index 091ccea..793a8db 100644
--- a/node_modules/react-native/Libraries/Text/React-RCTText.podspec
+++ b/node_modules/react-native/Libraries/Text/React-RCTText.podspec
@@ -23,7 +23,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/text"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{h,m}"
diff --git a/node_modules/react-native/Libraries/Text/Text.d.ts b/node_modules/react-native/Libraries/Text/Text.d.ts
index bee0c63..a9d2a1b 100644
--- a/node_modules/react-native/Libraries/Text/Text.d.ts
+++ b/node_modules/react-native/Libraries/Text/Text.d.ts
@@ -27,7 +27,7 @@ export interface TextPropsIOS {
   adjustsFontSizeToFit?: boolean | undefined;
 
   /**
-   * The Dynamic Type scale ramp to apply to this element on iOS.
+   * The Dynamic Text scale ramp to apply to this element on iOS.
    */
   dynamicTypeRamp?:
     | 'caption2'
@@ -53,16 +53,6 @@ export interface TextPropsIOS {
    * default, a gray oval highlights the text on press down.
    */
   suppressHighlighting?: boolean | undefined;
-
-  /**
-   * Set line break strategy on iOS.
-   */
-  lineBreakStrategyIOS?:
-    | 'none'
-    | 'standard'
-    | 'hangul-word'
-    | 'push-out'
-    | undefined;
 }
 
 export interface TextPropsAndroid {
@@ -117,7 +107,7 @@ export interface TextProps
    */
   allowFontScaling?: boolean | undefined;
 
-  children?: React.ReactNode | undefined;
+  children?: React.ReactNode;
 
   /**
    * This can be one of the following values:
diff --git a/node_modules/react-native/Libraries/Text/Text.js b/node_modules/react-native/Libraries/Text/Text.js
index df548af..dde3a5b 100644
--- a/node_modules/react-native/Libraries/Text/Text.js
+++ b/node_modules/react-native/Libraries/Text/Text.js
@@ -207,7 +207,6 @@ const Text: React.AbstractComponent<
     default: accessible,
   });
 
-  // $FlowFixMe[underconstrained-implicit-instantiation]
   style = flattenStyle(style);
 
   if (typeof style?.fontWeight === 'number') {
diff --git a/node_modules/react-native/Libraries/Text/Text/NSTextStorage+FontScaling.m b/node_modules/react-native/Libraries/Text/Text/NSTextStorage+FontScaling.m
index ee391a2..4c4cb67 100644
--- a/node_modules/react-native/Libraries/Text/Text/NSTextStorage+FontScaling.m
+++ b/node_modules/react-native/Libraries/Text/Text/NSTextStorage+FontScaling.m
@@ -30,11 +30,11 @@ - (void)scaleFontSizeToFitSize:(CGSize)size
   while (true) {
     [self scaleFontSizeWithRatio:ratio minimumFontSize:minimumFontSize maximumFontSize:maximumFontSize];
 
-    RCTTextSizeComparisonOptions comparison = [self compareToSize:size thresholdRatio:0.01];
+    RCTTextSizeComparisonOptions comparsion = [self compareToSize:size thresholdRatio:0.01];
 
-    if ((comparison & RCTTextSizeComparisonWithinRange) && (comparison & RCTTextSizeComparisonSmaller)) {
+    if ((comparsion & RCTTextSizeComparisonWithinRange) && (comparsion & RCTTextSizeComparisonSmaller)) {
       return;
-    } else if (comparison & RCTTextSizeComparisonSmaller) {
+    } else if (comparsion & RCTTextSizeComparisonSmaller) {
       bottomRatio = ratio;
       lastRatioWhichFits = ratio;
     } else {
diff --git a/node_modules/react-native/Libraries/Text/Text/RCTTextView.m b/node_modules/react-native/Libraries/Text/Text/RCTTextView.m
index 3f64e31..4ba41b9 100644
--- a/node_modules/react-native/Libraries/Text/Text/RCTTextView.m
+++ b/node_modules/react-native/Libraries/Text/Text/RCTTextView.m
@@ -14,8 +14,6 @@
 
 #import <React/RCTTextShadowView.h>
 
-#import <QuartzCore/QuartzCore.h>
-
 @implementation RCTTextView {
   CAShapeLayer *_highlightLayer;
   UILongPressGestureRecognizer *_longPressGestureRecognizer;
@@ -38,8 +36,10 @@ - (instancetype)initWithFrame:(CGRect)frame
 
 - (NSString *)description
 {
-  NSString *stringToAppend = [NSString stringWithFormat:@" reactTag: %@; text: %@", self.reactTag, _textStorage.string];
-  return [[super description] stringByAppendingString:stringToAppend];
+  NSString *superDescription = super.description;
+  NSRange replacementRange = [superDescription rangeOfString:@">"];
+  NSString *replacement = [NSString stringWithFormat:@"; reactTag: %@; text: %@>", self.reactTag, _textStorage.string];
+  return [superDescription stringByReplacingCharactersInRange:replacementRange withString:replacement];
 }
 
 - (void)setSelectable:(BOOL)selectable
diff --git a/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m b/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m
index 5d5d308..62ec0d5 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m
+++ b/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m
@@ -219,7 +219,7 @@ - (CGSize)contentSize
 {
   CGSize contentSize = super.contentSize;
   CGSize placeholderSize = _placeholderView.isHidden ? CGSizeZero : self.placeholderSize;
-  // When a text input is empty, it actually displays a placeholder.
+  // When a text input is empty, it actually displays a placehoder.
   // So, we have to consider `placeholderSize` as a minimum `contentSize`.
   // Returning size DOES contain `textContainerInset` (aka `padding`).
   return CGSizeMake(MAX(contentSize.width, placeholderSize.width), MAX(contentSize.height, placeholderSize.height));
diff --git a/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegateAdapter.m b/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegateAdapter.m
index 9dca6a5..1c8f8e0 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegateAdapter.m
+++ b/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegateAdapter.m
@@ -256,7 +256,7 @@ - (BOOL)textView:(__unused UITextView *)textView shouldChangeTextInRange:(NSRang
 
 - (void)textViewDidChange:(__unused UITextView *)textView
 {
-  if (_ignoreNextTextInputCall && [_lastStringStateWasUpdatedWith isEqual:_backedTextInputView.attributedText]) {
+  if (_ignoreNextTextInputCall) {
     _ignoreNextTextInputCall = NO;
     return;
   }
diff --git a/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m b/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m
index 0bc14b4..04e5a49 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m
+++ b/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m
@@ -22,7 +22,7 @@
 @implementation RCTBaseTextInputView {
   __weak RCTBridge *_bridge;
   __weak id<RCTEventDispatcherProtocol> _eventDispatcher;
-  BOOL _hasInputAccessoryView;
+  BOOL _hasInputAccesoryView;
   NSString *_Nullable _predictedText;
   BOOL _didMoveToWindow;
 }
@@ -313,12 +313,6 @@ - (void)setShowSoftInputOnFocus:(BOOL)showSoftInputOnFocus
   if (showSoftInputOnFocus) {
     // Resets to default keyboard.
     self.backedTextInputView.inputView = nil;
-
-    // Without the call to reloadInputViews, the keyboard will not change until the textInput field (the first
-    // responder) loses and regains focus.
-    if (self.backedTextInputView.isFirstResponder) {
-      [self.backedTextInputView reloadInputViews];
-    }
   } else {
     // Hides keyboard, but keeps blinking cursor.
     self.backedTextInputView.inputView = [UIView new];
@@ -458,7 +452,7 @@ - (NSString *)textInputShouldChangeText:(NSString *)text inRange:(NSRange)range
 
   if (range.location + range.length > backedTextInputView.attributedText.string.length) {
     _predictedText = backedTextInputView.attributedText.string;
-  } else if (text != nil) {
+  } else {
     _predictedText = [backedTextInputView.attributedText.string stringByReplacingCharactersInRange:range
                                                                                         withString:text];
   }
@@ -626,18 +620,18 @@ - (void)setDefaultInputAccessoryView
 
   // These keyboard types (all are number pads) don't have a "Done" button by default,
   // so we create an `inputAccessoryView` with this button for them.
-  BOOL shouldHaveInputAccessoryView =
+  BOOL shouldHaveInputAccesoryView =
       (keyboardType == UIKeyboardTypeNumberPad || keyboardType == UIKeyboardTypePhonePad ||
        keyboardType == UIKeyboardTypeDecimalPad || keyboardType == UIKeyboardTypeASCIICapableNumberPad) &&
       textInputView.returnKeyType == UIReturnKeyDone;
 
-  if (_hasInputAccessoryView == shouldHaveInputAccessoryView) {
+  if (_hasInputAccesoryView == shouldHaveInputAccesoryView) {
     return;
   }
 
-  _hasInputAccessoryView = shouldHaveInputAccessoryView;
+  _hasInputAccesoryView = shouldHaveInputAccesoryView;
 
-  if (shouldHaveInputAccessoryView) {
+  if (shouldHaveInputAccesoryView) {
     UIToolbar *toolbarView = [UIToolbar new];
     [toolbarView sizeToFit];
     UIBarButtonItem *flexibleSpace =
diff --git a/node_modules/react-native/Libraries/Text/TextProps.js b/node_modules/react-native/Libraries/Text/TextProps.js
index bb9348f..6615713 100644
--- a/node_modules/react-native/Libraries/Text/TextProps.js
+++ b/node_modules/react-native/Libraries/Text/TextProps.js
@@ -92,8 +92,9 @@ export type TextProps = $ReadOnly<{|
   'aria-selected'?: ?boolean,
 
   /**
-   * Represents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.
-   * This prop is listed for cross-platform reasons and has no real effect on Android or iOS.
+   * Reperesents the nativeID of the associated label text. When the assistive technology focuses on the component with this props, the text is read aloud.
+   *
+   * @platform android
    */
   'aria-labelledby'?: ?string,
 
@@ -229,7 +230,7 @@ export type TextProps = $ReadOnly<{|
   adjustsFontSizeToFit?: ?boolean,
 
   /**
-   * The Dynamic Type scale ramp to apply to this element on iOS.
+   * The Dynamic Text scale ramp to apply to this element on iOS.
    */
   dynamicTypeRamp?: ?(
     | 'caption2'
diff --git a/node_modules/react-native/Libraries/TurboModule/samples/NativeSampleTurboModule.js b/node_modules/react-native/Libraries/TurboModule/samples/NativeSampleTurboModule.js
index 89d16f0..813f2cb 100644
--- a/node_modules/react-native/Libraries/TurboModule/samples/NativeSampleTurboModule.js
+++ b/node_modules/react-native/Libraries/TurboModule/samples/NativeSampleTurboModule.js
@@ -13,11 +13,6 @@ import type {RootTag, TurboModule} from '../RCTExport';
 
 import * as TurboModuleRegistry from '../TurboModuleRegistry';
 
-export enum EnumInt {
-  A = 23,
-  B = 42,
-}
-
 export interface Spec extends TurboModule {
   // Exported methods.
   +getConstants: () => {|
@@ -27,7 +22,6 @@ export interface Spec extends TurboModule {
   |};
   +voidFunc: () => void;
   +getBool: (arg: boolean) => boolean;
-  +getEnum?: (arg: EnumInt) => EnumInt;
   +getNumber: (arg: number) => number;
   +getString: (arg: string) => string;
   +getArray: (arg: Array<any>) => Array<any>;
diff --git a/node_modules/react-native/Libraries/TypeSafety/RCTConvertHelpers.h b/node_modules/react-native/Libraries/TypeSafety/RCTConvertHelpers.h
index d33f42c..e7bd47b 100644
--- a/node_modules/react-native/Libraries/TypeSafety/RCTConvertHelpers.h
+++ b/node_modules/react-native/Libraries/TypeSafety/RCTConvertHelpers.h
@@ -23,7 +23,7 @@ using LazyVector = FB::LazyVector<T, id>;
 template <typename ContainerT>
 NSArray *RCTConvertVecToArray(const ContainerT &vec, id (^convertor)(typename ContainerT::value_type element))
 {
-  NSMutableArray *array = [[NSMutableArray alloc] initWithCapacity:vec.size()];
+  NSMutableArray *array = [NSMutableArray new];
   for (size_t i = 0, size = vec.size(); i < size; ++i) {
     id object = convertor(vec[i]);
     array[i] = object ?: (id)kCFNull;
diff --git a/node_modules/react-native/Libraries/TypeSafety/RCTTypeSafety.podspec b/node_modules/react-native/Libraries/TypeSafety/RCTTypeSafety.podspec
index 79c04d0..d274468 100644
--- a/node_modules/react-native/Libraries/TypeSafety/RCTTypeSafety.podspec
+++ b/node_modules/react-native/Libraries/TypeSafety/RCTTypeSafety.podspec
@@ -22,7 +22,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{c,h,m,mm,cpp}"
diff --git a/node_modules/react-native/Libraries/Types/CodegenTypes.js b/node_modules/react-native/Libraries/Types/CodegenTypes.js
index 737e2f2..ca43a6b 100644
--- a/node_modules/react-native/Libraries/Types/CodegenTypes.js
+++ b/node_modules/react-native/Libraries/Types/CodegenTypes.js
@@ -29,7 +29,6 @@ export type Double = number;
 export type Float = number;
 export type Int32 = number;
 export type UnsafeObject = $FlowFixMe; // Object is forbidden in strict mode
-export type UnsafeMixed = mixed;
 
 type DefaultTypes = number | boolean | string | $ReadOnlyArray<string>;
 // Default handling, ignore the unused value
diff --git a/node_modules/react-native/Libraries/UTFSequence.js b/node_modules/react-native/Libraries/UTFSequence.js
index 05a8562..6539892 100644
--- a/node_modules/react-native/Libraries/UTFSequence.js
+++ b/node_modules/react-native/Libraries/UTFSequence.js
@@ -31,7 +31,6 @@ const UTFSequence: {|
   NBSP: string,
   NDASH: string,
   NDASH_SP: string,
-  NEWLINE: string,
   PIZZA: string,
   TRIANGLE_LEFT: string,
   TRIANGLE_RIGHT: string,
@@ -46,11 +45,10 @@ const UTFSequence: {|
   MDASH_SP: '\u00A0\u2014\u00A0', // &nbsp;&mdash;&nbsp;
   NDASH: '\u2013', // en dash: &ndash;
   NDASH_SP: '\u00A0\u2013\u00A0', // &nbsp;&ndash;&nbsp;
-  NEWLINE: '\u000A',
   NBSP: '\u00A0', // non-breaking space: &nbsp;
   PIZZA: '\uD83C\uDF55',
   TRIANGLE_LEFT: '\u25c0', // black left-pointing triangle
   TRIANGLE_RIGHT: '\u25b6', // black right-pointing triangle
 });
 
-export default UTFSequence;
+module.exports = UTFSequence;
diff --git a/node_modules/react-native/Libraries/Utilities/Appearance.d.ts b/node_modules/react-native/Libraries/Utilities/Appearance.d.ts
index 2b8428e..7d2faf6 100644
--- a/node_modules/react-native/Libraries/Utilities/Appearance.d.ts
+++ b/node_modules/react-native/Libraries/Utilities/Appearance.d.ts
@@ -28,16 +28,6 @@ export namespace Appearance {
    */
   export function getColorScheme(): ColorSchemeName;
 
-  /**
-   * Set the color scheme preference. This is useful for overriding the default
-   * color scheme preference for the app. Note that this will not change the
-   * appearance of the system UI, only the appearance of the app.
-   * Only available on iOS 13+ and Android 10+.
-   */
-  export function setColorScheme(
-    scheme: ColorSchemeName | null | undefined,
-  ): void;
-
   /**
    * Add an event handler that is fired when appearance preferences change.
    */
diff --git a/node_modules/react-native/Libraries/Utilities/Appearance.js b/node_modules/react-native/Libraries/Utilities/Appearance.js
index f085887..54d03dd 100644
--- a/node_modules/react-native/Libraries/Utilities/Appearance.js
+++ b/node_modules/react-native/Libraries/Utilities/Appearance.js
@@ -85,19 +85,6 @@ module.exports = {
     return nativeColorScheme;
   },
 
-  setColorScheme(colorScheme: ?ColorSchemeName): void {
-    const nativeColorScheme = colorScheme == null ? 'unspecified' : colorScheme;
-
-    invariant(
-      colorScheme === 'dark' || colorScheme === 'light' || colorScheme == null,
-      "Unrecognized color scheme. Did you mean 'dark', 'light' or null?",
-    );
-
-    if (NativeAppearance != null && NativeAppearance.setColorScheme != null) {
-      NativeAppearance.setColorScheme(nativeColorScheme);
-    }
-  },
-
   /**
    * Add an event handler that is fired when appearance preferences change.
    */
diff --git a/node_modules/react-native/Libraries/Utilities/Dimensions.js b/node_modules/react-native/Libraries/Utilities/Dimensions.js
index 37ab1e0..e7fe880 100644
--- a/node_modules/react-native/Libraries/Utilities/Dimensions.js
+++ b/node_modules/react-native/Libraries/Utilities/Dimensions.js
@@ -127,4 +127,4 @@ if (!initialDims) {
 
 Dimensions.set(initialDims);
 
-export default Dimensions;
+module.exports = Dimensions;
diff --git a/node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js b/node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js
index fcf4018..d119f63 100644
--- a/node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js
+++ b/node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js
@@ -10,17 +10,8 @@
 
 import type {IPerformanceLogger} from './createPerformanceLogger';
 
-import ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';
-import NativePerformance from '../WebPerformance/NativePerformance';
 import createPerformanceLogger from './createPerformanceLogger';
 
-function isLoggingForWebPerformance(): boolean {
-  return (
-    NativePerformance != null &&
-    ReactNativeFeatureFlags.isGlobalWebPerformanceLoggerEnabled()
-  );
-}
-
 /**
  * This is a global shared instance of IPerformanceLogger that is created with
  * createPerformanceLogger().
@@ -28,8 +19,6 @@ function isLoggingForWebPerformance(): boolean {
  * that are logged during loading bundle. If you want to log something from your
  * React component you should use PerformanceLoggerContext instead.
  */
-const GlobalPerformanceLogger: IPerformanceLogger = createPerformanceLogger(
-  isLoggingForWebPerformance(),
-);
+const GlobalPerformanceLogger: IPerformanceLogger = createPerformanceLogger();
 
 module.exports = GlobalPerformanceLogger;
diff --git a/node_modules/react-native/Libraries/Utilities/HMRClient.js b/node_modules/react-native/Libraries/Utilities/HMRClient.js
index 03ae287..b37f596 100644
--- a/node_modules/react-native/Libraries/Utilities/HMRClient.js
+++ b/node_modules/react-native/Libraries/Utilities/HMRClient.js
@@ -25,7 +25,7 @@ let hmrClient = null;
 let hmrUnavailableReason: string | null = null;
 let currentCompileErrorMessage: string | null = null;
 let didConnect: boolean = false;
-let pendingLogs: Array<[LogLevel, $ReadOnlyArray<mixed>]> = [];
+let pendingLogs: Array<[LogLevel, Array<mixed>]> = [];
 
 type LogLevel =
   | 'trace'
@@ -42,7 +42,7 @@ export type HMRClientNativeInterface = {|
   enable(): void,
   disable(): void,
   registerBundle(requestUrl: string): void,
-  log(level: LogLevel, data: $ReadOnlyArray<mixed>): void,
+  log(level: LogLevel, data: Array<mixed>): void,
   setup(
     platform: string,
     bundleEntry: string,
@@ -105,7 +105,7 @@ const HMRClient: HMRClientNativeInterface = {
     registerBundleEntryPoints(hmrClient);
   },
 
-  log(level: LogLevel, data: $ReadOnlyArray<mixed>) {
+  log(level: LogLevel, data: Array<mixed>) {
     if (!hmrClient) {
       // Catch a reasonable number of early logs
       // in case hmrClient gets initialized later.
@@ -247,23 +247,17 @@ Error: ${e.message}`;
       // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1
       // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5
       const isNormalOrUnsetCloseReason =
-        closeEvent == null ||
         closeEvent.code === 1000 ||
         closeEvent.code === 1005 ||
         closeEvent.code == null;
 
-      setHMRUnavailableReason(
-        `${
-          isNormalOrUnsetCloseReason
-            ? 'Disconnected from Metro.'
-            : `Disconnected from Metro (${closeEvent.code}: "${closeEvent.reason}").`
-        }
-
-To reconnect:
-- Ensure that Metro is running and available on the same network
-- Reload this app (will trigger further help if Metro cannot be connected to)
-      `,
-      );
+      if (isNormalOrUnsetCloseReason) {
+        setHMRUnavailableReason('Disconnected from Metro.');
+      } else {
+        setHMRUnavailableReason(
+          `Disconnected from Metro (${closeEvent.code}: "${closeEvent.reason}").`,
+        );
+      }
     });
 
     if (isEnabled) {
diff --git a/node_modules/react-native/Libraries/Utilities/IPerformanceLogger.js b/node_modules/react-native/Libraries/Utilities/IPerformanceLogger.js
deleted file mode 100644
index 617e713..0000000
--- a/node_modules/react-native/Libraries/Utilities/IPerformanceLogger.js
+++ /dev/null
@@ -1,49 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-export type Timespan = {
-  startTime: number,
-  endTime?: number,
-  totalTime?: number,
-  startExtras?: Extras,
-  endExtras?: Extras,
-};
-
-// Extra values should be serializable primitives
-export type ExtraValue = number | string | boolean;
-
-export type Extras = {[key: string]: ExtraValue};
-
-export interface IPerformanceLogger {
-  addTimespan(
-    key: string,
-    startTime: number,
-    endTime: number,
-    startExtras?: Extras,
-    endExtras?: Extras,
-  ): void;
-  append(logger: IPerformanceLogger): void;
-  clear(): void;
-  clearCompleted(): void;
-  close(): void;
-  currentTimestamp(): number;
-  getExtras(): $ReadOnly<{[key: string]: ?ExtraValue, ...}>;
-  getPoints(): $ReadOnly<{[key: string]: ?number, ...}>;
-  getPointExtras(): $ReadOnly<{[key: string]: ?Extras, ...}>;
-  getTimespans(): $ReadOnly<{[key: string]: ?Timespan, ...}>;
-  hasTimespan(key: string): boolean;
-  isClosed(): boolean;
-  logEverything(): void;
-  markPoint(key: string, timestamp?: number, extras?: Extras): void;
-  removeExtra(key: string): ?ExtraValue;
-  setExtra(key: string, value: ExtraValue): void;
-  startTimespan(key: string, timestamp?: number, extras?: Extras): void;
-  stopTimespan(key: string, timestamp?: number, extras?: Extras): void;
-}
diff --git a/node_modules/react-native/Libraries/Utilities/LoadingView.android.js b/node_modules/react-native/Libraries/Utilities/LoadingView.android.js
index b5ffc4d..03dd42d 100644
--- a/node_modules/react-native/Libraries/Utilities/LoadingView.android.js
+++ b/node_modules/react-native/Libraries/Utilities/LoadingView.android.js
@@ -8,37 +8,20 @@
  * @flow strict-local
  */
 
-import processColor from '../StyleSheet/processColor';
-import Appearance from './Appearance';
-import NativeDevLoadingView from './NativeDevLoadingView';
+import ToastAndroid from '../Components/ToastAndroid/ToastAndroid';
+
+const TOAST_SHORT_DELAY = 2000;
+let isVisible = false;
 
 module.exports = {
   showMessage(message: string, type: 'load' | 'refresh') {
-    if (NativeDevLoadingView) {
-      let backgroundColor;
-      let textColor;
-
-      if (type === 'refresh') {
-        backgroundColor = processColor('#2584e8');
-        textColor = processColor('#ffffff');
-      } else if (type === 'load') {
-        if (Appearance.getColorScheme() === 'dark') {
-          backgroundColor = processColor('#fafafa');
-          textColor = processColor('#242526');
-        } else {
-          backgroundColor = processColor('#404040');
-          textColor = processColor('#ffffff');
-        }
-      }
-
-      NativeDevLoadingView.showMessage(
-        message,
-        typeof textColor === 'number' ? textColor : null,
-        typeof backgroundColor === 'number' ? backgroundColor : null,
-      );
+    if (!isVisible) {
+      ToastAndroid.show(message, ToastAndroid.SHORT);
+      isVisible = true;
+      setTimeout(() => {
+        isVisible = false;
+      }, TOAST_SHORT_DELAY);
     }
   },
-  hide() {
-    NativeDevLoadingView && NativeDevLoadingView.hide();
-  },
+  hide() {},
 };
diff --git a/node_modules/react-native/Libraries/Utilities/MatrixMath.js b/node_modules/react-native/Libraries/Utilities/MatrixMath.js
new file mode 100755
index 0000000..ac305dc
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/MatrixMath.js
@@ -0,0 +1,748 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @noflow
+ */
+
+'use strict';
+
+const invariant = require('invariant');
+
+/**
+ * Memory conservative (mutative) matrix math utilities. Uses "command"
+ * matrices, which are reusable.
+ */
+const MatrixMath = {
+  createIdentityMatrix: function () {
+    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
+  },
+
+  createCopy: function (m) {
+    return [
+      m[0],
+      m[1],
+      m[2],
+      m[3],
+      m[4],
+      m[5],
+      m[6],
+      m[7],
+      m[8],
+      m[9],
+      m[10],
+      m[11],
+      m[12],
+      m[13],
+      m[14],
+      m[15],
+    ];
+  },
+
+  createOrthographic: function (left, right, bottom, top, near, far) {
+    const a = 2 / (right - left);
+    const b = 2 / (top - bottom);
+    const c = -2 / (far - near);
+
+    const tx = -(right + left) / (right - left);
+    const ty = -(top + bottom) / (top - bottom);
+    const tz = -(far + near) / (far - near);
+
+    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
+  },
+
+  createFrustum: function (left, right, bottom, top, near, far) {
+    const r_width = 1 / (right - left);
+    const r_height = 1 / (top - bottom);
+    const r_depth = 1 / (near - far);
+    const x = 2 * (near * r_width);
+    const y = 2 * (near * r_height);
+    const A = (right + left) * r_width;
+    const B = (top + bottom) * r_height;
+    const C = (far + near) * r_depth;
+    const D = 2 * (far * near * r_depth);
+    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
+  },
+
+  /**
+   * This create a perspective projection towards negative z
+   * Clipping the z range of [-near, -far]
+   *
+   * @param fovInRadians - field of view in radians
+   */
+  createPerspective: function (fovInRadians, aspect, near, far) {
+    const h = 1 / Math.tan(fovInRadians / 2);
+    const r_depth = 1 / (near - far);
+    const C = (far + near) * r_depth;
+    const D = 2 * (far * near * r_depth);
+    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
+  },
+
+  createTranslate2d: function (x, y) {
+    const mat = MatrixMath.createIdentityMatrix();
+    MatrixMath.reuseTranslate2dCommand(mat, x, y);
+    return mat;
+  },
+
+  reuseTranslate2dCommand: function (matrixCommand, x, y) {
+    matrixCommand[12] = x;
+    matrixCommand[13] = y;
+  },
+
+  reuseTranslate3dCommand: function (matrixCommand, x, y, z) {
+    matrixCommand[12] = x;
+    matrixCommand[13] = y;
+    matrixCommand[14] = z;
+  },
+
+  createScale: function (factor) {
+    const mat = MatrixMath.createIdentityMatrix();
+    MatrixMath.reuseScaleCommand(mat, factor);
+    return mat;
+  },
+
+  reuseScaleCommand: function (matrixCommand, factor) {
+    matrixCommand[0] = factor;
+    matrixCommand[5] = factor;
+  },
+
+  reuseScale3dCommand: function (matrixCommand, x, y, z) {
+    matrixCommand[0] = x;
+    matrixCommand[5] = y;
+    matrixCommand[10] = z;
+  },
+
+  reusePerspectiveCommand: function (matrixCommand, p) {
+    matrixCommand[11] = -1 / p;
+  },
+
+  reuseScaleXCommand(matrixCommand, factor) {
+    matrixCommand[0] = factor;
+  },
+
+  reuseScaleYCommand(matrixCommand, factor) {
+    matrixCommand[5] = factor;
+  },
+
+  reuseScaleZCommand(matrixCommand, factor) {
+    matrixCommand[10] = factor;
+  },
+
+  reuseRotateXCommand: function (matrixCommand, radians) {
+    matrixCommand[5] = Math.cos(radians);
+    matrixCommand[6] = Math.sin(radians);
+    matrixCommand[9] = -Math.sin(radians);
+    matrixCommand[10] = Math.cos(radians);
+  },
+
+  reuseRotateYCommand: function (matrixCommand, amount) {
+    matrixCommand[0] = Math.cos(amount);
+    matrixCommand[2] = -Math.sin(amount);
+    matrixCommand[8] = Math.sin(amount);
+    matrixCommand[10] = Math.cos(amount);
+  },
+
+  // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix
+  reuseRotateZCommand: function (matrixCommand, radians) {
+    matrixCommand[0] = Math.cos(radians);
+    matrixCommand[1] = Math.sin(radians);
+    matrixCommand[4] = -Math.sin(radians);
+    matrixCommand[5] = Math.cos(radians);
+  },
+
+  createRotateZ: function (radians) {
+    const mat = MatrixMath.createIdentityMatrix();
+    MatrixMath.reuseRotateZCommand(mat, radians);
+    return mat;
+  },
+
+  reuseSkewXCommand: function (matrixCommand, radians) {
+    matrixCommand[4] = Math.tan(radians);
+  },
+
+  reuseSkewYCommand: function (matrixCommand, radians) {
+    matrixCommand[1] = Math.tan(radians);
+  },
+
+  multiplyInto: function (out, a, b) {
+    const a00 = a[0],
+      a01 = a[1],
+      a02 = a[2],
+      a03 = a[3],
+      a10 = a[4],
+      a11 = a[5],
+      a12 = a[6],
+      a13 = a[7],
+      a20 = a[8],
+      a21 = a[9],
+      a22 = a[10],
+      a23 = a[11],
+      a30 = a[12],
+      a31 = a[13],
+      a32 = a[14],
+      a33 = a[15];
+
+    let b0 = b[0],
+      b1 = b[1],
+      b2 = b[2],
+      b3 = b[3];
+    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
+    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
+    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
+    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
+
+    b0 = b[4];
+    b1 = b[5];
+    b2 = b[6];
+    b3 = b[7];
+    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
+    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
+    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
+    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
+
+    b0 = b[8];
+    b1 = b[9];
+    b2 = b[10];
+    b3 = b[11];
+    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
+    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
+    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
+    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
+
+    b0 = b[12];
+    b1 = b[13];
+    b2 = b[14];
+    b3 = b[15];
+    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
+    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
+    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
+    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
+  },
+
+  determinant(matrix: Array<number>): number {
+    const [
+      m00,
+      m01,
+      m02,
+      m03,
+      m10,
+      m11,
+      m12,
+      m13,
+      m20,
+      m21,
+      m22,
+      m23,
+      m30,
+      m31,
+      m32,
+      m33,
+    ] = matrix;
+    return (
+      m03 * m12 * m21 * m30 -
+      m02 * m13 * m21 * m30 -
+      m03 * m11 * m22 * m30 +
+      m01 * m13 * m22 * m30 +
+      m02 * m11 * m23 * m30 -
+      m01 * m12 * m23 * m30 -
+      m03 * m12 * m20 * m31 +
+      m02 * m13 * m20 * m31 +
+      m03 * m10 * m22 * m31 -
+      m00 * m13 * m22 * m31 -
+      m02 * m10 * m23 * m31 +
+      m00 * m12 * m23 * m31 +
+      m03 * m11 * m20 * m32 -
+      m01 * m13 * m20 * m32 -
+      m03 * m10 * m21 * m32 +
+      m00 * m13 * m21 * m32 +
+      m01 * m10 * m23 * m32 -
+      m00 * m11 * m23 * m32 -
+      m02 * m11 * m20 * m33 +
+      m01 * m12 * m20 * m33 +
+      m02 * m10 * m21 * m33 -
+      m00 * m12 * m21 * m33 -
+      m01 * m10 * m22 * m33 +
+      m00 * m11 * m22 * m33
+    );
+  },
+
+  /**
+   * Inverse of a matrix. Multiplying by the inverse is used in matrix math
+   * instead of division.
+   *
+   * Formula from:
+   * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
+   */
+  inverse(matrix: Array<number>): Array<number> {
+    const det = MatrixMath.determinant(matrix);
+    if (!det) {
+      return matrix;
+    }
+    const [
+      m00,
+      m01,
+      m02,
+      m03,
+      m10,
+      m11,
+      m12,
+      m13,
+      m20,
+      m21,
+      m22,
+      m23,
+      m30,
+      m31,
+      m32,
+      m33,
+    ] = matrix;
+    return [
+      (m12 * m23 * m31 -
+        m13 * m22 * m31 +
+        m13 * m21 * m32 -
+        m11 * m23 * m32 -
+        m12 * m21 * m33 +
+        m11 * m22 * m33) /
+        det,
+      (m03 * m22 * m31 -
+        m02 * m23 * m31 -
+        m03 * m21 * m32 +
+        m01 * m23 * m32 +
+        m02 * m21 * m33 -
+        m01 * m22 * m33) /
+        det,
+      (m02 * m13 * m31 -
+        m03 * m12 * m31 +
+        m03 * m11 * m32 -
+        m01 * m13 * m32 -
+        m02 * m11 * m33 +
+        m01 * m12 * m33) /
+        det,
+      (m03 * m12 * m21 -
+        m02 * m13 * m21 -
+        m03 * m11 * m22 +
+        m01 * m13 * m22 +
+        m02 * m11 * m23 -
+        m01 * m12 * m23) /
+        det,
+      (m13 * m22 * m30 -
+        m12 * m23 * m30 -
+        m13 * m20 * m32 +
+        m10 * m23 * m32 +
+        m12 * m20 * m33 -
+        m10 * m22 * m33) /
+        det,
+      (m02 * m23 * m30 -
+        m03 * m22 * m30 +
+        m03 * m20 * m32 -
+        m00 * m23 * m32 -
+        m02 * m20 * m33 +
+        m00 * m22 * m33) /
+        det,
+      (m03 * m12 * m30 -
+        m02 * m13 * m30 -
+        m03 * m10 * m32 +
+        m00 * m13 * m32 +
+        m02 * m10 * m33 -
+        m00 * m12 * m33) /
+        det,
+      (m02 * m13 * m20 -
+        m03 * m12 * m20 +
+        m03 * m10 * m22 -
+        m00 * m13 * m22 -
+        m02 * m10 * m23 +
+        m00 * m12 * m23) /
+        det,
+      (m11 * m23 * m30 -
+        m13 * m21 * m30 +
+        m13 * m20 * m31 -
+        m10 * m23 * m31 -
+        m11 * m20 * m33 +
+        m10 * m21 * m33) /
+        det,
+      (m03 * m21 * m30 -
+        m01 * m23 * m30 -
+        m03 * m20 * m31 +
+        m00 * m23 * m31 +
+        m01 * m20 * m33 -
+        m00 * m21 * m33) /
+        det,
+      (m01 * m13 * m30 -
+        m03 * m11 * m30 +
+        m03 * m10 * m31 -
+        m00 * m13 * m31 -
+        m01 * m10 * m33 +
+        m00 * m11 * m33) /
+        det,
+      (m03 * m11 * m20 -
+        m01 * m13 * m20 -
+        m03 * m10 * m21 +
+        m00 * m13 * m21 +
+        m01 * m10 * m23 -
+        m00 * m11 * m23) /
+        det,
+      (m12 * m21 * m30 -
+        m11 * m22 * m30 -
+        m12 * m20 * m31 +
+        m10 * m22 * m31 +
+        m11 * m20 * m32 -
+        m10 * m21 * m32) /
+        det,
+      (m01 * m22 * m30 -
+        m02 * m21 * m30 +
+        m02 * m20 * m31 -
+        m00 * m22 * m31 -
+        m01 * m20 * m32 +
+        m00 * m21 * m32) /
+        det,
+      (m02 * m11 * m30 -
+        m01 * m12 * m30 -
+        m02 * m10 * m31 +
+        m00 * m12 * m31 +
+        m01 * m10 * m32 -
+        m00 * m11 * m32) /
+        det,
+      (m01 * m12 * m20 -
+        m02 * m11 * m20 +
+        m02 * m10 * m21 -
+        m00 * m12 * m21 -
+        m01 * m10 * m22 +
+        m00 * m11 * m22) /
+        det,
+    ];
+  },
+
+  /**
+   * Turns columns into rows and rows into columns.
+   */
+  transpose(m: Array<number>): Array<number> {
+    return [
+      m[0],
+      m[4],
+      m[8],
+      m[12],
+      m[1],
+      m[5],
+      m[9],
+      m[13],
+      m[2],
+      m[6],
+      m[10],
+      m[14],
+      m[3],
+      m[7],
+      m[11],
+      m[15],
+    ];
+  },
+
+  /**
+   * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
+   */
+  multiplyVectorByMatrix(v: Array<number>, m: Array<number>): Array<number> {
+    const [vx, vy, vz, vw] = v;
+    return [
+      vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
+      vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
+      vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
+      vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15],
+    ];
+  },
+
+  /**
+   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
+   */
+  v3Length(a: Array<number>): number {
+    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
+  },
+
+  /**
+   * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
+   */
+  v3Normalize(vector: Array<number>, v3Length: number): Array<number> {
+    const im = 1 / (v3Length || MatrixMath.v3Length(vector));
+    return [vector[0] * im, vector[1] * im, vector[2] * im];
+  },
+
+  /**
+   * The dot product of a and b, two 3-element vectors.
+   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
+   */
+  v3Dot(a, b) {
+    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
+  },
+
+  /**
+   * From:
+   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
+   */
+  v3Combine(
+    a: Array<number>,
+    b: Array<number>,
+    aScale: number,
+    bScale: number,
+  ): Array<number> {
+    return [
+      aScale * a[0] + bScale * b[0],
+      aScale * a[1] + bScale * b[1],
+      aScale * a[2] + bScale * b[2],
+    ];
+  },
+
+  /**
+   * From:
+   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
+   */
+  v3Cross(a: Array<number>, b: Array<number>): Array<number> {
+    return [
+      a[1] * b[2] - a[2] * b[1],
+      a[2] * b[0] - a[0] * b[2],
+      a[0] * b[1] - a[1] * b[0],
+    ];
+  },
+
+  /**
+   * Based on:
+   * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/
+   * and:
+   * http://quat.zachbennett.com/
+   *
+   * Note that this rounds degrees to the thousandth of a degree, due to
+   * floating point errors in the creation of the quaternion.
+   *
+   * Also note that this expects the qw value to be last, not first.
+   *
+   * Also, when researching this, remember that:
+   * yaw   === heading            === z-axis
+   * pitch === elevation/attitude === y-axis
+   * roll  === bank               === x-axis
+   */
+  quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {
+    const [qx, qy, qz, qw] = q;
+    const qw2 = qw * qw;
+    const qx2 = qx * qx;
+    const qy2 = qy * qy;
+    const qz2 = qz * qz;
+    const test = qx * qy + qz * qw;
+    const unit = qw2 + qx2 + qy2 + qz2;
+    const conv = 180 / Math.PI;
+
+    if (test > 0.49999 * unit) {
+      return [0, 2 * Math.atan2(qx, qw) * conv, 90];
+    }
+    if (test < -0.49999 * unit) {
+      return [0, -2 * Math.atan2(qx, qw) * conv, -90];
+    }
+
+    return [
+      MatrixMath.roundTo3Places(
+        Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv,
+      ),
+      MatrixMath.roundTo3Places(
+        Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv,
+      ),
+      MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv),
+    ];
+  },
+
+  /**
+   * Based on:
+   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
+   */
+  roundTo3Places(n: number): number {
+    const arr = n.toString().split('e');
+    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
+  },
+
+  /**
+   * Decompose a matrix into separate transform values, for use on platforms
+   * where applying a precomposed matrix is not possible, and transforms are
+   * applied in an inflexible ordering (e.g. Android).
+   *
+   * Implementation based on
+   * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix
+   * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix
+   * which was based on
+   * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
+   */
+  decomposeMatrix(transformMatrix: Array<number>): ?Object {
+    invariant(
+      transformMatrix.length === 16,
+      'Matrix decomposition needs a list of 3d matrix values, received %s',
+      transformMatrix,
+    );
+
+    // output values
+    let perspective = [];
+    const quaternion = [];
+    const scale = [];
+    const skew = [];
+    const translation = [];
+
+    // create normalized, 2d array matrix
+    // and normalized 1d array perspectiveMatrix with redefined 4th column
+    if (!transformMatrix[15]) {
+      return;
+    }
+    const matrix = [];
+    const perspectiveMatrix = [];
+    for (let i = 0; i < 4; i++) {
+      matrix.push([]);
+      for (let j = 0; j < 4; j++) {
+        const value = transformMatrix[i * 4 + j] / transformMatrix[15];
+        matrix[i].push(value);
+        perspectiveMatrix.push(j === 3 ? 0 : value);
+      }
+    }
+    perspectiveMatrix[15] = 1;
+
+    // test for singularity of upper 3x3 part of the perspective matrix
+    if (!MatrixMath.determinant(perspectiveMatrix)) {
+      return;
+    }
+
+    // isolate perspective
+    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
+      // rightHandSide is the right hand side of the equation.
+      // rightHandSide is a vector, or point in 3d space relative to the origin.
+      const rightHandSide = [
+        matrix[0][3],
+        matrix[1][3],
+        matrix[2][3],
+        matrix[3][3],
+      ];
+
+      // Solve the equation by inverting perspectiveMatrix and multiplying
+      // rightHandSide by the inverse.
+      const inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
+      const transposedInversePerspectiveMatrix = MatrixMath.transpose(
+        inversePerspectiveMatrix,
+      );
+      perspective = MatrixMath.multiplyVectorByMatrix(
+        rightHandSide,
+        transposedInversePerspectiveMatrix,
+      );
+    } else {
+      // no perspective
+      perspective[0] = perspective[1] = perspective[2] = 0;
+      perspective[3] = 1;
+    }
+
+    // translation is simple
+    for (let i = 0; i < 3; i++) {
+      translation[i] = matrix[3][i];
+    }
+
+    // Now get scale and shear.
+    // 'row' is a 3 element array of 3 component vectors
+    const row = [];
+    for (let i = 0; i < 3; i++) {
+      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
+    }
+
+    // Compute X scale factor and normalize first row.
+    scale[0] = MatrixMath.v3Length(row[0]);
+    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);
+
+    // Compute XY shear factor and make 2nd row orthogonal to 1st.
+    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
+    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);
+
+    // Now, compute Y scale and normalize 2nd row.
+    scale[1] = MatrixMath.v3Length(row[1]);
+    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
+    skew[0] /= scale[1];
+
+    // Compute XZ and YZ shears, orthogonalize 3rd row
+    skew[1] = MatrixMath.v3Dot(row[0], row[2]);
+    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
+    skew[2] = MatrixMath.v3Dot(row[1], row[2]);
+    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);
+
+    // Next, get Z scale and normalize 3rd row.
+    scale[2] = MatrixMath.v3Length(row[2]);
+    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
+    skew[1] /= scale[2];
+    skew[2] /= scale[2];
+
+    // At this point, the matrix (in rows) is orthonormal.
+    // Check for a coordinate system flip.  If the determinant
+    // is -1, then negate the matrix and the scaling factors.
+    const pdum3 = MatrixMath.v3Cross(row[1], row[2]);
+    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
+      for (let i = 0; i < 3; i++) {
+        scale[i] *= -1;
+        row[i][0] *= -1;
+        row[i][1] *= -1;
+        row[i][2] *= -1;
+      }
+    }
+
+    // Now, get the rotations out
+    quaternion[0] =
+      0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
+    quaternion[1] =
+      0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
+    quaternion[2] =
+      0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
+    quaternion[3] =
+      0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));
+
+    if (row[2][1] > row[1][2]) {
+      quaternion[0] = -quaternion[0];
+    }
+    if (row[0][2] > row[2][0]) {
+      quaternion[1] = -quaternion[1];
+    }
+    if (row[1][0] > row[0][1]) {
+      quaternion[2] = -quaternion[2];
+    }
+
+    // correct for occasional, weird Euler synonyms for 2d rotation
+    let rotationDegrees;
+    if (
+      quaternion[0] < 0.001 &&
+      quaternion[0] >= 0 &&
+      quaternion[1] < 0.001 &&
+      quaternion[1] >= 0
+    ) {
+      // this is a 2d rotation on the z-axis
+      rotationDegrees = [
+        0,
+        0,
+        MatrixMath.roundTo3Places(
+          (Math.atan2(row[0][1], row[0][0]) * 180) / Math.PI,
+        ),
+      ];
+    } else {
+      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(
+        quaternion,
+        matrix,
+        row,
+      );
+    }
+
+    // expose both base data and convenience names
+    return {
+      rotationDegrees,
+      perspective,
+      quaternion,
+      scale,
+      skew,
+      translation,
+
+      rotate: rotationDegrees[2],
+      rotateX: rotationDegrees[0],
+      rotateY: rotationDegrees[1],
+      scaleX: scale[0],
+      scaleY: scale[1],
+      translateX: translation[0],
+      translateY: translation[1],
+    };
+  },
+};
+
+module.exports = MatrixMath;
diff --git a/node_modules/react-native/Libraries/Utilities/NativeAppearance.js b/node_modules/react-native/Libraries/Utilities/NativeAppearance.js
index 786790f..cb8688f 100644
--- a/node_modules/react-native/Libraries/Utilities/NativeAppearance.js
+++ b/node_modules/react-native/Libraries/Utilities/NativeAppearance.js
@@ -26,7 +26,6 @@ export interface Spec extends TurboModule {
   // types.
   /* 'light' | 'dark' */
   +getColorScheme: () => ?string;
-  +setColorScheme?: (colorScheme: string) => void;
 
   // RCTEventEmitter
   +addListener: (eventName: string) => void;
diff --git a/node_modules/react-native/Libraries/Utilities/PixelRatio.js b/node_modules/react-native/Libraries/Utilities/PixelRatio.js
index e69b627..e824de4 100644
--- a/node_modules/react-native/Libraries/Utilities/PixelRatio.js
+++ b/node_modules/react-native/Libraries/Utilities/PixelRatio.js
@@ -10,7 +10,7 @@
 
 'use strict';
 
-const Dimensions = require('./Dimensions').default;
+const Dimensions = require('./Dimensions');
 
 /**
  * PixelRatio class gives access to the device pixel density.
@@ -124,4 +124,4 @@ class PixelRatio {
   static startDetecting() {}
 }
 
-export default PixelRatio;
+module.exports = PixelRatio;
diff --git a/node_modules/react-native/Libraries/Utilities/PixelRatio.js.flow b/node_modules/react-native/Libraries/Utilities/PixelRatio.js.flow
new file mode 100644
index 0000000..b399525
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/PixelRatio.js.flow
@@ -0,0 +1,21 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+'use strict';
+
+declare class PixelRatio {
+  static get(): number;
+  static getFontScale(): number;
+  static getPixelSizeForLayoutSize(layoutSize: number): number;
+  static roundToNearestPixel(layoutSize: number): number;
+  static startDetecting(): void;
+}
+
+module.exports = PixelRatio;
diff --git a/node_modules/react-native/Libraries/Utilities/ReactNativeTestTools.js b/node_modules/react-native/Libraries/Utilities/ReactNativeTestTools.js
index 8671575..5dc2221 100644
--- a/node_modules/react-native/Libraries/Utilities/ReactNativeTestTools.js
+++ b/node_modules/react-native/Libraries/Utilities/ReactNativeTestTools.js
@@ -15,8 +15,8 @@ import type {ReactTestRenderer as ReactTestRendererType} from 'react-test-render
 const Switch = require('../Components/Switch/Switch').default;
 const TextInput = require('../Components/TextInput/TextInput');
 const View = require('../Components/View/View');
+const VirtualizedList = require('../Lists/VirtualizedList').default;
 const Text = require('../Text/Text');
-const {VirtualizedList} = require('@react-native/virtualized-lists');
 const React = require('react');
 const ShallowRenderer = require('react-shallow-renderer');
 const ReactTestRenderer = require('react-test-renderer');
diff --git a/node_modules/react-native/Libraries/Utilities/__mocks__/PixelRatio.js b/node_modules/react-native/Libraries/Utilities/__mocks__/PixelRatio.js
index 8e1e3ab..2a74fb4 100644
--- a/node_modules/react-native/Libraries/Utilities/__mocks__/PixelRatio.js
+++ b/node_modules/react-native/Libraries/Utilities/__mocks__/PixelRatio.js
@@ -22,4 +22,4 @@ const PixelRatio = {
   startDetecting: jest.fn(),
 };
 
-export default PixelRatio;
+module.exports = PixelRatio;
diff --git a/node_modules/react-native/Libraries/Utilities/buildStyleInterpolator.js b/node_modules/react-native/Libraries/Utilities/buildStyleInterpolator.js
new file mode 100644
index 0000000..a557da1
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/buildStyleInterpolator.js
@@ -0,0 +1,209 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ */
+
+'use strict';
+
+const X_DIM = 'x';
+const Y_DIM = 'y';
+const Z_DIM = 'z';
+
+const InitialOperationField = {
+  transformTranslate: [0, 0, 0],
+  transformScale: [1, 1, 1],
+};
+
+const InterpolateMatrix = {
+  transformScale: function (mat, x, y, z) {
+    mat[0] = mat[0] * x;
+    mat[1] = mat[1] * x;
+    mat[2] = mat[2] * x;
+    mat[3] = mat[3] * x;
+    mat[4] = mat[4] * y;
+    mat[5] = mat[5] * y;
+    mat[6] = mat[6] * y;
+    mat[7] = mat[7] * y;
+    mat[8] = mat[8] * z;
+    mat[9] = mat[9] * z;
+    mat[10] = mat[10] * z;
+    mat[11] = mat[11] * z;
+  },
+  transformTranslate: function (mat, x, y, z) {
+    mat[12] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
+    mat[13] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
+    mat[14] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
+    mat[15] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15];
+  },
+};
+
+const computeNextValLinear = function (anim, from, to, value) {
+  const hasRoundRatio = 'round' in anim;
+  const roundRatio = anim.round;
+  let ratio = (value - anim.min) / (anim.max - anim.min);
+  if (!anim.extrapolate) {
+    ratio = ratio > 1 ? 1 : ratio < 0 ? 0 : ratio;
+  }
+  let nextVal = from * (1 - ratio) + to * ratio;
+  if (hasRoundRatio) {
+    nextVal = Math.round(roundRatio * nextVal) / roundRatio;
+  }
+  if (!isFinite(nextVal)) {
+    nextVal = null;
+  }
+  return nextVal;
+};
+
+const computeNextValLinearScalar = function (anim, value) {
+  return computeNextValLinear(anim, anim.from, anim.to, value);
+};
+
+const setNextValAndDetectChange = function (result, name, nextVal, didChange) {
+  if (!didChange) {
+    const prevVal = result[name];
+    result[name] = nextVal;
+    didChange = didChange || nextVal !== prevVal;
+  } else {
+    result[name] = nextVal;
+  }
+  return didChange;
+};
+
+const initIdentity = function (mat) {
+  mat[0] = 1;
+  mat[1] = 0;
+  mat[2] = 0;
+  mat[3] = 0;
+  mat[4] = 0;
+  mat[5] = 1;
+  mat[6] = 0;
+  mat[7] = 0;
+  mat[8] = 0;
+  mat[9] = 0;
+  mat[10] = 1;
+  mat[11] = 0;
+  mat[12] = 0;
+  mat[13] = 0;
+  mat[14] = 0;
+  mat[15] = 1;
+};
+
+const computeNextMatrixOperationField = function (
+  anim,
+  name,
+  dim,
+  index,
+  value,
+) {
+  if (anim.from[dim] !== undefined && anim.to[dim] !== undefined) {
+    return computeNextValLinear(anim, anim.from[dim], anim.to[dim], value);
+  } else {
+    return InitialOperationField[name][index];
+  }
+};
+
+const computeTransform = function (
+  anim,
+  name,
+  value,
+  result,
+  didChange,
+  didMatrix,
+) {
+  const transform =
+    result.transform !== undefined
+      ? result.transform
+      : (result.transform = [{matrix: []}]);
+  const mat = transform[0].matrix;
+  const m0 = mat[0];
+  const m1 = mat[1];
+  const m2 = mat[2];
+  const m3 = mat[3];
+  const m4 = mat[4];
+  const m5 = mat[5];
+  const m6 = mat[6];
+  const m7 = mat[7];
+  const m8 = mat[8];
+  const m9 = mat[9];
+  const m10 = mat[10];
+  const m11 = mat[11];
+  const m12 = mat[12];
+  const m13 = mat[13];
+  const m14 = mat[14];
+  const m15 = mat[15];
+  if (!didMatrix) {
+    initIdentity(mat); // This will be the first transform.
+  }
+  const x = computeNextMatrixOperationField(anim, name, X_DIM, 0, value);
+  const y = computeNextMatrixOperationField(anim, name, Y_DIM, 1, value);
+  const z = computeNextMatrixOperationField(anim, name, Z_DIM, 2, value);
+  InterpolateMatrix[name](mat, x, y, z);
+  if (!didChange) {
+    didChange =
+      m0 !== mat[0] ||
+      m1 !== mat[1] ||
+      m2 !== mat[2] ||
+      m3 !== mat[3] ||
+      m4 !== mat[4] ||
+      m5 !== mat[5] ||
+      m6 !== mat[6] ||
+      m7 !== mat[7] ||
+      m8 !== mat[8] ||
+      m9 !== mat[9] ||
+      m10 !== mat[10] ||
+      m11 !== mat[11] ||
+      m12 !== mat[12] ||
+      m13 !== mat[13] ||
+      m14 !== mat[14] ||
+      m15 !== mat[15];
+  }
+  return didChange;
+};
+
+/**
+ * @param {object} anims Animation configuration by style property name.
+ * @return {function} Function accepting style object, that mutates that style
+ * object and returns a boolean describing if any update was actually applied.
+ */
+const buildStyleInterpolator = function (anims) {
+  function styleInterpolator(result, value) {
+    let didChange = false;
+    let didMatrix = false;
+    for (const name in anims) {
+      const anim = anims[name];
+      if (anim.type === 'linear') {
+        if (name in InterpolateMatrix) {
+          didChange = computeTransform(
+            anim,
+            name,
+            value,
+            result,
+            didChange,
+            didMatrix,
+          );
+          didMatrix = true;
+        } else {
+          const next = computeNextValLinearScalar(anim, value);
+          didChange = setNextValAndDetectChange(result, name, next, didChange);
+        }
+      } else if (anim.type === 'constant') {
+        const next = anim.value;
+        didChange = setNextValAndDetectChange(result, name, next, didChange);
+      } else if (anim.type === 'step') {
+        const next = value >= anim.threshold ? anim.to : anim.from;
+        didChange = setNextValAndDetectChange(result, name, next, didChange);
+      } else if (anim.type === 'identity') {
+        const next = value;
+        didChange = setNextValAndDetectChange(result, name, next, didChange);
+      }
+    }
+    return didChange;
+  }
+  return styleInterpolator;
+};
+
+module.exports = buildStyleInterpolator;
diff --git a/node_modules/react-native/Libraries/Utilities/clamp.js b/node_modules/react-native/Libraries/Utilities/clamp.js
new file mode 100644
index 0000000..7bed615
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/clamp.js
@@ -0,0 +1,23 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict
+ */
+
+'use strict';
+
+function clamp(min: number, value: number, max: number): number {
+  if (value < min) {
+    return min;
+  }
+  if (value > max) {
+    return max;
+  }
+  return value;
+}
+
+module.exports = clamp;
diff --git a/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js b/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js
index 3642b8c..05e29cd 100644
--- a/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js
+++ b/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js
@@ -18,9 +18,7 @@ function codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {
   const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};
 
   options.supportedCommands.forEach(command => {
-    // $FlowFixMe[missing-local-annot]
     commandObj[command] = (ref, ...args) => {
-      // $FlowFixMe[incompatible-call]
       dispatchCommand(ref, command, args);
     };
   });
diff --git a/node_modules/react-native/Libraries/Utilities/IPerformanceLogger.d.ts b/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.d.ts
similarity index 90%
rename from node_modules/react-native/Libraries/Utilities/IPerformanceLogger.d.ts
rename to node_modules/react-native/Libraries/Utilities/createPerformanceLogger.d.ts
index d5ef622..57b590b 100644
--- a/node_modules/react-native/Libraries/Utilities/IPerformanceLogger.d.ts
+++ b/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.d.ts
@@ -9,10 +9,10 @@
 
 export type Timespan = {
   startTime: number;
-  endTime?: number | undefined;
-  totalTime?: number | undefined;
-  startExtras?: Extras | undefined;
-  endExtras?: Extras | undefined;
+  endTime?: number;
+  totalTime?: number;
+  startExtras?: Extras;
+  endExtras?: Extras;
 };
 
 // Extra values should be serializable primitives
diff --git a/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js b/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js
index 8891b4d..6d0efb5 100644
--- a/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js
+++ b/node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js
@@ -8,27 +8,52 @@
  * @format
  */
 
-import type {
-  Extras,
-  ExtraValue,
-  IPerformanceLogger,
-  Timespan,
-} from './IPerformanceLogger';
+const Systrace = require('../Performance/Systrace');
+const infoLog = require('./infoLog');
 
-import * as Systrace from '../Performance/Systrace';
-import Performance from '../WebPerformance/Performance';
-import infoLog from './infoLog';
+export type Timespan = {
+  startTime: number,
+  endTime?: number,
+  totalTime?: number,
+  startExtras?: Extras,
+  endExtras?: Extras,
+};
 
-const _cookies: {[key: string]: number, ...} = {};
+// Extra values should be serializable primitives
+export type ExtraValue = number | string | boolean;
 
-const PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;
+export type Extras = {[key: string]: ExtraValue};
+
+export interface IPerformanceLogger {
+  addTimespan(
+    key: string,
+    startTime: number,
+    endTime: number,
+    startExtras?: Extras,
+    endExtras?: Extras,
+  ): void;
+  append(logger: IPerformanceLogger): void;
+  clear(): void;
+  clearCompleted(): void;
+  close(): void;
+  currentTimestamp(): number;
+  getExtras(): $ReadOnly<{[key: string]: ?ExtraValue, ...}>;
+  getPoints(): $ReadOnly<{[key: string]: ?number, ...}>;
+  getPointExtras(): $ReadOnly<{[key: string]: ?Extras, ...}>;
+  getTimespans(): $ReadOnly<{[key: string]: ?Timespan, ...}>;
+  hasTimespan(key: string): boolean;
+  isClosed(): boolean;
+  logEverything(): void;
+  markPoint(key: string, timestamp?: number, extras?: Extras): void;
+  removeExtra(key: string): ?ExtraValue;
+  setExtra(key: string, value: ExtraValue): void;
+  startTimespan(key: string, timestamp?: number, extras?: Extras): void;
+  stopTimespan(key: string, timestamp?: number, extras?: Extras): void;
+}
 
-// This is the prefix for optional logging points/timespans as marks/measures via Performance API,
-// used to separate these internally from other marks/measures
-const WEB_PERFORMANCE_PREFIX = 'global_perf_';
+const _cookies: {[key: string]: number, ...} = {};
 
-// TODO: Remove once T143070419 is done
-const performance = new Performance();
+const PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;
 
 export const getCurrentTimestamp: () => number =
   global.nativeQPLTimestamp ?? global.performance.now.bind(global.performance);
@@ -39,11 +64,6 @@ class PerformanceLogger implements IPerformanceLogger {
   _points: {[key: string]: ?number} = {};
   _pointExtras: {[key: string]: ?Extras, ...} = {};
   _closed: boolean = false;
-  _isLoggingForWebPerformance: boolean = false;
-
-  constructor(isLoggingForWebPerformance?: boolean) {
-    this._isLoggingForWebPerformance = isLoggingForWebPerformance === true;
-  }
 
   addTimespan(
     key: string,
@@ -75,13 +95,6 @@ class PerformanceLogger implements IPerformanceLogger {
       startExtras,
       endExtras,
     };
-
-    if (this._isLoggingForWebPerformance) {
-      performance.measure(`${WEB_PERFORMANCE_PREFIX}_${key}`, {
-        start: startTime,
-        end: endTime,
-      });
-    }
   }
 
   append(performanceLogger: IPerformanceLogger) {
@@ -196,12 +209,6 @@ class PerformanceLogger implements IPerformanceLogger {
     if (extras) {
       this._pointExtras[key] = extras;
     }
-
-    if (this._isLoggingForWebPerformance) {
-      performance.mark(`${WEB_PERFORMANCE_PREFIX}_${key}`, {
-        startTime: timestamp,
-      });
-    }
   }
 
   removeExtra(key: string): ?ExtraValue {
@@ -263,12 +270,6 @@ class PerformanceLogger implements IPerformanceLogger {
     if (PRINT_TO_CONSOLE) {
       infoLog('PerformanceLogger.js', 'start: ' + key);
     }
-
-    if (this._isLoggingForWebPerformance) {
-      performance.mark(`${WEB_PERFORMANCE_PREFIX}_timespan_start_${key}`, {
-        startTime: timestamp,
-      });
-    }
   }
 
   stopTimespan(
@@ -314,27 +315,14 @@ class PerformanceLogger implements IPerformanceLogger {
       Systrace.endAsyncEvent(key, _cookies[key]);
       delete _cookies[key];
     }
-
-    if (this._isLoggingForWebPerformance) {
-      performance.measure(`${WEB_PERFORMANCE_PREFIX}_${key}`, {
-        start: `${WEB_PERFORMANCE_PREFIX}_timespan_start_${key}`,
-        end: timestamp,
-      });
-    }
   }
 }
 
-// Re-exporting for backwards compatibility with all the clients that
-// may still import it from this module.
-export type {Extras, ExtraValue, IPerformanceLogger, Timespan};
-
 /**
  * This function creates performance loggers that can be used to collect and log
  * various performance data such as timespans, points and extras.
  * The loggers need to have minimal overhead since they're used in production.
  */
-export default function createPerformanceLogger(
-  isLoggingForWebPerformance?: boolean,
-): IPerformanceLogger {
-  return new PerformanceLogger(isLoggingForWebPerformance);
+export default function createPerformanceLogger(): IPerformanceLogger {
+  return new PerformanceLogger();
 }
diff --git a/node_modules/react-native/Libraries/Utilities/deprecatedPropType.js b/node_modules/react-native/Libraries/Utilities/deprecatedPropType.js
new file mode 100644
index 0000000..256fe5b
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/deprecatedPropType.js
@@ -0,0 +1,36 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict-local
+ */
+
+import UIManager from '../ReactNative/UIManager';
+
+/**
+ * Adds a deprecation warning when the prop is used.
+ */
+function deprecatedPropType(
+  propType: ReactPropsCheckType,
+  explanation: string,
+): ReactPropsCheckType {
+  return function validate(props, propName, componentName, ...rest) {
+    // Don't warn for native components.
+    if (
+      global.RN$Bridgeless !== true &&
+      !UIManager.hasViewManagerConfig(componentName) &&
+      props[propName] !== undefined
+    ) {
+      console.warn(
+        `\`${propName}\` supplied to \`${componentName}\` has been deprecated. ${explanation}`,
+      );
+    }
+
+    return propType(props, propName, componentName, ...rest);
+  };
+}
+
+module.exports = deprecatedPropType;
diff --git a/node_modules/react-native/Libraries/Utilities/groupByEveryN.js b/node_modules/react-native/Libraries/Utilities/groupByEveryN.js
new file mode 100644
index 0000000..0ef4c12
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/groupByEveryN.js
@@ -0,0 +1,51 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow strict
+ */
+
+/**
+ * Useful method to split an array into groups of the same number of elements.
+ * You can use it to generate grids, rows, pages...
+ *
+ * If the input length is not a multiple of the count, it'll fill the last
+ * array with null so you can display a placeholder.
+ *
+ * Example:
+ *   groupByEveryN([1, 2, 3, 4, 5], 3)
+ *    => [[1, 2, 3], [4, 5, null]]
+ *
+ *   groupByEveryN([1, 2, 3], 2).map(elems => {
+ *     return <Row>{elems.map(elem => <Elem>{elem}</Elem>)}</Row>;
+ *   })
+ */
+
+'use strict';
+
+function groupByEveryN<T>(array: Array<T>, n: number): Array<Array<?T>> {
+  const result = [];
+  let temp: Array<?T> = [];
+
+  for (let i = 0; i < array.length; ++i) {
+    if (i > 0 && i % n === 0) {
+      result.push(temp);
+      temp = [];
+    }
+    temp.push(array[i]);
+  }
+
+  if (temp.length > 0) {
+    while (temp.length !== n) {
+      temp.push(null);
+    }
+    result.push(temp);
+  }
+
+  return result;
+}
+
+module.exports = groupByEveryN;
diff --git a/node_modules/react-native/Libraries/Utilities/mergeIntoFast.js b/node_modules/react-native/Libraries/Utilities/mergeIntoFast.js
new file mode 100644
index 0000000..2881aae
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/mergeIntoFast.js
@@ -0,0 +1,26 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow
+ */
+
+'use strict';
+
+/**
+ * Faster version of `mergeInto` that doesn't check its arguments and
+ * also copies over prototype inherited properties.
+ *
+ * @param {object} one Object to assign to.
+ * @param {object} two Object to assign from.
+ */
+const mergeIntoFast = function (one: Object, two: Object): void {
+  for (const keyTwo in two) {
+    one[keyTwo] = two[keyTwo];
+  }
+};
+
+module.exports = mergeIntoFast;
diff --git a/node_modules/react-native/Libraries/Utilities/setAndForwardRef.js b/node_modules/react-native/Libraries/Utilities/setAndForwardRef.js
new file mode 100644
index 0000000..e81ebdd
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/setAndForwardRef.js
@@ -0,0 +1,71 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow
+ */
+
+'use strict';
+
+import type {ElementRef, Ref} from 'react';
+
+type Args = $ReadOnly<{|
+  getForwardedRef: () => ?Ref<any>,
+  setLocalRef: (ref: ElementRef<any>) => mixed,
+|}>;
+
+/**
+ * This is a helper function for when a component needs to be able to forward a ref
+ * to a child component, but still needs to have access to that component as part of
+ * its implementation.
+ *
+ * Its main use case is in wrappers for native components.
+ *
+ * Usage:
+ *
+ *   class MyView extends React.Component {
+ *     _nativeRef = null;
+ *
+ *     _setNativeRef = setAndForwardRef({
+ *       getForwardedRef: () => this.props.forwardedRef,
+ *       setLocalRef: ref => {
+ *         this._nativeRef = ref;
+ *       },
+ *     });
+ *
+ *     render() {
+ *       return <View ref={this._setNativeRef} />;
+ *     }
+ *   }
+ *
+ *   const MyViewWithRef = React.forwardRef((props, ref) => (
+ *     <MyView {...props} forwardedRef={ref} />
+ *   ));
+ *
+ *   module.exports = MyViewWithRef;
+ */
+
+function setAndForwardRef({
+  getForwardedRef,
+  setLocalRef,
+}: Args): (ref: ElementRef<any>) => void {
+  return function forwardRef(ref: ElementRef<any>) {
+    const forwardedRef = getForwardedRef();
+
+    setLocalRef(ref);
+
+    // Forward to user ref prop (if one has been specified)
+    if (typeof forwardedRef === 'function') {
+      // Handle function-based refs. String-based refs are handled as functions.
+      forwardedRef(ref);
+    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
+      // Handle createRef-based refs
+      forwardedRef.current = ref;
+    }
+  };
+}
+
+module.exports = setAndForwardRef;
diff --git a/node_modules/react-native/Libraries/Utilities/stringifySafe.js b/node_modules/react-native/Libraries/Utilities/stringifySafe.js
index 042fe0b..a61716a 100644
--- a/node_modules/react-native/Libraries/Utilities/stringifySafe.js
+++ b/node_modules/react-native/Libraries/Utilities/stringifySafe.js
@@ -26,7 +26,9 @@ export function createStringifySafeWithLimits(limits: {|
     maxArrayLimit = Number.POSITIVE_INFINITY,
     maxObjectKeysLimit = Number.POSITIVE_INFINITY,
   } = limits;
-  const stack: Array<mixed> = [];
+  const stack: Array<
+    string | {+[string]: mixed} | {'...(truncated keys)...': number},
+  > = [];
   /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by
    * Flow's LTI update could not be added via codemod */
   function replacer(key: string, value: mixed): mixed {
@@ -45,7 +47,10 @@ export function createStringifySafeWithLimits(limits: {|
       return value;
     }
 
-    let retval: mixed = value;
+    let retval:
+      | string
+      | {+[string]: mixed}
+      | $TEMPORARY$object<{'...(truncated keys)...': number}> = value;
     if (Array.isArray(value)) {
       if (stack.length >= maxDepth) {
         retval = `[ ... array with ${value.length} values ... ]`;
diff --git a/node_modules/react-native/Libraries/Utilities/truncate.js b/node_modules/react-native/Libraries/Utilities/truncate.js
new file mode 100644
index 0000000..97e60d4
--- /dev/null
+++ b/node_modules/react-native/Libraries/Utilities/truncate.js
@@ -0,0 +1,51 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @format
+ * @flow
+ */
+
+'use strict';
+
+type truncateOptions = {
+  breakOnWords: boolean,
+  minDelta: number,
+  elipsis: string,
+  ...
+};
+
+const defaultOptions = {
+  breakOnWords: true,
+  minDelta: 10, // Prevents truncating a tiny bit off the end
+  elipsis: '...',
+};
+
+// maxChars (including ellipsis)
+const truncate = function (
+  str: ?string,
+  maxChars: number,
+  options?: truncateOptions,
+): ?string {
+  options = {...defaultOptions, ...options};
+  if (
+    str &&
+    str.length &&
+    str.length - options.minDelta + options.elipsis.length >= maxChars
+  ) {
+    // If the slice is happening in the middle of a wide char, add one more char
+    const extraChar =
+      str.charCodeAt(maxChars - options.elipsis.length) > 255 ? 1 : 0;
+    str = str.slice(0, maxChars - options.elipsis.length + 1 + extraChar);
+    if (options.breakOnWords) {
+      const ii = Math.max(str.lastIndexOf(' '), str.lastIndexOf('\n'));
+      str = str.slice(0, ii);
+    }
+    str = str.trim() + options.elipsis;
+  }
+  return str;
+};
+
+module.exports = truncate;
diff --git a/node_modules/react-native/Libraries/Utilities/useWindowDimensions.js b/node_modules/react-native/Libraries/Utilities/useWindowDimensions.js
index 95a145f..94b68f9 100644
--- a/node_modules/react-native/Libraries/Utilities/useWindowDimensions.js
+++ b/node_modules/react-native/Libraries/Utilities/useWindowDimensions.js
@@ -22,9 +22,9 @@ export default function useWindowDimensions():
   useEffect(() => {
     function handleChange({
       window,
-    }: {
-      window: DisplayMetrics | DisplayMetricsAndroid,
-    }) {
+    }:
+      | $FlowFixMe
+      | $TEMPORARY$object<{window: DisplayMetrics | DisplayMetricsAndroid}>) {
       if (
         dimensions.width !== window.width ||
         dimensions.height !== window.height ||
diff --git a/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec b/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec
index c0f2211..28dcce4 100644
--- a/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec
+++ b/node_modules/react-native/Libraries/Vibration/React-RCTVibration.podspec
@@ -19,21 +19,6 @@ end
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 
-header_search_paths = [
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers/build/generated/ios\"",
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers\""
-  ])
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTVibration"
   s.version                = version
@@ -41,7 +26,7 @@ Pod::Spec.new do |s|
   s.homepage               = "https://reactnative.dev/"
   s.documentation_url      = "https://reactnative.dev/docs/vibration"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -51,7 +36,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
   s.frameworks             = "AudioToolbox"
 
diff --git a/node_modules/react-native/Libraries/WebPerformance/EventCounts.js b/node_modules/react-native/Libraries/WebPerformance/EventCounts.js
deleted file mode 100644
index 27ece85..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/EventCounts.js
+++ /dev/null
@@ -1,78 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-import NativePerformanceObserver from './NativePerformanceObserver';
-import {warnNoNativePerformanceObserver} from './PerformanceObserver';
-
-type EventCountsForEachCallbackType =
-  | (() => void)
-  | ((value: number) => void)
-  | ((value: number, key: string) => void)
-  | ((value: number, key: string, map: Map<string, number>) => void);
-
-let cachedEventCounts: ?Map<string, number>;
-
-function getCachedEventCounts(): Map<string, number> {
-  if (cachedEventCounts) {
-    return cachedEventCounts;
-  }
-  if (!NativePerformanceObserver) {
-    warnNoNativePerformanceObserver();
-    return new Map();
-  }
-
-  cachedEventCounts = new Map<string, number>(
-    NativePerformanceObserver.getEventCounts(),
-  );
-  // $FlowFixMe[incompatible-call]
-  global.queueMicrotask(() => {
-    // To be consistent with the calls to the API from the same task,
-    // but also not to refetch the data from native too often,
-    // schedule to invalidate the cache later,
-    // after the current task is guaranteed to have finished.
-    cachedEventCounts = null;
-  });
-  return cachedEventCounts ?? new Map();
-}
-/**
- * Implementation of the EventCounts Web Performance API
- * corresponding to the standard in
- * https://www.w3.org/TR/event-timing/#eventcounts
- */
-export default class EventCounts {
-  // flowlint unsafe-getters-setters:off
-  get size(): number {
-    return getCachedEventCounts().size;
-  }
-
-  entries(): Iterator<[string, number]> {
-    return getCachedEventCounts().entries();
-  }
-
-  forEach(callback: EventCountsForEachCallbackType): void {
-    return getCachedEventCounts().forEach(callback);
-  }
-
-  get(key: string): ?number {
-    return getCachedEventCounts().get(key);
-  }
-
-  has(key: string): boolean {
-    return getCachedEventCounts().has(key);
-  }
-
-  keys(): Iterator<string> {
-    return getCachedEventCounts().keys();
-  }
-
-  values(): Iterator<number> {
-    return getCachedEventCounts().values();
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/MemoryInfo.js b/node_modules/react-native/Libraries/WebPerformance/MemoryInfo.js
deleted file mode 100644
index 5a5abf0..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/MemoryInfo.js
+++ /dev/null
@@ -1,54 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- * @oncall react_native
- */
-
-// flowlint unsafe-getters-setters:off
-
-export type MemoryInfoLike = {
-  jsHeapSizeLimit: ?number,
-  totalJSHeapSize: ?number,
-  usedJSHeapSize: ?number,
-};
-
-// Read-only object with JS memory information. This is returned by the performance.memory API.
-export default class MemoryInfo {
-  _jsHeapSizeLimit: ?number;
-  _totalJSHeapSize: ?number;
-  _usedJSHeapSize: ?number;
-
-  constructor(memoryInfo: ?MemoryInfoLike) {
-    if (memoryInfo != null) {
-      this._jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;
-      this._totalJSHeapSize = memoryInfo.totalJSHeapSize;
-      this._usedJSHeapSize = memoryInfo.usedJSHeapSize;
-    }
-  }
-
-  /**
-   * The maximum size of the heap, in bytes, that is available to the context
-   */
-  get jsHeapSizeLimit(): ?number {
-    return this._jsHeapSizeLimit;
-  }
-
-  /**
-   * The total allocated heap size, in bytes
-   */
-  get totalJSHeapSize(): ?number {
-    return this._totalJSHeapSize;
-  }
-
-  /**
-   * The currently active segment of JS heap, in bytes.
-   */
-  get usedJSHeapSize(): ?number {
-    return this._usedJSHeapSize;
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/NativePerformance.cpp b/node_modules/react-native/Libraries/WebPerformance/NativePerformance.cpp
deleted file mode 100644
index d08810d..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/NativePerformance.cpp
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#include <memory>
-
-#include <cxxreact/ReactMarker.h>
-#include <jsi/instrumentation.h>
-#include "NativePerformance.h"
-#include "PerformanceEntryReporter.h"
-
-#include "Plugins.h"
-
-std::shared_ptr<facebook::react::TurboModule> NativePerformanceModuleProvider(
-    std::shared_ptr<facebook::react::CallInvoker> jsInvoker) {
-  return std::make_shared<facebook::react::NativePerformance>(
-      std::move(jsInvoker));
-}
-
-namespace facebook::react {
-
-NativePerformance::NativePerformance(std::shared_ptr<CallInvoker> jsInvoker)
-    : NativePerformanceCxxSpec(std::move(jsInvoker)) {}
-
-void NativePerformance::mark(
-    jsi::Runtime &rt,
-    std::string name,
-    double startTime,
-    double duration) {
-  PerformanceEntryReporter::getInstance().mark(name, startTime, duration);
-}
-
-void NativePerformance::measure(
-    jsi::Runtime &rt,
-    std::string name,
-    double startTime,
-    double endTime,
-    std::optional<double> duration,
-    std::optional<std::string> startMark,
-    std::optional<std::string> endMark) {
-  PerformanceEntryReporter::getInstance().measure(
-      name, startTime, endTime, duration, startMark, endMark);
-}
-
-std::unordered_map<std::string, double> NativePerformance::getSimpleMemoryInfo(
-    jsi::Runtime &rt) {
-  auto heapInfo = rt.instrumentation().getHeapInfo(false);
-  std::unordered_map<std::string, double> heapInfoToJs;
-  for (auto &entry : heapInfo) {
-    heapInfoToJs[entry.first] = static_cast<double>(entry.second);
-  }
-  return heapInfoToJs;
-}
-
-ReactNativeStartupTiming NativePerformance::getReactNativeStartupTiming(
-    jsi::Runtime &rt) {
-  ReactNativeStartupTiming result = {0, 0, 0, 0};
-
-  ReactMarker::StartupLogger &startupLogger =
-      ReactMarker::StartupLogger::getInstance();
-  result.startTime = startupLogger.getAppStartTime();
-  result.executeJavaScriptBundleEntryPointStart =
-      startupLogger.getRunJSBundleStartTime();
-  result.executeJavaScriptBundleEntryPointEnd =
-      startupLogger.getRunJSBundleEndTime();
-  result.endTime = startupLogger.getRunJSBundleEndTime();
-
-  return result;
-}
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/Libraries/WebPerformance/NativePerformance.h b/node_modules/react-native/Libraries/WebPerformance/NativePerformance.h
deleted file mode 100644
index 4b334d7..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/NativePerformance.h
+++ /dev/null
@@ -1,76 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <FBReactNativeSpec/FBReactNativeSpecJSI.h>
-#include <memory>
-#include <string>
-
-#include "NativePerformanceObserver.h"
-
-namespace facebook::react {
-class PerformanceEntryReporter;
-
-#pragma mark - Structs
-
-using ReactNativeStartupTiming =
-    NativePerformanceCxxBaseReactNativeStartupTiming<
-        int32_t, // Start time of the RN app startup process
-        int32_t, // End time of the RN app startup process
-        int32_t, // Start time that RN app execute the JS bundle
-        int32_t // End time that RN app execute the JS bundle
-        >;
-
-template <>
-struct Bridging<ReactNativeStartupTiming>
-    : NativePerformanceCxxBaseReactNativeStartupTimingBridging<
-          int32_t,
-          int32_t,
-          int32_t,
-          int32_t> {};
-
-#pragma mark - implementation
-
-class NativePerformance : public NativePerformanceCxxSpec<NativePerformance>,
-                          std::enable_shared_from_this<NativePerformance> {
- public:
-  NativePerformance(std::shared_ptr<CallInvoker> jsInvoker);
-
-  void
-  mark(jsi::Runtime &rt, std::string name, double startTime, double duration);
-
-  void measure(
-      jsi::Runtime &rt,
-      std::string name,
-      double startTime,
-      double endTime,
-      std::optional<double> duration,
-      std::optional<std::string> startMark,
-      std::optional<std::string> endMark);
-
-  // To align with web API, we will make sure to return three properties
-  // (jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize) + anything needed from
-  // the VM side.
-  // `jsHeapSizeLimit`: The maximum size of the heap, in bytes, that
-  // is available to the context.
-  // `totalJSHeapSize`: The total allocated heap size, in bytes.
-  // `usedJSHeapSize`: The currently active segment of JS heap, in
-  // bytes.
-  //
-  // Note that we use int64_t here and it's ok to lose precision in JS doubles
-  // for heap size information, as double's 2^53 sig bytes is large enough.
-  std::unordered_map<std::string, double> getSimpleMemoryInfo(jsi::Runtime &rt);
-
-  // Collect and return the RN app startup timing information for performance
-  // tracking.
-  ReactNativeStartupTiming getReactNativeStartupTiming(jsi::Runtime &rt);
-
- private:
-};
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/Libraries/WebPerformance/NativePerformance.js b/node_modules/react-native/Libraries/WebPerformance/NativePerformance.js
deleted file mode 100644
index 9a34b23..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/NativePerformance.js
+++ /dev/null
@@ -1,38 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-import type {TurboModule} from '../TurboModule/RCTExport';
-
-import * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';
-
-export type NativeMemoryInfo = {[key: string]: number};
-
-export type ReactNativeStartupTiming = {|
-  startTime: number,
-  endTime: number,
-  executeJavaScriptBundleEntryPointStart: number,
-  executeJavaScriptBundleEntryPointEnd: number,
-|};
-
-export interface Spec extends TurboModule {
-  +mark: (name: string, startTime: number, duration: number) => void;
-  +measure: (
-    name: string,
-    startTime: number,
-    endTime: number,
-    duration?: number,
-    startMark?: string,
-    endMark?: string,
-  ) => void;
-  +getSimpleMemoryInfo: () => NativeMemoryInfo;
-  +getReactNativeStartupTiming: () => ReactNativeStartupTiming;
-}
-
-export default (TurboModuleRegistry.get<Spec>('NativePerformanceCxx'): ?Spec);
diff --git a/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.cpp b/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.cpp
index b372551..32ab293 100644
--- a/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.cpp
+++ b/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.cpp
@@ -5,96 +5,38 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#include <memory>
-
 #include "NativePerformanceObserver.h"
-#include "PerformanceEntryReporter.h"
-
-#include "Plugins.h"
-
-std::shared_ptr<facebook::react::TurboModule>
-NativePerformanceObserverModuleProvider(
-    std::shared_ptr<facebook::react::CallInvoker> jsInvoker) {
-  return std::make_shared<facebook::react::NativePerformanceObserver>(
-      std::move(jsInvoker));
-}
+#include <glog/logging.h>
 
 namespace facebook::react {
 
 NativePerformanceObserver::NativePerformanceObserver(
     std::shared_ptr<CallInvoker> jsInvoker)
-    : NativePerformanceObserverCxxSpec(std::move(jsInvoker)) {
-  setEventLogger(&PerformanceEntryReporter::getInstance());
-}
-
-NativePerformanceObserver::~NativePerformanceObserver() {
-  setEventLogger(nullptr);
-}
+    : NativePerformanceObserverCxxSpec(std::move(jsInvoker)) {}
 
 void NativePerformanceObserver::startReporting(
     jsi::Runtime &rt,
-    int32_t entryType) {
-  PerformanceEntryReporter::getInstance().startReporting(
-      static_cast<PerformanceEntryType>(entryType));
+    std::string entryType) {
+  LOG(INFO) << "Started reporting perf entry type: " << entryType;
 }
 
 void NativePerformanceObserver::stopReporting(
     jsi::Runtime &rt,
-    int32_t entryType) {
-  PerformanceEntryReporter::getInstance().stopReporting(
-      static_cast<PerformanceEntryType>(entryType));
+    std::string entryType) {
+  LOG(INFO) << "Stopped reporting perf entry type: " << entryType;
 }
 
-GetPendingEntriesResult NativePerformanceObserver::popPendingEntries(
+std::vector<RawPerformanceEntry> NativePerformanceObserver::getPendingEntries(
     jsi::Runtime &rt) {
-  return PerformanceEntryReporter::getInstance().popPendingEntries();
+  return std::vector<RawPerformanceEntry>{};
 }
 
 void NativePerformanceObserver::setOnPerformanceEntryCallback(
     jsi::Runtime &rt,
     std::optional<AsyncCallback<>> callback) {
-  PerformanceEntryReporter::getInstance().setReportingCallback(callback);
-}
-
-void NativePerformanceObserver::logRawEntry(
-    jsi::Runtime &rt,
-    RawPerformanceEntry entry) {
-  PerformanceEntryReporter::getInstance().logEntry(entry);
-}
-
-std::vector<std::pair<std::string, uint32_t>>
-NativePerformanceObserver::getEventCounts(jsi::Runtime &rt) {
-  const auto &eventCounts =
-      PerformanceEntryReporter::getInstance().getEventCounts();
-  return std::vector<std::pair<std::string, uint32_t>>(
-      eventCounts.begin(), eventCounts.end());
-}
-
-void NativePerformanceObserver::setDurationThreshold(
-    jsi::Runtime &rt,
-    int32_t entryType,
-    double durationThreshold) {
-  PerformanceEntryReporter::getInstance().setDurationThreshold(
-      static_cast<PerformanceEntryType>(entryType), durationThreshold);
-}
-
-void NativePerformanceObserver::clearEntries(
-    jsi::Runtime &rt,
-    int32_t entryType,
-    std::optional<std::string> entryName) {
-  PerformanceEntryReporter::getInstance().clearEntries(
-      static_cast<PerformanceEntryType>(entryType),
-      entryName ? entryName->c_str() : nullptr);
-}
-
-std::vector<RawPerformanceEntry> NativePerformanceObserver::getEntries(
-    jsi::Runtime &rt,
-    std::optional<int32_t> entryType,
-    std::optional<std::string> entryName) {
-  return PerformanceEntryReporter::getInstance().getEntries(
-      entryType ? static_cast<PerformanceEntryType>(*entryType)
-                : PerformanceEntryType::UNDEFINED,
-      entryName ? entryName->c_str() : nullptr);
+  callback_ = callback;
+  LOG(INFO) << "setOnPerformanceEntryCallback: "
+            << (callback ? "non-empty" : "empty");
 }
 
 } // namespace facebook::react
diff --git a/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.h b/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.h
index 7f1e4d9..3a3250d 100644
--- a/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.h
+++ b/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.h
@@ -9,12 +9,12 @@
 
 #include <FBReactNativeSpec/FBReactNativeSpecJSI.h>
 #include <functional>
+#include <memory>
 #include <optional>
 #include <string>
 #include <vector>
 
 namespace facebook::react {
-class PerformanceEntryReporter;
 
 #pragma mark - Structs
 
@@ -26,7 +26,7 @@ using RawPerformanceEntry = NativePerformanceObserverCxxBaseRawPerformanceEntry<
     // For "event" entries only:
     std::optional<double>,
     std::optional<double>,
-    std::optional<uint32_t>>;
+    std::optional<double>>;
 
 template <>
 struct Bridging<RawPerformanceEntry>
@@ -37,18 +37,7 @@ struct Bridging<RawPerformanceEntry>
           double,
           std::optional<double>,
           std::optional<double>,
-          std::optional<uint32_t>> {};
-
-using GetPendingEntriesResult =
-    NativePerformanceObserverCxxBaseGetPendingEntriesResult<
-        std::vector<RawPerformanceEntry>,
-        uint32_t>;
-
-template <>
-struct Bridging<GetPendingEntriesResult>
-    : NativePerformanceObserverCxxBaseGetPendingEntriesResultBridging<
-          std::vector<RawPerformanceEntry>,
-          uint32_t> {};
+          std::optional<double>> {};
 
 #pragma mark - implementation
 
@@ -57,39 +46,19 @@ class NativePerformanceObserver
       std::enable_shared_from_this<NativePerformanceObserver> {
  public:
   NativePerformanceObserver(std::shared_ptr<CallInvoker> jsInvoker);
-  ~NativePerformanceObserver();
 
-  void startReporting(jsi::Runtime &rt, int32_t entryType);
+  void startReporting(jsi::Runtime &rt, std::string entryType);
 
-  void stopReporting(jsi::Runtime &rt, int32_t entryType);
+  void stopReporting(jsi::Runtime &rt, std::string entryType);
 
-  GetPendingEntriesResult popPendingEntries(jsi::Runtime &rt);
+  std::vector<RawPerformanceEntry> getPendingEntries(jsi::Runtime &rt);
 
   void setOnPerformanceEntryCallback(
       jsi::Runtime &rt,
       std::optional<AsyncCallback<>> callback);
 
-  void logRawEntry(jsi::Runtime &rt, RawPerformanceEntry entry);
-
-  std::vector<std::pair<std::string, uint32_t>> getEventCounts(
-      jsi::Runtime &rt);
-
-  void setDurationThreshold(
-      jsi::Runtime &rt,
-      int32_t entryType,
-      double durationThreshold);
-
-  void clearEntries(
-      jsi::Runtime &rt,
-      int32_t entryType,
-      std::optional<std::string> entryName);
-
-  std::vector<RawPerformanceEntry> getEntries(
-      jsi::Runtime &rt,
-      std::optional<int32_t> entryType,
-      std::optional<std::string> entryName);
-
  private:
+  std::optional<AsyncCallback<>> callback_;
 };
 
 } // namespace facebook::react
diff --git a/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.js b/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.js
index f7a9031..b3d6fde 100644
--- a/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.js
+++ b/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.js
@@ -12,6 +12,10 @@ import type {TurboModule} from '../TurboModule/RCTExport';
 
 import * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';
 
+export const RawPerformanceEntryTypeValues = {
+  UNDEFINED: 0,
+};
+
 export type RawPerformanceEntryType = number;
 
 export type RawPerformanceEntry = {|
@@ -25,30 +29,11 @@ export type RawPerformanceEntry = {|
   interactionId?: number,
 |};
 
-export type GetPendingEntriesResult = {|
-  entries: $ReadOnlyArray<RawPerformanceEntry>,
-  droppedEntriesCount: number,
-|};
-
 export interface Spec extends TurboModule {
-  +startReporting: (entryType: RawPerformanceEntryType) => void;
-  +stopReporting: (entryType: RawPerformanceEntryType) => void;
-  +popPendingEntries: () => GetPendingEntriesResult;
+  +startReporting: (entryType: string) => void;
+  +stopReporting: (entryType: string) => void;
+  +getPendingEntries: () => $ReadOnlyArray<RawPerformanceEntry>;
   +setOnPerformanceEntryCallback: (callback?: () => void) => void;
-  +logRawEntry: (entry: RawPerformanceEntry) => void;
-  +getEventCounts: () => $ReadOnlyArray<[string, number]>;
-  +setDurationThreshold: (
-    entryType: RawPerformanceEntryType,
-    durationThreshold: number,
-  ) => void;
-  +clearEntries: (
-    entryType: RawPerformanceEntryType,
-    entryName?: string,
-  ) => void;
-  +getEntries: (
-    entryType?: RawPerformanceEntryType,
-    entryName?: string,
-  ) => $ReadOnlyArray<RawPerformanceEntry>;
 }
 
 export default (TurboModuleRegistry.get<Spec>(
diff --git a/node_modules/react-native/Libraries/WebPerformance/Performance.js b/node_modules/react-native/Libraries/WebPerformance/Performance.js
deleted file mode 100644
index 384d5d3..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/Performance.js
+++ /dev/null
@@ -1,312 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type {HighResTimeStamp, PerformanceEntryType} from './PerformanceEntry';
-import type {PerformanceEntryList} from './PerformanceObserver';
-
-import warnOnce from '../Utilities/warnOnce';
-import EventCounts from './EventCounts';
-import MemoryInfo from './MemoryInfo';
-import NativePerformance from './NativePerformance';
-import NativePerformanceObserver from './NativePerformanceObserver';
-import {PerformanceEntry} from './PerformanceEntry';
-import {warnNoNativePerformanceObserver} from './PerformanceObserver';
-import {
-  performanceEntryTypeToRaw,
-  rawToPerformanceEntry,
-} from './RawPerformanceEntry';
-import {RawPerformanceEntryTypeValues} from './RawPerformanceEntry';
-import ReactNativeStartupTiming from './ReactNativeStartupTiming';
-
-type DetailType = mixed;
-
-export type PerformanceMarkOptions = {
-  detail?: DetailType,
-  startTime?: HighResTimeStamp,
-};
-
-declare var global: {
-  // This value is defined directly via JSI, if available.
-  +nativePerformanceNow?: ?() => number,
-};
-
-const getCurrentTimeStamp: () => HighResTimeStamp = global.nativePerformanceNow
-  ? global.nativePerformanceNow
-  : () => Date.now();
-
-export class PerformanceMark extends PerformanceEntry {
-  detail: DetailType;
-
-  constructor(markName: string, markOptions?: PerformanceMarkOptions) {
-    super({
-      name: markName,
-      entryType: 'mark',
-      startTime: markOptions?.startTime ?? getCurrentTimeStamp(),
-      duration: 0,
-    });
-
-    if (markOptions) {
-      this.detail = markOptions.detail;
-    }
-  }
-}
-
-export type TimeStampOrName = HighResTimeStamp | string;
-
-export type PerformanceMeasureOptions = {
-  detail?: DetailType,
-  start?: TimeStampOrName,
-  end?: TimeStampOrName,
-  duration?: HighResTimeStamp,
-};
-
-export class PerformanceMeasure extends PerformanceEntry {
-  detail: DetailType;
-
-  constructor(measureName: string, measureOptions?: PerformanceMeasureOptions) {
-    super({
-      name: measureName,
-      entryType: 'measure',
-      startTime: 0,
-      duration: measureOptions?.duration ?? 0,
-    });
-
-    if (measureOptions) {
-      this.detail = measureOptions.detail;
-    }
-  }
-}
-
-function warnNoNativePerformance() {
-  warnOnce(
-    'missing-native-performance',
-    'Missing native implementation of Performance',
-  );
-}
-
-/**
- * Partial implementation of the Performance interface for RN,
- * corresponding to the standard in
- * https://www.w3.org/TR/user-timing/#extensions-performance-interface
- */
-export default class Performance {
-  eventCounts: EventCounts = new EventCounts();
-
-  // Get the current JS memory information.
-  get memory(): MemoryInfo {
-    if (NativePerformance?.getSimpleMemoryInfo) {
-      // JSI API implementations may have different variants of names for the JS
-      // heap information we need here. We will parse the result based on our
-      // guess of the implementation for now.
-      const memoryInfo = NativePerformance.getSimpleMemoryInfo();
-      if (memoryInfo.hasOwnProperty('hermes_heapSize')) {
-        // We got memory information from Hermes
-        const {
-          hermes_heapSize: totalJSHeapSize,
-          hermes_allocatedBytes: usedJSHeapSize,
-        } = memoryInfo;
-
-        return new MemoryInfo({
-          jsHeapSizeLimit: null, // We don't know the heap size limit from Hermes.
-          totalJSHeapSize,
-          usedJSHeapSize,
-        });
-      } else {
-        // JSC and V8 has no native implementations for memory information in JSI::Instrumentation
-        return new MemoryInfo();
-      }
-    }
-
-    return new MemoryInfo();
-  }
-
-  // Startup metrics is not used in web, but only in React Native.
-  get reactNativeStartupTiming(): ReactNativeStartupTiming {
-    if (NativePerformance?.getReactNativeStartupTiming) {
-      return new ReactNativeStartupTiming(
-        NativePerformance.getReactNativeStartupTiming(),
-      );
-    }
-    return new ReactNativeStartupTiming();
-  }
-
-  mark(
-    markName: string,
-    markOptions?: PerformanceMarkOptions,
-  ): PerformanceMark {
-    const mark = new PerformanceMark(markName, markOptions);
-
-    if (NativePerformance?.mark) {
-      NativePerformance.mark(markName, mark.startTime, mark.duration);
-    } else {
-      warnNoNativePerformance();
-    }
-
-    return mark;
-  }
-
-  clearMarks(markName?: string): void {
-    if (!NativePerformanceObserver?.clearEntries) {
-      warnNoNativePerformanceObserver();
-      return;
-    }
-
-    NativePerformanceObserver?.clearEntries(
-      RawPerformanceEntryTypeValues.MARK,
-      markName,
-    );
-  }
-
-  measure(
-    measureName: string,
-    startMarkOrOptions?: string | PerformanceMeasureOptions,
-    endMark?: string,
-  ): PerformanceMeasure {
-    let options;
-    let startMarkName,
-      endMarkName = endMark,
-      duration,
-      startTime = 0,
-      endTime = 0;
-
-    if (typeof startMarkOrOptions === 'string') {
-      startMarkName = startMarkOrOptions;
-    } else if (startMarkOrOptions !== undefined) {
-      options = startMarkOrOptions;
-      if (endMark !== undefined) {
-        throw new TypeError(
-          "Performance.measure: Can't have both options and endMark",
-        );
-      }
-      if (options.start === undefined && options.end === undefined) {
-        throw new TypeError(
-          'Performance.measure: Must have at least one of start/end specified in options',
-        );
-      }
-      if (
-        options.start !== undefined &&
-        options.end !== undefined &&
-        options.duration !== undefined
-      ) {
-        throw new TypeError(
-          "Performance.measure: Can't have both start/end and duration explicitly in options",
-        );
-      }
-
-      if (typeof options.start === 'number') {
-        startTime = options.start;
-      } else {
-        startMarkName = options.start;
-      }
-
-      if (typeof options.end === 'number') {
-        endTime = options.end;
-      } else {
-        endMarkName = options.end;
-      }
-
-      duration = options.duration ?? duration;
-    }
-
-    const measure = new PerformanceMeasure(measureName, options);
-
-    if (NativePerformance?.measure) {
-      NativePerformance.measure(
-        measureName,
-        startTime,
-        endTime,
-        duration,
-        startMarkName,
-        endMarkName,
-      );
-    } else {
-      warnNoNativePerformance();
-    }
-
-    return measure;
-  }
-
-  clearMeasures(measureName?: string): void {
-    if (!NativePerformanceObserver?.clearEntries) {
-      warnNoNativePerformanceObserver();
-      return;
-    }
-
-    NativePerformanceObserver?.clearEntries(
-      RawPerformanceEntryTypeValues.MEASURE,
-      measureName,
-    );
-  }
-
-  /**
-   * Returns a double, measured in milliseconds.
-   * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now
-   */
-  now(): HighResTimeStamp {
-    return getCurrentTimeStamp();
-  }
-
-  /**
-   * An extension that allows to get back to JS all currently logged marks/measures
-   * (in our case, be it from JS or native), see
-   * https://www.w3.org/TR/performance-timeline/#extensions-to-the-performance-interface
-   */
-  getEntries(): PerformanceEntryList {
-    if (!NativePerformanceObserver?.clearEntries) {
-      warnNoNativePerformanceObserver();
-      return [];
-    }
-    return NativePerformanceObserver.getEntries().map(rawToPerformanceEntry);
-  }
-
-  getEntriesByType(entryType: PerformanceEntryType): PerformanceEntryList {
-    if (entryType !== 'mark' && entryType !== 'measure') {
-      console.log(
-        `Performance.getEntriesByType: Only valid for 'mark' and 'measure' entry types, got ${entryType}`,
-      );
-      return [];
-    }
-
-    if (!NativePerformanceObserver?.clearEntries) {
-      warnNoNativePerformanceObserver();
-      return [];
-    }
-    return NativePerformanceObserver.getEntries(
-      performanceEntryTypeToRaw(entryType),
-    ).map(rawToPerformanceEntry);
-  }
-
-  getEntriesByName(
-    entryName: string,
-    entryType?: PerformanceEntryType,
-  ): PerformanceEntryList {
-    if (
-      entryType !== undefined &&
-      entryType !== 'mark' &&
-      entryType !== 'measure'
-    ) {
-      console.log(
-        `Performance.getEntriesByName: Only valid for 'mark' and 'measure' entry types, got ${entryType}`,
-      );
-      return [];
-    }
-
-    if (!NativePerformanceObserver?.clearEntries) {
-      warnNoNativePerformanceObserver();
-      return [];
-    }
-    return NativePerformanceObserver.getEntries(
-      entryType != null ? performanceEntryTypeToRaw(entryType) : undefined,
-      entryName,
-    ).map(rawToPerformanceEntry);
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/PerformanceEntry.js b/node_modules/react-native/Libraries/WebPerformance/PerformanceEntry.js
deleted file mode 100644
index 5139666..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/PerformanceEntry.js
+++ /dev/null
@@ -1,45 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-export type HighResTimeStamp = number;
-export type PerformanceEntryType = 'mark' | 'measure' | 'event';
-
-export class PerformanceEntry {
-  name: string;
-  entryType: PerformanceEntryType;
-  startTime: HighResTimeStamp;
-  duration: HighResTimeStamp;
-
-  constructor(init: {
-    name: string,
-    entryType: PerformanceEntryType,
-    startTime: HighResTimeStamp,
-    duration: HighResTimeStamp,
-  }) {
-    this.name = init.name;
-    this.entryType = init.entryType;
-    this.startTime = init.startTime;
-    this.duration = init.duration;
-  }
-
-  toJSON(): {
-    name: string,
-    entryType: PerformanceEntryType,
-    startTime: HighResTimeStamp,
-    duration: HighResTimeStamp,
-  } {
-    return {
-      name: this.name,
-      entryType: this.entryType,
-      startTime: this.startTime,
-      duration: this.duration,
-    };
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/PerformanceEntryReporter.cpp b/node_modules/react-native/Libraries/WebPerformance/PerformanceEntryReporter.cpp
deleted file mode 100644
index 959b1c4..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/PerformanceEntryReporter.cpp
+++ /dev/null
@@ -1,408 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#include "PerformanceEntryReporter.h"
-#include <cxxreact/JSExecutor.h>
-#include <react/renderer/core/EventLogger.h>
-#include "NativePerformanceObserver.h"
-
-#include <unordered_map>
-
-// All the unflushed entries beyond this amount will get discarded, with
-// the amount of discarded ones sent back to the observers' callbacks as
-// "droppedEntryCount" value
-static constexpr size_t MAX_ENTRY_BUFFER_SIZE = 1024;
-
-namespace facebook::react {
-EventTag PerformanceEntryReporter::sCurrentEventTag_{0};
-
-RawPerformanceEntry PerformanceMark::toRawPerformanceEntry() const {
-  return {
-      name,
-      static_cast<int>(PerformanceEntryType::MARK),
-      timeStamp,
-      0.0,
-      std::nullopt,
-      std::nullopt,
-      std::nullopt};
-}
-
-RawPerformanceEntry PerformanceMeasure::toRawPerformanceEntry() const {
-  return {
-      name,
-      static_cast<int>(PerformanceEntryType::MEASURE),
-      timeStamp,
-      duration,
-      std::nullopt,
-      std::nullopt,
-      std::nullopt};
-}
-
-PerformanceEntryReporter &PerformanceEntryReporter::getInstance() {
-  static PerformanceEntryReporter instance;
-  return instance;
-}
-
-void PerformanceEntryReporter::setReportingCallback(
-    std::optional<AsyncCallback<>> callback) {
-  callback_ = callback;
-}
-
-void PerformanceEntryReporter::startReporting(PerformanceEntryType entryType) {
-  int entryTypeIdx = static_cast<int>(entryType);
-  reportingType_[entryTypeIdx] = true;
-  durationThreshold_[entryTypeIdx] = DEFAULT_DURATION_THRESHOLD;
-}
-
-void PerformanceEntryReporter::setDurationThreshold(
-    PerformanceEntryType entryType,
-    double durationThreshold) {
-  durationThreshold_[static_cast<int>(entryType)] = durationThreshold;
-}
-
-void PerformanceEntryReporter::stopReporting(PerformanceEntryType entryType) {
-  reportingType_[static_cast<int>(entryType)] = false;
-}
-
-void PerformanceEntryReporter::stopReporting() {
-  reportingType_.fill(false);
-}
-
-GetPendingEntriesResult PerformanceEntryReporter::popPendingEntries() {
-  std::lock_guard<std::mutex> lock(entriesMutex_);
-
-  GetPendingEntriesResult res = {std::move(entries_), droppedEntryCount_};
-  entries_ = {};
-  droppedEntryCount_ = 0;
-  return res;
-}
-
-void PerformanceEntryReporter::logEntry(const RawPerformanceEntry &entry) {
-  const auto entryType = static_cast<PerformanceEntryType>(entry.entryType);
-  if (entryType == PerformanceEntryType::EVENT) {
-    eventCounts_[entry.name]++;
-  }
-
-  if (!isReporting(entryType)) {
-    return;
-  }
-
-  if (entry.duration < durationThreshold_[entry.entryType]) {
-    // The entries duration is lower than the desired reporting threshold, skip
-    // return;
-  }
-
-  std::lock_guard<std::mutex> lock(entriesMutex_);
-
-  if (entries_.size() == MAX_ENTRY_BUFFER_SIZE) {
-    // Start dropping entries once reached maximum buffer size.
-    // The number of dropped entries will be reported back to the corresponding
-    // PerformanceObserver callback.
-    droppedEntryCount_ += 1;
-    return;
-  }
-
-  entries_.emplace_back(entry);
-
-  if (entries_.size() == 1) {
-    // If the buffer was empty, it signals that JS side just has possibly
-    // consumed it and is ready to get more
-    scheduleFlushBuffer();
-  }
-}
-
-void PerformanceEntryReporter::mark(
-    const std::string &name,
-    double startTime,
-    double duration) {
-  // Register the mark for further possible "measure" lookup, as well as add
-  // it to a circular buffer:
-  PerformanceMark &mark = marksBuffer_[marksBufferPosition_];
-  marksBufferPosition_ = (marksBufferPosition_ + 1) % marksBuffer_.size();
-  marksCount_ = std::min(marksBuffer_.size(), marksCount_ + 1);
-
-  if (!mark.name.empty()) {
-    // Drop off the oldest mark out of the queue, but only if that's indeed the
-    // oldest one
-    auto it = marksRegistry_.find(&mark);
-    if (it != marksRegistry_.end() && *it == &mark) {
-      marksRegistry_.erase(it);
-    }
-  }
-
-  mark.name = name;
-  mark.timeStamp = startTime;
-  marksRegistry_.insert(&mark);
-
-  logEntry(
-      {name,
-       static_cast<int>(PerformanceEntryType::MARK),
-       startTime,
-       duration,
-       std::nullopt,
-       std::nullopt,
-       std::nullopt});
-}
-
-void PerformanceEntryReporter::clearEntries(
-    PerformanceEntryType entryType,
-    const char *entryName) {
-  if (entryType == PerformanceEntryType::MARK ||
-      entryType == PerformanceEntryType::UNDEFINED) {
-    if (entryName != nullptr) {
-      // remove a named mark from the mark/measure registry
-      PerformanceMark mark{{entryName, 0}};
-      marksRegistry_.erase(&mark);
-
-      clearCircularBuffer(
-          marksBuffer_, marksCount_, marksBufferPosition_, entryName);
-    } else {
-      marksCount_ = 0;
-      marksRegistry_.clear();
-    }
-  }
-
-  if (entryType == PerformanceEntryType::MEASURE ||
-      entryType == PerformanceEntryType::UNDEFINED) {
-    if (entryName != nullptr) {
-      clearCircularBuffer(
-          measuresBuffer_, measuresCount_, measuresBufferPosition_, entryName);
-    } else {
-      measuresCount_ = 0;
-    }
-  }
-
-  int lastPos = entries_.size() - 1;
-  int pos = lastPos;
-  while (pos >= 0) {
-    const RawPerformanceEntry &entry = entries_[pos];
-    if (entry.entryType == static_cast<int32_t>(entryType) &&
-        (entryName == nullptr || entry.name == entryName)) {
-      entries_[pos] = entries_[lastPos];
-      lastPos--;
-    }
-    pos--;
-  }
-  entries_.resize(lastPos + 1);
-}
-
-std::vector<RawPerformanceEntry> PerformanceEntryReporter::getEntries(
-    PerformanceEntryType entryType,
-    const char *entryName) const {
-  if (entryType == PerformanceEntryType::MARK) {
-    return getCircularBufferContents(
-        marksBuffer_, marksCount_, marksBufferPosition_, entryName);
-  } else if (entryType == PerformanceEntryType::MEASURE) {
-    return getCircularBufferContents(
-        measuresBuffer_, measuresCount_, measuresBufferPosition_, entryName);
-  } else if (entryType == PerformanceEntryType::UNDEFINED) {
-    auto marks = getCircularBufferContents(
-        marksBuffer_, marksCount_, marksBufferPosition_, entryName);
-    auto measures = getCircularBufferContents(
-        measuresBuffer_, measuresCount_, measuresBufferPosition_, entryName);
-    marks.insert(marks.end(), measures.begin(), measures.end());
-    return marks;
-  }
-  return {};
-}
-
-void PerformanceEntryReporter::measure(
-    const std::string &name,
-    double startTime,
-    double endTime,
-    const std::optional<double> &duration,
-    const std::optional<std::string> &startMark,
-    const std::optional<std::string> &endMark) {
-  double startTimeVal = startMark ? getMarkTime(*startMark) : startTime;
-  double endTimeVal = endMark ? getMarkTime(*endMark) : endTime;
-  double durationVal = duration ? *duration : endTimeVal - startTimeVal;
-
-  measuresBuffer_[measuresBufferPosition_] =
-      PerformanceMeasure{name, startTime, endTime};
-  measuresBufferPosition_ =
-      (measuresBufferPosition_ + 1) % measuresBuffer_.size();
-  measuresCount_ = std::min(measuresBuffer_.size(), measuresCount_ + 1);
-
-  logEntry(
-      {name,
-       static_cast<int>(PerformanceEntryType::MEASURE),
-       startTimeVal,
-       durationVal,
-       std::nullopt,
-       std::nullopt,
-       std::nullopt});
-}
-
-double PerformanceEntryReporter::getMarkTime(
-    const std::string &markName) const {
-  PerformanceMark mark{{std::move(markName), 0}};
-  auto it = marksRegistry_.find(&mark);
-  if (it != marksRegistry_.end()) {
-    return (*it)->timeStamp;
-  } else {
-    return 0.0;
-  }
-}
-
-void PerformanceEntryReporter::event(
-    std::string name,
-    double startTime,
-    double duration,
-    double processingStart,
-    double processingEnd,
-    uint32_t interactionId) {
-  logEntry(
-      {std::move(name),
-       static_cast<int>(PerformanceEntryType::EVENT),
-       startTime,
-       duration,
-       processingStart,
-       processingEnd,
-       interactionId});
-}
-
-void PerformanceEntryReporter::scheduleFlushBuffer() {
-  if (callback_) {
-    callback_->callWithPriority(SchedulerPriority::IdlePriority);
-  }
-}
-
-struct StrKey {
-  uint32_t key;
-  constexpr StrKey(const char *s)
-      : key(folly::hash::fnv32_buf(s, sizeof(s) - 1)) {}
-
-  constexpr bool operator==(const StrKey &rhs) const {
-    return key == rhs.key;
-  }
-};
-
-struct StrKeyHash {
-  constexpr size_t operator()(const StrKey &strKey) const {
-    return static_cast<size_t>(strKey.key);
-  }
-};
-
-// Supported events for reporting, see
-// https://www.w3.org/TR/event-timing/#sec-events-exposed
-// Not all of these are currently supported by RN, but we map them anyway for
-// future-proofing.
-using SupportedEventTypeRegistry =
-    std::unordered_map<StrKey, const char *, StrKeyHash>;
-
-static const SupportedEventTypeRegistry &getSupportedEvents() {
-  static SupportedEventTypeRegistry SUPPORTED_EVENTS = {
-      {"topAuxClick", "auxclick"},
-      {"topClick", "click"},
-      {"topContextMenu", "contextmenu"},
-      {"topDblClick", "dblclick"},
-      {"topMouseDown", "mousedown"},
-      {"topMouseEnter", "mouseenter"},
-      {"topMouseLeave", "mouseleave"},
-      {"topMouseOut", "mouseout"},
-      {"topMouseOver", "mouseover"},
-      {"topMouseUp", "mouseup"},
-      {"topPointerOver", "pointerover"},
-      {"topPointerEnter", "pointerenter"},
-      {"topPointerDown", "pointerdown"},
-      {"topPointerUp", "pointerup"},
-      {"topPointerCancel", "pointercancel"},
-      {"topPointerOut", "pointerout"},
-      {"topPointerLeave", "pointerleave"},
-      {"topGotPointerCapture", "gotpointercapture"},
-      {"topLostPointerCapture", "lostpointercapture"},
-      {"topTouchStart", "touchstart"},
-      {"topTouchEnd", "touchend"},
-      {"topTouchCancel", "touchcancel"},
-      {"topKeyDown", "keydown"},
-      {"topKeyPress", "keypress"},
-      {"topKeyUp", "keyup"},
-      {"topBeforeInput", "beforeinput"},
-      {"topInput", "input"},
-      {"topCompositionStart", "compositionstart"},
-      {"topCompositionUpdate", "compositionupdate"},
-      {"topCompositionEnd", "compositionend"},
-      {"topDragStart", "dragstart"},
-      {"topDragEnd", "dragend"},
-      {"topDragEnter", "dragenter"},
-      {"topDragLeave", "dragleave"},
-      {"topDragOver", "dragover"},
-      {"topDrop", "drop"},
-  };
-  return SUPPORTED_EVENTS;
-}
-
-EventTag PerformanceEntryReporter::onEventStart(const char *name) {
-  if (!isReportingEvents()) {
-    return 0;
-  }
-  const auto &supportedEvents = getSupportedEvents();
-  auto it = supportedEvents.find(name);
-  if (it == supportedEvents.end()) {
-    return 0;
-  }
-
-  const char *reportedName = it->second;
-
-  sCurrentEventTag_++;
-  if (sCurrentEventTag_ == 0) {
-    // The tag wrapped around (which is highly unlikely, but still)
-    sCurrentEventTag_ = 1;
-  }
-
-  auto timeStamp = JSExecutor::performanceNow();
-  {
-    std::lock_guard<std::mutex> lock(eventsInFlightMutex_);
-    eventsInFlight_.emplace(std::make_pair(
-        sCurrentEventTag_, EventEntry{reportedName, timeStamp, 0.0}));
-  }
-  return sCurrentEventTag_;
-}
-
-void PerformanceEntryReporter::onEventDispatch(EventTag tag) {
-  if (!isReportingEvents() || tag == 0) {
-    return;
-  }
-  auto timeStamp = JSExecutor::performanceNow();
-  {
-    std::lock_guard<std::mutex> lock(eventsInFlightMutex_);
-    auto it = eventsInFlight_.find(tag);
-    if (it != eventsInFlight_.end()) {
-      it->second.dispatchTime = timeStamp;
-    }
-  }
-}
-
-void PerformanceEntryReporter::onEventEnd(EventTag tag) {
-  if (!isReportingEvents() || tag == 0) {
-    return;
-  }
-  auto timeStamp = JSExecutor::performanceNow();
-  {
-    std::lock_guard<std::mutex> lock(eventsInFlightMutex_);
-    auto it = eventsInFlight_.find(tag);
-    if (it == eventsInFlight_.end()) {
-      return;
-    }
-    auto &entry = it->second;
-    auto &name = entry.name;
-
-    // TODO: Define the way to assign interaction IDs to the event chains
-    // (T141358175)
-    const uint32_t interactionId = 0;
-    event(
-        name,
-        entry.startTime,
-        timeStamp - entry.startTime,
-        entry.dispatchTime,
-        timeStamp,
-        interactionId);
-    eventsInFlight_.erase(it);
-  }
-}
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/Libraries/WebPerformance/PerformanceEntryReporter.h b/node_modules/react-native/Libraries/WebPerformance/PerformanceEntryReporter.h
deleted file mode 100644
index 7f7a014..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/PerformanceEntryReporter.h
+++ /dev/null
@@ -1,219 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <react/bridging/Function.h>
-#include <react/renderer/core/EventLogger.h>
-#include <array>
-#include <functional>
-#include <mutex>
-#include <optional>
-#include <unordered_map>
-#include <unordered_set>
-#include "NativePerformanceObserver.h"
-
-namespace facebook::react {
-
-struct PerformanceMark {
-  std::string name;
-  double timeStamp;
-
-  RawPerformanceEntry toRawPerformanceEntry() const;
-};
-
-struct PerformanceMarkHash {
-  size_t operator()(const PerformanceMark *mark) const {
-    return std::hash<std::string>()(mark->name);
-  }
-};
-
-struct PerformanceMarkEqual {
-  bool operator()(const PerformanceMark *lhs, const PerformanceMark *rhs)
-      const {
-    return lhs->name == rhs->name;
-  }
-};
-
-struct PerformanceMeasure {
-  std::string name;
-  double timeStamp;
-  double duration;
-
-  RawPerformanceEntry toRawPerformanceEntry() const;
-};
-
-using PerformanceMarkRegistryType = std::
-    unordered_set<PerformanceMark *, PerformanceMarkHash, PerformanceMarkEqual>;
-
-// Only the MARKS_BUFFER_SIZE amount of the latest marks will be kept in
-// memory for the sake of the "Performance.measure" mark name lookup
-constexpr size_t MARKS_BUFFER_SIZE = 1024;
-
-// Limit buffer size for the measures kept in memory (only keep the latest ones)
-constexpr size_t MEASURES_BUFFER_SIZE = 1024;
-
-constexpr double DEFAULT_DURATION_THRESHOLD = 0.0;
-
-enum class PerformanceEntryType {
-  UNDEFINED = 0,
-  MARK = 1,
-  MEASURE = 2,
-  EVENT = 3,
-  _COUNT = 4,
-};
-
-class PerformanceEntryReporter : public EventLogger {
- public:
-  PerformanceEntryReporter(PerformanceEntryReporter const &) = delete;
-  void operator=(PerformanceEntryReporter const &) = delete;
-
-  // NOTE: This class is not thread safe, make sure that the calls are made from
-  // the same thread.
-  // TODO: Consider passing it as a parameter to the corresponding modules at
-  // creation time instead of having the singleton.
-  static PerformanceEntryReporter &getInstance();
-
-  void setReportingCallback(std::optional<AsyncCallback<>> callback);
-  void startReporting(PerformanceEntryType entryType);
-  void stopReporting(PerformanceEntryType entryType);
-  void stopReporting();
-  void setDurationThreshold(
-      PerformanceEntryType entryType,
-      double durationThreshold);
-
-  GetPendingEntriesResult popPendingEntries();
-  void logEntry(const RawPerformanceEntry &entry);
-
-  bool isReporting(PerformanceEntryType entryType) const {
-    return reportingType_[static_cast<int>(entryType)];
-  }
-
-  bool isReportingEvents() const {
-    return isReporting(PerformanceEntryType::EVENT);
-  }
-
-  uint32_t getDroppedEntryCount() const {
-    return droppedEntryCount_;
-  }
-
-  void mark(const std::string &name, double startTime, double duration);
-
-  void measure(
-      const std::string &name,
-      double startTime,
-      double endTime,
-      const std::optional<double> &duration = std::nullopt,
-      const std::optional<std::string> &startMark = std::nullopt,
-      const std::optional<std::string> &endMark = std::nullopt);
-
-  void clearEntries(
-      PerformanceEntryType entryType = PerformanceEntryType::UNDEFINED,
-      const char *entryName = nullptr);
-
-  std::vector<RawPerformanceEntry> getEntries(
-      PerformanceEntryType entryType = PerformanceEntryType::UNDEFINED,
-      const char *entryName = nullptr) const;
-
-  void event(
-      std::string name,
-      double startTime,
-      double duration,
-      double processingStart,
-      double processingEnd,
-      uint32_t interactionId);
-
-  EventTag onEventStart(const char *name) override;
-  void onEventDispatch(EventTag tag) override;
-  void onEventEnd(EventTag tag) override;
-
-  const std::unordered_map<std::string, uint32_t> &getEventCounts() const {
-    return eventCounts_;
-  }
-
- private:
-  std::optional<AsyncCallback<>> callback_;
-  std::vector<RawPerformanceEntry> entries_;
-  std::mutex entriesMutex_;
-  std::array<bool, (size_t)PerformanceEntryType::_COUNT> reportingType_{false};
-  std::unordered_map<std::string, uint32_t> eventCounts_;
-  std::array<double, (size_t)PerformanceEntryType::_COUNT> durationThreshold_{
-      DEFAULT_DURATION_THRESHOLD};
-
-  // Mark registry for "measure" lookup
-  PerformanceMarkRegistryType marksRegistry_;
-  std::array<PerformanceMark, MARKS_BUFFER_SIZE> marksBuffer_;
-  size_t marksBufferPosition_{0};
-  size_t marksCount_{0};
-
-  std::array<PerformanceMeasure, MEASURES_BUFFER_SIZE> measuresBuffer_;
-  size_t measuresBufferPosition_{0};
-  size_t measuresCount_{0};
-
-  uint32_t droppedEntryCount_{0};
-
-  struct EventEntry {
-    const char *name;
-    double startTime{0.0};
-    double dispatchTime{0.0};
-  };
-
-  // Registry to store the events that are currently ongoing.
-  // Note that we could probably use a more efficient container for that,
-  // but since we only report discrete events, the volume is normally low,
-  // so a hash map should be just fine.
-  std::unordered_map<EventTag, EventEntry> eventsInFlight_;
-  std::mutex eventsInFlightMutex_;
-
-  static EventTag sCurrentEventTag_;
-
-  PerformanceEntryReporter() {}
-
-  double getMarkTime(const std::string &markName) const;
-  void scheduleFlushBuffer();
-
-  template <class T, size_t N>
-  std::vector<RawPerformanceEntry> getCircularBufferContents(
-      const std::array<T, N> &buffer,
-      size_t entryCount,
-      size_t bufferPosition,
-      const char *entryName = nullptr) const {
-    std::vector<RawPerformanceEntry> res;
-    size_t pos = (bufferPosition - entryCount + buffer.size()) % buffer.size();
-    for (size_t i = 0; i < entryCount; i++) {
-      if (entryName == nullptr || buffer[pos].name == entryName) {
-        res.push_back(buffer[pos].toRawPerformanceEntry());
-      }
-      pos = (pos + 1) % buffer.size();
-    }
-    return res;
-  }
-
-  template <class T, size_t N>
-  void clearCircularBuffer(
-      std::array<T, N> &buffer,
-      size_t &entryCount,
-      size_t &bufferPosition,
-      const char *entryName) const {
-    std::array<T, N> newBuffer;
-    size_t newEntryCount = 0;
-
-    size_t pos = (bufferPosition - entryCount + buffer.size()) % buffer.size();
-    for (size_t i = 0; i < entryCount; i++) {
-      if (buffer[pos].name != entryName) {
-        newBuffer[newEntryCount++] = buffer[pos];
-      }
-      pos = (pos + 1) % buffer.size();
-    }
-
-    buffer = newBuffer;
-    bufferPosition = newEntryCount;
-    entryCount = newEntryCount;
-  }
-};
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/Libraries/WebPerformance/PerformanceEventTiming.js b/node_modules/react-native/Libraries/WebPerformance/PerformanceEventTiming.js
deleted file mode 100644
index a741f49..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/PerformanceEventTiming.js
+++ /dev/null
@@ -1,38 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-import type {HighResTimeStamp} from './PerformanceEntry';
-
-import {PerformanceEntry} from './PerformanceEntry';
-
-export class PerformanceEventTiming extends PerformanceEntry {
-  processingStart: HighResTimeStamp;
-  processingEnd: HighResTimeStamp;
-  interactionId: number;
-
-  constructor(init: {
-    name: string,
-    startTime?: HighResTimeStamp,
-    duration?: HighResTimeStamp,
-    processingStart?: HighResTimeStamp,
-    processingEnd?: HighResTimeStamp,
-    interactionId?: number,
-  }) {
-    super({
-      name: init.name,
-      entryType: 'event',
-      startTime: init.startTime ?? 0,
-      duration: init.duration ?? 0,
-    });
-    this.processingStart = init.processingStart ?? 0;
-    this.processingEnd = init.processingEnd ?? 0;
-    this.interactionId = init.interactionId ?? 0;
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/PerformanceObserver.js b/node_modules/react-native/Libraries/WebPerformance/PerformanceObserver.js
index 776c9f0..dc9a0c4 100644
--- a/node_modules/react-native/Libraries/WebPerformance/PerformanceObserver.js
+++ b/node_modules/react-native/Libraries/WebPerformance/PerformanceObserver.js
@@ -8,15 +8,62 @@
  * @flow strict
  */
 
-import type {HighResTimeStamp, PerformanceEntryType} from './PerformanceEntry';
+import type {
+  RawPerformanceEntry,
+  RawPerformanceEntryType,
+} from './NativePerformanceObserver';
 
 import warnOnce from '../Utilities/warnOnce';
 import NativePerformanceObserver from './NativePerformanceObserver';
-import {PerformanceEntry} from './PerformanceEntry';
-import {
-  performanceEntryTypeToRaw,
-  rawToPerformanceEntry,
-} from './RawPerformanceEntry';
+
+export type HighResTimeStamp = number;
+// TODO: Extend once new types (such as event) are supported.
+// TODO: Get rid of the "undefined" once there is at least one type supported.
+export type PerformanceEntryType = 'undefined';
+
+export class PerformanceEntry {
+  name: string;
+  entryType: PerformanceEntryType;
+  startTime: HighResTimeStamp;
+  duration: number;
+
+  constructor(init: {
+    name: string,
+    entryType: PerformanceEntryType,
+    startTime: HighResTimeStamp,
+    duration: number,
+  }) {
+    this.name = init.name;
+    this.entryType = init.entryType;
+    this.startTime = init.startTime;
+    this.duration = init.duration;
+  }
+
+  // $FlowIgnore: Flow(unclear-type)
+  toJSON(): Object {
+    return {
+      name: this.name,
+      entryType: this.entryType,
+      startTime: this.startTime,
+      duration: this.duration,
+    };
+  }
+}
+
+function rawToPerformanceEntryType(
+  type: RawPerformanceEntryType,
+): PerformanceEntryType {
+  return 'undefined';
+}
+
+function rawToPerformanceEntry(entry: RawPerformanceEntry): PerformanceEntry {
+  return new PerformanceEntry({
+    name: entry.name,
+    entryType: rawToPerformanceEntryType(entry.entryType),
+    startTime: entry.startTime,
+    duration: entry.duration,
+  });
+}
 
 export type PerformanceEntryList = $ReadOnlyArray<PerformanceEntry>;
 
@@ -52,8 +99,6 @@ export class PerformanceObserverEntryList {
 export type PerformanceObserverCallback = (
   list: PerformanceObserverEntryList,
   observer: PerformanceObserver,
-  // The number of buffered entries which got dropped from the buffer due to the buffer being full:
-  droppedEntryCount?: number,
 ) => void;
 
 export type PerformanceObserverInit =
@@ -62,73 +107,21 @@ export type PerformanceObserverInit =
     }
   | {
       type: PerformanceEntryType,
-      durationThreshold?: HighResTimeStamp,
     };
 
-type PerformanceObserverConfig = {|
-  callback: PerformanceObserverCallback,
-  // Map of {entryType: durationThreshold}
-  entryTypes: $ReadOnlyMap<PerformanceEntryType, ?number>,
-|};
+let _observedEntryTypeRefCount: Map<PerformanceEntryType, number> = new Map();
 
-const observerCountPerEntryType: Map<PerformanceEntryType, number> = new Map();
-const registeredObservers: Map<PerformanceObserver, PerformanceObserverConfig> =
-  new Map();
-let isOnPerformanceEntryCallbackSet: boolean = false;
+let _observers: Set<PerformanceObserver> = new Set();
 
-// This is a callback that gets scheduled and periodically called from the native side
-const onPerformanceEntry = () => {
-  if (!NativePerformanceObserver) {
-    return;
-  }
-  const entryResult = NativePerformanceObserver.popPendingEntries();
-  const rawEntries = entryResult?.entries ?? [];
-  const droppedEntriesCount = entryResult?.droppedEntriesCount;
-  if (rawEntries.length === 0) {
-    return;
-  }
-  const entries = rawEntries.map(rawToPerformanceEntry);
-  for (const [observer, observerConfig] of registeredObservers.entries()) {
-    const entriesForObserver: PerformanceEntryList = entries.filter(entry => {
-      if (!observerConfig.entryTypes.has(entry.entryType)) {
-        return false;
-      }
-      const durationThreshold = observerConfig.entryTypes.get(entry.entryType);
-      return entry.duration >= (durationThreshold ?? 0);
-    });
-    observerConfig.callback(
-      new PerformanceObserverEntryList(entriesForObserver),
-      observer,
-      droppedEntriesCount,
-    );
-  }
-};
+let _onPerformanceEntryCallbackIsSet: boolean = false;
 
-export function warnNoNativePerformanceObserver() {
+function warnNoNativePerformanceObserver() {
   warnOnce(
     'missing-native-performance-observer',
     'Missing native implementation of PerformanceObserver',
   );
 }
 
-function applyDurationThresholds() {
-  const durationThresholds: Map<PerformanceEntryType, ?number> = Array.from(
-    registeredObservers.values(),
-  )
-    .map(config => config.entryTypes)
-    .reduce(
-      (accumulator, currentValue) => union(accumulator, currentValue),
-      new Map(),
-    );
-
-  for (const [entryType, durationThreshold] of durationThresholds) {
-    NativePerformanceObserver?.setDurationThreshold(
-      performanceEntryTypeToRaw(entryType),
-      durationThreshold ?? 0,
-    );
-  }
-}
-
 /**
  * Implementation of the PerformanceObserver interface for RN,
  * corresponding to the standard in https://www.w3.org/TR/performance-timeline/
@@ -151,77 +144,38 @@ function applyDurationThresholds() {
  */
 export default class PerformanceObserver {
   _callback: PerformanceObserverCallback;
-  _type: 'single' | 'multiple' | void;
+  _entryTypes: $ReadOnlySet<PerformanceEntryType>;
 
   constructor(callback: PerformanceObserverCallback) {
     this._callback = callback;
   }
 
-  observe(options: PerformanceObserverInit): void {
+  observe(options: PerformanceObserverInit) {
     if (!NativePerformanceObserver) {
       warnNoNativePerformanceObserver();
       return;
     }
-
-    this._validateObserveOptions(options);
-
-    let requestedEntryTypes;
-
-    if (options.entryTypes) {
-      this._type = 'multiple';
-      requestedEntryTypes = new Map(
-        options.entryTypes.map(t => [t, undefined]),
-      );
-    } else {
-      this._type = 'single';
-      requestedEntryTypes = new Map([
-        [options.type, options.durationThreshold],
-      ]);
-    }
-
-    // The same observer may receive multiple calls to "observe", so we need
-    // to check what is new on this call vs. previous ones.
-    const currentEntryTypes = registeredObservers.get(this)?.entryTypes;
-    const nextEntryTypes = currentEntryTypes
-      ? union(requestedEntryTypes, currentEntryTypes)
-      : requestedEntryTypes;
-
-    // This `observe` call is a no-op because there are no new things to observe.
-    if (currentEntryTypes && currentEntryTypes.size === nextEntryTypes.size) {
-      return;
-    }
-
-    registeredObservers.set(this, {
-      callback: this._callback,
-      entryTypes: nextEntryTypes,
-    });
-
-    if (!isOnPerformanceEntryCallbackSet) {
+    if (!_onPerformanceEntryCallbackIsSet) {
       NativePerformanceObserver.setOnPerformanceEntryCallback(
         onPerformanceEntry,
       );
-      isOnPerformanceEntryCallbackSet = true;
+      _onPerformanceEntryCallbackIsSet = true;
     }
-
-    // We only need to start listenening to new entry types being observed in
-    // this observer.
-    const newEntryTypes = currentEntryTypes
-      ? difference(
-          new Set(requestedEntryTypes.keys()),
-          new Set(currentEntryTypes.keys()),
-        )
-      : new Set(requestedEntryTypes.keys());
-    for (const type of newEntryTypes) {
-      if (!observerCountPerEntryType.has(type)) {
-        const rawType = performanceEntryTypeToRaw(type);
-        NativePerformanceObserver.startReporting(rawType);
+    if (options.entryTypes) {
+      this._entryTypes = new Set(options.entryTypes);
+    } else {
+      this._entryTypes = new Set([options.type]);
+    }
+    this._entryTypes.forEach(type => {
+      if (!_observedEntryTypeRefCount.has(type)) {
+        NativePerformanceObserver.startReporting(type);
       }
-      observerCountPerEntryType.set(
+      _observedEntryTypeRefCount.set(
         type,
-        (observerCountPerEntryType.get(type) ?? 0) + 1,
+        (_observedEntryTypeRefCount.get(type) ?? 0) + 1,
       );
-    }
-    applyDurationThresholds();
+    });
+    _observers.add(this);
   }
 
   disconnect(): void {
@@ -229,90 +183,41 @@ export default class PerformanceObserver {
       warnNoNativePerformanceObserver();
       return;
     }
-
-    const observerConfig = registeredObservers.get(this);
-    if (!observerConfig) {
-      return;
-    }
-
-    // Disconnect this observer
-    for (const type of observerConfig.entryTypes.keys()) {
-      const numberOfObserversForThisType =
-        observerCountPerEntryType.get(type) ?? 0;
-      if (numberOfObserversForThisType === 1) {
-        observerCountPerEntryType.delete(type);
-        NativePerformanceObserver.stopReporting(
-          performanceEntryTypeToRaw(type),
-        );
-      } else if (numberOfObserversForThisType !== 0) {
-        observerCountPerEntryType.set(type, numberOfObserversForThisType - 1);
+    this._entryTypes.forEach(type => {
+      const entryTypeRefCount = _observedEntryTypeRefCount.get(type) ?? 0;
+      if (entryTypeRefCount === 1) {
+        _observedEntryTypeRefCount.delete(type);
+        NativePerformanceObserver.stopReporting(type);
+      } else if (entryTypeRefCount !== 0) {
+        _observedEntryTypeRefCount.set(type, entryTypeRefCount - 1);
       }
-    }
-
-    // Disconnect all observers if this was the last one
-    registeredObservers.delete(this);
-    if (registeredObservers.size === 0) {
+    });
+    _observers.delete(this);
+    if (_observers.size === 0) {
       NativePerformanceObserver.setOnPerformanceEntryCallback(undefined);
-      isOnPerformanceEntryCallbackSet = false;
-    }
-
-    applyDurationThresholds();
-  }
-
-  _validateObserveOptions(options: PerformanceObserverInit): void {
-    const {type, entryTypes, durationThreshold} = options;
-
-    if (!type && !entryTypes) {
-      throw new TypeError(
-        "Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.",
-      );
-    }
-
-    if (entryTypes && type) {
-      throw new TypeError(
-        "Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.",
-      );
-    }
-
-    if (this._type === 'multiple' && type) {
-      throw new Error(
-        "Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})",
-      );
-    }
-
-    if (this._type === 'single' && entryTypes) {
-      throw new Error(
-        "Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})",
-      );
-    }
-
-    if (entryTypes && durationThreshold !== undefined) {
-      throw new TypeError(
-        "Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and durationThreshold arguments.",
-      );
+      _onPerformanceEntryCallbackIsSet = false;
     }
   }
 
   static supportedEntryTypes: $ReadOnlyArray<PerformanceEntryType> =
-    Object.freeze(['mark', 'measure', 'event']);
+    // TODO: add types once they are fully supported
+    Object.freeze([]);
 }
 
-// As a Set union, except if value exists in both, we take minimum
-function union<T>(
-  a: $ReadOnlyMap<T, ?number>,
-  b: $ReadOnlyMap<T, ?number>,
-): Map<T, ?number> {
-  const res = new Map<T, ?number>();
-  for (const [k, v] of a) {
-    if (!b.has(k)) {
-      res.set(k, v);
-    } else {
-      res.set(k, Math.min(v ?? 0, b.get(k) ?? 0));
-    }
+// This is a callback that gets scheduled and periodically called from the native side
+function onPerformanceEntry() {
+  if (!NativePerformanceObserver) {
+    return;
   }
-  return res;
-}
-
-function difference<T>(a: $ReadOnlySet<T>, b: $ReadOnlySet<T>): Set<T> {
-  return new Set([...a].filter(x => !b.has(x)));
+  const rawEntries = NativePerformanceObserver.getPendingEntries();
+  const entries = rawEntries.map(rawToPerformanceEntry);
+  _observers.forEach(observer => {
+    const entriesForObserver: PerformanceEntryList = entries.filter(entry =>
+      observer._entryTypes.has(entry.entryType),
+    );
+    observer._callback(
+      new PerformanceObserverEntryList(entriesForObserver),
+      observer,
+    );
+  });
 }
diff --git a/node_modules/react-native/Libraries/WebPerformance/RawPerformanceEntry.js b/node_modules/react-native/Libraries/WebPerformance/RawPerformanceEntry.js
deleted file mode 100644
index c9f3c49..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/RawPerformanceEntry.js
+++ /dev/null
@@ -1,87 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @flow strict
- */
-
-import type {
-  RawPerformanceEntry,
-  RawPerformanceEntryType,
-} from './NativePerformanceObserver';
-import type {PerformanceEntryType} from './PerformanceEntry';
-
-import {PerformanceEntry} from './PerformanceEntry';
-import {PerformanceEventTiming} from './PerformanceEventTiming';
-
-export const RawPerformanceEntryTypeValues = {
-  UNDEFINED: 0,
-  MARK: 1,
-  MEASURE: 2,
-  EVENT: 3,
-};
-
-export function rawToPerformanceEntry(
-  entry: RawPerformanceEntry,
-): PerformanceEntry {
-  if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {
-    return new PerformanceEventTiming({
-      name: entry.name,
-      startTime: entry.startTime,
-      duration: entry.duration,
-      processingStart: entry.processingStart,
-      processingEnd: entry.processingEnd,
-      interactionId: entry.interactionId,
-    });
-  } else {
-    return new PerformanceEntry({
-      name: entry.name,
-      entryType: rawToPerformanceEntryType(entry.entryType),
-      startTime: entry.startTime,
-      duration: entry.duration,
-    });
-  }
-}
-
-export function rawToPerformanceEntryType(
-  type: RawPerformanceEntryType,
-): PerformanceEntryType {
-  switch (type) {
-    case RawPerformanceEntryTypeValues.MARK:
-      return 'mark';
-    case RawPerformanceEntryTypeValues.MEASURE:
-      return 'measure';
-    case RawPerformanceEntryTypeValues.EVENT:
-      return 'event';
-    case RawPerformanceEntryTypeValues.UNDEFINED:
-      throw new TypeError(
-        "rawToPerformanceEntryType: UNDEFINED can't be cast to PerformanceEntryType",
-      );
-    default:
-      throw new TypeError(
-        `rawToPerformanceEntryType: unexpected performance entry type received: ${type}`,
-      );
-  }
-}
-
-export function performanceEntryTypeToRaw(
-  type: PerformanceEntryType,
-): RawPerformanceEntryType {
-  switch (type) {
-    case 'mark':
-      return RawPerformanceEntryTypeValues.MARK;
-    case 'measure':
-      return RawPerformanceEntryTypeValues.MEASURE;
-    case 'event':
-      return RawPerformanceEntryTypeValues.EVENT;
-    default:
-      // Verify exhaustive check with Flow
-      (type: empty);
-      throw new TypeError(
-        `performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`,
-      );
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/ReactNativeStartupTiming.js b/node_modules/react-native/Libraries/WebPerformance/ReactNativeStartupTiming.js
deleted file mode 100644
index fbb0fa6..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/ReactNativeStartupTiming.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- * @oncall react_native
- */
-
-// flowlint unsafe-getters-setters:off
-
-import type {ReactNativeStartupTiming as ReactNativeStartupTimingType} from './NativePerformance';
-
-// Read-only object with RN startup timing information.
-// This is returned by the performance.reactNativeStartup API.
-export default class ReactNativeStartupTiming {
-  // All time information here are in ms. To match web spec,
-  // the default value for timings are zero if not present.
-  // See https://www.w3.org/TR/performance-timeline/#performancetiming-interface
-  _startTime = 0;
-  _endTime = 0;
-  _executeJavaScriptBundleEntryPointStart = 0;
-  _executeJavaScriptBundleEntryPointEnd = 0;
-
-  constructor(startUpTiming: ?ReactNativeStartupTimingType) {
-    if (startUpTiming != null) {
-      this._startTime = startUpTiming.startTime;
-      this._endTime = startUpTiming.endTime;
-      this._executeJavaScriptBundleEntryPointStart =
-        startUpTiming.executeJavaScriptBundleEntryPointStart;
-      this._executeJavaScriptBundleEntryPointEnd =
-        startUpTiming.executeJavaScriptBundleEntryPointEnd;
-    }
-  }
-
-  /**
-   *  Start time of the RN app startup process. This is provided by the platform by implementing the `ReactMarker.setAppStartTime` API in the native platform code.
-   */
-  get startTime(): number {
-    return this._startTime;
-  }
-
-  /**
-   * End time of the RN app startup process. This is equal to `executeJavaScriptBundleEntryPointEnd`.
-   */
-  get endTime(): number {
-    return this._endTime;
-  }
-
-  /**
-   * Start time of JS bundle being executed. This indicates the RN JS bundle is loaded and start to be evaluated.
-   */
-  get executeJavaScriptBundleEntryPointStart(): number {
-    return this._executeJavaScriptBundleEntryPointStart;
-  }
-
-  /**
-   * End time of JS bundle being executed. This indicates all the synchronous entry point jobs are finished.
-   */
-  get executeJavaScriptBundleEntryPointEnd(): number {
-    return this._executeJavaScriptBundleEntryPointEnd;
-  }
-}
diff --git a/node_modules/react-native/Libraries/WebPerformance/__mocks__/NativePerformance.js b/node_modules/react-native/Libraries/WebPerformance/__mocks__/NativePerformance.js
deleted file mode 100644
index 6b11a27..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/__mocks__/NativePerformance.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-import type {
-  NativeMemoryInfo,
-  ReactNativeStartupTiming,
-  Spec as NativePerformance,
-} from '../NativePerformance';
-
-import NativePerformanceObserver from '../NativePerformanceObserver';
-import {RawPerformanceEntryTypeValues} from '../RawPerformanceEntry';
-
-const marks: Map<string, number> = new Map();
-
-const NativePerformanceMock: NativePerformance = {
-  mark: (name: string, startTime: number, duration: number): void => {
-    NativePerformanceObserver?.logRawEntry({
-      name,
-      entryType: RawPerformanceEntryTypeValues.MARK,
-      startTime,
-      duration,
-    });
-    marks.set(name, startTime);
-  },
-
-  measure: (
-    name: string,
-    startTime: number,
-    endTime: number,
-    duration?: number,
-    startMark?: string,
-    endMark?: string,
-  ): void => {
-    const start = startMark != null ? marks.get(startMark) ?? 0 : startTime;
-    const end = endMark != null ? marks.get(endMark) ?? 0 : endTime;
-    NativePerformanceObserver?.logRawEntry({
-      name,
-      entryType: RawPerformanceEntryTypeValues.MEASURE,
-      startTime: start,
-      duration: duration ?? (end ? end - start : 0),
-    });
-  },
-
-  getSimpleMemoryInfo: (): NativeMemoryInfo => {
-    return {};
-  },
-
-  getReactNativeStartupTiming: (): ReactNativeStartupTiming => {
-    return {
-      startTime: 0,
-      endTime: 0,
-      executeJavaScriptBundleEntryPointStart: 0,
-      executeJavaScriptBundleEntryPointEnd: 0,
-    };
-  },
-};
-
-export default NativePerformanceMock;
diff --git a/node_modules/react-native/Libraries/WebPerformance/__mocks__/NativePerformanceObserver.js b/node_modules/react-native/Libraries/WebPerformance/__mocks__/NativePerformanceObserver.js
deleted file mode 100644
index 1b9c314..0000000
--- a/node_modules/react-native/Libraries/WebPerformance/__mocks__/NativePerformanceObserver.js
+++ /dev/null
@@ -1,101 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow strict
- * @format
- */
-
-import type {
-  GetPendingEntriesResult,
-  RawPerformanceEntry,
-  RawPerformanceEntryType,
-  Spec as NativePerformanceObserver,
-} from '../NativePerformanceObserver';
-
-import {RawPerformanceEntryTypeValues} from '../RawPerformanceEntry';
-
-const reportingType: Set<RawPerformanceEntryType> = new Set();
-const eventCounts: Map<string, number> = new Map();
-const durationThresholds: Map<RawPerformanceEntryType, number> = new Map();
-let entries: Array<RawPerformanceEntry> = [];
-let onPerformanceEntryCallback: ?() => void;
-
-const NativePerformanceObserverMock: NativePerformanceObserver = {
-  startReporting: (entryType: RawPerformanceEntryType) => {
-    reportingType.add(entryType);
-  },
-
-  stopReporting: (entryType: RawPerformanceEntryType) => {
-    reportingType.delete(entryType);
-    durationThresholds.delete(entryType);
-  },
-
-  popPendingEntries: (): GetPendingEntriesResult => {
-    const res = entries;
-    entries = [];
-    return {
-      droppedEntriesCount: 0,
-      entries: res,
-    };
-  },
-
-  setOnPerformanceEntryCallback: (callback?: () => void) => {
-    onPerformanceEntryCallback = callback;
-  },
-
-  logRawEntry: (entry: RawPerformanceEntry) => {
-    if (reportingType.has(entry.entryType)) {
-      const durationThreshold = durationThresholds.get(entry.entryType);
-      if (
-        durationThreshold !== undefined &&
-        entry.duration < durationThreshold
-      ) {
-        return;
-      }
-      entries.push(entry);
-      // $FlowFixMe[incompatible-call]
-      global.queueMicrotask(() => {
-        // We want to emulate the way it's done in native (i.e. async/batched)
-        onPerformanceEntryCallback?.();
-      });
-    }
-    if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {
-      eventCounts.set(entry.name, (eventCounts.get(entry.name) ?? 0) + 1);
-    }
-  },
-
-  getEventCounts: (): $ReadOnlyArray<[string, number]> => {
-    return Array.from(eventCounts.entries());
-  },
-
-  setDurationThreshold: (
-    entryType: RawPerformanceEntryType,
-    durationThreshold: number,
-  ) => {
-    durationThresholds.set(entryType, durationThreshold);
-  },
-
-  clearEntries: (entryType: RawPerformanceEntryType, entryName?: string) => {
-    entries = entries.filter(
-      e =>
-        e.entryType === entryType &&
-        (entryName == null || e.name === entryName),
-    );
-  },
-
-  getEntries: (
-    entryType?: RawPerformanceEntryType,
-    entryName?: string,
-  ): $ReadOnlyArray<RawPerformanceEntry> => {
-    return entries.filter(
-      e =>
-        (entryType == null || e.entryType === entryType) &&
-        (entryName == null || e.name === entryName),
-    );
-  },
-};
-
-export default NativePerformanceObserverMock;
diff --git a/node_modules/react-native/Libraries/WebSocket/RCTReconnectingWebSocket.m b/node_modules/react-native/Libraries/WebSocket/RCTReconnectingWebSocket.m
index 1bd4de7..d557815 100644
--- a/node_modules/react-native/Libraries/WebSocket/RCTReconnectingWebSocket.m
+++ b/node_modules/react-native/Libraries/WebSocket/RCTReconnectingWebSocket.m
@@ -10,16 +10,16 @@
 #import <React/RCTConvert.h>
 #import <React/RCTDefines.h>
 
-#import <SocketRocket/SRWebSocket.h>
+#import <React/RCTSRWebSocket.h>
 
 #if RCT_DEV // Only supported in dev mode
 
-@interface RCTReconnectingWebSocket () <SRWebSocketDelegate>
+@interface RCTReconnectingWebSocket () <RCTSRWebSocketDelegate>
 @end
 
 @implementation RCTReconnectingWebSocket {
   NSURL *_url;
-  SRWebSocket *_socket;
+  RCTSRWebSocket *_socket;
   BOOL _stopped;
 }
 
@@ -39,14 +39,14 @@ - (instancetype)initWithURL:(NSURL *)url
 
 - (void)send:(id)data
 {
-  [_socket sendData:data error:nil];
+  [_socket send:data];
 }
 
 - (void)start
 {
   [self stop];
   _stopped = NO;
-  _socket = [[SRWebSocket alloc] initWithURL:_url];
+  _socket = [[RCTSRWebSocket alloc] initWithURL:_url];
   _socket.delegate = self;
   [_socket setDelegateDispatchQueue:_delegateDispatchQueue];
   [_socket open];
@@ -60,7 +60,7 @@ - (void)stop
   _socket = nil;
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessage:(id)message
+- (void)webSocket:(RCTSRWebSocket *)webSocket didReceiveMessage:(id)message
 {
   [_delegate reconnectingWebSocket:self didReceiveMessage:message];
 }
@@ -71,7 +71,7 @@ - (void)reconnect
     return;
   }
 
-  __weak SRWebSocket *socket = _socket;
+  __weak RCTSRWebSocket *socket = _socket;
   __weak __typeof(self) weakSelf = self;
 
   dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
@@ -82,12 +82,12 @@ - (void)reconnect
   });
 }
 
-- (void)webSocketDidOpen:(SRWebSocket *)webSocket
+- (void)webSocketDidOpen:(RCTSRWebSocket *)webSocket
 {
   [_delegate reconnectingWebSocketDidOpen:self];
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error
+- (void)webSocket:(RCTSRWebSocket *)webSocket didFailWithError:(NSError *)error
 {
   [_delegate reconnectingWebSocketDidClose:self];
   if ([error code] != ECONNREFUSED) {
@@ -95,7 +95,7 @@ - (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error
   }
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket
+- (void)webSocket:(RCTSRWebSocket *)webSocket
     didCloseWithCode:(NSInteger)code
               reason:(NSString *)reason
             wasClean:(BOOL)wasClean
diff --git a/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.h b/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.h
new file mode 100644
index 0000000..4480121
--- /dev/null
+++ b/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.h
@@ -0,0 +1,136 @@
+//
+//   Copyright 2012 Square Inc.
+//
+//   Licensed under the Apache License, Version 2.0 (the "License");
+//   you may not use this file except in compliance with the License.
+//   You may obtain a copy of the License at
+//
+//       http://www.apache.org/licenses/LICENSE-2.0
+//
+//   Unless required by applicable law or agreed to in writing, software
+//   distributed under the License is distributed on an "AS IS" BASIS,
+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//   See the License for the specific language governing permissions and
+//   limitations under the License.
+//
+
+#import <Foundation/Foundation.h>
+#import <Security/SecCertificate.h>
+
+typedef NS_ENUM(unsigned int, RCTSRReadyState) {
+  RCTSR_CONNECTING = 0,
+  RCTSR_OPEN = 1,
+  RCTSR_CLOSING = 2,
+  RCTSR_CLOSED = 3,
+};
+
+typedef NS_ENUM(NSInteger, RCTSRStatusCode) {
+  RCTSRStatusCodeNormal = 1000,
+  RCTSRStatusCodeGoingAway = 1001,
+  RCTSRStatusCodeProtocolError = 1002,
+  RCTSRStatusCodeUnhandledType = 1003,
+  // 1004 reserved.
+  RCTSRStatusNoStatusReceived = 1005,
+  // 1004-1006 reserved.
+  RCTSRStatusCodeInvalidUTF8 = 1007,
+  RCTSRStatusCodePolicyViolated = 1008,
+  RCTSRStatusCodeMessageTooBig = 1009,
+};
+
+@class RCTSRWebSocket;
+
+extern NSString *const RCTSRWebSocketErrorDomain;
+extern NSString *const RCTSRHTTPResponseErrorKey;
+
+#pragma mark - RCTSRWebSocketDelegate
+
+@protocol RCTSRWebSocketDelegate;
+
+#pragma mark - RCTSRWebSocket
+
+@interface RCTSRWebSocket : NSObject <NSStreamDelegate>
+
+@property (nonatomic, weak) id<RCTSRWebSocketDelegate> delegate;
+
+@property (nonatomic, readonly) RCTSRReadyState readyState;
+@property (nonatomic, readonly, strong) NSURL *url;
+
+// This returns the negotiated protocol.
+// It will be nil until after the handshake completes.
+@property (nonatomic, readonly, copy) NSString *protocol;
+
+// Protocols should be an array of strings that turn into Sec-WebSocket-Protocol.
+- (instancetype)initWithURLRequest:(NSURLRequest *)request
+                         protocols:(NSArray<NSString *> *)protocols NS_DESIGNATED_INITIALIZER;
+- (instancetype)initWithURLRequest:(NSURLRequest *)request;
+
+// Some helper constructors.
+- (instancetype)initWithURL:(NSURL *)url protocols:(NSArray<NSString *> *)protocols;
+- (instancetype)initWithURL:(NSURL *)url;
+
+// Delegate queue will be dispatch_main_queue by default.
+// You cannot set both OperationQueue and dispatch_queue.
+- (void)setDelegateOperationQueue:(NSOperationQueue *)queue;
+- (void)setDelegateDispatchQueue:(dispatch_queue_t)queue;
+
+// By default, it will schedule itself on +[NSRunLoop RCTSR_networkRunLoop] using defaultModes.
+- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode;
+- (void)unscheduleFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode;
+
+// RCTSRWebSockets are intended for one-time-use only.  Open should be called once and only once.
+- (void)open;
+
+- (void)close;
+- (void)closeWithCode:(NSInteger)code reason:(NSString *)reason;
+
+// Send a UTF8 String or Data.
+- (void)send:(id)data;
+
+// Send Data (can be nil) in a ping message.
+- (void)sendPing:(NSData *)data;
+
+@end
+
+#pragma mark - RCTSRWebSocketDelegate
+
+@protocol RCTSRWebSocketDelegate <NSObject>
+
+// message will either be an NSString if the server is using text
+// or NSData if the server is using binary.
+- (void)webSocket:(RCTSRWebSocket *)webSocket didReceiveMessage:(id)message;
+
+@optional
+
+- (void)webSocketDidOpen:(RCTSRWebSocket *)webSocket;
+- (void)webSocket:(RCTSRWebSocket *)webSocket didFailWithError:(NSError *)error;
+- (void)webSocket:(RCTSRWebSocket *)webSocket
+    didCloseWithCode:(NSInteger)code
+              reason:(NSString *)reason
+            wasClean:(BOOL)wasClean;
+- (void)webSocket:(RCTSRWebSocket *)webSocket didReceivePong:(NSData *)pongPayload;
+
+@end
+
+#pragma mark - NSURLRequest (CertificateAdditions)
+
+@interface NSURLRequest (CertificateAdditions)
+
+@property (nonatomic, readonly, copy) NSArray *RCTSR_SSLPinnedCertificates;
+
+@end
+
+#pragma mark - NSMutableURLRequest (CertificateAdditions)
+
+@interface NSMutableURLRequest (CertificateAdditions)
+
+@property (nonatomic, copy) NSArray *RCTSR_SSLPinnedCertificates;
+
+@end
+
+#pragma mark - NSRunLoop (RCTSRWebSocket)
+
+@interface NSRunLoop (RCTSRWebSocket)
+
++ (NSRunLoop *)RCTSR_networkRunLoop;
+
+@end
diff --git a/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m b/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m
new file mode 100644
index 0000000..925596f
--- /dev/null
+++ b/node_modules/react-native/Libraries/WebSocket/RCTSRWebSocket.m
@@ -0,0 +1,1746 @@
+//
+//   Copyright 2012 Square Inc.
+//
+//   Licensed under the Apache License, Version 2.0 (the "License");
+//   you may not use this file except in compliance with the License.
+//   You may obtain a copy of the License at
+//
+//       http://www.apache.org/licenses/LICENSE-2.0
+//
+//   Unless required by applicable law or agreed to in writing, software
+//   distributed under the License is distributed on an "AS IS" BASIS,
+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//   See the License for the specific language governing permissions and
+//   limitations under the License.
+//
+
+#import <React/RCTSRWebSocket.h>
+
+#import <Availability.h>
+
+#import <Security/SecRandom.h>
+
+#import <CommonCrypto/CommonDigest.h>
+#import <React/RCTAssert.h>
+#import <React/RCTLog.h>
+
+typedef NS_ENUM(NSInteger, RCTSROpCode) {
+  RCTSROpCodeTextFrame = 0x1,
+  RCTSROpCodeBinaryFrame = 0x2,
+  // 3-7 reserved.
+  RCTSROpCodeConnectionClose = 0x8,
+  RCTSROpCodePing = 0x9,
+  RCTSROpCodePong = 0xA,
+  // B-F reserved.
+};
+
+typedef struct {
+  BOOL fin;
+  //  BOOL rsv1;
+  //  BOOL rsv2;
+  //  BOOL rsv3;
+  uint8_t opcode;
+  BOOL masked;
+  uint64_t payload_length;
+} frame_header;
+
+static NSString *const RCTSRWebSocketAppendToSecKeyString = @"258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
+
+//#define RCTSR_ENABLE_LOG
+#ifdef RCTSR_ENABLE_LOG
+#define RCTSRLog(format...) RCTLogInfo(format)
+#else
+#define RCTSRLog(...) \
+  do {                \
+  } while (0)
+#endif
+
+// This is a hack, and probably not optimal
+static inline int32_t validate_dispatch_data_partial_string(NSData *data)
+{
+  static const int maxCodepointSize = 3;
+
+  for (int i = 0; i < maxCodepointSize; i++) {
+    NSString *str = [[NSString alloc] initWithBytesNoCopy:(char *)data.bytes
+                                                   length:data.length - i
+                                                 encoding:NSUTF8StringEncoding
+                                             freeWhenDone:NO];
+    if (str) {
+      return (int32_t)data.length - i;
+    }
+  }
+
+  return -1;
+}
+
+@interface NSData (RCTSRWebSocket)
+
+@property (nonatomic, readonly, copy) NSString *stringBySHA1ThenBase64Encoding;
+
+@end
+
+@interface NSString (RCTSRWebSocket)
+
+@property (nonatomic, readonly, copy) NSString *stringBySHA1ThenBase64Encoding;
+
+@end
+
+@interface NSURL (RCTSRWebSocket)
+
+// The origin isn't really applicable for a native application.
+// So instead, just map ws -> http and wss -> https.
+@property (nonatomic, readonly, copy) NSString *RCTSR_origin;
+
+@end
+
+@interface _RCTSRRunLoopThread : NSThread
+
+@property (nonatomic, readonly) NSRunLoop *runLoop;
+
+@end
+
+static NSString *newSHA1String(const char *bytes, size_t length)
+{
+  uint8_t md[CC_SHA1_DIGEST_LENGTH];
+
+  assert(length >= 0);
+  assert(length <= UINT32_MAX);
+  CC_SHA1(bytes, (CC_LONG)length, md);
+
+  NSData *data = [NSData dataWithBytes:md length:CC_SHA1_DIGEST_LENGTH];
+  return [data base64EncodedStringWithOptions:0];
+}
+
+@implementation NSData (RCTSRWebSocket)
+
+- (NSString *)stringBySHA1ThenBase64Encoding
+{
+  return newSHA1String(self.bytes, self.length);
+}
+
+@end
+
+@implementation NSString (RCTSRWebSocket)
+
+- (NSString *)stringBySHA1ThenBase64Encoding
+{
+  return newSHA1String(self.UTF8String, self.length);
+}
+
+@end
+
+NSString *const RCTSRWebSocketErrorDomain = @"RCTSRWebSocketErrorDomain";
+NSString *const RCTSRHTTPResponseErrorKey = @"HTTPResponseStatusCode";
+
+// Returns number of bytes consumed. Returning 0 means you didn't match.
+// Sends bytes to callback handler;
+typedef size_t (^stream_scanner)(NSData *collected_data);
+
+typedef void (^data_callback)(RCTSRWebSocket *webSocket, NSData *data);
+
+@interface RCTSRIOConsumer : NSObject
+
+@property (nonatomic, copy, readonly) stream_scanner consumer;
+@property (nonatomic, copy, readonly) data_callback handler;
+@property (nonatomic, assign) size_t bytesNeeded;
+@property (nonatomic, assign, readonly) BOOL readToCurrentFrame;
+@property (nonatomic, assign, readonly) BOOL unmaskBytes;
+
+@end
+
+// This class is not thread-safe, and is expected to always be run on the same queue.
+@interface RCTSRIOConsumerPool : NSObject
+
+- (instancetype)initWithBufferCapacity:(NSUInteger)poolSize NS_DESIGNATED_INITIALIZER;
+
+- (RCTSRIOConsumer *)consumerWithScanner:(stream_scanner)scanner
+                                 handler:(data_callback)handler
+                             bytesNeeded:(size_t)bytesNeeded
+                      readToCurrentFrame:(BOOL)readToCurrentFrame
+                             unmaskBytes:(BOOL)unmaskBytes;
+- (void)returnConsumer:(RCTSRIOConsumer *)consumer;
+
+@end
+
+@interface RCTSRWebSocket () <NSStreamDelegate>
+
+@property (nonatomic, assign) RCTSRReadyState readyState;
+
+@property (nonatomic, strong) NSOperationQueue *delegateOperationQueue;
+@property (nonatomic, strong) dispatch_queue_t delegateDispatchQueue;
+
+@end
+
+@implementation RCTSRWebSocket {
+  NSInteger _webSocketVersion;
+
+  NSOperationQueue *_delegateOperationQueue;
+  dispatch_queue_t _delegateDispatchQueue;
+
+  dispatch_queue_t _workQueue;
+  NSMutableArray<RCTSRIOConsumer *> *_consumers;
+
+  NSInputStream *_inputStream;
+  NSOutputStream *_outputStream;
+
+  NSMutableData *_readBuffer;
+  NSUInteger _readBufferOffset;
+
+  NSMutableData *_outputBuffer;
+  NSUInteger _outputBufferOffset;
+
+  uint8_t _currentFrameOpcode;
+  size_t _currentFrameCount;
+  size_t _readOpCount;
+  uint32_t _currentStringScanPosition;
+  NSMutableData *_currentFrameData;
+
+  NSString *_closeReason;
+
+  NSString *_secKey;
+
+  BOOL _pinnedCertFound;
+
+  uint8_t _currentReadMaskKey[4];
+  size_t _currentReadMaskOffset;
+
+  BOOL _consumerStopped;
+
+  BOOL _closeWhenFinishedWriting;
+  BOOL _failed;
+
+  BOOL _secure;
+  NSURLRequest *_urlRequest;
+
+  CFHTTPMessageRef _receivedHTTPHeaders;
+
+  BOOL _sentClose;
+  BOOL _didFail;
+  int _closeCode;
+
+  BOOL _isPumping;
+
+  BOOL _cleanupScheduled;
+
+  NSMutableSet<NSArray *> *_scheduledRunloops;
+
+  // We use this to retain ourselves.
+  __strong RCTSRWebSocket *_selfRetain;
+
+  NSArray<NSString *> *_requestedProtocols;
+  RCTSRIOConsumerPool *_consumerPool;
+}
+
+- (instancetype)initWithURLRequest:(NSURLRequest *)request protocols:(NSArray<NSString *> *)protocols
+{
+  RCTAssertParam(request);
+
+  if ((self = [super init])) {
+    _url = request.URL;
+    _urlRequest = request;
+
+    _requestedProtocols = [protocols copy];
+
+    [self _RCTSR_commonInit];
+  }
+  return self;
+}
+
+RCT_NOT_IMPLEMENTED(-(instancetype)init)
+
+- (instancetype)initWithURLRequest:(NSURLRequest *)request
+{
+  return [self initWithURLRequest:request protocols:nil];
+}
+
+- (instancetype)initWithURL:(NSURL *)URL
+{
+  return [self initWithURL:URL protocols:nil];
+}
+
+- (instancetype)initWithURL:(NSURL *)URL protocols:(NSArray<NSString *> *)protocols
+{
+  NSMutableURLRequest *request;
+  if (URL) {
+    // Build a mutable request so we can fill the cookie header.
+    request = [NSMutableURLRequest requestWithURL:URL];
+
+    // We load cookies from sharedHTTPCookieStorage (shared with XHR and
+    // fetch). To get HTTPS-only cookies for wss URLs, replace wss with https
+    // in the URL.
+    NSURLComponents *components = [NSURLComponents componentsWithURL:URL resolvingAgainstBaseURL:true];
+    if ([components.scheme isEqualToString:@"wss"]) {
+      components.scheme = @"https";
+    }
+
+    // Load and set the cookie header.
+    NSArray<NSHTTPCookie *> *cookies = [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookiesForURL:components.URL];
+    [request setAllHTTPHeaderFields:[NSHTTPCookie requestHeaderFieldsWithCookies:cookies]];
+  }
+  return [self initWithURLRequest:request protocols:protocols];
+}
+
+- (void)_RCTSR_commonInit
+{
+  NSString *scheme = _url.scheme.lowercaseString;
+  assert(
+      [scheme isEqualToString:@"ws"] || [scheme isEqualToString:@"http"] || [scheme isEqualToString:@"wss"] ||
+      [scheme isEqualToString:@"https"]);
+
+  if ([scheme isEqualToString:@"wss"] || [scheme isEqualToString:@"https"]) {
+    _secure = YES;
+  }
+
+  _readyState = RCTSR_CONNECTING;
+  _consumerStopped = YES;
+  _webSocketVersion = 13;
+
+  _workQueue = dispatch_queue_create("com.facebook.react.SRWebSocket", DISPATCH_QUEUE_SERIAL);
+
+  // Going to set a specific on the queue so we can validate we're on the work queue
+  dispatch_queue_set_specific(_workQueue, (__bridge void *)self, (__bridge void *)_workQueue, NULL);
+
+  _delegateDispatchQueue = dispatch_get_main_queue();
+
+  _readBuffer = [NSMutableData new];
+  _outputBuffer = [NSMutableData new];
+
+  _currentFrameData = [NSMutableData new];
+
+  _consumers = [NSMutableArray new];
+
+  _consumerPool = [RCTSRIOConsumerPool new];
+
+  _scheduledRunloops = [NSMutableSet new];
+
+  [self _initializeStreams];
+
+  // default handlers
+}
+
+- (void)assertOnWorkQueue
+{
+  assert(dispatch_get_specific((__bridge void *)self) == (__bridge void *)_workQueue);
+}
+
+- (void)dealloc
+{
+  _inputStream.delegate = nil;
+  _outputStream.delegate = nil;
+
+  [_inputStream close];
+  [_outputStream close];
+
+  if (_receivedHTTPHeaders) {
+    CFRelease(_receivedHTTPHeaders);
+    _receivedHTTPHeaders = NULL;
+  }
+}
+
+#ifndef NDEBUG
+
+- (void)setReadyState:(RCTSRReadyState)aReadyState
+{
+  [self willChangeValueForKey:@"readyState"];
+  assert(aReadyState > _readyState);
+  _readyState = aReadyState;
+  [self didChangeValueForKey:@"readyState"];
+}
+
+#endif
+
+- (void)open
+{
+  assert(_url);
+  RCTAssert(_readyState == RCTSR_CONNECTING, @"Cannot call -(void)open on RCTSRWebSocket more than once");
+
+  _selfRetain = self;
+
+  [self _connect];
+}
+
+// Calls block on delegate queue
+- (void)_performDelegateBlock:(dispatch_block_t)block
+{
+  if (_delegateOperationQueue) {
+    [_delegateOperationQueue addOperationWithBlock:block];
+  } else {
+    assert(_delegateDispatchQueue);
+    dispatch_async(_delegateDispatchQueue, block);
+  }
+}
+
+- (void)setDelegateDispatchQueue:(dispatch_queue_t)queue
+{
+  _delegateDispatchQueue = queue;
+}
+
+- (BOOL)_checkHandshake:(CFHTTPMessageRef)httpMessage
+{
+  NSString *acceptHeader =
+      CFBridgingRelease(CFHTTPMessageCopyHeaderFieldValue(httpMessage, CFSTR("Sec-WebSocket-Accept")));
+
+  if (acceptHeader == nil) {
+    return NO;
+  }
+
+  NSString *concattedString = [_secKey stringByAppendingString:RCTSRWebSocketAppendToSecKeyString];
+  NSString *expectedAccept = [concattedString stringBySHA1ThenBase64Encoding];
+
+  return [acceptHeader isEqualToString:expectedAccept];
+}
+
+- (void)_HTTPHeadersDidFinish
+{
+  NSInteger responseCode = CFHTTPMessageGetResponseStatusCode(_receivedHTTPHeaders);
+
+  if (responseCode >= 400) {
+    RCTSRLog(@"Request failed with response code %ld", responseCode);
+    [self _failWithError:[NSError errorWithDomain:RCTSRWebSocketErrorDomain
+                                             code:2132
+                                         userInfo:@{
+                                           NSLocalizedDescriptionKey :
+                                               [NSString stringWithFormat:@"received bad response code from server %ld",
+                                                                          (long)responseCode],
+                                           RCTSRHTTPResponseErrorKey : @(responseCode)
+                                         }]];
+    return;
+  }
+
+  if (![self _checkHandshake:_receivedHTTPHeaders]) {
+    [self _failWithError:[NSError errorWithDomain:RCTSRWebSocketErrorDomain
+                                             code:2133
+                                         userInfo:@{
+                                           NSLocalizedDescriptionKey :
+                                               [NSString stringWithFormat:@"Invalid Sec-WebSocket-Accept response"]
+                                         }]];
+    return;
+  }
+
+  NSString *negotiatedProtocol =
+      CFBridgingRelease(CFHTTPMessageCopyHeaderFieldValue(_receivedHTTPHeaders, CFSTR("Sec-WebSocket-Protocol")));
+  if (negotiatedProtocol) {
+    // Make sure we requested the protocol
+    if ([_requestedProtocols indexOfObject:negotiatedProtocol] == NSNotFound) {
+      [self _failWithError:
+                [NSError errorWithDomain:RCTSRWebSocketErrorDomain
+                                    code:2133
+                                userInfo:@{
+                                  NSLocalizedDescriptionKey : [NSString
+                                      stringWithFormat:@"Server specified Sec-WebSocket-Protocol that wasn't requested"]
+                                }]];
+      return;
+    }
+
+    _protocol = negotiatedProtocol;
+  }
+
+  self.readyState = RCTSR_OPEN;
+
+  if (!_didFail) {
+    [self _readFrameNew];
+  }
+
+  [self _performDelegateBlock:^{
+    if ([self.delegate respondsToSelector:@selector(webSocketDidOpen:)]) {
+      [self.delegate webSocketDidOpen:self];
+    };
+  }];
+}
+
+- (void)_readHTTPHeader
+{
+  if (_receivedHTTPHeaders == NULL) {
+    _receivedHTTPHeaders = CFHTTPMessageCreateEmpty(NULL, NO);
+  }
+
+  [self _readUntilHeaderCompleteWithCallback:^(RCTSRWebSocket *socket, NSData *data) {
+    CFHTTPMessageAppendBytes(self->_receivedHTTPHeaders, (const UInt8 *)data.bytes, data.length);
+
+    if (CFHTTPMessageIsHeaderComplete(self->_receivedHTTPHeaders)) {
+      RCTSRLog(
+          @"Finished reading headers %@", CFBridgingRelease(CFHTTPMessageCopyAllHeaderFields(_receivedHTTPHeaders)));
+      [socket _HTTPHeadersDidFinish];
+    } else {
+      [socket _readHTTPHeader];
+    }
+  }];
+}
+
+- (void)didConnect
+{
+  RCTSRLog(@"Connected");
+  CFHTTPMessageRef request = CFHTTPMessageCreateRequest(NULL, CFSTR("GET"), (__bridge CFURLRef)_url, kCFHTTPVersion1_1);
+
+  // Set host first so it defaults
+  CFHTTPMessageSetHeaderFieldValue(
+      request,
+      CFSTR("Host"),
+      (__bridge CFStringRef)(_url.port ? [NSString stringWithFormat:@"%@:%@", _url.host, _url.port] : _url.host));
+
+  NSMutableData *keyBytes = [[NSMutableData alloc] initWithLength:16];
+  int result __unused = SecRandomCopyBytes(kSecRandomDefault, keyBytes.length, keyBytes.mutableBytes);
+  assert(result == 0);
+  _secKey = [keyBytes base64EncodedStringWithOptions:0];
+  assert([_secKey length] == 24);
+
+  CFHTTPMessageSetHeaderFieldValue(request, CFSTR("Upgrade"), CFSTR("websocket"));
+  CFHTTPMessageSetHeaderFieldValue(request, CFSTR("Connection"), CFSTR("Upgrade"));
+  CFHTTPMessageSetHeaderFieldValue(request, CFSTR("Sec-WebSocket-Key"), (__bridge CFStringRef)_secKey);
+  CFHTTPMessageSetHeaderFieldValue(
+      request,
+      CFSTR("Sec-WebSocket-Version"),
+      (__bridge CFStringRef)[NSString stringWithFormat:@"%ld", (long)_webSocketVersion]);
+
+  CFHTTPMessageSetHeaderFieldValue(request, CFSTR("Origin"), (__bridge CFStringRef)_url.RCTSR_origin);
+
+  if (_requestedProtocols && _requestedProtocols.count > 0) {
+    CFHTTPMessageSetHeaderFieldValue(
+        request,
+        CFSTR("Sec-WebSocket-Protocol"),
+        (__bridge CFStringRef)[_requestedProtocols componentsJoinedByString:@", "]);
+  }
+
+  [_urlRequest.allHTTPHeaderFields enumerateKeysAndObjectsUsingBlock:^(id key, id obj, BOOL *stop) {
+    CFHTTPMessageSetHeaderFieldValue(request, (__bridge CFStringRef)key, (__bridge CFStringRef)obj);
+  }];
+
+  NSData *message = CFBridgingRelease(CFHTTPMessageCopySerializedMessage(request));
+
+  CFRelease(request);
+
+  [self _writeData:message];
+  [self _readHTTPHeader];
+}
+
+- (void)_initializeStreams
+{
+  assert(_url.port.unsignedIntValue <= UINT32_MAX);
+  uint32_t port = _url.port.unsignedIntValue;
+  if (port == 0) {
+    if (!_secure) {
+      port = 80;
+    } else {
+      port = 443;
+    }
+  }
+  NSString *host = _url.host;
+
+  CFReadStreamRef readStream = NULL;
+  CFWriteStreamRef writeStream = NULL;
+
+  CFStreamCreatePairWithSocketToHost(NULL, (__bridge CFStringRef)host, port, &readStream, &writeStream);
+
+  _outputStream = CFBridgingRelease(writeStream);
+  _inputStream = CFBridgingRelease(readStream);
+
+  if (_secure) {
+    NSMutableDictionary<NSString *, id> *SSLOptions = [NSMutableDictionary new];
+
+    [_outputStream setProperty:(__bridge id)kCFStreamSocketSecurityLevelNegotiatedSSL
+                        forKey:(__bridge id)kCFStreamPropertySocketSecurityLevel];
+
+    // If we're using pinned certs, don't validate the certificate chain
+    if (_urlRequest.RCTSR_SSLPinnedCertificates.count) {
+      [SSLOptions setValue:@NO forKey:(__bridge id)kCFStreamSSLValidatesCertificateChain];
+    }
+
+#if DEBUG
+    [SSLOptions setValue:@NO forKey:(__bridge id)kCFStreamSSLValidatesCertificateChain];
+    RCTLogInfo(@"SocketRocket: In debug mode.  Allowing connection to any root cert");
+#endif
+
+    [_outputStream setProperty:SSLOptions forKey:(__bridge id)kCFStreamPropertySSLSettings];
+  }
+
+  _inputStream.delegate = self;
+  _outputStream.delegate = self;
+}
+
+- (void)_connect
+{
+  if (!_scheduledRunloops.count) {
+    [self scheduleInRunLoop:[NSRunLoop RCTSR_networkRunLoop] forMode:NSDefaultRunLoopMode];
+  }
+
+  [_outputStream open];
+  [_inputStream open];
+}
+
+- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode
+{
+  [_outputStream scheduleInRunLoop:aRunLoop forMode:mode];
+  [_inputStream scheduleInRunLoop:aRunLoop forMode:mode];
+
+  [_scheduledRunloops addObject:@[ aRunLoop, mode ]];
+}
+
+- (void)unscheduleFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode
+{
+  [_outputStream removeFromRunLoop:aRunLoop forMode:mode];
+  [_inputStream removeFromRunLoop:aRunLoop forMode:mode];
+
+  [_scheduledRunloops removeObject:@[ aRunLoop, mode ]];
+}
+
+- (void)close
+{
+  [self closeWithCode:RCTSRStatusCodeNormal reason:nil];
+}
+
+- (void)closeWithCode:(NSInteger)code reason:(NSString *)reason
+{
+  assert(code);
+  dispatch_async(_workQueue, ^{
+    if (self.readyState == RCTSR_CLOSING || self.readyState == RCTSR_CLOSED) {
+      return;
+    }
+
+    BOOL wasConnecting = self.readyState == RCTSR_CONNECTING;
+
+    self.readyState = RCTSR_CLOSING;
+
+    RCTSRLog(@"Closing with code %ld reason %@", code, reason);
+
+    if (wasConnecting) {
+      [self _disconnect];
+      return;
+    }
+
+    size_t maxMsgSize = [reason maximumLengthOfBytesUsingEncoding:NSUTF8StringEncoding];
+    NSMutableData *mutablePayload = [[NSMutableData alloc] initWithLength:sizeof(uint16_t) + maxMsgSize];
+    NSData *payload = mutablePayload;
+
+    ((uint16_t *)mutablePayload.mutableBytes)[0] = NSSwapBigShortToHost(code);
+
+    if (reason) {
+      NSRange remainingRange = {0};
+
+      NSUInteger usedLength = 0;
+
+      BOOL success __unused = [reason getBytes:(char *)mutablePayload.mutableBytes + sizeof(uint16_t)
+                                     maxLength:payload.length - sizeof(uint16_t)
+                                    usedLength:&usedLength
+                                      encoding:NSUTF8StringEncoding
+                                       options:NSStringEncodingConversionExternalRepresentation
+                                         range:NSMakeRange(0, reason.length)
+                                remainingRange:&remainingRange];
+
+      assert(success);
+      assert(remainingRange.length == 0);
+
+      if (usedLength != maxMsgSize) {
+        payload = [payload subdataWithRange:NSMakeRange(0, usedLength + sizeof(uint16_t))];
+      }
+    }
+
+    [self _sendFrameWithOpcode:RCTSROpCodeConnectionClose data:payload];
+  });
+}
+
+- (void)_closeWithProtocolError:(NSString *)message
+{
+  // Need to shunt this on the _callbackQueue first to see if they received any messages
+  [self _performDelegateBlock:^{
+    [self closeWithCode:RCTSRStatusCodeProtocolError reason:message];
+    dispatch_async(self->_workQueue, ^{
+      [self _disconnect];
+    });
+  }];
+}
+
+- (void)_failWithError:(NSError *)error
+{
+  dispatch_async(_workQueue, ^{
+    if (self.readyState != RCTSR_CLOSED) {
+      self->_failed = YES;
+      [self _performDelegateBlock:^{
+        if ([self.delegate respondsToSelector:@selector(webSocket:didFailWithError:)]) {
+          [self.delegate webSocket:self didFailWithError:error];
+        }
+      }];
+
+      self.readyState = RCTSR_CLOSED;
+
+      RCTSRLog(@"Failing with error %@", error.localizedDescription);
+
+      [self _disconnect];
+      [self _scheduleCleanup];
+    }
+  });
+}
+
+- (void)_writeData:(NSData *)data
+{
+  [self assertOnWorkQueue];
+
+  if (_closeWhenFinishedWriting) {
+    return;
+  }
+  [_outputBuffer appendData:data];
+  [self _pumpWriting];
+}
+
+- (void)send:(id)data
+{
+  RCTAssert(self.readyState != RCTSR_CONNECTING, @"Invalid State: Cannot call send: until connection is open");
+  if (nil == data) {
+    return;
+  }
+  // TODO: maybe not copy this for performance
+  data = [data copy];
+  dispatch_async(_workQueue, ^{
+    if ([data isKindOfClass:[NSString class]]) {
+      [self _sendFrameWithOpcode:RCTSROpCodeTextFrame data:[(NSString *)data dataUsingEncoding:NSUTF8StringEncoding]];
+    } else if ([data isKindOfClass:[NSData class]]) {
+      [self _sendFrameWithOpcode:RCTSROpCodeBinaryFrame data:data];
+    } else {
+      assert(NO);
+    }
+  });
+}
+
+- (void)sendPing:(NSData *)data
+{
+  RCTAssert(self.readyState == RCTSR_OPEN, @"Invalid State: Cannot call send: until connection is open");
+  // TODO: maybe not copy this for performance
+  data = [data copy] ?: [NSData data]; // It's okay for a ping to be empty
+  dispatch_async(_workQueue, ^{
+    [self _sendFrameWithOpcode:RCTSROpCodePing data:data];
+  });
+}
+
+- (void)handlePing:(NSData *)pingData
+{
+  // Need to pingpong this off _callbackQueue first to make sure messages happen in order
+  [self _performDelegateBlock:^{
+    dispatch_async(self->_workQueue, ^{
+      [self _sendFrameWithOpcode:RCTSROpCodePong data:pingData];
+    });
+  }];
+}
+
+- (void)handlePong:(NSData *)pongData
+{
+  RCTSRLog(@"Received pong");
+  [self _performDelegateBlock:^{
+    if ([self.delegate respondsToSelector:@selector(webSocket:didReceivePong:)]) {
+      [self.delegate webSocket:self didReceivePong:pongData];
+    }
+  }];
+}
+
+- (void)_handleMessage:(id)message
+{
+  RCTSRLog(@"Received message");
+  [self _performDelegateBlock:^{
+    [self.delegate webSocket:self didReceiveMessage:message];
+  }];
+}
+
+static inline BOOL closeCodeIsValid(int closeCode)
+{
+  if (closeCode < 1000) {
+    return NO;
+  }
+
+  if (closeCode >= 1000 && closeCode <= 1011) {
+    if (closeCode == 1004 || closeCode == 1005 || closeCode == 1006) {
+      return NO;
+    }
+    return YES;
+  }
+
+  if (closeCode >= 3000 && closeCode <= 3999) {
+    return YES;
+  }
+
+  if (closeCode >= 4000 && closeCode <= 4999) {
+    return YES;
+  }
+
+  return NO;
+}
+
+//  Note from RFC:
+//
+//  If there is a body, the first two
+//  bytes of the body MUST be a 2-byte unsigned integer (in network byte
+//  order) representing a status code with value /code/ defined in
+//  Section 7.4.  Following the 2-byte integer the body MAY contain UTF-8
+//  encoded data with value /reason/, the interpretation of which is not
+//  defined by this specification.
+
+- (void)handleCloseWithData:(NSData *)data
+{
+  size_t dataSize = data.length;
+  __block uint16_t closeCode = 0;
+
+  RCTSRLog(@"Received close frame");
+
+  if (dataSize == 1) {
+    // TODO: handle error
+    [self _closeWithProtocolError:@"Payload for close must be larger than 2 bytes"];
+    return;
+  } else if (dataSize >= 2) {
+    [data getBytes:&closeCode length:sizeof(closeCode)];
+    _closeCode = NSSwapBigShortToHost(closeCode);
+    if (!closeCodeIsValid(_closeCode)) {
+      [self _closeWithProtocolError:[NSString stringWithFormat:@"Cannot have close code of %d", _closeCode]];
+      return;
+    }
+    if (dataSize > 2) {
+      _closeReason = [[NSString alloc] initWithData:[data subdataWithRange:NSMakeRange(2, dataSize - 2)]
+                                           encoding:NSUTF8StringEncoding];
+      if (!_closeReason) {
+        [self _closeWithProtocolError:@"Close reason MUST be valid UTF-8"];
+        return;
+      }
+    }
+  } else {
+    _closeCode = RCTSRStatusNoStatusReceived;
+  }
+
+  [self assertOnWorkQueue];
+
+  if (self.readyState == RCTSR_OPEN) {
+    [self closeWithCode:1000 reason:nil];
+  }
+  dispatch_async(_workQueue, ^{
+    [self _disconnect];
+  });
+}
+
+- (void)_disconnect
+{
+  [self assertOnWorkQueue];
+  RCTSRLog(@"Trying to disconnect");
+  _closeWhenFinishedWriting = YES;
+  [self _pumpWriting];
+}
+
+- (void)_handleFrameWithData:(NSData *)frameData opCode:(NSInteger)opcode
+{
+  // copy frameData before handling,
+  // to avoid concurrent updates to the value at the pointer
+  frameData = [frameData copy];
+
+  // Check that the current data is valid UTF8
+
+  BOOL isControlFrame =
+      (opcode == RCTSROpCodePing || opcode == RCTSROpCodePong || opcode == RCTSROpCodeConnectionClose);
+  if (!isControlFrame) {
+    [self _readFrameNew];
+  } else {
+    dispatch_async(_workQueue, ^{
+      [self _readFrameContinue];
+    });
+  }
+
+  switch (opcode) {
+    case RCTSROpCodeTextFrame: {
+      NSString *str = [[NSString alloc] initWithData:frameData encoding:NSUTF8StringEncoding];
+      if (str == nil && frameData) {
+        [self closeWithCode:RCTSRStatusCodeInvalidUTF8 reason:@"Text frames must be valid UTF-8"];
+        dispatch_async(_workQueue, ^{
+          [self _disconnect];
+        });
+
+        return;
+      }
+      [self _handleMessage:str];
+      break;
+    }
+    case RCTSROpCodeBinaryFrame:
+      [self _handleMessage:[frameData copy]];
+      break;
+    case RCTSROpCodeConnectionClose:
+      [self handleCloseWithData:frameData];
+      break;
+    case RCTSROpCodePing:
+      [self handlePing:frameData];
+      break;
+    case RCTSROpCodePong:
+      [self handlePong:frameData];
+      break;
+    default:
+      [self _closeWithProtocolError:[NSString stringWithFormat:@"Unknown opcode %ld", (long)opcode]];
+      // TODO: Handle invalid opcode
+      break;
+  }
+}
+
+- (void)_handleFrameHeader:(frame_header)frame_header curData:(NSData *)curData
+{
+  assert(frame_header.opcode != 0);
+
+  if (self.readyState != RCTSR_OPEN) {
+    return;
+  }
+
+  BOOL isControlFrame =
+      (frame_header.opcode == RCTSROpCodePing || frame_header.opcode == RCTSROpCodePong ||
+       frame_header.opcode == RCTSROpCodeConnectionClose);
+
+  if (isControlFrame && !frame_header.fin) {
+    [self _closeWithProtocolError:@"Fragmented control frames not allowed"];
+    return;
+  }
+
+  if (isControlFrame && frame_header.payload_length >= 126) {
+    [self _closeWithProtocolError:@"Control frames cannot have payloads larger than 126 bytes"];
+    return;
+  }
+
+  if (!isControlFrame) {
+    _currentFrameOpcode = frame_header.opcode;
+    _currentFrameCount += 1;
+  }
+
+  if (frame_header.payload_length == 0) {
+    if (isControlFrame) {
+      [self _handleFrameWithData:curData opCode:frame_header.opcode];
+    } else {
+      if (frame_header.fin) {
+        [self _handleFrameWithData:_currentFrameData opCode:frame_header.opcode];
+      } else {
+        // TODO: add assert that opcode is not a control;
+        [self _readFrameContinue];
+      }
+    }
+  } else {
+    assert(frame_header.payload_length <= SIZE_T_MAX);
+    [self _addConsumerWithDataLength:(size_t)frame_header.payload_length
+                            callback:^(RCTSRWebSocket *socket, NSData *newData) {
+                              if (isControlFrame) {
+                                [socket _handleFrameWithData:newData opCode:frame_header.opcode];
+                              } else {
+                                if (frame_header.fin) {
+                                  [socket _handleFrameWithData:socket->_currentFrameData opCode:frame_header.opcode];
+                                } else {
+                                  // TODO: add assert that opcode is not a control;
+                                  [socket _readFrameContinue];
+                                }
+                              }
+                            }
+                  readToCurrentFrame:!isControlFrame
+                         unmaskBytes:frame_header.masked];
+  }
+}
+
+/* From RFC:
+
+ 0                   1                   2                   3
+ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+ +-+-+-+-+-------+-+-------------+-------------------------------+
+ |F|R|R|R| opcode|M| Payload len |    Extended payload length    |
+ |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |
+ |N|V|V|V|       |S|             |   (if payload len==126/127)   |
+ | |1|2|3|       |K|             |                               |
+ +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +
+ |     Extended payload length continued, if payload len == 127  |
+ + - - - - - - - - - - - - - - - +-------------------------------+
+ |                               |Masking-key, if MASK set to 1  |
+ +-------------------------------+-------------------------------+
+ | Masking-key (continued)       |          Payload Data         |
+ +-------------------------------- - - - - - - - - - - - - - - - +
+ :                     Payload Data continued ...                :
+ + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
+ |                     Payload Data continued ...                |
+ +---------------------------------------------------------------+
+ */
+
+static const uint8_t RCTSRFinMask = 0x80;
+static const uint8_t RCTSROpCodeMask = 0x0F;
+static const uint8_t RCTSRRsvMask = 0x70;
+static const uint8_t RCTSRMaskMask = 0x80;
+static const uint8_t RCTSRPayloadLenMask = 0x7F;
+
+- (void)_readFrameContinue
+{
+  assert((_currentFrameCount == 0 && _currentFrameOpcode == 0) || (_currentFrameCount > 0 && _currentFrameOpcode > 0));
+
+  [self
+      _addConsumerWithDataLength:2
+                        callback:^(RCTSRWebSocket *socket, NSData *data) {
+                          __block frame_header header = {0};
+
+                          const uint8_t *headerBuffer = data.bytes;
+                          assert(data.length >= 2);
+
+                          if (headerBuffer[0] & RCTSRRsvMask) {
+                            [socket _closeWithProtocolError:@"Server used RSV bits"];
+                            return;
+                          }
+
+                          uint8_t receivedOpcode = (RCTSROpCodeMask & headerBuffer[0]);
+
+                          BOOL isControlFrame =
+                              (receivedOpcode == RCTSROpCodePing || receivedOpcode == RCTSROpCodePong ||
+                               receivedOpcode == RCTSROpCodeConnectionClose);
+
+                          if (!isControlFrame && receivedOpcode != 0 && socket->_currentFrameCount > 0) {
+                            [socket _closeWithProtocolError:
+                                        @"all data frames after the initial data frame must have opcode 0"];
+                            return;
+                          }
+
+                          if (receivedOpcode == 0 && socket->_currentFrameCount == 0) {
+                            [socket _closeWithProtocolError:@"cannot continue a message"];
+                            return;
+                          }
+
+                          header.opcode = receivedOpcode == 0 ? socket->_currentFrameOpcode : receivedOpcode;
+
+                          header.fin = !!(RCTSRFinMask & headerBuffer[0]);
+
+                          header.masked = !!(RCTSRMaskMask & headerBuffer[1]);
+                          header.payload_length = RCTSRPayloadLenMask & headerBuffer[1];
+
+                          headerBuffer = NULL;
+
+                          if (header.masked) {
+                            [socket _closeWithProtocolError:@"Client must receive unmasked data"];
+                          }
+
+                          size_t extra_bytes_needed = header.masked ? sizeof(self->_currentReadMaskKey) : 0;
+
+                          if (header.payload_length == 126) {
+                            extra_bytes_needed += sizeof(uint16_t);
+                          } else if (header.payload_length == 127) {
+                            extra_bytes_needed += sizeof(uint64_t);
+                          }
+
+                          if (extra_bytes_needed == 0) {
+                            [socket _handleFrameHeader:header curData:socket->_currentFrameData];
+                          } else {
+                            [socket
+                                _addConsumerWithDataLength:extra_bytes_needed
+                                                  callback:^(RCTSRWebSocket *_socket, NSData *_data) {
+                                                    size_t mapped_size __unused = _data.length;
+                                                    const void *mapped_buffer = _data.bytes;
+                                                    size_t offset = 0;
+
+                                                    if (header.payload_length == 126) {
+                                                      assert(mapped_size >= sizeof(uint16_t));
+                                                      uint16_t newLen =
+                                                          NSSwapBigShortToHost(*(uint16_t *)(mapped_buffer));
+                                                      header.payload_length = newLen;
+                                                      offset += sizeof(uint16_t);
+                                                    } else if (header.payload_length == 127) {
+                                                      assert(mapped_size >= sizeof(uint64_t));
+                                                      header.payload_length =
+                                                          NSSwapBigLongLongToHost(*(uint64_t *)(mapped_buffer));
+                                                      offset += sizeof(uint64_t);
+                                                    } else {
+                                                      assert(header.payload_length < 126 && header.payload_length >= 0);
+                                                    }
+
+                                                    if (header.masked) {
+                                                      assert(
+                                                          mapped_size >= sizeof(self->_currentReadMaskOffset) + offset);
+                                                      memcpy(
+                                                          _socket->_currentReadMaskKey,
+                                                          ((uint8_t *)mapped_buffer) + offset,
+                                                          sizeof(_socket->_currentReadMaskKey));
+                                                    }
+
+                                                    [_socket _handleFrameHeader:header
+                                                                        curData:_socket->_currentFrameData];
+                                                  }
+                                        readToCurrentFrame:NO
+                                               unmaskBytes:NO];
+                          }
+                        }
+              readToCurrentFrame:NO
+                     unmaskBytes:NO];
+}
+
+- (void)_readFrameNew
+{
+  dispatch_async(_workQueue, ^{
+    self->_currentFrameData.length = 0;
+
+    self->_currentFrameOpcode = 0;
+    self->_currentFrameCount = 0;
+    self->_readOpCount = 0;
+    self->_currentStringScanPosition = 0;
+
+    [self _readFrameContinue];
+  });
+}
+
+- (void)_pumpWriting
+{
+  [self assertOnWorkQueue];
+
+  NSUInteger dataLength = _outputBuffer.length;
+  if (dataLength - _outputBufferOffset > 0 && _outputStream.hasSpaceAvailable) {
+    NSInteger bytesWritten = [_outputStream write:_outputBuffer.bytes + _outputBufferOffset
+                                        maxLength:dataLength - _outputBufferOffset];
+    if (bytesWritten == -1) {
+      [self _failWithError:[NSError errorWithDomain:RCTSRWebSocketErrorDomain
+                                               code:2145
+                                           userInfo:@{NSLocalizedDescriptionKey : @"Error writing to stream"}]];
+      return;
+    }
+
+    _outputBufferOffset += bytesWritten;
+
+    if (_outputBufferOffset > 4096 && _outputBufferOffset > (_outputBuffer.length >> 1)) {
+      _outputBuffer = [[NSMutableData alloc] initWithBytes:(char *)_outputBuffer.bytes + _outputBufferOffset
+                                                    length:_outputBuffer.length - _outputBufferOffset];
+      _outputBufferOffset = 0;
+    }
+  }
+
+  if (_closeWhenFinishedWriting && _outputBuffer.length - _outputBufferOffset == 0 &&
+      (_inputStream.streamStatus != NSStreamStatusNotOpen && _inputStream.streamStatus != NSStreamStatusClosed) &&
+      !_sentClose) {
+    _sentClose = YES;
+
+    [self _scheduleCleanup];
+
+    if (!_failed) {
+      [self _performDelegateBlock:^{
+        if ([self.delegate respondsToSelector:@selector(webSocket:didCloseWithCode:reason:wasClean:)]) {
+          [self.delegate webSocket:self didCloseWithCode:self->_closeCode reason:self->_closeReason wasClean:YES];
+        }
+      }];
+    }
+  }
+}
+
+- (void)_addConsumerWithScanner:(stream_scanner)consumer callback:(data_callback)callback
+{
+  [self assertOnWorkQueue];
+  [self _addConsumerWithScanner:consumer callback:callback dataLength:0];
+}
+
+- (void)_addConsumerWithDataLength:(size_t)dataLength
+                          callback:(data_callback)callback
+                readToCurrentFrame:(BOOL)readToCurrentFrame
+                       unmaskBytes:(BOOL)unmaskBytes
+{
+  [self assertOnWorkQueue];
+  assert(dataLength);
+
+  [_consumers addObject:[_consumerPool consumerWithScanner:nil
+                                                   handler:callback
+                                               bytesNeeded:dataLength
+                                        readToCurrentFrame:readToCurrentFrame
+                                               unmaskBytes:unmaskBytes]];
+  [self _pumpScanner];
+}
+
+- (void)_addConsumerWithScanner:(stream_scanner)consumer callback:(data_callback)callback dataLength:(size_t)dataLength
+{
+  [self assertOnWorkQueue];
+  [_consumers addObject:[_consumerPool consumerWithScanner:consumer
+                                                   handler:callback
+                                               bytesNeeded:dataLength
+                                        readToCurrentFrame:NO
+                                               unmaskBytes:NO]];
+  [self _pumpScanner];
+}
+
+static const char CRLFCRLFBytes[] = {'\r', '\n', '\r', '\n'};
+
+- (void)_readUntilHeaderCompleteWithCallback:(data_callback)dataHandler
+{
+  [self _readUntilBytes:CRLFCRLFBytes length:sizeof(CRLFCRLFBytes) callback:dataHandler];
+}
+
+- (void)_readUntilBytes:(const void *)bytes length:(size_t)length callback:(data_callback)dataHandler
+{
+  // TODO: optimize so this can continue from where we last searched
+  stream_scanner consumer = ^size_t(NSData *data) {
+    __block size_t found_size = 0;
+    __block size_t match_count = 0;
+
+    size_t size = data.length;
+    const unsigned char *buffer = data.bytes;
+    for (size_t i = 0; i < size; i++) {
+      if (((const unsigned char *)buffer)[i] == ((const unsigned char *)bytes)[match_count]) {
+        match_count += 1;
+        if (match_count == length) {
+          found_size = i + 1;
+          break;
+        }
+      } else {
+        match_count = 0;
+      }
+    }
+    return found_size;
+  };
+  [self _addConsumerWithScanner:consumer callback:dataHandler];
+}
+
+// Returns true if did work
+- (BOOL)_innerPumpScanner
+{
+  BOOL didWork = NO;
+
+  if (self.readyState >= RCTSR_CLOSING) {
+    return didWork;
+  }
+
+  if (!_consumers.count) {
+    return didWork;
+  }
+
+  size_t curSize = _readBuffer.length - _readBufferOffset;
+  if (!curSize) {
+    return didWork;
+  }
+
+  RCTSRIOConsumer *consumer = _consumers[0];
+
+  size_t bytesNeeded = consumer.bytesNeeded;
+
+  size_t foundSize = 0;
+  if (consumer.consumer) {
+    NSData *tempView = [NSData dataWithBytesNoCopy:(char *)_readBuffer.bytes + _readBufferOffset
+                                            length:_readBuffer.length - _readBufferOffset
+                                      freeWhenDone:NO];
+    foundSize = consumer.consumer(tempView);
+  } else {
+    assert(consumer.bytesNeeded);
+    if (curSize >= bytesNeeded) {
+      foundSize = bytesNeeded;
+    } else if (consumer.readToCurrentFrame) {
+      foundSize = curSize;
+    }
+  }
+
+  NSData *slice = nil;
+  if (consumer.readToCurrentFrame || foundSize) {
+    NSRange sliceRange = NSMakeRange(_readBufferOffset, foundSize);
+    slice = [_readBuffer subdataWithRange:sliceRange];
+
+    _readBufferOffset += foundSize;
+
+    if (_readBufferOffset > 4096 && _readBufferOffset > (_readBuffer.length >> 1)) {
+      _readBuffer = [[NSMutableData alloc] initWithBytes:(char *)_readBuffer.bytes + _readBufferOffset
+                                                  length:_readBuffer.length - _readBufferOffset];
+      _readBufferOffset = 0;
+    }
+
+    if (consumer.unmaskBytes) {
+      NSMutableData *mutableSlice = [slice mutableCopy];
+
+      NSUInteger len = mutableSlice.length;
+      uint8_t *bytes = mutableSlice.mutableBytes;
+
+      for (NSUInteger i = 0; i < len; i++) {
+        bytes[i] = bytes[i] ^ _currentReadMaskKey[_currentReadMaskOffset % sizeof(_currentReadMaskKey)];
+        _currentReadMaskOffset += 1;
+      }
+
+      slice = mutableSlice;
+    }
+
+    if (consumer.readToCurrentFrame) {
+      [_currentFrameData appendData:slice];
+
+      _readOpCount += 1;
+
+      if (_currentFrameOpcode == RCTSROpCodeTextFrame) {
+        // Validate UTF8 stuff.
+        size_t currentDataSize = _currentFrameData.length;
+        if (_currentFrameOpcode == RCTSROpCodeTextFrame && currentDataSize > 0) {
+          // TODO: Optimize this.  Don't really have to copy all the data each time
+
+          size_t scanSize = currentDataSize - _currentStringScanPosition;
+
+          NSData *scan_data = [_currentFrameData subdataWithRange:NSMakeRange(_currentStringScanPosition, scanSize)];
+          int32_t valid_utf8_size = validate_dispatch_data_partial_string(scan_data);
+
+          if (valid_utf8_size == -1) {
+            [self closeWithCode:RCTSRStatusCodeInvalidUTF8 reason:@"Text frames must be valid UTF-8"];
+            dispatch_async(_workQueue, ^{
+              [self _disconnect];
+            });
+            return didWork;
+          } else {
+            _currentStringScanPosition += valid_utf8_size;
+          }
+        }
+      }
+
+      consumer.bytesNeeded -= foundSize;
+
+      if (consumer.bytesNeeded == 0) {
+        [_consumers removeObjectAtIndex:0];
+        consumer.handler(self, nil);
+        [_consumerPool returnConsumer:consumer];
+        didWork = YES;
+      }
+    } else if (foundSize) {
+      [_consumers removeObjectAtIndex:0];
+      consumer.handler(self, slice);
+      [_consumerPool returnConsumer:consumer];
+      didWork = YES;
+    }
+  }
+  return didWork;
+}
+
+- (void)_pumpScanner
+{
+  [self assertOnWorkQueue];
+
+  if (!_isPumping) {
+    _isPumping = YES;
+  } else {
+    return;
+  }
+
+  while ([self _innerPumpScanner]) {
+  }
+
+  _isPumping = NO;
+}
+
+//#define NOMASK
+
+static const size_t RCTSRFrameHeaderOverhead = 32;
+
+- (void)_sendFrameWithOpcode:(RCTSROpCode)opcode data:(NSData *)data
+{
+  [self assertOnWorkQueue];
+
+  if (nil == data) {
+    return;
+  }
+
+  size_t payloadLength = [data length];
+
+  NSMutableData *frame = [[NSMutableData alloc] initWithLength:payloadLength + RCTSRFrameHeaderOverhead];
+  if (!frame) {
+    [self closeWithCode:RCTSRStatusCodeMessageTooBig reason:@"Message too big"];
+    return;
+  }
+  uint8_t *frame_buffer = (uint8_t *)frame.mutableBytes;
+
+  // set fin
+  frame_buffer[0] = RCTSRFinMask | opcode;
+
+  BOOL useMask = YES;
+#ifdef NOMASK
+  useMask = NO;
+#endif
+
+  if (useMask) {
+    // set the mask and header
+    frame_buffer[1] |= RCTSRMaskMask;
+  }
+
+  size_t frame_buffer_size = 2;
+
+  const uint8_t *unmasked_payload = (uint8_t *)[data bytes];
+
+  if (payloadLength < 126) {
+    frame_buffer[1] |= payloadLength;
+  } else if (payloadLength <= UINT16_MAX) {
+    frame_buffer[1] |= 126;
+    *((uint16_t *)(frame_buffer + frame_buffer_size)) = NSSwapBigShortToHost((uint16_t)payloadLength);
+    frame_buffer_size += sizeof(uint16_t);
+  } else {
+    frame_buffer[1] |= 127;
+    *((uint64_t *)(frame_buffer + frame_buffer_size)) = NSSwapBigLongLongToHost((uint64_t)payloadLength);
+    frame_buffer_size += sizeof(uint64_t);
+  }
+
+  if (!useMask) {
+    for (size_t i = 0; i < payloadLength; i++) {
+      frame_buffer[frame_buffer_size] = unmasked_payload[i];
+      frame_buffer_size += 1;
+    }
+  } else {
+    uint8_t *mask_key = frame_buffer + frame_buffer_size;
+    int result __unused = SecRandomCopyBytes(kSecRandomDefault, sizeof(uint32_t), (uint8_t *)mask_key);
+    assert(result == 0);
+    frame_buffer_size += sizeof(uint32_t);
+
+    // TODO: could probably optimize this with SIMD
+    for (size_t i = 0; i < payloadLength; i++) {
+      frame_buffer[frame_buffer_size] = unmasked_payload[i] ^ mask_key[i % sizeof(uint32_t)];
+      frame_buffer_size += 1;
+    }
+  }
+
+  assert(frame_buffer_size <= [frame length]);
+  frame.length = frame_buffer_size;
+
+  [self _writeData:frame];
+}
+
+- (void)stream:(NSStream *)aStream handleEvent:(NSStreamEvent)eventCode
+{
+  if (_secure && !_pinnedCertFound &&
+      (eventCode == NSStreamEventHasBytesAvailable || eventCode == NSStreamEventHasSpaceAvailable)) {
+    NSArray *sslCerts = _urlRequest.RCTSR_SSLPinnedCertificates;
+    if (sslCerts) {
+      SecTrustRef secTrust = (__bridge SecTrustRef)[aStream propertyForKey:(__bridge id)kCFStreamPropertySSLPeerTrust];
+      if (secTrust) {
+        NSInteger numCerts = SecTrustGetCertificateCount(secTrust);
+        for (NSInteger i = 0; i < numCerts && !_pinnedCertFound; i++) {
+          SecCertificateRef cert = SecTrustGetCertificateAtIndex(secTrust, i);
+          NSData *certData = CFBridgingRelease(SecCertificateCopyData(cert));
+
+          for (id ref in sslCerts) {
+            SecCertificateRef trustedCert = (__bridge SecCertificateRef)ref;
+            NSData *trustedCertData = CFBridgingRelease(SecCertificateCopyData(trustedCert));
+
+            if ([trustedCertData isEqualToData:certData]) {
+              _pinnedCertFound = YES;
+              break;
+            }
+          }
+        }
+      }
+
+      if (!_pinnedCertFound) {
+        dispatch_async(_workQueue, ^{
+          [self _failWithError:[NSError errorWithDomain:RCTSRWebSocketErrorDomain
+                                                   code:23556
+                                               userInfo:@{
+                                                 NSLocalizedDescriptionKey :
+                                                     [NSString stringWithFormat:@"Invalid server cert"]
+                                               }]];
+        });
+        return;
+      }
+    }
+  }
+
+  // _workQueue cannot be NULL
+  if (!_workQueue) {
+    return;
+  }
+  __weak typeof(self) weakSelf = self;
+  dispatch_async(_workQueue, ^{
+    typeof(self) strongSelf = weakSelf;
+    if (!strongSelf) {
+      return;
+    }
+    [strongSelf safeHandleEvent:eventCode stream:aStream];
+  });
+}
+
+- (void)safeHandleEvent:(NSStreamEvent)eventCode stream:(NSStream *)aStream
+{
+  switch (eventCode) {
+    case NSStreamEventOpenCompleted: {
+      RCTSRLog(@"NSStreamEventOpenCompleted %@", aStream);
+      if (self.readyState >= RCTSR_CLOSING) {
+        return;
+      }
+      assert(self->_readBuffer);
+
+      if (self.readyState == RCTSR_CONNECTING && aStream == self->_inputStream) {
+        [self didConnect];
+      }
+      [self _pumpWriting];
+      [self _pumpScanner];
+      break;
+    }
+
+    case NSStreamEventErrorOccurred: {
+      RCTSRLog(@"NSStreamEventErrorOccurred %@ %@", aStream, [aStream.streamError copy]);
+      // TODO: specify error better!
+      [self _failWithError:aStream.streamError];
+      self->_readBufferOffset = 0;
+      self->_readBuffer.length = 0;
+      break;
+    }
+
+    case NSStreamEventEndEncountered: {
+      [self _pumpScanner];
+      RCTSRLog(@"NSStreamEventEndEncountered %@", aStream);
+      if (aStream.streamError) {
+        [self _failWithError:aStream.streamError];
+      } else {
+        dispatch_async(self->_workQueue, ^{
+          if (self.readyState != RCTSR_CLOSED) {
+            self.readyState = RCTSR_CLOSED;
+            [self _scheduleCleanup];
+          }
+
+          if (!self->_sentClose && !self->_failed) {
+            self->_sentClose = YES;
+            // If we get closed in this state it's probably not clean because we should be sending this when we send
+            // messages
+            [self _performDelegateBlock:^{
+              if ([self.delegate respondsToSelector:@selector(webSocket:didCloseWithCode:reason:wasClean:)]) {
+                [self.delegate webSocket:self
+                        didCloseWithCode:RCTSRStatusCodeGoingAway
+                                  reason:@"Stream end encountered"
+                                wasClean:NO];
+              }
+            }];
+          }
+        });
+      }
+
+      break;
+    }
+
+    case NSStreamEventHasBytesAvailable: {
+      RCTSRLog(@"NSStreamEventHasBytesAvailable %@", aStream);
+      const int bufferSize = 2048;
+      uint8_t buffer[bufferSize];
+
+      while (self->_inputStream.hasBytesAvailable) {
+        NSInteger bytes_read = [self->_inputStream read:buffer maxLength:bufferSize];
+
+        if (bytes_read > 0) {
+          [self->_readBuffer appendBytes:buffer length:bytes_read];
+        } else if (bytes_read < 0) {
+          [self _failWithError:self->_inputStream.streamError];
+        }
+
+        if (bytes_read != bufferSize) {
+          break;
+        }
+      };
+      [self _pumpScanner];
+      break;
+    }
+
+    case NSStreamEventHasSpaceAvailable: {
+      RCTSRLog(@"NSStreamEventHasSpaceAvailable %@", aStream);
+      [self _pumpWriting];
+      break;
+    }
+
+    default:
+      RCTSRLog(@"(default)  %@", aStream);
+      break;
+  }
+}
+
+- (void)_scheduleCleanup
+{
+  if (_cleanupScheduled) {
+    return;
+  }
+
+  _cleanupScheduled = YES;
+
+  // Cleanup NSStream's delegate in the same RunLoop used by the streams themselves:
+  // This way we'll prevent race conditions between handleEvent and SRWebsocket's dealloc
+  NSTimer *timer = [NSTimer timerWithTimeInterval:(0.0f)
+                                           target:self
+                                         selector:@selector(_cleanupSelfReference:)
+                                         userInfo:nil
+                                          repeats:NO];
+  [[NSRunLoop RCTSR_networkRunLoop] addTimer:timer forMode:NSDefaultRunLoopMode];
+}
+
+- (void)_cleanupSelfReference:(NSTimer *)timer
+{
+  // Remove the streams, right now, from the networkRunLoop
+  [_inputStream close];
+  [_outputStream close];
+
+  // Unschedule from RunLoop
+  for (NSArray *runLoop in [_scheduledRunloops copy]) {
+    [self unscheduleFromRunLoop:runLoop[0] forMode:runLoop[1]];
+  }
+
+  // Nuke NSStream's delegate
+  _inputStream.delegate = nil;
+  _outputStream.delegate = nil;
+
+  // Cleanup selfRetain in the same GCD queue as usual
+  dispatch_async(_workQueue, ^{
+    self->_selfRetain = nil;
+  });
+}
+
+@end
+
+@implementation RCTSRIOConsumer
+
+- (void)setupWithScanner:(stream_scanner)scanner
+                 handler:(data_callback)handler
+             bytesNeeded:(size_t)bytesNeeded
+      readToCurrentFrame:(BOOL)readToCurrentFrame
+             unmaskBytes:(BOOL)unmaskBytes
+{
+  _consumer = [scanner copy];
+  _handler = [handler copy];
+  _bytesNeeded = bytesNeeded;
+  _readToCurrentFrame = readToCurrentFrame;
+  _unmaskBytes = unmaskBytes;
+  assert(_consumer || _bytesNeeded);
+}
+
+@end
+
+@implementation RCTSRIOConsumerPool {
+  NSUInteger _poolSize;
+  NSMutableArray<RCTSRIOConsumer *> *_bufferedConsumers;
+}
+
+- (instancetype)initWithBufferCapacity:(NSUInteger)poolSize
+{
+  if ((self = [super init])) {
+    _poolSize = poolSize;
+    _bufferedConsumers = [[NSMutableArray alloc] initWithCapacity:poolSize];
+  }
+  return self;
+}
+
+- (instancetype)init
+{
+  return [self initWithBufferCapacity:8];
+}
+
+- (RCTSRIOConsumer *)consumerWithScanner:(stream_scanner)scanner
+                                 handler:(data_callback)handler
+                             bytesNeeded:(size_t)bytesNeeded
+                      readToCurrentFrame:(BOOL)readToCurrentFrame
+                             unmaskBytes:(BOOL)unmaskBytes
+{
+  RCTSRIOConsumer *consumer = nil;
+  if (_bufferedConsumers.count) {
+    consumer = _bufferedConsumers.lastObject;
+    [_bufferedConsumers removeLastObject];
+  } else {
+    consumer = [RCTSRIOConsumer new];
+  }
+
+  [consumer setupWithScanner:scanner
+                     handler:handler
+                 bytesNeeded:bytesNeeded
+          readToCurrentFrame:readToCurrentFrame
+                 unmaskBytes:unmaskBytes];
+
+  return consumer;
+}
+
+- (void)returnConsumer:(RCTSRIOConsumer *)consumer
+{
+  if (_bufferedConsumers.count < _poolSize) {
+    [_bufferedConsumers addObject:consumer];
+  }
+}
+
+@end
+
+@implementation NSURLRequest (CertificateAdditions)
+
+- (NSArray *)RCTSR_SSLPinnedCertificates
+{
+  return [NSURLProtocol propertyForKey:@"RCTSR_SSLPinnedCertificates" inRequest:self];
+}
+
+@end
+
+@implementation NSMutableURLRequest (CertificateAdditions)
+
+- (NSArray *)RCTSR_SSLPinnedCertificates
+{
+  return [NSURLProtocol propertyForKey:@"RCTSR_SSLPinnedCertificates" inRequest:self];
+}
+
+- (void)setRCTSR_SSLPinnedCertificates:(NSArray *)RCTSR_SSLPinnedCertificates
+{
+  [NSURLProtocol setProperty:RCTSR_SSLPinnedCertificates forKey:@"RCTSR_SSLPinnedCertificates" inRequest:self];
+}
+
+@end
+
+@implementation NSURL (RCTSRWebSocket)
+
+- (NSString *)RCTSR_origin
+{
+  NSString *scheme = self.scheme.lowercaseString;
+
+  if ([scheme isEqualToString:@"wss"]) {
+    scheme = @"https";
+  } else if ([scheme isEqualToString:@"ws"]) {
+    scheme = @"http";
+  }
+
+  int defaultPort = ([scheme isEqualToString:@"https"] ? 443 : [scheme isEqualToString:@"http"] ? 80 : -1);
+  int port = self.port.intValue;
+  if (port > 0 && port != defaultPort) {
+    return [NSString stringWithFormat:@"%@://%@:%d", scheme, self.host, port];
+  } else {
+    return [NSString stringWithFormat:@"%@://%@", scheme, self.host];
+  }
+}
+
+@end
+
+static _RCTSRRunLoopThread *networkThread = nil;
+static NSRunLoop *networkRunLoop = nil;
+
+@implementation NSRunLoop (RCTSRWebSocket)
+
++ (NSRunLoop *)RCTSR_networkRunLoop
+{
+  static dispatch_once_t onceToken;
+  dispatch_once(&onceToken, ^{
+    networkThread = [_RCTSRRunLoopThread new];
+    networkThread.name = @"com.squareup.SocketRocket.NetworkThread";
+    [networkThread start];
+    networkRunLoop = networkThread.runLoop;
+  });
+
+  return networkRunLoop;
+}
+
+@end
+
+@implementation _RCTSRRunLoopThread {
+  dispatch_group_t _waitGroup;
+}
+
+@synthesize runLoop = _runLoop;
+
+- (instancetype)init
+{
+  if ((self = [super init])) {
+    _waitGroup = dispatch_group_create();
+    dispatch_group_enter(_waitGroup);
+  }
+  return self;
+}
+
+- (void)main
+{
+  @autoreleasepool {
+    _runLoop = [NSRunLoop currentRunLoop];
+    dispatch_group_leave(_waitGroup);
+
+    NSTimer *timer = [[NSTimer alloc] initWithFireDate:[NSDate distantFuture]
+                                              interval:0.0
+                                                target:self
+                                              selector:@selector(step)
+                                              userInfo:nil
+                                               repeats:NO];
+    [_runLoop addTimer:timer forMode:NSDefaultRunLoopMode];
+
+    while ([_runLoop runMode:NSDefaultRunLoopMode beforeDate:[NSDate distantFuture]]) {
+    }
+    assert(NO);
+  }
+}
+
+- (void)step
+{
+  // Does nothing
+}
+
+- (NSRunLoop *)runLoop
+{
+  dispatch_group_wait(_waitGroup, DISPATCH_TIME_FOREVER);
+  return _runLoop;
+}
+
+@end
diff --git a/node_modules/react-native/Libraries/YellowBox/YellowBoxDeprecated.js b/node_modules/react-native/Libraries/YellowBox/YellowBoxDeprecated.js
index a0d0d3c..be97a77 100644
--- a/node_modules/react-native/Libraries/YellowBox/YellowBoxDeprecated.js
+++ b/node_modules/react-native/Libraries/YellowBox/YellowBoxDeprecated.js
@@ -12,7 +12,7 @@
 
 import type {IgnorePattern} from '../LogBox/Data/LogBoxData';
 
-const LogBox = require('../LogBox/LogBox').default;
+const LogBox = require('../LogBox/LogBox');
 const React = require('react');
 
 type Props = $ReadOnly<{||}>;
diff --git a/node_modules/react-native/Libraries/vendor/core/ErrorUtils.js b/node_modules/react-native/Libraries/vendor/core/ErrorUtils.js
index 37b0da1..12530c0 100644
--- a/node_modules/react-native/Libraries/vendor/core/ErrorUtils.js
+++ b/node_modules/react-native/Libraries/vendor/core/ErrorUtils.js
@@ -8,7 +8,7 @@
  * @flow strict
  */
 
-import type {ErrorUtilsT} from '@react-native/js-polyfills/error-guard';
+import type {ErrorUtilsT} from '@react-native/polyfills/error-guard';
 
 /**
  * The particular require runtime that we are using looks for a global
diff --git a/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.d.ts b/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.d.ts
index 0365dd0..297b89e 100644
--- a/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.d.ts
+++ b/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.d.ts
@@ -48,7 +48,7 @@ declare class EventSubscriptionVendor {
    * Removes a bulk set of the subscriptions.
    *
    * @param eventType - Optional name of the event type whose
-   *   registered subscriptions to remove, if null remove all subscriptions.
+   *   registered supscriptions to remove, if null remove all subscriptions.
    */
   removeAllSubscriptions(eventType?: string): void;
 
@@ -104,7 +104,7 @@ interface EmitterSubscription extends EventSubscription {
   remove(): void;
 }
 
-export default class EventEmitter {
+export declare class EventEmitter {
   /**
    *
    * @param subscriber - Optional subscriber instance
diff --git a/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js b/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js
index 6bd2025..81ae2c0 100644
--- a/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js
+++ b/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js
@@ -74,15 +74,7 @@ export default class EventEmitter<TEventToArgsMap: {...}>
     listener: (...args: $ElementType<TEventToArgsMap, TEvent>) => mixed,
     context: mixed,
   ): EventSubscription {
-    if (typeof listener !== 'function') {
-      throw new TypeError(
-        'EventEmitter.addListener(...): 2nd argument must be a function.',
-      );
-    }
-    const registrations = allocate<_, _, TEventToArgsMap[TEvent]>(
-      this._registry,
-      eventType,
-    );
+    const registrations = allocate(this._registry, eventType);
     const registration: Registration<$ElementType<TEventToArgsMap, TEvent>> = {
       context,
       listener,
diff --git a/node_modules/react-native/README.md b/node_modules/react-native/README.md
index d7da610..cf73b68 100644
--- a/node_modules/react-native/README.md
+++ b/node_modules/react-native/README.md
@@ -77,7 +77,7 @@ Follow the [Getting Started guide](https://reactnative.dev/docs/getting-started)
 - [Creating a New Application][new-app]
 - [Adding React Native to an Existing Application][existing]
 
-[hello-world]: https://snack.expo.dev/@samples/hello-world
+[hello-world]: https://snack.expo.dev/@hramos/hello,-world!
 [new-app]: https://reactnative.dev/docs/getting-started
 [existing]: https://reactnative.dev/docs/integration-with-existing-apps
 
diff --git a/node_modules/react-native/React-Core.podspec b/node_modules/react-native/React-Core.podspec
index 56b9bc0..d21b50f 100644
--- a/node_modules/react-native/React-Core.podspec
+++ b/node_modules/react-native/React-Core.podspec
@@ -18,11 +18,9 @@ end
 
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
-socket_rocket_version = '0.6.1'
 boost_compiler_flags = '-Wno-documentation'
 
 use_hermes = ENV['USE_HERMES'] == '1'
-use_frameworks = ENV['USE_FRAMEWORKS'] != nil
 
 header_subspecs = {
   'CoreModulesHeaders'          => 'React/CoreModules/**/*.h',
@@ -38,11 +36,6 @@ header_subspecs = {
   'RCTVibrationHeaders'         => 'Libraries/Vibration/*.h',
 }
 
-frameworks_search_paths = []
-frameworks_search_paths << "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-hermes\"" if use_hermes
-frameworks_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon\"" if use_frameworks
-frameworks_search_paths << "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-RCTFabric\"" if use_frameworks
-
 header_search_paths = [
   "$(PODS_TARGET_SRCROOT)/ReactCommon",
   "$(PODS_ROOT)/boost",
@@ -54,10 +47,6 @@ header_search_paths = [
 ].concat(use_hermes ? [
   "$(PODS_ROOT)/Headers/Public/React-hermes",
   "$(PODS_ROOT)/Headers/Public/hermes-engine"
-] : []).concat(use_frameworks ? [
-  "$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core",
-  "$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers"
 ] : []).map{|p| "\"#{p}\""}.join(" ")
 
 Pod::Spec.new do |s|
@@ -66,7 +55,7 @@ Pod::Spec.new do |s|
   s.summary                = "The core of React Native."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.resource_bundle        = { "AccessibilityResources" => ["React/AccessibilityResources/*.lproj"]}
@@ -78,8 +67,9 @@ Pod::Spec.new do |s|
                                "DEFINES_MODULE" => "YES",
                                "GCC_PREPROCESSOR_DEFINITIONS" => "RCT_METRO_PORT=${RCT_METRO_PORT}",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "FRAMEWORK_SEARCH_PATHS" => frameworks_search_paths.join(" ")
-                             }
+                             }.merge!(use_hermes ? {
+                               "FRAMEWORK_SEARCH_PATHS" => "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-hermes\""
+                             } : {})
   s.user_target_xcconfig   = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/Headers/Private/React-Core\""}
   s.default_subspec        = "Default"
 
@@ -126,13 +116,10 @@ Pod::Spec.new do |s|
   end
 
   s.dependency "RCT-Folly", folly_version
-  s.dependency "React-cxxreact"
-  s.dependency "React-perflogger"
-  s.dependency "React-jsi"
-  s.dependency "React-jsiexecutor"
-  s.dependency "React-utils"
-  s.dependency "SocketRocket", socket_rocket_version
-  s.dependency "React-runtimeexecutor"
+  s.dependency "React-cxxreact", version
+  s.dependency "React-perflogger", version
+  s.dependency "React-jsi", version
+  s.dependency "React-jsiexecutor", version
   s.dependency "Yoga"
   s.dependency "glog"
 
diff --git a/node_modules/react-native/React.podspec b/node_modules/react-native/React.podspec
index 0ea4f42..a0de5a6 100644
--- a/node_modules/react-native/React.podspec
+++ b/node_modules/react-native/React.podspec
@@ -35,7 +35,7 @@ Pod::Spec.new do |s|
                              DESC
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.preserve_paths         = "package.json", "LICENSE", "LICENSE-docs"
diff --git a/node_modules/react-native/Libraries/AppDelegate/RCTAppSetupUtils.h b/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.h
similarity index 71%
rename from node_modules/react-native/Libraries/AppDelegate/RCTAppSetupUtils.h
rename to node_modules/react-native/React/AppSetup/RCTAppSetupUtils.h
index 6558a84..06e12d7 100644
--- a/node_modules/react-native/Libraries/AppDelegate/RCTAppSetupUtils.h
+++ b/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.h
@@ -11,7 +11,7 @@
 
 #ifdef __cplusplus
 
-#import <memory>
+#if RCT_NEW_ARCH_ENABLED
 
 #ifndef RCT_USE_HERMES
 #if __has_include(<reacthermes/HermesExecutorFactory.h>)
@@ -27,27 +27,15 @@
 #import <React/JSCExecutorFactory.h>
 #endif
 
-#if RCT_NEW_ARCH_ENABLED
 #import <ReactCommon/RCTTurboModuleManager.h>
 #endif
 
-// Forward declaration to decrease compilation coupling
-namespace facebook::react {
-class RuntimeScheduler;
-}
-
 #if RCT_NEW_ARCH_ENABLED
 RCT_EXTERN id<RCTTurboModule> RCTAppSetupDefaultModuleFromClass(Class moduleClass);
 
 std::unique_ptr<facebook::react::JSExecutorFactory> RCTAppSetupDefaultJsExecutorFactory(
     RCTBridge *bridge,
-    RCTTurboModuleManager *turboModuleManager,
-    std::shared_ptr<facebook::react::RuntimeScheduler> const &runtimeScheduler);
-
-#else
-std::unique_ptr<facebook::react::JSExecutorFactory> RCTAppSetupJsExecutorFactoryForOldArch(
-    RCTBridge *bridge,
-    std::shared_ptr<facebook::react::RuntimeScheduler> const &runtimeScheduler);
+    RCTTurboModuleManager *turboModuleManager);
 #endif
 
 #endif // __cplusplus
diff --git a/node_modules/react-native/Libraries/AppDelegate/RCTAppSetupUtils.mm b/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm
similarity index 71%
rename from node_modules/react-native/Libraries/AppDelegate/RCTAppSetupUtils.mm
rename to node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm
index 419a386..4d58cae 100644
--- a/node_modules/react-native/Libraries/AppDelegate/RCTAppSetupUtils.mm
+++ b/node_modules/react-native/React/AppSetup/RCTAppSetupUtils.mm
@@ -7,10 +7,6 @@
 
 #import "RCTAppSetupUtils.h"
 
-#import <React/RCTJSIExecutorRuntimeInstaller.h>
-#import <react/renderer/runtimescheduler/RuntimeScheduler.h>
-#import <react/renderer/runtimescheduler/RuntimeSchedulerBinding.h>
-
 #if RCT_NEW_ARCH_ENABLED
 // Turbo Module
 #import <React/CoreModulesPlugins.h>
@@ -19,13 +15,12 @@
 #import <React/RCTGIFImageDecoder.h>
 #import <React/RCTHTTPRequestHandler.h>
 #import <React/RCTImageLoader.h>
+#import <React/RCTJSIExecutorRuntimeInstaller.h>
 #import <React/RCTLocalAssetImageLoader.h>
 #import <React/RCTNetworking.h>
 
 // Fabric
 #import <React/RCTFabricSurfaceHostingProxyRootView.h>
-#import <react/renderer/runtimescheduler/RuntimeScheduler.h>
-#import <react/renderer/runtimescheduler/RuntimeSchedulerBinding.h>
 #endif
 
 #ifdef FB_SONARKIT_ENABLED
@@ -101,8 +96,7 @@ void RCTAppSetupPrepareApp(UIApplication *application, BOOL turboModuleEnabled)
 
 std::unique_ptr<facebook::react::JSExecutorFactory> RCTAppSetupDefaultJsExecutorFactory(
     RCTBridge *bridge,
-    RCTTurboModuleManager *turboModuleManager,
-    std::shared_ptr<facebook::react::RuntimeScheduler> const &runtimeScheduler)
+    RCTTurboModuleManager *turboModuleManager)
 {
   // Necessary to allow NativeModules to lookup TurboModules
   [bridge setRCTTurboModuleRegistry:turboModuleManager];
@@ -124,38 +118,13 @@ void RCTAppSetupPrepareApp(UIApplication *application, BOOL turboModuleEnabled)
 #else
   return std::make_unique<facebook::react::JSCExecutorFactory>(
 #endif
-      facebook::react::RCTJSIExecutorRuntimeInstaller(
-          [turboModuleManager, bridge, runtimeScheduler](facebook::jsi::Runtime &runtime) {
-            if (!bridge || !turboModuleManager) {
-              return;
-            }
-            if (runtimeScheduler) {
-              facebook::react::RuntimeSchedulerBinding::createAndInstallIfNeeded(runtime, runtimeScheduler);
-            }
-            facebook::react::RuntimeExecutor syncRuntimeExecutor =
-                [&](std::function<void(facebook::jsi::Runtime & runtime_)> &&callback) { callback(runtime); };
-            [turboModuleManager installJSBindingWithRuntimeExecutor:syncRuntimeExecutor];
-          }));
-}
-
-#else
-
-std::unique_ptr<facebook::react::JSExecutorFactory> RCTAppSetupJsExecutorFactoryForOldArch(
-    RCTBridge *bridge,
-    std::shared_ptr<facebook::react::RuntimeScheduler> const &runtimeScheduler)
-{
-#if RCT_USE_HERMES
-  return std::make_unique<facebook::react::HermesExecutorFactory>(
-#else
-  return std::make_unique<facebook::react::JSCExecutorFactory>(
-#endif
-      facebook::react::RCTJSIExecutorRuntimeInstaller([bridge, runtimeScheduler](facebook::jsi::Runtime &runtime) {
-        if (!bridge) {
+      facebook::react::RCTJSIExecutorRuntimeInstaller([turboModuleManager, bridge](facebook::jsi::Runtime &runtime) {
+        if (!bridge || !turboModuleManager) {
           return;
         }
-        if (runtimeScheduler) {
-          facebook::react::RuntimeSchedulerBinding::createAndInstallIfNeeded(runtime, runtimeScheduler);
-        }
+        facebook::react::RuntimeExecutor syncRuntimeExecutor =
+            [&](std::function<void(facebook::jsi::Runtime & runtime_)> &&callback) { callback(runtime); };
+        [turboModuleManager installJSBindingWithRuntimeExecutor:syncRuntimeExecutor];
       }));
 }
 
diff --git a/node_modules/react-native/React/Base/RCTBridge+Private.h b/node_modules/react-native/React/Base/RCTBridge+Private.h
index fc4639d..8412f10 100644
--- a/node_modules/react-native/React/Base/RCTBridge+Private.h
+++ b/node_modules/react-native/React/Base/RCTBridge+Private.h
@@ -97,7 +97,7 @@ RCT_EXTERN void RCTRegisterModule(Class);
 - (void)registerModuleForFrameUpdates:(id<RCTBridgeModule>)module withModuleData:(RCTModuleData *)moduleData;
 
 /**
- * Dispatch work to a module's queue - this is also supports the fake RCTJSThread
+ * Dispatch work to a module's queue - this is also suports the fake RCTJSThread
  * queue. Exposed for the RCTProfiler
  */
 - (void)dispatchBlock:(dispatch_block_t)block queue:(dispatch_queue_t)queue;
diff --git a/node_modules/react-native/React/Base/RCTBridge.h b/node_modules/react-native/React/Base/RCTBridge.h
index 9df17eb..1373eaa 100644
--- a/node_modules/react-native/React/Base/RCTBridge.h
+++ b/node_modules/react-native/React/Base/RCTBridge.h
@@ -52,10 +52,19 @@ RCT_EXTERN void RCTEnableTurboModule(BOOL enabled);
 RCT_EXTERN BOOL RCTTurboModuleEagerInitEnabled(void);
 RCT_EXTERN void RCTEnableTurboModuleEagerInit(BOOL enabled);
 
+// Turn on TurboModule shared mutex initialization
+RCT_EXTERN BOOL RCTTurboModuleSharedMutexInitEnabled(void);
+RCT_EXTERN void RCTEnableTurboModuleSharedMutexInit(BOOL enabled);
+
 // Turn off TurboModule delegate locking
 RCT_EXTERN BOOL RCTTurboModuleManagerDelegateLockingDisabled(void);
 RCT_EXTERN void RCTDisableTurboModuleManagerDelegateLocking(BOOL enabled);
 
+// Turn off validAttribute: entries inside ViewConfigs for events
+// TODO(109509380): Remove this gating
+RCT_EXTERN BOOL RCTViewConfigEventValidAttributesDisabled(void);
+RCT_EXTERN void RCTDisableViewConfigEventValidAttributes(BOOL disabled);
+
 typedef enum {
   kRCTGlobalScope,
   kRCTGlobalScopeUsingRetainJSCallback,
@@ -75,7 +84,7 @@ RCT_EXTERN void RCTSetTurboModuleCleanupMode(RCTTurboModuleCleanupMode mode);
  *
  * All the interaction with the JavaScript context should be done using the bridge
  * instance of the RCTBridgeModules. Modules will be automatically instantiated
- * using the default constructor, but you can optionally pass in an array of
+ * using the default contructor, but you can optionally pass in an array of
  * pre-initialized module instances if they require additional init parameters
  * or configuration.
  */
@@ -87,7 +96,7 @@ RCT_EXTERN void RCTSetTurboModuleCleanupMode(RCTTurboModuleCleanupMode mode);
  * The designated initializer. This creates a new bridge on top of the specified
  * executor. The bridge should then be used for all subsequent communication
  * with the JavaScript code running in the executor. Modules will be automatically
- * instantiated using the default constructor, but you can optionally pass in an
+ * instantiated using the default contructor, but you can optionally pass in an
  * array of pre-initialized module instances if they require additional init
  * parameters or configuration.
  */
diff --git a/node_modules/react-native/React/Base/RCTBridge.m b/node_modules/react-native/React/Base/RCTBridge.m
index 702e338..444086b 100644
--- a/node_modules/react-native/React/Base/RCTBridge.m
+++ b/node_modules/react-native/React/Base/RCTBridge.m
@@ -108,6 +108,28 @@ void RCTEnableTurboModuleEagerInit(BOOL enabled)
   turboModuleEagerInitEnabled = enabled;
 }
 
+static BOOL turboModuleSharedMutexInitEnabled = NO;
+BOOL RCTTurboModuleSharedMutexInitEnabled(void)
+{
+  return turboModuleSharedMutexInitEnabled;
+}
+
+void RCTEnableTurboModuleSharedMutexInit(BOOL enabled)
+{
+  turboModuleSharedMutexInitEnabled = enabled;
+}
+
+static RCTTurboModuleCleanupMode turboModuleCleanupMode = kRCTGlobalScope;
+RCTTurboModuleCleanupMode RCTGetTurboModuleCleanupMode(void)
+{
+  return turboModuleCleanupMode;
+}
+
+void RCTSetTurboModuleCleanupMode(RCTTurboModuleCleanupMode mode)
+{
+  turboModuleCleanupMode = mode;
+}
+
 // Turn off TurboModule delegate locking
 static BOOL turboModuleManagerDelegateLockingDisabled = YES;
 BOOL RCTTurboModuleManagerDelegateLockingDisabled(void)
@@ -120,6 +142,18 @@ void RCTDisableTurboModuleManagerDelegateLocking(BOOL disabled)
   turboModuleManagerDelegateLockingDisabled = disabled;
 }
 
+// Turn off TurboModule delegate locking
+static BOOL viewConfigEventValidAttributesDisabled = NO;
+BOOL RCTViewConfigEventValidAttributesDisabled(void)
+{
+  return viewConfigEventValidAttributesDisabled;
+}
+
+void RCTDisableViewConfigEventValidAttributes(BOOL disabled)
+{
+  viewConfigEventValidAttributesDisabled = disabled;
+}
+
 @interface RCTBridge () <RCTReloadListener>
 @end
 
diff --git a/node_modules/react-native/React/Base/RCTBridgeModuleDecorator.h b/node_modules/react-native/React/Base/RCTBridgeModuleDecorator.h
index e786096..225fef4 100644
--- a/node_modules/react-native/React/Base/RCTBridgeModuleDecorator.h
+++ b/node_modules/react-native/React/Base/RCTBridgeModuleDecorator.h
@@ -13,7 +13,7 @@
 @class RCTViewRegistry;
 
 /**
- RCTBridgeModuleDecorator contains instances that can be initialized with @synthesize
+ RCTBridgeModuleDecorator contains instances that can be intialized with @synthesize
  in RCTBridgeModules. For the Fabric interop layer.
 
  In Bridgeless, @synthesize ivars are passed from RCTBridgeModuleDecorator.
diff --git a/node_modules/react-native/React/Base/RCTBundleURLProvider.mm b/node_modules/react-native/React/Base/RCTBundleURLProvider.mm
index 33a9ae8..bee7394 100644
--- a/node_modules/react-native/React/Base/RCTBundleURLProvider.mm
+++ b/node_modules/react-native/React/Base/RCTBundleURLProvider.mm
@@ -74,7 +74,7 @@ - (void)resetToDefaults
                                                          (unsigned long)kRCTBundleURLProviderDefaultPort]];
 }
 
-#if RCT_DEV_MENU | RCT_PACKAGER_LOADING_FUNCTIONALITY
+#if RCT_DEV_MENU
 + (BOOL)isPackagerRunning:(NSString *)hostPort
 {
   return [RCTBundleURLProvider isPackagerRunning:hostPort scheme:nil];
@@ -82,10 +82,6 @@ + (BOOL)isPackagerRunning:(NSString *)hostPort
 
 + (BOOL)isPackagerRunning:(NSString *)hostPort scheme:(NSString *)scheme
 {
-  if (!kRCTAllowPackagerAccess) {
-    return NO;
-  }
-
   NSURL *url = [serverRootWithHostPort(hostPort, scheme) URLByAppendingPathComponent:@"status"];
 
   NSURLSession *session = [NSURLSession sharedSession];
diff --git a/node_modules/react-native/React/Base/RCTConvert.h b/node_modules/react-native/React/Base/RCTConvert.h
index abb59d1..7a7cc75 100644
--- a/node_modules/react-native/React/Base/RCTConvert.h
+++ b/node_modules/react-native/React/Base/RCTConvert.h
@@ -71,7 +71,6 @@ typedef NSURL RCTFileURL;
 + (UIKeyboardType)UIKeyboardType:(id)json;
 + (UIKeyboardAppearance)UIKeyboardAppearance:(id)json;
 + (UIReturnKeyType)UIReturnKeyType:(id)json;
-+ (UIUserInterfaceStyle)UIUserInterfaceStyle:(id)json API_AVAILABLE(ios(12));
 #if !TARGET_OS_TV
 + (UIDataDetectorTypes)UIDataDetectorTypes:(id)json;
 #endif
@@ -174,7 +173,7 @@ RCT_EXTERN NSArray *RCTConvertArrayValue(SEL, id);
  * avoid repeating the same boilerplate for every error message.
  */
 #define RCTLogConvertError(json, typeName) \
-  RCTLogInfo(@"JSON value '%@' of type %@ cannot be converted to %@", json, [json classForCoder], typeName)
+  RCTLogError(@"JSON value '%@' of type %@ cannot be converted to %@", json, [json classForCoder], typeName)
 
 /**
  * This macro is used for creating simple converter functions that just call
diff --git a/node_modules/react-native/React/Base/RCTConvert.m b/node_modules/react-native/React/Base/RCTConvert.m
index 8960df9..5e48205 100644
--- a/node_modules/react-native/React/Base/RCTConvert.m
+++ b/node_modules/react-native/React/Base/RCTConvert.m
@@ -69,7 +69,7 @@ + (NSIndexSet *)NSIndexSet:(id)json
   for (NSNumber *number in json) {
     NSInteger index = number.integerValue;
     if (RCT_DEBUG && index < 0) {
-      RCTLogInfo(@"Invalid index value %lld. Indices must be positive.", (long long)index);
+      RCTLogError(@"Invalid index value %lld. Indices must be positive.", (long long)index);
     }
     [indexSet addIndex:index];
   }
@@ -169,7 +169,7 @@ + (NSURLRequest *)NSURLRequest:(id)json
       __block BOOL allHeadersAreStrings = YES;
       [headers enumerateKeysAndObjectsUsingBlock:^(NSString *key, id header, BOOL *stop) {
         if (![header isKindOfClass:[NSString class]]) {
-          RCTLogInfo(
+          RCTLogError(
               @"Values of HTTP headers passed must be  of type string. "
                "Value of header '%@' is not a string.",
               key);
@@ -200,11 +200,11 @@ + (RCTFileURL *)RCTFileURL:(id)json
 {
   NSURL *fileURL = [self NSURL:json];
   if (!fileURL.fileURL) {
-    RCTLogInfo(@"URI must be a local file, '%@' isn't.", fileURL);
+    RCTLogError(@"URI must be a local file, '%@' isn't.", fileURL);
     return nil;
   }
   if (![[NSFileManager defaultManager] fileExistsAtPath:fileURL.path]) {
-    RCTLogInfo(@"File '%@' could not be found.", fileURL);
+    RCTLogError(@"File '%@' could not be found.", fileURL);
     return nil;
   }
   return fileURL;
@@ -225,7 +225,7 @@ + (NSDate *)NSDate:(id)json
     });
     NSDate *date = [formatter dateFromString:json];
     if (!date) {
-      RCTLogInfo(
+      RCTLogError(
           @"JSON String '%@' could not be interpreted as a date. "
            "Expected format: YYYY-MM-DD'T'HH:mm:ss.sssZ",
           json);
@@ -242,7 +242,7 @@ + (NSLocale *)NSLocale:(id)json
   if ([json isKindOfClass:[NSString class]]) {
     NSLocale *locale = [[NSLocale alloc] initWithLocaleIdentifier:json];
     if (!locale) {
-      RCTLogInfo(@"JSON String '%@' could not be interpreted as a valid locale. ", json);
+      RCTLogError(@"JSON String '%@' could not be interpreted as a valid locale. ", json);
     }
     return locale;
   } else if (json) {
@@ -267,15 +267,15 @@ + (NSLocale *)NSLocale:(id)json
     if ([allValues containsObject:json] || [json isEqual:defaultValue]) {
       return json;
     }
-    RCTLogInfo(@"Invalid %s '%@'. should be one of: %@", typeName, json, allValues);
+    RCTLogError(@"Invalid %s '%@'. should be one of: %@", typeName, json, allValues);
     return defaultValue;
   }
   if (RCT_DEBUG && ![json isKindOfClass:[NSString class]]) {
-    RCTLogInfo(@"Expected NSNumber or NSString for %s, received %@: %@", typeName, [json classForCoder], json);
+    RCTLogError(@"Expected NSNumber or NSString for %s, received %@: %@", typeName, [json classForCoder], json);
   }
   id value = mapping[json];
   if (RCT_DEBUG && !value && [json description].length > 0) {
-    RCTLogInfo(
+    RCTLogError(
         @"Invalid %s '%@'. should be one of: %@",
         typeName,
         json,
@@ -501,16 +501,6 @@ + (UIKeyboardType)UIKeyboardType:(id)json RCT_DYNAMIC
     UIReturnKeyDefault,
     integerValue)
 
-RCT_ENUM_CONVERTER(
-    UIUserInterfaceStyle,
-    (@{
-      @"unspecified" : @(UIUserInterfaceStyleUnspecified),
-      @"light" : @(UIUserInterfaceStyleLight),
-      @"dark" : @(UIUserInterfaceStyleDark),
-    }),
-    UIUserInterfaceStyleUnspecified,
-    integerValue)
-
 RCT_ENUM_CONVERTER(
     UIViewContentMode,
     (@{
@@ -551,7 +541,7 @@ static void convertCGStruct(const char *type, NSArray *fields, CGFloat *result,
   NSUInteger count = fields.count;
   if ([json isKindOfClass:[NSArray class]]) {
     if (RCT_DEBUG && [json count] != count) {
-      RCTLogInfo(
+      RCTLogError(
           @"Expected array with count %llu, but count is %llu: %@",
           (unsigned long long)count,
           (unsigned long long)[json count],
@@ -1002,15 +992,12 @@ + (YGValue)YGValue:(id)json
     if ([s isEqualToString:@"auto"]) {
       return (YGValue){YGUndefined, YGUnitAuto};
     } else if ([s hasSuffix:@"%"]) {
-      float floatValue;
-      if ([[NSScanner scannerWithString:s] scanFloat:&floatValue]) {
-        return (YGValue){floatValue, YGUnitPercent};
-      }
+      return (YGValue){[[s substringToIndex:s.length] floatValue], YGUnitPercent};
     } else {
-      RCTLogAdvice(
-          @"\"%@\" is not a valid dimension. Dimensions must be a number, \"auto\", or a string suffixed with \"%%\".",
-          s);
+      RCTLogConvertError(json, @"a YGValue. Did you forget the % or pt suffix?");
     }
+  } else {
+    RCTLogConvertError(json, @"a YGValue.");
   }
   return YGValueUndefined;
 }
@@ -1308,7 +1295,7 @@ + (UIImage *)UIImage:(id)json
   }
 
   if (!CGSizeEqualToSize(imageSource.size, CGSizeZero) && !CGSizeEqualToSize(imageSource.size, image.size)) {
-    RCTLogInfo(
+    RCTLogError(
         @"Image source %@ size %@ does not match loaded image size %@.",
         URL.path.lastPathComponent,
         NSStringFromCGSize(imageSource.size),
diff --git a/node_modules/react-native/React/Base/RCTDefines.h b/node_modules/react-native/React/Base/RCTDefines.h
index 68fa842..564ae99 100644
--- a/node_modules/react-native/React/Base/RCTDefines.h
+++ b/node_modules/react-native/React/Base/RCTDefines.h
@@ -46,43 +46,6 @@
 #endif
 #endif
 
-/**
- * RCT_REMOTE_PROFILE: RCT_PROFILE + RCT_ENABLE_INSPECTOR + enable the
- * connectivity functionality to control the profiler remotely, such as via Chrome DevTools or
- * Flipper.
- */
-#ifndef RCT_REMOTE_PROFILE
-#define RCT_REMOTE_PROFILE RCT_DEV
-#endif
-
-/**
- * Enable the code to support making calls to the underlying sampling profiler mechanism.
- */
-#ifndef RCT_PROFILE
-#define RCT_PROFILE RCT_REMOTE_PROFILE
-#endif
-
-#ifndef RCT_ENABLE_INSPECTOR
-#if (RCT_DEV || RCT_REMOTE_PROFILE) && __has_include(<React/RCTInspectorDevServerHelper.h>)
-#define RCT_ENABLE_INSPECTOR 1
-#else
-#define RCT_ENABLE_INSPECTOR 0
-#endif
-#endif
-
-/**
- * Sanity check that these compile-time flags are compatible. RCT_REMOTE_PROFILE requires RCT_PROFILE and
- * RCT_ENABLE_INSPECTOR
- */
-#if RCT_REMOTE_PROFILE
-#if !RCT_PROFILE
-#error "RCT_PROFILE needs to be set to fulfill RCT_REMOTE_PROFILE"
-#endif // RCT_PROFILE
-#if !RCT_ENABLE_INSPECTOR
-#error "RCT_ENABLE_INSPECTOR needs to be set to fulfill RCT_REMOTE_PROFILE"
-#endif // RCT_ENABLE_INSPECTOR
-#endif // RCT_REMOTE_PROFILE
-
 /**
  * RCT_DEV_MENU can be used to toggle the dev menu separately from RCT_DEV.
  * By default though, it will inherit from RCT_DEV.
@@ -100,6 +63,14 @@
 #define RCT_ENABLE_LOADING_FROM_PACKAGER RCT_DEV_MENU
 #endif
 
+#ifndef RCT_ENABLE_INSPECTOR
+#if RCT_DEV && __has_include(<React/RCTInspectorDevServerHelper.h>)
+#define RCT_ENABLE_INSPECTOR 1
+#else
+#define RCT_ENABLE_INSPECTOR 0
+#endif
+#endif
+
 #ifndef RCT_DEV_SETTINGS_ENABLE_PACKAGER_CONNECTION
 #if RCT_DEV && (__has_include("RCTPackagerConnection.h") || __has_include(<React/RCTPackagerConnection.h>))
 #define RCT_DEV_SETTINGS_ENABLE_PACKAGER_CONNECTION 1
diff --git a/node_modules/react-native/React/Base/RCTDisplayLink.m b/node_modules/react-native/React/Base/RCTDisplayLink.m
index 4aed812..6c42e32 100644
--- a/node_modules/react-native/React/Base/RCTDisplayLink.m
+++ b/node_modules/react-native/React/Base/RCTDisplayLink.m
@@ -95,13 +95,6 @@ - (void)dealloc
 
 - (void)invalidate
 {
-  // ensure observer callbacks do not hold a reference to weak self via pauseCallback
-  for (RCTModuleData *moduleData in _frameUpdateObservers) {
-    id<RCTFrameUpdateObserver> observer = (id<RCTFrameUpdateObserver>)moduleData.instance;
-    [observer setPauseCallback:nil];
-  }
-  [_frameUpdateObservers removeAllObjects]; // just to be explicit
-
   [_jsDisplayLink invalidate];
 }
 
diff --git a/node_modules/react-native/React/Base/RCTJSScriptLoaderModule.h b/node_modules/react-native/React/Base/RCTJSScriptLoaderModule.h
index f05d361..c05c29f 100644
--- a/node_modules/react-native/React/Base/RCTJSScriptLoaderModule.h
+++ b/node_modules/react-native/React/Base/RCTJSScriptLoaderModule.h
@@ -7,16 +7,12 @@
 
 @class RCTSource;
 
-NS_ASSUME_NONNULL_BEGIN
-
 /**
  * This protocol should be adopted when a turbo module needs to tell React Native to load a script.
  * In bridge-less React Native, it is a replacement for [_bridge loadAndExecuteSplitBundleURL:].
  */
 @protocol RCTJSScriptLoaderModule <NSObject>
 
-@property (nonatomic, copy) void (^loadScript)(RCTSource *source);
+@property (nonatomic, copy, nonnull) void (^loadScript)(RCTSource *source);
 
 @end
-
-NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/Base/RCTRootContentView.h b/node_modules/react-native/React/Base/RCTRootContentView.h
index 50a5f3f..6c93bdd 100644
--- a/node_modules/react-native/React/Base/RCTRootContentView.h
+++ b/node_modules/react-native/React/Base/RCTRootContentView.h
@@ -27,6 +27,6 @@
 - (instancetype)initWithFrame:(CGRect)frame
                        bridge:(RCTBridge *)bridge
                      reactTag:(NSNumber *)reactTag
-              sizeFlexibility:(RCTRootViewSizeFlexibility)sizeFlexibility NS_DESIGNATED_INITIALIZER;
+               sizeFlexiblity:(RCTRootViewSizeFlexibility)sizeFlexibility NS_DESIGNATED_INITIALIZER;
 
 @end
diff --git a/node_modules/react-native/React/Base/RCTRootContentView.m b/node_modules/react-native/React/Base/RCTRootContentView.m
index 24b918c..83a5568 100644
--- a/node_modules/react-native/React/Base/RCTRootContentView.m
+++ b/node_modules/react-native/React/Base/RCTRootContentView.m
@@ -20,7 +20,7 @@ @implementation RCTRootContentView
 - (instancetype)initWithFrame:(CGRect)frame
                        bridge:(RCTBridge *)bridge
                      reactTag:(NSNumber *)reactTag
-              sizeFlexibility:(RCTRootViewSizeFlexibility)sizeFlexibility
+               sizeFlexiblity:(RCTRootViewSizeFlexibility)sizeFlexibility
 {
   if ((self = [super initWithFrame:frame])) {
     _bridge = bridge;
diff --git a/node_modules/react-native/React/Base/RCTRootView.m b/node_modules/react-native/React/Base/RCTRootView.m
index 5cb98b5..122ed87 100644
--- a/node_modules/react-native/React/Base/RCTRootView.m
+++ b/node_modules/react-native/React/Base/RCTRootView.m
@@ -283,7 +283,7 @@ - (void)bundleFinishedLoading:(RCTBridge *)bridge
   _contentView = [[RCTRootContentView alloc] initWithFrame:self.bounds
                                                     bridge:bridge
                                                   reactTag:self.reactTag
-                                           sizeFlexibility:_sizeFlexibility];
+                                            sizeFlexiblity:_sizeFlexibility];
   [self runApplication:bridge];
 
   _contentView.passThroughTouches = _passThroughTouches;
diff --git a/node_modules/react-native/React/Base/RCTRuntimeExecutorFromBridge.mm b/node_modules/react-native/React/Base/RCTRuntimeExecutorFromBridge.mm
deleted file mode 100644
index b38c043..0000000
--- a/node_modules/react-native/React/Base/RCTRuntimeExecutorFromBridge.mm
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#import "RCTRuntimeExecutorFromBridge.h"
-#import <React/RCTAssert.h>
-#import <React/RCTBridge+Private.h>
-#import <cxxreact/MessageQueueThread.h>
-#import <react/utils/ManagedObjectWrapper.h>
-
-using namespace facebook::react;
-
-@interface RCTBridge ()
-- (std::shared_ptr<MessageQueueThread>)jsMessageThread;
-- (void)invokeAsync:(std::function<void()> &&)func;
-@end
-
-RuntimeExecutor RCTRuntimeExecutorFromBridge(RCTBridge *bridge)
-{
-  RCTAssert(bridge, @"RCTRuntimeExecutorFromBridge: Bridge must not be nil.");
-
-  auto bridgeWeakWrapper = wrapManagedObjectWeakly([bridge batchedBridge] ?: bridge);
-
-  RuntimeExecutor runtimeExecutor = [bridgeWeakWrapper](
-                                        std::function<void(facebook::jsi::Runtime & runtime)> &&callback) {
-    RCTBridge *bridge = unwrapManagedObjectWeakly(bridgeWeakWrapper);
-
-    RCTAssert(bridge, @"RCTRuntimeExecutorFromBridge: Bridge must not be nil at the moment of scheduling a call.");
-
-    [bridge invokeAsync:[bridgeWeakWrapper, callback = std::move(callback)]() {
-      RCTCxxBridge *batchedBridge = (RCTCxxBridge *)unwrapManagedObjectWeakly(bridgeWeakWrapper);
-
-      RCTAssert(batchedBridge, @"RCTRuntimeExecutorFromBridge: Bridge must not be nil at the moment of invocation.");
-
-      if (!batchedBridge) {
-        return;
-      }
-
-      auto runtime = (facebook::jsi::Runtime *)(batchedBridge.runtime);
-
-      RCTAssert(
-          runtime, @"RCTRuntimeExecutorFromBridge: Bridge must have a valid jsi::Runtime at the moment of invocation.");
-
-      if (!runtime) {
-        return;
-      }
-
-      callback(*runtime);
-    }];
-  };
-
-  return runtimeExecutor;
-}
diff --git a/node_modules/react-native/React/Base/RCTVersion.m b/node_modules/react-native/React/Base/RCTVersion.m
index 925b2d1..387a09c 100644
--- a/node_modules/react-native/React/Base/RCTVersion.m
+++ b/node_modules/react-native/React/Base/RCTVersion.m
@@ -22,8 +22,8 @@
   dispatch_once(&onceToken, ^(void){
     __rnVersion = @{
                   RCTVersionMajor: @(0),
-                  RCTVersionMinor: @(72),
-                  RCTVersionPatch: @(3),
+                  RCTVersionMinor: @(71),
+                  RCTVersionPatch: @(12),
                   RCTVersionPrerelease: [NSNull null],
                   };
   });
diff --git a/node_modules/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.h b/node_modules/react-native/React/Base/RCTWeakProxy.h
similarity index 61%
rename from node_modules/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.h
rename to node_modules/react-native/React/Base/RCTWeakProxy.h
index 9d3bccc..5b94da8 100644
--- a/node_modules/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.h
+++ b/node_modules/react-native/React/Base/RCTWeakProxy.h
@@ -7,12 +7,10 @@
 
 #import <Foundation/Foundation.h>
 
-NS_ASSUME_NONNULL_BEGIN
+@interface RCTWeakProxy : NSObject
 
-@interface RCTLegacyInteropComponents : NSObject
+@property (nonatomic, weak, readonly) id target;
 
-+ (NSArray<NSString *> *)legacyInteropComponents;
++ (instancetype)weakProxyWithTarget:(id)target;
 
 @end
-
-NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/Base/RCTWeakProxy.m b/node_modules/react-native/React/Base/RCTWeakProxy.m
new file mode 100644
index 0000000..b6547eb
--- /dev/null
+++ b/node_modules/react-native/React/Base/RCTWeakProxy.m
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTWeakProxy.h"
+
+@implementation RCTWeakProxy
+
+- (instancetype)initWithTarget:(id)target
+{
+  if (self = [super init]) {
+    _target = target;
+  }
+  return self;
+}
+
++ (instancetype)weakProxyWithTarget:(id)target
+{
+  return [[RCTWeakProxy alloc] initWithTarget:target];
+}
+
+- (id)forwardingTargetForSelector:(SEL)aSelector
+{
+  return _target;
+}
+
+@end
diff --git a/node_modules/react-native/React/Base/Surface/RCTSurfaceRootShadowViewDelegate.h b/node_modules/react-native/React/Base/Surface/RCTSurfaceRootShadowViewDelegate.h
index 44f29c8..b13e2f4 100644
--- a/node_modules/react-native/React/Base/Surface/RCTSurfaceRootShadowViewDelegate.h
+++ b/node_modules/react-native/React/Base/Surface/RCTSurfaceRootShadowViewDelegate.h
@@ -13,7 +13,7 @@ NS_ASSUME_NONNULL_BEGIN
 
 @protocol RCTSurfaceRootShadowViewDelegate <NSObject>
 
-- (void)rootShadowView:(RCTSurfaceRootShadowView *)rootShadowView didChangeIntrinsicSize:(CGSize)intrinsicSize;
+- (void)rootShadowView:(RCTSurfaceRootShadowView *)rootShadowView didChangeIntrinsicSize:(CGSize)instrinsicSize;
 - (void)rootShadowViewDidStartRendering:(RCTSurfaceRootShadowView *)rootShadowView;
 - (void)rootShadowViewDidStartLayingOut:(RCTSurfaceRootShadowView *)rootShadowView;
 
diff --git a/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingView.h b/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingView.h
index 03a8d8e..cf301d7 100644
--- a/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingView.h
+++ b/node_modules/react-native/React/Base/Surface/SurfaceHostingView/RCTSurfaceHostingView.h
@@ -36,7 +36,7 @@ NS_ASSUME_NONNULL_BEGIN
 
 /**
  * Designated initializer.
- * Instantiates a view with given Surface object.
+ * Instanciates a view with given Surface object.
  * Note: The view retains the surface object.
  */
 - (instancetype)initWithSurface:(id<RCTSurfaceProtocol>)surface
@@ -44,8 +44,8 @@ NS_ASSUME_NONNULL_BEGIN
 
 /**
  * Convenience initializer.
- * Instantiates a Surface object with given `bridge`, `moduleName`, and
- * `initialProperties`, and then use it to instantiate a view.
+ * Instanciates a Surface object with given `bridge`, `moduleName`, and
+ * `initialProperties`, and then use it to instanciate a view.
  */
 - (instancetype)initWithBridge:(RCTBridge *)bridge
                     moduleName:(NSString *)moduleName
diff --git a/node_modules/react-native/React/CoreModules/BUCK b/node_modules/react-native/React/CoreModules/BUCK
index dec99e7..143a840 100644
--- a/node_modules/react-native/React/CoreModules/BUCK
+++ b/node_modules/react-native/React/CoreModules/BUCK
@@ -22,13 +22,17 @@ rn_apple_library(
     ],
     contacts = ["oncall+react_native@xmail.facebook.com"],
     enable_exceptions = True,
+    exported_linker_flags = [
+        "-weak_framework",
+        "UserNotifications",
+        "-weak_framework",
+        "WebKit",
+    ],
     exported_preprocessor_flags = rn_extra_build_flags(),
     extension_api_only = True,
     frameworks = [
         "Foundation",
         "UIKit",
-        "UserNotifications",
-        "WebKit",
     ],
     header_path_prefix = "React",
     labels = [
@@ -130,7 +134,6 @@ rn_apple_library(
         "//xplat/js/react-native-github:FBReactNativeSpecApple",
         "//xplat/js/react-native-github:RCTLinkingApple",
         "//xplat/js/react-native-github:RCTPushNotificationApple",
-        "//xplat/js/react-native-github:RCTSettingsApple",
         "//xplat/js/react-native-github:ReactInternalApple",
     ],
 )
diff --git a/node_modules/react-native/React/CoreModules/RCTAccessibilityManager+Internal.h b/node_modules/react-native/React/CoreModules/RCTAccessibilityManager+Internal.h
index 6e18000..36842ee 100644
--- a/node_modules/react-native/React/CoreModules/RCTAccessibilityManager+Internal.h
+++ b/node_modules/react-native/React/CoreModules/RCTAccessibilityManager+Internal.h
@@ -16,7 +16,7 @@ RCT_EXTERN_C_BEGIN
 // Only to be used for testing and internal tooling. Do not use this in
 // production.
 void RCTAccessibilityManagerSetIsVoiceOverEnabled(
-    RCTAccessibilityManager *accessibilityManager,
+    RCTAccessibilityManager *accessibiltyManager,
     BOOL isVoiceOverEnabled);
 
 RCT_EXTERN_C_END
diff --git a/node_modules/react-native/React/CoreModules/RCTAlertManager.mm b/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
index df46ec5..532e898 100644
--- a/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
@@ -32,6 +32,20 @@ @implementation RCTConvert (UIAlertViewStyle)
 
 @end
 
+@implementation RCTConvert (UIUserInterfaceStyle)
+
+RCT_ENUM_CONVERTER(
+    UIUserInterfaceStyle,
+    (@{
+      @"unspecified" : @(UIUserInterfaceStyleUnspecified),
+      @"light" : @(UIUserInterfaceStyleLight),
+      @"dark" : @(UIUserInterfaceStyleDark),
+    }),
+    UIUserInterfaceStyleUnspecified,
+    integerValue)
+
+@end
+
 @interface RCTAlertManager () <NativeAlertManagerSpec>
 
 @end
diff --git a/node_modules/react-native/React/CoreModules/RCTAppearance.h b/node_modules/react-native/React/CoreModules/RCTAppearance.h
index caa842d..d8bb18b 100644
--- a/node_modules/react-native/React/CoreModules/RCTAppearance.h
+++ b/node_modules/react-native/React/CoreModules/RCTAppearance.h
@@ -8,7 +8,6 @@
 #import <UIKit/UIKit.h>
 
 #import <React/RCTBridgeModule.h>
-#import <React/RCTConvert.h>
 #import <React/RCTEventEmitter.h>
 
 RCT_EXTERN void RCTEnableAppearancePreference(BOOL enabled);
diff --git a/node_modules/react-native/React/CoreModules/RCTAppearance.mm b/node_modules/react-native/React/CoreModules/RCTAppearance.mm
index 17535a9..71259d4 100644
--- a/node_modules/react-native/React/CoreModules/RCTAppearance.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAppearance.mm
@@ -10,7 +10,6 @@
 #import <FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConstants.h>
 #import <React/RCTEventEmitter.h>
-#import <React/RCTUtils.h>
 
 #import "CoreModulesPlugins.h"
 
@@ -93,17 +92,6 @@ - (dispatch_queue_t)methodQueue
   return std::make_shared<NativeAppearanceSpecJSI>(params);
 }
 
-RCT_EXPORT_METHOD(setColorScheme : (NSString *)style)
-{
-  UIUserInterfaceStyle userInterfaceStyle = [RCTConvert UIUserInterfaceStyle:style];
-  NSArray<__kindof UIWindow *> *windows = RCTSharedApplication().windows;
-  if (@available(iOS 13.0, *)) {
-    for (UIWindow *window in windows) {
-      window.overrideUserInterfaceStyle = userInterfaceStyle;
-    }
-  }
-}
-
 RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSString *, getColorScheme)
 {
   if (_currentColorScheme == nil) {
diff --git a/node_modules/react-native/React/CoreModules/RCTDevLoadingView.h b/node_modules/react-native/React/CoreModules/RCTDevLoadingView.h
index a6405ec..175adc5 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevLoadingView.h
+++ b/node_modules/react-native/React/CoreModules/RCTDevLoadingView.h
@@ -7,6 +7,7 @@
 
 #import <React/RCTBridgeModule.h>
 #import <React/RCTDevLoadingViewProtocol.h>
+#import <UIKit/UIKit.h>
 
 @interface RCTDevLoadingView : NSObject <RCTDevLoadingViewProtocol, RCTBridgeModule>
 @end
diff --git a/node_modules/react-native/React/CoreModules/RCTDevMenu.mm b/node_modules/react-native/React/CoreModules/RCTDevMenu.mm
index 060ab85..83ddd83 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevMenu.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevMenu.mm
@@ -271,7 +271,7 @@ - (void)setDefaultJSBundle
                              [RCTInspectorDevServerHelper
                                           openURL:@"flipper://null/Hermesdebuggerrn?device=React%20Native"
                                     withBundleURL:bundleManager.bundleURL
-                                 withErrorMessage:@"Failed to open Flipper. Please check that Metro is running."];
+                                 withErrorMessage:@"Failed to open Flipper. Please check that Metro is runnning."];
                            }]];
 
       [items addObject:[RCTDevMenuItem
@@ -282,7 +282,7 @@ - (void)setDefaultJSBundle
                              [RCTInspectorDevServerHelper
                                           openURL:@"flipper://null/React?device=React%20Native"
                                     withBundleURL:bundleManager.bundleURL
-                                 withErrorMessage:@"Failed to open Flipper. Please check that Metro is running."];
+                                 withErrorMessage:@"Failed to open Flipper. Please check that Metro is runnning."];
                            }]];
     } else if (devSettings.isRemoteDebuggingAvailable) {
 #else
@@ -428,10 +428,10 @@ - (void)setDefaultJSBundle
       ? UIAlertControllerStyleActionSheet
       : UIAlertControllerStyleAlert;
 
-  NSString *devMenuType = self.bridge ? @"Bridge" : @"Bridgeless";
-  NSString *devMenuTitle = [NSString stringWithFormat:@"React Native Dev Menu (%@)", devMenuType];
+  NSString *debugMenuType = self.bridge ? @"Bridge" : @"Bridgeless";
+  NSString *debugMenuTitle = [NSString stringWithFormat:@"React Native Debug Menu (%@)", debugMenuType];
 
-  _actionSheet = [UIAlertController alertControllerWithTitle:devMenuTitle message:description preferredStyle:style];
+  _actionSheet = [UIAlertController alertControllerWithTitle:debugMenuTitle message:description preferredStyle:style];
 
   NSArray<RCTDevMenuItem *> *items = [self _menuItemsToPresent];
   for (RCTDevMenuItem *item in items) {
diff --git a/node_modules/react-native/React/CoreModules/RCTDevSettings.mm b/node_modules/react-native/React/CoreModules/RCTDevSettings.mm
index e19a810..ceda9c5 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevSettings.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevSettings.mm
@@ -53,7 +53,7 @@ void RCTDevSettingsSetEnabled(BOOL enabled)
   devSettingsMenuEnabled = enabled;
 }
 
-#if RCT_DEV_MENU || RCT_REMOTE_PROFILE
+#if RCT_DEV_MENU
 
 @interface RCTDevSettingsUserDefaultsDataSource : NSObject <RCTDevSettingsDataSource>
 
@@ -117,7 +117,6 @@ - (void)_reloadWithDefaults:(NSDictionary *)defaultValues
 
 #if RCT_DEV_SETTINGS_ENABLE_PACKAGER_CONNECTION
 static RCTHandlerToken reloadToken;
-static RCTHandlerToken devMenuToken;
 static std::atomic<int> numInitializedModules{0};
 #endif
 
@@ -196,14 +195,6 @@ - (void)initialize
         }
                          queue:dispatch_get_main_queue()
                      forMethod:@"reload"];
-#if RCT_DEV_MENU
-    devMenuToken = [[RCTPackagerConnection sharedPackagerConnection]
-        addNotificationHandler:^(id params) {
-          [self.bridge.devMenu show];
-        }
-                         queue:dispatch_get_main_queue()
-                     forMethod:@"devMenu"];
-#endif
   }
 #endif
 
@@ -255,9 +246,6 @@ - (void)invalidate
 
   if (--numInitializedModules == 0) {
     [[RCTPackagerConnection sharedPackagerConnection] removeHandler:reloadToken];
-#if RCT_DEV_MENU
-    [[RCTPackagerConnection sharedPackagerConnection] removeHandler:devMenuToken];
-#endif
   }
 #endif
 }
@@ -630,9 +618,7 @@ @implementation RCTBridge (RCTDevSettings)
 
 - (RCTDevSettings *)devSettings
 {
-#if RCT_REMOTE_PROFILE
-  return [self moduleForClass:[RCTDevSettings class]];
-#elif RCT_DEV_MENU
+#if RCT_DEV_MENU
   return devSettingsMenuEnabled ? [self moduleForClass:[RCTDevSettings class]] : nil;
 #else
   return nil;
diff --git a/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm b/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm
index 9dd1b0e..8eb756d 100644
--- a/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDevSplitBundleLoader.mm
@@ -63,12 +63,10 @@ + (BOOL)requiresMainQueueSetup
             return;
           }
           __typeof(self) strongSelf = weakSelf;
-          if (strongSelf) {
-            strongSelf->_loadScript(source);
-            RCTDevSettings *devSettings = [strongSelf->_moduleRegistry moduleForName:"RCTDevSettings"];
-            [devSettings setupHMRClientWithAdditionalBundleURL:source.url];
-            resolve(@YES);
-          }
+          strongSelf->_loadScript(source);
+          RCTDevSettings *devSettings = [strongSelf->_moduleRegistry moduleForName:"RCTDevSettings"];
+          [devSettings setupHMRClientWithAdditionalBundleURL:source.url];
+          resolve(@YES);
         }];
   }
 }
diff --git a/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm b/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm
index 7a5de38..439092e 100644
--- a/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTExceptionsManager.mm
@@ -12,7 +12,6 @@
 #import <React/RCTDefines.h>
 #import <React/RCTLog.h>
 #import <React/RCTRedBox.h>
-#import <React/RCTRedBoxSetEnabled.h>
 #import <React/RCTReloadCommand.h>
 #import <React/RCTRootView.h>
 
@@ -41,10 +40,8 @@ - (void)reportSoft:(NSString *)message
         exceptionId:(double)exceptionId
     extraDataAsJSON:(nullable NSString *)extraDataAsJSON
 {
-  if (RCTRedBoxGetEnabled()) {
-    RCTRedBox *redbox = [_moduleRegistry moduleForName:"RedBox"];
-    [redbox showErrorMessage:message withStack:stack errorCookie:(int)exceptionId];
-  }
+  RCTRedBox *redbox = [_moduleRegistry moduleForName:"RedBox"];
+  [redbox showErrorMessage:message withStack:stack errorCookie:(int)exceptionId];
 
   if (_delegate) {
     [_delegate handleSoftJSExceptionWithMessage:message
@@ -59,10 +56,8 @@ - (void)reportFatal:(NSString *)message
         exceptionId:(double)exceptionId
     extraDataAsJSON:(nullable NSString *)extraDataAsJSON
 {
-  if (RCTRedBoxGetEnabled()) {
-    RCTRedBox *redbox = [_moduleRegistry moduleForName:"RedBox"];
-    [redbox showErrorMessage:message withStack:stack errorCookie:(int)exceptionId];
-  }
+  RCTRedBox *redbox = [_moduleRegistry moduleForName:"RedBox"];
+  [redbox showErrorMessage:message withStack:stack errorCookie:(int)exceptionId];
 
   if (_delegate) {
     [_delegate handleFatalJSExceptionWithMessage:message
@@ -104,10 +99,8 @@ - (void)reportFatal:(NSString *)message
                   : (NSArray<NSDictionary *> *)stack exceptionId
                   : (double)exceptionId)
 {
-  if (RCTRedBoxGetEnabled()) {
-    RCTRedBox *redbox = [_moduleRegistry moduleForName:"RedBox"];
-    [redbox updateErrorMessage:message withStack:stack errorCookie:(int)exceptionId];
-  }
+  RCTRedBox *redbox = [_moduleRegistry moduleForName:"RedBox"];
+  [redbox updateErrorMessage:message withStack:stack errorCookie:(int)exceptionId];
 
   if (_delegate && [_delegate respondsToSelector:@selector(updateJSExceptionWithMessage:stack:exceptionId:)]) {
     [_delegate updateJSExceptionWithMessage:message stack:stack exceptionId:[NSNumber numberWithDouble:exceptionId]];
diff --git a/node_modules/react-native/React/CoreModules/RCTFPSGraph.m b/node_modules/react-native/React/CoreModules/RCTFPSGraph.m
index 6beaf7d..23ef7cf 100644
--- a/node_modules/react-native/React/CoreModules/RCTFPSGraph.m
+++ b/node_modules/react-native/React/CoreModules/RCTFPSGraph.m
@@ -32,7 +32,6 @@ @implementation RCTFPSGraph {
   NSUInteger _minFPS;
   NSUInteger _length;
   NSUInteger _height;
-  CGFloat _scale;
 }
 
 - (instancetype)initWithFrame:(CGRect)frame color:(UIColor *)color
@@ -44,7 +43,6 @@ - (instancetype)initWithFrame:(CGRect)frame color:(UIColor *)color
     _minFPS = 60;
     _length = (NSUInteger)floor(frame.size.width);
     _height = (NSUInteger)floor(frame.size.height);
-    _scale = 60.0 / (CGFloat)_height;
     _frames = calloc(sizeof(CGFloat), _length);
     _color = color;
 
@@ -99,14 +97,11 @@ - (void)onTick:(NSTimeInterval)timestamp
       self->_label.text = [NSString stringWithFormat:@"%lu", (unsigned long)self->_FPS];
     });
 
-    CGFloat previousScale = _scale;
-    CGFloat targetFps = MAX(_maxFPS, 60.0);
-    _scale = targetFps / (CGFloat)_height;
+    CGFloat scale = 60.0 / (CGFloat)_height;
     for (NSUInteger i = 0; i < _length - 1; i++) {
-      // Move each Frame back one position and adjust to new scale (if there is a new scale)
-      _frames[i] = _frames[i + 1] * previousScale / _scale;
+      _frames[i] = _frames[i + 1];
     }
-    _frames[_length - 1] = (double)_FPS / _scale;
+    _frames[_length - 1] = (double)_FPS / scale;
 
     CGMutablePathRef path = CGPathCreateMutable();
     CGPathMoveToPoint(path, NULL, 0, (CGFloat)_height);
diff --git a/node_modules/react-native/React/CoreModules/RCTPlatform.mm b/node_modules/react-native/React/CoreModules/RCTPlatform.mm
index 7c76ffb..a9acfee 100644
--- a/node_modules/react-native/React/CoreModules/RCTPlatform.mm
+++ b/node_modules/react-native/React/CoreModules/RCTPlatform.mm
@@ -15,7 +15,7 @@
 
 #import "CoreModulesPlugins.h"
 
-#import <optional>
+#import <folly/Optional.h>
 
 using namespace facebook::react;
 
@@ -75,7 +75,7 @@ - (dispatch_queue_t)methodQueue
              .major = [versions[@"major"] doubleValue],
              .patch = [versions[@"patch"] doubleValue],
              .prerelease = [versions[@"prerelease"] isKindOfClass:[NSNull class]]
-                 ? std::optional<double>{}
+                 ? folly::Optional<double>{}
                  : [versions[@"prerelease"] doubleValue]}),
     });
   });
diff --git a/node_modules/react-native/React/CoreModules/RCTTiming.h b/node_modules/react-native/React/CoreModules/RCTTiming.h
index 2a7519a..1039f25 100644
--- a/node_modules/react-native/React/CoreModules/RCTTiming.h
+++ b/node_modules/react-native/React/CoreModules/RCTTiming.h
@@ -12,25 +12,21 @@
 #import <React/RCTInitializing.h>
 #import <React/RCTInvalidating.h>
 
-NS_ASSUME_NONNULL_BEGIN
-
 @protocol RCTTimingDelegate
 
 - (void)callTimers:(NSArray<NSNumber *> *)timers;
-- (void)immediatelyCallTimer:(NSNumber *)callbackID;
-- (void)callIdleCallbacks:(NSNumber *)absoluteFrameStartMS;
+- (void)immediatelyCallTimer:(nonnull NSNumber *)callbackID;
+- (void)callIdleCallbacks:(nonnull NSNumber *)absoluteFrameStartMS;
 
 @end
 
 @interface RCTTiming : NSObject <RCTBridgeModule, RCTInvalidating, RCTFrameUpdateObserver, RCTInitializing>
 
 - (instancetype)initWithDelegate:(id<RCTTimingDelegate>)delegate;
-- (void)createTimerForNextFrame:(NSNumber *)callbackID
+- (void)createTimerForNextFrame:(nonnull NSNumber *)callbackID
                        duration:(NSTimeInterval)jsDuration
-               jsSchedulingTime:(nullable NSDate *)jsSchedulingTime
+               jsSchedulingTime:(NSDate *)jsSchedulingTime
                         repeats:(BOOL)repeats;
 - (void)deleteTimer:(double)timerID;
 
 @end
-
-NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/CoreModules/RCTWebSocketExecutor.mm b/node_modules/react-native/React/CoreModules/RCTWebSocketExecutor.mm
index 1b03cbc..9418dd6 100644
--- a/node_modules/react-native/React/CoreModules/RCTWebSocketExecutor.mm
+++ b/node_modules/react-native/React/CoreModules/RCTWebSocketExecutor.mm
@@ -12,10 +12,10 @@
 #import <React/RCTConvert.h>
 #import <React/RCTDefines.h>
 #import <React/RCTLog.h>
+#import <React/RCTSRWebSocket.h>
 #import <React/RCTUtils.h>
 
 #import <ReactCommon/RCTTurboModule.h>
-#import <SocketRocket/SRWebSocket.h>
 
 #import "CoreModulesPlugins.h"
 
@@ -23,12 +23,12 @@
 
 typedef void (^RCTWSMessageCallback)(NSError *error, NSDictionary<NSString *, id> *reply);
 
-@interface RCTWebSocketExecutor () <SRWebSocketDelegate, RCTTurboModule>
+@interface RCTWebSocketExecutor () <RCTSRWebSocketDelegate, RCTTurboModule>
 
 @end
 
 @implementation RCTWebSocketExecutor {
-  SRWebSocket *_socket;
+  RCTSRWebSocket *_socket;
   dispatch_queue_t _jsQueue;
   NSMutableDictionary<NSNumber *, RCTWSMessageCallback> *_callbacks;
   dispatch_semaphore_t _socketOpenSemaphore;
@@ -62,7 +62,7 @@ - (void)setUp
   }
 
   _jsQueue = dispatch_queue_create("com.facebook.react.WebSocketExecutor", DISPATCH_QUEUE_SERIAL);
-  _socket = [[SRWebSocket alloc] initWithURL:_url];
+  _socket = [[RCTSRWebSocket alloc] initWithURL:_url];
   _socket.delegate = self;
   _callbacks = [NSMutableDictionary new];
   _injectedObjects = [NSMutableDictionary new];
@@ -112,7 +112,7 @@ - (BOOL)connectToProxy
   _socketOpenSemaphore = dispatch_semaphore_create(0);
   [_socket open];
   long connected = dispatch_semaphore_wait(_socketOpenSemaphore, dispatch_time(DISPATCH_TIME_NOW, NSEC_PER_SEC * 15));
-  return connected == 0 && _socket.readyState == SR_OPEN;
+  return connected == 0 && _socket.readyState == RCTSR_OPEN;
 }
 
 - (BOOL)prepareJSRuntime
@@ -131,7 +131,7 @@ - (BOOL)prepareJSRuntime
   return runtimeIsReady == 0 && initError == nil;
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessage:(id)message
+- (void)webSocket:(RCTSRWebSocket *)webSocket didReceiveMessage:(id)message
 {
   NSError *error = nil;
   NSDictionary<NSString *, id> *reply = RCTJSONParse(message, &error);
@@ -143,12 +143,12 @@ - (void)webSocket:(SRWebSocket *)webSocket didReceiveMessage:(id)message
   }
 }
 
-- (void)webSocketDidOpen:(SRWebSocket *)webSocket
+- (void)webSocketDidOpen:(RCTSRWebSocket *)webSocket
 {
   dispatch_semaphore_signal(_socketOpenSemaphore);
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error
+- (void)webSocket:(RCTSRWebSocket *)webSocket didFailWithError:(NSError *)error
 {
   dispatch_semaphore_signal(_socketOpenSemaphore);
   RCTLogInfo(@"WebSocket connection failed with error %@", error);
@@ -173,7 +173,7 @@ - (void)sendMessage:(NSDictionary<NSString *, id> *)message onReply:(RCTWSMessag
     self->_callbacks[expectedID] = [callback copy];
     NSMutableDictionary<NSString *, id> *messageWithID = [message mutableCopy];
     messageWithID[@"id"] = expectedID;
-    [self->_socket sendString:RCTJSONStringify(messageWithID, NULL) error:nil];
+    [self->_socket send:RCTJSONStringify(messageWithID, NULL)];
   });
 }
 
@@ -270,7 +270,7 @@ - (void)invalidate
 
 - (BOOL)isValid
 {
-  return _socket != nil && _socket.readyState == SR_OPEN;
+  return _socket != nil && _socket.readyState == RCTSR_OPEN;
 }
 
 - (void)dealloc
diff --git a/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm b/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm
index 4451b94..c099328 100644
--- a/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm
+++ b/node_modules/react-native/React/CoreModules/RCTWebSocketModule.mm
@@ -11,12 +11,12 @@
 
 #import <FBReactNativeSpec/FBReactNativeSpec.h>
 #import <React/RCTConvert.h>
+#import <React/RCTSRWebSocket.h>
 #import <React/RCTUtils.h>
-#import <SocketRocket/SRWebSocket.h>
 
 #import "CoreModulesPlugins.h"
 
-@implementation SRWebSocket (React)
+@implementation RCTSRWebSocket (React)
 
 - (NSNumber *)reactTag
 {
@@ -30,12 +30,12 @@ - (void)setReactTag:(NSNumber *)reactTag
 
 @end
 
-@interface RCTWebSocketModule () <SRWebSocketDelegate, NativeWebSocketModuleSpec>
+@interface RCTWebSocketModule () <RCTSRWebSocketDelegate, NativeWebSocketModuleSpec>
 
 @end
 
 @implementation RCTWebSocketModule {
-  NSMutableDictionary<NSNumber *, SRWebSocket *> *_sockets;
+  NSMutableDictionary<NSNumber *, RCTSRWebSocket *> *_sockets;
   NSMutableDictionary<NSNumber *, id<RCTWebSocketContentHandler>> *_contentHandlers;
 }
 
@@ -56,7 +56,7 @@ - (void)invalidate
   [super invalidate];
 
   _contentHandlers = nil;
-  for (SRWebSocket *socket in _sockets.allValues) {
+  for (RCTSRWebSocket *socket in _sockets.allValues) {
     socket.delegate = nil;
     [socket close];
   }
@@ -90,7 +90,7 @@ - (void)invalidate
     }];
   }
 
-  SRWebSocket *webSocket = [[SRWebSocket alloc] initWithURLRequest:request protocols:protocols];
+  RCTSRWebSocket *webSocket = [[RCTSRWebSocket alloc] initWithURLRequest:request protocols:protocols];
   [webSocket setDelegateDispatchQueue:[self methodQueue]];
   webSocket.delegate = self;
   webSocket.reactTag = @(socketID);
@@ -103,7 +103,7 @@ - (void)invalidate
 
 RCT_EXPORT_METHOD(send : (NSString *)message forSocketID : (double)socketID)
 {
-  [_sockets[@(socketID)] sendString:message error:nil];
+  [_sockets[@(socketID)] send:message];
 }
 
 RCT_EXPORT_METHOD(sendBinary : (NSString *)base64String forSocketID : (double)socketID)
@@ -113,12 +113,12 @@ - (void)invalidate
 
 - (void)sendData:(NSData *)data forSocketID:(NSNumber *__nonnull)socketID
 {
-  [_sockets[socketID] sendData:data error:nil];
+  [_sockets[socketID] send:data];
 }
 
 RCT_EXPORT_METHOD(ping : (double)socketID)
 {
-  [_sockets[@(socketID)] sendPing:nil error:nil];
+  [_sockets[@(socketID)] sendPing:NULL];
 }
 
 RCT_EXPORT_METHOD(close : (double)code reason : (NSString *)reason socketID : (double)socketID)
@@ -137,7 +137,7 @@ - (void)setContentHandler:(id<RCTWebSocketContentHandler>)handler forSocketID:(N
 
 #pragma mark - RCTSRWebSocketDelegate methods
 
-- (void)webSocket:(SRWebSocket *)webSocket didReceiveMessage:(id)message
+- (void)webSocket:(RCTSRWebSocket *)webSocket didReceiveMessage:(id)message
 {
   NSString *type;
 
@@ -157,13 +157,13 @@ - (void)webSocket:(SRWebSocket *)webSocket didReceiveMessage:(id)message
   [self sendEventWithName:@"websocketMessage" body:@{@"data" : message, @"type" : type, @"id" : webSocket.reactTag}];
 }
 
-- (void)webSocketDidOpen:(SRWebSocket *)webSocket
+- (void)webSocketDidOpen:(RCTSRWebSocket *)webSocket
 {
   [self sendEventWithName:@"websocketOpen"
                      body:@{@"id" : webSocket.reactTag, @"protocol" : webSocket.protocol ? webSocket.protocol : @""}];
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error
+- (void)webSocket:(RCTSRWebSocket *)webSocket didFailWithError:(NSError *)error
 {
   NSNumber *socketID = [webSocket reactTag];
   _contentHandlers[socketID] = nil;
@@ -173,7 +173,7 @@ - (void)webSocket:(SRWebSocket *)webSocket didFailWithError:(NSError *)error
   [self sendEventWithName:@"websocketFailed" body:body];
 }
 
-- (void)webSocket:(SRWebSocket *)webSocket
+- (void)webSocket:(RCTSRWebSocket *)webSocket
     didCloseWithCode:(NSInteger)code
               reason:(NSString *)reason
             wasClean:(BOOL)wasClean
diff --git a/node_modules/react-native/React/CoreModules/React-CoreModules.podspec b/node_modules/react-native/React/CoreModules/React-CoreModules.podspec
index 10d555e..34cc4a5 100644
--- a/node_modules/react-native/React/CoreModules/React-CoreModules.podspec
+++ b/node_modules/react-native/React/CoreModules/React-CoreModules.podspec
@@ -18,19 +18,6 @@ end
 
 folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
-socket_rocket_version = '0.6.1'
-
-header_search_paths = [
-  "\"$(PODS_TARGET_SRCROOT)/React/CoreModules\"",
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-]
-
-if ENV['USE_FRAMEWORKS']
-  header_search_paths.append("\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\"")
-  header_search_paths.append("\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"")
-end
 
 Pod::Spec.new do |s|
   s.name                   = "React-CoreModules"
@@ -38,7 +25,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
@@ -47,7 +34,7 @@ Pod::Spec.new do |s|
   s.pod_target_xcconfig    = {
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "HEADER_SEARCH_PATHS" => header_search_paths.join(" ")
+                               "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/React/CoreModules\" \"$(PODS_ROOT)/RCT-Folly\" \"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
                              }
 
   s.dependency "React-Codegen", version
@@ -58,5 +45,4 @@ Pod::Spec.new do |s|
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
   s.dependency 'React-RCTBlob'
-  s.dependency "SocketRocket", socket_rocket_version
 end
diff --git a/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm b/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm
index 0e14093..be4b79f 100644
--- a/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm
+++ b/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm
@@ -170,8 +170,7 @@ static void mapReactMarkerToPerformanceLogger(
 static void registerPerformanceLoggerHooks(RCTPerformanceLogger *performanceLogger)
 {
   __weak RCTPerformanceLogger *weakPerformanceLogger = performanceLogger;
-  ReactMarker::logTaggedMarkerImpl = [weakPerformanceLogger](
-                                         const ReactMarker::ReactMarkerId markerId, const char *tag) {
+  ReactMarker::logTaggedMarker = [weakPerformanceLogger](const ReactMarker::ReactMarkerId markerId, const char *tag) {
     mapReactMarkerToPerformanceLogger(markerId, weakPerformanceLogger, tag);
   };
 }
@@ -993,7 +992,7 @@ - (void)registerAdditionalModuleClasses:(NSArray<Class> *)modules
                                                   withDispatchGroup:NULL
                                                    lazilyDiscovered:YES];
     assert(_reactInstance); // at this point you must have reactInstance as you already called
-                            // reactInstance->initializeBridge
+                            // reactInstance->initialzeBridge
     _reactInstance->getModuleRegistry().registerModules(createNativeModules(newModules, self, _reactInstance));
   } else {
     [self registerModulesForClasses:modules];
diff --git a/node_modules/react-native/React/CxxBridge/RCTJSIExecutorRuntimeInstaller.mm b/node_modules/react-native/React/CxxBridge/RCTJSIExecutorRuntimeInstaller.mm
index 0372d41..402e4d7 100644
--- a/node_modules/react-native/React/CxxBridge/RCTJSIExecutorRuntimeInstaller.mm
+++ b/node_modules/react-native/React/CxxBridge/RCTJSIExecutorRuntimeInstaller.mm
@@ -20,7 +20,16 @@
       _RCTLogJavaScriptInternal(static_cast<RCTLogLevel>(logLevel), [NSString stringWithUTF8String:message.c_str()]);
     };
     bindNativeLogger(runtime, iosLoggingBinder);
-    bindNativePerformanceNow(runtime);
+
+    PerformanceNow iosPerformanceNowBinder = []() {
+      auto time = std::chrono::steady_clock::now();
+      auto duration = std::chrono::duration_cast<std::chrono::nanoseconds>(time.time_since_epoch()).count();
+
+      constexpr double NANOSECONDS_IN_MILLISECOND = 1000000.0;
+
+      return duration / NANOSECONDS_IN_MILLISECOND;
+    };
+    bindNativePerformanceNow(runtime, iosPerformanceNowBinder);
 
     // Wrap over the original runtimeInstaller
     if (runtimeInstaller) {
diff --git a/node_modules/react-native/React/CxxModule/RCTNativeModule.mm b/node_modules/react-native/React/CxxModule/RCTNativeModule.mm
index f400d69..3e400a0 100644
--- a/node_modules/react-native/React/CxxModule/RCTNativeModule.mm
+++ b/node_modules/react-native/React/CxxModule/RCTNativeModule.mm
@@ -7,7 +7,6 @@
 
 #import "RCTNativeModule.h"
 
-#import <Foundation/Foundation.h>
 #import <React/RCTBridge.h>
 #import <React/RCTBridgeMethod.h>
 #import <React/RCTBridgeModule.h>
@@ -161,7 +160,7 @@ static MethodCallResult invokeInner(
        */
       BridgeNativeModulePerfLogger::syncMethodCallFail("N/A", "N/A");
     }
-    return std::nullopt;
+    return folly::none;
   }
 
   id<RCTBridgeMethod> method = moduleData.methods[methodId];
@@ -232,7 +231,7 @@ static MethodCallResult invokeInner(
     RCT_PROFILE_END_EVENT(RCTProfileTagAlways, @"");
   }
 
-  return std::nullopt;
+  return folly::none;
 }
 
 }
diff --git a/node_modules/react-native/React/CxxUtils/RCTFollyConvert.mm b/node_modules/react-native/React/CxxUtils/RCTFollyConvert.mm
index 4e88197..f890c86 100644
--- a/node_modules/react-native/React/CxxUtils/RCTFollyConvert.mm
+++ b/node_modules/react-native/React/CxxUtils/RCTFollyConvert.mm
@@ -7,7 +7,6 @@
 
 #import "RCTFollyConvert.h"
 
-#import <Foundation/Foundation.h>
 #import <objc/runtime.h>
 
 namespace facebook {
diff --git a/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.h b/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.h
index 08397c3..f527f50 100644
--- a/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.h
+++ b/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.h
@@ -11,7 +11,7 @@
 #import <React/RCTDefines.h>
 #import <React/RCTInspectorPackagerConnection.h>
 
-#if RCT_DEV || RCT_REMOTE_PROFILE
+#if RCT_DEV
 
 @interface RCTInspectorDevServerHelper : NSObject
 
diff --git a/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.mm b/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.mm
index cf404f3..687297d 100644
--- a/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.mm
+++ b/node_modules/react-native/React/DevSupport/RCTInspectorDevServerHelper.mm
@@ -7,7 +7,7 @@
 
 #import <React/RCTInspectorDevServerHelper.h>
 
-#if RCT_DEV || RCT_REMOTE_PROFILE
+#if RCT_DEV
 
 #import <React/RCTLog.h>
 #import <UIKit/UIKit.h>
diff --git a/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm b/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
index 08c0ca1..199f8ac 100644
--- a/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
+++ b/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
@@ -23,7 +23,7 @@
 
 #if RCT_DEV
 
-#import <SocketRocket/SRWebSocket.h>
+#import <React/RCTSRWebSocket.h>
 
 @interface RCTPackagerConnection () <RCTReconnectingWebSocketDelegate>
 @end
diff --git a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec.podspec b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec.podspec
index 2d9b0b2..37f2a17 100644
--- a/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec.podspec
+++ b/node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec.podspec
@@ -28,7 +28,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.compiler_flags         = folly_compiler_flags + ' -Wno-nullability-completeness'
   s.source                 = source
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Image/RCTImageComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Image/RCTImageComponentView.mm
index 6f23f86..9d7b67f 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Image/RCTImageComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Image/RCTImageComponentView.mm
@@ -14,7 +14,6 @@
 #import <react/renderer/components/image/ImageComponentDescriptor.h>
 #import <react/renderer/components/image/ImageEventEmitter.h>
 #import <react/renderer/components/image/ImageProps.h>
-#import <react/renderer/core/CoreFeatures.h>
 #import <react/renderer/imagemanager/ImageRequest.h>
 #import <react/renderer/imagemanager/RCTImagePrimitivesConversions.h>
 
@@ -98,21 +97,8 @@ - (void)updateState:(State::Shared const &)state oldState:(State::Shared const &
 - (void)_setStateAndResubscribeImageResponseObserver:(ImageShadowNode::ConcreteState::Shared const &)state
 {
   if (_state) {
-    auto const &imageRequest = _state->getData().getImageRequest();
-    auto &observerCoordinator = imageRequest.getObserverCoordinator();
+    auto &observerCoordinator = _state->getData().getImageRequest().getObserverCoordinator();
     observerCoordinator.removeObserver(_imageResponseObserverProxy);
-    if (CoreFeatures::cancelImageDownloadsOnRecycle) {
-      // Cancelling image request because we are no longer observing it.
-      // This is not 100% correct place to do this because we may want to
-      // re-create RCTImageComponentView with the same image and if it
-      // was cancelled before downloaded, download is not resumed.
-      // This will only become issue if we decouple life cycle of a
-      // ShadowNode from ComponentView, which is not something we do now.
-      imageRequest.cancel();
-      imageRequest.cancel();
-      imageRequest.cancel();
-      imageRequest.cancel();
-    }
   }
 
   _state = state;
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/LegacyViewManagerInterop/RCTLegacyViewManagerInteropCoordinatorAdapter.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/LegacyViewManagerInterop/RCTLegacyViewManagerInteropCoordinatorAdapter.mm
index 0fea1bf..1a9611e 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/LegacyViewManagerInterop/RCTLegacyViewManagerInteropCoordinatorAdapter.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/LegacyViewManagerInterop/RCTLegacyViewManagerInteropCoordinatorAdapter.mm
@@ -24,7 +24,6 @@ - (instancetype)initWithCoordinator:(RCTLegacyViewManagerInteropCoordinator *)co
 
 - (void)dealloc
 {
-  [_coordinator removeViewFromRegistryWithTag:_tag];
   [_paperView removeFromSuperview];
   [_coordinator removeObserveForTag:_tag];
 }
@@ -40,7 +39,6 @@ - (UIView *)paperView
                             weakSelf.eventInterceptor(eventName, event);
                           }
                         }];
-    [_coordinator addViewToRegistry:_paperView withTag:_tag];
   }
   return _paperView;
 }
@@ -52,7 +50,7 @@ - (void)setProps:(const folly::dynamic &)props
 
 - (void)handleCommand:(NSString *)commandName args:(NSArray *)args
 {
-  [_coordinator handleCommand:commandName args:args reactTag:_tag paperView:self.paperView];
+  [_coordinator handleCommand:commandName args:args reactTag:_tag];
 }
 
 @end
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.h b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.h
index 6ce7622..0cc6b21 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.h
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.h
@@ -17,7 +17,7 @@
 // OSS-compatibility layer
 
 #import <Foundation/Foundation.h>
-#import <React/RCTThirdPartyFabricComponentsProvider.h>
+#import <RCTThirdPartyFabricComponentsProvider.h>
 #import <React/RCTComponentViewProtocol.h>
 
 #pragma GCC diagnostic push
@@ -34,6 +34,7 @@ Class<RCTComponentViewProtocol> RCTSafeAreaViewCls(void) __attribute__((used));
 Class<RCTComponentViewProtocol> RCTScrollViewCls(void) __attribute__((used));
 Class<RCTComponentViewProtocol> RCTPullToRefreshViewCls(void) __attribute__((used));
 Class<RCTComponentViewProtocol> RCTActivityIndicatorViewCls(void) __attribute__((used));
+Class<RCTComponentViewProtocol> RCTSliderCls(void) __attribute__((used));
 Class<RCTComponentViewProtocol> RCTSwitchCls(void) __attribute__((used));
 Class<RCTComponentViewProtocol> RCTUnimplementedNativeViewCls(void) __attribute__((used));
 Class<RCTComponentViewProtocol> RCTParagraphCls(void) __attribute__((used));
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.mm
index ef5bd4e..6318933 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/RCTFabricComponentsPlugins.mm
@@ -22,6 +22,7 @@
     {"ScrollView", RCTScrollViewCls},
     {"PullToRefreshView", RCTPullToRefreshViewCls},
     {"ActivityIndicatorView", RCTActivityIndicatorViewCls},
+    {"Slider", RCTSliderCls},
     {"Switch", RCTSwitchCls},
     {"UnimplementedNativeView", RCTUnimplementedNativeViewCls},
     {"Paragraph", RCTParagraphCls},
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.h b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.h
index 914a249..3048aa4 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.h
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.h
@@ -7,7 +7,6 @@
 
 #import <UIKit/UIKit.h>
 
-#import <React/RCTCustomPullToRefreshViewProtocol.h>
 #import <React/RCTViewComponentView.h>
 
 NS_ASSUME_NONNULL_BEGIN
@@ -17,7 +16,7 @@ NS_ASSUME_NONNULL_BEGIN
  * This view is designed to only serve ViewController-like purpose for the actual `UIRefreshControl` view which is being
  * attached to some `UIScrollView` (not to this view).
  */
-@interface RCTPullToRefreshViewComponentView : RCTViewComponentView <RCTCustomPullToRefreshViewProtocol>
+@interface RCTPullToRefreshViewComponentView : RCTViewComponentView
 
 @end
 
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.mm
index 9480239..b897d8a 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTPullToRefreshViewComponentView.mm
@@ -132,7 +132,7 @@ - (void)_attach
     return;
   }
 
-  if (@available(macCatalyst 13.1, *)) {
+  if (@available(macOS 13.0, *)) {
     _scrollViewComponentView.scrollView.refreshControl = _refreshControl;
   }
 }
@@ -146,7 +146,7 @@ - (void)_detach
   // iOS requires to end refreshing before unmounting.
   [_refreshControl endRefreshing];
 
-  if (@available(macCatalyst 13.1, *)) {
+  if (@available(macOS 13.0, *)) {
     _scrollViewComponentView.scrollView.refreshControl = nil;
   }
   _scrollViewComponentView = nil;
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTScrollViewComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTScrollViewComponentView.mm
index 7c8be1b..2ebbb0e 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTScrollViewComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTScrollViewComponentView.mm
@@ -18,9 +18,9 @@
 #import <react/renderer/components/scrollview/ScrollViewProps.h>
 #import <react/renderer/components/scrollview/ScrollViewState.h>
 #import <react/renderer/components/scrollview/conversions.h>
+#import <react/renderer/graphics/Geometry.h>
 
 #import "RCTConversions.h"
-#import "RCTCustomPullToRefreshViewProtocol.h"
 #import "RCTEnhancedScrollView.h"
 #import "RCTFabricComponentsPlugins.h"
 
@@ -100,11 +100,6 @@ @implementation RCTScrollViewComponentView {
   BOOL _shouldUpdateContentInsetAdjustmentBehavior;
 
   CGPoint _contentOffsetWhenClipped;
-
-  __weak UIView *_contentView;
-
-  CGRect _prevFirstVisibleFrame;
-  __weak UIView *_firstVisibleView;
 }
 
 + (RCTScrollViewComponentView *_Nullable)findScrollViewComponentViewForView:(UIView *)view
@@ -154,17 +149,10 @@ - (void)dealloc
 
 #pragma mark - RCTMountingTransactionObserving
 
-- (void)mountingTransactionWillMount:(const facebook::react::MountingTransaction &)transaction
-                withSurfaceTelemetry:(const facebook::react::SurfaceTelemetry &)surfaceTelemetry
-{
-  [self _prepareForMaintainVisibleScrollPosition];
-}
-
 - (void)mountingTransactionDidMount:(MountingTransaction const &)transaction
                withSurfaceTelemetry:(facebook::react::SurfaceTelemetry const &)surfaceTelemetry
 {
   [self _remountChildren];
-  [self _adjustForMaintainVisibleContentPosition];
 }
 
 #pragma mark - RCTComponentViewProtocol
@@ -349,18 +337,11 @@ - (void)_preserveContentOffsetIfNeededWithBlock:(void (^)())block
 - (void)mountChildComponentView:(UIView<RCTComponentViewProtocol> *)childComponentView index:(NSInteger)index
 {
   [_containerView insertSubview:childComponentView atIndex:index];
-  if (![childComponentView conformsToProtocol:@protocol(RCTCustomPullToRefreshViewProtocol)]) {
-    _contentView = childComponentView;
-  }
 }
 
 - (void)unmountChildComponentView:(UIView<RCTComponentViewProtocol> *)childComponentView index:(NSInteger)index
 {
   [childComponentView removeFromSuperview];
-  if (![childComponentView conformsToProtocol:@protocol(RCTCustomPullToRefreshViewProtocol)] &&
-      _contentView == childComponentView) {
-    _contentView = nil;
-  }
 }
 
 /*
@@ -423,9 +404,6 @@ - (void)prepareForRecycle
   CGRect oldFrame = self.frame;
   self.frame = CGRectZero;
   self.frame = oldFrame;
-  _contentView = nil;
-  _prevFirstVisibleFrame = CGRectZero;
-  _firstVisibleView = nil;
   [super prepareForRecycle];
 }
 
@@ -706,74 +684,6 @@ - (void)removeScrollListener:(NSObject<UIScrollViewDelegate> *)scrollListener
   [self.scrollViewDelegateSplitter removeDelegate:scrollListener];
 }
 
-#pragma mark - Maintain visible content position
-
-- (void)_prepareForMaintainVisibleScrollPosition
-{
-  const auto &props = *std::static_pointer_cast<const ScrollViewProps>(_props);
-  if (!props.maintainVisibleContentPosition) {
-    return;
-  }
-
-  BOOL horizontal = _scrollView.contentSize.width > self.frame.size.width;
-  int minIdx = props.maintainVisibleContentPosition.value().minIndexForVisible;
-  for (NSUInteger ii = minIdx; ii < _contentView.subviews.count; ++ii) {
-    // Find the first entirely visible view.
-    UIView *subview = _contentView.subviews[ii];
-    BOOL hasNewView = NO;
-    if (horizontal) {
-      hasNewView = subview.frame.origin.x > _scrollView.contentOffset.x;
-    } else {
-      hasNewView = subview.frame.origin.y > _scrollView.contentOffset.y;
-    }
-    if (hasNewView || ii == _contentView.subviews.count - 1) {
-      _prevFirstVisibleFrame = subview.frame;
-      _firstVisibleView = subview;
-      break;
-    }
-  }
-}
-
-- (void)_adjustForMaintainVisibleContentPosition
-{
-  const auto &props = *std::static_pointer_cast<const ScrollViewProps>(_props);
-  if (!props.maintainVisibleContentPosition) {
-    return;
-  }
-
-  std::optional<int> autoscrollThreshold = props.maintainVisibleContentPosition.value().autoscrollToTopThreshold;
-  BOOL horizontal = _scrollView.contentSize.width > self.frame.size.width;
-  // TODO: detect and handle/ignore re-ordering
-  if (horizontal) {
-    CGFloat deltaX = _firstVisibleView.frame.origin.x - _prevFirstVisibleFrame.origin.x;
-    if (ABS(deltaX) > 0.5) {
-      CGFloat x = _scrollView.contentOffset.x;
-      [self _forceDispatchNextScrollEvent];
-      _scrollView.contentOffset = CGPointMake(_scrollView.contentOffset.x + deltaX, _scrollView.contentOffset.y);
-      if (autoscrollThreshold) {
-        // If the offset WAS within the threshold of the start, animate to the start.
-        if (x <= autoscrollThreshold.value()) {
-          [self scrollToOffset:CGPointMake(0, _scrollView.contentOffset.y) animated:YES];
-        }
-      }
-    }
-  } else {
-    CGRect newFrame = _firstVisibleView.frame;
-    CGFloat deltaY = newFrame.origin.y - _prevFirstVisibleFrame.origin.y;
-    if (ABS(deltaY) > 0.5) {
-      CGFloat y = _scrollView.contentOffset.y;
-      [self _forceDispatchNextScrollEvent];
-      _scrollView.contentOffset = CGPointMake(_scrollView.contentOffset.x, _scrollView.contentOffset.y + deltaY);
-      if (autoscrollThreshold) {
-        // If the offset WAS within the threshold of the start, animate to the start.
-        if (y <= autoscrollThreshold.value()) {
-          [self scrollToOffset:CGPointMake(_scrollView.contentOffset.x, 0) animated:YES];
-        }
-      }
-    }
-  }
-}
-
 @end
 
 Class<RCTComponentViewProtocol> RCTScrollViewCls(void)
diff --git a/node_modules/react-native/React/Base/RCTRuntimeExecutorFromBridge.h b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Slider/RCTSliderComponentView.h
similarity index 54%
rename from node_modules/react-native/React/Base/RCTRuntimeExecutorFromBridge.h
rename to node_modules/react-native/React/Fabric/Mounting/ComponentViews/Slider/RCTSliderComponentView.h
index 11968c8..5ddbef2 100644
--- a/node_modules/react-native/React/Base/RCTRuntimeExecutorFromBridge.h
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Slider/RCTSliderComponentView.h
@@ -5,15 +5,17 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <Foundation/Foundation.h>
-#ifdef __cplusplus
-#import <ReactCommon/RuntimeExecutor.h>
+#import <UIKit/UIKit.h>
+
+#import <React/RCTViewComponentView.h>
 
 NS_ASSUME_NONNULL_BEGIN
 
-@class RCTBridge;
+/**
+ * UIView class for root <Slider> component.
+ */
+@interface RCTSliderComponentView : RCTViewComponentView
 
-facebook::react::RuntimeExecutor RCTRuntimeExecutorFromBridge(RCTBridge *bridge);
+@end
 
 NS_ASSUME_NONNULL_END
-#endif
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Slider/RCTSliderComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Slider/RCTSliderComponentView.mm
new file mode 100644
index 0000000..72970a1
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Slider/RCTSliderComponentView.mm
@@ -0,0 +1,352 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTSliderComponentView.h"
+
+#import <React/RCTConversions.h>
+#import <React/RCTImageResponseDelegate.h>
+#import <React/RCTImageResponseObserverProxy.h>
+
+#import <react/renderer/components/rncore/EventEmitters.h>
+#import <react/renderer/components/rncore/Props.h>
+#import <react/renderer/components/slider/SliderComponentDescriptor.h>
+
+#import "RCTFabricComponentsPlugins.h"
+
+using namespace facebook::react;
+
+@interface RCTSliderComponentView () <RCTImageResponseDelegate>
+@end
+
+@implementation RCTSliderComponentView {
+  UISlider *_sliderView;
+  float _previousValue;
+
+  UIImage *_trackImage;
+  UIImage *_minimumTrackImage;
+  UIImage *_maximumTrackImage;
+  UIImage *_thumbImage;
+
+  ImageResponseObserverCoordinator const *_trackImageCoordinator;
+  ImageResponseObserverCoordinator const *_minimumTrackImageCoordinator;
+  ImageResponseObserverCoordinator const *_maximumTrackImageCoordinator;
+  ImageResponseObserverCoordinator const *_thumbImageCoordinator;
+
+  RCTImageResponseObserverProxy _trackImageResponseObserverProxy;
+  RCTImageResponseObserverProxy _minimumTrackImageResponseObserverProxy;
+  RCTImageResponseObserverProxy _maximumTrackImageResponseObserverProxy;
+  RCTImageResponseObserverProxy _thumbImageResponseObserverProxy;
+}
+
+- (instancetype)initWithFrame:(CGRect)frame
+{
+  if (self = [super initWithFrame:frame]) {
+    static const auto defaultProps = std::make_shared<const SliderProps>();
+    _props = defaultProps;
+
+    _sliderView = [[UISlider alloc] initWithFrame:self.bounds];
+
+    [_sliderView addTarget:self action:@selector(onChange:) forControlEvents:UIControlEventValueChanged];
+    [_sliderView addTarget:self
+                    action:@selector(sliderTouchEnd:)
+          forControlEvents:(UIControlEventTouchUpInside | UIControlEventTouchUpOutside | UIControlEventTouchCancel)];
+
+    _sliderView.value = (float)defaultProps->value;
+
+    _trackImageResponseObserverProxy = RCTImageResponseObserverProxy(self);
+    _minimumTrackImageResponseObserverProxy = RCTImageResponseObserverProxy(self);
+    _maximumTrackImageResponseObserverProxy = RCTImageResponseObserverProxy(self);
+    _thumbImageResponseObserverProxy = RCTImageResponseObserverProxy(self);
+
+    self.contentView = _sliderView;
+  }
+
+  return self;
+}
+
+// Recycling still doesn't work 100% properly
+// TODO: T40099998 implement recycling properly for Fabric Slider component
+- (void)prepareForRecycle
+{
+  [super prepareForRecycle];
+
+  self.trackImageCoordinator = nullptr;
+  self.minimumTrackImageCoordinator = nullptr;
+  self.maximumTrackImageCoordinator = nullptr;
+  self.thumbImageCoordinator = nullptr;
+
+  // Tint colors will be taken care of when props are set again - we just
+  // need to make sure that image properties are reset here
+  [_sliderView setMinimumTrackImage:nil forState:UIControlStateNormal];
+  [_sliderView setMaximumTrackImage:nil forState:UIControlStateNormal];
+
+  if (_thumbImage) {
+    [_sliderView setThumbImage:nil forState:UIControlStateNormal];
+  }
+
+  _trackImage = nil;
+  _minimumTrackImage = nil;
+  _maximumTrackImage = nil;
+  _thumbImage = nil;
+
+  const auto &props = *std::static_pointer_cast<const SliderProps>(_props);
+  _sliderView.value = (float)props.value;
+  _previousValue = (float)props.value;
+}
+
+#pragma mark - RCTComponentViewProtocol
+
++ (ComponentDescriptorProvider)componentDescriptorProvider
+{
+  return concreteComponentDescriptorProvider<SliderComponentDescriptor>();
+}
+
+- (void)updateProps:(Props::Shared const &)props oldProps:(Props::Shared const &)oldProps
+{
+  const auto &oldSliderProps = *std::static_pointer_cast<const SliderProps>(_props);
+  const auto &newSliderProps = *std::static_pointer_cast<const SliderProps>(props);
+
+  // `minimumValue`
+  if (oldSliderProps.minimumValue != newSliderProps.minimumValue) {
+    _sliderView.minimumValue = (float)newSliderProps.minimumValue;
+  }
+
+  // `maximumValue`
+  if (oldSliderProps.maximumValue != newSliderProps.maximumValue) {
+    _sliderView.maximumValue = (float)newSliderProps.maximumValue;
+  }
+
+  // `value`
+  if (oldSliderProps.value != newSliderProps.value) {
+    _sliderView.value = (float)newSliderProps.value;
+    _previousValue = (float)newSliderProps.value;
+  }
+
+  // `disabled`
+  if (oldSliderProps.disabled != newSliderProps.disabled) {
+    _sliderView.enabled = !newSliderProps.disabled;
+  }
+
+  // `thumbTintColor`
+  if (oldSliderProps.thumbTintColor != newSliderProps.thumbTintColor) {
+    _sliderView.thumbTintColor = RCTUIColorFromSharedColor(newSliderProps.thumbTintColor);
+  }
+
+  // `minimumTrackTintColor`
+  if (oldSliderProps.minimumTrackTintColor != newSliderProps.minimumTrackTintColor) {
+    _sliderView.minimumTrackTintColor = RCTUIColorFromSharedColor(newSliderProps.minimumTrackTintColor);
+  }
+
+  // `maximumTrackTintColor`
+  if (oldSliderProps.maximumTrackTintColor != newSliderProps.maximumTrackTintColor) {
+    _sliderView.maximumTrackTintColor = RCTUIColorFromSharedColor(newSliderProps.maximumTrackTintColor);
+  }
+
+  [super updateProps:props oldProps:oldProps];
+}
+
+- (void)updateState:(facebook::react::State::Shared const &)state
+           oldState:(facebook::react::State::Shared const &)oldState
+{
+  auto _state = std::static_pointer_cast<SliderShadowNode::ConcreteState const>(state);
+  auto _oldState = std::static_pointer_cast<SliderShadowNode::ConcreteState const>(oldState);
+
+  auto data = _state->getData();
+
+  bool havePreviousData = _oldState != nullptr;
+
+  auto getCoordinator = [](ImageRequest const *request) -> ImageResponseObserverCoordinator const * {
+    if (request) {
+      return &request->getObserverCoordinator();
+    } else {
+      return nullptr;
+    }
+  };
+
+  if (!havePreviousData || data.getTrackImageSource() != _oldState->getData().getTrackImageSource()) {
+    self.trackImageCoordinator = getCoordinator(&data.getTrackImageRequest());
+  }
+
+  if (!havePreviousData || data.getMinimumTrackImageSource() != _oldState->getData().getMinimumTrackImageSource()) {
+    self.minimumTrackImageCoordinator = getCoordinator(&data.getMinimumTrackImageRequest());
+  }
+
+  if (!havePreviousData || data.getMaximumTrackImageSource() != _oldState->getData().getMaximumTrackImageSource()) {
+    self.maximumTrackImageCoordinator = getCoordinator(&data.getMaximumTrackImageRequest());
+  }
+
+  if (!havePreviousData || data.getThumbImageSource() != _oldState->getData().getThumbImageSource()) {
+    self.thumbImageCoordinator = getCoordinator(&data.getThumbImageRequest());
+  }
+}
+
+- (void)setTrackImageCoordinator:(const ImageResponseObserverCoordinator *)coordinator
+{
+  if (_trackImageCoordinator) {
+    _trackImageCoordinator->removeObserver(_trackImageResponseObserverProxy);
+  }
+  _trackImageCoordinator = coordinator;
+  if (_trackImageCoordinator) {
+    _trackImageCoordinator->addObserver(_trackImageResponseObserverProxy);
+  }
+}
+
+- (void)setMinimumTrackImageCoordinator:(const ImageResponseObserverCoordinator *)coordinator
+{
+  if (_minimumTrackImageCoordinator) {
+    _minimumTrackImageCoordinator->removeObserver(_minimumTrackImageResponseObserverProxy);
+  }
+  _minimumTrackImageCoordinator = coordinator;
+  if (_minimumTrackImageCoordinator) {
+    _minimumTrackImageCoordinator->addObserver(_minimumTrackImageResponseObserverProxy);
+  }
+}
+
+- (void)setMaximumTrackImageCoordinator:(const ImageResponseObserverCoordinator *)coordinator
+{
+  if (_maximumTrackImageCoordinator) {
+    _maximumTrackImageCoordinator->removeObserver(_maximumTrackImageResponseObserverProxy);
+  }
+  _maximumTrackImageCoordinator = coordinator;
+  if (_maximumTrackImageCoordinator) {
+    _maximumTrackImageCoordinator->addObserver(_maximumTrackImageResponseObserverProxy);
+  }
+}
+
+- (void)setThumbImageCoordinator:(const ImageResponseObserverCoordinator *)coordinator
+{
+  if (_thumbImageCoordinator) {
+    _thumbImageCoordinator->removeObserver(_thumbImageResponseObserverProxy);
+  }
+  _thumbImageCoordinator = coordinator;
+  if (_thumbImageCoordinator) {
+    _thumbImageCoordinator->addObserver(_thumbImageResponseObserverProxy);
+  }
+}
+
+- (void)setTrackImage:(UIImage *)trackImage
+{
+  if ([trackImage isEqual:_trackImage]) {
+    return;
+  }
+
+  _trackImage = trackImage;
+  _minimumTrackImage = nil;
+  _maximumTrackImage = nil;
+  CGFloat width = trackImage.size.width / 2;
+  UIImage *minimumTrackImage = [trackImage resizableImageWithCapInsets:(UIEdgeInsets){0, width, 0, width}
+                                                          resizingMode:UIImageResizingModeStretch];
+  UIImage *maximumTrackImage = [trackImage resizableImageWithCapInsets:(UIEdgeInsets){0, width, 0, width}
+                                                          resizingMode:UIImageResizingModeStretch];
+  [_sliderView setMinimumTrackImage:minimumTrackImage forState:UIControlStateNormal];
+  [_sliderView setMaximumTrackImage:maximumTrackImage forState:UIControlStateNormal];
+}
+
+- (void)setMinimumTrackImage:(UIImage *)minimumTrackImage
+{
+  if ([minimumTrackImage isEqual:_minimumTrackImage] && _trackImage == nil) {
+    return;
+  }
+
+  _trackImage = nil;
+  _minimumTrackImage = minimumTrackImage;
+  _minimumTrackImage =
+      [_minimumTrackImage resizableImageWithCapInsets:(UIEdgeInsets){0, _minimumTrackImage.size.width, 0, 0}
+                                         resizingMode:UIImageResizingModeStretch];
+  [_sliderView setMinimumTrackImage:_minimumTrackImage forState:UIControlStateNormal];
+}
+
+- (void)setMaximumTrackImage:(UIImage *)maximumTrackImage
+{
+  if ([maximumTrackImage isEqual:_maximumTrackImage] && _trackImage == nil) {
+    return;
+  }
+
+  _trackImage = nil;
+  _maximumTrackImage = maximumTrackImage;
+  _maximumTrackImage =
+      [_maximumTrackImage resizableImageWithCapInsets:(UIEdgeInsets){0, 0, 0, _maximumTrackImage.size.width}
+                                         resizingMode:UIImageResizingModeStretch];
+  [_sliderView setMaximumTrackImage:_maximumTrackImage forState:UIControlStateNormal];
+}
+
+- (void)setThumbImage:(UIImage *)thumbImage
+{
+  if ([thumbImage isEqual:_thumbImage]) {
+    return;
+  }
+
+  _thumbImage = thumbImage;
+  [_sliderView setThumbImage:thumbImage forState:UIControlStateNormal];
+}
+
+- (void)onChange:(UISlider *)sender
+{
+  [self onChange:sender withContinuous:YES];
+}
+
+- (void)sliderTouchEnd:(UISlider *)sender
+{
+  [self onChange:sender withContinuous:NO];
+}
+
+- (void)onChange:(UISlider *)sender withContinuous:(BOOL)continuous
+{
+  float value = sender.value;
+
+  const auto &props = *std::static_pointer_cast<const SliderProps>(_props);
+
+  if (props.step > 0 && props.step <= (props.maximumValue - props.minimumValue)) {
+    value = (float)std::max(
+        props.minimumValue,
+        std::min(
+            props.maximumValue, props.minimumValue + round((value - props.minimumValue) / props.step) * props.step));
+
+    [_sliderView setValue:value animated:YES];
+  }
+
+  if (continuous && _previousValue != value) {
+    std::dynamic_pointer_cast<const SliderEventEmitter>(_eventEmitter)
+        ->onValueChange(SliderEventEmitter::OnValueChange{.value = static_cast<Float>(value)});
+  }
+  if (!continuous) {
+    std::dynamic_pointer_cast<const SliderEventEmitter>(_eventEmitter)
+        ->onSlidingComplete(SliderEventEmitter::OnSlidingComplete{.value = static_cast<Float>(value)});
+  }
+
+  _previousValue = value;
+}
+
+#pragma mark - RCTImageResponseDelegate
+
+- (void)didReceiveImage:(UIImage *)image metadata:(id)metadata fromObserver:(void const *)observer
+{
+  if (observer == &_trackImageResponseObserverProxy) {
+    self.trackImage = image;
+  } else if (observer == &_minimumTrackImageResponseObserverProxy) {
+    self.minimumTrackImage = image;
+  } else if (observer == &_maximumTrackImageResponseObserverProxy) {
+    self.maximumTrackImage = image;
+  } else if (observer == &_thumbImageResponseObserverProxy) {
+    self.thumbImage = image;
+  }
+}
+
+- (void)didReceiveProgress:(float)progress fromObserver:(void const *)observer
+{
+}
+
+- (void)didReceiveFailureFromObserver:(void const *)observer
+{
+}
+
+@end
+
+Class<RCTComponentViewProtocol> RCTSliderCls(void)
+{
+  return RCTSliderComponentView.class;
+}
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm
index ac45711..048d1b3 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm
@@ -14,6 +14,7 @@
 #import <react/renderer/components/text/ParagraphState.h>
 #import <react/renderer/components/text/RawTextComponentDescriptor.h>
 #import <react/renderer/components/text/TextComponentDescriptor.h>
+#import <react/renderer/graphics/Geometry.h>
 #import <react/renderer/textlayoutmanager/RCTAttributedTextUtils.h>
 #import <react/renderer/textlayoutmanager/RCTTextLayoutManager.h>
 #import <react/renderer/textlayoutmanager/TextLayoutManager.h>
@@ -116,8 +117,11 @@ - (void)drawRect:(CGRect)rect
     return;
   }
 
-  auto textLayoutManager = _state->getData().paragraphLayoutManager.getTextLayoutManager();
-  auto nsTextStorage = _state->getData().paragraphLayoutManager.getHostTextStorage();
+  auto textLayoutManager = _state->getData().layoutManager.lock();
+
+  if (!textLayoutManager) {
+    return;
+  }
 
   RCTTextLayoutManager *nativeTextLayoutManager =
       (RCTTextLayoutManager *)unwrapManagedObject(textLayoutManager->getNativeTextLayoutManager());
@@ -126,8 +130,7 @@ - (void)drawRect:(CGRect)rect
 
   [nativeTextLayoutManager drawAttributedString:_state->getData().attributedString
                             paragraphAttributes:_paragraphAttributes
-                                          frame:frame
-                                    textStorage:unwrapManagedObject(nsTextStorage)];
+                                          frame:frame];
 }
 
 #pragma mark - Accessibility
@@ -159,15 +162,18 @@ - (NSArray *)accessibilityElements
   auto &data = _state->getData();
 
   if (![_accessibilityProvider isUpToDate:data.attributedString]) {
-    auto textLayoutManager = data.paragraphLayoutManager.getTextLayoutManager();
-    RCTTextLayoutManager *nativeTextLayoutManager =
-        (RCTTextLayoutManager *)unwrapManagedObject(textLayoutManager->getNativeTextLayoutManager());
-    CGRect frame = RCTCGRectFromRect(_layoutMetrics.getContentFrame());
-    _accessibilityProvider = [[RCTParagraphComponentAccessibilityProvider alloc] initWithString:data.attributedString
-                                                                                  layoutManager:nativeTextLayoutManager
-                                                                            paragraphAttributes:data.paragraphAttributes
-                                                                                          frame:frame
-                                                                                           view:self];
+    auto textLayoutManager = data.layoutManager.lock();
+    if (textLayoutManager) {
+      RCTTextLayoutManager *nativeTextLayoutManager =
+          (RCTTextLayoutManager *)unwrapManagedObject(textLayoutManager->getNativeTextLayoutManager());
+      CGRect frame = RCTCGRectFromRect(_layoutMetrics.getContentFrame());
+      _accessibilityProvider =
+          [[RCTParagraphComponentAccessibilityProvider alloc] initWithString:data.attributedString
+                                                               layoutManager:nativeTextLayoutManager
+                                                         paragraphAttributes:data.paragraphAttributes
+                                                                       frame:frame
+                                                                        view:self];
+    }
   }
 
   return _accessibilityProvider.accessibilityElements;
@@ -186,7 +192,11 @@ - (SharedTouchEventEmitter)touchEventEmitterAtPoint:(CGPoint)point
     return _eventEmitter;
   }
 
-  auto textLayoutManager = _state->getData().paragraphLayoutManager.getTextLayoutManager();
+  auto textLayoutManager = _state->getData().layoutManager.lock();
+
+  if (!textLayoutManager) {
+    return _eventEmitter;
+  }
 
   RCTTextLayoutManager *nativeTextLayoutManager =
       (RCTTextLayoutManager *)unwrapManagedObject(textLayoutManager->getNativeTextLayoutManager());
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
index dd96b5d..c7c0f1d 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
@@ -8,6 +8,7 @@
 #import "RCTTextInputComponentView.h"
 
 #import <react/renderer/components/iostextinput/TextInputComponentDescriptor.h>
+#import <react/renderer/graphics/Geometry.h>
 #import <react/renderer/textlayoutmanager/RCTAttributedTextUtils.h>
 #import <react/renderer/textlayoutmanager/TextLayoutManager.h>
 
@@ -184,7 +185,7 @@ - (void)updateProps:(Props::Shared const &)props oldProps:(Props::Shared const &
     }
   }
 
-  // Traits `blurOnSubmit`, `clearTextOnFocus`, and `selectTextOnFocus` were omitted intentionally here
+  // Traits `blurOnSubmit`, `clearTextOnFocus`, and `selectTextOnFocus` were omitted intentially here
   // because they are being checked on-demand.
 
   // Other props:
@@ -245,11 +246,6 @@ - (void)updateLayoutMetrics:(LayoutMetrics const &)layoutMetrics
       UIEdgeInsetsInsetRect(self.bounds, RCTUIEdgeInsetsFromEdgeInsets(layoutMetrics.borderWidth));
   _backedTextInputView.textContainerInset =
       RCTUIEdgeInsetsFromEdgeInsets(layoutMetrics.contentInsets - layoutMetrics.borderWidth);
-
-  if (_eventEmitter) {
-    auto const &textInputEventEmitter = *std::static_pointer_cast<TextInputEventEmitter const>(_eventEmitter);
-    textInputEventEmitter.onContentSizeChange([self _textInputMetrics]);
-  }
 }
 
 - (void)prepareForRecycle
@@ -486,16 +482,16 @@ - (void)setDefaultInputAccessoryView
 
   // These keyboard types (all are number pads) don't have a "Done" button by default,
   // so we create an `inputAccessoryView` with this button for them.
-  BOOL shouldHaveInputAccessoryView =
+  BOOL shouldHaveInputAccesoryView =
       (keyboardType == UIKeyboardTypeNumberPad || keyboardType == UIKeyboardTypePhonePad ||
        keyboardType == UIKeyboardTypeDecimalPad || keyboardType == UIKeyboardTypeASCIICapableNumberPad) &&
       _backedTextInputView.returnKeyType == UIReturnKeyDone;
 
-  if ((_backedTextInputView.inputAccessoryView != nil) == shouldHaveInputAccessoryView) {
+  if ((_backedTextInputView.inputAccessoryView != nil) == shouldHaveInputAccesoryView) {
     return;
   }
 
-  if (shouldHaveInputAccessoryView) {
+  if (shouldHaveInputAccesoryView) {
     UIToolbar *toolbarView = [UIToolbar new];
     [toolbarView sizeToFit];
     UIBarButtonItem *flexibleSpace =
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.h b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.h
index 2a89399..ffaac13 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.h
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.h
@@ -35,8 +35,10 @@ UIKeyboardType RCTUIKeyboardTypeFromKeyboardType(facebook::react::KeyboardType k
 
 UIReturnKeyType RCTUIReturnKeyTypeFromReturnKeyType(facebook::react::ReturnKeyType returnKeyType);
 
+API_AVAILABLE(ios(10.0))
 UITextContentType RCTUITextContentTypeFromString(std::string const &contentType);
 
+API_AVAILABLE(ios(12.0))
 UITextInputPasswordRules *RCTUITextInputPasswordRulesFromString(std::string const &passwordRules);
 
 NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.mm
index f001258..99f4681 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputUtils.mm
@@ -177,6 +177,7 @@ UIReturnKeyType RCTUIReturnKeyTypeFromReturnKeyType(ReturnKeyType returnKeyType)
   }
 }
 
+API_AVAILABLE(ios(10.0))
 UITextContentType RCTUITextContentTypeFromString(std::string const &contentType)
 {
   static dispatch_once_t onceToken;
@@ -226,6 +227,7 @@ UITextContentType RCTUITextContentTypeFromString(std::string const &contentType)
   return contentTypeMap[RCTNSStringFromString(contentType)] ?: @"";
 }
 
+API_AVAILABLE(ios(12.0))
 UITextInputPasswordRules *RCTUITextInputPasswordRulesFromString(std::string const &passwordRules)
 {
   return [UITextInputPasswordRules passwordRulesWithDescriptor:RCTNSStringFromStringNilIfEmpty(passwordRules)];
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.h b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.h
index 154fec7..48298f3 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.h
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.h
@@ -69,6 +69,12 @@ NS_ASSUME_NONNULL_BEGIN
  */
 @property (nonatomic, assign) UIEdgeInsets hitTestEdgeInsets;
 
+/**
+ * Flag indicating if subview clipping is enabled for the view.
+ * If subview clipping is enabled, subviews that are outside of the viewport may be removed from the view hierachy.
+ */
+@property (nonatomic, readonly) BOOL removeClippedSubviews;
+
 /**
  * Enforcing `call super` semantic for overridden methods from `RCTComponentViewProtocol`.
  * The methods update the instance variables.
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.mm b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.mm
index 9619fe7..bf691db 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.mm
@@ -8,7 +8,6 @@
 #import "RCTViewComponentView.h"
 
 #import <CoreGraphics/CoreGraphics.h>
-#import <QuartzCore/QuartzCore.h>
 #import <objc/runtime.h>
 
 #import <React/RCTAssert.h>
@@ -30,6 +29,8 @@ @implementation RCTViewComponentView {
   NSSet<NSString *> *_Nullable _propKeysManagedByAnimated_DO_NOT_USE_THIS_IS_BROKEN;
 }
 
+@synthesize removeClippedSubviews = _removeClippedSubviews;
+
 - (instancetype)initWithFrame:(CGRect)frame
 {
   if (self = [super initWithFrame:frame]) {
diff --git a/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewFactory.mm b/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewFactory.mm
index caa531c..0d8e15c 100644
--- a/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewFactory.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewFactory.mm
@@ -9,11 +9,10 @@
 
 #import <React/RCTAssert.h>
 #import <React/RCTConversions.h>
-#import <React/RCTLog.h>
 
 #import <butter/map.h>
+#import <butter/mutex.h>
 #import <butter/set.h>
-#import <shared_mutex>
 
 #import <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
 #import <react/renderer/componentregistry/componentNameByReactViewName.h>
@@ -24,19 +23,19 @@
 #ifdef RN_DISABLE_OSS_PLUGIN_HEADER
 #import <RCTFabricComponentPlugin/RCTFabricPluginProvider.h>
 #else
-#import <React/RCTFabricComponentsPlugins.h>
+#import "RCTFabricComponentsPlugins.h"
 #endif
 
-#import <React/RCTComponentViewClassDescriptor.h>
-#import <React/RCTFabricComponentsPlugins.h>
-#import <React/RCTImageComponentView.h>
-#import <React/RCTLegacyViewManagerInteropComponentView.h>
-#import <React/RCTMountingTransactionObserving.h>
-#import <React/RCTParagraphComponentView.h>
-#import <React/RCTRootComponentView.h>
-#import <React/RCTTextInputComponentView.h>
-#import <React/RCTUnimplementedViewComponentView.h>
-#import <React/RCTViewComponentView.h>
+#import "RCTComponentViewClassDescriptor.h"
+#import "RCTFabricComponentsPlugins.h"
+#import "RCTImageComponentView.h"
+#import "RCTLegacyViewManagerInteropComponentView.h"
+#import "RCTMountingTransactionObserving.h"
+#import "RCTParagraphComponentView.h"
+#import "RCTRootComponentView.h"
+#import "RCTTextInputComponentView.h"
+#import "RCTUnimplementedViewComponentView.h"
+#import "RCTViewComponentView.h"
 
 #import <objc/runtime.h>
 
@@ -62,7 +61,7 @@ @implementation RCTComponentViewFactory {
   butter::map<ComponentHandle, RCTComponentViewClassDescriptor> _componentViewClasses;
   butter::set<std::string> _registeredComponentsNames;
   ComponentDescriptorProviderRegistry _providerRegistry;
-  std::shared_mutex _mutex;
+  butter::shared_mutex _mutex;
 }
 
 + (RCTComponentViewFactory *)currentComponentViewFactory
@@ -106,21 +105,16 @@ - (BOOL)registerComponentIfPossible:(std::string const &)name
     return YES;
   }
 
-  // Paper name: we prepare this variables to warn the user
-  // when the component is registered in both Fabric and in the
-  // interop layer, so they can remove that
-  NSString *componentNameString = RCTNSStringFromString(name);
-  BOOL isRegisteredInInteropLayer = [RCTLegacyViewManagerInteropComponentView isSupported:componentNameString];
-
   // Fallback 1: Call provider function for component view class.
   Class<RCTComponentViewProtocol> klass = RCTComponentViewClassWithName(name.c_str());
   if (klass) {
-    [self registerComponentViewClass:klass andWarnIfNeeded:isRegisteredInInteropLayer];
+    [self registerComponentViewClass:klass];
     return YES;
   }
 
   // Fallback 2: Try to use Paper Interop.
-  if (isRegisteredInInteropLayer) {
+  NSString *componentNameString = RCTNSStringFromString(name);
+  if ([RCTLegacyViewManagerInteropComponentView isSupported:componentNameString]) {
     RCTLogNewArchitectureValidation(
         RCTNotAllowedInBridgeless,
         self,
@@ -161,7 +155,7 @@ - (BOOL)registerComponentIfPossible:(std::string const &)name
 - (void)registerComponentViewClass:(Class<RCTComponentViewProtocol>)componentViewClass
 {
   RCTAssert(componentViewClass, @"RCTComponentViewFactory: Provided `componentViewClass` is `nil`.");
-  std::unique_lock lock(_mutex);
+  std::unique_lock<butter::shared_mutex> lock(_mutex);
 
   auto componentDescriptorProvider = [componentViewClass componentDescriptorProvider];
   _componentViewClasses[componentDescriptorProvider.handle] =
@@ -183,7 +177,7 @@ - (void)_addDescriptorToProviderRegistry:(ComponentDescriptorProvider const &)pr
 - (RCTComponentViewDescriptor)createComponentViewWithComponentHandle:(facebook::react::ComponentHandle)componentHandle
 {
   RCTAssertMainQueue();
-  std::shared_lock lock(_mutex);
+  std::shared_lock<butter::shared_mutex> lock(_mutex);
 
   auto iterator = _componentViewClasses.find(componentHandle);
   RCTAssert(
@@ -204,22 +198,9 @@ - (RCTComponentViewDescriptor)createComponentViewWithComponentHandle:(facebook::
 - (facebook::react::ComponentDescriptorRegistry::Shared)createComponentDescriptorRegistryWithParameters:
     (facebook::react::ComponentDescriptorParameters)parameters
 {
-  std::shared_lock lock(_mutex);
+  std::shared_lock<butter::shared_mutex> lock(_mutex);
 
   return _providerRegistry.createComponentDescriptorRegistry(parameters);
 }
 
-#pragma mark - Private
-
-- (void)registerComponentViewClass:(Class<RCTComponentViewProtocol>)componentViewClass
-                   andWarnIfNeeded:(BOOL)isRegisteredInInteropLayer
-{
-  [self registerComponentViewClass:componentViewClass];
-  if (isRegisteredInInteropLayer) {
-    RCTLogWarn(
-        @"Component with class %@ has been registered in both the New Architecture Renderer and in the Interop Layer.\nPlease remove it from the Interop Layer",
-        componentViewClass);
-  }
-}
-
 @end
diff --git a/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewRegistry.mm b/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewRegistry.mm
index 624ffec..b748c05 100644
--- a/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewRegistry.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/RCTComponentViewRegistry.mm
@@ -11,13 +11,12 @@
 #import <React/RCTAssert.h>
 #import <React/RCTConstants.h>
 
-#import <React/RCTImageComponentView.h>
-#import <React/RCTParagraphComponentView.h>
-#import <React/RCTViewComponentView.h>
+#import "RCTImageComponentView.h"
+#import "RCTParagraphComponentView.h"
+#import "RCTViewComponentView.h"
 
 #import <butter/map.h>
 
-using namespace facebook;
 using namespace facebook::react;
 
 const NSInteger RCTComponentViewRegistryRecyclePoolMaxSize = 1024;
diff --git a/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.h b/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.h
index f33c5bc..d30d297 100644
--- a/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.h
+++ b/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.h
@@ -10,7 +10,6 @@
 #import <React/RCTMountingManagerDelegate.h>
 #import <React/RCTPrimitives.h>
 #import <react/renderer/core/ComponentDescriptor.h>
-#import <react/renderer/core/RawProps.h>
 #import <react/renderer/core/ReactPrimitives.h>
 #import <react/renderer/mounting/MountingCoordinator.h>
 #import <react/renderer/mounting/ShadowView.h>
@@ -48,7 +47,7 @@ NS_ASSUME_NONNULL_BEGIN
  * Schedule a mounting transaction to be performed on the main thread.
  * Can be called from any thread.
  */
-- (void)scheduleTransaction:(facebook::react::MountingCoordinator::Shared)mountingCoordinator;
+- (void)scheduleTransaction:(facebook::react::MountingCoordinator::Shared const &)mountingCoordinator;
 
 /**
  * Dispatch a command to be performed on the main thread.
diff --git a/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.mm b/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.mm
index 086849f..7c26c83 100644
--- a/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.mm
+++ b/node_modules/react-native/React/Fabric/Mounting/RCTMountingManager.mm
@@ -7,7 +7,6 @@
 
 #import "RCTMountingManager.h"
 
-#import <QuartzCore/QuartzCore.h>
 #import <butter/map.h>
 
 #import <React/RCTAssert.h>
@@ -22,10 +21,10 @@
 #import <react/renderer/debug/SystraceSection.h>
 #import <react/renderer/mounting/TelemetryController.h>
 
-#import <React/RCTComponentViewProtocol.h>
-#import <React/RCTComponentViewRegistry.h>
-#import <React/RCTConversions.h>
-#import <React/RCTMountingTransactionObserverCoordinator.h>
+#import "RCTComponentViewProtocol.h"
+#import "RCTComponentViewRegistry.h"
+#import "RCTConversions.h"
+#import "RCTMountingTransactionObserverCoordinator.h"
 
 using namespace facebook::react;
 
@@ -196,20 +195,21 @@ - (void)detachSurfaceFromView:(UIView *)view surfaceId:(SurfaceId)surfaceId
                                           componentViewDescriptor:rootViewDescriptor];
 }
 
-- (void)scheduleTransaction:(MountingCoordinator::Shared)mountingCoordinator
+- (void)scheduleTransaction:(MountingCoordinator::Shared const &)mountingCoordinator
 {
   if (RCTIsMainQueue()) {
     // Already on the proper thread, so:
     // * No need to do a thread jump;
     // * No need to do expensive copy of all mutations;
     // * No need to allocate a block.
-    [self initiateTransaction:*mountingCoordinator];
+    [self initiateTransaction:mountingCoordinator];
     return;
   }
 
+  auto mountingCoordinatorCopy = mountingCoordinator;
   RCTExecuteOnMainQueue(^{
     RCTAssertMainQueue();
-    [self initiateTransaction:*mountingCoordinator];
+    [self initiateTransaction:mountingCoordinatorCopy];
   });
 }
 
@@ -224,6 +224,7 @@ - (void)dispatchCommand:(ReactTag)reactTag commandName:(NSString *)commandName a
   }
 
   RCTExecuteOnMainQueue(^{
+    RCTAssertMainQueue();
     [self synchronouslyDispatchCommandOnUIThread:reactTag commandName:commandName args:args];
   });
 }
@@ -239,11 +240,12 @@ - (void)sendAccessibilityEvent:(ReactTag)reactTag eventType:(NSString *)eventTyp
   }
 
   RCTExecuteOnMainQueue(^{
+    RCTAssertMainQueue();
     [self synchronouslyDispatchAccessbilityEventOnUIThread:reactTag eventType:eventType];
   });
 }
 
-- (void)initiateTransaction:(MountingCoordinator const &)mountingCoordinator
+- (void)initiateTransaction:(MountingCoordinator::Shared const &)mountingCoordinator
 {
   SystraceSection s("-[RCTMountingManager initiateTransaction:]");
   RCTAssertMainQueue();
@@ -261,14 +263,14 @@ - (void)initiateTransaction:(MountingCoordinator const &)mountingCoordinator
   } while (_followUpTransactionRequired);
 }
 
-- (void)performTransaction:(MountingCoordinator const &)mountingCoordinator
+- (void)performTransaction:(MountingCoordinator::Shared const &)mountingCoordinator
 {
   SystraceSection s("-[RCTMountingManager performTransaction:]");
   RCTAssertMainQueue();
 
-  auto surfaceId = mountingCoordinator.getSurfaceId();
+  auto surfaceId = mountingCoordinator->getSurfaceId();
 
-  mountingCoordinator.getTelemetryController().pullTransaction(
+  mountingCoordinator->getTelemetryController().pullTransaction(
       [&](MountingTransaction const &transaction, SurfaceTelemetry const &surfaceTelemetry) {
         [self.delegate mountingManager:self willMountComponentsWithRootTag:surfaceId];
         _observerCoordinator.notifyObserversMountingTransactionWillMount(transaction, surfaceTelemetry);
diff --git a/node_modules/react-native/React/Fabric/RCTConversions.h b/node_modules/react-native/React/Fabric/RCTConversions.h
index ca5cd62..58cbfeb 100644
--- a/node_modules/react-native/React/Fabric/RCTConversions.h
+++ b/node_modules/react-native/React/Fabric/RCTConversions.h
@@ -11,6 +11,7 @@
 #import <react/renderer/components/view/primitives.h>
 #import <react/renderer/core/LayoutPrimitives.h>
 #import <react/renderer/graphics/Color.h>
+#import <react/renderer/graphics/Geometry.h>
 #import <react/renderer/graphics/Transform.h>
 
 NS_ASSUME_NONNULL_BEGIN
diff --git a/node_modules/react-native/React/Fabric/RCTScheduler.h b/node_modules/react-native/React/Fabric/RCTScheduler.h
index 1424fc6..bebc5fd 100644
--- a/node_modules/react-native/React/Fabric/RCTScheduler.h
+++ b/node_modules/react-native/React/Fabric/RCTScheduler.h
@@ -28,7 +28,7 @@ NS_ASSUME_NONNULL_BEGIN
  */
 @protocol RCTSchedulerDelegate
 
-- (void)schedulerDidFinishTransaction:(facebook::react::MountingCoordinator::Shared)mountingCoordinator;
+- (void)schedulerDidFinishTransaction:(facebook::react::MountingCoordinator::Shared const &)mountingCoordinator;
 
 - (void)schedulerDidDispatchCommand:(facebook::react::ShadowView const &)shadowView
                         commandName:(std::string const &)commandName
diff --git a/node_modules/react-native/React/Fabric/RCTScheduler.mm b/node_modules/react-native/React/Fabric/RCTScheduler.mm
index 231adc5..1b621d6 100644
--- a/node_modules/react-native/React/Fabric/RCTScheduler.mm
+++ b/node_modules/react-native/React/Fabric/RCTScheduler.mm
@@ -24,10 +24,10 @@
  public:
   SchedulerDelegateProxy(void *scheduler) : scheduler_(scheduler) {}
 
-  void schedulerDidFinishTransaction(MountingCoordinator::Shared mountingCoordinator) override
+  void schedulerDidFinishTransaction(MountingCoordinator::Shared const &mountingCoordinator) override
   {
     RCTScheduler *scheduler = (__bridge RCTScheduler *)scheduler_;
-    [scheduler.delegate schedulerDidFinishTransaction:std::move(mountingCoordinator)];
+    [scheduler.delegate schedulerDidFinishTransaction:mountingCoordinator];
   }
 
   void schedulerDidRequestPreliminaryViewAllocation(SurfaceId surfaceId, const ShadowNode &shadowNode) override
@@ -115,6 +115,15 @@ - (instancetype)initWithToolbox:(SchedulerToolbox)toolbox
       _layoutAnimationDelegateProxy = std::make_shared<LayoutAnimationDelegateProxy>((__bridge void *)self);
       _animationDriver = std::make_shared<LayoutAnimationDriver>(
           toolbox.runtimeExecutor, toolbox.contextContainer, _layoutAnimationDelegateProxy.get());
+      if (reactNativeConfig->getBool("react_fabric:enabled_skip_invalidated_key_frames_ios")) {
+        _animationDriver->enableSkipInvalidatedKeyFrames();
+      }
+      if (reactNativeConfig->getBool("react_fabric:enable_crash_on_missing_component_descriptor")) {
+        _animationDriver->enableCrashOnMissingComponentDescriptor();
+      }
+      if (reactNativeConfig->getBool("react_fabric:enable_simulate_image_props_memory_access")) {
+        _animationDriver->enableSimulateImagePropsMemoryAccess();
+      }
       _uiRunLoopObserver =
           toolbox.mainRunLoopObserverFactory(RunLoopObserver::Activity::BeforeWaiting, _layoutAnimationDelegateProxy);
       _uiRunLoopObserver->setDelegate(_layoutAnimationDelegateProxy.get());
diff --git a/node_modules/react-native/React/Fabric/RCTSurfacePointerHandler.h b/node_modules/react-native/React/Fabric/RCTSurfacePointerHandler.h
deleted file mode 100644
index da89928..0000000
--- a/node_modules/react-native/React/Fabric/RCTSurfacePointerHandler.h
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#import <UIKit/UIKit.h>
-
-NS_ASSUME_NONNULL_BEGIN
-
-@interface RCTSurfacePointerHandler : UIGestureRecognizer
-
-/*
- * Attaches (and detaches) a view to the touch handler.
- * The receiver does not retain the provided view.
- */
-- (void)attachToView:(UIView *)view;
-- (void)detachFromView:(UIView *)view;
-
-/*
- * Offset of the attached view relative to the root component in points.
- */
-@property (nonatomic, assign) CGPoint viewOriginOffset;
-
-@end
-
-NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/Fabric/RCTSurfacePointerHandler.mm b/node_modules/react-native/React/Fabric/RCTSurfacePointerHandler.mm
deleted file mode 100644
index a9b3eb9..0000000
--- a/node_modules/react-native/React/Fabric/RCTSurfacePointerHandler.mm
+++ /dev/null
@@ -1,882 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#import "RCTSurfacePointerHandler.h"
-
-#import <React/RCTIdentifierPool.h>
-#import <React/RCTReactTaggedView.h>
-#import <React/RCTUtils.h>
-#import <React/RCTViewComponentView.h>
-
-#import "RCTConversions.h"
-#import "RCTTouchableComponentViewProtocol.h"
-
-using namespace facebook::react;
-
-typedef NS_ENUM(NSInteger, RCTPointerEventType) {
-  RCTPointerEventTypeStart,
-  RCTPointerEventTypeMove,
-  RCTPointerEventTypeEnd,
-  RCTPointerEventTypeCancel,
-};
-
-struct ActivePointer {
-  /*
-   * Pointer ID
-   */
-  NSInteger identifier;
-
-  /*
-   * The component view on which the touch started.
-   */
-  UIView<RCTComponentViewProtocol> *initialComponentView = nil;
-
-  /*
-   * The current target component view of the pointer
-   */
-  UIView<RCTComponentViewProtocol> *componentView = nil;
-
-  /*
-   * The location of the pointer relative to the root component view
-   */
-  CGPoint clientPoint;
-
-  /*
-   * The location of the pointer relative to the device's screen
-   */
-  CGPoint screenPoint;
-
-  /*
-   * The location of the pointer relative to the pointer's target
-   */
-  CGPoint offsetPoint;
-
-  /*
-   * Current timestamp of the pointer event
-   */
-  NSTimeInterval timestamp;
-
-  /*
-   * The current force of the pointer
-   */
-  Float force;
-
-  /*
-   * The type of touch received.
-   */
-  UITouchType touchType;
-
-  /*
-   * The radius (in points) of the touch.
-   */
-  CGFloat majorRadius;
-
-  /*
-   * The altitude (in radians) of the stylus.
-   */
-  CGFloat altitudeAngle;
-
-  /*
-   * The azimuth angle (in radians) of the stylus.
-   */
-  CGFloat azimuthAngle;
-
-  /*
-   * The button mask of the touch
-   */
-  UIEventButtonMask buttonMask;
-
-  /*
-   * The bit mask of modifier flags in the gesture represented by the receiver.
-   */
-  UIKeyModifierFlags modifierFlags;
-
-  /*
-   * Indicates if the active touch represents the primary pointer of this pointer type.
-   */
-  BOOL isPrimary;
-
-  /*
-   * The button number that was pressed (if applicable) when the event was fired.
-   */
-  NSInteger button;
-
-  /*
-   * Informs the event system that when the touch is released it should be treated as the
-   * pointer leaving the screen entirely.
-   */
-  BOOL shouldLeaveWhenReleased;
-
-  struct Hasher {
-    size_t operator()(const ActivePointer &activePointer) const
-    {
-      return std::hash<decltype(activePointer.identifier)>()(activePointer.identifier);
-    }
-  };
-
-  struct Comparator {
-    bool operator()(const ActivePointer &lhs, const ActivePointer &rhs) const
-    {
-      return lhs.identifier == rhs.identifier;
-    }
-  };
-};
-
-// Mouse and Pen pointers get reserved IDs so they stay consistent no matter the order
-// at which events come in
-static NSInteger constexpr kMousePointerId = 0;
-static NSInteger constexpr kPencilPointerId = 1;
-
-// If a new reserved ID is added above this should be incremented to ensure touch events
-// do not conflict
-static NSInteger constexpr kTouchIdentifierPoolOffset = 2;
-
-static SharedTouchEventEmitter GetTouchEmitterFromView(UIView *componentView, CGPoint point)
-{
-  return [(id<RCTTouchableComponentViewProtocol>)componentView touchEventEmitterAtPoint:point];
-}
-
-static NSOrderedSet<RCTReactTaggedView *> *GetTouchableViewsInPathToRoot(UIView *componentView)
-{
-  NSMutableOrderedSet *results = [NSMutableOrderedSet orderedSet];
-  do {
-    if ([componentView respondsToSelector:@selector(touchEventEmitterAtPoint:)]) {
-      [results addObject:[RCTReactTaggedView wrap:componentView]];
-    }
-    componentView = componentView.superview;
-  } while (componentView);
-  return results;
-}
-
-static UIView *FindClosestFabricManagedTouchableView(UIView *componentView)
-{
-  while (componentView) {
-    if ([componentView respondsToSelector:@selector(touchEventEmitterAtPoint:)]) {
-      return componentView;
-    }
-    componentView = componentView.superview;
-  }
-  return nil;
-}
-
-static NSInteger ButtonMaskDiffToButton(UIEventButtonMask prevButtonMask, UIEventButtonMask curButtonMask)
-{
-  if (@available(iOS 13.4, *)) {
-    if ((prevButtonMask & UIEventButtonMaskPrimary) != (curButtonMask & UIEventButtonMaskPrimary)) {
-      return 0;
-    }
-    if ((prevButtonMask & 0x4) != (curButtonMask & 0x4)) {
-      return 1;
-    }
-    if ((prevButtonMask & UIEventButtonMaskSecondary) != (curButtonMask & UIEventButtonMaskSecondary)) {
-      return 2;
-    }
-  }
-  return -1;
-}
-
-// Returns a CGPoint which represents the tiltX/Y values (in RADIANS)
-// Adapted from https://gist.github.com/k3a/2903719bb42b48c9198d20c2d6f73ac1
-static CGPoint SphericalToTilt(CGFloat altitudeAngleRad, CGFloat azimuthAngleRad)
-{
-  if (altitudeAngleRad == M_PI / 2.0) {
-    return CGPointMake(0.0, 0.0);
-  } else if (altitudeAngleRad == 0.0) {
-    // when pen is laying on the pad it is impossible to precisely encode but at least approximate for 4 cases
-    if (azimuthAngleRad > 7.0 * M_PI / 4.0 || azimuthAngleRad <= M_PI / 4.0) {
-      // for azimuthRad == 0, the pen is on the positive Y axis
-      return CGPointMake(0.0, M_PI / 2.0);
-    } else if (azimuthAngleRad > M_PI / 4.0 && azimuthAngleRad <= 3 * M_PI / 4.0) {
-      // for azimuthRad == math.pi/2 the pen is on the positive X axis
-      return CGPointMake(M_PI / 2.0, 0.0);
-    } else if (azimuthAngleRad > 3.0 * M_PI / 4.0 && azimuthAngleRad <= 5.0 * M_PI / 4.0) {
-      // for azimuthRad == math.pi, the pen is on the negative Y axis
-      return CGPointMake(0.0, -M_PI / 2.0);
-    } else if (azimuthAngleRad > 5.0 * M_PI / 4.0 && azimuthAngleRad <= 7.0 * M_PI / 4.0) {
-      // for azimuthRad == math.pi + math.pi/2 pen on negative X axis
-      return CGPointMake(-M_PI / 2.0, 0.0);
-    }
-  }
-
-  CGFloat tanAlt = tan(altitudeAngleRad); // tan(x) = sin(x)/cos(x)
-
-  CGFloat tiltXrad = atan(sin(azimuthAngleRad) / tanAlt);
-  CGFloat tiltYrad = atan(cos(azimuthAngleRad) / tanAlt);
-
-  return CGPointMake(tiltXrad, tiltYrad);
-}
-
-static CGFloat RadsToDegrees(CGFloat rads)
-{
-  return rads * 180 / M_PI;
-}
-
-static NSInteger ButtonMaskToButtons(UIEventButtonMask buttonMask)
-{
-  NSInteger buttonsMaskResult = 0;
-  if (@available(iOS 13.4, *)) {
-    if ((buttonMask & UIEventButtonMaskPrimary) != 0) {
-      buttonsMaskResult |= 1;
-    }
-    if ((buttonMask & UIEventButtonMaskSecondary) != 0) {
-      buttonsMaskResult |= 2;
-    }
-    // undocumented mask value which represents the "auxiliary button" (i.e. middle mouse button)
-    if ((buttonMask & 0x4) != 0) {
-      buttonsMaskResult |= 4;
-    }
-  }
-  return buttonsMaskResult;
-}
-
-static const char *PointerTypeCStringFromUITouchType(UITouchType type)
-{
-  switch (type) {
-    case UITouchTypeDirect:
-      return "touch";
-    case UITouchTypePencil:
-      return "pen";
-    case UITouchTypeIndirectPointer:
-      return "mouse";
-    case UITouchTypeIndirect:
-    default:
-      return "";
-  }
-}
-
-static void UpdatePointerEventModifierFlags(PointerEvent &event, UIKeyModifierFlags flags)
-{
-  if (@available(iOS 13.4, *)) {
-    event.ctrlKey = (flags & UIKeyModifierControl) != 0;
-    event.shiftKey = (flags & UIKeyModifierShift) != 0;
-    event.altKey = (flags & UIKeyModifierAlternate) != 0;
-    event.metaKey = (flags & UIKeyModifierCommand) != 0;
-  } else {
-    event.ctrlKey = false;
-    event.shiftKey = false;
-    event.altKey = false;
-    event.metaKey = false;
-  }
-}
-
-static PointerEvent CreatePointerEventFromActivePointer(
-    ActivePointer activePointer,
-    RCTPointerEventType eventType,
-    UIView *rootComponentView)
-{
-  PointerEvent event = {};
-  event.pointerId = activePointer.identifier;
-  event.pointerType = PointerTypeCStringFromUITouchType(activePointer.touchType);
-
-  if (eventType == RCTPointerEventTypeCancel) {
-    event.clientPoint = RCTPointFromCGPoint(CGPointZero);
-    event.screenPoint =
-        RCTPointFromCGPoint([rootComponentView convertPoint:CGPointZero
-                                          toCoordinateSpace:rootComponentView.window.screen.coordinateSpace]);
-    event.offsetPoint = RCTPointFromCGPoint([rootComponentView convertPoint:CGPointZero
-                                                                     toView:activePointer.componentView]);
-  } else {
-    event.clientPoint = RCTPointFromCGPoint(activePointer.clientPoint);
-    event.screenPoint = RCTPointFromCGPoint(activePointer.screenPoint);
-    event.offsetPoint = RCTPointFromCGPoint(activePointer.offsetPoint);
-  }
-
-  event.pressure = activePointer.force;
-  if (@available(iOS 13.4, *)) {
-    if (activePointer.touchType == UITouchTypeIndirectPointer) {
-      // pointer events with a mouse button pressed should report a pressure of 0.5
-      // when the touch is down and 0.0 when it is lifted regardless of how it is reported by the OS
-      event.pressure = eventType != RCTPointerEventTypeEnd ? 0.5 : 0.0;
-    }
-  }
-
-  CGFloat pointerSize = activePointer.majorRadius * 2.0;
-  if (@available(iOS 13.4, *)) {
-    if (activePointer.touchType == UITouchTypeIndirectPointer) {
-      // mouse type pointers should always report a size of 1
-      pointerSize = 1.0;
-    }
-  }
-  event.width = pointerSize;
-  event.height = pointerSize;
-
-  CGPoint tilt = SphericalToTilt(activePointer.altitudeAngle, activePointer.azimuthAngle);
-  event.tiltX = RadsToDegrees(tilt.x);
-  event.tiltY = RadsToDegrees(tilt.y);
-
-  event.detail = 0;
-
-  event.button = activePointer.button;
-  event.buttons = ButtonMaskToButtons(activePointer.buttonMask);
-
-  UpdatePointerEventModifierFlags(event, activePointer.modifierFlags);
-
-  event.tangentialPressure = 0.0;
-  event.twist = 0;
-  event.isPrimary = activePointer.isPrimary;
-
-  return event;
-}
-
-static PointerEvent CreatePointerEventFromIncompleteHoverData(
-    NSInteger pointerId,
-    std::string pointerType,
-    CGPoint clientLocation,
-    CGPoint screenLocation,
-    CGPoint offsetLocation,
-    UIKeyModifierFlags modifierFlags)
-{
-  PointerEvent event = {};
-  event.pointerId = pointerId;
-  event.pressure = 0.0;
-  event.pointerType = pointerType;
-  event.clientPoint = RCTPointFromCGPoint(clientLocation);
-  event.screenPoint = RCTPointFromCGPoint(screenLocation);
-  event.offsetPoint = RCTPointFromCGPoint(offsetLocation);
-  event.width = 1.0;
-  event.height = 1.0;
-  event.tiltX = 0;
-  event.tiltY = 0;
-  event.detail = 0;
-  event.button = -1;
-  event.buttons = 0;
-  UpdatePointerEventModifierFlags(event, modifierFlags);
-  event.tangentialPressure = 0.0;
-  event.twist = 0;
-  event.isPrimary = true;
-
-  return event;
-}
-
-static void UpdateActivePointerWithUITouch(
-    ActivePointer &activePointer,
-    UITouch *uiTouch,
-    UIEvent *uiEvent,
-    UIView *rootComponentView)
-{
-  activePointer.componentView = FindClosestFabricManagedTouchableView(uiTouch.view);
-
-  activePointer.clientPoint = [uiTouch locationInView:rootComponentView];
-  activePointer.screenPoint = [rootComponentView convertPoint:activePointer.clientPoint
-                                            toCoordinateSpace:rootComponentView.window.screen.coordinateSpace];
-  activePointer.offsetPoint = [uiTouch locationInView:activePointer.componentView];
-
-  activePointer.timestamp = uiTouch.timestamp;
-
-  activePointer.force = RCTZeroIfNaN(uiTouch.force / uiTouch.maximumPossibleForce);
-
-  activePointer.touchType = uiTouch.type;
-  activePointer.majorRadius = uiTouch.majorRadius;
-  activePointer.altitudeAngle = uiTouch.altitudeAngle;
-  activePointer.azimuthAngle = [uiTouch azimuthAngleInView:nil];
-
-  if (@available(ios 13.4, *)) {
-    UIEventButtonMask nextButtonMask = 0;
-    if (uiTouch.phase != UITouchPhaseEnded) {
-      nextButtonMask = uiTouch.type == UITouchTypeIndirectPointer ? uiEvent.buttonMask : 1;
-    }
-    activePointer.button = ButtonMaskDiffToButton(activePointer.buttonMask, nextButtonMask);
-    activePointer.buttonMask = nextButtonMask;
-    activePointer.modifierFlags = uiEvent.modifierFlags;
-  } else {
-    activePointer.button = 0;
-    activePointer.buttonMask = 0;
-    activePointer.modifierFlags = 0;
-  }
-}
-
-static BOOL IsViewListeningToEvent(RCTReactTaggedView *taggedView, ViewEvents::Offset eventType)
-{
-  UIView *view = taggedView.view;
-  if (view && [view.class conformsToProtocol:@protocol(RCTComponentViewProtocol)]) {
-    auto props = ((id<RCTComponentViewProtocol>)view).props;
-    if (SharedViewProps viewProps = std::dynamic_pointer_cast<ViewProps const>(props)) {
-      return viewProps->events[eventType];
-    }
-  }
-  return NO;
-}
-
-static BOOL IsAnyViewInPathListeningToEvent(NSOrderedSet<RCTReactTaggedView *> *viewPath, ViewEvents::Offset eventType)
-{
-  for (RCTReactTaggedView *taggedView in viewPath) {
-    if (IsViewListeningToEvent(taggedView, eventType)) {
-      return YES;
-    }
-  }
-  return NO;
-}
-
-/**
- * Surprisingly, `__unsafe_unretained id` pointers are not regular pointers
- * and `std::hash<>` cannot hash them.
- * This is quite trivial but decent implementation of hasher function
- * inspired by this research: https://stackoverflow.com/a/21062520/496389.
- */
-template <typename PointerT>
-struct PointerHasher {
-  constexpr std::size_t operator()(const PointerT &value) const
-  {
-    return reinterpret_cast<size_t>(value);
-  }
-};
-
-@interface RCTSurfacePointerHandler () <UIGestureRecognizerDelegate>
-@end
-
-@implementation RCTSurfacePointerHandler {
-  std::unordered_map<__unsafe_unretained UITouch *, ActivePointer, PointerHasher<__unsafe_unretained UITouch *>>
-      _activePointers;
-
-  /*
-   * We hold the view weakly to prevent a retain cycle.
-   */
-  __weak UIView *_rootComponentView;
-  RCTIdentifierPool<11> _identifierPool;
-
-  UIHoverGestureRecognizer *_mouseHoverRecognizer API_AVAILABLE(ios(13.0));
-  UIHoverGestureRecognizer *_penHoverRecognizer API_AVAILABLE(ios(13.0));
-
-  NSMutableDictionary<NSNumber *, NSOrderedSet<RCTReactTaggedView *> *> *_currentlyHoveredViewsPerPointer;
-
-  NSInteger _primaryTouchPointerId;
-}
-
-- (instancetype)init
-{
-  if (self = [super initWithTarget:nil action:nil]) {
-    // `cancelsTouchesInView` and `delaysTouches*` are needed in order
-    // to be used as a top level event delegated recognizer.
-    // Otherwise, lower-level components not built using React Native,
-    // will fail to recognize gestures.
-    self.cancelsTouchesInView = NO;
-    self.delaysTouchesBegan = NO; // This is default value.
-    self.delaysTouchesEnded = NO;
-
-    self.delegate = self;
-
-    _mouseHoverRecognizer = nil;
-    _penHoverRecognizer = nil;
-    _currentlyHoveredViewsPerPointer = [[NSMutableDictionary alloc] init];
-    _primaryTouchPointerId = -1;
-  }
-
-  return self;
-}
-
-RCT_NOT_IMPLEMENTED(-(instancetype)initWithTarget : (id)target action : (SEL)action)
-
-- (void)attachToView:(UIView *)view
-{
-  RCTAssert(self.view == nil, @"RCTSurfacePointerHandler already has an attached view.");
-
-  [view addGestureRecognizer:self];
-  _rootComponentView = view;
-
-  if (@available(iOS 13.4, *)) {
-    _mouseHoverRecognizer = [[UIHoverGestureRecognizer alloc] initWithTarget:self action:@selector(mouseHovering:)];
-    _mouseHoverRecognizer.allowedTouchTypes = @[ @(UITouchTypeIndirectPointer) ];
-    [view addGestureRecognizer:_mouseHoverRecognizer];
-
-    _penHoverRecognizer = [[UIHoverGestureRecognizer alloc] initWithTarget:self action:@selector(penHovering:)];
-    _penHoverRecognizer.allowedTouchTypes = @[ @(UITouchTypePencil) ];
-    [view addGestureRecognizer:_penHoverRecognizer];
-  }
-}
-
-- (void)detachFromView:(UIView *)view
-{
-  RCTAssertParam(view);
-  RCTAssert(self.view == view, @"RCTSufracePointerHandler attached to another view.");
-
-  [view removeGestureRecognizer:self];
-  _rootComponentView = nil;
-
-  if (_mouseHoverRecognizer != nil) {
-    [view removeGestureRecognizer:_mouseHoverRecognizer];
-    _mouseHoverRecognizer = nil;
-  }
-
-  if (_penHoverRecognizer != nil) {
-    [view removeGestureRecognizer:_penHoverRecognizer];
-    _penHoverRecognizer = nil;
-  }
-}
-
-#pragma mark - UITouch to ActivePointer management
-
-- (void)_registerTouches:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
-{
-  for (UITouch *touch in touches) {
-    ActivePointer activePointer = {};
-
-    // Determine the identifier of the Pointer and if it is the primary pointer
-    if (@available(iOS 13.4, *)) {
-      switch (touch.type) {
-        case UITouchTypeIndirectPointer:
-          activePointer.identifier = kMousePointerId;
-          activePointer.isPrimary = true;
-          break;
-        case UITouchTypePencil:
-          activePointer.identifier = kPencilPointerId;
-          activePointer.isPrimary = true;
-          break;
-        default:
-          // use the identifier pool offset to ensure no conflicts between the reserved IDs and the
-          // touch IDs
-          activePointer.identifier = _identifierPool.dequeue() + kTouchIdentifierPoolOffset;
-          if (_primaryTouchPointerId == -1) {
-            _primaryTouchPointerId = activePointer.identifier;
-            activePointer.isPrimary = true;
-          }
-          break;
-      }
-    } else {
-      activePointer.identifier = _identifierPool.dequeue();
-      if (_primaryTouchPointerId == -1) {
-        _primaryTouchPointerId = activePointer.identifier;
-        activePointer.isPrimary = true;
-      }
-    }
-
-    // If the pointer has not been marked as hovering over views before the touch started, we register
-    // that the activeTouch should not maintain its hovered state once the pointer has been lifted.
-    auto currentlyHoveredViews = [_currentlyHoveredViewsPerPointer objectForKey:@(activePointer.identifier)];
-    if (currentlyHoveredViews == nil || [currentlyHoveredViews count] == 0) {
-      activePointer.shouldLeaveWhenReleased = YES;
-    }
-
-    UpdateActivePointerWithUITouch(activePointer, touch, event, _rootComponentView);
-
-    _activePointers.emplace(touch, activePointer);
-  }
-}
-
-- (void)_updateTouches:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
-{
-  for (UITouch *touch in touches) {
-    auto iterator = _activePointers.find(touch);
-    RCTAssert(iterator != _activePointers.end(), @"Inconsistency between local and UIKit touch registries");
-    if (iterator == _activePointers.end()) {
-      continue;
-    }
-    UpdateActivePointerWithUITouch(iterator->second, touch, event, _rootComponentView);
-  }
-}
-
-- (void)_unregisterTouches:(NSSet<UITouch *> *)touches
-{
-  for (UITouch *touch in touches) {
-    auto iterator = _activePointers.find(touch);
-    RCTAssert(iterator != _activePointers.end(), @"Inconsistency between local and UIKit touch registries");
-    if (iterator == _activePointers.end()) {
-      continue;
-    }
-    auto &activePointer = iterator->second;
-
-    if (activePointer.identifier == _primaryTouchPointerId) {
-      _primaryTouchPointerId = -1;
-    }
-
-    if (@available(iOS 13.4, *)) {
-      // only need to enqueue if the touch type isn't one with a reserved identifier
-      switch (touch.type) {
-        case UITouchTypeIndirectPointer:
-        case UITouchTypePencil:
-          break;
-        default:
-          // since the touch's identifier has been offset we need to re-normalize it to 0-based
-          // which is what the identifier pool expects
-          _identifierPool.enqueue(activePointer.identifier - kTouchIdentifierPoolOffset);
-      }
-    } else {
-      _identifierPool.enqueue(activePointer.identifier);
-    }
-
-    _activePointers.erase(touch);
-  }
-}
-
-- (std::vector<ActivePointer>)_activePointersFromTouches:(NSSet<UITouch *> *)touches
-{
-  std::vector<ActivePointer> activePointers;
-  activePointers.reserve(touches.count);
-
-  for (UITouch *touch in touches) {
-    auto iterator = _activePointers.find(touch);
-    RCTAssert(iterator != _activePointers.end(), @"Inconsistency between local and UIKit touch registries");
-    if (iterator == _activePointers.end()) {
-      continue;
-    }
-    activePointers.push_back(iterator->second);
-  }
-
-  return activePointers;
-}
-
-- (void)_dispatchActivePointers:(std::vector<ActivePointer>)activePointers eventType:(RCTPointerEventType)eventType
-{
-  for (const auto &activePointer : activePointers) {
-    PointerEvent pointerEvent = CreatePointerEventFromActivePointer(activePointer, eventType, _rootComponentView);
-    NSOrderedSet<RCTReactTaggedView *> *eventPathViews = [self handleIncomingPointerEvent:pointerEvent
-                                                                                   onView:activePointer.componentView];
-
-    SharedTouchEventEmitter eventEmitter = GetTouchEmitterFromView(
-        activePointer.componentView,
-        [_rootComponentView convertPoint:activePointer.clientPoint toView:activePointer.componentView]);
-
-    if (eventEmitter != nil) {
-      switch (eventType) {
-        case RCTPointerEventTypeStart: {
-          eventEmitter->onPointerDown(pointerEvent);
-          break;
-        }
-        case RCTPointerEventTypeMove: {
-          BOOL hasMoveEventListeners =
-              IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMove) ||
-              IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMoveCapture);
-          if (hasMoveEventListeners) {
-            eventEmitter->onPointerMove(pointerEvent);
-          }
-          break;
-        }
-        case RCTPointerEventTypeEnd: {
-          eventEmitter->onPointerUp(pointerEvent);
-          if (activePointer.shouldLeaveWhenReleased) {
-            [self handleIncomingPointerEvent:pointerEvent onView:nil];
-          }
-          break;
-        }
-        case RCTPointerEventTypeCancel: {
-          eventEmitter->onPointerCancel(pointerEvent);
-          [self handleIncomingPointerEvent:pointerEvent onView:nil];
-          break;
-        }
-      }
-    }
-  }
-}
-
-#pragma mark - `UIResponder`-ish touch-delivery methods
-
-- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
-{
-  [super touchesBegan:touches withEvent:event];
-
-  [self _registerTouches:touches withEvent:event];
-  [self _dispatchActivePointers:[self _activePointersFromTouches:touches] eventType:RCTPointerEventTypeStart];
-}
-
-- (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
-{
-  [super touchesMoved:touches withEvent:event];
-
-  [self _updateTouches:touches withEvent:event];
-  [self _dispatchActivePointers:[self _activePointersFromTouches:touches] eventType:RCTPointerEventTypeMove];
-}
-
-- (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
-{
-  [super touchesEnded:touches withEvent:event];
-
-  [self _updateTouches:touches withEvent:event];
-  [self _dispatchActivePointers:[self _activePointersFromTouches:touches] eventType:RCTPointerEventTypeEnd];
-  [self _unregisterTouches:touches];
-}
-
-- (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
-{
-  [super touchesCancelled:touches withEvent:event];
-
-  [self _updateTouches:touches withEvent:event];
-  [self _dispatchActivePointers:[self _activePointersFromTouches:touches] eventType:RCTPointerEventTypeCancel];
-  [self _unregisterTouches:touches];
-}
-
-- (void)reset
-{
-  [super reset];
-
-  if (!_activePointers.empty()) {
-    std::vector<ActivePointer> activePointers;
-    activePointers.reserve(_activePointers.size());
-
-    for (auto const &pair : _activePointers) {
-      activePointers.push_back(pair.second);
-    }
-
-    [self _dispatchActivePointers:activePointers eventType:RCTPointerEventTypeCancel];
-
-    // Force-unregistering all the pointers
-    _activePointers.clear();
-    _identifierPool.reset();
-  }
-}
-
-- (BOOL)canPreventGestureRecognizer:(UIGestureRecognizer *)preventedGestureRecognizer
-{
-  return NO;
-}
-
-#pragma mark - Hover callbacks
-
-- (void)penHovering:(UIHoverGestureRecognizer *)recognizer API_AVAILABLE(ios(13.0))
-{
-  [self hovering:recognizer pointerId:kPencilPointerId pointerType:"pen"];
-}
-
-- (void)mouseHovering:(UIHoverGestureRecognizer *)recognizer API_AVAILABLE(ios(13.0))
-{
-  [self hovering:recognizer pointerId:kMousePointerId pointerType:"mouse"];
-}
-
-- (void)hovering:(UIHoverGestureRecognizer *)recognizer
-       pointerId:(int)pointerId
-     pointerType:(std::string)pointerType API_AVAILABLE(ios(13.0))
-{
-  UIView *listenerView = recognizer.view;
-  CGPoint clientLocation = [recognizer locationInView:listenerView];
-  CGPoint screenLocation = [listenerView convertPoint:clientLocation
-                                    toCoordinateSpace:listenerView.window.screen.coordinateSpace];
-
-  UIView *targetView = [listenerView hitTest:clientLocation withEvent:nil];
-  targetView = FindClosestFabricManagedTouchableView(targetView);
-
-  CGPoint offsetLocation = [recognizer locationInView:targetView];
-
-  UIKeyModifierFlags modifierFlags;
-  if (@available(iOS 13.4, *)) {
-    modifierFlags = recognizer.modifierFlags;
-  } else {
-    modifierFlags = 0;
-  }
-
-  PointerEvent event = CreatePointerEventFromIncompleteHoverData(
-      pointerId, pointerType, clientLocation, screenLocation, offsetLocation, modifierFlags);
-
-  NSOrderedSet<RCTReactTaggedView *> *eventPathViews = [self handleIncomingPointerEvent:event onView:targetView];
-  SharedTouchEventEmitter eventEmitter = GetTouchEmitterFromView(targetView, offsetLocation);
-  BOOL hasMoveEventListeners = IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMove) ||
-      IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMoveCapture);
-  if (eventEmitter != nil && hasMoveEventListeners) {
-    eventEmitter->onPointerMove(event);
-  }
-}
-
-#pragma mark - Shared pointer handlers
-
-/**
- * Private method which is used for tracking the location of pointer events to manage the entering/leaving events.
- * The primary idea is that a pointer's presence & movement is dicated by a variety of underlying events such as down,
- * move, and up — and they should all be treated the same when it comes to tracking the entering & leaving of pointers
- * to views. This method accomplishes that by receiving the pointer event, the target view (can be null in cases when
- * the event indicates that the pointer has left the screen entirely), and a block/callback where the underlying event
- * should be fired.
- */
-- (NSOrderedSet<RCTReactTaggedView *> *)handleIncomingPointerEvent:(PointerEvent)event
-                                                            onView:(nullable UIView *)targetView
-{
-  NSInteger pointerId = event.pointerId;
-  CGPoint clientLocation = CGPointMake(event.clientPoint.x, event.clientPoint.y);
-
-  NSOrderedSet<RCTReactTaggedView *> *currentlyHoveredViews =
-      [_currentlyHoveredViewsPerPointer objectForKey:@(pointerId)];
-  if (currentlyHoveredViews == nil) {
-    currentlyHoveredViews = [NSOrderedSet orderedSet];
-  }
-
-  RCTReactTaggedView *targetTaggedView = [RCTReactTaggedView wrap:targetView];
-  RCTReactTaggedView *prevTargetTaggedView = [currentlyHoveredViews firstObject];
-  UIView *prevTargetView = prevTargetTaggedView.view;
-
-  NSOrderedSet<RCTReactTaggedView *> *eventPathViews = GetTouchableViewsInPathToRoot(targetView);
-
-  // Out
-  if (prevTargetView != nil && prevTargetTaggedView.tag != targetTaggedView.tag) {
-    BOOL shouldEmitOutEvent = IsAnyViewInPathListeningToEvent(currentlyHoveredViews, ViewEvents::Offset::PointerOut);
-    SharedTouchEventEmitter eventEmitter =
-        GetTouchEmitterFromView(prevTargetView, [_rootComponentView convertPoint:clientLocation toView:prevTargetView]);
-    if (shouldEmitOutEvent && eventEmitter != nil) {
-      eventEmitter->onPointerOut(event);
-    }
-  }
-
-  // Leaving
-
-  // pointerleave events need to be emitted from the deepest target to the root but
-  // we also need to efficiently keep track of if a view has a parent which is listening to the leave events,
-  // so we first iterate from the root to the target, collecting the views which need events fired for, of which
-  // we reverse iterate (now from target to root), actually emitting the events.
-  NSMutableOrderedSet<UIView *> *viewsToEmitLeaveEventsTo = [NSMutableOrderedSet orderedSet];
-
-  BOOL hasParentLeaveListener = NO;
-  for (RCTReactTaggedView *taggedView in [currentlyHoveredViews reverseObjectEnumerator]) {
-    UIView *componentView = taggedView.view;
-
-    BOOL shouldEmitEvent = componentView != nil &&
-        (hasParentLeaveListener || IsViewListeningToEvent(taggedView, ViewEvents::Offset::PointerLeave));
-
-    if (shouldEmitEvent && ![eventPathViews containsObject:taggedView]) {
-      [viewsToEmitLeaveEventsTo addObject:componentView];
-    }
-
-    if (shouldEmitEvent && !hasParentLeaveListener) {
-      hasParentLeaveListener = YES;
-    }
-  }
-
-  for (UIView *componentView in [viewsToEmitLeaveEventsTo reverseObjectEnumerator]) {
-    SharedTouchEventEmitter eventEmitter =
-        GetTouchEmitterFromView(componentView, [_rootComponentView convertPoint:clientLocation toView:componentView]);
-    if (eventEmitter != nil) {
-      eventEmitter->onPointerLeave(event);
-    }
-  }
-
-  // Over
-  if (targetView != nil && prevTargetTaggedView.tag != targetTaggedView.tag) {
-    BOOL shouldEmitOverEvent = IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerOver);
-    SharedTouchEventEmitter eventEmitter =
-        GetTouchEmitterFromView(targetView, [_rootComponentView convertPoint:clientLocation toView:targetView]);
-    if (shouldEmitOverEvent && eventEmitter != nil) {
-      eventEmitter->onPointerOver(event);
-    }
-  }
-
-  // Entering
-
-  // We only want to emit events to JS if there is a view that is currently listening to said event
-  // so we only send those event to the JS side if the element which has been entered is itself listening,
-  // or if one of its parents is listening in case those listeners care about the capturing phase. Adding the ability
-  // for native to distinguish between capturing listeners and not could be an optimization to further reduce the number
-  // of events we send to JS
-  BOOL hasParentEnterListener = NO;
-  for (RCTReactTaggedView *taggedView in [eventPathViews reverseObjectEnumerator]) {
-    UIView *componentView = taggedView.view;
-
-    BOOL shouldEmitEvent = componentView != nil &&
-        (hasParentEnterListener || IsViewListeningToEvent(taggedView, ViewEvents::Offset::PointerEnter));
-
-    if (shouldEmitEvent && ![currentlyHoveredViews containsObject:taggedView]) {
-      SharedTouchEventEmitter eventEmitter =
-          GetTouchEmitterFromView(componentView, [_rootComponentView convertPoint:clientLocation toView:componentView]);
-      if (eventEmitter != nil) {
-        eventEmitter->onPointerEnter(event);
-      }
-    }
-
-    if (shouldEmitEvent && !hasParentEnterListener) {
-      hasParentEnterListener = YES;
-    }
-  }
-
-  [_currentlyHoveredViewsPerPointer setObject:eventPathViews forKey:@(pointerId)];
-
-  return eventPathViews;
-}
-
-@end
diff --git a/node_modules/react-native/React/Fabric/RCTSurfacePresenter.h b/node_modules/react-native/React/Fabric/RCTSurfacePresenter.h
index 0cdc11b..693fb51 100644
--- a/node_modules/react-native/React/Fabric/RCTSurfacePresenter.h
+++ b/node_modules/react-native/React/Fabric/RCTSurfacePresenter.h
@@ -36,7 +36,7 @@ NS_ASSUME_NONNULL_BEGIN
 
 /*
  * Suspends/resumes all surfaces associated with the presenter.
- * Suspending is a process or graceful stopping all surfaces and destroying all underlying infrastructure
+ * Suspending is a process or gracefull stopping all surfaces and destroying all underlying infrastructure
  * with a future possibility of recreating the infrastructure and restarting the surfaces from scratch.
  * Suspending is usually a part of a bundle reloading process.
  * Can be called on any thread.
diff --git a/node_modules/react-native/React/Fabric/RCTSurfacePresenter.mm b/node_modules/react-native/React/Fabric/RCTSurfacePresenter.mm
index d86ce02..dabc4a5 100644
--- a/node_modules/react-native/React/Fabric/RCTSurfacePresenter.mm
+++ b/node_modules/react-native/React/Fabric/RCTSurfacePresenter.mm
@@ -8,7 +8,6 @@
 #import "RCTSurfacePresenter.h"
 
 #import <mutex>
-#import <shared_mutex>
 
 #import <React/RCTAssert.h>
 #import <React/RCTBridge+Private.h>
@@ -40,7 +39,6 @@
 #import "PlatformRunLoopObserver.h"
 #import "RCTConversions.h"
 
-using namespace facebook;
 using namespace facebook::react;
 
 static dispatch_queue_t RCTGetBackgroundQueue()
@@ -84,7 +82,7 @@ @implementation RCTSurfacePresenter {
   RuntimeExecutor _runtimeExecutor; // Protected by `_schedulerLifeCycleMutex`.
   std::optional<RuntimeExecutor> _bridgelessBindingsExecutor; // Only used for installing bindings.
 
-  std::shared_mutex _observerListMutex;
+  butter::shared_mutex _observerListMutex;
   std::vector<__weak id<RCTSurfacePresenterObserver>> _observers; // Protected by `_observerListMutex`.
 }
 
@@ -277,18 +275,6 @@ - (RCTScheduler *)_createScheduler
     CoreFeatures::enablePropIteratorSetter = true;
   }
 
-  if (reactNativeConfig && reactNativeConfig->getBool("react_fabric:use_native_state")) {
-    CoreFeatures::useNativeState = true;
-  }
-
-  if (reactNativeConfig && reactNativeConfig->getBool("react_fabric:enable_nstextstorage_caching")) {
-    CoreFeatures::cacheNSTextStorage = true;
-  }
-
-  if (reactNativeConfig && reactNativeConfig->getBool("react_fabric:cancel_image_downloads_on_recycle")) {
-    CoreFeatures::cancelImageDownloadsOnRecycle = true;
-  }
-
   auto componentRegistryFactory =
       [factory = wrapManagedObject(_mountingManager.componentViewRegistry.componentViewFactory)](
           EventDispatcher::Weak const &eventDispatcher, ContextContainer::Shared const &contextContainer) {
@@ -369,7 +355,7 @@ - (void)_applicationWillTerminate
 
 #pragma mark - RCTSchedulerDelegate
 
-- (void)schedulerDidFinishTransaction:(MountingCoordinator::Shared)mountingCoordinator
+- (void)schedulerDidFinishTransaction:(MountingCoordinator::Shared const &)mountingCoordinator
 {
   [_mountingManager scheduleTransaction:mountingCoordinator];
 }
@@ -403,13 +389,13 @@ - (void)schedulerDidSetIsJSResponder:(BOOL)isJSResponder
 
 - (void)addObserver:(id<RCTSurfacePresenterObserver>)observer
 {
-  std::unique_lock lock(_observerListMutex);
+  std::unique_lock<butter::shared_mutex> lock(_observerListMutex);
   _observers.push_back(observer);
 }
 
 - (void)removeObserver:(id<RCTSurfacePresenterObserver>)observer
 {
-  std::unique_lock lock(_observerListMutex);
+  std::unique_lock<butter::shared_mutex> lock(_observerListMutex);
   std::vector<__weak id<RCTSurfacePresenterObserver>>::const_iterator it =
       std::find(_observers.begin(), _observers.end(), observer);
   if (it != _observers.end()) {
@@ -425,7 +411,7 @@ - (void)mountingManager:(RCTMountingManager *)mountingManager willMountComponent
 
   NSArray<id<RCTSurfacePresenterObserver>> *observersCopy;
   {
-    std::shared_lock lock(_observerListMutex);
+    std::shared_lock<butter::shared_mutex> lock(_observerListMutex);
     observersCopy = [self _getObservers];
   }
 
@@ -442,7 +428,7 @@ - (void)mountingManager:(RCTMountingManager *)mountingManager didMountComponents
 
   NSArray<id<RCTSurfacePresenterObserver>> *observersCopy;
   {
-    std::shared_lock lock(_observerListMutex);
+    std::shared_lock<butter::shared_mutex> lock(_observerListMutex);
     observersCopy = [self _getObservers];
   }
 
diff --git a/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.h b/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.h
index 5c4c22b..188d199 100644
--- a/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.h
+++ b/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.h
@@ -6,6 +6,7 @@
  */
 
 #import <Foundation/Foundation.h>
+#import <ReactCommon/RuntimeExecutor.h>
 #import <UIKit/UIKit.h>
 #import <react/utils/ContextContainer.h>
 
@@ -14,6 +15,8 @@ NS_ASSUME_NONNULL_BEGIN
 @class RCTSurfacePresenter;
 @class RCTBridge;
 
+facebook::react::RuntimeExecutor RCTRuntimeExecutorFromBridge(RCTBridge *bridge);
+
 /*
  * Controls a life-cycle of a Surface Presenter based on Bridge's life-cycle.
  * We are moving away from using Bridge.
diff --git a/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.mm b/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.mm
index 0c3c8a9..b456b80 100644
--- a/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.mm
+++ b/node_modules/react-native/React/Fabric/RCTSurfacePresenterBridgeAdapter.mm
@@ -15,7 +15,6 @@
 #import <React/RCTConstants.h>
 #import <React/RCTImageLoader.h>
 #import <React/RCTImageLoaderWithAttributionProtocol.h>
-#import <React/RCTRuntimeExecutorFromBridge.h>
 #import <React/RCTSurfacePresenter.h>
 #import <React/RCTSurfacePresenterStub.h>
 
@@ -43,6 +42,43 @@ - (void)invokeAsync:(std::function<void()> &&)func;
   return contextContainer;
 }
 
+RuntimeExecutor RCTRuntimeExecutorFromBridge(RCTBridge *bridge)
+{
+  RCTAssert(bridge, @"RCTRuntimeExecutorFromBridge: Bridge must not be nil.");
+
+  auto bridgeWeakWrapper = wrapManagedObjectWeakly([bridge batchedBridge] ?: bridge);
+
+  RuntimeExecutor runtimeExecutor = [bridgeWeakWrapper](
+                                        std::function<void(facebook::jsi::Runtime & runtime)> &&callback) {
+    RCTBridge *bridge = unwrapManagedObjectWeakly(bridgeWeakWrapper);
+
+    RCTAssert(bridge, @"RCTRuntimeExecutorFromBridge: Bridge must not be nil at the moment of scheduling a call.");
+
+    [bridge invokeAsync:[bridgeWeakWrapper, callback = std::move(callback)]() {
+      RCTCxxBridge *batchedBridge = (RCTCxxBridge *)unwrapManagedObjectWeakly(bridgeWeakWrapper);
+
+      RCTAssert(batchedBridge, @"RCTRuntimeExecutorFromBridge: Bridge must not be nil at the moment of invocation.");
+
+      if (!batchedBridge) {
+        return;
+      }
+
+      auto runtime = (facebook::jsi::Runtime *)(batchedBridge.runtime);
+
+      RCTAssert(
+          runtime, @"RCTRuntimeExecutorFromBridge: Bridge must have a valid jsi::Runtime at the moment of invocation.");
+
+      if (!runtime) {
+        return;
+      }
+
+      callback(*runtime);
+    }];
+  };
+
+  return runtimeExecutor;
+}
+
 @implementation RCTSurfacePresenterBridgeAdapter {
   RCTSurfacePresenter *_Nullable _surfacePresenter;
   __weak RCTBridge *_bridge;
diff --git a/node_modules/react-native/React/Fabric/RCTSurfaceRegistry.mm b/node_modules/react-native/React/Fabric/RCTSurfaceRegistry.mm
index 5d0e413..50c08f4 100644
--- a/node_modules/react-native/React/Fabric/RCTSurfaceRegistry.mm
+++ b/node_modules/react-native/React/Fabric/RCTSurfaceRegistry.mm
@@ -7,6 +7,7 @@
 
 #import "RCTSurfaceRegistry.h"
 
+#import <butter/mutex.h>
 #import <mutex>
 #import <shared_mutex>
 
@@ -15,7 +16,7 @@
 using namespace facebook;
 
 @implementation RCTSurfaceRegistry {
-  std::shared_mutex _mutex;
+  butter::shared_mutex _mutex;
   NSMapTable<id, RCTFabricSurface *> *_registry;
 }
 
@@ -31,13 +32,13 @@ - (instancetype)init
 
 - (void)enumerateWithBlock:(RCTSurfaceEnumeratorBlock)block
 {
-  std::shared_lock lock(_mutex);
+  std::shared_lock<butter::shared_mutex> lock(_mutex);
   block([_registry objectEnumerator]);
 }
 
 - (void)registerSurface:(RCTFabricSurface *)surface
 {
-  std::unique_lock lock(_mutex);
+  std::unique_lock<butter::shared_mutex> lock(_mutex);
 
   ReactTag rootTag = surface.rootViewTag.integerValue;
   [_registry setObject:surface forKey:(__bridge id)(void *)rootTag];
@@ -45,7 +46,7 @@ - (void)registerSurface:(RCTFabricSurface *)surface
 
 - (void)unregisterSurface:(RCTFabricSurface *)surface
 {
-  std::unique_lock lock(_mutex);
+  std::unique_lock<butter::shared_mutex> lock(_mutex);
 
   ReactTag rootTag = surface.rootViewTag.integerValue;
   [_registry removeObjectForKey:(__bridge id)(void *)rootTag];
@@ -53,7 +54,7 @@ - (void)unregisterSurface:(RCTFabricSurface *)surface
 
 - (RCTFabricSurface *)surfaceForRootTag:(ReactTag)rootTag
 {
-  std::shared_lock lock(_mutex);
+  std::shared_lock<butter::shared_mutex> lock(_mutex);
 
   return [_registry objectForKey:(__bridge id)(void *)rootTag];
 }
diff --git a/node_modules/react-native/React/Fabric/RCTSurfaceTouchHandler.mm b/node_modules/react-native/React/Fabric/RCTSurfaceTouchHandler.mm
index e6071e4..c6b7fd9 100644
--- a/node_modules/react-native/React/Fabric/RCTSurfaceTouchHandler.mm
+++ b/node_modules/react-native/React/Fabric/RCTSurfaceTouchHandler.mm
@@ -7,16 +7,46 @@
 
 #import "RCTSurfaceTouchHandler.h"
 
-#import <React/RCTIdentifierPool.h>
+#import <React/RCTReactTaggedView.h>
 #import <React/RCTUtils.h>
 #import <React/RCTViewComponentView.h>
 
 #import "RCTConversions.h"
-#import "RCTSurfacePointerHandler.h"
 #import "RCTTouchableComponentViewProtocol.h"
 
 using namespace facebook::react;
 
+template <size_t size>
+class IdentifierPool {
+ public:
+  void enqueue(int index)
+  {
+    usage[index] = false;
+  }
+
+  int dequeue()
+  {
+    while (true) {
+      if (!usage[lastIndex]) {
+        usage[lastIndex] = true;
+        return lastIndex;
+      }
+      lastIndex = (lastIndex + 1) % size;
+    }
+  }
+
+  void reset()
+  {
+    for (int i = 0; i < size; i++) {
+      usage[i] = false;
+    }
+  }
+
+ private:
+  bool usage[size];
+  int lastIndex;
+};
+
 typedef NS_ENUM(NSInteger, RCTTouchEventType) {
   RCTTouchEventTypeTouchStart,
   RCTTouchEventTypeTouchMove,
@@ -28,6 +58,52 @@ typedef NS_ENUM(NSInteger, RCTTouchEventType) {
   Touch touch;
   SharedTouchEventEmitter eventEmitter;
 
+  /*
+   * The type of touch received.
+   */
+  UITouchType touchType;
+
+  /*
+   * The radius (in points) of the touch.
+   */
+  CGFloat majorRadius;
+
+  /*
+   * The altitude (in radians) of the stylus.
+   */
+  CGFloat altitudeAngle;
+
+  /*
+   * The azimuth angle (in radians) of the stylus.
+   */
+  CGFloat azimuthAngle;
+
+  /*
+   * The button mask of the touch
+   */
+  UIEventButtonMask buttonMask;
+
+  /*
+   * The bit mask of modifier flags in the gesture represented by the receiver.
+   */
+  UIKeyModifierFlags modifierFlags;
+
+  /*
+   * Indicates if the active touch represents the primary pointer of this pointer type.
+   */
+  bool isPrimary;
+
+  /*
+   * The button number that was pressed (if applicable) when the event was fired.
+   */
+  int button;
+
+  /*
+   * Informs the event system that when the touch is released it should be treated as the
+   * pointer leaving the screen entirely.
+   */
+  bool shouldLeaveWhenReleased;
+
   /*
    * A component view on which the touch was begun.
    */
@@ -48,9 +124,89 @@ bool operator()(const ActiveTouch &lhs, const ActiveTouch &rhs) const
   };
 };
 
+// Mouse and Pen pointers get reserved IDs so they stay consistent no matter the order
+// at which events come in
+static int const kMousePointerId = 0;
+static int const kPencilPointerId = 1;
+
+// If a new reserved ID is added above this should be incremented to ensure touch events
+// do not conflict
+static int const kTouchIdentifierPoolOffset = 2;
+
+// Returns a CGPoint which represents the tiltX/Y values (in RADIANS)
+// Adapted from https://gist.github.com/k3a/2903719bb42b48c9198d20c2d6f73ac1
+static CGPoint SphericalToTilt(CGFloat altitudeAngleRad, CGFloat azimuthAngleRad)
+{
+  if (altitudeAngleRad == M_PI / 2.0) {
+    return CGPointMake(0.0, 0.0);
+  } else if (altitudeAngleRad == 0.0) {
+    // when pen is laying on the pad it is impossible to precisely encode but at least approximate for 4 cases
+    if (azimuthAngleRad > 7.0 * M_PI / 4.0 || azimuthAngleRad <= M_PI / 4.0) {
+      // for azimuthRad == 0, the pen is on the positive Y axis
+      return CGPointMake(0.0, M_PI / 2.0);
+    } else if (azimuthAngleRad > M_PI / 4.0 && azimuthAngleRad <= 3 * M_PI / 4.0) {
+      // for azimuthRad == math.pi/2 the pen is on the positive X axis
+      return CGPointMake(M_PI / 2.0, 0.0);
+    } else if (azimuthAngleRad > 3.0 * M_PI / 4.0 && azimuthAngleRad <= 5.0 * M_PI / 4.0) {
+      // for azimuthRad == math.pi, the pen is on the negative Y axis
+      return CGPointMake(0.0, -M_PI / 2.0);
+    } else if (azimuthAngleRad > 5.0 * M_PI / 4.0 && azimuthAngleRad <= 7.0 * M_PI / 4.0) {
+      // for azimuthRad == math.pi + math.pi/2 pen on negative X axis
+      return CGPointMake(-M_PI / 2.0, 0.0);
+    }
+  }
+
+  CGFloat tanAlt = tan(altitudeAngleRad); // tan(x) = sin(x)/cos(x)
+
+  CGFloat tiltXrad = atan(sin(azimuthAngleRad) / tanAlt);
+  CGFloat tiltYrad = atan(cos(azimuthAngleRad) / tanAlt);
+
+  return CGPointMake(tiltXrad, tiltYrad);
+}
+
+static CGFloat RadsToDegrees(CGFloat rads)
+{
+  return rads * 180 / M_PI;
+}
+
+static int ButtonMaskToButtons(UIEventButtonMask buttonMask)
+{
+  int buttonsMaskResult = 0;
+  if (@available(iOS 13.4, *)) {
+    if ((buttonMask & UIEventButtonMaskPrimary) != 0) {
+      buttonsMaskResult |= 1;
+    }
+    if ((buttonMask & UIEventButtonMaskSecondary) != 0) {
+      buttonsMaskResult |= 2;
+    }
+    // undocumented mask value which represents the "auxiliary button" (i.e. middle mouse button)
+    if ((buttonMask & 0x4) != 0) {
+      buttonsMaskResult |= 4;
+    }
+  }
+  return buttonsMaskResult;
+}
+
+static int ButtonMaskDiffToButton(UIEventButtonMask prevButtonMask, UIEventButtonMask curButtonMask)
+{
+  if (@available(iOS 13.4, *)) {
+    if ((prevButtonMask & UIEventButtonMaskPrimary) != (curButtonMask & UIEventButtonMaskPrimary)) {
+      return 0;
+    }
+    if ((prevButtonMask & 0x4) != (curButtonMask & 0x4)) {
+      return 1;
+    }
+    if ((prevButtonMask & UIEventButtonMaskSecondary) != (curButtonMask & UIEventButtonMaskSecondary)) {
+      return 2;
+    }
+  }
+  return -1;
+}
+
 static void UpdateActiveTouchWithUITouch(
     ActiveTouch &activeTouch,
     UITouch *uiTouch,
+    UIEvent *uiEvent,
     UIView *rootComponentView,
     CGPoint rootViewOriginOffset)
 {
@@ -58,6 +214,7 @@ static void UpdateActiveTouchWithUITouch(
   CGPoint pagePoint = [uiTouch locationInView:rootComponentView];
   CGPoint screenPoint = [rootComponentView convertPoint:pagePoint
                                       toCoordinateSpace:rootComponentView.window.screen.coordinateSpace];
+
   pagePoint = CGPointMake(pagePoint.x + rootViewOriginOffset.x, pagePoint.y + rootViewOriginOffset.y);
 
   activeTouch.touch.offsetPoint = RCTPointFromCGPoint(offsetPoint);
@@ -69,9 +226,28 @@ static void UpdateActiveTouchWithUITouch(
   if (RCTForceTouchAvailable()) {
     activeTouch.touch.force = RCTZeroIfNaN(uiTouch.force / uiTouch.maximumPossibleForce);
   }
+
+  activeTouch.touchType = uiTouch.type;
+  activeTouch.majorRadius = uiTouch.majorRadius;
+  activeTouch.altitudeAngle = uiTouch.altitudeAngle;
+  activeTouch.azimuthAngle = [uiTouch azimuthAngleInView:nil];
+  if (@available(iOS 13.4, *)) {
+    UIEventButtonMask nextButtonMask = 0;
+    if (uiTouch.phase != UITouchPhaseEnded) {
+      nextButtonMask = uiTouch.type == UITouchTypeIndirectPointer ? uiEvent.buttonMask : 1;
+    }
+    activeTouch.button = ButtonMaskDiffToButton(activeTouch.buttonMask, nextButtonMask);
+    activeTouch.buttonMask = nextButtonMask;
+    activeTouch.modifierFlags = uiEvent.modifierFlags;
+  } else {
+    activeTouch.button = 0;
+    activeTouch.buttonMask = 0;
+    activeTouch.modifierFlags = 0;
+  }
 }
 
-static ActiveTouch CreateTouchWithUITouch(UITouch *uiTouch, UIView *rootComponentView, CGPoint rootViewOriginOffset)
+static ActiveTouch
+CreateTouchWithUITouch(UITouch *uiTouch, UIEvent *uiEvent, UIView *rootComponentView, CGPoint rootViewOriginOffset)
 {
   ActiveTouch activeTouch = {};
 
@@ -87,11 +263,147 @@ static ActiveTouch CreateTouchWithUITouch(UITouch *uiTouch, UIView *rootComponen
     }
     componentView = componentView.superview;
   }
-
-  UpdateActiveTouchWithUITouch(activeTouch, uiTouch, rootComponentView, rootViewOriginOffset);
+  UpdateActiveTouchWithUITouch(activeTouch, uiTouch, uiEvent, rootComponentView, rootViewOriginOffset);
   return activeTouch;
 }
 
+static UIView *FindClosestFabricManagedTouchableView(UIView *componentView)
+{
+  while (componentView) {
+    if ([componentView respondsToSelector:@selector(touchEventEmitterAtPoint:)]) {
+      return componentView;
+    }
+    componentView = componentView.superview;
+  }
+  return nil;
+}
+
+static NSOrderedSet<RCTReactTaggedView *> *GetTouchableViewsInPathToRoot(UIView *componentView)
+{
+  NSMutableOrderedSet *results = [NSMutableOrderedSet orderedSet];
+  do {
+    if ([componentView respondsToSelector:@selector(touchEventEmitterAtPoint:)]) {
+      [results addObject:[RCTReactTaggedView wrap:componentView]];
+    }
+    componentView = componentView.superview;
+  } while (componentView);
+  return results;
+}
+
+static SharedTouchEventEmitter GetTouchEmitterFromView(UIView *componentView, CGPoint point)
+{
+  return [(id<RCTTouchableComponentViewProtocol>)componentView touchEventEmitterAtPoint:point];
+}
+
+static const char *PointerTypeCStringFromUITouchType(UITouchType type)
+{
+  switch (type) {
+    case UITouchTypeDirect:
+      return "touch";
+    case UITouchTypePencil:
+      return "pen";
+    case UITouchTypeIndirectPointer:
+      return "mouse";
+    case UITouchTypeIndirect:
+    default:
+      return "";
+  }
+}
+
+static void UpdatePointerEventModifierFlags(PointerEvent &event, UIKeyModifierFlags flags)
+{
+  if (@available(iOS 13.4, *)) {
+    event.ctrlKey = (flags & UIKeyModifierControl) != 0;
+    event.shiftKey = (flags & UIKeyModifierShift) != 0;
+    event.altKey = (flags & UIKeyModifierAlternate) != 0;
+    event.metaKey = (flags & UIKeyModifierCommand) != 0;
+  } else {
+    event.ctrlKey = false;
+    event.shiftKey = false;
+    event.altKey = false;
+    event.metaKey = false;
+  }
+}
+
+static PointerEvent CreatePointerEventFromActiveTouch(ActiveTouch activeTouch, RCTTouchEventType eventType)
+{
+  Touch touch = activeTouch.touch;
+
+  PointerEvent event = {};
+  event.pointerId = touch.identifier;
+  event.pointerType = PointerTypeCStringFromUITouchType(activeTouch.touchType);
+  event.clientPoint = touch.pagePoint;
+  event.screenPoint = touch.screenPoint;
+  event.offsetPoint = touch.offsetPoint;
+
+  event.pressure = touch.force;
+  if (@available(iOS 13.4, *)) {
+    if (activeTouch.touchType == UITouchTypeIndirectPointer) {
+      // pointer events with a mouse button pressed should report a pressure of 0.5
+      // when the touch is down and 0.0 when it is lifted regardless of how it is reported by the OS
+      event.pressure = eventType != RCTTouchEventTypeTouchEnd ? 0.5 : 0.0;
+    }
+  }
+
+  CGFloat pointerSize = activeTouch.majorRadius * 2.0;
+  if (@available(iOS 13.4, *)) {
+    if (activeTouch.touchType == UITouchTypeIndirectPointer) {
+      // mouse type pointers should always report a size of 1
+      pointerSize = 1.0;
+    }
+  }
+  event.width = pointerSize;
+  event.height = pointerSize;
+
+  CGPoint tilt = SphericalToTilt(activeTouch.altitudeAngle, activeTouch.azimuthAngle);
+  event.tiltX = RadsToDegrees(tilt.x);
+  event.tiltY = RadsToDegrees(tilt.y);
+
+  event.detail = 0;
+
+  event.button = activeTouch.button;
+  event.buttons = ButtonMaskToButtons(activeTouch.buttonMask);
+
+  UpdatePointerEventModifierFlags(event, activeTouch.modifierFlags);
+
+  event.tangentialPressure = 0.0;
+  event.twist = 0;
+  event.isPrimary = activeTouch.isPrimary;
+
+  return event;
+}
+
+static PointerEvent CreatePointerEventFromIncompleteHoverData(
+    CGPoint clientLocation,
+    CGPoint screenLocation,
+    CGPoint offsetLocation,
+    UIKeyModifierFlags modifierFlags)
+{
+  PointerEvent event = {};
+  // "touch" events produced from a mouse cursor on iOS always have the ID 0 so
+  // we can just assume that here since these sort of hover events only ever come
+  // from the mouse
+  event.pointerId = kMousePointerId;
+  event.pressure = 0.0;
+  event.pointerType = "mouse";
+  event.clientPoint = RCTPointFromCGPoint(clientLocation);
+  event.screenPoint = RCTPointFromCGPoint(screenLocation);
+  event.offsetPoint = RCTPointFromCGPoint(offsetLocation);
+  event.width = 1.0;
+  event.height = 1.0;
+  event.tiltX = 0;
+  event.tiltY = 0;
+  event.detail = 0;
+  event.button = -1;
+  event.buttons = 0;
+  UpdatePointerEventModifierFlags(event, modifierFlags);
+  event.tangentialPressure = 0.0;
+  event.twist = 0;
+  event.isPrimary = true;
+
+  return event;
+}
+
 static BOOL AllTouchesAreCancelledOrEnded(NSSet<UITouch *> *touches)
 {
   for (UITouch *touch in touches) {
@@ -112,6 +424,28 @@ static BOOL AnyTouchesChanged(NSSet<UITouch *> *touches)
   return NO;
 }
 
+static BOOL IsViewListeningToEvent(RCTReactTaggedView *taggedView, ViewEvents::Offset eventType)
+{
+  UIView *view = taggedView.view;
+  if (view && [view.class conformsToProtocol:@protocol(RCTComponentViewProtocol)]) {
+    auto props = ((id<RCTComponentViewProtocol>)view).props;
+    if (SharedViewProps viewProps = std::dynamic_pointer_cast<ViewProps const>(props)) {
+      return viewProps->events[eventType];
+    }
+  }
+  return NO;
+}
+
+static BOOL IsAnyViewInPathListeningToEvent(NSOrderedSet<RCTReactTaggedView *> *viewPath, ViewEvents::Offset eventType)
+{
+  for (RCTReactTaggedView *taggedView in viewPath) {
+    if (IsViewListeningToEvent(taggedView, eventType)) {
+      return YES;
+    }
+  }
+  return NO;
+}
+
 /**
  * Surprisingly, `__unsafe_unretained id` pointers are not regular pointers
  * and `std::hash<>` cannot hash them.
@@ -137,9 +471,12 @@ @implementation RCTSurfaceTouchHandler {
    * We hold the view weakly to prevent a retain cycle.
    */
   __weak UIView *_rootComponentView;
-  RCTIdentifierPool<11> _identifierPool;
+  IdentifierPool<11> _identifierPool;
+
+  UIHoverGestureRecognizer *_hoverRecognizer API_AVAILABLE(ios(13.0));
+  NSMutableDictionary<NSNumber *, NSOrderedSet<RCTReactTaggedView *> *> *_currentlyHoveredViewsPerPointer;
 
-  RCTSurfacePointerHandler *_pointerHandler;
+  int _primaryTouchPointerId;
 }
 
 - (instancetype)init
@@ -155,9 +492,9 @@ - (instancetype)init
 
     self.delegate = self;
 
-    if (RCTGetDispatchW3CPointerEvents()) {
-      _pointerHandler = [[RCTSurfacePointerHandler alloc] init];
-    }
+    _hoverRecognizer = nil;
+    _currentlyHoveredViewsPerPointer = [[NSMutableDictionary alloc] init];
+    _primaryTouchPointerId = -1;
   }
 
   return self;
@@ -172,8 +509,11 @@ - (void)attachToView:(UIView *)view
   [view addGestureRecognizer:self];
   _rootComponentView = view;
 
-  if (_pointerHandler != nil) {
-    [_pointerHandler attachToView:view];
+  if (RCTGetDispatchW3CPointerEvents()) {
+    if (@available(iOS 13.0, *)) {
+      _hoverRecognizer = [[UIHoverGestureRecognizer alloc] initWithTarget:self action:@selector(hovering:)];
+      [view addGestureRecognizer:_hoverRecognizer];
+    }
   }
 }
 
@@ -185,30 +525,66 @@ - (void)detachFromView:(UIView *)view
   [view removeGestureRecognizer:self];
   _rootComponentView = nil;
 
-  if (_pointerHandler != nil) {
-    [_pointerHandler detachFromView:view];
+  if (_hoverRecognizer != nil) {
+    [view removeGestureRecognizer:_hoverRecognizer];
+    _hoverRecognizer = nil;
   }
 }
 
-- (void)_registerTouches:(NSSet<UITouch *> *)touches
+- (void)_registerTouches:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
 {
   for (UITouch *touch in touches) {
-    auto activeTouch = CreateTouchWithUITouch(touch, _rootComponentView, _viewOriginOffset);
-    activeTouch.touch.identifier = _identifierPool.dequeue();
+    auto activeTouch = CreateTouchWithUITouch(touch, event, _rootComponentView, _viewOriginOffset);
+
+    if (@available(iOS 13.4, *)) {
+      switch (touch.type) {
+        case UITouchTypeIndirectPointer:
+          activeTouch.touch.identifier = kMousePointerId;
+          activeTouch.isPrimary = true;
+          break;
+        case UITouchTypePencil:
+          activeTouch.touch.identifier = kPencilPointerId;
+          activeTouch.isPrimary = true;
+          break;
+        default:
+          // use the identifier pool offset to ensure no conflicts between the reserved IDs and the
+          // touch IDs
+          activeTouch.touch.identifier = _identifierPool.dequeue() + kTouchIdentifierPoolOffset;
+          if (_primaryTouchPointerId == -1) {
+            _primaryTouchPointerId = activeTouch.touch.identifier;
+            activeTouch.isPrimary = true;
+          }
+          break;
+      }
+    } else {
+      activeTouch.touch.identifier = _identifierPool.dequeue();
+      if (_primaryTouchPointerId == -1) {
+        _primaryTouchPointerId = activeTouch.touch.identifier;
+        activeTouch.isPrimary = true;
+      }
+    }
+
+    // If the pointer has not been marked as hovering over views before the touch started, we register
+    // that the activeTouch should not maintain its hovered state once the pointer has been lifted.
+    auto currentlyHoveredViews = [_currentlyHoveredViewsPerPointer objectForKey:@(activeTouch.touch.identifier)];
+    if (currentlyHoveredViews == nil || [currentlyHoveredViews count] == 0) {
+      activeTouch.shouldLeaveWhenReleased = YES;
+    }
+
     _activeTouches.emplace(touch, activeTouch);
   }
 }
 
-- (void)_updateTouches:(NSSet<UITouch *> *)touches
+- (void)_updateTouches:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
 {
   for (UITouch *touch in touches) {
     auto iterator = _activeTouches.find(touch);
-    RCTAssert(iterator != _activeTouches.end(), @"Inconsistency between local and UIKit touch registries");
+    assert(iterator != _activeTouches.end() && "Inconsistency between local and UIKit touch registries");
     if (iterator == _activeTouches.end()) {
       continue;
     }
 
-    UpdateActiveTouchWithUITouch(iterator->second, touch, _rootComponentView, _viewOriginOffset);
+    UpdateActiveTouchWithUITouch(iterator->second, touch, event, _rootComponentView, _viewOriginOffset);
   }
 }
 
@@ -216,12 +592,30 @@ - (void)_unregisterTouches:(NSSet<UITouch *> *)touches
 {
   for (UITouch *touch in touches) {
     auto iterator = _activeTouches.find(touch);
-    RCTAssert(iterator != _activeTouches.end(), @"Inconsistency between local and UIKit touch registries");
+    assert(iterator != _activeTouches.end() && "Inconsistency between local and UIKit touch registries");
     if (iterator == _activeTouches.end()) {
       continue;
     }
     auto &activeTouch = iterator->second;
-    _identifierPool.enqueue(activeTouch.touch.identifier);
+
+    if (activeTouch.touch.identifier == _primaryTouchPointerId) {
+      _primaryTouchPointerId = -1;
+    }
+
+    if (@available(iOS 13.4, *)) {
+      // only need to enqueue if the touch type isn't one with a reserved identifier
+      switch (touch.type) {
+        case UITouchTypeIndirectPointer:
+        case UITouchTypePencil:
+          break;
+        default:
+          // since the touch's identifier has been offset we need to re-normalize it to 0-based
+          // which is what the identifier pool expects
+          _identifierPool.enqueue(activeTouch.touch.identifier - kTouchIdentifierPoolOffset);
+      }
+    } else {
+      _identifierPool.enqueue(activeTouch.touch.identifier);
+    }
     _activeTouches.erase(touch);
   }
 }
@@ -233,7 +627,7 @@ - (void)_unregisterTouches:(NSSet<UITouch *> *)touches
 
   for (UITouch *touch in touches) {
     auto iterator = _activeTouches.find(touch);
-    RCTAssert(iterator != _activeTouches.end(), @"Inconsistency between local and UIKit touch registries");
+    assert(iterator != _activeTouches.end() && "Inconsistency between local and UIKit touch registries");
     if (iterator == _activeTouches.end()) {
       continue;
     }
@@ -258,6 +652,44 @@ - (void)_dispatchActiveTouches:(std::vector<ActiveTouch>)activeTouches eventType
     changedActiveTouches.insert(activeTouch);
     event.changedTouches.insert(activeTouch.touch);
     uniqueEventEmitters.insert(activeTouch.eventEmitter);
+
+    // emit w3c pointer events
+    if (RCTGetDispatchW3CPointerEvents()) {
+      PointerEvent pointerEvent = CreatePointerEventFromActiveTouch(activeTouch, eventType);
+
+      if ((eventType == RCTTouchEventTypeTouchEnd && activeTouch.shouldLeaveWhenReleased)) {
+        activeTouch.eventEmitter->onPointerUp(pointerEvent);
+        [self handleIncomingPointerEvent:pointerEvent onView:nil];
+      } else {
+        CGPoint clientLocation = CGPointMake(pointerEvent.clientPoint.x, pointerEvent.clientPoint.y);
+        UIView *targetView = FindClosestFabricManagedTouchableView([_rootComponentView hitTest:clientLocation
+                                                                                     withEvent:nil]);
+
+        NSOrderedSet<RCTReactTaggedView *> *eventPathViews = [self handleIncomingPointerEvent:pointerEvent
+                                                                                       onView:targetView];
+
+        switch (eventType) {
+          case RCTTouchEventTypeTouchStart:
+            activeTouch.eventEmitter->onPointerDown(pointerEvent);
+            break;
+          case RCTTouchEventTypeTouchMove: {
+            bool hasMoveEventListeners =
+                IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMove) ||
+                IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMoveCapture);
+            if (hasMoveEventListeners) {
+              activeTouch.eventEmitter->onPointerMove(pointerEvent);
+            }
+            break;
+          }
+          case RCTTouchEventTypeTouchEnd:
+            activeTouch.eventEmitter->onPointerUp(pointerEvent);
+            break;
+          case RCTTouchEventTypeTouchCancel:
+            activeTouch.eventEmitter->onPointerCancel(pointerEvent);
+            break;
+        }
+      }
+    }
   }
 
   for (const auto &pair : _activeTouches) {
@@ -304,7 +736,7 @@ - (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
 {
   [super touchesBegan:touches withEvent:event];
 
-  [self _registerTouches:touches];
+  [self _registerTouches:touches withEvent:event];
   [self _dispatchActiveTouches:[self _activeTouchesFromTouches:touches] eventType:RCTTouchEventTypeTouchStart];
 
   if (self.state == UIGestureRecognizerStatePossible) {
@@ -318,7 +750,7 @@ - (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
 {
   [super touchesMoved:touches withEvent:event];
 
-  [self _updateTouches:touches];
+  [self _updateTouches:touches withEvent:event];
   [self _dispatchActiveTouches:[self _activeTouchesFromTouches:touches] eventType:RCTTouchEventTypeTouchMove];
 
   self.state = UIGestureRecognizerStateChanged;
@@ -328,7 +760,7 @@ - (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
 {
   [super touchesEnded:touches withEvent:event];
 
-  [self _updateTouches:touches];
+  [self _updateTouches:touches withEvent:event];
   [self _dispatchActiveTouches:[self _activeTouchesFromTouches:touches] eventType:RCTTouchEventTypeTouchEnd];
   [self _unregisterTouches:touches];
 
@@ -343,7 +775,7 @@ - (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
 {
   [super touchesCancelled:touches withEvent:event];
 
-  [self _updateTouches:touches];
+  [self _updateTouches:touches withEvent:event];
   [self _dispatchActiveTouches:[self _activeTouchesFromTouches:touches] eventType:RCTTouchEventTypeTouchCancel];
   [self _unregisterTouches:touches];
 
@@ -413,4 +845,145 @@ - (void)_cancelTouches
   [self setEnabled:YES];
 }
 
+- (void)hovering:(UIHoverGestureRecognizer *)recognizer API_AVAILABLE(ios(13.0))
+{
+  UIView *listenerView = recognizer.view;
+  CGPoint clientLocation = [recognizer locationInView:listenerView];
+  CGPoint screenLocation = [listenerView convertPoint:clientLocation
+                                    toCoordinateSpace:listenerView.window.screen.coordinateSpace];
+
+  UIView *targetView = [listenerView hitTest:clientLocation withEvent:nil];
+  targetView = FindClosestFabricManagedTouchableView(targetView);
+
+  CGPoint offsetLocation = [recognizer locationInView:targetView];
+
+  UIKeyModifierFlags modifierFlags;
+  if (@available(iOS 13.4, *)) {
+    modifierFlags = recognizer.modifierFlags;
+  } else {
+    modifierFlags = 0;
+  }
+
+  PointerEvent event =
+      CreatePointerEventFromIncompleteHoverData(clientLocation, screenLocation, offsetLocation, modifierFlags);
+
+  NSOrderedSet<RCTReactTaggedView *> *eventPathViews = [self handleIncomingPointerEvent:event onView:targetView];
+  SharedTouchEventEmitter eventEmitter = GetTouchEmitterFromView(targetView, offsetLocation);
+  bool hasMoveEventListeners = IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMove) ||
+      IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerMoveCapture);
+  if (eventEmitter != nil && hasMoveEventListeners) {
+    eventEmitter->onPointerMove(event);
+  }
+}
+
+/**
+ * Private method which is used for tracking the location of pointer events to manage the entering/leaving events.
+ * The primary idea is that a pointer's presence & movement is dicated by a variety of underlying events such as down,
+ * move, and up — and they should all be treated the same when it comes to tracking the entering & leaving of pointers
+ * to views. This method accomplishes that by recieving the pointer event, the target view (can be null in cases when
+ * the event indicates that the pointer has left the screen entirely), and a block/callback where the underlying event
+ * should be fired.
+ */
+- (NSOrderedSet<RCTReactTaggedView *> *)handleIncomingPointerEvent:(PointerEvent)event
+                                                            onView:(nullable UIView *)targetView
+{
+  int pointerId = event.pointerId;
+  CGPoint clientLocation = CGPointMake(event.clientPoint.x, event.clientPoint.y);
+
+  NSOrderedSet<RCTReactTaggedView *> *currentlyHoveredViews =
+      [_currentlyHoveredViewsPerPointer objectForKey:@(pointerId)];
+  if (currentlyHoveredViews == nil) {
+    currentlyHoveredViews = [NSOrderedSet orderedSet];
+  }
+
+  RCTReactTaggedView *targetTaggedView = [RCTReactTaggedView wrap:targetView];
+  RCTReactTaggedView *prevTargetTaggedView = [currentlyHoveredViews firstObject];
+  UIView *prevTargetView = prevTargetTaggedView.view;
+
+  NSOrderedSet<RCTReactTaggedView *> *eventPathViews = GetTouchableViewsInPathToRoot(targetView);
+
+  // Out
+  if (prevTargetView != nil && prevTargetTaggedView.tag != targetTaggedView.tag) {
+    BOOL shouldEmitOutEvent = IsAnyViewInPathListeningToEvent(currentlyHoveredViews, ViewEvents::Offset::PointerOut);
+    SharedTouchEventEmitter eventEmitter =
+        GetTouchEmitterFromView(prevTargetView, [_rootComponentView convertPoint:clientLocation toView:prevTargetView]);
+    if (shouldEmitOutEvent && eventEmitter != nil) {
+      eventEmitter->onPointerOut(event);
+    }
+  }
+
+  // Leaving
+
+  // pointerleave events need to be emited from the deepest target to the root but
+  // we also need to efficiently keep track of if a view has a parent which is listening to the leave events,
+  // so we first iterate from the root to the target, collecting the views which need events fired for, of which
+  // we reverse iterate (now from target to root), actually emitting the events.
+  NSMutableOrderedSet<UIView *> *viewsToEmitLeaveEventsTo = [NSMutableOrderedSet orderedSet];
+
+  BOOL hasParentLeaveListener = NO;
+  for (RCTReactTaggedView *taggedView in [currentlyHoveredViews reverseObjectEnumerator]) {
+    UIView *componentView = taggedView.view;
+
+    BOOL shouldEmitEvent = componentView != nil &&
+        (hasParentLeaveListener || IsViewListeningToEvent(taggedView, ViewEvents::Offset::PointerLeave));
+
+    if (shouldEmitEvent && ![eventPathViews containsObject:taggedView]) {
+      [viewsToEmitLeaveEventsTo addObject:componentView];
+    }
+
+    if (shouldEmitEvent && !hasParentLeaveListener) {
+      hasParentLeaveListener = YES;
+    }
+  }
+
+  for (UIView *componentView in [viewsToEmitLeaveEventsTo reverseObjectEnumerator]) {
+    SharedTouchEventEmitter eventEmitter =
+        GetTouchEmitterFromView(componentView, [_rootComponentView convertPoint:clientLocation toView:componentView]);
+    if (eventEmitter != nil) {
+      eventEmitter->onPointerLeave(event);
+    }
+  }
+
+  // Over
+  if (targetView != nil && prevTargetTaggedView.tag != targetTaggedView.tag) {
+    BOOL shouldEmitOverEvent = IsAnyViewInPathListeningToEvent(eventPathViews, ViewEvents::Offset::PointerOver);
+    SharedTouchEventEmitter eventEmitter =
+        GetTouchEmitterFromView(targetView, [_rootComponentView convertPoint:clientLocation toView:targetView]);
+    if (shouldEmitOverEvent && eventEmitter != nil) {
+      eventEmitter->onPointerOver(event);
+    }
+  }
+
+  // Entering
+
+  // We only want to emit events to JS if there is a view that is currently listening to said event
+  // so we only send those event to the JS side if the element which has been entered is itself listening,
+  // or if one of its parents is listening in case those listeners care about the capturing phase. Adding the ability
+  // for native to distingusih between capturing listeners and not could be an optimization to futher reduce the number
+  // of events we send to JS
+  BOOL hasParentEnterListener = NO;
+  for (RCTReactTaggedView *taggedView in [eventPathViews reverseObjectEnumerator]) {
+    UIView *componentView = taggedView.view;
+
+    BOOL shouldEmitEvent = componentView != nil &&
+        (hasParentEnterListener || IsViewListeningToEvent(taggedView, ViewEvents::Offset::PointerEnter));
+
+    if (shouldEmitEvent && ![currentlyHoveredViews containsObject:taggedView]) {
+      SharedTouchEventEmitter eventEmitter =
+          GetTouchEmitterFromView(componentView, [_rootComponentView convertPoint:clientLocation toView:componentView]);
+      if (eventEmitter != nil) {
+        eventEmitter->onPointerEnter(event);
+      }
+    }
+
+    if (shouldEmitEvent && !hasParentEnterListener) {
+      hasParentEnterListener = YES;
+    }
+  }
+
+  [_currentlyHoveredViewsPerPointer setObject:eventPathViews forKey:@(pointerId)];
+
+  return eventPathViews;
+}
+
 @end
diff --git a/node_modules/react-native/React/Fabric/Utils/RCTIdentifierPool.h b/node_modules/react-native/React/Fabric/Utils/RCTIdentifierPool.h
deleted file mode 100644
index 92a35b7..0000000
--- a/node_modules/react-native/React/Fabric/Utils/RCTIdentifierPool.h
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <bitset>
-
-namespace facebook {
-namespace react {
-
-template <size_t size>
-class RCTIdentifierPool {
- public:
-  void enqueue(int index) {
-    usage[index] = false;
-  }
-
-  int dequeue() {
-    while (true) {
-      if (!usage[lastIndex]) {
-        usage[lastIndex] = true;
-        return lastIndex;
-      }
-      lastIndex = (lastIndex + 1) % size;
-    }
-  }
-
-  void reset() {
-    for (int i = 0; i < size; i++) {
-      usage[i] = false;
-    }
-  }
-
- private:
-  std::bitset<size> usage;
-  int lastIndex;
-};
-
-} // namespace react
-} // namespace facebook
diff --git a/node_modules/react-native/React/Fabric/Utils/RCTReactTaggedView.h b/node_modules/react-native/React/Fabric/Utils/RCTReactTaggedView.h
index 78d4714..6fa5439 100644
--- a/node_modules/react-native/React/Fabric/Utils/RCTReactTaggedView.h
+++ b/node_modules/react-native/React/Fabric/Utils/RCTReactTaggedView.h
@@ -13,7 +13,7 @@ NS_ASSUME_NONNULL_BEGIN
  * Lightweight wrapper class around a UIView with a react tag which registers a
  * constant react tag at initialization time for a stable hash and provides the
  * udnerlying view to a caller if that underlying view's react tag has not
- * changed from the one provided at initialization time (i.e. recycled).
+ * changed from the one provided at initalization time (i.e. recycled).
  */
 @interface RCTReactTaggedView : NSObject {
   UIView *_view;
diff --git a/node_modules/react-native/React/Inspector/RCTInspector.h b/node_modules/react-native/React/Inspector/RCTInspector.h
index 8738c9b..49acfcd 100644
--- a/node_modules/react-native/React/Inspector/RCTInspector.h
+++ b/node_modules/react-native/React/Inspector/RCTInspector.h
@@ -8,7 +8,7 @@
 #import <Foundation/Foundation.h>
 #import <React/RCTDefines.h>
 
-#if RCT_DEV || RCT_REMOTE_PROFILE
+#if RCT_DEV
 
 @class RCTInspectorRemoteConnection;
 
diff --git a/node_modules/react-native/React/Inspector/RCTInspector.mm b/node_modules/react-native/React/Inspector/RCTInspector.mm
index 896cf4e..ff1c007 100644
--- a/node_modules/react-native/React/Inspector/RCTInspector.mm
+++ b/node_modules/react-native/React/Inspector/RCTInspector.mm
@@ -7,13 +7,14 @@
 
 #import <React/RCTInspector.h>
 
-#if RCT_DEV || RCT_REMOTE_PROFILE
+#if RCT_DEV
 
 #include <jsinspector/InspectorInterfaces.h>
 
 #import <React/RCTDefines.h>
 #import <React/RCTInspectorPackagerConnection.h>
 #import <React/RCTLog.h>
+#import <React/RCTSRWebSocket.h>
 #import <React/RCTUtils.h>
 
 using namespace facebook::react;
diff --git a/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.h b/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.h
index 96bb841..184b05d 100644
--- a/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.h
+++ b/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.h
@@ -8,7 +8,7 @@
 #import <Foundation/Foundation.h>
 #import <React/RCTDefines.h>
 
-#if RCT_DEV || RCT_REMOTE_PROFILE
+#if RCT_DEV
 
 @interface RCTBundleStatus : NSObject
 @property (atomic, assign) BOOL isLastBundleDownloadSuccess;
diff --git a/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.m b/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.m
index 3d16997..532c2d9 100644
--- a/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.m
+++ b/node_modules/react-native/React/Inspector/RCTInspectorPackagerConnection.m
@@ -7,13 +7,13 @@
 
 #import <React/RCTInspectorPackagerConnection.h>
 
-#if RCT_DEV || RCT_REMOTE_PROFILE
+#if RCT_DEV
 
 #import <React/RCTDefines.h>
 #import <React/RCTInspector.h>
 #import <React/RCTLog.h>
+#import <React/RCTSRWebSocket.h>
 #import <React/RCTUtils.h>
-#import <SocketRocket/SRWebSocket.h>
 
 // This is a port of the Android impl, at
 // ReactAndroid/src/main/java/com/facebook/react/devsupport/InspectorPackagerConnection.java
@@ -24,10 +24,10 @@
 @implementation RCTBundleStatus
 @end
 
-@interface RCTInspectorPackagerConnection () <SRWebSocketDelegate> {
+@interface RCTInspectorPackagerConnection () <RCTSRWebSocketDelegate> {
   NSURL *_url;
   NSMutableDictionary<NSString *, RCTInspectorLocalConnection *> *_inspectorConnections;
-  SRWebSocket *_webSocket;
+  RCTSRWebSocket *_webSocket;
   dispatch_queue_t _jsQueue;
   BOOL _closed;
   BOOL _suppressConnectionErrors;
@@ -188,7 +188,7 @@ - (void)sendEvent:(NSString *)name payload:(id)payload
 }
 
 // analogous to InspectorPackagerConnection.Connection.onFailure(...)
-- (void)webSocket:(__unused SRWebSocket *)webSocket didFailWithError:(NSError *)error
+- (void)webSocket:(__unused RCTSRWebSocket *)webSocket didFailWithError:(NSError *)error
 {
   if (_webSocket) {
     [self abort:@"Websocket exception" withCause:error];
@@ -199,7 +199,7 @@ - (void)webSocket:(__unused SRWebSocket *)webSocket didFailWithError:(NSError *)
 }
 
 // analogous to InspectorPackagerConnection.Connection.onMessage(...)
-- (void)webSocket:(__unused SRWebSocket *)webSocket didReceiveMessage:(id)opaqueMessage
+- (void)webSocket:(__unused RCTSRWebSocket *)webSocket didReceiveMessage:(id)opaqueMessage
 {
   // warn but don't die on unrecognized messages
   if (![opaqueMessage isKindOfClass:[NSString class]]) {
@@ -219,7 +219,7 @@ - (void)webSocket:(__unused SRWebSocket *)webSocket didReceiveMessage:(id)opaque
 }
 
 // analogous to InspectorPackagerConnection.Connection.onClosed(...)
-- (void)webSocket:(__unused SRWebSocket *)webSocket
+- (void)webSocket:(__unused RCTSRWebSocket *)webSocket
     didCloseWithCode:(__unused NSInteger)code
               reason:(__unused NSString *)reason
             wasClean:(__unused BOOL)wasClean
@@ -244,9 +244,9 @@ - (void)connect
   }
 
   // The corresponding android code has a lot of custom config options for
-  // timeouts, but our previous class, RCTSRWebSocket didn't have the same
-  // implemented options. Might be worth reinvestigating for SRWebSocket?
-  _webSocket = [[SRWebSocket alloc] initWithURL:_url];
+  // timeouts, but it appears the iOS RCTSRWebSocket API doesn't have the same
+  // implemented options.
+  _webSocket = [[RCTSRWebSocket alloc] initWithURL:_url];
   [_webSocket setDelegateDispatchQueue:_jsQueue];
   _webSocket.delegate = self;
   [_webSocket open];
@@ -290,7 +290,7 @@ - (void)sendToPackager:(NSDictionary *)messageObject
       if (error) {
         RCTLogWarn(@"Couldn't send event to packager: %@", error);
       } else {
-        [strongSelf->_webSocket sendString:messageText error:nil];
+        [strongSelf->_webSocket send:messageText];
       }
     }
   });
diff --git a/node_modules/react-native/React/Modules/RCTEventEmitter.m b/node_modules/react-native/React/Modules/RCTEventEmitter.m
index 7ad3513..568c773 100644
--- a/node_modules/react-native/React/Modules/RCTEventEmitter.m
+++ b/node_modules/react-native/React/Modules/RCTEventEmitter.m
@@ -23,6 +23,17 @@ + (NSString *)moduleName
   return @"";
 }
 
++ (void)initialize
+{
+  [super initialize];
+  if (self != [RCTEventEmitter class]) {
+    RCTAssert(
+        RCTClassOverridesInstanceMethod(self, @selector(supportedEvents)),
+        @"You must override the `supportedEvents` method of %@",
+        self);
+  }
+}
+
 - (instancetype)initWithDisabledObservation
 {
   self = [super init];
@@ -32,9 +43,6 @@ - (instancetype)initWithDisabledObservation
 
 - (NSArray<NSString *> *)supportedEvents
 {
-  NSString *message =
-      [NSString stringWithFormat:@"%@ must implement the supportedEvents method", NSStringFromClass(self.class)];
-  [self _log:message];
   return nil;
 }
 
@@ -139,15 +147,4 @@ - (void)invalidate
   }
 }
 
-#pragma mark - Test utilities
-
-// For testing purposes only.
-// This is supposed to be overridden by a subclass in the Tests
-// to verified that the error message is actually emitted.
-// This is the less intrusive way found to mock the RCTLogError function in unit tests.
-- (void)_log:(NSString *)message
-{
-  RCTLogError(@"%@", message);
-}
-
 @end
diff --git a/node_modules/react-native/React/Profiler/RCTProfileTrampoline-x86_64.S b/node_modules/react-native/React/Profiler/RCTProfileTrampoline-x86_64.S
index 246a810..f7bb214 100644
--- a/node_modules/react-native/React/Profiler/RCTProfileTrampoline-x86_64.S
+++ b/node_modules/react-native/React/Profiler/RCTProfileTrampoline-x86_64.S
@@ -90,7 +90,7 @@ SYMBOL_NAME(RCTProfileTrampoline):
   movq $0x10, %rdi
   callq SYMBOL_NAME_PIC(RCTProfileMalloc)
 
-  // store the initial value of caller saved registers %r13 and %r14
+  // store the initial value of calle saved registers %r13 and %r14
   movq %r13, 0x0(%rax)
   movq %r14, 0x8(%rax)
 
diff --git a/node_modules/react-native/React/React-RCTFabric.podspec b/node_modules/react-native/React/React-RCTFabric.podspec
index 7483259..a494a6b 100644
--- a/node_modules/react-native/React/React-RCTFabric.podspec
+++ b/node_modules/react-native/React/React-RCTFabric.podspec
@@ -21,37 +21,13 @@ folly_compiler_flags = folly_flags + ' ' + '-Wno-comma -Wno-shorten-64-to-32'
 folly_version = '2021.07.22.00'
 boost_compiler_flags = '-Wno-documentation'
 
-header_search_paths = [
-  "\"$(PODS_TARGET_SRCROOT)/ReactCommon\"",
-  "\"$(PODS_ROOT)/boost\"",
-  "\"$(PODS_ROOT)/DoubleConversion\"",
-  "\"$(PODS_ROOT)/RCT-Folly\"",
-  "\"$(PODS_ROOT)/Headers/Private/React-Core\"",
-  "\"$(PODS_ROOT)/Headers/Public/React-Codegen\"",
-  "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\"",
-]
-
-if ENV['USE_FRAMEWORKS']
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/textlayoutmanager/platform/ios\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/components/textinput/iostextinput\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/imagemanager/platform/ios\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-ImageManager/React_ImageManager.framework/Headers\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/RCTFabric.framework/Headers\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-utils/React_utils.framework/Headers\""
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-runtimescheduler/React_runtimescheduler.framework/Headers\""
-end
-
 Pod::Spec.new do |s|
   s.name                   = "React-RCTFabric"
   s.version                = version
   s.summary                = "RCTFabric for React Native."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "Fabric/**/*.{c,h,m,mm,S,cpp}"
@@ -61,30 +37,14 @@ Pod::Spec.new do |s|
   s.header_dir             = "React"
   s.module_name            = "RCTFabric"
   s.framework              = "JavaScriptCore"
-  s.pod_target_xcconfig    = {
-    "HEADER_SEARCH_PATHS" => header_search_paths,
-    "OTHER_CFLAGS" => "$(inherited) -DRN_FABRIC_ENABLED" + " " + folly_flags,
-    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17"
-  }.merge!(ENV['USE_FRAMEWORKS'] != nil ? {
-    "PUBLIC_HEADERS_FOLDER_PATH" => "$(CONTENTS_FOLDER_PATH)/Headers/React"
-  }: {})
+  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/Headers/Private/React-Core\" \"$(PODS_ROOT)/Headers/Public/React-Codegen\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\"" }
+  s.xcconfig               = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/glog\" \"$(PODS_ROOT)/RCT-Folly\"", "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
+                               "OTHER_CFLAGS" => "$(inherited) -DRN_FABRIC_ENABLED" + " " + folly_flags  }
 
   s.dependency "React-Core", version
   s.dependency "React-Fabric", version
   s.dependency "React-RCTImage", version
-  s.dependency "React-ImageManager"
   s.dependency "RCT-Folly/Fabric", folly_version
-  s.dependency "glog"
-  s.dependency "Yoga"
-  s.dependency "React-RCTText"
-  s.dependency "React-utils"
-  s.dependency "React-runtimescheduler"
-
-  if ENV["USE_HERMES"] == nil || ENV["USE_HERMES"] == "1"
-    s.dependency "hermes-engine"
-  else
-    s.dependency "React-jsi"
-  end
 
   s.test_spec 'Tests' do |test_spec|
     test_spec.source_files = "Tests/**/*.{mm}"
diff --git a/node_modules/react-native/React/Views/RCTComponentData.m b/node_modules/react-native/React/Views/RCTComponentData.m
index 8b34590..e7cace9 100644
--- a/node_modules/react-native/React/Views/RCTComponentData.m
+++ b/node_modules/react-native/React/Views/RCTComponentData.m
@@ -431,13 +431,25 @@ - (void)setProps:(NSDictionary<NSString *, id> *)props forShadowView:(RCTShadowV
 
     if ([type isEqualToString:@"RCTBubblingEventBlock"]) {
       [bubblingEvents addObject:RCTNormalizeInputEventName(name)];
-      propTypes[name] = @"BOOL";
+
+      // TODO(109509380): Remove this gating
+      if (!RCTViewConfigEventValidAttributesDisabled()) {
+        propTypes[name] = @"BOOL";
+      }
     } else if ([type isEqualToString:@"RCTCapturingEventBlock"]) {
       [capturingEvents addObject:RCTNormalizeInputEventName(name)];
-      propTypes[name] = @"BOOL";
+
+      // TODO(109509380): Remove this gating
+      if (!RCTViewConfigEventValidAttributesDisabled()) {
+        propTypes[name] = @"BOOL";
+      }
     } else if ([type isEqualToString:@"RCTDirectEventBlock"]) {
       [directEvents addObject:RCTNormalizeInputEventName(name)];
-      propTypes[name] = @"BOOL";
+
+      // TODO(109509380): Remove this gating
+      if (!RCTViewConfigEventValidAttributesDisabled()) {
+        propTypes[name] = @"BOOL";
+      }
     } else {
       propTypes[name] = type;
     }
diff --git a/node_modules/react-native/React/Views/RCTConvert+Transform.m b/node_modules/react-native/React/Views/RCTConvert+Transform.m
index 348d4ec..1d2b99b 100644
--- a/node_modules/react-native/React/Views/RCTConvert+Transform.m
+++ b/node_modules/react-native/React/Views/RCTConvert+Transform.m
@@ -138,7 +138,7 @@ + (CATransform3D)CATransform3D:(id)json
       transform = CATransform3DConcat(next, transform);
 
     } else {
-      RCTLogInfo(@"Unsupported transform type for a CATransform3D: %@.", property);
+      RCTLogError(@"Unsupported transform type for a CATransform3D: %@.", property);
     }
   }
   return transform;
diff --git a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTCustomPullToRefreshViewProtocol.h b/node_modules/react-native/React/Views/RCTDatePicker.h
similarity index 63%
rename from node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTCustomPullToRefreshViewProtocol.h
rename to node_modules/react-native/React/Views/RCTDatePicker.h
index 2b97cd1..e5a60fb 100644
--- a/node_modules/react-native/React/Fabric/Mounting/ComponentViews/ScrollView/RCTCustomPullToRefreshViewProtocol.h
+++ b/node_modules/react-native/React/Views/RCTDatePicker.h
@@ -7,9 +7,6 @@
 
 #import <UIKit/UIKit.h>
 
-/**
- * Denotes a view which implements custom pull to refresh functionality.
- */
-@protocol RCTCustomPullToRefreshViewProtocol
+@interface RCTDatePicker : UIDatePicker
 
 @end
diff --git a/node_modules/react-native/React/Views/RCTDatePicker.m b/node_modules/react-native/React/Views/RCTDatePicker.m
new file mode 100644
index 0000000..1585185
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTDatePicker.m
@@ -0,0 +1,70 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTDatePicker.h"
+
+#import <Availability.h>
+#import <AvailabilityInternal.h>
+
+#import "RCTUtils.h"
+#import "UIView+React.h"
+
+#ifndef __IPHONE_14_0
+#define __IPHONE_14_0 140000
+#endif // __IPHONE_14_0
+
+#ifndef RCT_IOS_14_0_SDK_OR_LATER
+#define RCT_IOS_14_0_SDK_OR_LATER (__IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_14_0)
+#endif // RCT_IOS_14_0_SDK_OR_LATER
+
+@interface RCTDatePicker ()
+
+@property (nonatomic, copy) RCTBubblingEventBlock onChange;
+@property (nonatomic, assign) NSInteger reactMinuteInterval;
+
+@end
+
+@implementation RCTDatePicker
+
+- (instancetype)initWithFrame:(CGRect)frame
+{
+  if ((self = [super initWithFrame:frame])) {
+    [self addTarget:self action:@selector(didChange) forControlEvents:UIControlEventValueChanged];
+    _reactMinuteInterval = 1;
+
+#if RCT_IOS_14_0_SDK_OR_LATER
+    if (@available(iOS 14, *)) {
+      self.preferredDatePickerStyle = UIDatePickerStyleWheels;
+    }
+#endif // RCT_IOS_14_0_SDK_OR_LATER
+  }
+  return self;
+}
+
+RCT_NOT_IMPLEMENTED(-(instancetype)initWithCoder : (NSCoder *)aDecoder)
+
+- (void)didChange
+{
+  if (_onChange) {
+    _onChange(@{@"timestamp" : @(self.date.timeIntervalSince1970 * 1000.0)});
+  }
+}
+
+- (void)setDatePickerMode:(UIDatePickerMode)datePickerMode
+{
+  [super setDatePickerMode:datePickerMode];
+  // We need to set minuteInterval after setting datePickerMode, otherwise minuteInterval is invalid in time mode.
+  self.minuteInterval = _reactMinuteInterval;
+}
+
+- (void)setMinuteInterval:(NSInteger)minuteInterval
+{
+  [super setMinuteInterval:minuteInterval];
+  _reactMinuteInterval = minuteInterval;
+}
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTDatePickerManager.h b/node_modules/react-native/React/Views/RCTDatePickerManager.h
new file mode 100644
index 0000000..fbc6f52
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTDatePickerManager.h
@@ -0,0 +1,19 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import <React/RCTConvert.h>
+#import <React/RCTViewManager.h>
+
+@interface RCTConvert (UIDatePicker)
+
++ (UIDatePickerMode)UIDatePickerMode:(id)json;
+
+@end
+
+@interface RCTDatePickerManager : RCTViewManager
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTDatePickerManager.m b/node_modules/react-native/React/Views/RCTDatePickerManager.m
new file mode 100644
index 0000000..7409ada
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTDatePickerManager.m
@@ -0,0 +1,105 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTDatePickerManager.h"
+#import "RCTBridge.h"
+#import "RCTDatePicker.h"
+#import "UIView+React.h"
+
+@implementation RCTConvert (UIDatePicker)
+
+RCT_ENUM_CONVERTER(
+    UIDatePickerMode,
+    (@{
+      @"time" : @(UIDatePickerModeTime),
+      @"date" : @(UIDatePickerModeDate),
+      @"datetime" : @(UIDatePickerModeDateAndTime),
+      @"countdown" : @(UIDatePickerModeCountDownTimer), // not supported yet
+    }),
+    UIDatePickerModeTime,
+    integerValue)
+
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored "-Wunguarded-availability-new"
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_14_0
+
+RCT_ENUM_CONVERTER(
+    UIDatePickerStyle,
+    (@{
+      @"compact" : @(UIDatePickerStyleCompact),
+      @"spinner" : @(UIDatePickerStyleWheels),
+      @"inline" : @(UIDatePickerStyleInline),
+    }),
+    UIDatePickerStyleAutomatic,
+    integerValue)
+#endif
+#pragma clang diagnostic pop
+@end
+
+@implementation RCTDatePickerManager
+
+@synthesize viewRegistry_DEPRECATED = _viewRegistry_DEPRECATED;
+
+RCT_EXPORT_MODULE()
+
+- (UIView *)view
+{
+  RCTNewArchitectureValidationPlaceholder(
+      RCTNotAllowedInFabricWithoutLegacy,
+      self,
+      @"This native component is still using the legacy interop layer -- please migrate it to use a Fabric specific implementation.");
+  return [RCTDatePicker new];
+}
+
+RCT_EXPORT_VIEW_PROPERTY(date, NSDate)
+RCT_EXPORT_VIEW_PROPERTY(locale, NSLocale)
+RCT_EXPORT_VIEW_PROPERTY(minimumDate, NSDate)
+RCT_EXPORT_VIEW_PROPERTY(maximumDate, NSDate)
+RCT_EXPORT_VIEW_PROPERTY(minuteInterval, NSInteger)
+RCT_EXPORT_VIEW_PROPERTY(onChange, RCTBubblingEventBlock)
+RCT_REMAP_VIEW_PROPERTY(mode, datePickerMode, UIDatePickerMode)
+RCT_REMAP_VIEW_PROPERTY(timeZoneOffsetInMinutes, timeZone, NSTimeZone)
+
+RCT_EXPORT_METHOD(setNativeDate : (nonnull NSNumber *)viewTag toDate : (NSDate *)date)
+{
+  [_viewRegistry_DEPRECATED addUIBlock:^(RCTViewRegistry *viewRegistry) {
+    UIView *view = [viewRegistry viewForReactTag:viewTag];
+    if ([view isKindOfClass:[RCTDatePicker class]]) {
+      [(RCTDatePicker *)view setDate:date];
+    } else {
+      // This component is used in Fabric through LegacyInteropLayer.
+      // `RCTDatePicker` view is subview of `RCTLegacyViewManagerInteropComponentView`.
+      // `viewTag` passed as parameter to this method is tag of the `RCTLegacyViewManagerInteropComponentView`.
+      UIView *subview = view.subviews.firstObject;
+      if ([subview isKindOfClass:[RCTDatePicker class]]) {
+        [(RCTDatePicker *)subview setDate:date];
+      } else {
+        RCTLogError(@"view type must be RCTDatePicker");
+      }
+    }
+  }];
+}
+
+#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_14_0
+RCT_CUSTOM_VIEW_PROPERTY(pickerStyle, UIDatePickerStyle, RCTDatePicker)
+{
+  if (@available(iOS 14, *)) {
+    // If the style changed, then the date picker may need to be resized and will generate a layout pass to display
+    // correctly. We need to prevent that to get consistent layout. That's why we memorise the old frame and set it
+    // after style is changed.
+    CGRect oldFrame = view.frame;
+    if (json) {
+      UIDatePickerStyle style = [RCTConvert UIDatePickerStyle:json];
+      view.preferredDatePickerStyle = style;
+    } else {
+      view.preferredDatePickerStyle = UIDatePickerStyleWheels;
+    }
+    view.frame = oldFrame;
+  }
+}
+#endif
+@end
diff --git a/node_modules/react-native/React/Views/RCTFont.mm b/node_modules/react-native/React/Views/RCTFont.mm
index 9cbb201..e119657 100644
--- a/node_modules/react-native/React/Views/RCTFont.mm
+++ b/node_modules/react-native/React/Views/RCTFont.mm
@@ -332,7 +332,7 @@ + (RCTFontVariantDescriptor *)RCTFontVariantDescriptor:(id)json
   });
   RCTFontVariantDescriptor *value = mapping[json];
   if (RCT_DEBUG && !value && [json description].length > 0) {
-    RCTLogInfo(
+    RCTLogError(
         @"Invalid RCTFontVariantDescriptor '%@'. should be one of: %@",
         json,
         [[mapping allKeys] sortedArrayUsingSelector:@selector(caseInsensitiveCompare:)]);
@@ -424,7 +424,7 @@ + (UIFont *)updateFont:(UIFont *)font
       isCondensed = isCondensedFont(font);
     } else {
       // Not a valid font or family
-      RCTLogInfo(@"Unrecognized font family '%@'", familyName);
+      RCTLogError(@"Unrecognized font family '%@'", familyName);
       if ([UIFont respondsToSelector:@selector(systemFontOfSize:weight:)]) {
         font = [UIFont systemFontOfSize:fontSize weight:fontWeight];
       } else if (fontWeight > UIFontWeightRegular) {
diff --git a/node_modules/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.mm b/node_modules/react-native/React/Views/RCTProgressViewManager.h
similarity index 56%
rename from node_modules/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.mm
rename to node_modules/react-native/React/Views/RCTProgressViewManager.h
index d1d6837..2fb02c8 100644
--- a/node_modules/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.mm
+++ b/node_modules/react-native/React/Views/RCTProgressViewManager.h
@@ -5,13 +5,8 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import "RCTLegacyInteropComponents.h"
+#import <React/RCTViewManager.h>
 
-@implementation RCTLegacyInteropComponents
-
-+ (NSArray<NSString *> *)legacyInteropComponents
-{
-  return @[];
-}
+@interface RCTProgressViewManager : RCTViewManager
 
 @end
diff --git a/node_modules/react-native/React/Views/RCTProgressViewManager.m b/node_modules/react-native/React/Views/RCTProgressViewManager.m
new file mode 100644
index 0000000..93b66b3
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTProgressViewManager.m
@@ -0,0 +1,45 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTProgressViewManager.h"
+
+#import "RCTConvert.h"
+
+@implementation RCTConvert (RCTProgressViewManager)
+
+RCT_ENUM_CONVERTER(
+    UIProgressViewStyle,
+    (@{
+      @"default" : @(UIProgressViewStyleDefault),
+      @"bar" : @(UIProgressViewStyleBar),
+    }),
+    UIProgressViewStyleDefault,
+    integerValue)
+
+@end
+
+@implementation RCTProgressViewManager
+
+RCT_EXPORT_MODULE()
+
+- (UIView *)view
+{
+  RCTNewArchitectureValidationPlaceholder(
+      RCTNotAllowedInFabricWithoutLegacy,
+      self,
+      @"This native component is still using the legacy interop layer -- please migrate it to use a Fabric specific implementation.");
+  return [UIProgressView new];
+}
+
+RCT_EXPORT_VIEW_PROPERTY(progressViewStyle, UIProgressViewStyle)
+RCT_EXPORT_VIEW_PROPERTY(progress, float)
+RCT_EXPORT_VIEW_PROPERTY(progressTintColor, UIColor)
+RCT_EXPORT_VIEW_PROPERTY(trackTintColor, UIColor)
+RCT_EXPORT_VIEW_PROPERTY(progressImage, UIImage)
+RCT_EXPORT_VIEW_PROPERTY(trackImage, UIImage)
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTSlider.h b/node_modules/react-native/React/Views/RCTSlider.h
new file mode 100644
index 0000000..6eae192
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTSlider.h
@@ -0,0 +1,26 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import <UIKit/UIKit.h>
+
+#import <React/RCTComponent.h>
+
+@interface RCTSlider : UISlider
+
+@property (nonatomic, copy) RCTBubblingEventBlock onValueChange;
+@property (nonatomic, copy) RCTDirectEventBlock onSlidingComplete;
+
+@property (nonatomic, assign) float step;
+@property (nonatomic, assign) float lastValue;
+
+@property (nonatomic, strong) UIImage *trackImage;
+@property (nonatomic, strong) UIImage *minimumTrackImage;
+@property (nonatomic, strong) UIImage *maximumTrackImage;
+
+@property (nonatomic, strong) UIImage *thumbImage;
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTSlider.m b/node_modules/react-native/React/Views/RCTSlider.m
new file mode 100644
index 0000000..a58427b
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTSlider.m
@@ -0,0 +1,104 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTSlider.h"
+
+@implementation RCTSlider {
+  float _unclippedValue;
+}
+
+- (void)setValue:(float)value
+{
+  _unclippedValue = value;
+  super.value = value;
+}
+
+- (void)setMinimumValue:(float)minimumValue
+{
+  super.minimumValue = minimumValue;
+  super.value = _unclippedValue;
+}
+
+- (void)setMaximumValue:(float)maximumValue
+{
+  super.maximumValue = maximumValue;
+  super.value = _unclippedValue;
+}
+
+- (void)setTrackImage:(UIImage *)trackImage
+{
+  if (trackImage != _trackImage) {
+    _trackImage = trackImage;
+    CGFloat width = trackImage.size.width / 2;
+    UIImage *minimumTrackImage = [trackImage resizableImageWithCapInsets:(UIEdgeInsets){0, width, 0, width}
+                                                            resizingMode:UIImageResizingModeStretch];
+    UIImage *maximumTrackImage = [trackImage resizableImageWithCapInsets:(UIEdgeInsets){0, width, 0, width}
+                                                            resizingMode:UIImageResizingModeStretch];
+    [self setMinimumTrackImage:minimumTrackImage forState:UIControlStateNormal];
+    [self setMaximumTrackImage:maximumTrackImage forState:UIControlStateNormal];
+  }
+}
+
+- (void)setMinimumTrackImage:(UIImage *)minimumTrackImage
+{
+  _trackImage = nil;
+  minimumTrackImage =
+      [minimumTrackImage resizableImageWithCapInsets:(UIEdgeInsets){0, minimumTrackImage.size.width, 0, 0}
+                                        resizingMode:UIImageResizingModeStretch];
+  [self setMinimumTrackImage:minimumTrackImage forState:UIControlStateNormal];
+}
+
+- (UIImage *)minimumTrackImage
+{
+  return [self thumbImageForState:UIControlStateNormal];
+}
+
+- (void)setMaximumTrackImage:(UIImage *)maximumTrackImage
+{
+  _trackImage = nil;
+  maximumTrackImage =
+      [maximumTrackImage resizableImageWithCapInsets:(UIEdgeInsets){0, 0, 0, maximumTrackImage.size.width}
+                                        resizingMode:UIImageResizingModeStretch];
+  [self setMaximumTrackImage:maximumTrackImage forState:UIControlStateNormal];
+}
+
+- (UIImage *)maximumTrackImage
+{
+  return [self thumbImageForState:UIControlStateNormal];
+}
+
+- (void)setThumbImage:(UIImage *)thumbImage
+{
+  [self setThumbImage:thumbImage forState:UIControlStateNormal];
+}
+
+- (UIImage *)thumbImage
+{
+  return [self thumbImageForState:UIControlStateNormal];
+}
+
+- (void)accessibilityIncrement
+{
+  [super accessibilityIncrement];
+  if (_onSlidingComplete) {
+    _onSlidingComplete(@{
+      @"value" : @(self.value),
+    });
+  }
+}
+
+- (void)accessibilityDecrement
+{
+  [super accessibilityDecrement];
+  if (_onSlidingComplete) {
+    _onSlidingComplete(@{
+      @"value" : @(self.value),
+    });
+  }
+}
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTSliderManager.h b/node_modules/react-native/React/Views/RCTSliderManager.h
new file mode 100644
index 0000000..cbe0976
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTSliderManager.h
@@ -0,0 +1,12 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import <React/RCTViewManager.h>
+
+@interface RCTSliderManager : RCTViewManager
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTSliderManager.m b/node_modules/react-native/React/Views/RCTSliderManager.m
new file mode 100644
index 0000000..9c871f6
--- /dev/null
+++ b/node_modules/react-native/React/Views/RCTSliderManager.m
@@ -0,0 +1,91 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#import "RCTSliderManager.h"
+
+#import "RCTBridge.h"
+#import "RCTSlider.h"
+#import "UIView+React.h"
+
+@implementation RCTSliderManager
+
+RCT_EXPORT_MODULE()
+
+- (UIView *)view
+{
+  RCTSlider *slider = [RCTSlider new];
+  [slider addTarget:self action:@selector(sliderValueChanged:) forControlEvents:UIControlEventValueChanged];
+  [slider addTarget:self
+                action:@selector(sliderTouchEnd:)
+      forControlEvents:(UIControlEventTouchUpInside | UIControlEventTouchUpOutside | UIControlEventTouchCancel)];
+  return slider;
+}
+
+static void RCTSendSliderEvent(RCTSlider *sender, BOOL continuous)
+{
+  float value = sender.value;
+
+  if (sender.step > 0 && sender.step <= (sender.maximumValue - sender.minimumValue)) {
+    value =
+        MAX(sender.minimumValue,
+            MIN(sender.maximumValue,
+                sender.minimumValue + round((sender.value - sender.minimumValue) / sender.step) * sender.step));
+
+    [sender setValue:value animated:YES];
+  }
+
+  if (continuous) {
+    if (sender.onValueChange && sender.lastValue != value) {
+      sender.onValueChange(@{
+        @"value" : @(value),
+      });
+    }
+  } else {
+    if (sender.onSlidingComplete) {
+      sender.onSlidingComplete(@{
+        @"value" : @(value),
+      });
+    }
+  }
+
+  sender.lastValue = value;
+}
+
+- (void)sliderValueChanged:(RCTSlider *)sender
+{
+  RCTSendSliderEvent(sender, YES);
+}
+
+- (void)sliderTouchEnd:(RCTSlider *)sender
+{
+  RCTSendSliderEvent(sender, NO);
+}
+
+RCT_EXPORT_VIEW_PROPERTY(value, float);
+RCT_EXPORT_VIEW_PROPERTY(step, float);
+RCT_EXPORT_VIEW_PROPERTY(trackImage, UIImage);
+RCT_EXPORT_VIEW_PROPERTY(minimumTrackImage, UIImage);
+RCT_EXPORT_VIEW_PROPERTY(maximumTrackImage, UIImage);
+RCT_EXPORT_VIEW_PROPERTY(minimumValue, float);
+RCT_EXPORT_VIEW_PROPERTY(maximumValue, float);
+RCT_EXPORT_VIEW_PROPERTY(minimumTrackTintColor, UIColor);
+RCT_EXPORT_VIEW_PROPERTY(maximumTrackTintColor, UIColor);
+RCT_EXPORT_VIEW_PROPERTY(onValueChange, RCTBubblingEventBlock);
+RCT_EXPORT_VIEW_PROPERTY(onSlidingComplete, RCTDirectEventBlock);
+RCT_EXPORT_VIEW_PROPERTY(thumbTintColor, UIColor);
+RCT_EXPORT_VIEW_PROPERTY(thumbImage, UIImage);
+RCT_CUSTOM_VIEW_PROPERTY(disabled, BOOL, RCTSlider)
+{
+  if (json) {
+    view.enabled = !([RCTConvert BOOL:json]);
+  } else {
+    view.enabled = defaultView.enabled;
+  }
+}
+RCT_CUSTOM_VIEW_PROPERTY(enabled, BOOL, RCTSlider) {}
+
+@end
diff --git a/node_modules/react-native/React/Views/RCTView.h b/node_modules/react-native/React/Views/RCTView.h
index abb1966..b3df8e8 100644
--- a/node_modules/react-native/React/Views/RCTView.h
+++ b/node_modules/react-native/React/Views/RCTView.h
@@ -71,10 +71,6 @@ extern const UIAccessibilityTraits SwitchAccessibilityTrait;
 @property (nonatomic, assign) CGFloat borderBottomRightRadius;
 @property (nonatomic, assign) CGFloat borderBottomStartRadius;
 @property (nonatomic, assign) CGFloat borderBottomEndRadius;
-@property (nonatomic, assign) CGFloat borderEndEndRadius;
-@property (nonatomic, assign) CGFloat borderEndStartRadius;
-@property (nonatomic, assign) CGFloat borderStartEndRadius;
-@property (nonatomic, assign) CGFloat borderStartStartRadius;
 
 /**
  * Border colors (actually retained).
@@ -86,9 +82,6 @@ extern const UIAccessibilityTraits SwitchAccessibilityTrait;
 @property (nonatomic, strong) UIColor *borderStartColor;
 @property (nonatomic, strong) UIColor *borderEndColor;
 @property (nonatomic, strong) UIColor *borderColor;
-@property (nonatomic, strong) UIColor *borderBlockColor;
-@property (nonatomic, strong) UIColor *borderBlockEndColor;
-@property (nonatomic, strong) UIColor *borderBlockStartColor;
 
 /**
  * Border widths.
@@ -100,10 +93,6 @@ extern const UIAccessibilityTraits SwitchAccessibilityTrait;
 @property (nonatomic, assign) CGFloat borderStartWidth;
 @property (nonatomic, assign) CGFloat borderEndWidth;
 @property (nonatomic, assign) CGFloat borderWidth;
-// TODO: Implement logical border width logic
-@property (nonatomic, assign) CGFloat borderBlockWidth;
-@property (nonatomic, assign) CGFloat borderBlockEndWidth;
-@property (nonatomic, assign) CGFloat borderBlockStartWidth;
 
 /**
  * Border curve.
diff --git a/node_modules/react-native/React/Views/RCTView.m b/node_modules/react-native/React/Views/RCTView.m
index 619509f..7fb4544 100644
--- a/node_modules/react-native/React/Views/RCTView.m
+++ b/node_modules/react-native/React/Views/RCTView.m
@@ -7,7 +7,6 @@
 
 #import "RCTView.h"
 
-#import <QuartzCore/QuartzCore.h>
 #import <React/RCTMockDef.h>
 
 #import "RCTAutoInsetsProtocol.h"
@@ -128,10 +127,6 @@ - (instancetype)initWithFrame:(CGRect)frame
     _borderBottomRightRadius = -1;
     _borderBottomStartRadius = -1;
     _borderBottomEndRadius = -1;
-    _borderEndEndRadius = -1;
-    _borderEndStartRadius = -1;
-    _borderStartEndRadius = -1;
-    _borderStartStartRadius = -1;
     _borderCurve = RCTBorderCurveCircular;
     _borderStyle = RCTBorderStyleSolid;
     _hitTestEdgeInsets = UIEdgeInsetsZero;
@@ -212,7 +207,7 @@ - (UIView *)hitTest:(CGPoint)point withEvent:(UIEvent *)event
     case RCTPointerEventsBoxNone:
       return hitSubview;
     default:
-      RCTLogInfo(@"Invalid pointer-events specified %lld on %@", (long long)_pointerEvents, self);
+      RCTLogError(@"Invalid pointer-events specified %lld on %@", (long long)_pointerEvents, self);
       return hitSubview ?: hitView;
   }
 }
@@ -452,10 +447,10 @@ - (void)accessibilityDecrement
 
 - (NSString *)description
 {
-  return [[super description] stringByAppendingFormat:@" reactTag: %@; frame = %@; layer = %@",
-                                                      self.reactTag,
-                                                      NSStringFromCGRect(self.frame),
-                                                      self.layer];
+  NSString *superDescription = super.description;
+  NSRange semicolonRange = [superDescription rangeOfString:@";"];
+  NSString *replacement = [NSString stringWithFormat:@"; reactTag: %@;", self.reactTag];
+  return [superDescription stringByReplacingCharactersInRange:semicolonRange withString:replacement];
 }
 
 #pragma mark - Statics for dealing with layoutGuides
@@ -671,16 +666,11 @@ - (RCTCornerRadii)cornerRadii
   CGFloat bottomLeftRadius;
   CGFloat bottomRightRadius;
 
-  const CGFloat logicalTopStartRadius = RCTDefaultIfNegativeTo(_borderStartStartRadius, _borderTopStartRadius);
-  const CGFloat logicalTopEndRadius = RCTDefaultIfNegativeTo(_borderStartEndRadius, _borderTopEndRadius);
-  const CGFloat logicalBottomStartRadius = RCTDefaultIfNegativeTo(_borderEndStartRadius, _borderBottomStartRadius);
-  const CGFloat logicalBottomEndRadius = RCTDefaultIfNegativeTo(_borderEndEndRadius, _borderBottomEndRadius);
-
   if ([[RCTI18nUtil sharedInstance] doLeftAndRightSwapInRTL]) {
-    const CGFloat topStartRadius = RCTDefaultIfNegativeTo(_borderTopLeftRadius, logicalTopStartRadius);
-    const CGFloat topEndRadius = RCTDefaultIfNegativeTo(_borderTopRightRadius, logicalTopEndRadius);
-    const CGFloat bottomStartRadius = RCTDefaultIfNegativeTo(_borderBottomLeftRadius, logicalBottomStartRadius);
-    const CGFloat bottomEndRadius = RCTDefaultIfNegativeTo(_borderBottomRightRadius, logicalBottomEndRadius);
+    const CGFloat topStartRadius = RCTDefaultIfNegativeTo(_borderTopLeftRadius, _borderTopStartRadius);
+    const CGFloat topEndRadius = RCTDefaultIfNegativeTo(_borderTopRightRadius, _borderTopEndRadius);
+    const CGFloat bottomStartRadius = RCTDefaultIfNegativeTo(_borderBottomLeftRadius, _borderBottomStartRadius);
+    const CGFloat bottomEndRadius = RCTDefaultIfNegativeTo(_borderBottomRightRadius, _borderBottomEndRadius);
 
     const CGFloat directionAwareTopLeftRadius = isRTL ? topEndRadius : topStartRadius;
     const CGFloat directionAwareTopRightRadius = isRTL ? topStartRadius : topEndRadius;
@@ -692,10 +682,10 @@ - (RCTCornerRadii)cornerRadii
     bottomLeftRadius = RCTDefaultIfNegativeTo(radius, directionAwareBottomLeftRadius);
     bottomRightRadius = RCTDefaultIfNegativeTo(radius, directionAwareBottomRightRadius);
   } else {
-    const CGFloat directionAwareTopLeftRadius = isRTL ? logicalTopEndRadius : logicalTopStartRadius;
-    const CGFloat directionAwareTopRightRadius = isRTL ? logicalTopStartRadius : logicalTopEndRadius;
-    const CGFloat directionAwareBottomLeftRadius = isRTL ? logicalBottomEndRadius : logicalBottomStartRadius;
-    const CGFloat directionAwareBottomRightRadius = isRTL ? logicalBottomStartRadius : logicalBottomEndRadius;
+    const CGFloat directionAwareTopLeftRadius = isRTL ? _borderTopEndRadius : _borderTopStartRadius;
+    const CGFloat directionAwareTopRightRadius = isRTL ? _borderTopStartRadius : _borderTopEndRadius;
+    const CGFloat directionAwareBottomLeftRadius = isRTL ? _borderBottomEndRadius : _borderBottomStartRadius;
+    const CGFloat directionAwareBottomRightRadius = isRTL ? _borderBottomStartRadius : _borderBottomEndRadius;
 
     topLeftRadius =
         RCTDefaultIfNegativeTo(radius, RCTDefaultIfNegativeTo(_borderTopLeftRadius, directionAwareTopLeftRadius));
@@ -745,17 +735,6 @@ - (RCTBorderColors)borderColorsWithTraitCollection:(UITraitCollection *)traitCol
   UIColor *borderTopColor = _borderTopColor;
   UIColor *borderBottomColor = _borderBottomColor;
 
-  if (_borderBlockColor) {
-    borderTopColor = _borderBlockColor;
-    borderBottomColor = _borderBlockColor;
-  }
-  if (_borderBlockEndColor) {
-    borderBottomColor = _borderBlockEndColor;
-  }
-  if (_borderBlockStartColor) {
-    borderTopColor = _borderBlockStartColor;
-  }
-
 #if defined(__IPHONE_OS_VERSION_MAX_ALLOWED) && __IPHONE_OS_VERSION_MAX_ALLOWED >= 130000
   if (@available(iOS 13.0, *)) {
     borderColor = [borderColor resolvedColorWithTraitCollection:self.traitCollection];
@@ -935,7 +914,7 @@ -(void)setBorder##side##Color : (UIColor *)color \
   }
 
 setBorderColor() setBorderColor(Top) setBorderColor(Right) setBorderColor(Bottom) setBorderColor(Left)
-    setBorderColor(Start) setBorderColor(End) setBorderColor(Block) setBorderColor(BlockEnd) setBorderColor(BlockStart)
+    setBorderColor(Start) setBorderColor(End)
 
 #pragma mark - Border Width
 
@@ -966,8 +945,7 @@ -(void)setBorder##side##Radius : (CGFloat)radius \
 
                 setBorderRadius() setBorderRadius(TopLeft) setBorderRadius(TopRight) setBorderRadius(TopStart)
                     setBorderRadius(TopEnd) setBorderRadius(BottomLeft) setBorderRadius(BottomRight)
-                        setBorderRadius(BottomStart) setBorderRadius(BottomEnd) setBorderRadius(EndEnd)
-                            setBorderRadius(EndStart) setBorderRadius(StartEnd) setBorderRadius(StartStart)
+                        setBorderRadius(BottomStart) setBorderRadius(BottomEnd)
 
 #pragma mark - Border Curve
 
@@ -981,7 +959,7 @@ -(void)setBorder##side##Curve : (RCTBorderCurve)curve \
     [self.layer setNeedsDisplay];                       \
   }
 
-                                setBorderCurve()
+                            setBorderCurve()
 
 #pragma mark - Border Style
 
@@ -995,6 +973,6 @@ -(void)setBorder##side##Style : (RCTBorderStyle)style \
     [self.layer setNeedsDisplay];                       \
   }
 
-                                    setBorderStyle()
+                                setBorderStyle()
 
-                                        @end
+                                    @end
diff --git a/node_modules/react-native/React/Views/RCTViewManager.m b/node_modules/react-native/React/Views/RCTViewManager.m
index 8c97b29..b034ff0 100644
--- a/node_modules/react-native/React/Views/RCTViewManager.m
+++ b/node_modules/react-native/React/Views/RCTViewManager.m
@@ -28,7 +28,6 @@ @implementation RCTConvert (UIAccessibilityTraits)
     (@{
       @"none" : @(UIAccessibilityTraitNone),
       @"button" : @(UIAccessibilityTraitButton),
-      @"dropdownlist" : @(UIAccessibilityTraitNone),
       @"togglebutton" : @(UIAccessibilityTraitButton),
       @"link" : @(UIAccessibilityTraitLink),
       @"header" : @(UIAccessibilityTraitHeader),
@@ -64,14 +63,6 @@ @implementation RCTConvert (UIAccessibilityTraits)
       @"tablist" : @(UIAccessibilityTraitNone),
       @"timer" : @(UIAccessibilityTraitNone),
       @"toolbar" : @(UIAccessibilityTraitNone),
-      @"pager" : @(UIAccessibilityTraitNone),
-      @"scrollview" : @(UIAccessibilityTraitNone),
-      @"horizontalscrollview" : @(UIAccessibilityTraitNone),
-      @"viewgroup" : @(UIAccessibilityTraitNone),
-      @"webview" : @(UIAccessibilityTraitNone),
-      @"drawerlayout" : @(UIAccessibilityTraitNone),
-      @"slidingdrawer" : @(UIAccessibilityTraitNone),
-      @"iconmenu" : @(UIAccessibilityTraitNone),
       @"list" : @(UIAccessibilityTraitNone),
       @"grid" : @(UIAccessibilityTraitNone),
     }),
@@ -266,7 +257,7 @@ - (RCTShadowView *)shadowView
       view.userInteractionEnabled = NO;
       break;
     default:
-      RCTLogInfo(@"UIView base class does not support pointerEvent value: %@", json);
+      RCTLogError(@"UIView base class does not support pointerEvent value: %@", json);
   }
 }
 RCT_CUSTOM_VIEW_PROPERTY(removeClippedSubviews, BOOL, RCTView)
@@ -358,9 +349,6 @@ - (RCTShadowView *)shadowView
 RCT_VIEW_BORDER_PROPERTY(Left)
 RCT_VIEW_BORDER_PROPERTY(Start)
 RCT_VIEW_BORDER_PROPERTY(End)
-RCT_VIEW_BORDER_PROPERTY(Block)
-RCT_VIEW_BORDER_PROPERTY(BlockEnd)
-RCT_VIEW_BORDER_PROPERTY(BlockStart)
 
 #define RCT_VIEW_BORDER_RADIUS_PROPERTY(SIDE)                                                          \
   RCT_CUSTOM_VIEW_PROPERTY(border##SIDE##Radius, CGFloat, RCTView)                                     \
@@ -378,10 +366,6 @@ - (RCTShadowView *)shadowView
 RCT_VIEW_BORDER_RADIUS_PROPERTY(BottomRight)
 RCT_VIEW_BORDER_RADIUS_PROPERTY(BottomStart)
 RCT_VIEW_BORDER_RADIUS_PROPERTY(BottomEnd)
-RCT_VIEW_BORDER_RADIUS_PROPERTY(EndEnd)
-RCT_VIEW_BORDER_RADIUS_PROPERTY(EndStart)
-RCT_VIEW_BORDER_RADIUS_PROPERTY(StartEnd)
-RCT_VIEW_BORDER_RADIUS_PROPERTY(StartStart)
 
 RCT_REMAP_VIEW_PROPERTY(display, reactDisplay, YGDisplay)
 RCT_REMAP_VIEW_PROPERTY(zIndex, reactZIndex, NSInteger)
diff --git a/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.h b/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.h
index e9b330f..35c60c2 100644
--- a/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.h
+++ b/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.h
@@ -10,7 +10,7 @@
 #import <React/RCTComponent.h>
 #import <React/RCTScrollableProtocol.h>
 
-@interface RCTRefreshControl : UIRefreshControl <RCTCustomRefreshControlProtocol>
+@interface RCTRefreshControl : UIRefreshControl <RCTCustomRefreshContolProtocol>
 
 @property (nonatomic, copy) NSString *title;
 @property (nonatomic, copy) RCTDirectEventBlock onRefresh;
diff --git a/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.m b/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.m
index b09e653..d6c6e48 100644
--- a/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.m
+++ b/node_modules/react-native/React/Views/RefreshControl/RCTRefreshControl.m
@@ -117,13 +117,6 @@ - (void)endRefreshingProgrammatically
 
 - (void)_applyProgressViewOffset
 {
-  // Setting the UIRefreshControl's frame breaks integration with ContentInset from the superview
-  // if it is a UIScrollView. This integration happens when setting the UIScrollView's .refreshControl
-  // property. For this reason, setting the frame manually should be avoided, if not needed.
-  if (_progressViewOffset == 0.f) {
-    return;
-  }
-
   // progressViewOffset must be converted from the ScrollView parent's coordinate space to
   // the coordinate space of the RefreshControl. This ensures that the control respects any
   // offset in the view hierarchy, and that progressViewOffset is not inadvertently applied
diff --git a/node_modules/react-native/React/Views/SafeAreaView/RCTSafeAreaShadowView.m b/node_modules/react-native/React/Views/SafeAreaView/RCTSafeAreaShadowView.m
index 9b7dbf3..a9a7bee 100644
--- a/node_modules/react-native/React/Views/SafeAreaView/RCTSafeAreaShadowView.m
+++ b/node_modules/react-native/React/Views/SafeAreaView/RCTSafeAreaShadowView.m
@@ -32,7 +32,7 @@ - (void)setLocalData:(RCTSafeAreaViewLocalData *)localData
 
 /**
  * Removing support for setting padding from any outside code
- * to prevent interfering this with local data.
+ * to prevent interferring this with local data.
  */
 - (void)setPadding:(__unused YGValue)value
 {
diff --git a/node_modules/react-native/React/Views/ScrollView/RCTScrollView.m b/node_modules/react-native/React/Views/ScrollView/RCTScrollView.m
index 2929f2d..f0f6402 100644
--- a/node_modules/react-native/React/Views/ScrollView/RCTScrollView.m
+++ b/node_modules/react-native/React/Views/ScrollView/RCTScrollView.m
@@ -29,7 +29,7 @@
 @interface RCTCustomScrollView : UIScrollView <UIGestureRecognizerDelegate>
 
 @property (nonatomic, assign) BOOL centerContent;
-@property (nonatomic, strong) UIView<RCTCustomRefreshControlProtocol> *customRefreshControl;
+@property (nonatomic, strong) UIView<RCTCustomRefreshContolProtocol> *customRefreshControl;
 @property (nonatomic, assign) BOOL pinchGestureEnabled;
 
 @end
@@ -215,14 +215,14 @@ - (void)setFrame:(CGRect)frame
   }
 }
 
-- (void)setCustomRefreshControl:(UIView<RCTCustomRefreshControlProtocol> *)refreshControl
+- (void)setCustomRefreshControl:(UIView<RCTCustomRefreshContolProtocol> *)refreshControl
 {
   if (_customRefreshControl) {
     [_customRefreshControl removeFromSuperview];
   }
   _customRefreshControl = refreshControl;
   // We have to set this because we can't always guarantee the
-  // `RCTCustomRefreshControlProtocol`'s superview will always be of class
+  // `RCTCustomRefreshContolProtocol`'s superview will always be of class
   // `UIScrollView` like we were previously
   if ([_customRefreshControl respondsToSelector:@selector(setScrollView:)]) {
     _customRefreshControl.scrollView = self;
@@ -331,16 +331,6 @@ - (void)_keyboardWillChangeFrame:(NSNotification *)notification
     newContentOffset.y -= contentDiff;
   }
 
-  if (@available(iOS 14.0, *)) {
-    // On iOS when Prefer Cross-Fade Transitions is enabled, the keyboard position
-    // & height is reported differently (0 instead of Y position value matching height of frame)
-    // Fixes similar issue we saw with https://github.com/facebook/react-native/pull/34503
-    if (UIAccessibilityPrefersCrossFadeTransitions() && endFrame.size.height == 0) {
-      newContentOffset.y = 0;
-      newEdgeInsets.bottom = 0;
-    }
-  }
-
   [UIView animateWithDuration:duration
                         delay:0.0
                       options:animationOptionsWithCurve(curve)
@@ -412,8 +402,8 @@ - (void)setRemoveClippedSubviews:(__unused BOOL)removeClippedSubviews
 - (void)insertReactSubview:(UIView *)view atIndex:(NSInteger)atIndex
 {
   [super insertReactSubview:view atIndex:atIndex];
-  if ([view conformsToProtocol:@protocol(RCTCustomRefreshControlProtocol)]) {
-    [_scrollView setCustomRefreshControl:(UIView<RCTCustomRefreshControlProtocol> *)view];
+  if ([view conformsToProtocol:@protocol(RCTCustomRefreshContolProtocol)]) {
+    [_scrollView setCustomRefreshControl:(UIView<RCTCustomRefreshContolProtocol> *)view];
     if (![view isKindOfClass:[UIRefreshControl class]] && [view conformsToProtocol:@protocol(UIScrollViewDelegate)]) {
       [self addScrollListener:(UIView<UIScrollViewDelegate> *)view];
     }
@@ -431,7 +421,7 @@ - (void)insertReactSubview:(UIView *)view atIndex:(NSInteger)atIndex
 - (void)removeReactSubview:(UIView *)subview
 {
   [super removeReactSubview:subview];
-  if ([subview conformsToProtocol:@protocol(RCTCustomRefreshControlProtocol)]) {
+  if ([subview conformsToProtocol:@protocol(RCTCustomRefreshContolProtocol)]) {
     [_scrollView setCustomRefreshControl:nil];
     if (![subview isKindOfClass:[UIRefreshControl class]] &&
         [subview conformsToProtocol:@protocol(UIScrollViewDelegate)]) {
@@ -486,7 +476,7 @@ - (void)layoutSubviews
 
 #if !TARGET_OS_TV
   // Adjust the refresh control frame if the scrollview layout changes.
-  UIView<RCTCustomRefreshControlProtocol> *refreshControl = _scrollView.customRefreshControl;
+  UIView<RCTCustomRefreshContolProtocol> *refreshControl = _scrollView.customRefreshControl;
   if (refreshControl && refreshControl.isRefreshing && ![refreshControl isKindOfClass:UIRefreshControl.class]) {
     refreshControl.frame =
         (CGRect){_scrollView.contentOffset, {_scrollView.frame.size.width, refreshControl.frame.size.height}};
diff --git a/node_modules/react-native/React/Views/ScrollView/RCTScrollableProtocol.h b/node_modules/react-native/React/Views/ScrollView/RCTScrollableProtocol.h
index d85f135..706900b 100644
--- a/node_modules/react-native/React/Views/ScrollView/RCTScrollableProtocol.h
+++ b/node_modules/react-native/React/Views/ScrollView/RCTScrollableProtocol.h
@@ -33,7 +33,7 @@
 /**
  * Denotes a view which implements custom pull to refresh functionality.
  */
-@protocol RCTCustomRefreshControlProtocol
+@protocol RCTCustomRefreshContolProtocol
 
 @property (nonatomic, copy) RCTDirectEventBlock onRefresh;
 @property (nonatomic, readonly, getter=isRefreshing) BOOL refreshing;
@@ -42,7 +42,3 @@
 @property (nonatomic, weak) UIScrollView *scrollView;
 
 @end
-
-__attribute__((deprecated("Use RCTCustomRefreshControlProtocol instead")))
-@protocol RCTCustomRefreshContolProtocol<RCTCustomRefreshControlProtocol>
-@end
diff --git a/node_modules/react-native/ReactAndroid/.npmignore b/node_modules/react-native/ReactAndroid/.npmignore
new file mode 100644
index 0000000..914cb76
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/.npmignore
@@ -0,0 +1,10 @@
+# Make sure we never publish ReactAndroid/build (Gradle output)
+# or ReactAndroid/.cxx (CMake output) to npm.
+# Those folders are huge (> 100MB)!
+build/
+.cxx/
+# Exclude buck config/jars for third-party libraries
+src/main/third-party/
+# Exclude Android & JVM tests
+src/test/
+src/androidTest/
diff --git a/node_modules/react-native/ReactAndroid/Android-prebuilt.mk b/node_modules/react-native/ReactAndroid/Android-prebuilt.mk
new file mode 100644
index 0000000..48dd794
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/Android-prebuilt.mk
@@ -0,0 +1,211 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+# This configuration provides access to most common React Native prebuilt .so files
+# to avoid recompiling each of the libraries outside of ReactAndroid NDK compilation.
+# Hosting app's/library's Android.mk can include this Android-prebuilt.mk file to
+# get access to those libraries to depend on.
+# NOTES:
+# * Currently, it assumes building React Native from source.
+# * Not every .so is listed here (yet).
+# * Static libs are not covered here (yet).
+
+LOCAL_PATH := $(call my-dir)
+
+FIRST_PARTY_NDK_DIR := $(REACT_ANDROID_DIR)/src/main/jni/first-party
+THIRD_PARTY_NDK_DIR := $(REACT_ANDROID_BUILD_DIR)/third-party-ndk
+REACT_ANDROID_SRC_DIR := $(REACT_ANDROID_DIR)/src/main
+REACT_COMMON_DIR := $(REACT_ANDROID_DIR)/../ReactCommon
+REACT_GENERATED_SRC_DIR := $(REACT_ANDROID_BUILD_DIR)/generated/source
+# Note: this have only .so files
+REACT_NDK_EXPORT_DIR := $(PROJECT_BUILD_DIR)/react-ndk/exported
+
+# fb
+include $(CLEAR_VARS)
+LOCAL_MODULE := fb
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libfb.so
+LOCAL_EXPORT_C_INCLUDES := $(FIRST_PARTY_NDK_DIR)/fb/include
+include $(PREBUILT_SHARED_LIBRARY)
+
+# folly_runtime
+include $(CLEAR_VARS)
+LOCAL_MODULE := folly_runtime
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libfolly_runtime.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(THIRD_PARTY_NDK_DIR)/boost/boost_1_76_0 \
+  $(THIRD_PARTY_NDK_DIR)/double-conversion \
+  $(THIRD_PARTY_NDK_DIR)/folly
+# Note: Sync with folly/Android.mk.
+FOLLY_FLAGS := \
+  -DFOLLY_NO_CONFIG=1 \
+  -DFOLLY_HAVE_CLOCK_GETTIME=1 \
+  -DFOLLY_HAVE_MEMRCHR=1 \
+  -DFOLLY_USE_LIBCPP=1 \
+  -DFOLLY_MOBILE=1 \
+  -DFOLLY_HAVE_XSI_STRERROR_R=1
+LOCAL_CFLAGS += $(FOLLY_FLAGS)
+LOCAL_EXPORT_CPPFLAGS := $(FOLLY_FLAGS)
+include $(PREBUILT_SHARED_LIBRARY)
+
+# glog
+include $(CLEAR_VARS)
+LOCAL_MODULE := glog
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libglog.so
+LOCAL_EXPORT_C_INCLUDES := $(THIRD_PARTY_NDK_DIR)/glog/exported
+LOCAL_SHARED_LIBRARIES := libglog
+include $(PREBUILT_SHARED_LIBRARY)
+
+# yoga
+include $(CLEAR_VARS)
+LOCAL_MODULE := yoga
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libyoga.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(FIRST_PARTY_NDK_DIR)/yogajni/jni \
+  $(REACT_COMMON_DIR)/yoga
+# Note: Sync with yogajni/Android.mk
+LOCAL_CFLAGS += -fvisibility=hidden -fexceptions -frtti -O3
+LOCAL_LDLIBS += -landroid -llog
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_nativemodule_core
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_nativemodule_core
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_nativemodule_core.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_ANDROID_SRC_DIR)/jni \
+  $(REACT_COMMON_DIR) \
+  $(REACT_COMMON_DIR)/callinvoker \
+  $(REACT_COMMON_DIR)/jsi \
+  $(REACT_COMMON_DIR)/react/nativemodule/core \
+  $(REACT_COMMON_DIR)/react/nativemodule/core/platform/android
+LOCAL_SHARED_LIBRARIES := libfolly_runtime
+include $(PREBUILT_SHARED_LIBRARY)
+
+# turbomodulejsijni
+include $(CLEAR_VARS)
+LOCAL_MODULE := turbomodulejsijni
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libturbomodulejsijni.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_ANDROID_SRC_DIR)/jni/react/turbomodule
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_core
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_core
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_core.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR) \
+  $(REACT_COMMON_DIR)/react/renderer/core
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_debug
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_debug
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_debug.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/debug
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_debug
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_debug
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_debug.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/debug
+LOCAL_SHARED_LIBRARIES := libfolly_runtime
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_graphics
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_graphics
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_graphics.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/graphics \
+  $(REACT_COMMON_DIR)/react/renderer/graphics/platform/cxx
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_imagemanager
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_imagemanager
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_imagemanager.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/imagemanager \
+  $(REACT_COMMON_DIR)/react/renderer/imagemanager/platform/cxx
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_mounting
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_mounting
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_mounting.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/mounting
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_mapbuffer
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_mapbuffer
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_mapbuffer.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/mapbuffer
+include $(PREBUILT_SHARED_LIBRARY)
+
+# rrc_view
+include $(CLEAR_VARS)
+LOCAL_MODULE := rrc_view
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/librrc_view.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/components/view
+include $(PREBUILT_SHARED_LIBRARY)
+
+# fabricjni
+include $(CLEAR_VARS)
+LOCAL_MODULE := fabricjni
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libfabricjni.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_ANDROID_SRC_DIR)/jni/react/fabricjni
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_render_componentregistry
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_render_componentregistry
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_render_componentregistry.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/react/renderer/componentregistry
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_newarchdefaults
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_newarchdefaults
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_newarchdefaults.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_ANDROID_SRC_DIR)/jni/react/newarchdefaults
+include $(PREBUILT_SHARED_LIBRARY)
+
+# jsi
+include $(CLEAR_VARS)
+LOCAL_MODULE := jsi
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libjsi.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_COMMON_DIR)/jsi
+include $(PREBUILT_SHARED_LIBRARY)
+
+# react_codegen_rncore
+include $(CLEAR_VARS)
+LOCAL_MODULE := react_codegen_rncore
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libreact_codegen_rncore.so
+LOCAL_EXPORT_C_INCLUDES := \
+  $(REACT_GENERATED_SRC_DIR)/codegen/jni
+include $(PREBUILT_SHARED_LIBRARY)
+
+# runtimeexecutor
+include $(CLEAR_VARS)
+LOCAL_MODULE := runtimeexecutor
+LOCAL_SRC_FILES := $(REACT_NDK_EXPORT_DIR)/$(TARGET_ARCH_ABI)/libruntimeexecutor.so
+LOCAL_C_INCLUDES := $(REACT_COMMON_DIR)/runtimeexecutor
+LOCAL_EXPORT_C_INCLUDES := $(REACT_COMMON_DIR)/runtimeexecutor
+include $(PREBUILT_SHARED_LIBRARY)
+
+# fbjni
+include $(FIRST_PARTY_NDK_DIR)/fbjni/Android.mk
diff --git a/node_modules/react-native/ReactAndroid/build.gradle b/node_modules/react-native/ReactAndroid/build.gradle
index f44b6e4..155cb59 100644
--- a/node_modules/react-native/ReactAndroid/build.gradle
+++ b/node_modules/react-native/ReactAndroid/build.gradle
@@ -120,10 +120,6 @@ final def preparePrefab = tasks.register("preparePrefab", PreparePrefabHeadersTa
                 "rrc_view",
                 new Pair("../ReactCommon/react/renderer/components/view/", "react/renderer/components/view/")
             ),
-            new PrefabPreprocessingEntry(
-                "rrc_legacyviewmanagerinterop",
-                new Pair("../ReactCommon/react/renderer/components/legacyviewmanagerinterop/", "react/renderer/components/legacyviewmanagerinterop/")
-            ),
             new PrefabPreprocessingEntry(
                 "jsi",
                 new Pair("../ReactCommon/jsi/", "")
@@ -134,7 +130,10 @@ final def preparePrefab = tasks.register("preparePrefab", PreparePrefabHeadersTa
             ),
             new PrefabPreprocessingEntry(
                 "fabricjni",
-                new Pair("src/main/jni/react/fabric", "react/fabric/")
+                [
+                    new Pair("src/main/jni/react/fabric", "react/fabric/"),
+                    new Pair("src/main/jni/react/cxxcomponents", "react/cxxcomponents/")
+                ]
             ),
             new PrefabPreprocessingEntry(
                 "react_render_mapbuffer",
@@ -164,7 +163,6 @@ final def preparePrefab = tasks.register("preparePrefab", PreparePrefabHeadersTa
                     new Pair(new File(buildDir, "third-party-ndk/glog/exported/").absolutePath, ""),
                     new Pair("../ReactCommon/butter/", "butter/"),
                     new Pair("../ReactCommon/callinvoker/", ""),
-                    new Pair("../ReactCommon/cxxreact/", "cxxreact/"),
                     new Pair("../ReactCommon/react/bridging/", "react/bridging/"),
                     new Pair("../ReactCommon/react/config/", "react/config/"),
                     new Pair("../ReactCommon/react/nativemodule/core/", ""),
@@ -244,24 +242,22 @@ task createNativeDepsDirectories {
 
 task downloadBoost(dependsOn: createNativeDepsDirectories, type: Download) {
     src("https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION.replace("_", ".")}/source/boost_${BOOST_VERSION}.tar.gz")
-    onlyIfModified(true)
+    onlyIfNewer(true)
     overwrite(false)
-    retries(5)
     dest(new File(downloadsDir, "boost_${BOOST_VERSION}.tar.gz"))
 }
 
 final def prepareBoost = tasks.register("prepareBoost", PrepareBoostTask) {
     it.dependsOn(boostPath ? [] : [downloadBoost])
-    it.boostPath.setFrom(boostPath ?: tarTree(downloadBoost.dest))
+    it.boostPath.setFrom(boostPath ?: tarTree(resources.gzip(downloadBoost.dest)))
     it.boostVersion.set(BOOST_VERSION)
     it.outputDir.set(new File(thirdPartyNdkDir, "boost"))
 }
 
 task downloadDoubleConversion(dependsOn: createNativeDepsDirectories, type: Download) {
     src("https://github.com/google/double-conversion/archive/v${DOUBLE_CONVERSION_VERSION}.tar.gz")
-    onlyIfModified(true)
+    onlyIfNewer(true)
     overwrite(false)
-    retries(5)
     dest(new File(downloadsDir, "double-conversion-${DOUBLE_CONVERSION_VERSION}.tar.gz"))
 }
 
@@ -276,9 +272,8 @@ task prepareDoubleConversion(dependsOn: dependenciesPath ? [] : [downloadDoubleC
 
 task downloadFolly(dependsOn: createNativeDepsDirectories, type: Download) {
     src("https://github.com/facebook/folly/archive/v${FOLLY_VERSION}.tar.gz")
-    onlyIfModified(true)
+    onlyIfNewer(true)
     overwrite(false)
-    retries(5)
     dest(new File(downloadsDir, "folly-${FOLLY_VERSION}.tar.gz"))
 }
 
@@ -293,9 +288,8 @@ task prepareFolly(dependsOn: dependenciesPath ? [] : [downloadFolly], type: Copy
 
 task downloadFmt(dependsOn: createNativeDepsDirectories, type: Download) {
     src("https://github.com/fmtlib/fmt/archive/${FMT_VERSION}.tar.gz")
-    onlyIfModified(true)
+    onlyIfNewer(true)
     overwrite(false)
-    retries(5)
     dest(new File(downloadsDir, "fmt-${FMT_VERSION}.tar.gz"))
 }
 
@@ -310,9 +304,8 @@ task prepareFmt(dependsOn: dependenciesPath ? [] : [downloadFmt], type: Copy) {
 
 task downloadLibevent(dependsOn: createNativeDepsDirectories, type: Download) {
     src("https://github.com/libevent/libevent/releases/download/release-${LIBEVENT_VERSION}-stable/libevent-${LIBEVENT_VERSION}-stable.tar.gz")
-    onlyIfModified(true)
+    onlyIfNewer(true)
     overwrite(false)
-    retries(5)
     dest(new File(downloadsDir, "libevent-${LIBEVENT_VERSION}.tar.gz"))
 }
 
@@ -326,9 +319,8 @@ final def prepareLibevent = tasks.register("prepareLibevent", PrepareLibeventTas
 
 task downloadGlog(dependsOn: createNativeDepsDirectories, type: Download) {
     src("https://github.com/google/glog/archive/v${GLOG_VERSION}.tar.gz")
-    onlyIfModified(true)
+    onlyIfNewer(true)
     overwrite(false)
-    retries(5)
     dest(new File(downloadsDir, "glog-${GLOG_VERSION}.tar.gz"))
 }
 
@@ -422,18 +414,9 @@ task installArchives {
     dependsOn("publishAllPublicationsToNpmRepository")
 }
 
-repositories {
-    // Normally RNGP will set repositories for all modules,
-    // but when consumed from source, we need to re-declare
-    // those repositories as there is no app module there.
-    mavenCentral()
-    google()
-}
-
 android {
     buildToolsVersion = "33.0.0"
     compileSdkVersion 33
-    namespace "com.facebook.react"
 
     // Used to override the NDK path/version on internal CI or by allowing
     // users to customize the NDK path/version from their root project (e.g. for M1 support)
@@ -469,10 +452,7 @@ android {
                     "-DREACT_BUILD_DIR=$buildDir",
                     "-DANDROID_STL=c++_shared",
                     "-DANDROID_TOOLCHAIN=clang",
-                    "-DANDROID_PLATFORM=android-21",
-                    // Due to https://github.com/android/ndk/issues/1693 we're losing Android
-                    // specific compilation flags. This can be removed once we moved to NDK 25/26
-                    "-DANDROID_USE_LEGACY_TOOLCHAIN_FILE=ON"
+                    "-DANDROID_PLATFORM=android-21"
 
                 targets "jsijniprofiler",
                     "reactnativeblob",
@@ -492,7 +472,6 @@ android {
                     "rrc_image",
                     "rrc_root",
                     "rrc_view",
-                    "rrc_legacyviewmanagerinterop",
                     "jsi",
                     "glog",
                     "fabricjni",
@@ -521,17 +500,6 @@ android {
         }
     }
 
-    buildTypes {
-        debug {
-            externalNativeBuild {
-                cmake {
-                    // We want to build Gtest suite only for the debug variant.
-                    targets "reactnative_unittest"
-                }
-            }
-        }
-    }
-
     preBuild.dependsOn(prepareJSC, prepareBoost, prepareDoubleConversion, prepareFmt, prepareFolly, prepareGlog, prepareLibevent)
     preBuild.dependsOn("generateCodegenArtifactsFromSchema")
     preBuild.dependsOn(preparePrefab)
@@ -605,9 +573,6 @@ android {
         rrc_view {
             headers(new File(prefabHeadersDir, "rrc_view").absolutePath)
         }
-        rrc_legacyviewmanagerinterop {
-            headers(new File(prefabHeadersDir, "rrc_legacyviewmanagerinterop").absolutePath)
-        }
         jsi {
             headers(new File(prefabHeadersDir, "jsi").absolutePath)
         }
@@ -661,17 +626,6 @@ android {
             includeBuildTypeValues('debug', 'release')
         }
     }
-
-    testOptions {
-        unitTests.all {
-            // Robolectric tests are downloading JARs at runtime. This allows to specify
-            // a local file mirror with REACT_NATIVE_ROBOLECTRIC_MIRROR to go in offline more.
-            if (System.getenv("REACT_NATIVE_ROBOLECTRIC_MIRROR") != null) {
-                systemProperty 'robolectric.offline', 'true'
-                systemProperty 'robolectric.dependency.dir', System.getenv("REACT_NATIVE_ROBOLECTRIC_MIRROR")
-            }
-        }
-    }
 }
 
 dependencies {
@@ -697,7 +651,7 @@ dependencies {
 
     // It's up to the consumer to decide if hermes should be included or not.
     // Therefore hermes-engine is a compileOnly dependency.
-    compileOnly(project(":packages:react-native:ReactAndroid:hermes-engine"))
+    compileOnly(project(":ReactAndroid:hermes-engine"))
 
     testImplementation("junit:junit:${JUNIT_VERSION}")
     testImplementation("org.assertj:assertj-core:${ASSERTJ_VERSION}")
@@ -706,18 +660,11 @@ dependencies {
     testImplementation("org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}")
     testImplementation("org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}")
     testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}")
-    testImplementation("com.thoughtworks.xstream:xstream:1.4.20")
 
     androidTestImplementation(fileTree(dir: "src/main/third-party/java/buck-android-support/", include: ["*.jar"]))
     androidTestImplementation("androidx.test:runner:${ANDROIDX_TEST_VERSION}")
     androidTestImplementation("androidx.test:rules:${ANDROIDX_TEST_VERSION}")
     androidTestImplementation("org.mockito:mockito-core:${MOCKITO_CORE_VERSION}")
-
-    // This compileOnly dependency is needed to be able to update the offline
-    // mirror from a non-linux machine, while still executing inside a Linux CI
-    // as we declare a dependency on aap2 @linux so we're sure the linux artifact
-    // gets downloaded at some point.
-    compileOnly("com.android.tools.build:aapt2:7.4.2-8841542:linux")
 }
 
 react {
@@ -727,26 +674,6 @@ react {
     jsRootDir = file("../Libraries")
 }
 
-tasks.withType(Test).all {
-    // We add --add-opens flags to make sure we can run PowerMock tests on JDK >= 17
-    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_17)) {
-        jvmArgs += [
-            "-XX:+AllowRedefinitionToAddDeleteMethods",
-            "--illegal-access=permit",
-            "--add-opens=java.base/java.lang=ALL-UNNAMED",
-            "--add-opens=java.base/java.xml.internal=ALL-UNNAMED",
-            "--add-opens=java.base/java.util=ALL-UNNAMED",
-            "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
-            "--add-opens=java.base/java.net=ALL-UNNAMED",
-            "--add-opens=java.base/java.security=ALL-UNNAMED",
-            "--add-opens=java.base/java.io=ALL-UNNAMED",
-            "--add-opens=java.base/java.nio=ALL-UNNAMED",
-            "--add-opens=java.base/java.nio.charset=ALL-UNNAMED",
-            "--add-opens=java.base/jdk.xml.internal=ALL-UNNAMED",
-        ]
-    }
-}
-
 apply plugin: "org.jetbrains.kotlin.android"
 
 /* Publishing Configuration */
diff --git a/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake b/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
index 2cb77c4..fe3a8ca 100644
--- a/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
+++ b/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
@@ -46,20 +46,7 @@ target_include_directories(${CMAKE_PROJECT_NAME}
                 ${CMAKE_CURRENT_SOURCE_DIR}
                 ${PROJECT_BUILD_DIR}/generated/rncli/src/main/jni)
 
-target_compile_options(${CMAKE_PROJECT_NAME}
-        PRIVATE
-                -Wall
-                -Werror
-                # We suppress cpp #error and #warning to don't fail the build
-                # due to use migrating away from
-                # #include <react/renderer/graphics/conversions.h>
-                # This can be removed for React Native 0.73
-                -Wno-error=cpp 
-                -fexceptions
-                -frtti
-                -std=c++17
-                -DWITH_INSPECTOR=1
-                -DLOG_TAG=\"ReactNative\")
+target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall -Werror -fexceptions -frtti -std=c++17 -DWITH_INSPECTOR=1 -DLOG_TAG=\"ReactNative\")
 
 # Prefab packages from React Native
 find_package(ReactAndroid REQUIRED CONFIG)
@@ -82,7 +69,6 @@ add_library(folly_runtime ALIAS ReactAndroid::folly_runtime)
 add_library(react_nativemodule_core ALIAS ReactAndroid::react_nativemodule_core)
 add_library(react_render_imagemanager ALIAS ReactAndroid::react_render_imagemanager)
 add_library(rrc_image ALIAS ReactAndroid::rrc_image)
-add_library(rrc_legacyviewmanagerinterop ALIAS ReactAndroid::rrc_legacyviewmanagerinterop)
 
 find_package(fbjni REQUIRED CONFIG)
 add_library(fbjni ALIAS fbjni::fbjni)
@@ -105,7 +91,6 @@ target_link_libraries(${CMAKE_PROJECT_NAME}
         react_render_mapbuffer              # prefab ready
         rrc_image                           # prefab ready
         rrc_view                            # prefab ready
-        rrc_legacyviewmanagerinterop        # prefab ready
         runtimeexecutor                     # prefab ready
         turbomodulejsijni                   # prefab ready
         yoga)                               # prefab ready
diff --git a/node_modules/react-native/ReactAndroid/external-artifacts/.npmignore b/node_modules/react-native/ReactAndroid/external-artifacts/.npmignore
new file mode 100644
index 0000000..a415409
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/external-artifacts/.npmignore
@@ -0,0 +1,3 @@
+# Make sure we never publish the build and artifacts folders to npm.
+build/
+artifacts/
diff --git a/node_modules/react-native/ReactAndroid/gradle.properties b/node_modules/react-native/ReactAndroid/gradle.properties
index 6aadbb4..6642394 100644
--- a/node_modules/react-native/ReactAndroid/gradle.properties
+++ b/node_modules/react-native/ReactAndroid/gradle.properties
@@ -1,4 +1,4 @@
-VERSION_NAME=0.72.3
+VERSION_NAME=0.71.12
 GROUP=com.facebook.react
 
 # JVM Versions
@@ -12,14 +12,14 @@ FRESCO_VERSION=2.5.0
 INFER_ANNOTATIONS_VERSION=0.18.0
 JAVAX_INJECT_VERSION=1
 JSR305_VERSION=3.0.2
-JUNIT_VERSION=4.13.2
-MOCKITO_CORE_VERSION=2.28.2
+JUNIT_VERSION=4.12
+MOCKITO_CORE_VERSION=2.26.0
 OKHTTP_VERSION=4.9.2
 OKIO_VERSION=2.9.0
-POWERMOCK_VERSION=2.0.9
+POWERMOCK_VERSION=2.0.2
 PROGUARD_ANNOTATIONS_VERSION=1.19.0
-ROBOLECTRIC_VERSION=4.9.2
-SO_LOADER_VERSION=0.10.5
+ROBOLECTRIC_VERSION=4.4
+SO_LOADER_VERSION=0.10.4
 SWIPEREFRESH_LAYOUT_VERSION=1.0.0
 
 # Native Dependency Versions
diff --git a/node_modules/react-native/ReactAndroid/hermes-engine/.npmignore b/node_modules/react-native/ReactAndroid/hermes-engine/.npmignore
new file mode 100644
index 0000000..b6a87b3
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/hermes-engine/.npmignore
@@ -0,0 +1,3 @@
+# Make sure we never publish the build folders to npm.
+build/
+.cxx/
diff --git a/node_modules/react-native/ReactAndroid/hermes-engine/build.gradle b/node_modules/react-native/ReactAndroid/hermes-engine/build.gradle
index 5ebaf48..c714f87 100644
--- a/node_modules/react-native/ReactAndroid/hermes-engine/build.gradle
+++ b/node_modules/react-native/ReactAndroid/hermes-engine/build.gradle
@@ -33,7 +33,7 @@ def findCmakePath(cmakeVersion) {
     return "cmake"
 }
 
-def reactNativeRootDir = project(':packages:react-native:ReactAndroid').projectDir.parent;
+def reactNativeRootDir = project(':ReactAndroid').projectDir.parent;
 def customDownloadDir = System.getenv("REACT_NATIVE_DOWNLOADS_DIR")
 def downloadsDir = customDownloadDir ? new File(customDownloadDir) : new File(reactNativeRootDir, "sdks/download")
 
@@ -60,10 +60,8 @@ def jsiDir = new File(reactNativeRootDir, "ReactCommon/jsi")
 
 task downloadHermes(type: Download) {
     src("https://github.com/facebook/hermes/tarball/${hermesVersion}")
-    onlyIfModified(true)
-    overwrite(true)
-    useETag("all")
-    retries(5)
+    onlyIfNewer(true)
+    overwrite(false)
     dest(new File(downloadsDir, "hermes.tar.gz"))
 }
 
@@ -116,18 +114,9 @@ def reactNativeArchitectures() {
     return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
 }
 
-repositories {
-    // Normally RNGP will set repositories for all modules,
-    // but when consumed from source, we need to re-declare
-    // those repositories as there is no app module there.
-    mavenCentral()
-    google()
-}
-
 android {
     compileSdkVersion 31
     buildToolsVersion = "31.0.0"
-    namespace "com.facebook.hermes"
 
     // Used to override the NDK path/version on internal CI or by allowing
     // users to customize the NDK path/version from their root project (e.g. for M1 support)
@@ -146,6 +135,7 @@ android {
                 arguments "-DHERMES_IS_ANDROID=True"
                 arguments "-DANDROID_STL=c++_shared"
                 arguments "-DANDROID_PIE=True"
+                arguments "-DANDROID_LD=lld"
                 arguments "-DIMPORT_HERMESC=${new File(hermesBuildDir, "ImportHermesc.cmake").toString()}"
                 arguments "-DJSI_DIR=${jsiDir}"
                 arguments "-DHERMES_SLOW_DEBUG=False"
@@ -154,9 +144,6 @@ android {
                 // We intentionally build Hermes with Intl support only. This is to simplify
                 // the build setup and to avoid overcomplicating the build-type matrix.
                 arguments "-DHERMES_ENABLE_INTL=True"
-                // Due to https://github.com/android/ndk/issues/1693 we're losing Android
-                // specific compilation flags. This can be removed once we moved to NDK 25/26
-                arguments "-DANDROID_USE_LEGACY_TOOLCHAIN_FILE=ON"
                 targets "libhermes"
             }
         }
@@ -181,17 +168,14 @@ android {
                     // This has the (unlucky) side effect of letting AGP call the build
                     // tasks `configureCMakeRelease` while is actually building the debug flavor.
                     arguments "-DCMAKE_BUILD_TYPE=Release"
-                    // Adding -O3 to patch the issue here: https://github.com/android/ndk/issues/1740#issuecomment-1198438260
-                    cppFlags "-O3"
                 }
             }
         }
         release {
             externalNativeBuild {
                 cmake {
-                    arguments "-DCMAKE_BUILD_TYPE=MinSizeRel"
-                    // For release builds, we don't want to enable the Hermes Debugger.
                     arguments "-DHERMES_ENABLE_DEBUGGER=False"
+                    arguments "-DCMAKE_BUILD_TYPE=MinSizeRel"
                 }
             }
         }
diff --git a/node_modules/react-native/ReactAndroid/libs/BUCK b/node_modules/react-native/ReactAndroid/libs/BUCK
index 88ec9e4..56d594c 100644
--- a/node_modules/react-native/ReactAndroid/libs/BUCK
+++ b/node_modules/react-native/ReactAndroid/libs/BUCK
@@ -4,7 +4,7 @@ load("//tools/build_defs/oss:rn_defs.bzl", "rn_android_prebuilt_aar")
 rn_android_prebuilt_aar(
     name = "appcompat",
     aar = ":appcompat-binary-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
diff --git a/node_modules/react-native/ReactAndroid/proguard-rules.pro b/node_modules/react-native/ReactAndroid/proguard-rules.pro
index 7e65d79..2161cd7 100644
--- a/node_modules/react-native/ReactAndroid/proguard-rules.pro
+++ b/node_modules/react-native/ReactAndroid/proguard-rules.pro
@@ -60,10 +60,3 @@
 -dontwarn java.nio.file.*
 -dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
 -dontwarn okio.**
-
-# yoga
--keep,allowobfuscation @interface com.facebook.yoga.annotations.DoNotStrip
--keep @com.facebook.yoga.annotations.DoNotStrip class *
--keepclassmembers class * {
-    @com.facebook.yoga.annotations.DoNotStrip *;
-}
diff --git a/node_modules/react-native/ReactAndroid/publish.gradle b/node_modules/react-native/ReactAndroid/publish.gradle
index db2c837..637a007 100644
--- a/node_modules/react-native/ReactAndroid/publish.gradle
+++ b/node_modules/react-native/ReactAndroid/publish.gradle
@@ -12,7 +12,7 @@ def isNightly = findProperty("isNightly")?.toBoolean()
 def signingKey = findProperty("SIGNING_KEY")
 def signingPwd = findProperty("SIGNING_PWD")
 
-def reactAndroidProjectDir = project(':packages:react-native:ReactAndroid').projectDir
+def reactAndroidProjectDir = project(':ReactAndroid').projectDir
 def androidOutputUrl = "file://${reactAndroidProjectDir}/../android"
 def mavenTempLocalUrl = "file:///tmp/maven-local"
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/AndroidManifest.xml b/node_modules/react-native/ReactAndroid/src/main/AndroidManifest.xml
new file mode 100644
index 0000000..ec2751f
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/AndroidManifest.xml
@@ -0,0 +1,5 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.facebook.react">
+
+    <application />
+
+</manifest>
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/BUCK
index 052fc03..a96954a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/BUCK
@@ -2,11 +2,13 @@ load("//tools/build_defs/oss:rn_defs.bzl", "react_native_dep", "rn_android_libra
 
 rn_android_library(
     name = "yoga",
-    srcs = glob(["yoga/**/*.java"]),
+    srcs = glob(["yoga/*.java"]),
     autoglob = False,
     language = "JAVA",
     visibility = ["PUBLIC"],
     deps = [
+        react_native_dep("libraries/fbjni:java"),
+        react_native_dep("java/com/facebook/proguard/annotations:annotations"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/BUCK
index 4d80018..dd21088 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/BUCK
@@ -1,7 +1,5 @@
 load("//tools/build_defs/oss:rn_defs.bzl", "react_native_dep", "react_native_target", "rn_android_library")
 
-oncall("react_native")
-
 rn_android_library(
     name = "react",
     srcs = glob(["*.java"]),
@@ -10,48 +8,49 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:appcompat"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+        react_native_dep("third-party/android/androidx:autofill"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
-        react_native_dep("java/com/facebook/hermes/reactexecutor:reactexecutor"),
         react_native_dep("java/com/facebook/systrace:systrace"),
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:appcompat"),
-        react_native_dep("third-party/android/androidx:autofill"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
+        react_native_dep("java/com/facebook/hermes/reactexecutor:reactexecutor"),
         react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/debug/tags:tags"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
-        react_native_target("java/com/facebook/react/config:config"),
         react_native_target("java/com/facebook/react/devsupport:devsupport"),
         react_native_target("java/com/facebook/react/devsupport:interfaces"),
         react_native_target("java/com/facebook/react/jscexecutor:jscexecutor"),
         react_native_target("java/com/facebook/react/jstasks:jstasks"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("java/com/facebook/react/module/model:model"),
-        react_native_target("java/com/facebook/react/modules/appearance:appearance"),
         react_native_target("java/com/facebook/react/modules/appregistry:appregistry"),
+        react_native_target("java/com/facebook/react/modules/appearance:appearance"),
         react_native_target("java/com/facebook/react/modules/bundleloader:bundleloader"),
         react_native_target("java/com/facebook/react/modules/debug:debug"),
+        react_native_target("java/com/facebook/react/modules/fabric:fabric"),
         react_native_target("java/com/facebook/react/modules/debug:interfaces"),
         react_native_target("java/com/facebook/react/modules/deviceinfo:deviceinfo"),
-        react_native_target("java/com/facebook/react/modules/devtoolssettings:devtoolssettings"),
-        react_native_target("java/com/facebook/react/modules/fabric:fabric"),
         react_native_target("java/com/facebook/react/modules/systeminfo:systeminfo"),
         react_native_target("java/com/facebook/react/modules/toast:toast"),
         react_native_target("java/com/facebook/react/surface:surface"),
+        react_native_target("java/com/facebook/react/views/imagehelper:imagehelper"),
+        react_native_target("java/com/facebook/react/config:config"),
         react_native_target("java/com/facebook/react/turbomodule/core:core"),
         react_native_target("java/com/facebook/react/turbomodule/core/interfaces:interfaces"),
-        react_native_target("java/com/facebook/react/views/imagehelper:imagehelper"),
-        react_native_target("java/com/facebook/react/views/traceupdateoverlay:traceupdateoverlay"),
     ],
     exported_deps = [
         react_native_target("java/com/facebook/react/modules/core:core"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/DebugCorePackage.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/DebugCorePackage.java
index 9a2028d..fe958de 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/DebugCorePackage.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/DebugCorePackage.java
@@ -7,8 +7,6 @@
 
 package com.facebook.react;
 
-import androidx.annotation.Nullable;
-import com.facebook.react.bridge.ModuleSpec;
 import com.facebook.react.bridge.NativeModule;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.devsupport.JSCHeapCapture;
@@ -17,15 +15,8 @@ import com.facebook.react.module.annotations.ReactModuleList;
 import com.facebook.react.module.model.ReactModuleInfo;
 import com.facebook.react.module.model.ReactModuleInfoProvider;
 import com.facebook.react.turbomodule.core.interfaces.TurboModule;
-import com.facebook.react.uimanager.UIManagerModule;
-import com.facebook.react.uimanager.ViewManager;
-import com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlayManager;
-import java.util.ArrayList;
-import java.util.Collection;
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
-import javax.inject.Provider;
 
 /**
  * Package defining core framework modules (e.g. UIManager). It should be used for modules that
@@ -36,15 +27,13 @@ import javax.inject.Provider;
     nativeModules = {
       JSCHeapCapture.class,
     })
-public class DebugCorePackage extends TurboReactPackage implements ViewManagerOnDemandReactPackage {
-  private @Nullable Map<String, ModuleSpec> mViewManagers;
-
+public class DebugCorePackage extends TurboReactPackage {
   public DebugCorePackage() {}
 
   @Override
   public NativeModule getModule(String name, ReactApplicationContext reactContext) {
     switch (name) {
-      case JSCHeapCapture.NAME:
+      case JSCHeapCapture.TAG:
         return new JSCHeapCapture(reactContext);
       default:
         throw new IllegalArgumentException(
@@ -92,45 +81,4 @@ public class DebugCorePackage extends TurboReactPackage implements ViewManagerOn
           "No ReactModuleInfoProvider for DebugCorePackage$$ReactModuleInfoProvider", e);
     }
   }
-
-  private static void appendMap(
-      Map<String, ModuleSpec> map, String name, Provider<? extends NativeModule> provider) {
-    map.put(name, ModuleSpec.viewManagerSpec(provider));
-  }
-
-  /** @return a map of view managers that should be registered with {@link UIManagerModule} */
-  private Map<String, ModuleSpec> getViewManagersMap(final ReactApplicationContext reactContext) {
-    if (mViewManagers == null) {
-      Map<String, ModuleSpec> viewManagers = new HashMap<>();
-      appendMap(
-          viewManagers,
-          TraceUpdateOverlayManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new TraceUpdateOverlayManager();
-            }
-          });
-
-      mViewManagers = viewManagers;
-    }
-    return mViewManagers;
-  }
-
-  @Override
-  public List<ModuleSpec> getViewManagers(ReactApplicationContext reactContext) {
-    return new ArrayList<>(getViewManagersMap(reactContext).values());
-  }
-
-  @Override
-  public Collection<String> getViewManagerNames(ReactApplicationContext reactContext) {
-    return getViewManagersMap(reactContext).keySet();
-  }
-
-  @Override
-  public @Nullable ViewManager createViewManager(
-      ReactApplicationContext reactContext, String viewManagerName) {
-    ModuleSpec spec = getViewManagersMap(reactContext).get(viewManagerName);
-    return spec != null ? (ViewManager) spec.getProvider().get() : null;
-  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/LazyReactPackage.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/LazyReactPackage.java
index 9ec077b..34bbe1c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/LazyReactPackage.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/LazyReactPackage.java
@@ -33,16 +33,44 @@ import java.util.Map;
  */
 public abstract class LazyReactPackage implements ReactPackage {
 
-  @Deprecated
   public static ReactModuleInfoProvider getReactModuleInfoProviderViaReflection(
       LazyReactPackage lazyReactPackage) {
-    return new ReactModuleInfoProvider() {
-      @Override
-      public Map<String, ReactModuleInfo> getReactModuleInfos() {
-        return Collections.emptyMap();
-      }
-    };
+    Class<?> reactModuleInfoProviderClass;
+    try {
+      reactModuleInfoProviderClass =
+          Class.forName(
+              lazyReactPackage.getClass().getCanonicalName() + "$$ReactModuleInfoProvider");
+    } catch (ClassNotFoundException e) {
+      // In OSS case, when the annotation processor does not run, we fall back to non-lazy mode
+      // For this, we simply return an empty moduleMap.
+      // NativeModuleRegistryBuilder will eagerly get all the modules, and get the info from the
+      // modules directly
+      return new ReactModuleInfoProvider() {
+        @Override
+        public Map<String, ReactModuleInfo> getReactModuleInfos() {
+          return Collections.emptyMap();
+        }
+      };
+    }
+
+    if (reactModuleInfoProviderClass == null) {
+      throw new RuntimeException(
+          "ReactModuleInfoProvider class for "
+              + lazyReactPackage.getClass().getCanonicalName()
+              + " not found.");
+    }
+
+    try {
+      return (ReactModuleInfoProvider) reactModuleInfoProviderClass.newInstance();
+    } catch (InstantiationException e) {
+      throw new RuntimeException(
+          "Unable to instantiate ReactModuleInfoProvider for " + lazyReactPackage.getClass(), e);
+    } catch (IllegalAccessException e) {
+      throw new RuntimeException(
+          "Unable to instantiate ReactModuleInfoProvider for " + lazyReactPackage.getClass(), e);
+    }
   }
+
   /**
    * We return an iterable
    *
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java
index 82b3fee..9de132e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java
@@ -34,6 +34,7 @@ public class ReactActivityDelegate {
   private @Nullable PermissionListener mPermissionListener;
   private @Nullable Callback mPermissionsCallback;
   private ReactDelegate mReactDelegate;
+  private boolean mConcurrentRootEnabled;
 
   @Deprecated
   public ReactActivityDelegate(Activity activity, @Nullable String mainComponentName) {
@@ -56,9 +57,9 @@ public class ReactActivityDelegate {
     return null;
   }
 
-  protected @NonNull Bundle composeLaunchOptions() {
+  private @NonNull Bundle composeLaunchOptions() {
     Bundle composedLaunchOptions = getLaunchOptions();
-    if (isFabricEnabled()) {
+    if (isConcurrentRootEnabled()) {
       if (composedLaunchOptions == null) {
         composedLaunchOptions = new Bundle();
       }
@@ -71,10 +72,6 @@ public class ReactActivityDelegate {
     return new ReactRootView(getContext());
   }
 
-  protected ReactRootView createRootView(Bundle initialProps) {
-    return new ReactRootView(getContext());
-  }
-
   /**
    * Get the {@link ReactNativeHost} used by this app. By default, assumes {@link
    * Activity#getApplication()} is an instance of {@link ReactApplication} and calls {@link
@@ -96,13 +93,13 @@ public class ReactActivityDelegate {
 
   protected void onCreate(Bundle savedInstanceState) {
     String mainComponentName = getMainComponentName();
-    final Bundle launchOptions = composeLaunchOptions();
+    Bundle launchOptions = composeLaunchOptions();
     mReactDelegate =
         new ReactDelegate(
             getPlainActivity(), getReactNativeHost(), mainComponentName, launchOptions) {
           @Override
           protected ReactRootView createRootView() {
-            return ReactActivityDelegate.this.createRootView(launchOptions);
+            return ReactActivityDelegate.this.createRootView();
           }
         };
     if (mainComponentName != null) {
@@ -215,12 +212,14 @@ public class ReactActivityDelegate {
   }
 
   /**
-   * Override this method if you wish to selectively toggle Fabric for a specific surface. This will
-   * also control if Concurrent Root (React 18) should be enabled or not.
+   * Override this method to enable Concurrent Root on the surface for this Activity. See:
+   * https://reactjs.org/blog/2022/03/29/react-v18.html
+   *
+   * <p>This requires to be rendering on Fabric (i.e. on the New Architecture).
    *
-   * @return true if Fabric is enabled for this Activity, false otherwise.
+   * @return Wether you want to enable Concurrent Root for this surface or not.
    */
-  protected boolean isFabricEnabled() {
+  protected boolean isConcurrentRootEnabled() {
     return false;
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactDelegate.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactDelegate.java
index 3f6934a..a975b2a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactDelegate.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactDelegate.java
@@ -11,7 +11,6 @@ import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.KeyEvent;
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import com.facebook.infer.annotation.Assertions;
 import com.facebook.react.devsupport.DoubleTapReloadRecognizer;
@@ -34,8 +33,6 @@ public class ReactDelegate {
 
   private ReactNativeHost mReactNativeHost;
 
-  private boolean mFabricEnabled = false;
-
   public ReactDelegate(
       Activity activity,
       ReactNativeHost reactNativeHost,
@@ -48,20 +45,6 @@ public class ReactDelegate {
     mReactNativeHost = reactNativeHost;
   }
 
-  public ReactDelegate(
-      Activity activity,
-      ReactNativeHost reactNativeHost,
-      @Nullable String appKey,
-      @Nullable Bundle launchOptions,
-      boolean fabricEnabled) {
-    mActivity = activity;
-    mMainComponentName = appKey;
-    mLaunchOptions = composeLaunchOptions(launchOptions);
-    mDoubleTapReloadRecognizer = new DoubleTapReloadRecognizer();
-    mReactNativeHost = reactNativeHost;
-    mFabricEnabled = fabricEnabled;
-  }
-
   public void onHostResume() {
     if (getReactNativeHost().hasInstance()) {
       if (mActivity instanceof DefaultHardwareBackBtnHandler) {
@@ -126,9 +109,7 @@ public class ReactDelegate {
   }
 
   protected ReactRootView createRootView() {
-    ReactRootView reactRootView = new ReactRootView(mActivity);
-    reactRootView.setIsFabric(isFabricEnabled());
-    return reactRootView;
+    return new ReactRootView(mActivity);
   }
 
   /**
@@ -163,24 +144,4 @@ public class ReactDelegate {
   public ReactInstanceManager getReactInstanceManager() {
     return getReactNativeHost().getReactInstanceManager();
   }
-
-  /**
-   * Override this method if you wish to selectively toggle Fabric for a specific surface. This will
-   * also control if Concurrent Root (React 18) should be enabled or not.
-   *
-   * @return true if Fabric is enabled for this Activity, false otherwise.
-   */
-  protected boolean isFabricEnabled() {
-    return mFabricEnabled;
-  }
-
-  private @NonNull Bundle composeLaunchOptions(Bundle composedLaunchOptions) {
-    if (isFabricEnabled()) {
-      if (composedLaunchOptions == null) {
-        composedLaunchOptions = new Bundle();
-      }
-      composedLaunchOptions.putBoolean("concurrentRoot", true);
-    }
-    return composedLaunchOptions;
-  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactFragment.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactFragment.java
index f6c7578..99e641f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactFragment.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactFragment.java
@@ -16,7 +16,6 @@ import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 import com.facebook.react.modules.core.PermissionAwareActivity;
@@ -30,7 +29,6 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
 
   protected static final String ARG_COMPONENT_NAME = "arg_component_name";
   protected static final String ARG_LAUNCH_OPTIONS = "arg_launch_options";
-  protected static final String ARG_FABRIC_ENABLED = "arg_fabric_enabled";
 
   private ReactDelegate mReactDelegate;
 
@@ -42,16 +40,13 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
 
   /**
    * @param componentName The name of the react native component
-   * @param fabricEnabled Flag to enable Fabric for ReactFragment
    * @return A new instance of fragment ReactFragment.
    */
-  private static ReactFragment newInstance(
-      String componentName, Bundle launchOptions, Boolean fabricEnabled) {
+  private static ReactFragment newInstance(String componentName, Bundle launchOptions) {
     ReactFragment fragment = new ReactFragment();
     Bundle args = new Bundle();
     args.putString(ARG_COMPONENT_NAME, componentName);
     args.putBundle(ARG_LAUNCH_OPTIONS, launchOptions);
-    args.putBoolean(ARG_FABRIC_ENABLED, fabricEnabled);
     fragment.setArguments(args);
     return fragment;
   }
@@ -62,18 +57,15 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
     super.onCreate(savedInstanceState);
     String mainComponentName = null;
     Bundle launchOptions = null;
-    Boolean fabricEnabled = null;
     if (getArguments() != null) {
       mainComponentName = getArguments().getString(ARG_COMPONENT_NAME);
       launchOptions = getArguments().getBundle(ARG_LAUNCH_OPTIONS);
-      fabricEnabled = getArguments().getBoolean(ARG_FABRIC_ENABLED);
     }
     if (mainComponentName == null) {
       throw new IllegalStateException("Cannot loadApp if component name is null");
     }
     mReactDelegate =
-        new ReactDelegate(
-            getActivity(), getReactNativeHost(), mainComponentName, launchOptions, fabricEnabled);
+        new ReactDelegate(getActivity(), getReactNativeHost(), mainComponentName, launchOptions);
   }
 
   /**
@@ -93,7 +85,7 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
 
   @Override
   public View onCreateView(
-      @NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
     mReactDelegate.loadApp();
     return mReactDelegate.getReactRootView();
   }
@@ -148,7 +140,7 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
 
   @Override
   public void onRequestPermissionsResult(
-      int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
+      int requestCode, String[] permissions, int[] grantResults) {
     super.onRequestPermissionsResult(requestCode, permissions, grantResults);
     if (mPermissionListener != null
         && mPermissionListener.onRequestPermissionsResult(requestCode, permissions, grantResults)) {
@@ -178,14 +170,12 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
   /** Builder class to help instantiate a ReactFragment */
   public static class Builder {
 
-    @Nullable String mComponentName;
-    @Nullable Bundle mLaunchOptions;
-    @Nullable Boolean mFabricEnabled;
+    String mComponentName;
+    Bundle mLaunchOptions;
 
     public Builder() {
       mComponentName = null;
       mLaunchOptions = null;
-      mFabricEnabled = null;
     }
 
     /**
@@ -211,12 +201,7 @@ public class ReactFragment extends Fragment implements PermissionAwareActivity {
     }
 
     public ReactFragment build() {
-      return ReactFragment.newInstance(mComponentName, mLaunchOptions, mFabricEnabled);
-    }
-
-    public Builder setFabricEnabled(boolean fabricEnabled) {
-      mFabricEnabled = fabricEnabled;
-      return this;
+      return ReactFragment.newInstance(mComponentName, mLaunchOptions);
     }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManager.java
index 1df76cc..6e7a9af 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManager.java
@@ -82,7 +82,6 @@ import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.react.devsupport.DevSupportManagerFactory;
 import com.facebook.react.devsupport.ReactInstanceDevHelper;
 import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.devsupport.interfaces.PackagerStatusCallback;
 import com.facebook.react.devsupport.interfaces.RedBoxHandler;
@@ -234,8 +233,7 @@ public class ReactInstanceManager {
       @Nullable JSIModulePackage jsiModulePackage,
       @Nullable Map<String, RequestHandler> customPackagerCommandHandlers,
       @Nullable ReactPackageTurboModuleManagerDelegate.Builder tmmDelegateBuilder,
-      @Nullable SurfaceDelegateFactory surfaceDelegateFactory,
-      @Nullable DevLoadingViewManager devLoadingViewManager) {
+      @Nullable SurfaceDelegateFactory surfaceDelegateFactory) {
     FLog.d(TAG, "ReactInstanceManager.ctor()");
     initializeSoLoaderIfNecessary(applicationContext);
 
@@ -263,8 +261,7 @@ public class ReactInstanceManager {
             devBundleDownloadListener,
             minNumShakes,
             customPackagerCommandHandlers,
-            surfaceDelegateFactory,
-            devLoadingViewManager);
+            surfaceDelegateFactory);
     Systrace.endSection(TRACE_TAG_REACT_JAVA_BRIDGE);
     mBridgeIdleDebugListener = bridgeIdleDebugListener;
     mLifecycleState = initialLifecycleState;
@@ -387,7 +384,7 @@ public class ReactInstanceManager {
     try {
       handleCxxErrorFunc = ReactInstanceManager.class.getMethod("handleCxxError", parameterTypes);
     } catch (NoSuchMethodException e) {
-      FLog.e("ReactInstanceHolder", "Failed to set cxx error handler function", e);
+      FLog.e("ReactInstanceHolder", "Failed to set cxx error hanlder function", e);
     }
     ReactCxxErrorHandler.setHandleErrorFunc(this, handleCxxErrorFunc);
   }
@@ -554,7 +551,9 @@ public class ReactInstanceManager {
   private void toggleElementInspector() {
     ReactContext currentContext = getCurrentReactContext();
     if (currentContext != null && currentContext.hasActiveReactInstance()) {
-      currentContext.emitDeviceEvent("toggleElementInspector");
+      currentContext
+          .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+          .emit("toggleElementInspector", null);
     } else {
       ReactSoftExceptionLogger.logSoftException(
           TAG,
@@ -921,11 +920,10 @@ public class ReactInstanceManager {
       if (mViewManagers == null) {
         synchronized (mPackages) {
           if (mViewManagers == null) {
-            ArrayList<ViewManager> viewManagers = new ArrayList<>();
+            mViewManagers = new ArrayList<>();
             for (ReactPackage reactPackage : mPackages) {
-              viewManagers.addAll(reactPackage.createViewManagers(catalystApplicationContext));
+              mViewManagers.addAll(reactPackage.createViewManagers(catalystApplicationContext));
             }
-            mViewManagers = viewManagers;
             return mViewManagers;
           }
         }
@@ -1360,15 +1358,6 @@ public class ReactInstanceManager {
 
     reactContext.initializeWithInstance(catalystInstance);
 
-    if (ReactFeatureFlags.unstable_useRuntimeSchedulerAlways) {
-      // On Old Architecture, we need to initialize the Native Runtime Scheduler so that
-      // the `nativeRuntimeScheduler` object is registered on JS.
-      // On New Architecture, this is normally triggered by instantiate a TurboModuleManager.
-      // Here we invoke getRuntimeScheduler() to trigger the creation of it regardless of the
-      // architecture so it will always be there.
-      catalystInstance.getRuntimeScheduler();
-    }
-
     if (ReactFeatureFlags.useTurboModules && mTMMDelegateBuilder != null) {
       TurboModuleManagerDelegate tmmDelegate =
           mTMMDelegateBuilder
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java
index 2715b01..68ac1ed 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java
@@ -28,7 +28,6 @@ import com.facebook.react.common.SurfaceDelegateFactory;
 import com.facebook.react.devsupport.DefaultDevSupportManagerFactory;
 import com.facebook.react.devsupport.DevSupportManagerFactory;
 import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.devsupport.interfaces.RedBoxHandler;
 import com.facebook.react.jscexecutor.JSCExecutor;
@@ -68,7 +67,6 @@ public class ReactInstanceManagerBuilder {
   private @Nullable Map<String, RequestHandler> mCustomPackagerCommandHandlers;
   private @Nullable ReactPackageTurboModuleManagerDelegate.Builder mTMMDelegateBuilder;
   private @Nullable SurfaceDelegateFactory mSurfaceDelegateFactory;
-  private @Nullable DevLoadingViewManager mDevLoadingViewManager;
   private JSEngineResolutionAlgorithm jsEngineResolutionAlgorithm = null;
 
   /* package protected */ ReactInstanceManagerBuilder() {}
@@ -218,13 +216,6 @@ public class ReactInstanceManagerBuilder {
     return this;
   }
 
-  /** Sets the Dev Loading View Manager. */
-  public ReactInstanceManagerBuilder setDevLoadingViewManager(
-      @Nullable DevLoadingViewManager devLoadingViewManager) {
-    mDevLoadingViewManager = devLoadingViewManager;
-    return this;
-  }
-
   /**
    * Sets the initial lifecycle state of the host. For example, if the host is already resumed at
    * creation time, we wouldn't expect an onResume call until we get an onPause call.
@@ -346,8 +337,7 @@ public class ReactInstanceManagerBuilder {
         mJSIModulesPackage,
         mCustomPackagerCommandHandlers,
         mTMMDelegateBuilder,
-        mSurfaceDelegateFactory,
-        mDevLoadingViewManager);
+        mSurfaceDelegateFactory);
   }
 
   private JavaScriptExecutorFactory getDefaultJSExecutorFactory(
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactNativeHost.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactNativeHost.java
index 1188086..d030019 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactNativeHost.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactNativeHost.java
@@ -18,7 +18,6 @@ import com.facebook.react.common.LifecycleState;
 import com.facebook.react.common.SurfaceDelegate;
 import com.facebook.react.common.SurfaceDelegateFactory;
 import com.facebook.react.devsupport.DevSupportManagerFactory;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.RedBoxHandler;
 import java.util.List;
 
@@ -72,7 +71,6 @@ public abstract class ReactNativeHost {
             .setJSMainModulePath(getJSMainModuleName())
             .setUseDeveloperSupport(getUseDeveloperSupport())
             .setDevSupportManagerFactory(getDevSupportManagerFactory())
-            .setDevLoadingViewManager(getDevLoadingViewManager())
             .setRequireActivity(getShouldRequireActivity())
             .setSurfaceDelegateFactory(getSurfaceDelegateFactory())
             .setLazyViewManagersEnabled(getLazyViewManagersEnabled())
@@ -151,13 +149,6 @@ public abstract class ReactNativeHost {
     };
   }
 
-  /**
-   * Get the {@link DevLoadingViewManager}. Override this to use a custom dev loading view manager
-   */
-  protected @Nullable DevLoadingViewManager getDevLoadingViewManager() {
-    return null;
-  }
-
   /**
    * Returns the name of the main module. Determines the URL used to fetch the JS bundle from Metro.
    * It is only used when dev support is enabled. This is the first file to be executed once the
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactPackageTurboModuleManagerDelegate.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactPackageTurboModuleManagerDelegate.java
index db59f19..66a0628 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactPackageTurboModuleManagerDelegate.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactPackageTurboModuleManagerDelegate.java
@@ -11,11 +11,8 @@ import androidx.annotation.Nullable;
 import com.facebook.infer.annotation.Assertions;
 import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.react.bridge.CxxModuleWrapper;
-import com.facebook.react.bridge.ModuleSpec;
 import com.facebook.react.bridge.NativeModule;
 import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.config.ReactFeatureFlags;
-import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.module.model.ReactModuleInfo;
 import com.facebook.react.turbomodule.core.TurboModuleManagerDelegate;
 import com.facebook.react.turbomodule.core.interfaces.TurboModule;
@@ -23,118 +20,22 @@ import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import javax.inject.Provider;
 
 public abstract class ReactPackageTurboModuleManagerDelegate extends TurboModuleManagerDelegate {
-  interface ModuleProvider {
-    @Nullable
-    NativeModule getModule(String moduleName);
-  }
-
-  private final List<ModuleProvider> mModuleProviders = new ArrayList<>();
-  private final Map<ModuleProvider, Map<String, ReactModuleInfo>> mPackageModuleInfos =
+  private final List<TurboReactPackage> mPackages = new ArrayList<>();
+  private final Map<TurboReactPackage, Map<String, ReactModuleInfo>> mPackageModuleInfos =
       new HashMap<>();
-
-  private static boolean shouldSupportLegacyPackages() {
-    return ReactFeatureFlags.enableBridgelessArchitecture
-        && ReactFeatureFlags.unstable_useTurboModuleInterop;
-  }
+  private final ReactApplicationContext mReactApplicationContext;
 
   protected ReactPackageTurboModuleManagerDelegate(
       ReactApplicationContext reactApplicationContext, List<ReactPackage> packages) {
     super();
-    final ReactApplicationContext applicationContext = reactApplicationContext;
+    mReactApplicationContext = reactApplicationContext;
     for (ReactPackage reactPackage : packages) {
       if (reactPackage instanceof TurboReactPackage) {
-        final TurboReactPackage turboPkg = (TurboReactPackage) reactPackage;
-        final ModuleProvider moduleProvider =
-            new ModuleProvider() {
-              public NativeModule getModule(String moduleName) {
-                return turboPkg.getModule(moduleName, applicationContext);
-              }
-            };
-        mModuleProviders.add(moduleProvider);
-        mPackageModuleInfos.put(
-            moduleProvider, turboPkg.getReactModuleInfoProvider().getReactModuleInfos());
-        continue;
-      }
-
-      if (shouldSupportLegacyPackages() && reactPackage instanceof LazyReactPackage) {
-        // TODO(T145105887): Output warnings that LazyReactPackage was used
-        final LazyReactPackage lazyPkg = ((LazyReactPackage) reactPackage);
-        final List<ModuleSpec> moduleSpecs = lazyPkg.getNativeModules(reactApplicationContext);
-        final Map<String, Provider<? extends NativeModule>> moduleSpecProviderMap = new HashMap<>();
-        for (final ModuleSpec moduleSpec : moduleSpecs) {
-          moduleSpecProviderMap.put(moduleSpec.getName(), moduleSpec.getProvider());
-        }
-
-        final ModuleProvider moduleProvider =
-            new ModuleProvider() {
-              public NativeModule getModule(String moduleName) {
-                Provider<? extends NativeModule> provider = moduleSpecProviderMap.get(moduleName);
-                return provider != null ? provider.get() : null;
-              }
-            };
-
-        mModuleProviders.add(moduleProvider);
-        mPackageModuleInfos.put(
-            moduleProvider, lazyPkg.getReactModuleInfoProvider().getReactModuleInfos());
-        continue;
-      }
-
-      if (shouldSupportLegacyPackages() && reactPackage instanceof ReactInstancePackage) {
-        // TODO(T145105887): Output error that ReactPackage was used
-
-        continue;
-      }
-
-      if (shouldSupportLegacyPackages()) {
-        // TODO(T145105887): Output warnings that ReactPackage was used
-
-        final List<NativeModule> nativeModules =
-            reactPackage.createNativeModules(reactApplicationContext);
-
-        final Map<String, NativeModule> moduleMap = new HashMap<>();
-        final Map<String, ReactModuleInfo> reactModuleInfoMap = new HashMap<>();
-
-        for (final NativeModule module : nativeModules) {
-          final Class<? extends NativeModule> moduleClass = module.getClass();
-          final @Nullable ReactModule reactModule = moduleClass.getAnnotation(ReactModule.class);
-
-          final String moduleName = reactModule != null ? reactModule.name() : module.getName();
-
-          final ReactModuleInfo moduleInfo =
-              reactModule != null
-                  ? new ReactModuleInfo(
-                      moduleName,
-                      moduleClass.getName(),
-                      reactModule.canOverrideExistingModule(),
-                      true,
-                      reactModule.hasConstants(),
-                      reactModule.isCxxModule(),
-                      TurboModule.class.isAssignableFrom(moduleClass))
-                  : new ReactModuleInfo(
-                      moduleName,
-                      moduleClass.getName(),
-                      module.canOverrideExistingModule(),
-                      true,
-                      true,
-                      CxxModuleWrapper.class.isAssignableFrom(moduleClass),
-                      TurboModule.class.isAssignableFrom(moduleClass));
-
-          reactModuleInfoMap.put(moduleName, moduleInfo);
-          moduleMap.put(moduleName, module);
-        }
-
-        final ModuleProvider moduleProvider =
-            new ModuleProvider() {
-              public NativeModule getModule(String moduleName) {
-                return moduleMap.get(moduleName);
-              }
-            };
-
-        mModuleProviders.add(moduleProvider);
-        mPackageModuleInfos.put(moduleProvider, reactModuleInfoMap);
+        TurboReactPackage pkg = (TurboReactPackage) reactPackage;
+        mPackages.add(pkg);
+        mPackageModuleInfos.put(pkg, pkg.getReactModuleInfoProvider().getReactModuleInfos());
       }
     }
   }
@@ -174,16 +75,16 @@ public abstract class ReactPackageTurboModuleManagerDelegate extends TurboModule
   private TurboModule resolveModule(String moduleName) {
     NativeModule resolvedModule = null;
 
-    for (final ModuleProvider moduleProvider : mModuleProviders) {
+    for (final TurboReactPackage pkg : mPackages) {
       try {
-        final ReactModuleInfo moduleInfo = mPackageModuleInfos.get(moduleProvider).get(moduleName);
+        final ReactModuleInfo moduleInfo = mPackageModuleInfos.get(pkg).get(moduleName);
         if (moduleInfo == null
             || !moduleInfo.isTurboModule()
             || resolvedModule != null && !moduleInfo.canOverrideExistingModule()) {
           continue;
         }
 
-        final NativeModule module = moduleProvider.getModule(moduleName);
+        final NativeModule module = pkg.getModule(moduleName, mReactApplicationContext);
         if (module != null) {
           resolvedModule = module;
         }
@@ -206,8 +107,10 @@ public abstract class ReactPackageTurboModuleManagerDelegate extends TurboModule
   @Override
   public List<String> getEagerInitModuleNames() {
     List<String> moduleNames = new ArrayList<>();
-    for (final ModuleProvider moduleProvider : mModuleProviders) {
-      for (final ReactModuleInfo moduleInfo : mPackageModuleInfos.get(moduleProvider).values()) {
+    for (TurboReactPackage reactPackage : mPackages) {
+      for (ReactModuleInfo moduleInfo :
+          reactPackage.getReactModuleInfoProvider().getReactModuleInfos().values()) {
+
         if (moduleInfo.isTurboModule() && moduleInfo.needsEagerInit()) {
           moduleNames.add(moduleInfo.name());
         }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java
index 8a232ad..1a6abd1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactRootView.java
@@ -52,6 +52,7 @@ import com.facebook.react.bridge.WritableNativeMap;
 import com.facebook.react.common.annotations.VisibleForTesting;
 import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.react.modules.appregistry.AppRegistry;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 import com.facebook.react.modules.deviceinfo.DeviceInfoModule;
 import com.facebook.react.surface.ReactStage;
 import com.facebook.react.uimanager.DisplayMetricsHolder;
@@ -179,7 +180,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
       mWasMeasured = true;
 
       // Check if we were waiting for onMeasure to attach the root view.
-      if (hasActiveReactInstance() && !isViewAttachedToReactInstance()) {
+      if (mReactInstanceManager != null && !mIsAttachedToInstance) {
         attachToReactInstanceManager();
       } else if (measureSpecsUpdated || mLastWidth != width || mLastHeight != height) {
         updateRootLayoutSpecs(true, mWidthMeasureSpec, mHeightMeasureSpec);
@@ -203,7 +204,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
     if (!isDispatcherReady()) {
       return;
     }
-    ReactContext reactContext = getCurrentReactContext();
+    ReactContext reactContext = mReactInstanceManager.getCurrentReactContext();
     UIManager uiManager = UIManagerHelper.getUIManager(reactContext, getUIManagerType());
 
     if (uiManager != null) {
@@ -220,7 +221,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
     if (!isDispatcherReady()) {
       return;
     }
-    ReactContext reactContext = getCurrentReactContext();
+    ReactContext reactContext = mReactInstanceManager.getCurrentReactContext();
     UIManager uiManager = UIManagerHelper.getUIManager(reactContext, getUIManagerType());
 
     if (uiManager != null) {
@@ -233,7 +234,9 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
   }
 
   private boolean isDispatcherReady() {
-    if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+    if (mReactInstanceManager == null
+        || !mIsAttachedToInstance
+        || mReactInstanceManager.getCurrentReactContext() == null) {
       FLog.w(TAG, "Unable to dispatch touch to JS as the catalyst instance has not been attached");
       return false;
     }
@@ -260,31 +263,31 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
     if (shouldDispatchJSTouchEvent(ev)) {
       dispatchJSTouchEvent(ev);
     }
-    dispatchJSPointerEvent(ev, true);
+    dispatchJSPointerEvent(ev);
     return super.onInterceptTouchEvent(ev);
   }
 
+  @Override
+  public boolean onInterceptHoverEvent(MotionEvent ev) {
+    dispatchJSPointerEvent(ev);
+    return super.onInterceptHoverEvent(ev);
+  }
+
   @Override
   public boolean onTouchEvent(MotionEvent ev) {
     if (shouldDispatchJSTouchEvent(ev)) {
       dispatchJSTouchEvent(ev);
     }
-    dispatchJSPointerEvent(ev, false);
+    dispatchJSPointerEvent(ev);
     super.onTouchEvent(ev);
     // In case when there is no children interested in handling touch event, we return true from
     // the root view in order to receive subsequent events related to that gesture
     return true;
   }
 
-  @Override
-  public boolean onInterceptHoverEvent(MotionEvent ev) {
-    dispatchJSPointerEvent(ev, true);
-    return super.onInterceptHoverEvent(ev);
-  }
-
   @Override
   public boolean onHoverEvent(MotionEvent ev) {
-    dispatchJSPointerEvent(ev, false);
+    dispatchJSPointerEvent(ev);
     return super.onHoverEvent(ev);
   }
 
@@ -301,7 +304,9 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
   @Override
   public boolean dispatchKeyEvent(KeyEvent ev) {
-    if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+    if (mReactInstanceManager == null
+        || !mIsAttachedToInstance
+        || mReactInstanceManager.getCurrentReactContext() == null) {
       FLog.w(TAG, "Unable to handle key event as the catalyst instance has not been attached");
       return super.dispatchKeyEvent(ev);
     }
@@ -311,7 +316,9 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
   @Override
   protected void onFocusChanged(boolean gainFocus, int direction, Rect previouslyFocusedRect) {
-    if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+    if (mReactInstanceManager == null
+        || !mIsAttachedToInstance
+        || mReactInstanceManager.getCurrentReactContext() == null) {
       FLog.w(
           TAG,
           "Unable to handle focus changed event as the catalyst instance has not been attached");
@@ -324,7 +331,9 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
   @Override
   public void requestChildFocus(View child, View focused) {
-    if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+    if (mReactInstanceManager == null
+        || !mIsAttachedToInstance
+        || mReactInstanceManager.getCurrentReactContext() == null) {
       FLog.w(
           TAG,
           "Unable to handle child focus changed event as the catalyst instance has not been attached");
@@ -335,8 +344,10 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
     super.requestChildFocus(child, focused);
   }
 
-  protected void dispatchJSPointerEvent(MotionEvent event, boolean isCapture) {
-    if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+  protected void dispatchJSPointerEvent(MotionEvent event) {
+    if (mReactInstanceManager == null
+        || !mIsAttachedToInstance
+        || mReactInstanceManager.getCurrentReactContext() == null) {
       FLog.w(TAG, "Unable to dispatch touch to JS as the catalyst instance has not been attached");
       return;
     }
@@ -347,17 +358,19 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
       FLog.w(TAG, "Unable to dispatch pointer events to JS before the dispatcher is available");
       return;
     }
-    ReactContext reactContext = getCurrentReactContext();
+    ReactContext reactContext = mReactInstanceManager.getCurrentReactContext();
     UIManager uiManager = UIManagerHelper.getUIManager(reactContext, getUIManagerType());
 
     if (uiManager != null) {
       EventDispatcher eventDispatcher = uiManager.getEventDispatcher();
-      mJSPointerDispatcher.handleMotionEvent(event, eventDispatcher, isCapture);
+      mJSPointerDispatcher.handleMotionEvent(event, eventDispatcher);
     }
   }
 
   protected void dispatchJSTouchEvent(MotionEvent event) {
-    if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+    if (mReactInstanceManager == null
+        || !mIsAttachedToInstance
+        || mReactInstanceManager.getCurrentReactContext() == null) {
       FLog.w(TAG, "Unable to dispatch touch to JS as the catalyst instance has not been attached");
       return;
     }
@@ -365,7 +378,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
       FLog.w(TAG, "Unable to dispatch touch to JS before the dispatcher is available");
       return;
     }
-    ReactContext reactContext = getCurrentReactContext();
+    ReactContext reactContext = mReactInstanceManager.getCurrentReactContext();
     UIManager uiManager = UIManagerHelper.getUIManager(reactContext, getUIManagerType());
 
     if (uiManager != null) {
@@ -400,7 +413,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
   @Override
   protected void onAttachedToWindow() {
     super.onAttachedToWindow();
-    if (isViewAttachedToReactInstance()) {
+    if (mIsAttachedToInstance) {
       removeOnGlobalLayoutListener();
       getViewTreeObserver().addOnGlobalLayoutListener(getCustomGlobalLayoutListener());
     }
@@ -409,7 +422,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
   @Override
   protected void onDetachedFromWindow() {
     super.onDetachedFromWindow();
-    if (isViewAttachedToReactInstance()) {
+    if (mIsAttachedToInstance) {
       removeOnGlobalLayoutListener();
     }
   }
@@ -559,7 +572,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
   private void updateRootLayoutSpecs(
       boolean measureSpecsChanged, final int widthMeasureSpec, final int heightMeasureSpec) {
     ReactMarker.logMarker(ReactMarkerConstants.ROOT_VIEW_UPDATE_LAYOUT_SPECS_START);
-    if (!hasActiveReactInstance()) {
+    if (mReactInstanceManager == null) {
       ReactMarker.logMarker(ReactMarkerConstants.ROOT_VIEW_UPDATE_LAYOUT_SPECS_END);
       FLog.w(TAG, "Unable to update root layout specs for uninitialized ReactInstanceManager");
       return;
@@ -573,7 +586,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
       return;
     }
 
-    final ReactContext reactApplicationContext = getCurrentReactContext();
+    final ReactContext reactApplicationContext = mReactInstanceManager.getCurrentReactContext();
 
     if (reactApplicationContext != null) {
       @Nullable
@@ -617,8 +630,8 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
     // to be committed via the Scheduler, which will cause mounting instructions
     // to be queued up and synchronously executed to delete and remove
     // all the views in the hierarchy.
-    if (hasActiveReactInstance()) {
-      final ReactContext reactApplicationContext = getCurrentReactContext();
+    if (mReactInstanceManager != null) {
+      final ReactContext reactApplicationContext = mReactInstanceManager.getCurrentReactContext();
       if (reactApplicationContext != null && isFabric()) {
         @Nullable
         UIManager uiManager =
@@ -717,11 +730,11 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
   public void runApplication() {
     Systrace.beginSection(TRACE_TAG_REACT_JAVA_BRIDGE, "ReactRootView.runApplication");
     try {
-      if (!hasActiveReactInstance() || !isViewAttachedToReactInstance()) {
+      if (mReactInstanceManager == null || !mIsAttachedToInstance) {
         return;
       }
 
-      ReactContext reactContext = getCurrentReactContext();
+      ReactContext reactContext = mReactInstanceManager.getCurrentReactContext();
       if (reactContext == null) {
         return;
       }
@@ -841,12 +854,12 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
   @Override
   public void handleException(final Throwable t) {
-    if (!hasActiveReactContext()) {
+    if (mReactInstanceManager == null || mReactInstanceManager.getCurrentReactContext() == null) {
       throw new RuntimeException(t);
     }
 
     Exception e = new IllegalViewOperationException(t.getMessage(), this, t);
-    getCurrentReactContext().handleException(e);
+    mReactInstanceManager.getCurrentReactContext().handleException(e);
   }
 
   public void setIsFabric(boolean isFabric) {
@@ -864,28 +877,14 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
   }
 
   /* package */ void sendEvent(String eventName, @Nullable WritableMap params) {
-    if (hasActiveReactInstance()) {
-      getCurrentReactContext().emitDeviceEvent(eventName, params);
+    if (mReactInstanceManager != null) {
+      mReactInstanceManager
+          .getCurrentReactContext()
+          .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+          .emit(eventName, params);
     }
   }
 
-  public boolean hasActiveReactInstance() {
-    return mReactInstanceManager != null;
-  }
-
-  public boolean hasActiveReactContext() {
-    return mReactInstanceManager != null && mReactInstanceManager.getCurrentReactContext() != null;
-  }
-
-  @Nullable
-  public ReactContext getCurrentReactContext() {
-    return mReactInstanceManager.getCurrentReactContext();
-  }
-
-  public boolean isViewAttachedToReactInstance() {
-    return mIsAttachedToInstance;
-  }
-
   private class CustomGlobalLayoutListener implements ViewTreeObserver.OnGlobalLayoutListener {
     private final Rect mVisibleViewArea;
     private final int mMinKeyboardHeightDetected;
@@ -902,7 +901,9 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
     @Override
     public void onGlobalLayout() {
-      if (!hasActiveReactContext() || !isViewAttachedToReactInstance()) {
+      if (mReactInstanceManager == null
+          || !mIsAttachedToInstance
+          || mReactInstanceManager.getCurrentReactContext() == null) {
         return;
       }
 
@@ -1069,7 +1070,7 @@ public class ReactRootView extends FrameLayout implements RootView, ReactRoot {
 
     private void emitUpdateDimensionsEvent() {
       DeviceInfoModule deviceInfo =
-          getCurrentReactContext().getNativeModule(DeviceInfoModule.class);
+          mReactInstanceManager.getCurrentReactContext().getNativeModule(DeviceInfoModule.class);
 
       if (deviceInfo != null) {
         deviceInfo.emitUpdateDimensionsEvent();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/AnimationDriver.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/AnimationDriver.java
index fc77dee..cd627d2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/AnimationDriver.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/AnimationDriver.java
@@ -31,7 +31,7 @@ import com.facebook.react.bridge.ReadableMap;
   /**
    * This method will get called when some of the configuration gets updated while the animation is
    * running. In that case animation should restart keeping its internal state to provide a smooth
-   * transition. E.g. in case of a spring animation we want to keep the current value and speed and
+   * transision. E.g. in case of a spring animation we want to keep the current value and speed and
    * start animating with the new properties (different destination or spring settings)
    */
   public void resetConfig(ReadableMap config) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/BUCK
index 9a9a1db..247fccb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/BUCK
@@ -10,22 +10,25 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
-        react_native_target("java/com/facebook/react/config:config"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("java/com/facebook/react/modules/core:core"),
+        react_native_target("java/com/facebook/react/config:config"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
         react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
         react_native_target("java/com/facebook/react/views/view:view"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/InterpolationAnimatedNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/InterpolationAnimatedNode.java
index 1f5c26d..5a738ae 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/InterpolationAnimatedNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/InterpolationAnimatedNode.java
@@ -8,13 +8,11 @@
 package com.facebook.react.animated;
 
 import androidx.annotation.Nullable;
-import androidx.core.graphics.ColorUtils;
 import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.ReadableType;
 import java.util.ArrayList;
-import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -29,10 +27,8 @@ import java.util.regex.Pattern;
   public static final String EXTRAPOLATE_TYPE_CLAMP = "clamp";
   public static final String EXTRAPOLATE_TYPE_EXTEND = "extend";
 
-  private static final Pattern sNumericPattern =
-      Pattern.compile("[+-]?(\\d+\\.?\\d*|\\.\\d+)([eE][+-]?\\d+)?");
-
-  private static final String COLOR_OUTPUT_TYPE = "color";
+  private static final String fpRegex = "[+-]?(\\d+\\.?\\d*|\\.\\d+)([eE][+-]?\\d+)?";
+  private static final Pattern fpPattern = Pattern.compile(fpRegex);
 
   private static double[] fromDoubleArray(ReadableArray ary) {
     double[] res = new double[ary.size()];
@@ -42,44 +38,6 @@ import java.util.regex.Pattern;
     return res;
   }
 
-  private static int[] fromIntArray(ReadableArray ary) {
-    int[] res = new int[ary.size()];
-    for (int i = 0; i < res.length; i++) {
-      res[i] = ary.getInt(i);
-    }
-    return res;
-  }
-
-  private static double[][] fromStringPattern(ReadableArray array) {
-    int size = array.size();
-    double[][] outputRange = new double[size][];
-
-    // Match the first pattern into a List, since we don't know its length yet
-    Matcher m = sNumericPattern.matcher(array.getString(0));
-    List<Double> firstOutputRange = new ArrayList<>();
-    while (m.find()) {
-      firstOutputRange.add(Double.parseDouble(m.group()));
-    }
-    double[] firstOutputRangeArr = new double[firstOutputRange.size()];
-    for (int i = 0; i < firstOutputRange.size(); i++) {
-      firstOutputRangeArr[i] = firstOutputRange.get(i).doubleValue();
-    }
-    outputRange[0] = firstOutputRangeArr;
-
-    for (int i = 1; i < size; i++) {
-      double[] outputArr = new double[firstOutputRangeArr.length];
-
-      int j = 0;
-      m = sNumericPattern.matcher(array.getString(i));
-      while (m.find() && j < firstOutputRangeArr.length) {
-        outputArr[j++] = Double.parseDouble(m.group());
-      }
-      outputRange[i] = outputArr;
-    }
-
-    return outputRange;
-  }
-
   private static double interpolate(
       double value,
       double inputMin,
@@ -152,57 +110,6 @@ import java.util.regex.Pattern;
         extrapolateRight);
   }
 
-  /*package*/ static int interpolateColor(double value, double[] inputRange, int[] outputRange) {
-    int rangeIndex = findRangeIndex(value, inputRange);
-    int outputMin = outputRange[rangeIndex];
-    int outputMax = outputRange[rangeIndex + 1];
-    if (outputMin == outputMax) {
-      return outputMin;
-    }
-
-    double inputMin = inputRange[rangeIndex];
-    double inputMax = inputRange[rangeIndex + 1];
-    if (inputMin == inputMax) {
-      if (value <= inputMin) {
-        return outputMin;
-      }
-      return outputMax;
-    }
-
-    double ratio = (value - inputMin) / (inputMax - inputMin);
-    return ColorUtils.blendARGB(outputMin, outputMax, (float) ratio);
-  }
-
-  /*package*/ static String interpolateString(
-      String pattern,
-      double value,
-      double[] inputRange,
-      double[][] outputRange,
-      String extrapolateLeft,
-      String extrapolateRight) {
-    int rangeIndex = findRangeIndex(value, inputRange);
-    StringBuffer sb = new StringBuffer(pattern.length());
-
-    Matcher m = sNumericPattern.matcher(pattern);
-    int i = 0;
-    while (m.find() && i < outputRange[rangeIndex].length) {
-      double val =
-          interpolate(
-              value,
-              inputRange[rangeIndex],
-              inputRange[rangeIndex + 1],
-              outputRange[rangeIndex][i],
-              outputRange[rangeIndex + 1][i],
-              extrapolateLeft,
-              extrapolateRight);
-      int intVal = (int) val;
-      m.appendReplacement(sb, intVal != val ? Double.toString(val) : Integer.toString(intVal));
-      i++;
-    }
-    m.appendTail(sb);
-    return sb.toString();
-  }
-
   private static int findRangeIndex(double value, double[] ranges) {
     int index;
     for (index = 1; index < ranges.length - 1; index++) {
@@ -213,39 +120,70 @@ import java.util.regex.Pattern;
     return index - 1;
   }
 
-  private enum OutputType {
-    Number,
-    Color,
-    String,
-  }
-
   private final double mInputRange[];
-  private final Object mOutputRange;
-  private final OutputType mOutputType;
-  private final @Nullable String mPattern;
+  private final double mOutputRange[];
+  private String mPattern;
+  private double mOutputs[][];
+  private final boolean mHasStringOutput;
+  private final Matcher mSOutputMatcher;
   private final String mExtrapolateLeft;
   private final String mExtrapolateRight;
   private @Nullable ValueAnimatedNode mParent;
-  private Object mObjectValue;
+  private boolean mShouldRound;
+  private int mNumVals;
 
   public InterpolationAnimatedNode(ReadableMap config) {
     mInputRange = fromDoubleArray(config.getArray("inputRange"));
     ReadableArray output = config.getArray("outputRange");
-
-    if (COLOR_OUTPUT_TYPE.equals(config.getString("outputType"))) {
-      mOutputType = OutputType.Color;
-      mOutputRange = fromIntArray(output);
-      mPattern = null;
-    } else if (output.getType(0) == ReadableType.String) {
-      mOutputType = OutputType.String;
-      mOutputRange = fromStringPattern(output);
+    mHasStringOutput = output.getType(0) == ReadableType.String;
+    if (mHasStringOutput) {
+      /*
+       * Supports string shapes by extracting numbers so new values can be computed,
+       * and recombines those values into new strings of the same shape.  Supports
+       * things like:
+       *
+       *   rgba(123, 42, 99, 0.36) // colors
+       *   -45deg                  // values with units
+       */
+      int size = output.size();
+      mOutputRange = new double[size];
       mPattern = output.getString(0);
+      mShouldRound = mPattern.startsWith("rgb");
+      mSOutputMatcher = fpPattern.matcher(mPattern);
+      ArrayList<ArrayList<Double>> mOutputRanges = new ArrayList<>();
+      for (int i = 0; i < size; i++) {
+        String val = output.getString(i);
+        Matcher m = fpPattern.matcher(val);
+        ArrayList<Double> outputRange = new ArrayList<>();
+        mOutputRanges.add(outputRange);
+        while (m.find()) {
+          Double parsed = Double.parseDouble(m.group());
+          outputRange.add(parsed);
+        }
+        mOutputRange[i] = outputRange.get(0);
+      }
+
+      // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']
+      // ->
+      // [
+      //   [0, 50],
+      //   [100, 150],
+      //   [200, 250],
+      //   [0, 0.5],
+      // ]
+      mNumVals = mOutputRanges.get(0).size();
+      mOutputs = new double[mNumVals][];
+      for (int j = 0; j < mNumVals; j++) {
+        double[] arr = new double[size];
+        mOutputs[j] = arr;
+        for (int i = 0; i < size; i++) {
+          arr[i] = mOutputRanges.get(i).get(j);
+        }
+      }
     } else {
-      mOutputType = OutputType.Number;
       mOutputRange = fromDoubleArray(output);
-      mPattern = null;
+      mSOutputMatcher = null;
     }
-
     mExtrapolateLeft = config.getString("extrapolateLeft");
     mExtrapolateRight = config.getString("extrapolateRight");
   }
@@ -272,39 +210,46 @@ import java.util.regex.Pattern;
   @Override
   public void update() {
     if (mParent == null) {
-      // The graph is in the middle of being created, just skip this unattached node.
+      // The graph is in the middle of being created, just skip this
+      // unattached node.
       return;
     }
-
     double value = mParent.getValue();
-    switch (mOutputType) {
-      case Number:
-        mValue =
-            interpolate(
-                value, mInputRange, (double[]) mOutputRange, mExtrapolateLeft, mExtrapolateRight);
-        break;
-      case Color:
-        mObjectValue = Integer.valueOf(interpolateColor(value, mInputRange, (int[]) mOutputRange));
-        break;
-      case String:
-        mObjectValue =
-            interpolateString(
-                mPattern,
-                value,
-                mInputRange,
-                (double[][]) mOutputRange,
-                mExtrapolateLeft,
-                mExtrapolateRight);
-        break;
+    mValue = interpolate(value, mInputRange, mOutputRange, mExtrapolateLeft, mExtrapolateRight);
+    if (mHasStringOutput) {
+      // 'rgba(0, 100, 200, 0)'
+      // ->
+      // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'
+      if (mNumVals > 1) {
+        StringBuffer sb = new StringBuffer(mPattern.length());
+        int i = 0;
+        mSOutputMatcher.reset();
+        while (mSOutputMatcher.find()) {
+          double val =
+              interpolate(value, mInputRange, mOutputs[i++], mExtrapolateLeft, mExtrapolateRight);
+          if (mShouldRound) {
+            // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont*
+            // want to
+            // round the opacity (4th column).
+            boolean isAlpha = i == 4;
+            int rounded = (int) Math.round(isAlpha ? val * 1000 : val);
+            String num =
+                isAlpha ? Double.toString((double) rounded / 1000) : Integer.toString(rounded);
+            mSOutputMatcher.appendReplacement(sb, num);
+          } else {
+            int intVal = (int) val;
+            String num = intVal != val ? Double.toString(val) : Integer.toString(intVal);
+            mSOutputMatcher.appendReplacement(sb, num);
+          }
+        }
+        mSOutputMatcher.appendTail(sb);
+        mAnimatedObject = sb.toString();
+      } else {
+        mAnimatedObject = mSOutputMatcher.replaceFirst(String.valueOf(mValue));
+      }
     }
   }
 
-  @Override
-  public Object getAnimatedObject() {
-    return mObjectValue;
-  }
-
-  @Override
   public String prettyPrint() {
     return "InterpolationAnimatedNode[" + mTag + "] super: " + super.prettyPrint();
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedModule.java
index 76749aa..0f52b73 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedModule.java
@@ -26,6 +26,7 @@ import com.facebook.react.bridge.UIManagerListener;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.common.annotations.VisibleForTesting;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 import com.facebook.react.modules.core.ReactChoreographer;
 import com.facebook.react.uimanager.GuardedFrameCallback;
 import com.facebook.react.uimanager.NativeViewHierarchyManager;
@@ -84,10 +85,11 @@ import java.util.concurrent.atomic.AtomicReference;
  * This isolates us from the problems that may be caused by concurrent updates of animated graph
  * while UI thread is "executing" the animation loop.
  */
-@ReactModule(name = NativeAnimatedModuleSpec.NAME)
+@ReactModule(name = NativeAnimatedModule.NAME)
 public class NativeAnimatedModule extends NativeAnimatedModuleSpec
     implements LifecycleEventListener, UIManagerListener {
 
+  public static final String NAME = "NativeAnimatedModule";
   public static final boolean ANIMATED_MODULE_DEBUG = false;
 
   // For `queueAndExecuteBatchedOperations`
@@ -264,9 +266,11 @@ public class NativeAnimatedModule extends NativeAnimatedModuleSpec
 
   @Override
   public void initialize() {
-    super.initialize();
+    ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
 
-    getReactApplicationContext().addLifecycleEventListener(this);
+    if (reactApplicationContext != null) {
+      reactApplicationContext.addLifecycleEventListener(this);
+    }
   }
 
   @Override
@@ -295,16 +299,6 @@ public class NativeAnimatedModule extends NativeAnimatedModuleSpec
     mCurrentFrameNumber++;
   }
 
-  @Override
-  public void willMountItems(UIManager uiManager) {
-    // noop
-  }
-
-  @Override
-  public void didMountItems(UIManager uiManager) {
-    // noop
-  }
-
   // For FabricUIManager only
   @Override
   @UiThread
@@ -383,6 +377,11 @@ public class NativeAnimatedModule extends NativeAnimatedModuleSpec
     clearFrameCallback();
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   /**
    * Returns a {@link NativeAnimatedNodesManager}, either the existing instance or a new one. Will
    * return null if and only if the {@link ReactApplicationContext} is also null.
@@ -575,7 +574,9 @@ public class NativeAnimatedModule extends NativeAnimatedModuleSpec
             ReactApplicationContext reactApplicationContext =
                 getReactApplicationContextIfActiveOrWarn();
             if (reactApplicationContext != null) {
-              reactApplicationContext.emitDeviceEvent("onAnimatedValueUpdate", onAnimatedValueData);
+              reactApplicationContext
+                  .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+                  .emit("onAnimatedValueUpdate", onAnimatedValueData);
             }
           }
         };
@@ -986,9 +987,10 @@ public class NativeAnimatedModule extends NativeAnimatedModuleSpec
 
   @Override
   public void invalidate() {
-    super.invalidate();
-
-    getReactApplicationContext().removeLifecycleEventListener(this);
+    ReactApplicationContext context = getReactApplicationContextIfActiveOrWarn();
+    if (context != null) {
+      context.removeLifecycleEventListener(this);
+    }
   }
 
   /**
@@ -1097,8 +1099,9 @@ public class NativeAnimatedModule extends NativeAnimatedModuleSpec
                           ReactApplicationContext reactApplicationContext =
                               getReactApplicationContextIfActiveOrWarn();
                           if (reactApplicationContext != null) {
-                            reactApplicationContext.emitDeviceEvent(
-                                "onAnimatedValueUpdate", onAnimatedValueData);
+                            reactApplicationContext
+                                .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+                                .emit("onAnimatedValueUpdate", onAnimatedValueData);
                           }
                         }
                       };
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedNodesManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedNodesManager.java
index 0e91b3a..bb626be 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedNodesManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/NativeAnimatedNodesManager.java
@@ -23,6 +23,7 @@ import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.UIManager;
 import com.facebook.react.bridge.UiThreadUtil;
 import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 import com.facebook.react.uimanager.UIManagerHelper;
 import com.facebook.react.uimanager.common.UIManagerType;
 import com.facebook.react.uimanager.events.Event;
@@ -307,8 +308,9 @@ public class NativeAnimatedNodesManager implements EventDispatcherListener {
           WritableMap params = Arguments.createMap();
           params.putInt("animationId", animation.mId);
           params.putBoolean("finished", false);
-          mReactApplicationContext.emitDeviceEvent(
-              "onNativeAnimatedModuleAnimationFinished", params);
+          mReactApplicationContext
+              .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+              .emit("onNativeAnimatedModuleAnimationFinished", params);
         }
         mActiveAnimations.removeAt(i);
         i--;
@@ -337,8 +339,9 @@ public class NativeAnimatedNodesManager implements EventDispatcherListener {
           WritableMap params = Arguments.createMap();
           params.putInt("animationId", animation.mId);
           params.putBoolean("finished", false);
-          mReactApplicationContext.emitDeviceEvent(
-              "onNativeAnimatedModuleAnimationFinished", params);
+          mReactApplicationContext
+              .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+              .emit("onNativeAnimatedModuleAnimationFinished", params);
         }
         mActiveAnimations.removeAt(i);
         return;
@@ -471,7 +474,9 @@ public class NativeAnimatedNodesManager implements EventDispatcherListener {
     WritableMap params = Arguments.createMap();
     params.putInt("tag", tag);
     params.putDouble("value", value);
-    mReactApplicationContext.emitDeviceEvent("onNativeAnimatedModuleGetValue", params);
+    mReactApplicationContext
+        .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+        .emit("onNativeAnimatedModuleGetValue", params);
   }
 
   @UiThread
@@ -648,8 +653,12 @@ public class NativeAnimatedNodesManager implements EventDispatcherListener {
             WritableMap params = Arguments.createMap();
             params.putInt("animationId", animation.mId);
             params.putBoolean("finished", true);
-            mReactApplicationContext.emitDeviceEvent(
-                "onNativeAnimatedModuleAnimationFinished", params);
+            DeviceEventManagerModule.RCTDeviceEventEmitter eventEmitter =
+                mReactApplicationContext.getJSModule(
+                    DeviceEventManagerModule.RCTDeviceEventEmitter.class);
+            if (eventEmitter != null) {
+              eventEmitter.emit("onNativeAnimatedModuleAnimationFinished", params);
+            }
           }
           mActiveAnimations.removeAt(i);
         }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/PropsAnimatedNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/PropsAnimatedNode.java
index b70f62c..aacf6bf 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/PropsAnimatedNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/PropsAnimatedNode.java
@@ -102,9 +102,7 @@ import java.util.Map;
         ((StyleAnimatedNode) node).collectViewUpdates(mPropMap);
       } else if (node instanceof ValueAnimatedNode) {
         Object animatedObject = ((ValueAnimatedNode) node).getAnimatedObject();
-        if (animatedObject instanceof Integer) {
-          mPropMap.putInt(entry.getKey(), (Integer) animatedObject);
-        } else if (animatedObject instanceof String) {
+        if (animatedObject instanceof String) {
           mPropMap.putString(entry.getKey(), (String) animatedObject);
         } else {
           mPropMap.putDouble(entry.getKey(), ((ValueAnimatedNode) node).getValue());
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/StyleAnimatedNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/StyleAnimatedNode.java
index dbb377a..68ef6a4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/StyleAnimatedNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/StyleAnimatedNode.java
@@ -42,14 +42,7 @@ import java.util.Map;
       } else if (node instanceof TransformAnimatedNode) {
         ((TransformAnimatedNode) node).collectViewUpdates(propsMap);
       } else if (node instanceof ValueAnimatedNode) {
-        Object animatedObject = ((ValueAnimatedNode) node).getAnimatedObject();
-        if (animatedObject instanceof Integer) {
-          propsMap.putInt(entry.getKey(), (Integer) animatedObject);
-        } else if (animatedObject instanceof String) {
-          propsMap.putString(entry.getKey(), (String) animatedObject);
-        } else {
-          propsMap.putDouble(entry.getKey(), ((ValueAnimatedNode) node).getValue());
-        }
+        propsMap.putDouble(entry.getKey(), ((ValueAnimatedNode) node).getValue());
       } else if (node instanceof ColorAnimatedNode) {
         propsMap.putInt(entry.getKey(), ((ColorAnimatedNode) node).getColor());
       } else {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/ValueAnimatedNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/ValueAnimatedNode.java
index 35b7b99..ddc3df6 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/ValueAnimatedNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/animated/ValueAnimatedNode.java
@@ -15,6 +15,7 @@ import com.facebook.react.bridge.ReadableMap;
  * library.
  */
 /*package*/ class ValueAnimatedNode extends AnimatedNode {
+  /*package*/ Object mAnimatedObject = null;
   /*package*/ double mValue = Double.NaN;
   /*package*/ double mOffset = 0;
   private @Nullable AnimatedNodeValueListener mValueListener;
@@ -36,7 +37,7 @@ import com.facebook.react.bridge.ReadableMap;
   }
 
   public Object getAnimatedObject() {
-    return null;
+    return mAnimatedObject;
   }
 
   public void flattenOffset() {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/BUCK
index 8399927..b5dcea6 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/BUCK
@@ -1,4 +1,4 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "IS_OSS_BUILD", "YOGA_TARGET", "react_native_dep", "react_native_target", "react_native_tests_target", "rn_android_library")
+load("//tools/build_defs/oss:rn_defs.bzl", "IS_OSS_BUILD", "react_native_dep", "react_native_target", "react_native_tests_target", "rn_android_library")
 
 INTERFACES = [
     "Dynamic.java",
@@ -26,6 +26,13 @@ rn_android_library(
     ],
     language = "JAVA",
     proguard_config = "reactnative.pro",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     required_for_source_only_abi = True,
     tests = [
         react_native_tests_target("java/com/facebook/react/bridge:bridge"),
@@ -34,26 +41,21 @@ rn_android_library(
         "PUBLIC",
     ],
     deps = [
-        YOGA_TARGET,
         react_native_dep("java/com/facebook/debug/debugoverlay/model:model"),
         react_native_dep("java/com/facebook/systrace:systrace"),
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/debug/tags:tags"),
+        react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/config:config"),
-        react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("java/com/facebook/react/module/model:model"),
-        react_native_target("java/com/facebook/react/turbomodule/core:callinvokerholder"),
-        react_native_target("java/com/facebook/react/turbomodule/core/interfaces:interfaces"),
         react_native_target("java/com/facebook/react/uimanager/common:common"),
+        react_native_target("java/com/facebook/react/module/annotations:annotations"),
+        react_native_target("java/com/facebook/react/turbomodule/core/interfaces:interfaces"),
+        react_native_target("java/com/facebook/react/turbomodule/core:callinvokerholder"),
     ] + ([react_native_target("jni/react/jni:jni")] if not IS_OSS_BUILD else []),
     exported_deps = [
         react_native_dep("libraries/fbjni:java"),
@@ -72,15 +74,18 @@ rn_android_library(
     ],
     language = "JAVA",
     proguard_config = "reactnative.pro",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
     ],
     deps = [
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/debug/tags:tags"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/CatalystInstance.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/CatalystInstance.java
index c0b4517..06ffc04 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/CatalystInstance.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/CatalystInstance.java
@@ -17,7 +17,7 @@ import java.util.List;
 
 /**
  * A higher level API on top of the asynchronous JSC bridge. This provides an environment allowing
- * the invocation of JavaScript methods and lets a set of Java APIs be invocable from JavaScript as
+ * the invocation of JavaScript methods and lets a set of Java APIs be invokable from JavaScript as
  * well.
  */
 @DoNotStrip
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ColorPropConverter.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ColorPropConverter.java
index afc690d..af4cfd3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ColorPropConverter.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ColorPropConverter.java
@@ -12,8 +12,6 @@ import android.content.res.Resources;
 import android.util.TypedValue;
 import androidx.annotation.Nullable;
 import androidx.core.content.res.ResourcesCompat;
-import com.facebook.common.logging.FLog;
-import com.facebook.react.common.ReactConstants;
 
 public class ColorPropConverter {
   private static final String JSON_KEY = "resource_paths";
@@ -63,15 +61,6 @@ public class ColorPropConverter {
         "ColorValue: the value must be a number or Object.");
   }
 
-  public static Integer getColor(Object value, Context context, int defaultInt) {
-    try {
-      return getColor(value, context);
-    } catch (JSApplicationCausedNativeException e) {
-      FLog.w(ReactConstants.TAG, e, "Error converting ColorValue");
-      return defaultInt;
-    }
-  }
-
   public static Integer resolveResourcePath(Context context, @Nullable String resourcePath) {
     if (resourcePath == null || resourcePath.isEmpty()) {
       return null;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/DimensionPropConverter.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/DimensionPropConverter.java
deleted file mode 100644
index 306c0ba..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/DimensionPropConverter.java
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.bridge;
-
-import androidx.annotation.Nullable;
-import com.facebook.yoga.YogaUnit;
-import com.facebook.yoga.YogaValue;
-
-public class DimensionPropConverter {
-
-  @Nullable
-  public static YogaValue getDimension(@Nullable Object value) {
-    if (value == null) {
-      return null;
-    }
-
-    if (value instanceof Double) {
-      return new YogaValue(((Double) value).floatValue(), YogaUnit.POINT);
-    }
-
-    if (value instanceof String) {
-      return YogaValue.parse((String) value);
-    }
-
-    throw new JSApplicationCausedNativeException(
-        "DimensionValue: the value must be a number or string.");
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/JSONArguments.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/JSONArguments.java
deleted file mode 100644
index 6e336ba..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/JSONArguments.java
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.bridge;
-
-import java.util.Iterator;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-public class JSONArguments {
-  /**
-   * Parse JSONObject to ReadableMap
-   *
-   * @param obj The JSONObject to be parsed
-   * @return readableMap from the JSONObject
-   */
-  public static ReadableMap fromJSONObject(JSONObject obj) throws JSONException {
-    WritableMap result = Arguments.createMap();
-    Iterator<String> keys = obj.keys();
-
-    while (keys.hasNext()) {
-      String key = keys.next();
-      Object val = obj.get(key);
-      if (val instanceof JSONObject) {
-        result.putMap(key, fromJSONObject((JSONObject) val));
-      } else if (val instanceof JSONArray) {
-        result.putArray(key, fromJSONArray((JSONArray) val));
-      } else if (val instanceof String) {
-        result.putString(key, (String) val);
-      } else if (val instanceof Boolean) {
-        result.putBoolean(key, (Boolean) val);
-      } else if (val instanceof Integer) {
-        result.putInt(key, (Integer) val);
-      } else if (val instanceof Double) {
-        result.putDouble(key, (Double) val);
-      } else if (val instanceof Long) {
-        result.putInt(key, ((Long) val).intValue());
-      } else if (obj.isNull(key)) {
-        result.putNull(key);
-      } else {
-        // Unknown value type. Will throw
-        throw new JSONException("Unexpected value when parsing JSON object. key: " + key);
-      }
-    }
-
-    return result;
-  }
-
-  /**
-   * Parse String of JSON object to ReadableMap
-   *
-   * @param objStr The String JSON object to be parsed
-   * @return readableMap from the JSONArray
-   */
-  public static ReadableMap fromJSONObjectString(String objStr) throws JSONException {
-    return fromJSONObject(new JSONObject(objStr));
-  }
-
-  /**
-   * Parse JSONArray to ReadableArray
-   *
-   * @param arr The JSONArray to be parsed
-   * @return readableArray from the JSONArray
-   */
-  public static ReadableArray fromJSONArray(JSONArray arr) throws JSONException {
-    WritableArray result = Arguments.createArray();
-
-    for (int i = 0; i < arr.length(); i++) {
-      Object val = arr.get(i);
-
-      if (val instanceof JSONObject) {
-        result.pushMap(fromJSONObject((JSONObject) val));
-      } else if (val instanceof JSONArray) {
-        result.pushArray(fromJSONArray((JSONArray) val));
-      } else if (val instanceof String) {
-        result.pushString((String) val);
-      } else if (val instanceof Boolean) {
-        result.pushBoolean((Boolean) val);
-      } else if (val instanceof Integer) {
-        result.pushInt((Integer) val);
-      } else if (val instanceof Double) {
-        result.pushDouble((Double) val);
-      } else if (val instanceof Long) {
-        result.pushInt(((Long) val).intValue());
-      } else if (arr.isNull(i)) {
-        result.pushNull();
-      } else {
-        // Unknown value type. Will throw
-        throw new JSONException("Unexpected value when parsing JSON array. index: " + i);
-      }
-    }
-
-    return result;
-  }
-
-  /**
-   * Parse String of JSON array to ReadableArray
-   *
-   * @param arrStr The String JSON array to be parsed
-   * @return readableArray from the JSONArray
-   */
-  public static ReadableArray fromJSONArrayString(String arrStr) throws JSONException {
-    return fromJSONArray(new JSONArray(arrStr));
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ModuleHolder.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ModuleHolder.java
index 2c83464..3fef9e8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ModuleHolder.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ModuleHolder.java
@@ -46,7 +46,7 @@ public class ModuleHolder {
   private final ReactModuleInfo mReactModuleInfo;
 
   private @Nullable Provider<? extends NativeModule> mProvider;
-  // Outside of the constructor, these should only be checked or set when synchronized on this
+  // Outside of the constructur, these should only be checked or set when synchronized on this
   private @Nullable @GuardedBy("this") NativeModule mModule;
 
   // These are used to communicate phases of creation and initialization across threads
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/NativeModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/NativeModule.java
index 89e528d..618f020 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/NativeModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/NativeModule.java
@@ -7,8 +7,8 @@
 
 package com.facebook.react.bridge;
 
+import androidx.annotation.NonNull;
 import com.facebook.proguard.annotations.DoNotStrip;
-import javax.annotation.Nonnull;
 
 /**
  * A native module whose API can be provided to JS catalyst instances. {@link NativeModule}s whose
@@ -29,7 +29,7 @@ public interface NativeModule {
    * @return the name of this module. This will be the name used to {@code require()} this module
    *     from javascript.
    */
-  @Nonnull
+  @NonNull
   String getName();
 
   /**
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContext.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContext.java
index a46f55c..77ee248 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContext.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContext.java
@@ -15,13 +15,10 @@ import android.content.ContextWrapper;
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.LayoutInflater;
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import com.facebook.common.logging.FLog;
 import com.facebook.infer.annotation.Assertions;
 import com.facebook.infer.annotation.ThreadConfined;
-import com.facebook.proguard.annotations.DoNotStrip;
-import com.facebook.react.bridge.interop.InteropModuleRegistry;
 import com.facebook.react.bridge.queue.MessageQueueThread;
 import com.facebook.react.bridge.queue.ReactQueueConfiguration;
 import com.facebook.react.common.LifecycleState;
@@ -35,10 +32,6 @@ import java.util.concurrent.CopyOnWriteArraySet;
  * CatalystInstance}
  */
 public class ReactContext extends ContextWrapper {
-  @DoNotStrip
-  public interface RCTDeviceEventEmitter extends JavaScriptModule {
-    void emit(@NonNull String eventName, @Nullable Object data);
-  }
 
   private static final String TAG = "ReactContext";
   private static final String EARLY_JS_ACCESS_EXCEPTION_MESSAGE =
@@ -70,8 +63,6 @@ public class ReactContext extends ContextWrapper {
   private @Nullable JSExceptionHandler mJSExceptionHandler;
   private @Nullable JSExceptionHandler mExceptionHandlerWrapper;
   private @Nullable WeakReference<Activity> mCurrentActivity;
-
-  private @Nullable InteropModuleRegistry mInteropModuleRegistry;
   private boolean mIsInitialized = false;
 
   public ReactContext(Context base) {
@@ -96,7 +87,6 @@ public class ReactContext extends ContextWrapper {
 
     ReactQueueConfiguration queueConfig = catalystInstance.getReactQueueConfiguration();
     initializeMessageQueueThreads(queueConfig);
-    initializeInteropModules();
   }
 
   /** Initialize message queue threads using a ReactQueueConfiguration. */
@@ -124,14 +114,6 @@ public class ReactContext extends ContextWrapper {
     mIsInitialized = true;
   }
 
-  protected void initializeInteropModules() {
-    mInteropModuleRegistry = new InteropModuleRegistry();
-  }
-
-  protected void initializeInteropModules(ReactContext reactContext) {
-    mInteropModuleRegistry = reactContext.mInteropModuleRegistry;
-  }
-
   public void resetPerfStats() {
     if (mNativeModulesMessageQueueThread != null) {
       mNativeModulesMessageQueueThread.resetPerfStats();
@@ -175,10 +157,6 @@ public class ReactContext extends ContextWrapper {
       }
       throw new IllegalStateException(EARLY_JS_ACCESS_EXCEPTION_MESSAGE);
     }
-    if (mInteropModuleRegistry != null
-        && mInteropModuleRegistry.shouldReturnInteropModule(jsInterface)) {
-      return mInteropModuleRegistry.getInteropModule(jsInterface);
-    }
     return mCatalystInstance.getJSModule(jsInterface);
   }
 
@@ -205,21 +183,6 @@ public class ReactContext extends ContextWrapper {
     return mCatalystInstance.getNativeModule(nativeModuleInterface);
   }
 
-  /**
-   * Calls RCTDeviceEventEmitter.emit to JavaScript, with given event name and an optional list of
-   * arguments.
-   */
-  public void emitDeviceEvent(String eventName, @Nullable Object args) {
-    RCTDeviceEventEmitter eventEmitter = getJSModule(RCTDeviceEventEmitter.class);
-    if (eventEmitter != null) {
-      eventEmitter.emit(eventName, args);
-    }
-  }
-
-  public void emitDeviceEvent(String eventName) {
-    emitDeviceEvent(eventName, null);
-  }
-
   public CatalystInstance getCatalystInstance() {
     return Assertions.assertNotNull(mCatalystInstance);
   }
@@ -459,7 +422,7 @@ public class ReactContext extends ContextWrapper {
           "Unable to handle Exception - catalystInstanceVariableExists: "
               + catalystInstanceVariableExists
               + " - isCatalystInstanceAlive: "
-              + isCatalystInstanceAlive
+              + !isCatalystInstanceAlive
               + " - hasExceptionHandler: "
               + hasExceptionHandler,
           e);
@@ -481,10 +444,6 @@ public class ReactContext extends ContextWrapper {
     return mExceptionHandlerWrapper;
   }
 
-  public JSExceptionHandler getJSExceptionHandler() {
-    return mJSExceptionHandler;
-  }
-
   public boolean hasCurrentActivity() {
     return mCurrentActivity != null && mCurrentActivity.get() != null;
   }
@@ -527,10 +486,7 @@ public class ReactContext extends ContextWrapper {
    * synchronized(jsContext) { nativeThingNeedingJsContext(jsContext.get()); }
    */
   public JavaScriptContextHolder getJavaScriptContextHolder() {
-    if (mCatalystInstance != null) {
-      return mCatalystInstance.getJavaScriptContextHolder();
-    }
-    return null;
+    return mCatalystInstance.getJavaScriptContextHolder();
   }
 
   public @Nullable JSIModule getJSIModule(JSIModuleType moduleType) {
@@ -562,17 +518,4 @@ public class ReactContext extends ContextWrapper {
     Assertions.assertNotNull(mCatalystInstance).registerSegment(segmentId, path);
     Assertions.assertNotNull(callback).invoke();
   }
-
-  /**
-   * Register a {@link JavaScriptModule} within the Interop Layer so that can be consumed whenever
-   * getJSModule is invoked.
-   *
-   * <p>This method is internal to React Native and should not be used externally.
-   */
-  public <T extends JavaScriptModule> void internal_registerInteropModule(
-      Class<T> interopModuleInterface, Object interopModule) {
-    if (mInteropModuleRegistry != null) {
-      mInteropModuleRegistry.registerInteropModule(interopModuleInterface, interopModule);
-    }
-  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContextBaseJavaModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContextBaseJavaModule.java
index 6aacb48..2cb9fe9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContextBaseJavaModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactContextBaseJavaModule.java
@@ -14,7 +14,6 @@ import androidx.annotation.Nullable;
 import com.facebook.common.logging.FLog;
 import com.facebook.infer.annotation.Assertions;
 import com.facebook.infer.annotation.ThreadConfined;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.common.build.ReactBuildConfig;
 
 /**
@@ -60,10 +59,11 @@ public abstract class ReactContextBaseJavaModule extends BaseJavaModule {
     // We want to collect data about how often this happens, but SoftExceptions will cause a crash
     // in debug mode, which isn't usually desirable.
     String msg = "Catalyst Instance has already disappeared: requested by " + this.getName();
+    String tag = "ReactContextBaseJavaModule";
     if (ReactBuildConfig.DEBUG) {
-      FLog.w(ReactConstants.TAG, msg);
+      FLog.w(tag, msg);
     } else {
-      ReactSoftExceptionLogger.logSoftException(ReactConstants.TAG, new RuntimeException(msg));
+      ReactSoftExceptionLogger.logSoftException(tag, new RuntimeException(msg));
     }
     return null;
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactMarker.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactMarker.java
index 83ecd9d..ac07aca 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactMarker.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReactMarker.java
@@ -42,9 +42,6 @@ public class ReactMarker {
   private static final List<FabricMarkerListener> sFabricMarkerListeners =
       new CopyOnWriteArrayList<>();
 
-  // The android app start time that to be set by the corresponding app
-  private static long sAppStartTime;
-
   @DoNotStrip
   public static void addListener(MarkerListener listener) {
     if (!sListeners.contains(listener)) {
@@ -141,14 +138,4 @@ public class ReactMarker {
       listener.logMarker(name, tag, instanceKey);
     }
   }
-
-  @DoNotStrip
-  public static void setAppStartTime(long appStartTime) {
-    sAppStartTime = appStartTime;
-  }
-
-  @DoNotStrip
-  public static double getAppStartTime() {
-    return (double) sAppStartTime;
-  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReadableNativeMap.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReadableNativeMap.java
index 0ade85c..3dae1f0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReadableNativeMap.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/ReadableNativeMap.java
@@ -40,12 +40,11 @@ public class ReadableNativeMap extends NativeMap implements ReadableMap {
   }
 
   private void ensureKeysAreImported() {
-    if (mKeys != null) {
-      return;
-    }
     synchronized (this) {
-      mKeys = Assertions.assertNotNull(importKeys());
-      mJniCallCounter++;
+      if (mKeys == null) {
+        mKeys = Assertions.assertNotNull(importKeys());
+        mJniCallCounter++;
+      }
     }
   }
 
@@ -53,8 +52,8 @@ public class ReadableNativeMap extends NativeMap implements ReadableMap {
     if (mLocalMap != null) {
       return mLocalMap;
     }
+    ensureKeysAreImported();
     synchronized (this) {
-      ensureKeysAreImported();
       if (mLocalMap == null) {
         Object[] values = Assertions.assertNotNull(importValues());
         mJniCallCounter++;
@@ -76,8 +75,9 @@ public class ReadableNativeMap extends NativeMap implements ReadableMap {
     if (mLocalTypeMap != null) {
       return mLocalTypeMap;
     }
+    ensureKeysAreImported();
     synchronized (this) {
-      ensureKeysAreImported();
+      // check that no other thread has already updated
       if (mLocalTypeMap == null) {
         Object[] types = Assertions.assertNotNull(importTypes());
         mJniCallCounter++;
@@ -190,12 +190,10 @@ public class ReadableNativeMap extends NativeMap implements ReadableMap {
 
   @Override
   public @NonNull Iterator<Map.Entry<String, Object>> getEntryIterator() {
+    ensureKeysAreImported();
+    final String[] iteratorKeys = mKeys;
     synchronized (this) {
-      ensureKeysAreImported();
-
-      final String[] iteratorKeys = mKeys;
       final Object[] iteratorValues = Assertions.assertNotNull(importValues());
-      mJniCallCounter++;
 
       return new Iterator<Map.Entry<String, Object>>() {
         int currentIndex = 0;
@@ -290,4 +288,22 @@ public class ReadableNativeMap extends NativeMap implements ReadableMap {
     }
     return hashMap;
   }
+
+  private static class ReadableNativeMapKeySetIterator implements ReadableMapKeySetIterator {
+    private final Iterator<String> mIterator;
+
+    public ReadableNativeMapKeySetIterator(ReadableNativeMap readableNativeMap) {
+      mIterator = readableNativeMap.getLocalMap().keySet().iterator();
+    }
+
+    @Override
+    public boolean hasNextKey() {
+      return mIterator.hasNext();
+    }
+
+    @Override
+    public String nextKey() {
+      return mIterator.next();
+    }
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManager.java
index f3c3ede..caee586 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManager.java
@@ -14,6 +14,7 @@ import androidx.annotation.AnyThread;
 import androidx.annotation.Nullable;
 import androidx.annotation.UiThread;
 import com.facebook.infer.annotation.ThreadConfined;
+import java.util.List;
 
 public interface UIManager extends JSIModule, PerformanceCounter {
 
@@ -152,4 +153,15 @@ public interface UIManager extends JSIModule, PerformanceCounter {
   @Deprecated
   @Nullable
   String resolveCustomDirectEventName(@Nullable String eventName);
+
+  /**
+   * Helper method to pre-initialize view managers. When using Native ViewConfigs this method will
+   * also pre-compute the constants for a view manager. The purpose is to ensure that we don't block
+   * for getting the constants for view managers during initial rendering of a surface.
+   *
+   * @deprecated this method will be removed in the future
+   * @param viewManagerNames {@link List <String>} names of ViewManagers
+   */
+  @Deprecated
+  void preInitializeViewManagers(List<String> viewManagerNames);
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManagerListener.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManagerListener.java
index 505999b..984bcf1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManagerListener.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/UIManagerListener.java
@@ -12,33 +12,10 @@ public interface UIManagerListener {
   /**
    * Called right before view updates are dispatched at the end of a batch. This is useful if a
    * module needs to add UIBlocks to the queue before it is flushed.
-   *
-   * <p>This is called by Paper only.
    */
   void willDispatchViewUpdates(UIManager uiManager);
-  /**
-   * Called on UIThread right before view updates are executed.
-   *
-   * <p>This is called by Fabric only.
-   */
-  void willMountItems(UIManager uiManager);
-  /**
-   * Called on UIThread right after view updates are executed.
-   *
-   * <p>This is called by Fabric only.
-   */
-  void didMountItems(UIManager uiManager);
-  /**
-   * Called on UIThread right after view updates are dispatched for a frame. Note that this will be
-   * called for every frame even if there are no updates.
-   *
-   * <p>This is called by Fabric only.
-   */
+  /* Called right after view updates are dispatched for a frame. */
   void didDispatchMountItems(UIManager uiManager);
-  /**
-   * Called right after scheduleMountItems is called in Fabric, after a new tree is committed.
-   *
-   * <p>This is called by Fabric only.
-   */
+  /* Called right after scheduleMountItems is called in Fabric, after a new tree is committed. */
   void didScheduleMountItems(UIManager uiManager);
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/interop/InteropModuleRegistry.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/interop/InteropModuleRegistry.java
deleted file mode 100644
index f47199e..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/bridge/interop/InteropModuleRegistry.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.bridge.interop;
-
-import androidx.annotation.Nullable;
-import com.facebook.react.bridge.JavaScriptModule;
-import com.facebook.react.config.ReactFeatureFlags;
-import java.util.HashMap;
-
-/**
- * A utility class that takes care of returning {@link JavaScriptModule} which are used for the
- * Fabric Interop Layer. This allows us to override the returned classes once the user is invoking
- * `ReactContext.getJsModule()`.
- *
- * <p>Currently we only support a `RCTEventEmitter` re-implementation, being `InteropEventEmitter`
- * but this class can support other re-implementation in the future.
- */
-public class InteropModuleRegistry {
-
-  @SuppressWarnings("rawtypes")
-  private final HashMap<Class, Object> supportedModules;
-
-  public InteropModuleRegistry() {
-    this.supportedModules = new HashMap<>();
-  }
-
-  public <T extends JavaScriptModule> boolean shouldReturnInteropModule(Class<T> requestedModule) {
-    return checkReactFeatureFlagsConditions() && supportedModules.containsKey(requestedModule);
-  }
-
-  @Nullable
-  public <T extends JavaScriptModule> T getInteropModule(Class<T> requestedModule) {
-    if (checkReactFeatureFlagsConditions()) {
-      //noinspection unchecked
-      return (T) supportedModules.get(requestedModule);
-    } else {
-      return null;
-    }
-  }
-
-  public <T extends JavaScriptModule> void registerInteropModule(
-      Class<T> interopModuleInterface, Object interopModule) {
-    if (checkReactFeatureFlagsConditions()) {
-      supportedModules.put(interopModuleInterface, interopModule);
-    }
-  }
-
-  private boolean checkReactFeatureFlagsConditions() {
-    return ReactFeatureFlags.enableFabricRenderer && ReactFeatureFlags.unstable_useFabricInterop;
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/BUCK
index f3fc61e..77d911b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/BUCK
@@ -16,6 +16,13 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
@@ -23,10 +30,6 @@ rn_android_library(
     deps = [
         ":build_config",
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
     ],
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/JavascriptException.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/JavascriptException.java
index b3945ee..d1aaca0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/JavascriptException.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/JavascriptException.java
@@ -7,14 +7,12 @@
 
 package com.facebook.react.common;
 
-import com.facebook.proguard.annotations.DoNotStrip;
 import javax.annotation.Nullable;
 
 /**
  * A JS exception that was propagated to native. In debug mode, these exceptions are normally shown
  * to developers in a redbox.
  */
-@DoNotStrip
 public class JavascriptException extends RuntimeException
     implements HasJavascriptExceptionMetadata {
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/BUCK
index 590e127..21e704c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/BUCK
@@ -11,6 +11,7 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "KOTLIN",
+    provided_deps = [],
     pure_kotlin = False,
     required_for_source_only_abi = True,
     visibility = [
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/MapBuffer.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/MapBuffer.kt
index c9f8789..481dd40 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/MapBuffer.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/MapBuffer.kt
@@ -21,7 +21,7 @@ package com.facebook.react.common.mapbuffer
  * Limitations:
  * - Keys are usually sized as 2 bytes, with each buffer supporting up to 65536 entries as a result.
  * - O(log(N)) random key access for native buffers due to selected structure. Faster access can be
- *   achieved by retrieving [MapBuffer.Entry] with [entryAt] on known offsets.
+ * achieved by retrieving [MapBuffer.Entry] with [entryAt] on known offsets.
  */
 interface MapBuffer : Iterable<MapBuffer.Entry> {
   companion object {
@@ -46,14 +46,12 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Number of elements inserted into current MapBuffer.
-   *
    * @return number of elements in the [MapBuffer]
    */
   val count: Int
 
   /**
    * Checks whether entry for given key exists in MapBuffer.
-   *
    * @param key key to lookup the entry
    * @return whether entry for the given key exists in the MapBuffer.
    */
@@ -62,7 +60,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
   /**
    * Provides offset of the key to use for [entryAt], for cases when offset is not statically known
    * but can be cached.
-   *
    * @param key key to lookup offset for
    * @return offset for the given key to be used for entry access, -1 if key wasn't found.
    */
@@ -70,16 +67,14 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Provides parsed access to a MapBuffer without additional lookups for provided offset.
-   *
    * @param offset offset of entry in the MapBuffer structure. Can be looked up for known keys with
-   *   [getKeyOffset].
+   * [getKeyOffset].
    * @return parsed entry for structured access for given offset
    */
   fun entryAt(offset: Int): MapBuffer.Entry
 
   /**
    * Provides parsed [DataType] annotation associated with the given key.
-   *
    * @param key key to lookup type for
    * @return data type of the given key.
    * @throws IllegalArgumentException if the key doesn't exist
@@ -88,7 +83,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Provides parsed [Boolean] value if the entry for given key exists with [DataType.BOOL] type
-   *
    * @param key key to lookup [Boolean] value for
    * @return value associated with the requested key
    * @throws IllegalArgumentException if the key doesn't exist
@@ -98,7 +92,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Provides parsed [Int] value if the entry for given key exists with [DataType.INT] type
-   *
    * @param key key to lookup [Int] value for
    * @return value associated with the requested key
    * @throws IllegalArgumentException if the key doesn't exist
@@ -108,7 +101,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Provides parsed [Double] value if the entry for given key exists with [DataType.DOUBLE] type
-   *
    * @param key key to lookup [Double] value for
    * @return value associated with the requested key
    * @throws IllegalArgumentException if the key doesn't exist
@@ -118,7 +110,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Provides parsed [String] value if the entry for given key exists with [DataType.STRING] type
-   *
    * @param key key to lookup [String] value for
    * @return value associated with the requested key
    * @throws IllegalArgumentException if the key doesn't exist
@@ -128,7 +119,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
   /**
    * Provides parsed [MapBuffer] value if the entry for given key exists with [DataType.MAP] type
-   *
    * @param key key to lookup [MapBuffer] value for
    * @return value associated with the requested key
    * @throws IllegalArgumentException if the key doesn't exist
@@ -139,7 +129,6 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
   /**
    * Provides parsed [List<MapBuffer>] value if the entry for given key exists with [DataType.MAP]
    * type
-   *
    * @param key key to lookup [List<MapBuffer>] value for
    * @return value associated with the requested key
    * @throws IllegalArgumentException if the key doesn't exist
@@ -160,35 +149,30 @@ interface MapBuffer : Iterable<MapBuffer.Entry> {
 
     /**
      * Entry value represented as [Boolean]
-     *
      * @throws IllegalStateException if the data type doesn't match [DataType.BOOL]
      */
     val booleanValue: Boolean
 
     /**
      * Entry value represented as [Int]
-     *
      * @throws IllegalStateException if the data type doesn't match [DataType.INT]
      */
     val intValue: Int
 
     /**
      * Entry value represented as [Double]
-     *
      * @throws IllegalStateException if the data type doesn't match [DataType.DOUBLE]
      */
     val doubleValue: Double
 
     /**
      * Entry value represented as [String]
-     *
      * @throws IllegalStateException if the data type doesn't match [DataType.STRING]
      */
     val stringValue: String
 
     /**
      * Entry value represented as [MapBuffer]
-     *
      * @throws IllegalStateException if the data type doesn't match [DataType.MAP]
      */
     val mapBufferValue: MapBuffer
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/ReadableMapBuffer.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/ReadableMapBuffer.kt
index ccfc730..744a9ee 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/ReadableMapBuffer.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/ReadableMapBuffer.kt
@@ -66,7 +66,7 @@ class ReadableMapBuffer : MapBuffer {
   /**
    * @param key Key to search for
    * @return the "bucket index" for a key or -1 if not found. It uses a binary search algorithm
-   *   (log(n))
+   * (log(n))
    */
   private fun getBucketIndexForKey(intKey: Int): Int {
     if (intKey !in KEY_RANGE) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/WritableMapBuffer.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/WritableMapBuffer.kt
index 8a6a7a9..bb27c26 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/WritableMapBuffer.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/common/mapbuffer/WritableMapBuffer.kt
@@ -30,7 +30,6 @@ class WritableMapBuffer : MapBuffer {
 
   /**
    * Adds a boolean value for given key to the MapBuffer.
-   *
    * @param key entry key
    * @param value entry value
    * @throws IllegalArgumentException if key is out of [UShort] range
@@ -39,7 +38,6 @@ class WritableMapBuffer : MapBuffer {
 
   /**
    * Adds an int value for given key to the MapBuffer.
-   *
    * @param key entry key
    * @param value entry value
    * @throws IllegalArgumentException if key is out of [UShort] range
@@ -48,7 +46,6 @@ class WritableMapBuffer : MapBuffer {
 
   /**
    * Adds a double value for given key to the MapBuffer.
-   *
    * @param key entry key
    * @param value entry value
    * @throws IllegalArgumentException if key is out of [UShort] range
@@ -57,7 +54,6 @@ class WritableMapBuffer : MapBuffer {
 
   /**
    * Adds a string value for given key to the MapBuffer.
-   *
    * @param key entry key
    * @param value entry value
    * @throws IllegalArgumentException if key is out of [UShort] range
@@ -66,7 +62,6 @@ class WritableMapBuffer : MapBuffer {
 
   /**
    * Adds a [MapBuffer] value for given key to the current MapBuffer.
-   *
    * @param key entry key
    * @param value entry value
    * @throws IllegalArgumentException if key is out of [UShort] range
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/config/ReactFeatureFlags.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/config/ReactFeatureFlags.java
index eb0d76f..a4cf989 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/config/ReactFeatureFlags.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/config/ReactFeatureFlags.java
@@ -25,30 +25,12 @@ public class ReactFeatureFlags {
    */
   public static volatile boolean useTurboModules = false;
 
-  /** In Bridgeless mode, should legacy NativeModules use the TurboModule system? */
-  public static volatile boolean unstable_useTurboModuleInterop = false;
-
   /**
    * Should this application use the new (Fabric) Renderer? If yes, all rendering in this app will
    * use Fabric instead of the legacy renderer.
    */
   public static volatile boolean enableFabricRenderer = false;
 
-  /**
-   * Should this application enable the Fabric Interop Layer for Android? If yes, the application
-   * will behave so that it can accept non-Fabric components and render them on Fabric. This toggle
-   * is controlling extra logic such as custom event dispatching that are needed for the Fabric
-   * Interop Layer to work correctly.
-   */
-  public static volatile boolean unstable_useFabricInterop = false;
-
-  /**
-   * Should this application always use the Native RuntimeScheduler? If yes, we'll be instantiating
-   * it over all the architectures (both Old and New). This is intentionally set to true as we want
-   * to use it more as a kill-switch to turn off this feature to potentially debug issues.
-   */
-  public static volatile boolean unstable_useRuntimeSchedulerAlways = true;
-
   /**
    * Feature flag to enable the new bridgeless architecture. Note: Enabling this will force enable
    * the following flags: `useTurboModules` & `enableFabricRenderer`.
@@ -60,9 +42,6 @@ public class ReactFeatureFlags {
    */
   public static volatile boolean enableBridgelessArchitectureSoftExceptions = false;
 
-  /** Does the bridgeless architecture use the new create/reload/destroy routines */
-  public static volatile boolean enableBridgelessArchitectureNewCreateReloadDestroy = false;
-
   /**
    * After TurboModules and Fabric are enabled, we need to ensure that the legacy NativeModule isn't
    * isn't used. So, turn this flag on to trigger warnings whenever the legacy NativeModule system
@@ -73,6 +52,26 @@ public class ReactFeatureFlags {
   /** Should we dispatch TurboModule methods with promise returns to the NativeModules thread? */
   public static volatile boolean enableTurboModulePromiseAsyncDispatch = false;
 
+  /**
+   * Experiment:
+   *
+   * <p>Bridge and Bridgeless mode can run concurrently. This means that there can be two
+   * TurboModule systems alive at the same time.
+   *
+   * <p>The TurboModule system stores all JS callbacks in a global LongLivedObjectCollection. This
+   * collection is cleared when the JS VM is torn down. Implication: Tearing down the bridge JSVM
+   * invalidates the bridgeless JSVM's callbacks, and vice versa.
+   *
+   * <p>useGlobalCallbackCleanupScopeUsingRetainJSCallback => Use a retainJSCallbacks lambda to
+   * store jsi::Functions into the global LongLivedObjectCollection
+   *
+   * <p>useTurboModuleManagerCallbackCleanupScope => Use a retainJSCallbacks labmda to store
+   * jsi::Functions into a LongLivedObjectCollection owned by the TurboModuleManager
+   */
+  public static boolean useGlobalCallbackCleanupScopeUsingRetainJSCallback = false;
+
+  public static boolean useTurboModuleManagerCallbackCleanupScope = false;
+
   /** This feature flag enables logs for Fabric */
   public static boolean enableFabricLogs = false;
 
@@ -85,14 +84,14 @@ public class ReactFeatureFlags {
   /** Enables or disables calculation of Transformed Frames */
   public static boolean calculateTransformedFramesEnabled = false;
 
+  /** Feature Flag to use overflowInset values provided by Yoga */
+  public static boolean useOverflowInset = false;
+
   public static boolean dispatchPointerEvents = false;
 
   /** Feature Flag to enable the pending event queue in fabric before mounting views */
   public static boolean enableFabricPendingEventQueue = false;
 
-  /** Feature Flag to enable caching mechanism of text measurement at shadow node level */
-  public static boolean enableTextMeasureCachePerShadowNode = false;
-
   /**
    * Feature flag that controls how turbo modules are exposed to JS
    *
@@ -122,27 +121,6 @@ public class ReactFeatureFlags {
   /** Temporary flag to allow execution of mount items up to 15ms earlier than normal. */
   public static boolean enableEarlyScheduledMountItemExecution = false;
 
-  /**
-   * Allow closing the small gap that appears between paths when drawing a rounded View with a
-   * border.
-   */
-  public static boolean enableCloseVisibleGapBetweenPaths = true;
-
-  /**
-   * Allow fix in layout animation to drop delete...create mutations which could cause missing view
-   * state in Fabric SurfaceMountingManager.
-   */
-  public static boolean reduceDeleteCreateMutationLayoutAnimation = true;
-
-  /**
-   * Allow fix to drop delete...create mutations which could cause missing view state in Fabric
-   * SurfaceMountingManager.
-   */
-  public static boolean reduceDeleteCreateMutation = false;
-
-  /**
-   * Use JSI NativeState API to store references to native objects rather than the more expensive
-   * HostObject pattern
-   */
-  public static boolean useNativeState = false;
+  // TODO (T136375139): Remove this once finish testing
+  public static boolean enableAtomicRegisterSegment = false;
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt
index 73cb1e0..28ee848 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultNewArchitectureEntryPoint.kt
@@ -27,46 +27,23 @@ object DefaultNewArchitectureEntryPoint {
   fun load(
       turboModulesEnabled: Boolean = true,
       fabricEnabled: Boolean = true,
+      concurrentReactEnabled: Boolean = true,
       dynamicLibraryName: String = "appmodules",
   ) {
     ReactFeatureFlags.useTurboModules = turboModulesEnabled
     ReactFeatureFlags.enableFabricRenderer = fabricEnabled
-    ReactFeatureFlags.unstable_useFabricInterop = fabricEnabled
 
-    this.privateFabricEnabled = fabricEnabled
-    this.privateTurboModulesEnabled = turboModulesEnabled
-    this.privateConcurrentReactEnabled = fabricEnabled
+    this.fabricEnabled = fabricEnabled
+    this.turboModulesEnabled = turboModulesEnabled
+    this.concurrentReactEnabled = concurrentReactEnabled
 
     SoLoader.loadLibrary("react_newarchdefaults")
     SoLoader.loadLibrary(dynamicLibraryName)
   }
 
-  @Deprecated(
-      message =
-          "Calling DefaultNewArchitectureEntryPoint.load() with different fabricEnabled and concurrentReactEnabled is deprecated. Please use a single flag for both Fabric and Concurrent React",
-      replaceWith = ReplaceWith("load(turboModulesEnabled, fabricEnabled, dynamicLibraryName)"),
-      level = DeprecationLevel.WARNING)
-  fun load(
-      turboModulesEnabled: Boolean = true,
-      fabricEnabled: Boolean = true,
-      @Suppress("UNUSED_PARAMETER") concurrentReactEnabled: Boolean = true,
-      dynamicLibraryName: String = "appmodules",
-  ) {
-    load(turboModulesEnabled, fabricEnabled, dynamicLibraryName)
-  }
+  @JvmStatic var fabricEnabled: Boolean = false
 
-  private var privateFabricEnabled: Boolean = false
-  @JvmStatic
-  val fabricEnabled: Boolean
-    get() = privateFabricEnabled
+  @JvmStatic var turboModulesEnabled: Boolean = false
 
-  private var privateTurboModulesEnabled: Boolean = false
-  @JvmStatic
-  val turboModulesEnabled: Boolean
-    get() = privateTurboModulesEnabled
-
-  private var privateConcurrentReactEnabled: Boolean = false
-  @JvmStatic
-  val concurrentReactEnabled: Boolean
-    get() = privateConcurrentReactEnabled
+  @JvmStatic var concurrentReactEnabled: Boolean = false
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultReactActivityDelegate.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultReactActivityDelegate.kt
index a73565f..7189aa6 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultReactActivityDelegate.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultReactActivityDelegate.kt
@@ -7,7 +7,6 @@
 
 package com.facebook.react.defaults
 
-import android.os.Bundle
 import com.facebook.react.ReactActivity
 import com.facebook.react.ReactActivityDelegate
 import com.facebook.react.ReactRootView
@@ -16,35 +15,32 @@ import com.facebook.react.ReactRootView
  * A utility class that allows you to simplify the setup of a [ReactActivityDelegate] for new apps
  * in Open Source.
  *
- * Specifically, with this class you can simply control if Fabric is enabled for an Activity using
- * the boolean flag in the constructor.
+ * Specifically, with this class you can simply control if Fabric and Concurrent Root are enabled
+ * for an Activity using the boolean flags in the constructor.
  *
  * @param fabricEnabled Whether Fabric should be enabled for the RootView of this Activity.
+ * @param concurrentRootEnabled Whether ConcurrentRoot (aka React 18) should be enabled for the
+ * RootView of this Activity.
  */
 open class DefaultReactActivityDelegate(
     activity: ReactActivity,
     mainComponentName: String,
     private val fabricEnabled: Boolean = false,
+    private val concurrentRootEnabled: Boolean = false
 ) : ReactActivityDelegate(activity, mainComponentName) {
 
-  @Deprecated(
-      message =
-          "Creating DefaultReactActivityDelegate with both fabricEnabled and concurrentReactEnabled is deprecated. Please pass only one boolean value that will be used for both flags",
-      level = DeprecationLevel.WARNING,
-      replaceWith =
-          ReplaceWith("DefaultReactActivityDelegate(activity, mainComponentName, fabricEnabled)"))
-  constructor(
-      activity: ReactActivity,
-      mainComponentName: String,
-      fabricEnabled: Boolean,
-      @Suppress("UNUSED_PARAMETER") concurrentReactEnabled: Boolean,
-  ) : this(activity, mainComponentName, fabricEnabled)
-
-  override fun isFabricEnabled(): Boolean = fabricEnabled
+  /**
+   * Override this method to enable Concurrent Root on the surface for this Activity. See:
+   * https://reactjs.org/blog/2022/03/29/react-v18.html
+   *
+   * This requires to be rendering on Fabric (i.e. on the New Architecture).
+   *
+   * @return Whether you want to enable Concurrent Root for this surface or not.
+   */
+  override fun isConcurrentRootEnabled(): Boolean {
+    return concurrentRootEnabled
+  }
 
   override fun createRootView(): ReactRootView =
       ReactRootView(context).apply { setIsFabric(fabricEnabled) }
-
-  override fun createRootView(bundle: Bundle?): ReactRootView =
-      ReactRootView(context).apply { setIsFabric(fabricEnabled) }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BUCK
index 716332a..a00fc84 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BUCK
@@ -9,23 +9,28 @@ rn_android_library(
     ],
     language = "JAVA",
     manifest = "AndroidManifest.xml",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_dep("third-party/java/okhttp:okhttp3"),
         react_native_dep("third-party/java/okio:okio"),
         react_native_target("java/com/facebook/debug/holder:holder"),
+        react_native_target("java/com/facebook/react/uimanager:uimanager"),
         react_native_target("java/com/facebook/debug/tags:tags"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
+        react_native_target("java/com/facebook/react/util:util"),
         react_native_target("java/com/facebook/react/common/network:network"),
         react_native_target("java/com/facebook/react/devsupport:interfaces"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
@@ -34,8 +39,6 @@ rn_android_library(
         react_native_target("java/com/facebook/react/modules/debug:interfaces"),
         react_native_target("java/com/facebook/react/modules/systeminfo:systeminfo"),
         react_native_target("java/com/facebook/react/packagerconnection:packagerconnection"),
-        react_native_target("java/com/facebook/react/uimanager:uimanager"),
-        react_native_target("java/com/facebook/react/util:util"),
         react_native_target("res:devsupport"),
     ],
     exported_deps = [
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BridgeDevSupportManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BridgeDevSupportManager.java
index 4d7110c..205de05 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BridgeDevSupportManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/BridgeDevSupportManager.java
@@ -25,7 +25,6 @@ import com.facebook.react.common.ReactConstants;
 import com.facebook.react.common.SurfaceDelegateFactory;
 import com.facebook.react.common.futures.SimpleSettableFuture;
 import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.DevOptionHandler;
 import com.facebook.react.devsupport.interfaces.DevSplitBundleCallback;
 import com.facebook.react.devsupport.interfaces.RedBoxHandler;
@@ -65,8 +64,6 @@ import java.util.concurrent.TimeoutException;
  */
 public final class BridgeDevSupportManager extends DevSupportManagerBase {
   private boolean mIsSamplingProfilerEnabled = false;
-  private ReactInstanceDevHelper mReactInstanceManagerHelper;
-  private @Nullable DevLoadingViewManager mDevLoadingViewManager;
 
   public BridgeDevSupportManager(
       Context applicationContext,
@@ -77,8 +74,7 @@ public final class BridgeDevSupportManager extends DevSupportManagerBase {
       @Nullable DevBundleDownloadListener devBundleDownloadListener,
       int minNumShakes,
       @Nullable Map<String, RequestHandler> customPackagerCommandHandlers,
-      @Nullable SurfaceDelegateFactory surfaceDelegateFactory,
-      @Nullable DevLoadingViewManager devLoadingViewManager) {
+      @Nullable SurfaceDelegateFactory surfaceDelegateFactory) {
     super(
         applicationContext,
         reactInstanceManagerHelper,
@@ -88,11 +84,7 @@ public final class BridgeDevSupportManager extends DevSupportManagerBase {
         devBundleDownloadListener,
         minNumShakes,
         customPackagerCommandHandlers,
-        surfaceDelegateFactory,
-        devLoadingViewManager);
-
-    mReactInstanceManagerHelper = reactInstanceManagerHelper;
-    mDevLoadingViewManager = devLoadingViewManager;
+        surfaceDelegateFactory);
 
     if (getDevSettings().isStartSamplingProfilerOnInit()) {
       // Only start the profiler. If its already running, there is an error
@@ -133,14 +125,6 @@ public final class BridgeDevSupportManager extends DevSupportManagerBase {
     }
   }
 
-  public DevLoadingViewManager getDevLoadingViewManager() {
-    return mDevLoadingViewManager;
-  }
-
-  public ReactInstanceDevHelper getReactInstanceManagerHelper() {
-    return mReactInstanceManagerHelper;
-  }
-
   @Override
   protected String getUniqueTag() {
     return "Bridge";
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevSupportManagerFactory.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevSupportManagerFactory.java
index 0a9a233..9786253 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevSupportManagerFactory.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevSupportManagerFactory.java
@@ -11,7 +11,6 @@ import android.content.Context;
 import androidx.annotation.Nullable;
 import com.facebook.react.common.SurfaceDelegateFactory;
 import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.devsupport.interfaces.RedBoxHandler;
 import com.facebook.react.packagerconnection.RequestHandler;
@@ -29,8 +28,6 @@ public class DefaultDevSupportManagerFactory implements DevSupportManagerFactory
   private static final String DEVSUPPORT_IMPL_PACKAGE = "com.facebook.react.devsupport";
   private static final String DEVSUPPORT_IMPL_CLASS = "BridgeDevSupportManager";
 
-  /** @deprecated in favor of the customisable create for DevSupportManagerFactory */
-  @Deprecated
   public DevSupportManager create(
       Context applicationContext,
       ReactInstanceDevHelper reactInstanceDevHelper,
@@ -47,7 +44,6 @@ public class DefaultDevSupportManagerFactory implements DevSupportManagerFactory
         null,
         minNumShakes,
         null,
-        null,
         null);
   }
 
@@ -61,15 +57,10 @@ public class DefaultDevSupportManagerFactory implements DevSupportManagerFactory
       @Nullable DevBundleDownloadListener devBundleDownloadListener,
       int minNumShakes,
       @Nullable Map<String, RequestHandler> customPackagerCommandHandlers,
-      @Nullable SurfaceDelegateFactory surfaceDelegateFactory,
-      @Nullable DevLoadingViewManager devLoadingViewManager) {
+      @Nullable SurfaceDelegateFactory surfaceDelegateFactory) {
     if (!enableOnCreate) {
       return new DisabledDevSupportManager();
     }
-    // Developer support is enabled, we now must choose whether to return a DevSupportManager,
-    // or a more lean profiling-only PerftestDevSupportManager. We make the choice by first
-    // trying to return the full support DevSupportManager and if it fails, then just
-    // return PerftestDevSupportManager.
     try {
       // ProGuard is surprisingly smart in this case and will keep a class if it detects a call to
       // Class.forName() with a static string. So instead we generate a quasi-dynamic string to
@@ -90,8 +81,7 @@ public class DefaultDevSupportManagerFactory implements DevSupportManagerFactory
               DevBundleDownloadListener.class,
               int.class,
               Map.class,
-              SurfaceDelegateFactory.class,
-              DevLoadingViewManager.class);
+              SurfaceDelegateFactory.class);
       return (DevSupportManager)
           constructor.newInstance(
               applicationContext,
@@ -102,10 +92,12 @@ public class DefaultDevSupportManagerFactory implements DevSupportManagerFactory
               devBundleDownloadListener,
               minNumShakes,
               customPackagerCommandHandlers,
-              surfaceDelegateFactory,
-              devLoadingViewManager);
+              surfaceDelegateFactory);
     } catch (Exception e) {
-      return new PerftestDevSupportManager(applicationContext);
+      throw new RuntimeException(
+          "Requested enabled DevSupportManager, but BridgeDevSupportManager class was not found"
+              + " or could not be created",
+          e);
     }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevLoadingViewImplementation.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevLoadingViewController.java
similarity index 79%
rename from node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevLoadingViewImplementation.java
rename to node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevLoadingViewController.java
index ef203fb..fa1554b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DefaultDevLoadingViewImplementation.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevLoadingViewController.java
@@ -22,14 +22,12 @@ import com.facebook.common.logging.FLog;
 import com.facebook.react.R;
 import com.facebook.react.bridge.UiThreadUtil;
 import com.facebook.react.common.ReactConstants;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
+import java.net.MalformedURLException;
+import java.net.URL;
 import java.util.Locale;
 
-/**
- * Default implementation of Dev Loading View Manager to display loading messages on top of the
- * screen. All methods are thread safe.
- */
-public class DefaultDevLoadingViewImplementation implements DevLoadingViewManager {
+/** Controller to display loading messages on top of the screen. All methods are thread safe. */
+public class DevLoadingViewController {
   private static boolean sEnabled = true;
   private final ReactInstanceDevHelper mReactInstanceManagerHelper;
   private @Nullable TextView mDevLoadingView;
@@ -39,11 +37,10 @@ public class DefaultDevLoadingViewImplementation implements DevLoadingViewManage
     sEnabled = enabled;
   }
 
-  public DefaultDevLoadingViewImplementation(ReactInstanceDevHelper reactInstanceManagerHelper) {
+  public DevLoadingViewController(ReactInstanceDevHelper reactInstanceManagerHelper) {
     mReactInstanceManagerHelper = reactInstanceManagerHelper;
   }
 
-  @Override
   public void showMessage(final String message) {
     if (!sEnabled) {
       return;
@@ -58,7 +55,34 @@ public class DefaultDevLoadingViewImplementation implements DevLoadingViewManage
         });
   }
 
-  @Override
+  public void showForUrl(String url) {
+    Context context = getContext();
+    if (context == null) {
+      return;
+    }
+
+    URL parsedURL;
+    try {
+      parsedURL = new URL(url);
+    } catch (MalformedURLException e) {
+      FLog.e(ReactConstants.TAG, "Bundle url format is invalid. \n\n" + e.toString());
+      return;
+    }
+
+    int port = parsedURL.getPort() != -1 ? parsedURL.getPort() : parsedURL.getDefaultPort();
+    showMessage(
+        context.getString(R.string.catalyst_loading_from_url, parsedURL.getHost() + ":" + port));
+  }
+
+  public void showForRemoteJSEnabled() {
+    Context context = getContext();
+    if (context == null) {
+      return;
+    }
+
+    showMessage(context.getString(R.string.catalyst_debug_connecting));
+  }
+
   public void updateProgress(
       final @Nullable String status, final @Nullable Integer done, final @Nullable Integer total) {
     if (!sEnabled) {
@@ -83,7 +107,6 @@ public class DefaultDevLoadingViewImplementation implements DevLoadingViewManage
         });
   }
 
-  @Override
   public void hide() {
     if (!sEnabled) {
       return;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerBase.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerBase.java
index f4a855f..0141e70 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerBase.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerBase.java
@@ -24,7 +24,6 @@ import android.util.Pair;
 import android.view.Gravity;
 import android.view.View;
 import android.widget.EditText;
-import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
 import androidx.annotation.Nullable;
@@ -47,7 +46,6 @@ import com.facebook.react.common.SurfaceDelegateFactory;
 import com.facebook.react.devsupport.DevServerHelper.PackagerCommandListener;
 import com.facebook.react.devsupport.interfaces.BundleLoadCallback;
 import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.DevOptionHandler;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.devsupport.interfaces.ErrorCustomizer;
@@ -97,7 +95,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
   private final File mJSBundleDownloadedFile;
   private final File mJSSplitBundlesDir;
   private final DefaultJSExceptionHandler mDefaultJSExceptionHandler;
-  private final DevLoadingViewManager mDevLoadingViewManager;
+  private final DevLoadingViewController mDevLoadingViewController;
 
   private @Nullable SurfaceDelegate mRedBoxSurfaceDelegate;
   private @Nullable AlertDialog mDevOptionsDialog;
@@ -134,8 +132,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
       @Nullable DevBundleDownloadListener devBundleDownloadListener,
       int minNumShakes,
       @Nullable Map<String, RequestHandler> customPackagerCommandHandlers,
-      @Nullable SurfaceDelegateFactory surfaceDelegateFactory,
-      @Nullable DevLoadingViewManager devLoadingViewManager) {
+      @Nullable SurfaceDelegateFactory surfaceDelegateFactory) {
     mReactInstanceDevHelper = reactInstanceDevHelper;
     mApplicationContext = applicationContext;
     mJSAppBundleName = packagerPathForJSBundleName;
@@ -209,10 +206,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
     setDevSupportEnabled(enableOnCreate);
 
     mRedBoxHandler = redBoxHandler;
-    mDevLoadingViewManager =
-        devLoadingViewManager != null
-            ? devLoadingViewManager
-            : new DefaultDevLoadingViewImplementation(reactInstanceDevHelper);
+    mDevLoadingViewController = new DevLoadingViewController(reactInstanceDevHelper);
     mSurfaceDelegateFactory = surfaceDelegateFactory;
   };
 
@@ -554,30 +548,17 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
       return;
     }
 
-    final LinearLayout header = new LinearLayout(getApplicationContext());
-    header.setOrientation(LinearLayout.VERTICAL);
-
-    final TextView title = new TextView(getApplicationContext());
-    title.setText("React Native Dev Menu (" + getUniqueTag() + ")");
-    title.setPadding(0, 50, 0, 0);
-    title.setGravity(Gravity.CENTER);
-    title.setTextColor(Color.DKGRAY);
-    title.setTextSize(16);
-    title.setTypeface(title.getTypeface(), Typeface.BOLD);
-
-    final TextView jsExecutorLabel = new TextView(getApplicationContext());
-    jsExecutorLabel.setText(getJSExecutorDescription());
-    jsExecutorLabel.setPadding(0, 20, 0, 0);
-    jsExecutorLabel.setGravity(Gravity.CENTER);
-    jsExecutorLabel.setTextColor(Color.GRAY);
-    jsExecutorLabel.setTextSize(14);
-
-    header.addView(title);
-    header.addView(jsExecutorLabel);
+    final TextView textView = new TextView(getApplicationContext());
+    textView.setText("React Native DevMenu (" + getUniqueTag() + ")");
+    textView.setPadding(0, 50, 0, 0);
+    textView.setGravity(Gravity.CENTER);
+    textView.setTextColor(Color.BLACK);
+    textView.setTextSize(17);
+    textView.setTypeface(textView.getTypeface(), Typeface.BOLD);
 
     mDevOptionsDialog =
         new AlertDialog.Builder(context)
-            .setCustomTitle(header)
+            .setCustomTitle(textView)
             .setItems(
                 options.keySet().toArray(new String[0]),
                 new DialogInterface.OnClickListener() {
@@ -601,10 +582,6 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
     }
   }
 
-  private String getJSExecutorDescription() {
-    return "Running " + getReactInstanceDevHelper().getJavaScriptExecutorFactory().toString();
-  }
-
   /**
    * {@link ReactInstanceDevCommandsHandler} is responsible for enabling/disabling dev support when
    * a React view is attached/detached or when application state changes (e.g. the application is
@@ -775,40 +752,19 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
 
   @UiThread
   private void showDevLoadingViewForUrl(String bundleUrl) {
-    if (mApplicationContext == null) {
-      return;
-    }
-
-    URL parsedURL;
-
-    try {
-      parsedURL = new URL(bundleUrl);
-    } catch (MalformedURLException e) {
-      FLog.e(ReactConstants.TAG, "Bundle url format is invalid. \n\n" + e.toString());
-      return;
-    }
-
-    int port = parsedURL.getPort() != -1 ? parsedURL.getPort() : parsedURL.getDefaultPort();
-    mDevLoadingViewManager.showMessage(
-        mApplicationContext.getString(
-            R.string.catalyst_loading_from_url, parsedURL.getHost() + ":" + port));
+    mDevLoadingViewController.showForUrl(bundleUrl);
     mDevLoadingViewVisible = true;
   }
 
   @UiThread
   protected void showDevLoadingViewForRemoteJSEnabled() {
-    if (mApplicationContext == null) {
-      return;
-    }
-
-    mDevLoadingViewManager.showMessage(
-        mApplicationContext.getString(R.string.catalyst_debug_connecting));
+    mDevLoadingViewController.showForRemoteJSEnabled();
     mDevLoadingViewVisible = true;
   }
 
   @UiThread
   protected void hideDevLoadingView() {
-    mDevLoadingViewManager.hide();
+    mDevLoadingViewController.hide();
     mDevLoadingViewVisible = false;
   }
 
@@ -850,7 +806,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
                   @Override
                   public void onProgress(
                       @Nullable String status, @Nullable Integer done, @Nullable Integer total) {
-                    mDevLoadingViewManager.updateProgress(status, done, total);
+                    mDevLoadingViewController.updateProgress(status, done, total);
                   }
 
                   @Override
@@ -991,7 +947,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
           public void onSuccess() {
             hideDevLoadingView();
             synchronized (DevSupportManagerBase.this) {
-              mBundleStatus.isLastDownloadSuccess = true;
+              mBundleStatus.isLastDownloadSucess = true;
               mBundleStatus.updateTimestamp = System.currentTimeMillis();
             }
             if (mBundleDownloadListener != null) {
@@ -1006,7 +962,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
               @Nullable final String status,
               @Nullable final Integer done,
               @Nullable final Integer total) {
-            mDevLoadingViewManager.updateProgress(status, done, total);
+            mDevLoadingViewController.updateProgress(status, done, total);
             if (mBundleDownloadListener != null) {
               mBundleDownloadListener.onProgress(status, done, total);
             }
@@ -1016,7 +972,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
           public void onFailure(final Exception cause) {
             hideDevLoadingView();
             synchronized (DevSupportManagerBase.this) {
-              mBundleStatus.isLastDownloadSuccess = false;
+              mBundleStatus.isLastDownloadSucess = false;
             }
             if (mBundleDownloadListener != null) {
               mBundleDownloadListener.onFailure(cause);
@@ -1148,7 +1104,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
 
       // show the dev loading if it should be
       if (mDevLoadingViewVisible) {
-        mDevLoadingViewManager.showMessage("Reloading...");
+        mDevLoadingViewController.showMessage("Reloading...");
       }
 
       mDevServerHelper.openPackagerConnection(
@@ -1229,7 +1185,7 @@ public abstract class DevSupportManagerBase implements DevSupportManager {
       hideDevOptionsDialog();
 
       // hide loading view
-      mDevLoadingViewManager.hide();
+      mDevLoadingViewController.hide();
       mDevServerHelper.closePackagerConnection();
     }
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerFactory.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerFactory.java
index fea7416..3b1c71d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerFactory.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/DevSupportManagerFactory.java
@@ -11,7 +11,6 @@ import android.content.Context;
 import androidx.annotation.Nullable;
 import com.facebook.react.common.SurfaceDelegateFactory;
 import com.facebook.react.devsupport.interfaces.DevBundleDownloadListener;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.devsupport.interfaces.RedBoxHandler;
 import com.facebook.react.packagerconnection.RequestHandler;
@@ -27,6 +26,5 @@ public interface DevSupportManagerFactory {
       @Nullable DevBundleDownloadListener devBundleDownloadListener,
       int minNumShakes,
       @Nullable Map<String, RequestHandler> customPackagerCommandHandlers,
-      @Nullable SurfaceDelegateFactory surfaceDelegateFactory,
-      @Nullable DevLoadingViewManager devLoadingViewManager);
+      @Nullable SurfaceDelegateFactory surfaceDelegateFactory);
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/InspectorPackagerConnection.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/InspectorPackagerConnection.java
index 75b5865..b3cf5af 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/InspectorPackagerConnection.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/InspectorPackagerConnection.java
@@ -157,7 +157,7 @@ public class InspectorPackagerConnection {
       jsonPage.put("title", page.getTitle());
       jsonPage.put("app", mPackageName);
       jsonPage.put("vm", page.getVM());
-      jsonPage.put("isLastBundleDownloadSuccess", bundleStatus.isLastDownloadSuccess);
+      jsonPage.put("isLastBundleDownloadSuccess", bundleStatus.isLastDownloadSucess);
       jsonPage.put("bundleUpdateTimestamp", bundleStatus.updateTimestamp);
       array.put(jsonPage);
     }
@@ -319,11 +319,11 @@ public class InspectorPackagerConnection {
   }
 
   public static class BundleStatus {
-    public Boolean isLastDownloadSuccess;
+    public Boolean isLastDownloadSucess;
     public long updateTimestamp = -1;
 
-    public BundleStatus(Boolean isLastDownloadSuccess, long updateTimestamp) {
-      this.isLastDownloadSuccess = isLastDownloadSuccess;
+    public BundleStatus(Boolean isLastDownloadSucess, long updateTimestamp) {
+      this.isLastDownloadSucess = isLastDownloadSucess;
       this.updateTimestamp = updateTimestamp;
     }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/JSCHeapCapture.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/JSCHeapCapture.java
index 63e3059..7e50b65 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/JSCHeapCapture.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/JSCHeapCapture.java
@@ -16,8 +16,10 @@ import java.io.File;
 
 // This module is being called only by Java via the static method "captureHeap" that
 // requires it to already be initialized, thus we eagerly initialize this module
-@ReactModule(name = NativeJSCHeapCaptureSpec.NAME, needsEagerInit = true)
+@ReactModule(name = JSCHeapCapture.TAG, needsEagerInit = true)
 public class JSCHeapCapture extends NativeJSCHeapCaptureSpec {
+  public static final String TAG = "JSCHeapCapture";
+
   public interface HeapCapture extends JavaScriptModule {
     void captureHeap(String path);
   }
@@ -77,4 +79,9 @@ public class JSCHeapCapture extends NativeJSCHeapCaptureSpec {
       mCaptureInProgress = null;
     }
   }
+
+  @Override
+  public String getName() {
+    return "JSCHeapCapture";
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/LogBoxModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/LogBoxModule.java
index ec410c3..609f7ad 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/LogBoxModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/LogBoxModule.java
@@ -15,7 +15,7 @@ import com.facebook.react.common.SurfaceDelegate;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.module.annotations.ReactModule;
 
-@ReactModule(name = NativeLogBoxSpec.NAME)
+@ReactModule(name = LogBoxModule.NAME)
 public class LogBoxModule extends NativeLogBoxSpec {
 
   public static final String NAME = "LogBox";
@@ -49,6 +49,11 @@ public class LogBoxModule extends NativeLogBoxSpec {
         });
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void show() {
     if (!mSurfaceDelegate.isContentViewReady()) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/PerftestDevSupportManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/PerftestDevSupportManager.java
deleted file mode 100644
index 2be621f..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/PerftestDevSupportManager.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.devsupport;
-
-import android.content.Context;
-
-/**
- * Interface for accessing and interacting with development features related to performance testing.
- * Communication is enabled via the Inspector, but everything else is disabled.
- */
-public final class PerftestDevSupportManager extends DisabledDevSupportManager {
-  private final DevServerHelper mDevServerHelper;
-  private final DevInternalSettings mDevSettings;
-  private final InspectorPackagerConnection.BundleStatus mBundleStatus;
-
-  public PerftestDevSupportManager(Context applicationContext) {
-    mDevSettings =
-        new DevInternalSettings(
-            applicationContext,
-            new DevInternalSettings.Listener() {
-              @Override
-              public void onInternalSettingsChanged() {}
-            });
-    mBundleStatus = new InspectorPackagerConnection.BundleStatus();
-    mDevServerHelper =
-        new DevServerHelper(
-            mDevSettings,
-            applicationContext.getPackageName(),
-            new InspectorPackagerConnection.BundleStatusProvider() {
-              @Override
-              public InspectorPackagerConnection.BundleStatus getBundleStatus() {
-                return mBundleStatus;
-              }
-            });
-  }
-
-  @Override
-  public DevInternalSettings getDevSettings() {
-    return mDevSettings;
-  }
-
-  @Override
-  public void startInspector() {
-    mDevServerHelper.openInspectorConnection();
-  }
-
-  @Override
-  public void stopInspector() {
-    mDevServerHelper.closeInspectorConnection();
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/interfaces/DevLoadingViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/interfaces/DevLoadingViewManager.java
deleted file mode 100644
index 5b51c4f..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/devsupport/interfaces/DevLoadingViewManager.java
+++ /dev/null
@@ -1,21 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.devsupport.interfaces;
-
-import androidx.annotation.Nullable;
-
-/** Interface to display loading messages on top of the screen. */
-public interface DevLoadingViewManager {
-
-  void showMessage(final String message);
-
-  void updateProgress(
-      final @Nullable String status, final @Nullable Integer done, final @Nullable Integer total);
-
-  void hide();
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/.clang-tidy b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/.clang-tidy
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/BUCK
index e788d92..a311acb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/BUCK
@@ -16,6 +16,13 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "KOTLIN",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     pure_kotlin = False,
     required_for_source_only_abi = True,
     source = "8",
@@ -25,27 +32,23 @@ rn_android_library(
     ],
     deps = [
         YOGA_TARGET,
+        react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("java/com/facebook/systrace:systrace"),
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
-        react_native_dep("third-party/java/infer-annotations:infer-annotations"),
-        react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/debug/tags:tags"),
+        react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
-        react_native_target("java/com/facebook/react/common:common"),
-        react_native_target("java/com/facebook/react/common/mapbuffer:mapbuffer"),
         react_native_target("java/com/facebook/react/config:config"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("java/com/facebook/react/modules/core:core"),
         react_native_target("java/com/facebook/react/modules/i18nmanager:i18nmanager"),
-        react_native_target("java/com/facebook/react/touch:touch"),
+        react_native_target("java/com/facebook/react/common:common"),
+        react_native_target("java/com/facebook/react/common/mapbuffer:mapbuffer"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
-        react_native_target("java/com/facebook/react/views/text:text"),
         react_native_target("java/com/facebook/react/views/view:view"),
+        react_native_target("java/com/facebook/react/views/text:text"),
+        react_native_target("java/com/facebook/react/touch:touch"),
         react_native_target("jni/react/fabric:jni"),
     ] + KOTLIN_STDLIB_DEPS,
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/Binding.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/Binding.java
index 19caa19..1565f57 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/Binding.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/Binding.java
@@ -9,6 +9,7 @@ package com.facebook.react.fabric;
 
 import android.annotation.SuppressLint;
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import com.facebook.jni.HybridData;
 import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.react.bridge.NativeMap;
@@ -43,7 +44,8 @@ public class Binding {
       Object uiManager,
       EventBeatManager eventBeatManager,
       ComponentFactory componentsRegistry,
-      Object reactNativeConfig);
+      Object reactNativeConfig,
+      CppComponentRegistry cppComponentRegistry);
 
   public native void startSurface(
       int surfaceId, @NonNull String moduleName, @NonNull NativeMap initialProps);
@@ -85,11 +87,29 @@ public class Binding {
 
   public void register(
       @NonNull RuntimeExecutor runtimeExecutor,
-      @NonNull RuntimeScheduler runtimeScheduler,
+      @Nullable RuntimeScheduler runtimeScheduler,
       @NonNull FabricUIManager fabricUIManager,
       @NonNull EventBeatManager eventBeatManager,
       @NonNull ComponentFactory componentFactory,
       @NonNull ReactNativeConfig reactNativeConfig) {
+    register(
+        runtimeExecutor,
+        runtimeScheduler,
+        fabricUIManager,
+        eventBeatManager,
+        componentFactory,
+        reactNativeConfig,
+        null);
+  }
+
+  public void register(
+      @NonNull RuntimeExecutor runtimeExecutor,
+      @Nullable RuntimeScheduler runtimeScheduler,
+      @NonNull FabricUIManager fabricUIManager,
+      @NonNull EventBeatManager eventBeatManager,
+      @NonNull ComponentFactory componentFactory,
+      @NonNull ReactNativeConfig reactNativeConfig,
+      @Nullable CppComponentRegistry cppComponentRegistry) {
     fabricUIManager.setBinding(this);
     installFabricUIManager(
         runtimeExecutor,
@@ -97,7 +117,8 @@ public class Binding {
         fabricUIManager,
         eventBeatManager,
         componentFactory,
-        reactNativeConfig);
+        reactNativeConfig,
+        cppComponentRegistry);
 
     setPixelDensity(PixelUtil.getDisplayMetricDensity());
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/CppViewMutationsWrapper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/CppViewMutationsWrapper.java
new file mode 100644
index 0000000..2df36ef
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/CppViewMutationsWrapper.java
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+package com.facebook.react.fabric;
+
+import android.annotation.SuppressLint;
+import com.facebook.jni.HybridData;
+import com.facebook.proguard.annotations.DoNotStrip;
+
+/**
+ * This class holds reference to the C++ CppViewMutations object. Instances of this class are
+ * created on the Bindings.cpp, where the pointer to the cppViewMutations is set.
+ */
+@SuppressLint("MissingNativeLoadLibrary")
+public class CppViewMutationsWrapper {
+
+  static {
+    FabricSoLoader.staticInit();
+  }
+
+  @DoNotStrip private final HybridData mHybridData;
+
+  private static native HybridData initHybrid();
+
+  private CppViewMutationsWrapper() {
+    mHybridData = initHybrid();
+  }
+
+  public native void runCppViewMutations();
+
+  public synchronized void destroy() {
+    if (mHybridData != null) {
+      mHybridData.resetNative();
+    }
+  }
+
+  private boolean isValid() {
+    if (mHybridData != null) {
+      return mHybridData.isValid();
+    }
+    return false;
+  }
+}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/DevToolsReactPerfLogger.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/DevToolsReactPerfLogger.java
index 9a233ec..e6a3bf2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/DevToolsReactPerfLogger.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/DevToolsReactPerfLogger.java
@@ -21,27 +21,8 @@ import java.util.PriorityQueue;
 import java.util.Queue;
 
 class LongStreamingStats {
-  // TODO(T138627466): Calculate median value with better algorithm after Android API 24.
-  private Queue<Long> minHeap =
-      new PriorityQueue<>(
-          11,
-          new Comparator<Long>() {
-            @Override
-            public int compare(Long first, Long second) {
-              // Natural order
-              return Long.compare(first, second);
-            }
-          });
-  private Queue<Long> maxHeap =
-      new PriorityQueue<>(
-          11,
-          new Comparator<Long>() {
-            @Override
-            public int compare(Long first, Long second) {
-              // Reversed order
-              return Long.compare(second, first);
-            }
-          });
+  private Queue<Long> minHeap = new PriorityQueue<>(Comparator.naturalOrder());
+  private Queue<Long> maxHeap = new PriorityQueue<>(Comparator.reverseOrder());
   private double streamingAverage = 0.0;
   private int len = 0;
   private long max = 0;
@@ -180,7 +161,7 @@ public class DevToolsReactPerfLogger implements ReactMarker.FabricMarkerListener
       return getValue(FABRIC_UPDATE_UI_MAIN_THREAD_END);
     }
 
-    // Duration calculations
+    // Duration calcuations
     public long getCommitDuration() {
       return getCommitEnd() - getCommitStart();
     }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricJSIModuleProvider.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricJSIModuleProvider.java
index 9aee067..8469093 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricJSIModuleProvider.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricJSIModuleProvider.java
@@ -8,6 +8,7 @@
 package com.facebook.react.fabric;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import com.facebook.react.bridge.JSIModuleProvider;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.UIManager;
@@ -21,16 +22,27 @@ public class FabricJSIModuleProvider implements JSIModuleProvider<UIManager> {
   @NonNull private final ComponentFactory mComponentFactory;
   @NonNull private final ReactNativeConfig mConfig;
   @NonNull private final ViewManagerRegistry mViewManagerRegistry;
+  @Nullable private final CppComponentRegistry mCppComponentRegistry;
 
   public FabricJSIModuleProvider(
       @NonNull ReactApplicationContext reactApplicationContext,
       @NonNull ComponentFactory componentFactory,
       @NonNull ReactNativeConfig config,
       @NonNull ViewManagerRegistry viewManagerRegistry) {
+    this(reactApplicationContext, componentFactory, config, viewManagerRegistry, null);
+  }
+
+  public FabricJSIModuleProvider(
+      @NonNull ReactApplicationContext reactApplicationContext,
+      @NonNull ComponentFactory componentFactory,
+      @NonNull ReactNativeConfig config,
+      @NonNull ViewManagerRegistry viewManagerRegistry,
+      @Nullable CppComponentRegistry cppComponentRegistry) {
     mReactApplicationContext = reactApplicationContext;
     mComponentFactory = componentFactory;
     mConfig = config;
     mViewManagerRegistry = viewManagerRegistry;
+    mCppComponentRegistry = cppComponentRegistry;
   }
 
   @Override
@@ -49,7 +61,8 @@ public class FabricJSIModuleProvider implements JSIModuleProvider<UIManager> {
         uiManager,
         eventBeatManager,
         mComponentFactory,
-        mConfig);
+        mConfig,
+        mCppComponentRegistry);
 
     Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
     Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricUIManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricUIManager.java
index 49acc4c..e094726 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricUIManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/FabricUIManager.java
@@ -56,7 +56,6 @@ import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.react.fabric.events.EventBeatManager;
 import com.facebook.react.fabric.events.EventEmitterWrapper;
 import com.facebook.react.fabric.events.FabricEventEmitter;
-import com.facebook.react.fabric.interop.InteropEventEmitter;
 import com.facebook.react.fabric.mounting.MountItemDispatcher;
 import com.facebook.react.fabric.mounting.MountingManager;
 import com.facebook.react.fabric.mounting.SurfaceMountingManager;
@@ -82,10 +81,10 @@ import com.facebook.react.uimanager.ViewManagerRegistry;
 import com.facebook.react.uimanager.events.EventCategoryDef;
 import com.facebook.react.uimanager.events.EventDispatcher;
 import com.facebook.react.uimanager.events.EventDispatcherImpl;
-import com.facebook.react.uimanager.events.RCTEventEmitter;
 import com.facebook.react.views.text.TextLayoutManager;
 import com.facebook.react.views.text.TextLayoutManagerMapBuffer;
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 import java.util.Queue;
 import java.util.concurrent.CopyOnWriteArrayList;
@@ -183,6 +182,9 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
    */
   private volatile boolean mDestroyed = false;
 
+  // TODO T83943316: Delete this variable once StaticViewConfigs are enabled by default
+  private volatile boolean mShouldDeallocateEventDispatcher = false;
+
   private boolean mDriveCxxAnimations = false;
 
   private long mDispatchViewUpdatesTime = 0l;
@@ -207,6 +209,28 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
         }
       };
 
+  // TODO T83943316: Deprecate and delete this constructor once StaticViewConfigs are enabled by
+  // default
+  @Deprecated
+  public FabricUIManager(
+      ReactApplicationContext reactContext,
+      ViewManagerRegistry viewManagerRegistry,
+      EventDispatcher eventDispatcher,
+      EventBeatManager eventBeatManager) {
+    mDispatchUIFrameCallback = new DispatchUIFrameCallback(reactContext);
+    mReactApplicationContext = reactContext;
+    mMountingManager = new MountingManager(viewManagerRegistry, mMountItemExecutor);
+    mMountItemDispatcher =
+        new MountItemDispatcher(mMountingManager, new MountItemDispatchListener());
+    mEventDispatcher = eventDispatcher;
+    mShouldDeallocateEventDispatcher = false;
+    mEventBeatManager = eventBeatManager;
+    mReactApplicationContext.addLifecycleEventListener(this);
+
+    mViewManagerRegistry = viewManagerRegistry;
+    mReactApplicationContext.registerComponentCallbacks(viewManagerRegistry);
+  }
+
   public FabricUIManager(
       ReactApplicationContext reactContext,
       ViewManagerRegistry viewManagerRegistry,
@@ -217,6 +241,7 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
     mMountItemDispatcher =
         new MountItemDispatcher(mMountingManager, new MountItemDispatchListener());
     mEventDispatcher = new EventDispatcherImpl(reactContext);
+    mShouldDeallocateEventDispatcher = true;
     mEventBeatManager = eventBeatManager;
     mReactApplicationContext.addLifecycleEventListener(this);
 
@@ -277,6 +302,13 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
     return mBinding.getInspectorDataForInstance(eventEmitter);
   }
 
+  @Override
+  public void preInitializeViewManagers(List<String> viewManagerNames) {
+    for (String viewManagerName : viewManagerNames) {
+      mMountingManager.initializeViewManager(viewManagerName);
+    }
+  }
+
   @Override
   @AnyThread
   @ThreadConfined(ANY)
@@ -392,11 +424,6 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
 
       ReactMarker.addFabricListener(mDevToolsReactPerfLogger);
     }
-    if (ReactFeatureFlags.unstable_useFabricInterop) {
-      InteropEventEmitter interopEventEmitter = new InteropEventEmitter(mReactApplicationContext);
-      mReactApplicationContext.internal_registerInteropModule(
-          RCTEventEmitter.class, interopEventEmitter);
-    }
   }
 
   // This is called on the JS thread (see CatalystInstanceImpl).
@@ -440,11 +467,10 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
 
     ViewManagerPropertyUpdater.clear();
 
-    // When StaticViewConfigs is enabled, FabriUIManager is
-    // responsible for initializing and deallocating EventDispatcher. StaticViewConfigs is enabled
-    // only in Bridgeless for now.
+    // When using StaticViewConfigs is enabled, FabriUIManager is
+    // responsible for initializing and deallocating EventDispatcher.
     // TODO T83943316: Remove this IF once StaticViewConfigs are enabled by default
-    if (!ReactFeatureFlags.enableBridgelessArchitecture) {
+    if (mShouldDeallocateEventDispatcher) {
       mEventDispatcher.onCatalystInstanceDestroyed();
     }
   }
@@ -1062,8 +1088,6 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
       eventType = AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED;
     } else if ("click".equals(eventTypeJS)) {
       eventType = AccessibilityEvent.TYPE_VIEW_CLICKED;
-    } else if ("viewHoverEnter".equals(eventTypeJS)) {
-      eventType = AccessibilityEvent.TYPE_VIEW_HOVER_ENTER;
     } else {
       throw new IllegalArgumentException(
           "sendAccessibilityEventFromJS: invalid eventType " + eventTypeJS);
@@ -1178,20 +1202,6 @@ public class FabricUIManager implements UIManager, LifecycleEventListener {
   }
 
   private class MountItemDispatchListener implements MountItemDispatcher.ItemDispatchListener {
-    @Override
-    public void willMountItems() {
-      for (UIManagerListener listener : mListeners) {
-        listener.willMountItems(FabricUIManager.this);
-      }
-    }
-
-    @Override
-    public void didMountItems() {
-      for (UIManagerListener listener : mListeners) {
-        listener.didMountItems(FabricUIManager.this);
-      }
-    }
-
     @Override
     public void didDispatchMountItems() {
       for (UIManagerListener listener : mListeners) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/events/EventEmitterWrapper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/events/EventEmitterWrapper.java
index 479169c..ecb984b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/events/EventEmitterWrapper.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/events/EventEmitterWrapper.java
@@ -14,6 +14,7 @@ import com.facebook.jni.HybridData;
 import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.react.bridge.NativeMap;
 import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.bridge.WritableNativeMap;
 import com.facebook.react.fabric.FabricSoLoader;
 import com.facebook.react.uimanager.events.EventCategoryDef;
 
@@ -55,7 +56,8 @@ public class EventEmitterWrapper {
     if (!isValid()) {
       return;
     }
-    invokeEvent(eventName, (NativeMap) params, eventCategory);
+    NativeMap payload = params == null ? new WritableNativeMap() : (NativeMap) params;
+    invokeEvent(eventName, payload, eventCategory);
   }
 
   /**
@@ -70,7 +72,8 @@ public class EventEmitterWrapper {
     if (!isValid()) {
       return;
     }
-    invokeUniqueEvent(eventName, (NativeMap) params, customCoalesceKey);
+    NativeMap payload = params == null ? new WritableNativeMap() : (NativeMap) params;
+    invokeUniqueEvent(eventName, payload, customCoalesceKey);
   }
 
   public synchronized void destroy() {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/interop/InteropEvent.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/interop/InteropEvent.java
deleted file mode 100644
index 881edbd..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/interop/InteropEvent.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.fabric.interop;
-
-import androidx.annotation.Nullable;
-import com.facebook.react.bridge.WritableMap;
-import com.facebook.react.common.annotations.VisibleForTesting;
-import com.facebook.react.uimanager.events.Event;
-
-/**
- * An {@link Event} class used by the {@link InteropEventEmitter}. This class is just holding the
- * event name and the data which is received by the `receiveEvent` method and will be passed over
- * the the {@link com.facebook.react.uimanager.events.EventDispatcher}
- */
-class InteropEvent extends Event<InteropEvent> {
-
-  private final String mName;
-  private final WritableMap mEventData;
-
-  InteropEvent(String name, @Nullable WritableMap eventData, int surfaceId, int viewTag) {
-    super(surfaceId, viewTag);
-    mName = name;
-    mEventData = eventData;
-  }
-
-  @Override
-  public String getEventName() {
-    return mName;
-  }
-
-  @Override
-  @VisibleForTesting
-  public WritableMap getEventData() {
-    return mEventData;
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/interop/InteropEventEmitter.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/interop/InteropEventEmitter.java
deleted file mode 100644
index aef10bf..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/interop/InteropEventEmitter.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.fabric.interop;
-
-import androidx.annotation.Nullable;
-import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.bridge.WritableArray;
-import com.facebook.react.bridge.WritableMap;
-import com.facebook.react.common.annotations.VisibleForTesting;
-import com.facebook.react.uimanager.UIManagerHelper;
-import com.facebook.react.uimanager.events.EventDispatcher;
-import com.facebook.react.uimanager.events.RCTEventEmitter;
-
-/**
- * A reimplementation of {@link RCTEventEmitter} which is using a {@link EventDispatcher} under the
- * hood.
- *
- * <p>On Fabric, you're supposed to use {@link EventDispatcher} to dispatch events. However, we
- * provide an interop layer for non-Fabric migrated components.
- *
- * <p>This instance will be returned if the user is invoking `context.getJsModule(RCTEventEmitter)
- * and is providing support for the `receiveEvent` method, so that non-Fabric ViewManagers can
- * continue to deliver events also when Fabric is turned on.
- */
-public class InteropEventEmitter implements RCTEventEmitter {
-
-  private final ReactContext mReactContext;
-
-  private @Nullable EventDispatcher mEventDispatcherOverride;
-
-  public InteropEventEmitter(ReactContext reactContext) {
-    mReactContext = reactContext;
-  }
-
-  @Override
-  public void receiveEvent(int targetReactTag, String eventName, @Nullable WritableMap eventData) {
-    EventDispatcher dispatcher;
-    if (mEventDispatcherOverride != null) {
-      dispatcher = mEventDispatcherOverride;
-    } else {
-      dispatcher = UIManagerHelper.getEventDispatcherForReactTag(mReactContext, targetReactTag);
-    }
-    int surfaceId = UIManagerHelper.getSurfaceId(mReactContext);
-    if (dispatcher != null) {
-      dispatcher.dispatchEvent(new InteropEvent(eventName, eventData, surfaceId, targetReactTag));
-    }
-  }
-
-  @Override
-  public void receiveTouches(
-      String eventName, WritableArray touches, WritableArray changedIndices) {
-    throw new UnsupportedOperationException(
-        "EventEmitter#receiveTouches is not supported by the Fabric Interop Layer");
-  }
-
-  @VisibleForTesting
-  void overrideEventDispatcher(EventDispatcher eventDispatcherOverride) {
-    mEventDispatcherOverride = eventDispatcherOverride;
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountItemDispatcher.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountItemDispatcher.java
index 6b18881..a14cc85 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountItemDispatcher.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountItemDispatcher.java
@@ -193,8 +193,6 @@ public class MountItemDispatcher {
       return false;
     }
 
-    mItemDispatchListener.willMountItems();
-
     // As an optimization, execute all ViewCommands first
     // This should be:
     // 1) Performant: ViewCommands are often a replacement for SetNativeProps, which we've always
@@ -278,10 +276,6 @@ public class MountItemDispatcher {
           // If there's an exception, we want to log diagnostics in prod and rethrow.
           FLog.e(TAG, "dispatchMountItems: caught exception, displaying mount state", e);
           for (MountItem m : mountItemsToDispatch) {
-            if (m == mountItem) {
-              // We want to mark the mount item that caused exception
-              FLog.e(TAG, "dispatchMountItems: mountItem: next mountItem triggered exception!");
-            }
             printMountItem(m, "dispatchMountItems: mountItem");
           }
           if (mountItem.getSurfaceId() != View.NO_ID) {
@@ -301,9 +295,6 @@ public class MountItemDispatcher {
       }
       mBatchedExecutionTime += SystemClock.uptimeMillis() - batchedExecutionStartTime;
     }
-
-    mItemDispatchListener.didMountItems();
-
     Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
 
     return true;
@@ -420,10 +411,6 @@ public class MountItemDispatcher {
   }
 
   public interface ItemDispatchListener {
-    void willMountItems();
-
-    void didMountItems();
-
     void didDispatchMountItems();
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountingManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountingManager.java
index 269a911..f602b2a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountingManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/MountingManager.java
@@ -420,6 +420,10 @@ public class MountingManager {
             attachmentsPositions);
   }
 
+  public void initializeViewManager(String componentName) {
+    mViewManagerRegistry.get(componentName);
+  }
+
   public void enqueuePendingEvent(int reactTag, ViewEvent viewEvent) {
     @Nullable SurfaceMountingManager smm = getSurfaceManagerForView(reactTag);
     if (smm == null) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java
index 124c35f..804a77a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/SurfaceMountingManager.java
@@ -36,7 +36,6 @@ import com.facebook.react.fabric.mounting.MountingManager.MountItemExecutor;
 import com.facebook.react.fabric.mounting.mountitems.MountItem;
 import com.facebook.react.modules.core.ReactChoreographer;
 import com.facebook.react.touch.JSResponderHandler;
-import com.facebook.react.uimanager.IViewGroupManager;
 import com.facebook.react.uimanager.IllegalViewOperationException;
 import com.facebook.react.uimanager.ReactOverflowViewWithInset;
 import com.facebook.react.uimanager.ReactRoot;
@@ -45,6 +44,7 @@ import com.facebook.react.uimanager.RootView;
 import com.facebook.react.uimanager.RootViewManager;
 import com.facebook.react.uimanager.StateWrapper;
 import com.facebook.react.uimanager.ThemedReactContext;
+import com.facebook.react.uimanager.ViewGroupManager;
 import com.facebook.react.uimanager.ViewManager;
 import com.facebook.react.uimanager.ViewManagerRegistry;
 import com.facebook.react.uimanager.events.EventCategoryDef;
@@ -267,7 +267,6 @@ public class SurfaceMountingManager {
    */
   @AnyThread
   public void stopSurface() {
-    FLog.e(TAG, "Stopping surface [" + mSurfaceId + "]");
     if (isStopped()) {
       return;
     }
@@ -310,7 +309,6 @@ public class SurfaceMountingManager {
             if (ReactFeatureFlags.enableViewRecycling) {
               mViewManagerRegistry.onSurfaceStopped(mSurfaceId);
             }
-            FLog.e(TAG, "Surface [" + mSurfaceId + "] was stopped on SurfaceMountingManager.");
           }
         };
 
@@ -480,7 +478,7 @@ public class SurfaceMountingManager {
       logViewHierarchy(parentView, false);
     }
 
-    IViewGroupManager<ViewGroup> viewGroupManager = getViewGroupManager(parentViewState);
+    ViewGroupManager<ViewGroup> viewGroupManager = getViewGroupManager(parentViewState);
 
     // Verify that the view we're about to remove has the same tag we expect
     View view = viewGroupManager.getChildAt(parentView, index);
@@ -641,7 +639,7 @@ public class SurfaceMountingManager {
       logViewHierarchy(parentView, false);
     }
 
-    IViewGroupManager<ViewGroup> viewGroupManager = getViewGroupManager(parentViewState);
+    ViewGroupManager<ViewGroup> viewGroupManager = getViewGroupManager(parentViewState);
 
     // Verify that the view we're about to remove has the same tag we expect
     View view = viewGroupManager.getChildAt(parentView, index);
@@ -981,7 +979,7 @@ public class SurfaceMountingManager {
     }
 
     ViewState parentViewState = getViewState(parentTag);
-    IViewGroupManager<?> parentViewManager = null;
+    ViewGroupManager<?> parentViewManager = null;
     if (parentViewState.mViewManager != null) {
       parentViewManager = parentViewState.mViewManager.getViewGroupManager();
     }
@@ -1259,12 +1257,12 @@ public class SurfaceMountingManager {
   }
 
   @SuppressWarnings("unchecked") // prevents unchecked conversion warn of the <ViewGroup> type
-  private static @NonNull IViewGroupManager<ViewGroup> getViewGroupManager(
+  private static @NonNull ViewGroupManager<ViewGroup> getViewGroupManager(
       @NonNull ViewState viewState) {
     if (viewState.mViewManager == null) {
       throw new IllegalStateException("Unable to find ViewManager for view: " + viewState);
     }
-    return (IViewGroupManager<ViewGroup>) viewState.mViewManager.getViewGroupManager();
+    return (ViewGroupManager<ViewGroup>) viewState.mViewManager.getViewGroupManager();
   }
 
   public void printSurfaceState() {
@@ -1468,7 +1466,7 @@ public class SurfaceMountingManager {
               // subtree instead of recursing further.
               if (childrenAreManaged) {
                 try {
-                  // This can happen if the removeAllViews method is overridden to throw,
+                  // This can happen if the removeAllViews method is overriden to throw,
                   // which it is explicitly in some cases (for example embedded Litho views,
                   // but there could be other cases). In those cases, we want to fail silently
                   // and then assume the subtree is /not/ managed by React Native.
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/mountitems/IntBufferBatchMountItem.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/mountitems/IntBufferBatchMountItem.java
index 9d11057..f5bc56d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/mountitems/IntBufferBatchMountItem.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/fabric/mounting/mountitems/IntBufferBatchMountItem.java
@@ -16,6 +16,7 @@ import com.facebook.common.logging.FLog;
 import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.react.bridge.ReactMarker;
 import com.facebook.react.bridge.ReactMarkerConstants;
+import com.facebook.react.fabric.CppViewMutationsWrapper;
 import com.facebook.react.fabric.events.EventEmitterWrapper;
 import com.facebook.react.fabric.mounting.MountingManager;
 import com.facebook.react.fabric.mounting.SurfaceMountingManager;
@@ -50,6 +51,7 @@ public class IntBufferBatchMountItem implements MountItem {
   static final int INSTRUCTION_UPDATE_PADDING = 512;
   static final int INSTRUCTION_UPDATE_OVERFLOW_INSET = 1024;
   static final int INSTRUCTION_REMOVE_DELETE_TREE = 2048;
+  static final int INSTRUCTION_RUN_CPP_VIEWS = 4096;
 
   private final int mSurfaceId;
   private final int mCommitNumber;
@@ -97,6 +99,10 @@ public class IntBufferBatchMountItem implements MountItem {
     return obj != null ? (EventEmitterWrapper) obj : null;
   }
 
+  private static CppViewMutationsWrapper castToCppViewMutationWrapper(Object obj) {
+    return obj != null ? (CppViewMutationsWrapper) obj : null;
+  }
+
   @Override
   public void execute(@NonNull MountingManager mountingManager) {
     SurfaceMountingManager surfaceMountingManager = mountingManager.getSurfaceManager(mSurfaceId);
@@ -178,6 +184,8 @@ public class IntBufferBatchMountItem implements MountItem {
         } else if (type == INSTRUCTION_UPDATE_EVENT_EMITTER) {
           surfaceMountingManager.updateEventEmitter(
               mIntBuffer[i++], castToEventEmitter(mObjBuffer[j++]));
+        } else if (type == INSTRUCTION_RUN_CPP_VIEWS) {
+          castToCppViewMutationWrapper(mObjBuffer[j++]).runCppViewMutations();
         } else {
           throw new IllegalArgumentException(
               "Invalid type argument to IntBufferBatchMountItem: " + type + " at index: " + i);
@@ -278,6 +286,9 @@ public class IntBufferBatchMountItem implements MountItem {
           } else if (type == INSTRUCTION_UPDATE_EVENT_EMITTER) {
             j += 1;
             s.append(String.format("UPDATE EVENTEMITTER [%d]\n", mIntBuffer[i++]));
+          } else if (type == INSTRUCTION_RUN_CPP_VIEWS) {
+            j += 1;
+            s.append(String.format("RUN CPP_VIEWS [%d]\n", mIntBuffer[i++]));
           } else {
             FLog.e(TAG, "String so far: " + s.toString());
             throw new IllegalArgumentException(
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/.clang-tidy b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/.clang-tidy
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/accessibilityinfo/AccessibilityInfoModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/accessibilityinfo/AccessibilityInfoModule.java
index a21b048..0ea17b3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/accessibilityinfo/AccessibilityInfoModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/accessibilityinfo/AccessibilityInfoModule.java
@@ -24,15 +24,18 @@ import com.facebook.react.bridge.Callback;
 import com.facebook.react.bridge.LifecycleEventListener;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 
 /**
  * Module that monitors and provides information about the state of Touch Exploration service on the
  * device. For API >= 19.
  */
-@ReactModule(name = NativeAccessibilityInfoSpec.NAME)
+@ReactModule(name = AccessibilityInfoModule.NAME)
 public class AccessibilityInfoModule extends NativeAccessibilityInfoSpec
     implements LifecycleEventListener {
 
+  public static final String NAME = "AccessibilityInfo";
+
   @TargetApi(Build.VERSION_CODES.LOLLIPOP)
   private class ReactTouchExplorationStateChangeListener
       implements AccessibilityManager.TouchExplorationStateChangeListener {
@@ -98,17 +101,17 @@ public class AccessibilityInfoModule extends NativeAccessibilityInfoSpec
     mAccessibilityServiceChangeListener = new ReactAccessibilityServiceChangeListener();
   }
 
+  @Override
+  public String getName() {
+    return "AccessibilityInfo";
+  }
+
   @TargetApi(Build.VERSION_CODES.LOLLIPOP)
   private boolean getIsReduceMotionEnabledValue() {
-    // Disabling animations in developer settings will set the animation scale to "0.0"
-    // but setting "reduce motion" / "disable animations" will set the animation scale to "0".
-    String rawValue =
+    String value =
         Settings.Global.getString(mContentResolver, Settings.Global.TRANSITION_ANIMATION_SCALE);
 
-    // Parse the value as a float so we can check for a single value.
-    Float parsedValue = rawValue != null ? Float.parseFloat(rawValue) : 1f;
-
-    return parsedValue == 0f;
+    return value != null && value.equals("0.0");
   }
 
   @Override
@@ -134,7 +137,9 @@ public class AccessibilityInfoModule extends NativeAccessibilityInfoSpec
 
       ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
       if (reactApplicationContext != null) {
-        reactApplicationContext.emitDeviceEvent(REDUCE_MOTION_EVENT_NAME, mReduceMotionEnabled);
+        reactApplicationContext
+            .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+            .emit(REDUCE_MOTION_EVENT_NAME, mReduceMotionEnabled);
       }
     }
   }
@@ -146,7 +151,8 @@ public class AccessibilityInfoModule extends NativeAccessibilityInfoSpec
       ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
       if (reactApplicationContext != null) {
         getReactApplicationContext()
-            .emitDeviceEvent(TOUCH_EXPLORATION_EVENT_NAME, mTouchExplorationEnabled);
+            .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+            .emit(TOUCH_EXPLORATION_EVENT_NAME, mTouchExplorationEnabled);
       }
     }
   }
@@ -158,7 +164,8 @@ public class AccessibilityInfoModule extends NativeAccessibilityInfoSpec
       ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
       if (reactApplicationContext != null) {
         getReactApplicationContext()
-            .emitDeviceEvent(ACCESSIBILITY_SERVICE_EVENT_NAME, mAccessibilityServiceEnabled);
+            .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+            .emit(ACCESSIBILITY_SERVICE_EVENT_NAME, mAccessibilityServiceEnabled);
       }
     }
   }
@@ -199,8 +206,12 @@ public class AccessibilityInfoModule extends NativeAccessibilityInfoSpec
 
   @Override
   public void invalidate() {
-    getReactApplicationContext().removeLifecycleEventListener(this);
     super.invalidate();
+
+    ReactApplicationContext applicationContext = getReactApplicationContextIfActiveOrWarn();
+    if (applicationContext != null) {
+      applicationContext.removeLifecycleEventListener(this);
+    }
   }
 
   @Override
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java
index 4dece29..e5b9415 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/AppearanceModule.java
@@ -11,17 +11,19 @@ import android.app.Activity;
 import android.content.Context;
 import android.content.res.Configuration;
 import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatDelegate;
 import com.facebook.fbreact.specs.NativeAppearanceSpec;
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;
 
 /** Module that exposes the user's preferred color scheme. */
-@ReactModule(name = NativeAppearanceSpec.NAME)
+@ReactModule(name = AppearanceModule.NAME)
 public class AppearanceModule extends NativeAppearanceSpec {
 
+  public static final String NAME = "Appearance";
+
   private static final String APPEARANCE_CHANGED_EVENT_NAME = "appearanceChanged";
 
   private String mColorScheme = "light";
@@ -67,14 +69,8 @@ public class AppearanceModule extends NativeAppearanceSpec {
   }
 
   @Override
-  public void setColorScheme(String style) {
-    if (style.equals("dark")) {
-      AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);
-    } else if (style.equals("light")) {
-      AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO);
-    } else if (style.equals("unspecified")) {
-      AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_FOLLOW_SYSTEM);
-    }
+  public String getName() {
+    return NAME;
   }
 
   @Override
@@ -119,7 +115,9 @@ public class AppearanceModule extends NativeAppearanceSpec {
     ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
 
     if (reactApplicationContext != null) {
-      reactApplicationContext.emitDeviceEvent(APPEARANCE_CHANGED_EVENT_NAME, appearancePreferences);
+      reactApplicationContext
+          .getJSModule(RCTDeviceEventEmitter.class)
+          .emit(APPEARANCE_CHANGED_EVENT_NAME, appearancePreferences);
     }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/BUCK
index 044b4c8..4cb4e08 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appearance/BUCK
@@ -14,7 +14,6 @@ rn_android_library(
     deps = [
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:appcompat"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appstate/AppStateModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appstate/AppStateModule.java
index e62bb07..972cd97 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appstate/AppStateModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/appstate/AppStateModule.java
@@ -16,15 +16,18 @@ import com.facebook.react.bridge.WindowFocusChangeListener;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.common.LifecycleState;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;
 import java.util.HashMap;
 import java.util.Map;
 import javax.annotation.Nullable;
 
-@ReactModule(name = NativeAppStateSpec.NAME)
+@ReactModule(name = AppStateModule.NAME)
 public class AppStateModule extends NativeAppStateSpec
     implements LifecycleEventListener, WindowFocusChangeListener {
   public static final String TAG = AppStateModule.class.getSimpleName();
 
+  public static final String NAME = "AppState";
+
   public static final String APP_STATE_ACTIVE = "active";
   public static final String APP_STATE_BACKGROUND = "background";
 
@@ -42,6 +45,11 @@ public class AppStateModule extends NativeAppStateSpec
             : APP_STATE_BACKGROUND);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public Map<String, Object> getTypedExportedConstants() {
     HashMap<String, Object> constants = new HashMap<>();
@@ -95,7 +103,7 @@ public class AppStateModule extends NativeAppStateSpec
     if (!reactApplicationContext.hasActiveReactInstance()) {
       return;
     }
-    reactApplicationContext.emitDeviceEvent(eventName, data);
+    reactApplicationContext.getJSModule(RCTDeviceEventEmitter.class).emit(eventName, data);
   }
 
   private void sendAppStateChangeEvent() {
@@ -116,6 +124,9 @@ public class AppStateModule extends NativeAppStateSpec
   public void invalidate() {
     super.invalidate();
 
-    getReactApplicationContext().removeLifecycleEventListener(this);
+    ReactApplicationContext applicationContext = getReactApplicationContextIfActiveOrWarn();
+    if (applicationContext != null) {
+      applicationContext.removeLifecycleEventListener(this);
+    }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BUCK
index 12033d0..ead9c53 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BUCK
@@ -8,16 +8,19 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_dep("third-party/java/okhttp:okhttp3"),
@@ -26,9 +29,9 @@ rn_android_library(
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
+        react_native_target("jni/react/reactnativeblob:jni"),
         react_native_target("java/com/facebook/react/modules/network:network"),
         react_native_target("java/com/facebook/react/modules/websocket:websocket"),
-        react_native_target("jni/react/reactnativeblob:jni"),
     ],
     exported_deps = [
         react_native_root_target(":FBReactNativeSpec"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobCollector.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobCollector.java
index 51881eb..60e05a4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobCollector.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobCollector.java
@@ -23,7 +23,7 @@ import com.facebook.soloader.SoLoader;
           public void run() {
             JavaScriptContextHolder jsContext = reactContext.getJavaScriptContextHolder();
             // When debugging in chrome the JS context is not available.
-            if (jsContext != null && jsContext.get() != 0) {
+            if (jsContext.get() != 0) {
               nativeInstall(blobModule, jsContext.get());
             }
           }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobModule.java
index d869627..a84a81c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/BlobModule.java
@@ -41,9 +41,11 @@ import okhttp3.RequestBody;
 import okhttp3.ResponseBody;
 import okio.ByteString;
 
-@ReactModule(name = NativeBlobModuleSpec.NAME)
+@ReactModule(name = BlobModule.NAME)
 public class BlobModule extends NativeBlobModuleSpec {
 
+  public static final String NAME = "BlobModule";
+
   private final Map<String, byte[]> mBlobs = new HashMap<>();
 
   private final WebSocketModule.ContentHandler mWebSocketContentHandler =
@@ -147,6 +149,11 @@ public class BlobModule extends NativeBlobModuleSpec {
     BlobCollector.install(getReactApplicationContext(), this);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public @Nullable Map<String, Object> getTypedExportedConstants() {
     // The application can register BlobProvider as a ContentProvider so that blobs are resolvable.
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/FileReaderModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/FileReaderModule.java
index e524790..2449ab6 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/FileReaderModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/blob/FileReaderModule.java
@@ -14,15 +14,21 @@ import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.module.annotations.ReactModule;
 
-@ReactModule(name = NativeFileReaderModuleSpec.NAME)
+@ReactModule(name = FileReaderModule.NAME)
 public class FileReaderModule extends NativeFileReaderModuleSpec {
 
+  public static final String NAME = "FileReaderModule";
   private static final String ERROR_INVALID_BLOB = "ERROR_INVALID_BLOB";
 
   public FileReaderModule(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   private BlobModule getBlobModule(String reason) {
     ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/BUCK
index 3b4dc8a..6e0fc1d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/BUCK
@@ -8,11 +8,13 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
-        react_native_dep("third-party/android/androidx:annotation"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/devsupport:interfaces"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/NativeDevSplitBundleLoaderModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/NativeDevSplitBundleLoaderModule.java
index bd53892..f1a5aef 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/NativeDevSplitBundleLoaderModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/bundleloader/NativeDevSplitBundleLoaderModule.java
@@ -7,6 +7,7 @@
 
 package com.facebook.react.modules.bundleloader;
 
+import androidx.annotation.NonNull;
 import com.facebook.fbreact.specs.NativeDevSplitBundleLoaderSpec;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.bridge.ReactApplicationContext;
@@ -15,8 +16,9 @@ import com.facebook.react.devsupport.interfaces.DevSplitBundleCallback;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.module.annotations.ReactModule;
 
-@ReactModule(name = NativeDevSplitBundleLoaderSpec.NAME)
+@ReactModule(name = NativeDevSplitBundleLoaderModule.NAME)
 public class NativeDevSplitBundleLoaderModule extends NativeDevSplitBundleLoaderSpec {
+  public static final String NAME = "DevSplitBundleLoader";
   private static final String REJECTION_CODE = "E_BUNDLE_LOAD_ERROR";
 
   private final DevSupportManager mDevSupportManager;
@@ -47,4 +49,10 @@ public class NativeDevSplitBundleLoaderModule extends NativeDevSplitBundleLoader
           }
         });
   }
+
+  @NonNull
+  @Override
+  public String getName() {
+    return NAME;
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/camera/ImageStoreManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/camera/ImageStoreManager.java
index 3acd092..f62bed5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/camera/ImageStoreManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/camera/ImageStoreManager.java
@@ -24,15 +24,21 @@ import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 
-@ReactModule(name = NativeImageStoreAndroidSpec.NAME)
+@ReactModule(name = ImageStoreManager.NAME)
 public class ImageStoreManager extends NativeImageStoreAndroidSpec {
 
+  public static final String NAME = "ImageStoreManager";
   private static final int BUFFER_SIZE = 8192;
 
   public ImageStoreManager(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   /**
    * Calculate the base64 representation for an image. The "tag" comes from iOS naming.
    *
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/clipboard/ClipboardModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/clipboard/ClipboardModule.java
index 8491ac3..88ab7b5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/clipboard/ClipboardModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/clipboard/ClipboardModule.java
@@ -15,13 +15,20 @@ import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.module.annotations.ReactModule;
 
 /** A module that allows JS to get/set clipboard contents. */
-@ReactModule(name = NativeClipboardSpec.NAME)
+@ReactModule(name = ClipboardModule.NAME)
 public class ClipboardModule extends NativeClipboardSpec {
 
   public ClipboardModule(ReactApplicationContext context) {
     super(context);
   }
 
+  public static final String NAME = "Clipboard";
+
+  @Override
+  public String getName() {
+    return ClipboardModule.NAME;
+  }
+
   private ClipboardManager getClipboardService() {
     return (ClipboardManager)
         getReactApplicationContext()
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/DeviceEventManagerModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/DeviceEventManagerModule.java
index e8ba782..5422c8d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/DeviceEventManagerModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/DeviceEventManagerModule.java
@@ -20,8 +20,10 @@ import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.module.annotations.ReactModule;
 
 /** Native module that handles device hardware events like hardware back presses. */
-@ReactModule(name = NativeDeviceEventManagerSpec.NAME)
+@ReactModule(name = DeviceEventManagerModule.NAME)
 public class DeviceEventManagerModule extends NativeDeviceEventManagerSpec {
+  public static final String NAME = "DeviceEventManager";
+
   @DoNotStrip
   public interface RCTDeviceEventEmitter extends JavaScriptModule {
     void emit(@NonNull String eventName, @Nullable Object data);
@@ -47,7 +49,9 @@ public class DeviceEventManagerModule extends NativeDeviceEventManagerSpec {
     ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
 
     if (reactApplicationContext != null) {
-      reactApplicationContext.emitDeviceEvent("hardwareBackPress", null);
+      reactApplicationContext
+          .getJSModule(RCTDeviceEventEmitter.class)
+          .emit("hardwareBackPress", null);
     }
   }
 
@@ -58,7 +62,7 @@ public class DeviceEventManagerModule extends NativeDeviceEventManagerSpec {
     if (reactApplicationContext != null) {
       WritableMap map = Arguments.createMap();
       map.putString("url", uri.toString());
-      reactApplicationContext.emitDeviceEvent("url", map);
+      reactApplicationContext.getJSModule(RCTDeviceEventEmitter.class).emit("url", map);
     }
   }
 
@@ -73,4 +77,9 @@ public class DeviceEventManagerModule extends NativeDeviceEventManagerSpec {
     // teardown is a noop.
     getReactApplicationContext().runOnUiQueueThread(mInvokeDefaultBackPressRunnable);
   }
+
+  @Override
+  public String getName() {
+    return "DeviceEventManager";
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ExceptionsManagerModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ExceptionsManagerModule.java
index afe1c18..8213e42 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ExceptionsManagerModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ExceptionsManagerModule.java
@@ -20,9 +20,11 @@ import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.util.ExceptionDataHelper;
 import com.facebook.react.util.JSStackTrace;
 
-@ReactModule(name = NativeExceptionsManagerSpec.NAME)
+@ReactModule(name = ExceptionsManagerModule.NAME)
 public class ExceptionsManagerModule extends NativeExceptionsManagerSpec {
 
+  public static final String NAME = "ExceptionsManager";
+
   private final DevSupportManager mDevSupportManager;
 
   public ExceptionsManagerModule(DevSupportManager devSupportManager) {
@@ -30,6 +32,11 @@ public class ExceptionsManagerModule extends NativeExceptionsManagerSpec {
     mDevSupportManager = devSupportManager;
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void reportFatalException(String message, ReadableArray stack, double idDouble) {
     int id = (int) idDouble;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/HeadlessJsTaskSupportModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/HeadlessJsTaskSupportModule.java
index 2f64909..59597c7 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/HeadlessJsTaskSupportModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/HeadlessJsTaskSupportModule.java
@@ -18,13 +18,20 @@ import com.facebook.react.module.annotations.ReactModule;
  * Simple native module that allows JS to notify native of having completed some task work, so that
  * it can e.g. release any resources, stop timers etc.
  */
-@ReactModule(name = NativeHeadlessJsTaskSupportSpec.NAME)
+@ReactModule(name = HeadlessJsTaskSupportModule.NAME)
 public class HeadlessJsTaskSupportModule extends NativeHeadlessJsTaskSupportSpec {
 
+  public static final String NAME = "HeadlessJsTaskSupport";
+
   public HeadlessJsTaskSupportModule(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void notifyTaskRetry(double taskIdDouble, Promise promise) {
     int taskId = (int) taskIdDouble;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ReactChoreographer.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ReactChoreographer.java
index 84cd530..0accdd2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ReactChoreographer.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/ReactChoreographer.java
@@ -44,7 +44,7 @@ public class ReactChoreographer {
 
     private final int mOrder;
 
-    CallbackType(int order) {
+    private CallbackType(int order) {
       mOrder = order;
     }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/TimingModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/TimingModule.java
index 73149ef..52bbd3f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/TimingModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/core/TimingModule.java
@@ -18,7 +18,7 @@ import com.facebook.react.jstasks.HeadlessJsTaskEventListener;
 import com.facebook.react.module.annotations.ReactModule;
 
 /** Native module for JS timer execution. Timers fire on frame boundaries. */
-@ReactModule(name = NativeTimingSpec.NAME)
+@ReactModule(name = TimingModule.NAME)
 public final class TimingModule extends NativeTimingSpec
     implements LifecycleEventListener, HeadlessJsTaskEventListener {
 
@@ -51,6 +51,8 @@ public final class TimingModule extends NativeTimingSpec
     }
   }
 
+  public static final String NAME = "Timing";
+
   private final JavaTimerManager mJavaTimerManager;
 
   public TimingModule(ReactApplicationContext reactContext, DevSupportManager devSupportManager) {
@@ -72,6 +74,11 @@ public final class TimingModule extends NativeTimingSpec
     headlessJsTaskContext.addTaskEventListener(this);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void createTimer(
       final double callbackIDDouble,
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/AnimationsDebugModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/AnimationsDebugModule.java
index baa75f5..6f36af8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/AnimationsDebugModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/AnimationsDebugModule.java
@@ -22,9 +22,11 @@ import java.util.Locale;
  * Module that records debug information during transitions (animated navigation events such as
  * going from one screen to another).
  */
-@ReactModule(name = NativeAnimationsDebugModuleSpec.NAME)
+@ReactModule(name = AnimationsDebugModule.NAME)
 public class AnimationsDebugModule extends NativeAnimationsDebugModuleSpec {
 
+  protected static final String NAME = "AnimationsDebugModule";
+
   private @Nullable FpsDebugFrameCallback mFrameCallback;
   private @Nullable final DeveloperSettings mCatalystSettings;
 
@@ -34,6 +36,11 @@ public class AnimationsDebugModule extends NativeAnimationsDebugModuleSpec {
     mCatalystSettings = catalystSettings;
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void startRecordingFps() {
     if (mCatalystSettings == null || !mCatalystSettings.isAnimationFpsDebugEnabled()) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/DevSettingsModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/DevSettingsModule.java
index ede03d5..a6f9325 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/DevSettingsModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/DevSettingsModule.java
@@ -15,13 +15,16 @@ import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.devsupport.interfaces.DevOptionHandler;
 import com.facebook.react.devsupport.interfaces.DevSupportManager;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;
 
 /**
  * Module that exposes the URL to the source code map (used for exception stack trace parsing) to JS
  */
-@ReactModule(name = NativeDevSettingsSpec.NAME)
+@ReactModule(name = DevSettingsModule.NAME)
 public class DevSettingsModule extends NativeDevSettingsSpec {
 
+  public static final String NAME = "DevSettings";
+
   private final DevSupportManager mDevSupportManager;
 
   public DevSettingsModule(
@@ -31,6 +34,11 @@ public class DevSettingsModule extends NativeDevSettingsSpec {
     mDevSupportManager = devSupportManager;
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void reload() {
     if (mDevSupportManager.getDevSupportEnabled()) {
@@ -88,7 +96,9 @@ public class DevSettingsModule extends NativeDevSettingsSpec {
                 getReactApplicationContextIfActiveOrWarn();
 
             if (reactApplicationContext != null) {
-              reactApplicationContext.emitDeviceEvent("didPressMenuItem", data);
+              reactApplicationContext
+                  .getJSModule(RCTDeviceEventEmitter.class)
+                  .emit("didPressMenuItem", data);
             }
           }
         });
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/SourceCodeModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/SourceCodeModule.java
index 137791b..a274a64 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/SourceCodeModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/debug/SourceCodeModule.java
@@ -17,13 +17,20 @@ import java.util.Map;
 /**
  * Module that exposes the URL to the source code map (used for exception stack trace parsing) to JS
  */
-@ReactModule(name = NativeSourceCodeSpec.NAME)
+@ReactModule(name = SourceCodeModule.NAME)
 public class SourceCodeModule extends NativeSourceCodeSpec {
 
+  public static final String NAME = "SourceCode";
+
   public SourceCodeModule(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   protected Map<String, Object> getTypedExportedConstants() {
     HashMap<String, Object> constants = new HashMap<>();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/deviceinfo/DeviceInfoModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/deviceinfo/DeviceInfoModule.java
index e8ff3bb..9ee7adf 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/deviceinfo/DeviceInfoModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/deviceinfo/DeviceInfoModule.java
@@ -17,16 +17,18 @@ import com.facebook.react.bridge.ReactSoftExceptionLogger;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 import com.facebook.react.uimanager.DisplayMetricsHolder;
 import java.util.HashMap;
 import java.util.Map;
 
 /** Module that exposes Android Constants to JS. */
-@ReactModule(name = NativeDeviceInfoSpec.NAME)
+@ReactModule(name = DeviceInfoModule.NAME)
 public class DeviceInfoModule extends NativeDeviceInfoSpec implements LifecycleEventListener {
 
-  private final @Nullable ReactApplicationContext mReactApplicationContext;
+  public static final String NAME = "DeviceInfo";
 
+  private @Nullable ReactApplicationContext mReactApplicationContext;
   private float mFontScale;
   private @Nullable ReadableMap mPreviousDisplayMetrics;
 
@@ -45,6 +47,11 @@ public class DeviceInfoModule extends NativeDeviceInfoSpec implements LifecycleE
     mFontScale = context.getResources().getConfiguration().fontScale;
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public @Nullable Map<String, Object> getTypedExportedConstants() {
     WritableMap displayMetrics = DisplayMetricsHolder.getDisplayMetricsWritableMap(mFontScale);
@@ -88,7 +95,9 @@ public class DeviceInfoModule extends NativeDeviceInfoSpec implements LifecycleE
         mPreviousDisplayMetrics = displayMetrics.copy();
       } else if (!displayMetrics.equals(mPreviousDisplayMetrics)) {
         mPreviousDisplayMetrics = displayMetrics.copy();
-        mReactApplicationContext.emitDeviceEvent("didUpdateDimensions", displayMetrics);
+        mReactApplicationContext
+            .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+            .emit("didUpdateDimensions", displayMetrics);
       }
     } else {
       ReactSoftExceptionLogger.logSoftException(
@@ -102,8 +111,9 @@ public class DeviceInfoModule extends NativeDeviceInfoSpec implements LifecycleE
   public void invalidate() {
     super.invalidate();
 
-    if (mReactApplicationContext != null) {
-      mReactApplicationContext.removeLifecycleEventListener(this);
+    ReactApplicationContext applicationContext = getReactApplicationContextIfActiveOrWarn();
+    if (applicationContext != null) {
+      applicationContext.removeLifecycleEventListener(this);
     }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devloading/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devloading/BUCK
deleted file mode 100644
index 3df9b66..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devloading/BUCK
+++ /dev/null
@@ -1,25 +0,0 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "react_native_dep", "react_native_root_target", "react_native_target", "rn_android_library")
-
-rn_android_library(
-    name = "devloading",
-    srcs = glob(["**/*.java"]),
-    autoglob = False,
-    labels = [
-        "pfh:ReactNative_CommonInfrastructurePlaceholder",
-    ],
-    language = "JAVA",
-    visibility = [
-        "PUBLIC",
-    ],
-    deps = [
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/java/infer-annotations:infer-annotations"),
-        react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_target("java/com/facebook/react/bridge:bridge"),
-        react_native_target("java/com/facebook/react/common:common"),
-        react_native_target("java/com/facebook/react/devsupport:devsupport"),
-        react_native_target("java/com/facebook/react/devsupport:interfaces"),
-        react_native_target("java/com/facebook/react/module/annotations:annotations"),
-    ],
-    exported_deps = [react_native_root_target(":FBReactNativeSpec")],
-)
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devloading/DevLoadingModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devloading/DevLoadingModule.java
deleted file mode 100644
index 4eaa3f2..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devloading/DevLoadingModule.java
+++ /dev/null
@@ -1,67 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.modules.devloading;
-
-import androidx.annotation.Nullable;
-import com.facebook.fbreact.specs.NativeDevLoadingViewSpec;
-import com.facebook.react.bridge.JSExceptionHandler;
-import com.facebook.react.bridge.NativeModule;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.bridge.UiThreadUtil;
-import com.facebook.react.devsupport.BridgeDevSupportManager;
-import com.facebook.react.devsupport.DefaultDevLoadingViewImplementation;
-import com.facebook.react.devsupport.interfaces.DevLoadingViewManager;
-import com.facebook.react.module.annotations.ReactModule;
-
-/** {@link NativeModule} that allows JS to show dev loading view. */
-@ReactModule(name = NativeDevLoadingViewSpec.NAME)
-public class DevLoadingModule extends NativeDevLoadingViewSpec {
-
-  private final JSExceptionHandler mJSExceptionHandler;
-  private @Nullable DevLoadingViewManager mDevLoadingViewManager;
-
-  public DevLoadingModule(ReactApplicationContext reactContext) {
-    super(reactContext);
-    mJSExceptionHandler = reactContext.getJSExceptionHandler();
-    if (mJSExceptionHandler != null && mJSExceptionHandler instanceof BridgeDevSupportManager) {
-      mDevLoadingViewManager =
-          ((BridgeDevSupportManager) mJSExceptionHandler).getDevLoadingViewManager();
-      mDevLoadingViewManager =
-          mDevLoadingViewManager != null
-              ? mDevLoadingViewManager
-              : new DefaultDevLoadingViewImplementation(
-                  ((BridgeDevSupportManager) mJSExceptionHandler).getReactInstanceManagerHelper());
-    }
-  }
-
-  @Override
-  public void showMessage(final String message, final Double color, final Double backgroundColor) {
-
-    UiThreadUtil.runOnUiThread(
-        new Runnable() {
-          @Override
-          public void run() {
-            mDevLoadingViewManager.showMessage(message);
-          }
-        });
-  }
-
-  @Override
-  public void hide() {
-
-    UiThreadUtil.runOnUiThread(
-        new Runnable() {
-          @Override
-          public void run() {
-            if (mDevLoadingViewManager != null) {
-              mDevLoadingViewManager.hide();
-            }
-          }
-        });
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devtoolssettings/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devtoolssettings/BUCK
deleted file mode 100644
index 3778bce..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devtoolssettings/BUCK
+++ /dev/null
@@ -1,25 +0,0 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "react_native_dep", "react_native_root_target", "react_native_target", "rn_android_library")
-
-rn_android_library(
-    name = "devtoolssettings",
-    srcs = glob(["**/*.java"]),
-    autoglob = False,
-    labels = [
-        "pfh:ReactNative_CommonInfrastructurePlaceholder",
-    ],
-    language = "JAVA",
-    visibility = [
-        "PUBLIC",
-    ],
-    deps = [
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/java/infer-annotations:infer-annotations"),
-        react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_target("java/com/facebook/react/bridge:bridge"),
-        react_native_target("java/com/facebook/react/common:common"),
-        react_native_target("java/com/facebook/react/module/annotations:annotations"),
-        react_native_target("java/com/facebook/react/modules/core:core"),
-    ],
-    exported_deps = [react_native_root_target(":FBReactNativeSpec")],
-)
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devtoolssettings/DevToolsSettingsManagerModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devtoolssettings/DevToolsSettingsManagerModule.java
deleted file mode 100644
index 00e56e2..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/devtoolssettings/DevToolsSettingsManagerModule.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.modules.devtoolssettings;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.content.SharedPreferences.Editor;
-import androidx.annotation.Nullable;
-import com.facebook.fbreact.specs.NativeDevToolsSettingsManagerSpec;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.module.annotations.ReactModule;
-
-@ReactModule(name = NativeDevToolsSettingsManagerSpec.NAME)
-public class DevToolsSettingsManagerModule extends NativeDevToolsSettingsManagerSpec {
-  private static final String SHARED_PREFERENCES_PREFIX = "ReactNative__DevToolsSettings";
-  private static final String KEY_CONSOLE_PATCH_SETTINGS = "ConsolePatchSettings";
-  private static final String KEY_PROFILING_SETTINGS = "ProfilingSettings";
-
-  private final SharedPreferences mSharedPreferences;
-
-  public DevToolsSettingsManagerModule(ReactApplicationContext reactContext) {
-    super(reactContext);
-    mSharedPreferences =
-        reactContext.getSharedPreferences(SHARED_PREFERENCES_PREFIX, Context.MODE_PRIVATE);
-  }
-
-  @Override
-  public @Nullable String getConsolePatchSettings() {
-    return mSharedPreferences.getString(KEY_CONSOLE_PATCH_SETTINGS, null);
-  }
-
-  @Override
-  public void setConsolePatchSettings(String newSettings) {
-    Editor editor = mSharedPreferences.edit();
-    editor.putString(KEY_CONSOLE_PATCH_SETTINGS, newSettings);
-    editor.apply();
-  }
-
-  @Override
-  public @Nullable String getProfilingSettings() {
-    return mSharedPreferences.getString(KEY_PROFILING_SETTINGS, null);
-  }
-
-  @Override
-  public void setProfilingSettings(String newSettings) {
-    mSharedPreferences.edit().putString(KEY_PROFILING_SETTINGS, newSettings).apply();
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/BUCK
index 0030fa6..926bd99 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/BUCK
@@ -8,13 +8,19 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/DialogModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/DialogModule.java
index d99f152..2cb3f1e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/DialogModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/dialog/DialogModule.java
@@ -29,12 +29,14 @@ import com.facebook.react.common.MapBuilder;
 import com.facebook.react.module.annotations.ReactModule;
 import java.util.Map;
 
-@ReactModule(name = NativeDialogManagerAndroidSpec.NAME)
+@ReactModule(name = DialogModule.NAME)
 public class DialogModule extends NativeDialogManagerAndroidSpec implements LifecycleEventListener {
 
   /* package */ static final String FRAGMENT_TAG =
       "com.facebook.catalyst.react.dialog.DialogModule";
 
+  public static final String NAME = "DialogManagerAndroid";
+
   /* package */ static final String ACTION_BUTTON_CLICKED = "buttonClicked";
   /* package */ static final String ACTION_DISMISSED = "dismissed";
   /* package */ static final String KEY_TITLE = "title";
@@ -59,6 +61,11 @@ public class DialogModule extends NativeDialogManagerAndroidSpec implements Life
     super(reactContext);
   }
 
+  @Override
+  public @NonNull String getName() {
+    return NAME;
+  }
+
   private class FragmentManagerHelper {
     private final @NonNull FragmentManager mFragmentManager;
 
@@ -234,7 +241,11 @@ public class DialogModule extends NativeDialogManagerAndroidSpec implements Life
 
   @Override
   public void invalidate() {
-    getReactApplicationContext().removeLifecycleEventListener(this);
     super.invalidate();
+
+    ReactApplicationContext applicationContext = getReactApplicationContextIfActiveOrWarn();
+    if (applicationContext != null) {
+      applicationContext.removeLifecycleEventListener(this);
+    }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fabric/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fabric/BUCK
index b0e1db4..6366cd9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fabric/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fabric/BUCK
@@ -8,6 +8,8 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+    ],
     visibility = [
         "PUBLIC",
     ],
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/BUCK
index d54fe72..e274463 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/BUCK
@@ -8,6 +8,13 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
@@ -17,16 +24,12 @@ rn_android_library(
         react_native_dep("libraries/fresco/fresco-react-native:fbcore"),
         react_native_dep("libraries/fresco/fresco-react-native:fresco-drawee"),
         react_native_dep("libraries/fresco/fresco-react-native:fresco-react-native"),
-        react_native_dep("libraries/fresco/fresco-react-native:imagepipeline-okhttp3"),
         react_native_dep("libraries/fresco/fresco-react-native:imagepipeline"),
+        react_native_dep("libraries/fresco/fresco-react-native:imagepipeline-okhttp3"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_dep("third-party/java/okhttp:okhttp3-urlconnection"),
         react_native_dep("third-party/java/okhttp:okhttp3"),
+        react_native_dep("third-party/java/okhttp:okhttp3-urlconnection"),
         react_native_dep("third-party/java/okio:okio"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/FrescoModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/FrescoModule.java
index 3ac33b5..b47c4d1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/FrescoModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/fresco/FrescoModule.java
@@ -7,6 +7,7 @@
 
 package com.facebook.react.modules.fresco;
 
+import android.content.Context;
 import androidx.annotation.Nullable;
 import com.facebook.common.logging.FLog;
 import com.facebook.drawee.backends.pipeline.Fresco;
@@ -76,31 +77,9 @@ public class FrescoModule extends ReactContextBaseJavaModule
    * @param reactContext the context to use
    */
   public FrescoModule(
-      ReactApplicationContext reactContext,
-      @Nullable ImagePipeline imagePipeline,
-      boolean clearOnDestroy) {
-    this(reactContext, imagePipeline, clearOnDestroy, false);
-  }
-
-  /**
-   * Create a new Fresco module with a default configuration (or the previously given configuration
-   * via {@link #FrescoModule(ReactApplicationContext, boolean, ImagePipelineConfig)}.
-   *
-   * @param clearOnDestroy whether to clear the memory cache in onHostDestroy: this should be {@code
-   *     true} for pure RN apps and {@code false} for apps that use Fresco outside of RN as well
-   * @param reactContext the context to use
-   * @param hasBeenInitializedExternally whether Fresco has already been initialized
-   */
-  public FrescoModule(
-      ReactApplicationContext reactContext,
-      @Nullable ImagePipeline imagePipeline,
-      boolean clearOnDestroy,
-      boolean hasBeenInitializedExternally) {
+      ReactApplicationContext reactContext, ImagePipeline imagePipeline, boolean clearOnDestroy) {
     this(reactContext, clearOnDestroy);
     mImagePipeline = imagePipeline;
-    if (hasBeenInitializedExternally) {
-      sHasBeenInitialized = true;
-    }
   }
 
   /**
@@ -126,14 +105,13 @@ public class FrescoModule extends ReactContextBaseJavaModule
   @Override
   public void initialize() {
     super.initialize();
-
-    ReactApplicationContext reactContext = getReactApplicationContext();
-    reactContext.addLifecycleEventListener(this);
+    getReactApplicationContext().addLifecycleEventListener(this);
     if (!hasBeenInitialized()) {
       if (mConfig == null) {
-        mConfig = getDefaultConfig(reactContext);
+        mConfig = getDefaultConfig(getReactApplicationContext());
       }
-      Fresco.initialize(reactContext.getApplicationContext(), mConfig);
+      Context context = getReactApplicationContext().getApplicationContext();
+      Fresco.initialize(context, mConfig);
       sHasBeenInitialized = true;
     } else if (mConfig != null) {
       FLog.w(
@@ -219,7 +197,11 @@ public class FrescoModule extends ReactContextBaseJavaModule
 
   @Override
   public void invalidate() {
-    getReactApplicationContext().removeLifecycleEventListener(this);
     super.invalidate();
+
+    ReactApplicationContext applicationContext = getReactApplicationContextIfActiveOrWarn();
+    if (applicationContext != null) {
+      applicationContext.removeLifecycleEventListener(this);
+    }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/BUCK
index 7a4d6e0..f101626 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/BUCK
@@ -8,19 +8,22 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
-    visibility = [
-        "PUBLIC",
-    ],
-    deps = [
+    provided_deps = [
         react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
+    visibility = [
+        "PUBLIC",
+    ],
+    deps = [
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_root_target(":FBReactNativeSpec"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
+        react_native_root_target(":FBReactNativeSpec"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/I18nManagerModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/I18nManagerModule.java
index 0ea640a..3f7aa3f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/I18nManagerModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/i18nmanager/I18nManagerModule.java
@@ -18,14 +18,22 @@ import java.util.Locale;
 import java.util.Map;
 
 /** {@link NativeModule} that allows JS to set allowRTL and get isRTL status. */
-@ReactModule(name = NativeI18nManagerSpec.NAME)
+@ReactModule(name = I18nManagerModule.NAME)
 public class I18nManagerModule extends NativeI18nManagerSpec {
+
+  public static final String NAME = "I18nManager";
+
   private final I18nUtil sharedI18nUtilInstance = I18nUtil.getInstance();
 
   public I18nManagerModule(ReactApplicationContext context) {
     super(context);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public Map<String, Object> getTypedExportedConstants() {
     final Context context = getReactApplicationContext();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/image/ImageLoaderModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/image/ImageLoaderModule.java
index bbc6bb0..ae97d9f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/image/ImageLoaderModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/image/ImageLoaderModule.java
@@ -10,6 +10,7 @@ package com.facebook.react.modules.image;
 import android.net.Uri;
 import android.text.TextUtils;
 import android.util.SparseArray;
+import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import com.facebook.common.executors.CallerThreadExecutor;
 import com.facebook.common.references.CloseableReference;
@@ -36,13 +37,14 @@ import com.facebook.react.modules.fresco.ReactNetworkImageRequest;
 import com.facebook.react.views.image.ReactCallerContextFactory;
 import com.facebook.react.views.imagehelper.ImageSource;
 
-@ReactModule(name = NativeImageLoaderAndroidSpec.NAME)
+@ReactModule(name = ImageLoaderModule.NAME)
 public class ImageLoaderModule extends NativeImageLoaderAndroidSpec
     implements LifecycleEventListener {
 
   private static final String ERROR_INVALID_URI = "E_INVALID_URI";
   private static final String ERROR_PREFETCH_FAILURE = "E_PREFETCH_FAILURE";
   private static final String ERROR_GET_SIZE_FAILURE = "E_GET_SIZE_FAILURE";
+  public static final String NAME = "ImageLoader";
 
   private @Nullable final Object mCallerContext;
   private final Object mEnqueuedRequestMonitor = new Object();
@@ -76,6 +78,12 @@ public class ImageLoaderModule extends NativeImageLoaderAndroidSpec
         : mCallerContext;
   }
 
+  @Override
+  @NonNull
+  public String getName() {
+    return NAME;
+  }
+
   private ImagePipeline getImagePipeline() {
     return mImagePipeline != null ? mImagePipeline : Fresco.getImagePipeline();
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/intent/IntentModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/intent/IntentModule.java
index f3efa6c..7b532d4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/intent/IntentModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/intent/IntentModule.java
@@ -17,7 +17,6 @@ import android.provider.Settings;
 import androidx.annotation.Nullable;
 import com.facebook.fbreact.specs.NativeIntentAndroidSpec;
 import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
-import com.facebook.react.bridge.LifecycleEventListener;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReadableArray;
@@ -26,10 +25,10 @@ import com.facebook.react.bridge.ReadableType;
 import com.facebook.react.module.annotations.ReactModule;
 
 /** Intent module. Launch other activities or open URLs. */
-@ReactModule(name = NativeIntentAndroidSpec.NAME)
+@ReactModule(name = IntentModule.NAME)
 public class IntentModule extends NativeIntentAndroidSpec {
 
-  private @Nullable LifecycleEventListener mInitialURLListener = null;
+  public static final String NAME = "IntentAndroid";
 
   private static final String EXTRA_MAP_KEY_FOR_VALUE = "value";
 
@@ -38,12 +37,8 @@ public class IntentModule extends NativeIntentAndroidSpec {
   }
 
   @Override
-  public void invalidate() {
-    if (mInitialURLListener != null) {
-      getReactApplicationContext().removeLifecycleEventListener(mInitialURLListener);
-      mInitialURLListener = null;
-    }
-    super.invalidate();
+  public String getName() {
+    return NAME;
   }
 
   /**
@@ -55,20 +50,18 @@ public class IntentModule extends NativeIntentAndroidSpec {
   public void getInitialURL(Promise promise) {
     try {
       Activity currentActivity = getCurrentActivity();
-      if (currentActivity == null) {
-        waitForActivityAndGetInitialURL(promise);
-        return;
-      }
+      String initialURL = null;
 
-      Intent intent = currentActivity.getIntent();
-      String action = intent.getAction();
-      Uri uri = intent.getData();
+      if (currentActivity != null) {
+        Intent intent = currentActivity.getIntent();
+        String action = intent.getAction();
+        Uri uri = intent.getData();
 
-      String initialURL = null;
-      if (uri != null
-          && (Intent.ACTION_VIEW.equals(action)
-              || NfcAdapter.ACTION_NDEF_DISCOVERED.equals(action))) {
-        initialURL = uri.toString();
+        if (uri != null
+            && (Intent.ACTION_VIEW.equals(action)
+                || NfcAdapter.ACTION_NDEF_DISCOVERED.equals(action))) {
+          initialURL = uri.toString();
+        }
       }
 
       promise.resolve(initialURL);
@@ -79,33 +72,6 @@ public class IntentModule extends NativeIntentAndroidSpec {
     }
   }
 
-  private void waitForActivityAndGetInitialURL(final Promise promise) {
-    if (mInitialURLListener != null) {
-      promise.reject(
-          new IllegalStateException(
-              "Cannot await activity from more than one call to getInitialURL"));
-      return;
-    }
-
-    mInitialURLListener =
-        new LifecycleEventListener() {
-          @Override
-          public void onHostResume() {
-            getInitialURL(promise);
-
-            getReactApplicationContext().removeLifecycleEventListener(this);
-            mInitialURLListener = null;
-          }
-
-          @Override
-          public void onHostPause() {}
-
-          @Override
-          public void onHostDestroy() {}
-        };
-    getReactApplicationContext().addLifecycleEventListener(mInitialURLListener);
-  }
-
   /**
    * Starts a corresponding external activity for the given URL.
    *
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/BUCK
index 05173e9..c4bb1d9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/BUCK
@@ -8,19 +8,22 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_dep("third-party/java/okhttp:okhttp3-urlconnection"),
         react_native_dep("third-party/java/okhttp:okhttp3"),
+        react_native_dep("third-party/java/okhttp:okhttp3-urlconnection"),
         react_native_dep("third-party/java/okio:okio"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/NetworkingModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/NetworkingModule.java
index 1c4b373..f80b1c6 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/NetworkingModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/NetworkingModule.java
@@ -23,6 +23,7 @@ import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.common.StandardCharsets;
 import com.facebook.react.common.network.OkHttpCallUtil;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.charset.Charset;
@@ -50,7 +51,7 @@ import okio.GzipSource;
 import okio.Okio;
 
 /** Implements the XMLHttpRequest JavaScript interface. */
-@ReactModule(name = NativeNetworkingAndroidSpec.NAME)
+@ReactModule(name = NetworkingModule.NAME)
 public final class NetworkingModule extends NativeNetworkingAndroidSpec {
 
   /**
@@ -83,7 +84,9 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     WritableMap toResponseData(ResponseBody body) throws IOException;
   }
 
-  private static final String TAG = NativeNetworkingAndroidSpec.NAME;
+  public static final String NAME = "Networking";
+
+  private static final String TAG = "NetworkingModule";
   private static final String CONTENT_ENCODING_HEADER_NAME = "content-encoding";
   private static final String CONTENT_TYPE_HEADER_NAME = "content-type";
   private static final String REQUEST_BODY_KEY_STRING = "string";
@@ -106,7 +109,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
   private final List<ResponseHandler> mResponseHandlers = new ArrayList<>();
   private boolean mShuttingDown;
 
-  public NetworkingModule(
+  /* package */ NetworkingModule(
       ReactApplicationContext reactContext,
       @Nullable String defaultUserAgent,
       OkHttpClient client,
@@ -182,6 +185,11 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     mCookieJarContainer.setCookieJar(new JavaNetCookieJar(mCookieHandler));
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void invalidate() {
     mShuttingDown = true;
@@ -245,9 +253,10 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
           withCredentials);
     } catch (Throwable th) {
       FLog.e(TAG, "Failed to send url request: " + url, th);
-
-      ResponseUtil.onRequestError(
-          getReactApplicationContextIfActiveOrWarn(), requestId, th.getMessage(), th);
+      final RCTDeviceEventEmitter eventEmitter = getEventEmitter("sendRequest error");
+      if (eventEmitter != null) {
+        ResponseUtil.onRequestError(eventEmitter, requestId, th.getMessage(), th);
+      }
     }
   }
 
@@ -262,8 +271,8 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
       final boolean useIncrementalUpdates,
       int timeout,
       boolean withCredentials) {
-    final ReactApplicationContext reactApplicationContext =
-        getReactApplicationContextIfActiveOrWarn();
+    final RCTDeviceEventEmitter eventEmitter = getEventEmitter("sendRequestInternal");
+
     try {
       Uri uri = Uri.parse(url);
 
@@ -271,13 +280,13 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
       for (UriHandler handler : mUriHandlers) {
         if (handler.supports(uri, responseType)) {
           WritableMap res = handler.fetch(uri);
-          ResponseUtil.onDataReceived(reactApplicationContext, requestId, res);
-          ResponseUtil.onRequestSuccess(reactApplicationContext, requestId);
+          ResponseUtil.onDataReceived(eventEmitter, requestId, res);
+          ResponseUtil.onRequestSuccess(eventEmitter, requestId);
           return;
         }
       }
     } catch (IOException e) {
-      ResponseUtil.onRequestError(reactApplicationContext, requestId, e.getMessage(), e);
+      ResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);
       return;
     }
 
@@ -285,7 +294,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     try {
       requestBuilder = new Request.Builder().url(url);
     } catch (Exception e) {
-      ResponseUtil.onRequestError(reactApplicationContext, requestId, e.getMessage(), null);
+      ResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), null);
       return;
     }
 
@@ -329,7 +338,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
                             return;
                           }
                           ResponseUtil.onDataReceivedProgress(
-                              reactApplicationContext, requestId, bytesWritten, contentLength);
+                              eventEmitter, requestId, bytesWritten, contentLength);
                           last = now;
                         }
                       });
@@ -349,8 +358,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
 
     Headers requestHeaders = extractHeaders(headers, data);
     if (requestHeaders == null) {
-      ResponseUtil.onRequestError(
-          reactApplicationContext, requestId, "Unrecognized headers format", null);
+      ResponseUtil.onRequestError(eventEmitter, requestId, "Unrecognized headers format", null);
       return;
     }
     String contentType = requestHeaders.get(CONTENT_TYPE_HEADER_NAME);
@@ -378,10 +386,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     } else if (data.hasKey(REQUEST_BODY_KEY_STRING)) {
       if (contentType == null) {
         ResponseUtil.onRequestError(
-            reactApplicationContext,
-            requestId,
-            "Payload is set but no content-type header specified",
-            null);
+            eventEmitter, requestId, "Payload is set but no content-type header specified", null);
         return;
       }
       String body = data.getString(REQUEST_BODY_KEY_STRING);
@@ -389,8 +394,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
       if (RequestBodyUtil.isGzipEncoding(contentEncoding)) {
         requestBody = RequestBodyUtil.createGzip(contentMediaType, body);
         if (requestBody == null) {
-          ResponseUtil.onRequestError(
-              reactApplicationContext, requestId, "Failed to gzip request body", null);
+          ResponseUtil.onRequestError(eventEmitter, requestId, "Failed to gzip request body", null);
           return;
         }
       } else {
@@ -406,10 +410,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     } else if (data.hasKey(REQUEST_BODY_KEY_BASE64)) {
       if (contentType == null) {
         ResponseUtil.onRequestError(
-            reactApplicationContext,
-            requestId,
-            "Payload is set but no content-type header specified",
-            null);
+            eventEmitter, requestId, "Payload is set but no content-type header specified", null);
         return;
       }
       String base64String = data.getString(REQUEST_BODY_KEY_BASE64);
@@ -418,10 +419,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     } else if (data.hasKey(REQUEST_BODY_KEY_URI)) {
       if (contentType == null) {
         ResponseUtil.onRequestError(
-            reactApplicationContext,
-            requestId,
-            "Payload is set but no content-type header specified",
-            null);
+            eventEmitter, requestId, "Payload is set but no content-type header specified", null);
         return;
       }
       String uri = data.getString(REQUEST_BODY_KEY_URI);
@@ -429,7 +427,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
           RequestBodyUtil.getFileInputStream(getReactApplicationContext(), uri);
       if (fileInputStream == null) {
         ResponseUtil.onRequestError(
-            reactApplicationContext, requestId, "Could not retrieve file for uri " + uri, null);
+            eventEmitter, requestId, "Could not retrieve file for uri " + uri, null);
         return;
       }
       requestBody = RequestBodyUtil.create(MediaType.parse(contentType), fileInputStream);
@@ -449,7 +447,8 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
       requestBody = RequestBodyUtil.getEmptyBody(method);
     }
 
-    requestBuilder.method(method, wrapRequestBodyWithProgressEmitter(requestBody, requestId));
+    requestBuilder.method(
+        method, wrapRequestBodyWithProgressEmitter(requestBody, eventEmitter, requestId));
 
     addRequest(requestId);
     client
@@ -466,7 +465,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
                     e.getMessage() != null
                         ? e.getMessage()
                         : "Error while executing request: " + e.getClass().getSimpleName();
-                ResponseUtil.onRequestError(reactApplicationContext, requestId, errorMessage, e);
+                ResponseUtil.onRequestError(eventEmitter, requestId, errorMessage, e);
               }
 
               @Override
@@ -477,7 +476,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
                 removeRequest(requestId);
                 // Before we touch the body send headers to JS
                 ResponseUtil.onResponseReceived(
-                    reactApplicationContext,
+                    eventEmitter,
                     requestId,
                     response.code(),
                     translateHeaders(response.headers()),
@@ -514,8 +513,8 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
                   for (ResponseHandler handler : mResponseHandlers) {
                     if (handler.supports(responseType)) {
                       WritableMap res = handler.toResponseData(responseBody);
-                      ResponseUtil.onDataReceived(reactApplicationContext, requestId, res);
-                      ResponseUtil.onRequestSuccess(reactApplicationContext, requestId);
+                      ResponseUtil.onDataReceived(eventEmitter, requestId, res);
+                      ResponseUtil.onRequestSuccess(eventEmitter, requestId);
                       return;
                     }
                   }
@@ -524,8 +523,8 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
                   // response,
                   // periodically send response data updates to JS.
                   if (useIncrementalUpdates && responseType.equals("text")) {
-                    readWithProgress(requestId, responseBody);
-                    ResponseUtil.onRequestSuccess(reactApplicationContext, requestId);
+                    readWithProgress(eventEmitter, requestId, responseBody);
+                    ResponseUtil.onRequestSuccess(eventEmitter, requestId);
                     return;
                   }
 
@@ -542,30 +541,28 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
                         // Javascript layer.
                         // Introduced to fix issue #7463.
                       } else {
-                        ResponseUtil.onRequestError(
-                            reactApplicationContext, requestId, e.getMessage(), e);
+                        ResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);
                       }
                     }
                   } else if (responseType.equals("base64")) {
                     responseString = Base64.encodeToString(responseBody.bytes(), Base64.NO_WRAP);
                   }
-                  ResponseUtil.onDataReceived(reactApplicationContext, requestId, responseString);
-                  ResponseUtil.onRequestSuccess(reactApplicationContext, requestId);
+                  ResponseUtil.onDataReceived(eventEmitter, requestId, responseString);
+                  ResponseUtil.onRequestSuccess(eventEmitter, requestId);
                 } catch (IOException e) {
-                  ResponseUtil.onRequestError(
-                      reactApplicationContext, requestId, e.getMessage(), e);
+                  ResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);
                 }
               }
             });
   }
 
   private RequestBody wrapRequestBodyWithProgressEmitter(
-      final RequestBody requestBody, final int requestId) {
+      final RequestBody requestBody,
+      final RCTDeviceEventEmitter eventEmitter,
+      final int requestId) {
     if (requestBody == null) {
       return null;
     }
-    final ReactApplicationContext reactApplicationContext =
-        getReactApplicationContextIfActiveOrWarn();
     return RequestBodyUtil.createProgressRequest(
         requestBody,
         new ProgressListener() {
@@ -575,15 +572,16 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
           public void onProgress(long bytesWritten, long contentLength, boolean done) {
             long now = System.nanoTime();
             if (done || shouldDispatch(now, last)) {
-              ResponseUtil.onDataSend(
-                  reactApplicationContext, requestId, bytesWritten, contentLength);
+              ResponseUtil.onDataSend(eventEmitter, requestId, bytesWritten, contentLength);
               last = now;
             }
           }
         });
   }
 
-  private void readWithProgress(int requestId, ResponseBody responseBody) throws IOException {
+  private void readWithProgress(
+      RCTDeviceEventEmitter eventEmitter, int requestId, ResponseBody responseBody)
+      throws IOException {
     long totalBytesRead = -1;
     long contentLength = -1;
     try {
@@ -604,11 +602,9 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
     try {
       byte[] buffer = new byte[MAX_CHUNK_SIZE_BETWEEN_FLUSHES];
       int read;
-      final ReactApplicationContext reactApplicationContext =
-          getReactApplicationContextIfActiveOrWarn();
       while ((read = inputStream.read(buffer)) != -1) {
         ResponseUtil.onIncrementalDataReceived(
-            reactApplicationContext,
+            eventEmitter,
             requestId,
             streamDecoder.decodeNext(buffer, read),
             totalBytesRead,
@@ -684,12 +680,10 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
 
   private @Nullable MultipartBody.Builder constructMultipartBody(
       ReadableArray body, String contentType, int requestId) {
+    RCTDeviceEventEmitter eventEmitter = getEventEmitter("constructMultipartBody");
     MultipartBody.Builder multipartBuilder = new MultipartBody.Builder();
     multipartBuilder.setType(MediaType.parse(contentType));
 
-    final ReactApplicationContext reactApplicationContext =
-        getReactApplicationContextIfActiveOrWarn();
-
     for (int i = 0, size = body.size(); i < size; i++) {
       ReadableMap bodyPart = body.getMap(i);
 
@@ -698,10 +692,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
       Headers headers = extractHeaders(headersArray, null);
       if (headers == null) {
         ResponseUtil.onRequestError(
-            reactApplicationContext,
-            requestId,
-            "Missing or invalid header format for FormData part.",
-            null);
+            eventEmitter, requestId, "Missing or invalid header format for FormData part.", null);
         return null;
       }
       MediaType partContentType = null;
@@ -719,10 +710,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
       } else if (bodyPart.hasKey(REQUEST_BODY_KEY_URI)) {
         if (partContentType == null) {
           ResponseUtil.onRequestError(
-              reactApplicationContext,
-              requestId,
-              "Binary FormData part needs a content-type header.",
-              null);
+              eventEmitter, requestId, "Binary FormData part needs a content-type header.", null);
           return null;
         }
         String fileContentUriStr = bodyPart.getString(REQUEST_BODY_KEY_URI);
@@ -730,7 +718,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
             RequestBodyUtil.getFileInputStream(getReactApplicationContext(), fileContentUriStr);
         if (fileInputStream == null) {
           ResponseUtil.onRequestError(
-              reactApplicationContext,
+              eventEmitter,
               requestId,
               "Could not retrieve file for uri " + fileContentUriStr,
               null);
@@ -738,8 +726,7 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
         }
         multipartBuilder.addPart(headers, RequestBodyUtil.create(partContentType, fileInputStream));
       } else {
-        ResponseUtil.onRequestError(
-            reactApplicationContext, requestId, "Unrecognized FormData part.", null);
+        ResponseUtil.onRequestError(eventEmitter, requestId, "Unrecognized FormData part.", null);
       }
     }
     return multipartBuilder;
@@ -778,4 +765,14 @@ public final class NetworkingModule extends NativeNetworkingAndroidSpec {
 
     return headersBuilder.build();
   }
+
+  private RCTDeviceEventEmitter getEventEmitter(String reason) {
+    ReactApplicationContext reactApplicationContext = getReactApplicationContextIfActiveOrWarn();
+
+    if (reactApplicationContext != null) {
+      return getReactApplicationContext().getJSModule(RCTDeviceEventEmitter.class);
+    }
+
+    return null;
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/RequestBodyUtil.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/RequestBodyUtil.java
index d3a7501..57fa7c5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/RequestBodyUtil.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/RequestBodyUtil.java
@@ -29,6 +29,7 @@ import java.nio.channels.ReadableByteChannel;
 import java.util.zip.GZIPOutputStream;
 import okhttp3.MediaType;
 import okhttp3.RequestBody;
+import okhttp3.internal.Util;
 import okio.BufferedSink;
 import okio.ByteString;
 import okio.Okio;
@@ -121,21 +122,6 @@ import okio.Source;
     return RequestBody.create(mediaType, gzipByteArrayOutputStream.toByteArray());
   }
 
-  /**
-   * Reference:
-   * https://github.com/square/okhttp/blob/8c8c3dbcfa91e28de2e13975ec414e07f153fde4/okhttp/src/commonMain/kotlin/okhttp3/internal/-UtilCommon.kt#L281-L288
-   * Checked exceptions will be ignored
-   */
-  private static void closeQuietly(Source source) {
-    try {
-      source.close();
-    } catch (RuntimeException e) {
-      throw e;
-    } catch (Exception e) {
-      // noop.
-    }
-  }
-
   /** Creates a RequestBody from a mediaType and inputStream given. */
   public static RequestBody create(final MediaType mediaType, final InputStream inputStream) {
     return new RequestBody() {
@@ -160,7 +146,7 @@ import okio.Source;
           source = Okio.source(inputStream);
           sink.writeAll(source);
         } finally {
-          closeQuietly(source);
+          Util.closeQuietly(source);
         }
       }
     };
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/ResponseUtil.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/ResponseUtil.java
index 003b54e..8abf12b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/ResponseUtil.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/ResponseUtil.java
@@ -9,26 +9,26 @@ package com.facebook.react.modules.network;
 
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.Arguments;
-import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.WritableArray;
 import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;
 import java.net.SocketTimeoutException;
 
 /** Util methods to send network responses to JS. */
 public class ResponseUtil {
   public static void onDataSend(
-      @Nullable ReactApplicationContext reactContext, int requestId, long progress, long total) {
+      @Nullable RCTDeviceEventEmitter eventEmitter, int requestId, long progress, long total) {
     WritableArray args = Arguments.createArray();
     args.pushInt(requestId);
     args.pushInt((int) progress);
     args.pushInt((int) total);
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didSendNetworkData", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didSendNetworkData", args);
     }
   }
 
   public static void onIncrementalDataReceived(
-      @Nullable ReactApplicationContext reactContext,
+      @Nullable RCTDeviceEventEmitter eventEmitter,
       int requestId,
       String data,
       long progress,
@@ -39,47 +39,47 @@ public class ResponseUtil {
     args.pushInt((int) progress);
     args.pushInt((int) total);
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didReceiveNetworkIncrementalData", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didReceiveNetworkIncrementalData", args);
     }
   }
 
   public static void onDataReceivedProgress(
-      @Nullable ReactApplicationContext reactContext, int requestId, long progress, long total) {
+      @Nullable RCTDeviceEventEmitter eventEmitter, int requestId, long progress, long total) {
     WritableArray args = Arguments.createArray();
     args.pushInt(requestId);
     args.pushInt((int) progress);
     args.pushInt((int) total);
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didReceiveNetworkDataProgress", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didReceiveNetworkDataProgress", args);
     }
   }
 
   public static void onDataReceived(
-      @Nullable ReactApplicationContext reactContext, int requestId, String data) {
+      @Nullable RCTDeviceEventEmitter eventEmitter, int requestId, String data) {
     WritableArray args = Arguments.createArray();
     args.pushInt(requestId);
     args.pushString(data);
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didReceiveNetworkData", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didReceiveNetworkData", args);
     }
   }
 
   public static void onDataReceived(
-      @Nullable ReactApplicationContext reactContext, int requestId, WritableMap data) {
+      @Nullable RCTDeviceEventEmitter eventEmitter, int requestId, WritableMap data) {
     WritableArray args = Arguments.createArray();
     args.pushInt(requestId);
     args.pushMap(data);
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didReceiveNetworkData", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didReceiveNetworkData", args);
     }
   }
 
   public static void onRequestError(
-      @Nullable ReactApplicationContext reactContext, int requestId, String error, Throwable e) {
+      @Nullable RCTDeviceEventEmitter eventEmitter, int requestId, String error, Throwable e) {
     WritableArray args = Arguments.createArray();
     args.pushInt(requestId);
     args.pushString(error);
@@ -88,24 +88,23 @@ public class ResponseUtil {
       args.pushBoolean(true); // last argument is a time out boolean
     }
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didCompleteNetworkResponse", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didCompleteNetworkResponse", args);
     }
   }
 
-  public static void onRequestSuccess(
-      @Nullable ReactApplicationContext reactContext, int requestId) {
+  public static void onRequestSuccess(@Nullable RCTDeviceEventEmitter eventEmitter, int requestId) {
     WritableArray args = Arguments.createArray();
     args.pushInt(requestId);
     args.pushNull();
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didCompleteNetworkResponse", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didCompleteNetworkResponse", args);
     }
   }
 
   public static void onResponseReceived(
-      @Nullable ReactApplicationContext reactContext,
+      @Nullable RCTDeviceEventEmitter eventEmitter,
       int requestId,
       int statusCode,
       WritableMap headers,
@@ -116,8 +115,8 @@ public class ResponseUtil {
     args.pushMap(headers);
     args.pushString(url);
 
-    if (reactContext != null) {
-      reactContext.emitDeviceEvent("didReceiveNetworkResponse", args);
+    if (eventEmitter != null) {
+      eventEmitter.emit("didReceiveNetworkResponse", args);
     }
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/permissions/PermissionsModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/permissions/PermissionsModule.java
index 1ff5fa5..bb0001e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/permissions/PermissionsModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/permissions/PermissionsModule.java
@@ -26,10 +26,11 @@ import com.facebook.react.modules.core.PermissionListener;
 import java.util.ArrayList;
 
 /** Module that exposes the Android M Permission system to JS. */
-@ReactModule(name = NativePermissionsAndroidSpec.NAME)
+@ReactModule(name = PermissionsModule.NAME)
 public class PermissionsModule extends NativePermissionsAndroidSpec implements PermissionListener {
 
   private static final String ERROR_INVALID_ACTIVITY = "E_INVALID_ACTIVITY";
+  public static final String NAME = "PermissionsAndroid";
   private final SparseArray<Callback> mCallbacks;
   private int mRequestCode = 0;
   private final String GRANTED = "granted";
@@ -41,6 +42,11 @@ public class PermissionsModule extends NativePermissionsAndroidSpec implements P
     mCallbacks = new SparseArray<Callback>();
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   /**
    * Check if the app has the permission given. successCallback is called with true if the
    * permission had been granted, false otherwise. See {@link Activity#checkSelfPermission}.
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/share/ShareModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/share/ShareModule.java
index 2957040..92d9b83 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/share/ShareModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/share/ShareModule.java
@@ -18,9 +18,10 @@ import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.module.annotations.ReactModule;
 
 /** Intent module. Launch other activities or open URLs. */
-@ReactModule(name = NativeShareModuleSpec.NAME)
+@ReactModule(name = ShareModule.NAME)
 public class ShareModule extends NativeShareModuleSpec {
 
+  public static final String NAME = "ShareModule";
   /* package */ static final String ACTION_SHARED = "sharedAction";
   /* package */ static final String ERROR_INVALID_CONTENT = "E_INVALID_CONTENT";
   /* package */ static final String ERROR_UNABLE_TO_OPEN_DIALOG = "E_UNABLE_TO_OPEN_DIALOG";
@@ -29,6 +30,11 @@ public class ShareModule extends NativeShareModuleSpec {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   /**
    * Open a chooser dialog to send text content to other apps.
    *
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/BUCK
index fdb3e21..68266a1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/BUCK
@@ -8,6 +8,8 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+    ],
     visibility = [
         "PUBLIC",
     ],
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/SoundManagerModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/SoundManagerModule.java
index 67792f9..7e995eb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/SoundManagerModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/sound/SoundManagerModule.java
@@ -15,13 +15,20 @@ import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.module.annotations.ReactModule;
 
 /** {@link NativeModule} that allows Playing device sounds from JS. */
-@ReactModule(name = NativeSoundManagerSpec.NAME)
+@ReactModule(name = SoundManagerModule.NAME)
 public class SoundManagerModule extends NativeSoundManagerSpec {
 
+  public static final String NAME = "SoundManager";
+
   public SoundManagerModule(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void playTouchSound() {
     AudioManager audioManager =
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/BUCK
index 4d7079e..bdba393 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/BUCK
@@ -8,15 +8,18 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/StatusBarModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/StatusBarModule.java
index ffe7ff4..8765a23 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/StatusBarModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/statusbar/StatusBarModule.java
@@ -32,7 +32,7 @@ import com.facebook.react.uimanager.PixelUtil;
 import java.util.Map;
 
 /** {@link NativeModule} that allows changing the appearance of the status bar. */
-@ReactModule(name = NativeStatusBarManagerAndroidSpec.NAME)
+@ReactModule(name = StatusBarModule.NAME)
 public class StatusBarModule extends NativeStatusBarManagerAndroidSpec {
 
   private static final String HEIGHT_KEY = "HEIGHT";
@@ -43,6 +43,11 @@ public class StatusBarModule extends NativeStatusBarManagerAndroidSpec {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public @Nullable Map<String, Object> getTypedExportedConstants() {
     final Context context = getReactApplicationContext();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoHelpers.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoHelpers.java
index e9c9c54..6f86abb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoHelpers.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoHelpers.java
@@ -32,8 +32,7 @@ public class AndroidInfoHelpers {
   }
 
   private static boolean isRunningOnStockEmulator() {
-    return Build.FINGERPRINT.contains("generic")
-        || Build.FINGERPRINT.startsWith("google/sdk_gphone");
+    return Build.FINGERPRINT.contains("generic");
   }
 
   public static String getServerHost(Integer port) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoModule.java
index 8a3fe90..c03aab4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/AndroidInfoModule.java
@@ -24,9 +24,10 @@ import java.util.HashMap;
 import java.util.Map;
 
 /** Module that exposes Android Constants to JS. */
-@ReactModule(name = NativePlatformConstantsAndroidSpec.NAME)
+@ReactModule(name = AndroidInfoModule.NAME)
 @SuppressLint("HardwareIds")
 public class AndroidInfoModule extends NativePlatformConstantsAndroidSpec implements TurboModule {
+  public static final String NAME = "PlatformConstants";
   private static final String IS_TESTING = "IS_TESTING";
 
   public AndroidInfoModule(ReactApplicationContext reactContext) {
@@ -58,6 +59,11 @@ public class AndroidInfoModule extends NativePlatformConstantsAndroidSpec implem
     }
   }
 
+  @Override
+  public String getName() {
+    return "PlatformConstants";
+  }
+
   @Override
   public @Nullable Map<String, Object> getTypedExportedConstants() {
     HashMap<String, Object> constants = new HashMap<>();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/ReactNativeVersion.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/ReactNativeVersion.java
index 259d556..9e637a4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/ReactNativeVersion.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/systeminfo/ReactNativeVersion.java
@@ -16,7 +16,7 @@ import java.util.Map;
 public class ReactNativeVersion {
   public static final Map<String, Object> VERSION = MapBuilder.<String, Object>of(
       "major", 0,
-      "minor", 72,
-      "patch", 3,
+      "minor", 71,
+      "patch", 12,
       "prerelease", null);
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/toast/ToastModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/toast/ToastModule.java
index 7798612..fef2c1d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/toast/ToastModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/toast/ToastModule.java
@@ -18,7 +18,7 @@ import com.facebook.react.module.annotations.ReactModule;
 import java.util.Map;
 
 /** {@link NativeModule} that allows JS to show an Android Toast. */
-@ReactModule(name = NativeToastAndroidSpec.NAME)
+@ReactModule(name = ToastModule.NAME)
 public class ToastModule extends NativeToastAndroidSpec {
 
   private static final String DURATION_SHORT_KEY = "SHORT";
@@ -27,11 +27,17 @@ public class ToastModule extends NativeToastAndroidSpec {
   private static final String GRAVITY_TOP_KEY = "TOP";
   private static final String GRAVITY_BOTTOM_KEY = "BOTTOM";
   private static final String GRAVITY_CENTER = "CENTER";
+  public static final String NAME = "ToastAndroid";
 
   public ToastModule(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public Map<String, Object> getTypedExportedConstants() {
     final Map<String, Object> constants = MapBuilder.newHashMap();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/vibration/VibrationModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/vibration/VibrationModule.java
index 1ffc358..1007135 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/vibration/VibrationModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/vibration/VibrationModule.java
@@ -18,13 +18,20 @@ import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.module.annotations.ReactModule;
 
 @SuppressLint("MissingPermission")
-@ReactModule(name = NativeVibrationSpec.NAME)
+@ReactModule(name = VibrationModule.NAME)
 public class VibrationModule extends NativeVibrationSpec {
 
+  public static final String NAME = "Vibration";
+
   public VibrationModule(ReactApplicationContext reactContext) {
     super(reactContext);
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   @Override
   public void vibrate(double durationDouble) {
     int duration = (int) durationDouble;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/websocket/WebSocketModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/websocket/WebSocketModule.java
index ee1b2c8..50e6f9d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/websocket/WebSocketModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/websocket/WebSocketModule.java
@@ -19,6 +19,7 @@ import com.facebook.react.bridge.ReadableType;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.common.ReactConstants;
 import com.facebook.react.module.annotations.ReactModule;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 import com.facebook.react.modules.network.ForwardingCookieHandler;
 import java.io.IOException;
 import java.net.URI;
@@ -35,8 +36,12 @@ import okhttp3.WebSocket;
 import okhttp3.WebSocketListener;
 import okio.ByteString;
 
-@ReactModule(name = NativeWebSocketModuleSpec.NAME, hasConstants = false)
+@ReactModule(name = WebSocketModule.NAME, hasConstants = false)
 public final class WebSocketModule extends NativeWebSocketModuleSpec {
+  public static final String TAG = WebSocketModule.class.getSimpleName();
+
+  public static final String NAME = "WebSocketModule";
+
   public interface ContentHandler {
     void onMessage(String text, WritableMap params);
 
@@ -65,10 +70,17 @@ public final class WebSocketModule extends NativeWebSocketModuleSpec {
   private void sendEvent(String eventName, WritableMap params) {
     ReactApplicationContext reactApplicationContext = getReactApplicationContext();
     if (reactApplicationContext.hasActiveReactInstance()) {
-      reactApplicationContext.emitDeviceEvent(eventName, params);
+      reactApplicationContext
+          .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+          .emit(eventName, params);
     }
   }
 
+  @Override
+  public String getName() {
+    return NAME;
+  }
+
   public void setContentHandler(final int id, final ContentHandler contentHandler) {
     if (contentHandler != null) {
       mContentHandlers.put(id, contentHandler);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/BUCK
index 2849438..07c545a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/BUCK
@@ -1,4 +1,4 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "YOGA_TARGET", "react_native_dep", "react_native_target", "rn_java_annotation_processor", "rn_java_library")
+load("//tools/build_defs/oss:rn_defs.bzl", "react_native_dep", "react_native_target", "rn_java_annotation_processor", "rn_java_library")
 
 rn_java_annotation_processor(
     name = "processing",
@@ -21,7 +21,6 @@ rn_java_library(
     source = "7",
     target = "7",
     deps = [
-        YOGA_TARGET,
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/javapoet:javapoet"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/ReactPropertyProcessor.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/ReactPropertyProcessor.java
index e861a85..21829b7 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/ReactPropertyProcessor.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/processing/ReactPropertyProcessor.java
@@ -21,7 +21,6 @@ import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.uimanager.annotations.ReactProp;
 import com.facebook.react.uimanager.annotations.ReactPropGroup;
 import com.facebook.react.uimanager.annotations.ReactPropertyHolder;
-import com.facebook.yoga.YogaValue;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.CodeBlock;
 import com.squareup.javapoet.JavaFile;
@@ -70,13 +69,14 @@ public class ReactPropertyProcessor extends AbstractProcessor {
   private static final Map<TypeName, String> DEFAULT_TYPES;
   private static final Set<TypeName> BOXED_PRIMITIVES;
 
+  private static final TypeName PROPS_TYPE =
+      ClassName.get("com.facebook.react.uimanager", "ReactStylesDiffMap");
   private static final TypeName OBJECT_TYPE = TypeName.get(Object.class);
   private static final TypeName STRING_TYPE = TypeName.get(String.class);
   private static final TypeName READABLE_MAP_TYPE = TypeName.get(ReadableMap.class);
   private static final TypeName READABLE_ARRAY_TYPE = TypeName.get(ReadableArray.class);
   private static final TypeName DYNAMIC_TYPE = TypeName.get(Dynamic.class);
   private static final TypeName DYNAMIC_FROM_OBJECT_TYPE = TypeName.get(DynamicFromObject.class);
-  private static final TypeName YOGA_VALUE_TYPE = TypeName.get(YogaValue.class);
 
   private static final TypeName VIEW_MANAGER_TYPE =
       ClassName.get("com.facebook.react.uimanager", "ViewManager");
@@ -92,6 +92,8 @@ public class ReactPropertyProcessor extends AbstractProcessor {
 
   private static final TypeName PROPERTY_MAP_TYPE =
       ParameterizedTypeName.get(Map.class, String.class, String.class);
+  private static final TypeName CONCRETE_PROPERTY_MAP_TYPE =
+      ParameterizedTypeName.get(HashMap.class, String.class, String.class);
 
   private final Map<ClassName, ClassInfo> mClasses;
 
@@ -118,7 +120,6 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     DEFAULT_TYPES.put(READABLE_ARRAY_TYPE, "Array");
     DEFAULT_TYPES.put(READABLE_MAP_TYPE, "Map");
     DEFAULT_TYPES.put(DYNAMIC_TYPE, "Dynamic");
-    DEFAULT_TYPES.put(YOGA_VALUE_TYPE, "YogaValue");
 
     BOXED_PRIMITIVES = new HashSet<>();
     BOXED_PRIMITIVES.add(TypeName.BOOLEAN.box());
@@ -184,7 +185,7 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     return true;
   }
 
-  private static boolean isShadowNodeType(TypeName typeName) {
+  private boolean isShadowNodeType(TypeName typeName) {
     return typeName.equals(SHADOW_NODE_IMPL_TYPE);
   }
 
@@ -278,7 +279,7 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     javaFile.writeTo(mFiler);
   }
 
-  private static String getClassName(TypeElement type, String packageName) {
+  private String getClassName(TypeElement type, String packageName) {
     int packageLen = packageName.length() + 1;
     return type.getQualifiedName().toString().substring(packageLen).replace('.', '$');
   }
@@ -357,25 +358,17 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     return builder.build();
   }
 
-  private static void getPropertyExtractor(
+  private static CodeBlock.Builder getPropertyExtractor(
       ClassInfo classInfo, PropertyInfo info, CodeBlock.Builder builder) {
     TypeName propertyType = info.propertyType;
     if (propertyType.equals(STRING_TYPE)) {
-      builder.add("value instanceof $L ? ($L)value : null", STRING_TYPE, STRING_TYPE);
-      return;
+      return builder.add("($L)value", STRING_TYPE);
     } else if (propertyType.equals(READABLE_ARRAY_TYPE)) {
-      builder.add(
-          "value instanceof $L ? ($L)value : null", READABLE_ARRAY_TYPE, READABLE_ARRAY_TYPE);
-      return; // TODO: use real type but needs import
+      return builder.add("($L)value", READABLE_ARRAY_TYPE); // TODO: use real type but needs import
     } else if (propertyType.equals(READABLE_MAP_TYPE)) {
-      builder.add("value instanceof $L ? ($L)value : null", READABLE_MAP_TYPE, READABLE_MAP_TYPE);
-      return;
+      return builder.add("($L)value", READABLE_MAP_TYPE);
     } else if (propertyType.equals(DYNAMIC_TYPE)) {
-      builder.add("new $L(value)", DYNAMIC_FROM_OBJECT_TYPE);
-      return;
-    } else if (propertyType.equals(YOGA_VALUE_TYPE)) {
-      builder.add("$T.getDimension(value)", com.facebook.react.bridge.DimensionPropConverter.class);
-      return;
+      return builder.add("new $L(value)", DYNAMIC_FROM_OBJECT_TYPE);
     }
 
     if (BOXED_PRIMITIVES.contains(propertyType)) {
@@ -383,54 +376,40 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     }
 
     if (propertyType.equals(TypeName.BOOLEAN)) {
-      builder.add(
-          "!(value instanceof Boolean) ? $L : (boolean)value", info.mProperty.defaultBoolean());
-      return;
+      return builder.add("value == null ? $L : (boolean) value", info.mProperty.defaultBoolean());
     }
     if (propertyType.equals(TypeName.DOUBLE)) {
       double defaultDouble = info.mProperty.defaultDouble();
       if (Double.isNaN(defaultDouble)) {
-        builder.add("!(value instanceof Double) ? $T.NaN : (double)value", Double.class);
-        return;
+        return builder.add("value == null ? $T.NaN : (double) value", Double.class);
       } else {
-        builder.add("!(value instanceof Double) ? $Lf : (double)value", defaultDouble);
-        return;
+        return builder.add("value == null ? $Lf : (double) value", defaultDouble);
       }
     }
     if (propertyType.equals(TypeName.FLOAT)) {
       float defaultFloat = info.mProperty.defaultFloat();
       if (Float.isNaN(defaultFloat)) {
-        builder.add(
-            "!(value instanceof Double) ? $T.NaN : ((Double)value).floatValue()", Float.class);
-        return;
+        return builder.add("value == null ? $T.NaN : ((Double)value).floatValue()", Float.class);
       } else {
-        builder.add(
-            "!(value instanceof Double) ? $Lf : ((Double)value).floatValue()", defaultFloat);
-        return;
+        return builder.add("value == null ? $Lf : ((Double)value).floatValue()", defaultFloat);
       }
     }
     if ("Color".equals(info.mProperty.customType())) {
       switch (classInfo.getType()) {
         case VIEW_MANAGER:
-          builder.add(
-              "value == null ? $L : $T.getColor(value, view.getContext(), $L)",
+          return builder.add(
+              "value == null ? $L : $T.getColor(value, view.getContext())",
               info.mProperty.defaultInt(),
-              com.facebook.react.bridge.ColorPropConverter.class,
-              info.mProperty.defaultInt());
-          return;
+              com.facebook.react.bridge.ColorPropConverter.class);
         case SHADOW_NODE:
-          builder.add(
-              "value == null ? $L : $T.getColor(value, node.getThemedContext(), $L)",
+          return builder.add(
+              "value == null ? $L : $T.getColor(value, node.getThemedContext())",
               info.mProperty.defaultInt(),
-              com.facebook.react.bridge.ColorPropConverter.class,
-              info.mProperty.defaultInt());
-          return;
+              com.facebook.react.bridge.ColorPropConverter.class);
       }
     } else if (propertyType.equals(TypeName.INT)) {
-      builder.add(
-          "!(value instanceof Double) ? $L : ((Double)value).intValue()",
-          info.mProperty.defaultInt());
-      return;
+      return builder.add(
+          "value == null ? $L : ((Double)value).intValue()", info.mProperty.defaultInt());
     }
 
     throw new IllegalArgumentException();
@@ -441,7 +420,7 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     CodeBlock.Builder builder = CodeBlock.builder();
     for (PropertyInfo propertyInfo : properties) {
       try {
-        String typeName = getPropertyTypeName(propertyInfo.mProperty, propertyInfo.propertyType);
+        String typeName = getPropertypTypeName(propertyInfo.mProperty, propertyInfo.propertyType);
         builder.addStatement("props.put($S, $S)", propertyInfo.mProperty.name(), typeName);
       } catch (IllegalArgumentException e) {
         throw new ReactPropertyException(e.getMessage(), propertyInfo);
@@ -451,7 +430,7 @@ public class ReactPropertyProcessor extends AbstractProcessor {
     return builder.build();
   }
 
-  private static String getPropertyTypeName(Property property, TypeName propertyType) {
+  private static String getPropertypTypeName(Property property, TypeName propertyType) {
     String defaultType = DEFAULT_TYPES.get(propertyType);
     String useDefaultType =
         property instanceof RegularProperty
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/BUCK
index 5621dd3..f6d575f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/BUCK
@@ -8,17 +8,19 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fresco/fresco-react-native:imagepipeline"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:appcompat"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react:react"),
@@ -26,7 +28,6 @@ rn_android_library(
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/devsupport:devsupport"),
-        react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("java/com/facebook/react/module/model:model"),
         react_native_target("java/com/facebook/react/modules/accessibilityinfo:accessibilityinfo"),
         react_native_target("java/com/facebook/react/modules/appearance:appearance"),
@@ -36,7 +37,6 @@ rn_android_library(
         react_native_target("java/com/facebook/react/modules/clipboard:clipboard"),
         react_native_target("java/com/facebook/react/modules/core:core"),
         react_native_target("java/com/facebook/react/modules/debug:debug"),
-        react_native_target("java/com/facebook/react/modules/devtoolssettings:devtoolssettings"),
         react_native_target("java/com/facebook/react/modules/dialog:dialog"),
         react_native_target("java/com/facebook/react/modules/fresco:fresco"),
         react_native_target("java/com/facebook/react/modules/i18nmanager:i18nmanager"),
@@ -45,8 +45,8 @@ rn_android_library(
         react_native_target("java/com/facebook/react/modules/network:network"),
         react_native_target("java/com/facebook/react/modules/permissions:permissions"),
         react_native_target("java/com/facebook/react/modules/share:share"),
-        react_native_target("java/com/facebook/react/modules/sound:sound"),
         react_native_target("java/com/facebook/react/modules/statusbar:statusbar"),
+        react_native_target("java/com/facebook/react/modules/sound:sound"),
         react_native_target("java/com/facebook/react/modules/toast:toast"),
         react_native_target("java/com/facebook/react/modules/vibration:vibration"),
         react_native_target("java/com/facebook/react/modules/websocket:websocket"),
@@ -57,6 +57,7 @@ rn_android_library(
         react_native_target("java/com/facebook/react/views/modal:modal"),
         react_native_target("java/com/facebook/react/views/progressbar:progressbar"),
         react_native_target("java/com/facebook/react/views/scroll:scroll"),
+        react_native_target("java/com/facebook/react/views/slider:slider"),
         react_native_target("java/com/facebook/react/views/swiperefresh:swiperefresh"),
         react_native_target("java/com/facebook/react/views/switchview:switchview"),
         react_native_target("java/com/facebook/react/views/text:text"),
@@ -64,6 +65,7 @@ rn_android_library(
         react_native_target("java/com/facebook/react/views/textinput:textinput"),
         react_native_target("java/com/facebook/react/views/unimplementedview:unimplementedview"),
         react_native_target("java/com/facebook/react/views/view:view"),
+        react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("res:shell"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java
index 5fa72a0..f845a46 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java
@@ -9,9 +9,7 @@ package com.facebook.react.shell;
 
 import androidx.annotation.Nullable;
 import com.facebook.react.TurboReactPackage;
-import com.facebook.react.ViewManagerOnDemandReactPackage;
 import com.facebook.react.animated.NativeAnimatedModule;
-import com.facebook.react.bridge.ModuleSpec;
 import com.facebook.react.bridge.NativeModule;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.module.annotations.ReactModule;
@@ -25,7 +23,6 @@ import com.facebook.react.modules.blob.BlobModule;
 import com.facebook.react.modules.blob.FileReaderModule;
 import com.facebook.react.modules.camera.ImageStoreManager;
 import com.facebook.react.modules.clipboard.ClipboardModule;
-import com.facebook.react.modules.devtoolssettings.DevToolsSettingsManagerModule;
 import com.facebook.react.modules.dialog.DialogModule;
 import com.facebook.react.modules.fresco.FrescoModule;
 import com.facebook.react.modules.i18nmanager.I18nManagerModule;
@@ -40,7 +37,6 @@ import com.facebook.react.modules.toast.ToastModule;
 import com.facebook.react.modules.vibration.VibrationModule;
 import com.facebook.react.modules.websocket.WebSocketModule;
 import com.facebook.react.turbomodule.core.interfaces.TurboModule;
-import com.facebook.react.uimanager.UIManagerModule;
 import com.facebook.react.uimanager.ViewManager;
 import com.facebook.react.views.drawer.ReactDrawerLayoutManager;
 import com.facebook.react.views.image.ReactImageManager;
@@ -49,6 +45,7 @@ import com.facebook.react.views.progressbar.ReactProgressBarViewManager;
 import com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager;
 import com.facebook.react.views.scroll.ReactHorizontalScrollViewManager;
 import com.facebook.react.views.scroll.ReactScrollViewManager;
+import com.facebook.react.views.slider.ReactSliderManager;
 import com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager;
 import com.facebook.react.views.switchview.ReactSwitchManager;
 import com.facebook.react.views.text.ReactRawTextManager;
@@ -59,11 +56,9 @@ import com.facebook.react.views.textinput.ReactTextInputManager;
 import com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager;
 import com.facebook.react.views.view.ReactViewManager;
 import java.util.ArrayList;
-import java.util.Collection;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import javax.inject.Provider;
 
 /** Package defining basic modules and view managers. */
 @ReactModuleList(
@@ -90,10 +85,9 @@ import javax.inject.Provider;
       VibrationModule.class,
       WebSocketModule.class,
     })
-public class MainReactPackage extends TurboReactPackage implements ViewManagerOnDemandReactPackage {
+public class MainReactPackage extends TurboReactPackage {
 
   private MainPackageConfig mConfig;
-  private @Nullable Map<String, ModuleSpec> mViewManagers;
 
   public MainReactPackage() {}
 
@@ -147,8 +141,6 @@ public class MainReactPackage extends TurboReactPackage implements ViewManagerOn
         return new VibrationModule(context);
       case WebSocketModule.NAME:
         return new WebSocketModule(context);
-      case DevToolsSettingsManagerModule.NAME:
-        return new DevToolsSettingsManagerModule(context);
       default:
         return null;
     }
@@ -163,6 +155,7 @@ public class MainReactPackage extends TurboReactPackage implements ViewManagerOn
     viewManagers.add(new ReactHorizontalScrollContainerViewManager());
     viewManagers.add(new ReactProgressBarViewManager());
     viewManagers.add(new ReactScrollViewManager());
+    viewManagers.add(new ReactSliderManager());
     viewManagers.add(new ReactSwitchManager());
     viewManagers.add(new SwipeRefreshLayoutManager());
 
@@ -181,181 +174,6 @@ public class MainReactPackage extends TurboReactPackage implements ViewManagerOn
     return viewManagers;
   }
 
-  private static void appendMap(
-      Map<String, ModuleSpec> map, String name, Provider<? extends NativeModule> provider) {
-    map.put(name, ModuleSpec.viewManagerSpec(provider));
-  }
-
-  /** @return a map of view managers that should be registered with {@link UIManagerModule} */
-  public Map<String, ModuleSpec> getViewManagersMap(final ReactApplicationContext reactContext) {
-    if (mViewManagers == null) {
-      Map<String, ModuleSpec> viewManagers = new HashMap<>();
-      appendMap(
-          viewManagers,
-          ReactDrawerLayoutManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactDrawerLayoutManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactHorizontalScrollViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactHorizontalScrollViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactHorizontalScrollContainerViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactHorizontalScrollContainerViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactProgressBarViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactProgressBarViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactScrollViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactScrollViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactSwitchManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactSwitchManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          SwipeRefreshLayoutManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new SwipeRefreshLayoutManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          FrescoBasedReactTextInlineImageViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new FrescoBasedReactTextInlineImageViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactImageManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactImageManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactModalHostManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactModalHostManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactRawTextManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactRawTextManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactTextInputManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactTextInputManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactTextViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactTextViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactVirtualTextViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactVirtualTextViewManager();
-            }
-          });
-      appendMap(
-          viewManagers,
-          ReactUnimplementedViewManager.REACT_CLASS,
-          new Provider<NativeModule>() {
-            @Override
-            public NativeModule get() {
-              return new ReactUnimplementedViewManager();
-            }
-          });
-      mViewManagers = viewManagers;
-    }
-    return mViewManagers;
-  }
-
-  @Override
-  public List<ModuleSpec> getViewManagers(ReactApplicationContext reactContext) {
-    return new ArrayList<>(getViewManagersMap(reactContext).values());
-  }
-
-  @Override
-  public Collection<String> getViewManagerNames(ReactApplicationContext reactContext) {
-    return getViewManagersMap(reactContext).keySet();
-  }
-
-  @Override
-  public @Nullable ViewManager createViewManager(
-      ReactApplicationContext reactContext, String viewManagerName) {
-    ModuleSpec spec = getViewManagersMap(reactContext).get(viewManagerName);
-    return spec != null ? (ViewManager) spec.getProvider().get() : null;
-  }
-
   @Override
   public ReactModuleInfoProvider getReactModuleInfoProvider() {
     try {
@@ -363,8 +181,7 @@ public class MainReactPackage extends TurboReactPackage implements ViewManagerOn
           Class.forName("com.facebook.react.shell.MainReactPackage$$ReactModuleInfoProvider");
       return (ReactModuleInfoProvider) reactModuleInfoProviderClass.newInstance();
     } catch (ClassNotFoundException e) {
-      // In the OSS case, the annotation processor does not run. We fall back to creating this by
-      // hand
+      // In OSS case, the annotation processor does not run. We fall back on creating this byhand
       Class<? extends NativeModule>[] moduleList =
           new Class[] {
             AccessibilityInfoModule.class,
@@ -382,7 +199,6 @@ public class MainReactPackage extends TurboReactPackage implements ViewManagerOn
             NativeAnimatedModule.class,
             NetworkingModule.class,
             PermissionsModule.class,
-            DevToolsSettingsManagerModule.class,
             ShareModule.class,
             StatusBarModule.class,
             SoundManagerModule.class,
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/surface/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/surface/BUCK
index 8444521..fbf785c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/surface/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/surface/BUCK
@@ -17,6 +17,7 @@ rn_android_library(
         react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/.clang-tidy b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/.clang-tidy
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/TurboModuleManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/TurboModuleManager.java
index d0166a6..440037a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/TurboModuleManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/TurboModuleManager.java
@@ -15,8 +15,8 @@ import com.facebook.jni.HybridData;
 import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.react.bridge.CxxModuleWrapper;
 import com.facebook.react.bridge.JSIModule;
-import com.facebook.react.bridge.NativeModule;
 import com.facebook.react.bridge.RuntimeExecutor;
+import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
 import com.facebook.react.turbomodule.core.interfaces.TurboModule;
 import com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry;
@@ -31,18 +31,18 @@ import java.util.*;
 public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
   private static volatile boolean sIsSoLibraryLoaded;
   private final List<String> mEagerInitModuleNames;
-  private final ModuleProvider<TurboModule> mJavaModuleProvider;
-  private final ModuleProvider<TurboModule> mCxxModuleProvider;
+  private final TurboModuleProvider mJavaModuleProvider;
+  private final TurboModuleProvider mCxxModuleProvider;
 
   // Prevents the creation of new TurboModules once cleanup as been initiated.
-  private final Object mModuleCleanupLock = new Object();
+  private final Object mTurboModuleCleanupLock = new Object();
 
-  @GuardedBy("mModuleCleanupLock")
-  private boolean mModuleCleanupStarted = false;
+  @GuardedBy("mTurboModuleCleanupLock")
+  private boolean mTurboModuleCleanupStarted = false;
 
   // List of TurboModules that have been, or are currently being, instantiated
-  @GuardedBy("mModuleCleanupLock")
-  private final Map<String, ModuleHolder> mModuleHolders = new HashMap<>();
+  @GuardedBy("mTurboModuleCleanupLock")
+  private final Map<String, TurboModuleHolder> mTurboModuleHolders = new HashMap<>();
 
   @DoNotStrip
   @SuppressWarnings("unused")
@@ -59,14 +59,16 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
             runtimeExecutor,
             (CallInvokerHolderImpl) jsCallInvokerHolder,
             (CallInvokerHolderImpl) nativeCallInvokerHolder,
-            delegate);
+            delegate,
+            ReactFeatureFlags.useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+            ReactFeatureFlags.useTurboModuleManagerCallbackCleanupScope);
     installJSIBindings();
 
     mEagerInitModuleNames =
         delegate == null ? new ArrayList<String>() : delegate.getEagerInitModuleNames();
 
     mJavaModuleProvider =
-        new ModuleProvider<TurboModule>() {
+        new TurboModuleProvider() {
           @Nullable
           public TurboModule getModule(String moduleName) {
             if (delegate == null) {
@@ -78,7 +80,7 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
         };
 
     mCxxModuleProvider =
-        new ModuleProvider<TurboModule>() {
+        new TurboModuleProvider() {
           @Nullable
           public TurboModule getModule(String moduleName) {
             if (delegate == null) {
@@ -132,10 +134,10 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
    */
   @Nullable
   public TurboModule getModule(String moduleName) {
-    ModuleHolder moduleHolder;
+    TurboModuleHolder moduleHolder;
 
-    synchronized (mModuleCleanupLock) {
-      if (mModuleCleanupStarted) {
+    synchronized (mTurboModuleCleanupLock) {
+      if (mTurboModuleCleanupStarted) {
         /*
          * Always return null after cleanup has started, so that getModule(moduleName) returns null.
          */
@@ -143,18 +145,18 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
       }
 
       /*
-       * TODO(T64619790): Should we populate mModuleHolders ahead of time, to avoid having
+       * TODO(T64619790): Should we populate mJavaTurboModuleHolders ahead of time, to avoid having
        * * to control concurrent access to it?
        */
-      if (!mModuleHolders.containsKey(moduleName)) {
-        mModuleHolders.put(moduleName, new ModuleHolder());
+      if (!mTurboModuleHolders.containsKey(moduleName)) {
+        mTurboModuleHolders.put(moduleName, new TurboModuleHolder());
       }
 
-      moduleHolder = mModuleHolders.get(moduleName);
+      moduleHolder = mTurboModuleHolders.get(moduleName);
     }
 
     TurboModulePerfLogger.moduleCreateStart(moduleName, moduleHolder.getModuleId());
-    TurboModule module = (TurboModule) getOrCreateModule(moduleName, moduleHolder, true);
+    TurboModule module = getModule(moduleName, moduleHolder, true);
 
     if (module != null) {
       TurboModulePerfLogger.moduleCreateEnd(moduleName, moduleHolder.getModuleId());
@@ -166,14 +168,15 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
   }
 
   /**
-   * Given a ModuleHolder, and the TurboModule's moduleName, return the TurboModule instance.
+   * Given a TurboModuleHolder, and the TurboModule's moduleName, return the TurboModule instance.
    *
-   * <p>Use the ModuleHolder to ensure that if n threads race to create TurboModule x, then only the
-   * first thread creates x. All n - 1 other threads wait until the x is created and initialized.
+   * <p>Use the TurboModuleHolder to ensure that if n threads race to create TurboModule x, then
+   * only the first thread creates x. All n - 1 other threads wait until the x is created and
+   * initialized.
    */
   @Nullable
-  private NativeModule getOrCreateModule(
-      String moduleName, @NonNull ModuleHolder moduleHolder, boolean shouldPerfLog) {
+  private TurboModule getModule(
+      String moduleName, @NonNull TurboModuleHolder moduleHolder, boolean shouldPerfLog) {
     boolean shouldCreateModule = false;
 
     synchronized (moduleHolder) {
@@ -194,18 +197,18 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
 
     if (shouldCreateModule) {
       TurboModulePerfLogger.moduleCreateConstructStart(moduleName, moduleHolder.getModuleId());
-      NativeModule nativeModule = (NativeModule) mJavaModuleProvider.getModule(moduleName);
+      TurboModule turboModule = mJavaModuleProvider.getModule(moduleName);
 
-      if (nativeModule == null) {
-        nativeModule = (NativeModule) mCxxModuleProvider.getModule(moduleName);
+      if (turboModule == null) {
+        turboModule = mCxxModuleProvider.getModule(moduleName);
       }
 
       TurboModulePerfLogger.moduleCreateConstructEnd(moduleName, moduleHolder.getModuleId());
       TurboModulePerfLogger.moduleCreateSetUpStart(moduleName, moduleHolder.getModuleId());
 
-      if (nativeModule != null) {
+      if (turboModule != null) {
         synchronized (moduleHolder) {
-          moduleHolder.setModule(nativeModule);
+          moduleHolder.setModule(turboModule);
         }
 
         /*
@@ -213,7 +216,7 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
          * NativeModules should be initialized after ReactApplicationContext has been set up.
          * Therefore, we should initialize on the TurboModule now.
          */
-        nativeModule.initialize();
+        turboModule.initialize();
       }
 
       TurboModulePerfLogger.moduleCreateSetUpEnd(moduleName, moduleHolder.getModuleId());
@@ -222,7 +225,7 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
         moduleHolder.notifyAll();
       }
 
-      return nativeModule;
+      return turboModule;
     }
 
     synchronized (moduleHolder) {
@@ -251,17 +254,17 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
 
   /** Which TurboModules have been created? */
   public Collection<TurboModule> getModules() {
-    final List<ModuleHolder> moduleHolders = new ArrayList<>();
-    synchronized (mModuleCleanupLock) {
-      moduleHolders.addAll(mModuleHolders.values());
+    final List<TurboModuleHolder> turboModuleHolders = new ArrayList<>();
+    synchronized (mTurboModuleCleanupLock) {
+      turboModuleHolders.addAll(mTurboModuleHolders.values());
     }
 
     final List<TurboModule> turboModules = new ArrayList<>();
-    for (final ModuleHolder moduleHolder : moduleHolders) {
+    for (final TurboModuleHolder moduleHolder : turboModuleHolders) {
       synchronized (moduleHolder) {
         // No need to wait for the TurboModule to finish being created and initialized
         if (moduleHolder.getModule() != null) {
-          turboModules.add((TurboModule) moduleHolder.getModule());
+          turboModules.add(moduleHolder.getModule());
         }
       }
     }
@@ -270,9 +273,9 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
   }
 
   public boolean hasModule(String moduleName) {
-    ModuleHolder moduleHolder;
-    synchronized (mModuleCleanupLock) {
-      moduleHolder = mModuleHolders.get(moduleName);
+    TurboModuleHolder moduleHolder;
+    synchronized (mTurboModuleCleanupLock) {
+      moduleHolder = mTurboModuleHolders.get(moduleName);
     }
 
     if (moduleHolder != null) {
@@ -290,7 +293,9 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
       RuntimeExecutor runtimeExecutor,
       CallInvokerHolderImpl jsCallInvokerHolder,
       CallInvokerHolderImpl nativeCallInvokerHolder,
-      TurboModuleManagerDelegate tmmDelegate);
+      TurboModuleManagerDelegate tmmDelegate,
+      boolean useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+      boolean useTurboModuleManagerCallbackCleanupScope);
 
   private native void installJSIBindings();
 
@@ -302,33 +307,34 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
     /*
      * Halt the production of new TurboModules.
      *
-     * <p>After this point, mModuleHolders will not be accessed by TurboModuleManager.
+     * <p>After this point, mTurboModuleHolders will not be accessed by TurboModuleManager.
      * Therefore, it won't be modified.
      *
-     * <p>The ModuleHolders in mModuleHolders, however, can still be populated with newly
+     * <p>The TurboModuleHolders in mTurboModuleHolders, however, can still be populated with newly
      * created TurboModules.
      */
-    synchronized (mModuleCleanupLock) {
-      mModuleCleanupStarted = true;
+    synchronized (mTurboModuleCleanupLock) {
+      mTurboModuleCleanupStarted = true;
     }
 
-    for (final Map.Entry<String, ModuleHolder> moduleHolderEntry : mModuleHolders.entrySet()) {
+    for (final Map.Entry<String, TurboModuleHolder> moduleHolderEntry :
+        mTurboModuleHolders.entrySet()) {
       final String moduleName = moduleHolderEntry.getKey();
-      final ModuleHolder moduleHolder = moduleHolderEntry.getValue();
+      final TurboModuleHolder moduleHolder = moduleHolderEntry.getValue();
 
       /**
        * ReactNative could start tearing down before this particular TurboModule has been fully
        * initialized. In this case, we should wait for initialization to complete, before destroying
        * the TurboModule.
        */
-      final NativeModule nativeModule = getOrCreateModule(moduleName, moduleHolder, false);
+      final TurboModule turboModule = getModule(moduleName, moduleHolder, false);
 
-      if (nativeModule != null) {
-        nativeModule.invalidate();
+      if (turboModule != null) {
+        turboModule.invalidate();
       }
     }
 
-    mModuleHolders.clear();
+    mTurboModuleHolders.clear();
 
     // Delete the native part of this hybrid class.
     mHybridData.resetNative();
@@ -342,14 +348,14 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
     }
   }
 
-  private static class ModuleHolder {
-    private volatile NativeModule mModule = null;
+  private static class TurboModuleHolder {
+    private volatile TurboModule mModule = null;
     private volatile boolean mIsTryingToCreate = false;
     private volatile boolean mIsDoneCreatingModule = false;
     private static volatile int sHolderCount = 0;
     private volatile int mModuleId;
 
-    public ModuleHolder() {
+    public TurboModuleHolder() {
       mModuleId = sHolderCount;
       sHolderCount += 1;
     }
@@ -358,12 +364,12 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
       return mModuleId;
     }
 
-    void setModule(@NonNull NativeModule module) {
+    void setModule(@NonNull TurboModule module) {
       mModule = module;
     }
 
     @Nullable
-    NativeModule getModule() {
+    TurboModule getModule() {
       return mModule;
     }
 
@@ -385,8 +391,8 @@ public class TurboModuleManager implements JSIModule, TurboModuleRegistry {
     }
   }
 
-  private interface ModuleProvider<T> {
+  private interface TurboModuleProvider {
     @Nullable
-    T getModule(String name);
+    TurboModule getModule(String name);
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BUCK
index 2a7d2fa..021331b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BUCK
@@ -17,13 +17,15 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
-        react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
     ],
@@ -50,22 +52,25 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
     ],
     deps = [
-        ":DisplayMetrics",
         YOGA_TARGET,
+        ":DisplayMetrics",
         react_native_dep("java/com/facebook/systrace:systrace"),
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/soloader/java/com/facebook/soloader:soloader"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
-        react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/debug/tags:tags"),
+        react_native_target("java/com/facebook/debug/holder:holder"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/common/mapbuffer:mapbuffer"),
@@ -97,13 +102,15 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
     ],
     deps = [
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BaseViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BaseViewManager.java
index 09ee5ea..f32bc44 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BaseViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/BaseViewManager.java
@@ -79,7 +79,6 @@ public abstract class BaseViewManager<T extends View, C extends LayoutShadowNode
     view.setTag(R.id.accessibility_state, null);
     view.setTag(R.id.accessibility_actions, null);
     view.setTag(R.id.accessibility_value, null);
-    view.setTag(R.id.accessibility_state_expanded, null);
 
     // This indirectly calls (and resets):
     // setTranslationX
@@ -115,7 +114,7 @@ public abstract class BaseViewManager<T extends View, C extends LayoutShadowNode
     view.setNextFocusRightId(View.NO_ID);
     view.setNextFocusUpId(View.NO_ID);
 
-    // This is possibly subject to change and overridable per-platform, but these
+    // This is possibly subject to change and overrideable per-platform, but these
     // are the default view flags in View.java:
     // https://android.googlesource.com/platform/frameworks/base/+/a175a5b/core/java/android/view/View.java#2712
     // `mViewFlags = SOUND_EFFECTS_ENABLED | HAPTIC_FEEDBACK_ENABLED | LAYOUT_DIRECTION_INHERIT`
@@ -271,9 +270,6 @@ public abstract class BaseViewManager<T extends View, C extends LayoutShadowNode
     if (accessibilityState == null) {
       return;
     }
-    if (accessibilityState.hasKey("expanded")) {
-      view.setTag(R.id.accessibility_state_expanded, accessibilityState.getBoolean("expanded"));
-    }
     if (accessibilityState.hasKey("selected")) {
       boolean prevSelected = view.isSelected();
       boolean nextSelected = accessibilityState.getBoolean("selected");
@@ -339,6 +335,13 @@ public abstract class BaseViewManager<T extends View, C extends LayoutShadowNode
             && value.getType() == ReadableType.Boolean
             && value.asBoolean()) {
           contentDescription.add(view.getContext().getString(R.string.state_busy_description));
+        } else if (state.equals(STATE_EXPANDED) && value.getType() == ReadableType.Boolean) {
+          contentDescription.add(
+              view.getContext()
+                  .getString(
+                      value.asBoolean()
+                          ? R.string.state_expanded_description
+                          : R.string.state_collapsed_description));
         }
       }
     }
@@ -366,13 +369,12 @@ public abstract class BaseViewManager<T extends View, C extends LayoutShadowNode
   @ReactProp(name = ViewProps.ACCESSIBILITY_VALUE)
   public void setAccessibilityValue(T view, ReadableMap accessibilityValue) {
     if (accessibilityValue == null) {
-      view.setTag(R.id.accessibility_value, null);
-      view.setContentDescription(null);
-    } else {
-      view.setTag(R.id.accessibility_value, accessibilityValue);
-      if (accessibilityValue.hasKey("text")) {
-        updateViewContentDescription(view);
-      }
+      return;
+    }
+
+    view.setTag(R.id.accessibility_value, accessibilityValue);
+    if (accessibilityValue.hasKey("text")) {
+      updateViewContentDescription(view);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewGroupManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewGroupManager.java
deleted file mode 100644
index 95b2531..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewGroupManager.java
+++ /dev/null
@@ -1,26 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.uimanager;
-
-import android.view.View;
-
-/** Interface providing children management API for view managers of classes extending ViewGroup. */
-public interface IViewGroupManager<T extends View> extends IViewManagerWithChildren {
-
-  /** Adds a child view into the parent at the index specified as a parameter */
-  void addView(T parent, View child, int index);
-
-  /** @return child of the parent view at the index specified as a parameter. */
-  View getChildAt(T parent, int index);
-
-  /** Removes View from the parent View at the index specified as a parameter. */
-  void removeViewAt(T parent, int index);
-
-  /** Return the amount of children contained by the view specified as a parameter. */
-  int getChildCount(T parent);
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewManagerWithChildren.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewManagerWithChildren.java
index f394656..8b9ea09 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewManagerWithChildren.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/IViewManagerWithChildren.java
@@ -16,5 +16,5 @@ public interface IViewManagerWithChildren {
    * of automatically laying out children without going through the ViewGroup's onLayout method. In
    * that case, onLayout for this View type must *not* call layout on its children.
    */
-  boolean needsCustomLayoutForChildren();
+  public boolean needsCustomLayoutForChildren();
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/JSPointerDispatcher.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/JSPointerDispatcher.java
index 8f4a992..88ab9e9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/JSPointerDispatcher.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/JSPointerDispatcher.java
@@ -22,10 +22,8 @@ import com.facebook.react.uimanager.events.PointerEventHelper.EVENT;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 
 /**
  * JSPointerDispatcher handles dispatching pointer events to JS from RootViews. If you implement
@@ -40,7 +38,6 @@ public class JSPointerDispatcher {
 
   private Map<Integer, List<ViewTarget>> mLastHitPathByPointerId;
   private Map<Integer, float[]> mLastEventCoordinatesByPointerId;
-  private Set<Integer> mHoveringPointerIds = new HashSet<>();
 
   private int mChildHandlingNativeGesture = -1;
   private int mPrimaryPointerId = UNSET_POINTER_ID;
@@ -78,9 +75,10 @@ public class JSPointerDispatcher {
       MotionEvent motionEvent,
       EventDispatcher eventDispatcher) {
 
-    int activePointerId = eventState.getActivePointerId();
-    List<ViewTarget> activeHitPath = eventState.getHitPathByPointerId().get(activePointerId);
+    List<ViewTarget> activeHitPath =
+        eventState.getHitPathByPointerId().get(eventState.getActivePointerId());
 
+    boolean supportsHover = PointerEventHelper.supportsHover(motionEvent);
     boolean listeningForUp =
         isAnyoneListeningForBubblingEvent(activeHitPath, EVENT.UP, EVENT.UP_CAPTURE);
     if (listeningForUp) {
@@ -89,8 +87,6 @@ public class JSPointerDispatcher {
               PointerEventHelper.POINTER_UP, activeTargetTag, eventState, motionEvent));
     }
 
-    boolean supportsHover = mHoveringPointerIds.contains(activePointerId);
-
     if (!supportsHover) {
       boolean listeningForOut =
           isAnyoneListeningForBubblingEvent(activeHitPath, EVENT.OUT, EVENT.OUT_CAPTURE);
@@ -115,7 +111,6 @@ public class JSPointerDispatcher {
     if (motionEvent.getActionMasked() == MotionEvent.ACTION_UP) {
       mPrimaryPointerId = UNSET_POINTER_ID;
     }
-    mHoveringPointerIds.remove(activePointerId);
   }
 
   private void incrementCoalescingKey() {
@@ -136,7 +131,7 @@ public class JSPointerDispatcher {
         eventState.getHitPathByPointerId().get(eventState.getActivePointerId());
 
     incrementCoalescingKey();
-    boolean supportsHover = mHoveringPointerIds.contains(eventState.getActivePointerId());
+    boolean supportsHover = PointerEventHelper.supportsHover(motionEvent);
     if (!supportsHover) {
       // Indirect OVER event dispatches before ENTER
       boolean listeningForOver =
@@ -169,7 +164,9 @@ public class JSPointerDispatcher {
     }
   }
 
-  private PointerEventState createEventState(int activePointerId, MotionEvent motionEvent) {
+  private PointerEventState createEventState(MotionEvent motionEvent) {
+    int activeIndex = motionEvent.getActionIndex();
+
     Map<Integer, float[]> offsetByPointerId = new HashMap<Integer, float[]>();
     Map<Integer, List<ViewTarget>> hitPathByPointerId = new HashMap<Integer, List<ViewTarget>>();
     Map<Integer, float[]> eventCoordinatesByPointerId = new HashMap<Integer, float[]>();
@@ -186,6 +183,7 @@ public class JSPointerDispatcher {
       eventCoordinatesByPointerId.put(pointerId, eventCoordinates);
     }
 
+    int activePointerId = motionEvent.getPointerId(activeIndex);
     int surfaceId = UIManagerHelper.getSurfaceId(mRootViewGroup);
 
     return new PointerEventState(
@@ -195,64 +193,31 @@ public class JSPointerDispatcher {
         surfaceId,
         offsetByPointerId,
         hitPathByPointerId,
-        eventCoordinatesByPointerId,
-        mHoveringPointerIds); // Creates a copy of hovering pointer ids, as they may be updated
+        eventCoordinatesByPointerId);
   }
 
-  public void handleMotionEvent(
-      MotionEvent motionEvent, EventDispatcher eventDispatcher, boolean isCapture) {
+  public void handleMotionEvent(MotionEvent motionEvent, EventDispatcher eventDispatcher) {
     // Don't fire any pointer events if child view is handling native gesture
     if (mChildHandlingNativeGesture != -1) {
       return;
     }
 
     int action = motionEvent.getActionMasked();
-    int activePointerId = motionEvent.getPointerId(motionEvent.getActionIndex());
     if (action == MotionEvent.ACTION_DOWN) {
       mPrimaryPointerId = motionEvent.getPointerId(0);
-    } else if (action == MotionEvent.ACTION_HOVER_MOVE) {
-      mHoveringPointerIds.add(activePointerId);
     }
 
-    PointerEventState eventState = createEventState(activePointerId, motionEvent);
-
-    // We've empirically determined that when we get a ACTION_HOVER_EXIT from the root view on the
-    // `onInterceptHoverEvent`, this means we've exited the root view.
-    // This logic may be wrong but reasoning about the dispatch sequence for HOVER_ENTER/HOVER_EXIT
-    // doesn't follow the capture/bubbling sequence like other MotionEvents. See:
-    // https://developer.android.com/reference/android/view/MotionEvent#ACTION_HOVER_ENTER
-    // https://suragch.medium.com/how-touch-events-are-delivered-in-android-eee3b607b038
-    boolean isExitFromRoot =
-        isCapture && motionEvent.getActionMasked() == MotionEvent.ACTION_HOVER_EXIT;
-
-    // Calculate the targetTag, with special handling for when we exit the root view. In that case,
-    // we use the root viewId of the last event
-    int activeTargetTag;
-
-    List<ViewTarget> activeHitPath;
-    if (isExitFromRoot) {
-      List<ViewTarget> lastHitPath =
-          mLastHitPathByPointerId != null
-              ? mLastHitPathByPointerId.get(eventState.getActivePointerId())
-              : null;
-      if (lastHitPath == null || lastHitPath.isEmpty()) {
-        return;
-      }
-      activeTargetTag = lastHitPath.get(lastHitPath.size() - 1).getViewId();
-
-      // Explicitly make the hit path for this cursor empty
-      activeHitPath = new ArrayList<>();
-      eventState.getHitPathByPointerId().put(activePointerId, activeHitPath);
-    } else {
-      activeHitPath = eventState.getHitPathByPointerId().get(activePointerId);
-      if (activeHitPath == null || activeHitPath.isEmpty()) {
-        return;
-      }
-      activeTargetTag = activeHitPath.get(0).getViewId();
+    PointerEventState eventState = createEventState(motionEvent);
+    List<ViewTarget> activeHitPath =
+        eventState.getHitPathByPointerId().get(eventState.getActivePointerId());
+
+    if (activeHitPath == null || activeHitPath.isEmpty()) {
+      return;
     }
 
-    // Dispatch pointer events from the MotionEvents. When we want to ignore an event, we need to
-    // exit early so we don't record anything about this MotionEvent.
+    TouchTargetHelper.ViewTarget activeViewTarget = activeHitPath.get(0);
+    int activeTargetTag = activeViewTarget.getViewId();
+
     switch (action) {
       case MotionEvent.ACTION_DOWN:
       case MotionEvent.ACTION_POINTER_DOWN:
@@ -260,21 +225,22 @@ public class JSPointerDispatcher {
         break;
       case MotionEvent.ACTION_HOVER_MOVE:
         // TODO(luwe) - converge this with ACTION_MOVE
-        // If we don't move enough, ignore this event.
-        float[] eventCoordinates = eventState.getEventCoordinatesByPointerId().get(activePointerId);
-        float[] lastEventCoordinates =
-            mLastEventCoordinatesByPointerId != null
-                    && mLastEventCoordinatesByPointerId.containsKey(activePointerId)
-                ? mLastEventCoordinatesByPointerId.get(activePointerId)
-                : new float[] {0, 0};
-        if (!qualifiedMove(eventCoordinates, lastEventCoordinates)) {
-          return;
-        }
-
+        // HOVER_MOVE may occur before DOWN. Add its downTime as a coalescing key
         onMove(activeTargetTag, eventState, motionEvent, eventDispatcher);
         break;
       case MotionEvent.ACTION_MOVE:
-        onMove(activeTargetTag, eventState, motionEvent, eventDispatcher);
+        // TODO(luwe) - converge this with ACTION_HOVER_MOVE
+        boolean listeningForMove =
+            isAnyoneListeningForBubblingEvent(activeHitPath, EVENT.MOVE, EVENT.MOVE_CAPTURE);
+        if (listeningForMove) {
+          eventDispatcher.dispatchEvent(
+              PointerEvent.obtain(
+                  PointerEventHelper.POINTER_MOVE,
+                  activeTargetTag,
+                  eventState,
+                  motionEvent,
+                  getCoalescingKey()));
+        }
         break;
       case MotionEvent.ACTION_UP:
       case MotionEvent.ACTION_POINTER_UP:
@@ -284,32 +250,16 @@ public class JSPointerDispatcher {
       case MotionEvent.ACTION_CANCEL:
         dispatchCancelEvent(eventState, motionEvent, eventDispatcher);
         break;
-      case MotionEvent.ACTION_HOVER_ENTER:
-        // Ignore these events as enters will be calculated from HOVER_MOVE
-        return;
-      case MotionEvent.ACTION_HOVER_EXIT:
-        // For root exits, we need to update our stored eventState to reflect this exit because we
-        // won't receive future HOVER_MOVE events when cursor is outside root view
-        if (isExitFromRoot) {
-          // We've set the hit path for this pointer to be empty to calculate all exits
-          onMove(activeTargetTag, eventState, motionEvent, eventDispatcher);
-        }
-        break;
       default:
         FLog.w(
             ReactConstants.TAG,
-            "Motion Event was ignored. Action=" + action + " Target=" + activeTargetTag);
+            "Warning : Motion Event was ignored. Action=" + action + " Target=" + activeTargetTag);
         return;
     }
 
-    // Caching the event state so we have a new "last"
     mLastHitPathByPointerId = eventState.getHitPathByPointerId();
     mLastEventCoordinatesByPointerId = eventState.getEventCoordinatesByPointerId();
     mLastButtonState = motionEvent.getButtonState();
-
-    // Clean up any stale pointerIds
-    Set<Integer> allPointerIds = mLastEventCoordinatesByPointerId.keySet();
-    mHoveringPointerIds.retainAll(allPointerIds);
   }
 
   private static boolean isAnyoneListeningForBubblingEvent(
@@ -371,11 +321,7 @@ public class JSPointerDispatcher {
     }
   }
 
-  private boolean qualifiedMove(float[] eventCoordinates, float[] lastEventCoordinates) {
-    return (Math.abs(lastEventCoordinates[0] - eventCoordinates[0]) > ONMOVE_EPSILON
-        || Math.abs(lastEventCoordinates[1] - eventCoordinates[1]) > ONMOVE_EPSILON);
-  }
-
+  // called on hover_move motion events only
   private void onMove(
       int targetTag,
       PointerEventState eventState,
@@ -383,6 +329,7 @@ public class JSPointerDispatcher {
       EventDispatcher eventDispatcher) {
 
     int activePointerId = eventState.getActivePointerId();
+    float[] eventCoordinates = eventState.getEventCoordinatesByPointerId().get(activePointerId);
     List<ViewTarget> activeHitPath = eventState.getHitPathByPointerId().get(activePointerId);
 
     List<ViewTarget> lastHitPath =
@@ -390,6 +337,21 @@ public class JSPointerDispatcher {
             ? mLastHitPathByPointerId.get(activePointerId)
             : new ArrayList<ViewTarget>();
 
+    float[] lastEventCoordinates =
+        mLastEventCoordinatesByPointerId != null
+                && mLastEventCoordinatesByPointerId.containsKey(activePointerId)
+            ? mLastEventCoordinatesByPointerId.get(activePointerId)
+            : new float[] {0, 0};
+
+    boolean qualifiedMove =
+        (Math.abs(lastEventCoordinates[0] - eventCoordinates[0]) > ONMOVE_EPSILON
+            || Math.abs(lastEventCoordinates[1] - eventCoordinates[1]) > ONMOVE_EPSILON);
+
+    // Early exit if active pointer has not moved enough
+    if (!qualifiedMove) {
+      return;
+    }
+
     // hitState is list ordered from inner child -> parent tag
     // Traverse hitState back-to-front to find the first divergence with lastHitPath
     // FIXME: this may generate incorrect events when view collapsing changes the hierarchy
@@ -498,9 +460,7 @@ public class JSPointerDispatcher {
         mChildHandlingNativeGesture == -1,
         "Expected to not have already sent a cancel for this gesture");
 
-    int activeIndex = motionEvent.getActionIndex();
-    int activePointerId = motionEvent.getPointerId(activeIndex);
-    PointerEventState eventState = createEventState(activePointerId, motionEvent);
+    PointerEventState eventState = createEventState(motionEvent);
     dispatchCancelEvent(eventState, motionEvent, eventDispatcher);
   }
 
@@ -513,8 +473,8 @@ public class JSPointerDispatcher {
         mChildHandlingNativeGesture == -1,
         "Expected to not have already sent a cancel for this gesture");
 
-    int activePointerId = eventState.getActivePointerId();
-    List<ViewTarget> activeHitPath = eventState.getHitPathByPointerId().get(activePointerId);
+    List<ViewTarget> activeHitPath =
+        eventState.getHitPathByPointerId().get(eventState.getActivePointerId());
 
     if (!activeHitPath.isEmpty()) {
       boolean listeningForCancel =
@@ -541,8 +501,6 @@ public class JSPointerDispatcher {
           eventDispatcher);
 
       incrementCoalescingKey();
-      mHoveringPointerIds.remove(mPrimaryPointerId);
-      mHoveringPointerIds.remove(activePointerId);
       mPrimaryPointerId = UNSET_POINTER_ID;
     }
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/LayoutShadowNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/LayoutShadowNode.java
index 46b833a..bfcf2be 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/LayoutShadowNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/LayoutShadowNode.java
@@ -8,10 +8,9 @@
 package com.facebook.react.uimanager;
 
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
 import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableType;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.modules.i18nmanager.I18nUtil;
 import com.facebook.react.uimanager.annotations.ReactProp;
 import com.facebook.react.uimanager.annotations.ReactPropGroup;
@@ -61,16 +60,11 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
           unit = YogaUnit.PERCENT;
           value = Float.parseFloat(s.substring(0, s.length() - 1));
         } else {
-          FLog.w(ReactConstants.TAG, "Unknown value: " + s);
-          unit = YogaUnit.UNDEFINED;
-          value = YogaConstants.UNDEFINED;
+          throw new IllegalArgumentException("Unknown value: " + s);
         }
-      } else if (dynamic.getType() == ReadableType.Number) {
+      } else {
         unit = YogaUnit.POINT;
         value = PixelUtil.toPixelFromDIP(dynamic.asDouble());
-      } else {
-        unit = YogaUnit.UNDEFINED;
-        value = YogaConstants.UNDEFINED;
       }
     }
   }
@@ -324,9 +318,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for flexDirection: " + flexDirection);
-          setFlexDirection(YogaFlexDirection.COLUMN);
-          break;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for flexDirection: " + flexDirection);
         }
     }
   }
@@ -360,9 +353,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for flexWrap: " + flexWrap);
-          setFlexWrap(YogaWrap.NO_WRAP);
-          break;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for flexWrap: " + flexWrap);
         }
     }
   }
@@ -421,9 +413,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for alignSelf: " + alignSelf);
-          setAlignSelf(YogaAlign.AUTO);
-          return;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for alignSelf: " + alignSelf);
         }
     }
   }
@@ -482,9 +473,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for alignItems: " + alignItems);
-          setAlignItems(YogaAlign.STRETCH);
-          return;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for alignItems: " + alignItems);
         }
     }
   }
@@ -543,9 +533,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for alignContent: " + alignContent);
-          setAlignContent(YogaAlign.FLEX_START);
-          return;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for alignContent: " + alignContent);
         }
     }
   }
@@ -594,9 +583,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for justifyContent: " + justifyContent);
-          setJustifyContent(YogaJustify.FLEX_START);
-          break;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for justifyContent: " + justifyContent);
         }
     }
   }
@@ -629,9 +617,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for overflow: " + overflow);
-          setOverflow(YogaOverflow.VISIBLE);
-          break;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for overflow: " + overflow);
         }
     }
   }
@@ -660,9 +647,7 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for display: " + display);
-          setDisplay(YogaDisplay.FLEX);
-          break;
+          throw new JSApplicationIllegalArgumentException("invalid value for display: " + display);
         }
     }
   }
@@ -835,9 +820,8 @@ public class LayoutShadowNode extends ReactShadowNodeImpl {
         }
       default:
         {
-          FLog.w(ReactConstants.TAG, "invalid value for position: " + position);
-          setPositionType(YogaPositionType.RELATIVE);
-          break;
+          throw new JSApplicationIllegalArgumentException(
+              "invalid value for position: " + position);
         }
     }
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/NativeViewHierarchyManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/NativeViewHierarchyManager.java
index c2e3023..d5fafeb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/NativeViewHierarchyManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/NativeViewHierarchyManager.java
@@ -373,7 +373,7 @@ public class NativeViewHierarchyManager {
 
   /**
    * @param tag react tag of the node we want to manage
-   * @param indicesToRemove ordered (asc) list of indices at which view should be removed
+   * @param indicesToRemove ordered (asc) list of indicies at which view should be removed
    * @param viewsToAdd ordered (asc based on mIndex property) list of tag-index pairs that represent
    *     a view which should be added at the specified index
    * @param tagsToDelete list of tags corresponding to views that should be removed
@@ -666,15 +666,6 @@ public class NativeViewHierarchyManager {
     mRootTags.delete(rootViewTag);
   }
 
-  /**
-   * Return root view num
-   *
-   * @return The num of root view
-   */
-  public synchronized int getRootViewNum() {
-    return mRootTags.size();
-  }
-
   /**
    * Returns true on success, false on failure. If successful, after calling, output buffer will be
    * {x, y, width, height}.
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ReactAccessibilityDelegate.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ReactAccessibilityDelegate.java
index 626232e..0f5f167 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ReactAccessibilityDelegate.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ReactAccessibilityDelegate.java
@@ -16,13 +16,10 @@ import android.os.Message;
 import android.text.Layout;
 import android.text.Spannable;
 import android.text.Spanned;
-import android.text.TextUtils;
 import android.text.style.AbsoluteSizeSpan;
 import android.text.style.ClickableSpan;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.accessibility.AccessibilityEvent;
-import android.widget.EditText;
 import android.widget.TextView;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -44,8 +41,6 @@ import com.facebook.react.bridge.ReadableMapKeySetIterator;
 import com.facebook.react.bridge.ReadableType;
 import com.facebook.react.bridge.UIManager;
 import com.facebook.react.bridge.WritableMap;
-import com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
-import com.facebook.react.uimanager.common.ViewUtil;
 import com.facebook.react.uimanager.events.Event;
 import com.facebook.react.uimanager.events.EventDispatcher;
 import com.facebook.react.uimanager.util.ReactFindViewUtil;
@@ -64,8 +59,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
   private static int sCounter = 0x3f000000;
   private static final int TIMEOUT_SEND_ACCESSIBILITY_EVENT = 200;
   private static final int SEND_EVENT = 1;
-  private static final String delimiter = ", ";
-  private static final int delimiterLength = delimiter.length();
 
   public static final HashMap<String, Integer> sActionIdMap = new HashMap<>();
 
@@ -74,8 +67,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
     sActionIdMap.put("longpress", AccessibilityActionCompat.ACTION_LONG_CLICK.getId());
     sActionIdMap.put("increment", AccessibilityActionCompat.ACTION_SCROLL_FORWARD.getId());
     sActionIdMap.put("decrement", AccessibilityActionCompat.ACTION_SCROLL_BACKWARD.getId());
-    sActionIdMap.put("expand", AccessibilityActionCompat.ACTION_EXPAND.getId());
-    sActionIdMap.put("collapse", AccessibilityActionCompat.ACTION_COLLAPSE.getId());
   }
 
   private final View mView;
@@ -105,7 +96,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
   public enum AccessibilityRole {
     NONE,
     BUTTON,
-    DROPDOWNLIST,
     TOGGLEBUTTON,
     LINK,
     SEARCH,
@@ -133,22 +123,12 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
     TIMER,
     LIST,
     GRID,
-    PAGER,
-    SCROLLVIEW,
-    HORIZONTALSCROLLVIEW,
-    VIEWGROUP,
-    WEBVIEW,
-    DRAWERLAYOUT,
-    SLIDINGDRAWER,
-    ICONMENU,
     TOOLBAR;
 
     public static String getValue(AccessibilityRole role) {
       switch (role) {
         case BUTTON:
           return "android.widget.Button";
-        case DROPDOWNLIST:
-          return "android.widget.Spinner";
         case TOGGLEBUTTON:
           return "android.widget.ToggleButton";
         case SEARCH:
@@ -156,7 +136,7 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
         case IMAGE:
           return "android.widget.ImageView";
         case IMAGEBUTTON:
-          return "android.widget.ImageButton";
+          return "android.widget.ImageButon";
         case KEYBOARDKEY:
           return "android.inputmethodservice.Keyboard$Key";
         case TEXT:
@@ -175,22 +155,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
           return "android.widget.AbsListView";
         case GRID:
           return "android.widget.GridView";
-        case SCROLLVIEW:
-          return "android.widget.ScrollView";
-        case HORIZONTALSCROLLVIEW:
-          return "android.widget.HorizontalScrollView";
-        case PAGER:
-          return "androidx.viewpager.widget.ViewPager";
-        case DRAWERLAYOUT:
-          return "androidx.drawerlayout.widget.DrawerLayout";
-        case SLIDINGDRAWER:
-          return "android.widget.SlidingDrawer";
-        case ICONMENU:
-          return "com.android.internal.view.menu.IconMenuView";
-        case VIEWGROUP:
-          return "android.view.ViewGroup";
-        case WEBVIEW:
-          return "android.webkit.WebView";
         case NONE:
         case LINK:
         case SUMMARY:
@@ -259,14 +223,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
   @Override
   public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {
     super.onInitializeAccessibilityNodeInfo(host, info);
-    if (host.getTag(R.id.accessibility_state_expanded) != null) {
-      final boolean accessibilityStateExpanded =
-          (boolean) host.getTag(R.id.accessibility_state_expanded);
-      info.addAction(
-          accessibilityStateExpanded
-              ? AccessibilityNodeInfoCompat.ACTION_COLLAPSE
-              : AccessibilityNodeInfoCompat.ACTION_EXPAND);
-    }
     final AccessibilityRole accessibilityRole =
         (AccessibilityRole) host.getTag(R.id.accessibility_role);
     final String accessibilityHint = (String) host.getTag(R.id.accessibility_hint);
@@ -363,17 +319,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
     if (testId != null) {
       info.setViewIdResourceName(testId);
     }
-    boolean missingContentDescription = TextUtils.isEmpty(info.getContentDescription());
-    boolean missingText = TextUtils.isEmpty(info.getText());
-    boolean missingTextAndDescription = missingContentDescription && missingText;
-    boolean hasContentToAnnounce =
-        accessibilityActions != null
-            || accessibilityState != null
-            || accessibilityLabelledBy != null
-            || accessibilityRole != null;
-    if (missingTextAndDescription && hasContentToAnnounce) {
-      info.setContentDescription(getTalkbackDescription(host, info));
-    }
   }
 
   @Override
@@ -408,12 +353,6 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
 
   @Override
   public boolean performAccessibilityAction(View host, int action, Bundle args) {
-    if (action == AccessibilityNodeInfoCompat.ACTION_COLLAPSE) {
-      host.setTag(R.id.accessibility_state_expanded, false);
-    }
-    if (action == AccessibilityNodeInfoCompat.ACTION_EXPAND) {
-      host.setTag(R.id.accessibility_state_expanded, true);
-    }
     if (mAccessibilityActionsMap.containsKey(action)) {
       final WritableMap event = Arguments.createMap();
       event.putString("actionName", mAccessibilityActionsMap.get(action));
@@ -421,8 +360,7 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
       if (reactContext.hasActiveReactInstance()) {
         final int reactTag = host.getId();
         final int surfaceId = UIManagerHelper.getSurfaceId(reactContext);
-        UIManager uiManager =
-            UIManagerHelper.getUIManager(reactContext, ViewUtil.getUIManagerType(reactTag));
+        UIManager uiManager = UIManagerHelper.getUIManager(reactContext, reactTag);
         if (uiManager != null) {
           uiManager
               .<EventDispatcher>getEventDispatcher()
@@ -786,295 +724,4 @@ public class ReactAccessibilityDelegate extends ExploreByTouchHelper {
 
     return null;
   }
-
-  /**
-   * Determines if the supplied {@link View} and {@link AccessibilityNodeInfoCompat} has any
-   * children which are not independently accessibility focusable and also have a spoken
-   * description.
-   *
-   * <p>NOTE: Accessibility services will include these children's descriptions in the closest
-   * focusable ancestor.
-   *
-   * @param view The {@link View} to evaluate
-   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate
-   * @return {@code true} if it has any non-actionable speaking descendants within its subtree
-   */
-  public static boolean hasNonActionableSpeakingDescendants(
-      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {
-
-    if (node == null || view == null || !(view instanceof ViewGroup)) {
-      return false;
-    }
-
-    final ViewGroup viewGroup = (ViewGroup) view;
-    for (int i = 0, count = viewGroup.getChildCount(); i < count; i++) {
-      final View childView = viewGroup.getChildAt(i);
-
-      if (childView == null) {
-        continue;
-      }
-
-      final AccessibilityNodeInfoCompat childNode = AccessibilityNodeInfoCompat.obtain();
-      try {
-        ViewCompat.onInitializeAccessibilityNodeInfo(childView, childNode);
-
-        if (!childNode.isVisibleToUser()) {
-          continue;
-        }
-
-        if (isAccessibilityFocusable(childNode, childView)) {
-          continue;
-        }
-
-        if (isSpeakingNode(childNode, childView)) {
-          return true;
-        }
-      } finally {
-        if (childNode != null) {
-          childNode.recycle();
-        }
-      }
-    }
-
-    return false;
-  }
-
-  /**
-   * Returns whether the node has valid RangeInfo.
-   *
-   * @param node The node to check.
-   * @return Whether the node has valid RangeInfo.
-   */
-  public static boolean hasValidRangeInfo(@Nullable AccessibilityNodeInfoCompat node) {
-    if (node == null) {
-      return false;
-    }
-
-    @Nullable final RangeInfoCompat rangeInfo = node.getRangeInfo();
-    if (rangeInfo == null) {
-      return false;
-    }
-
-    final float maxProgress = rangeInfo.getMax();
-    final float minProgress = rangeInfo.getMin();
-    final float currentProgress = rangeInfo.getCurrent();
-    final float diffProgress = maxProgress - minProgress;
-    return (diffProgress > 0.0f)
-        && (currentProgress >= minProgress)
-        && (currentProgress <= maxProgress);
-  }
-
-  /**
-   * Returns whether the specified node has state description.
-   *
-   * @param node The node to check.
-   * @return {@code true} if the node has state description.
-   */
-  private static boolean hasStateDescription(@Nullable AccessibilityNodeInfoCompat node) {
-    return node != null
-        && (!TextUtils.isEmpty(node.getStateDescription())
-            || node.isCheckable()
-            || hasValidRangeInfo(node));
-  }
-
-  /**
-   * Returns whether the supplied {@link View} and {@link AccessibilityNodeInfoCompat} would produce
-   * spoken feedback if it were accessibility focused. NOTE: not all speaking nodes are focusable.
-   *
-   * @param view The {@link View} to evaluate
-   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate
-   * @return {@code true} if it meets the criterion for producing spoken feedback
-   */
-  public static boolean isSpeakingNode(
-      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {
-    if (node == null || view == null) {
-      return false;
-    }
-
-    final int important = ViewCompat.getImportantForAccessibility(view);
-    if (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
-        || (important == ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO && node.getChildCount() <= 0)) {
-      return false;
-    }
-
-    return hasText(node)
-        || hasStateDescription(node)
-        || node.isCheckable()
-        || hasNonActionableSpeakingDescendants(node, view);
-  }
-
-  public static boolean hasText(@Nullable AccessibilityNodeInfoCompat node) {
-    return node != null
-        && node.getCollectionInfo() == null
-        && (!TextUtils.isEmpty(node.getText())
-            || !TextUtils.isEmpty(node.getContentDescription())
-            || !TextUtils.isEmpty(node.getHintText()));
-  }
-
-  /**
-   * Determines if the provided {@link View} and {@link AccessibilityNodeInfoCompat} meet the
-   * criteria for gaining accessibility focus.
-   *
-   * <p>Note: this is evaluating general focusability by accessibility services, and does not mean
-   * this view will be guaranteed to be focused by specific services such as Talkback. For Talkback
-   * focusability, see {@link #isTalkbackFocusable(View)}
-   *
-   * @param view The {@link View} to evaluate
-   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate
-   * @return {@code true} if it is possible to gain accessibility focus
-   */
-  public static boolean isAccessibilityFocusable(
-      @Nullable AccessibilityNodeInfoCompat node, @Nullable View view) {
-    if (node == null || view == null) {
-      return false;
-    }
-
-    // Never focus invisible nodes.
-    if (!node.isVisibleToUser()) {
-      return false;
-    }
-
-    // Always focus "actionable" nodes.
-    return node.isScreenReaderFocusable() || isActionableForAccessibility(node);
-  }
-
-  /**
-   * Returns whether a node is actionable. That is, the node supports one of {@link
-   * AccessibilityNodeInfoCompat#isClickable()}, {@link AccessibilityNodeInfoCompat#isFocusable()},
-   * or {@link AccessibilityNodeInfoCompat#isLongClickable()}.
-   *
-   * @param node The {@link AccessibilityNodeInfoCompat} to evaluate
-   * @return {@code true} if node is actionable.
-   */
-  public static boolean isActionableForAccessibility(@Nullable AccessibilityNodeInfoCompat node) {
-    if (node == null) {
-      return false;
-    }
-
-    if (node.isClickable() || node.isLongClickable() || node.isFocusable()) {
-      return true;
-    }
-
-    final List actionList = node.getActionList();
-    return actionList.contains(AccessibilityNodeInfoCompat.ACTION_CLICK)
-        || actionList.contains(AccessibilityNodeInfoCompat.ACTION_LONG_CLICK)
-        || actionList.contains(AccessibilityNodeInfoCompat.ACTION_FOCUS);
-  }
-
-  /**
-   * Returns a cached instance if such is available otherwise a new one.
-   *
-   * @param view The {@link View} to derive the AccessibilityNodeInfo properties from.
-   * @return {@link FlipperObject} containing the properties.
-   */
-  @Nullable
-  public static AccessibilityNodeInfoCompat createNodeInfoFromView(View view) {
-    if (view == null) {
-      return null;
-    }
-
-    final AccessibilityNodeInfoCompat nodeInfo = AccessibilityNodeInfoCompat.obtain();
-
-    // For some unknown reason, Android seems to occasionally throw a NPE from
-    // onInitializeAccessibilityNodeInfo.
-    try {
-      ViewCompat.onInitializeAccessibilityNodeInfo(view, nodeInfo);
-    } catch (NullPointerException e) {
-      if (nodeInfo != null) {
-        nodeInfo.recycle();
-      }
-      return null;
-    }
-
-    return nodeInfo;
-  }
-
-  /**
-   * Creates the text that Google's TalkBack screen reader will read aloud for a given {@link View}.
-   * This may be any combination of the {@link View}'s {@code text}, {@code contentDescription}, and
-   * the {@code text} and {@code contentDescription} of any ancestor {@link View}.
-   *
-   * <p>This description is generally ported over from Google's TalkBack screen reader, and this
-   * should be kept up to date with their implementation (as much as necessary). Details can be seen
-   * in their source code here:
-   *
-   * <p>https://github.com/google/talkback/compositor/src/main/res/raw/compositor.json - search for
-   * "get_description_for_tree", "append_description_for_tree", "description_for_tree_nodes"
-   *
-   * @param view The {@link View} to evaluate.
-   * @param info The default {@link AccessibilityNodeInfoCompat}.
-   * @return {@code String} representing what talkback will say when a {@link View} is focused.
-   */
-  @Nullable
-  public static CharSequence getTalkbackDescription(
-      View view, @Nullable AccessibilityNodeInfoCompat info) {
-    final AccessibilityNodeInfoCompat node =
-        info == null ? createNodeInfoFromView(view) : AccessibilityNodeInfoCompat.obtain(info);
-
-    if (node == null) {
-      return null;
-    }
-    try {
-      final CharSequence contentDescription = node.getContentDescription();
-      final CharSequence nodeText = node.getText();
-
-      final boolean hasNodeText = !TextUtils.isEmpty(nodeText);
-      final boolean isEditText = view instanceof EditText;
-
-      StringBuilder talkbackSegments = new StringBuilder();
-
-      // EditText's prioritize their own text content over a contentDescription so skip this
-      if (!TextUtils.isEmpty(contentDescription) && (!isEditText || !hasNodeText)) {
-        // next add content description
-        talkbackSegments.append(contentDescription);
-        return talkbackSegments;
-      }
-
-      // EditText
-      if (hasNodeText) {
-        // skipped status checks above for EditText
-
-        // description
-        talkbackSegments.append(nodeText);
-        return talkbackSegments;
-      }
-
-      // If there are child views and no contentDescription the text of all non-focusable children,
-      // comma separated, becomes the description.
-      if (view instanceof ViewGroup) {
-        final StringBuilder concatChildDescription = new StringBuilder();
-        final ViewGroup viewGroup = (ViewGroup) view;
-
-        for (int i = 0, count = viewGroup.getChildCount(); i < count; i++) {
-          final View child = viewGroup.getChildAt(i);
-
-          final AccessibilityNodeInfoCompat childNodeInfo = AccessibilityNodeInfoCompat.obtain();
-          ViewCompat.onInitializeAccessibilityNodeInfo(child, childNodeInfo);
-
-          if (isSpeakingNode(childNodeInfo, child)
-              && !isAccessibilityFocusable(childNodeInfo, child)) {
-            CharSequence childNodeDescription = getTalkbackDescription(child, null);
-            if (!TextUtils.isEmpty(childNodeDescription)) {
-              concatChildDescription.append(childNodeDescription + delimiter);
-            }
-          }
-          childNodeInfo.recycle();
-        }
-
-        return removeFinalDelimiter(concatChildDescription);
-      }
-
-      return null;
-    } finally {
-      node.recycle();
-    }
-  }
-
-  private static String removeFinalDelimiter(StringBuilder builder) {
-    int end = builder.length();
-    if (end > 0) {
-      builder.delete(end - delimiterLength, end);
-    }
-    return builder.toString();
-  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/Spacing.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/Spacing.java
index 9ff3766..36aeb97 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/Spacing.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/Spacing.java
@@ -47,18 +47,10 @@ public class Spacing {
    * Spacing type that represents all directions (left, top, right, bottom). E.g. {@code margin}.
    */
   public static final int ALL = 8;
-  /** Spacing type that represents block directions (top, bottom). E.g. {@code marginBlock}. */
-  public static final int BLOCK = 9;
-  /** Spacing type that represents the block end direction (bottom). E.g. {@code marginBlockEnd}. */
-  public static final int BLOCK_END = 10;
-  /**
-   * Spacing type that represents the block start direction (top). E.g. {@code marginBlockStart}.
-   */
-  public static final int BLOCK_START = 11;
 
   private static final int[] sFlagsMap = {
     1, /*LEFT*/ 2, /*TOP*/ 4, /*RIGHT*/ 8, /*BOTTOM*/ 16, /*START*/ 32, /*END*/ 64, /*HORIZONTAL*/
-    128, /*VERTICAL*/ 256, /*ALL*/ 512, /*BLOCK*/ 1024, /*BLOCK_END*/ 2048, /*BLOCK_START*/
+    128, /*VERTICAL*/ 256, /*ALL*/
   };
 
   private final float[] mSpacing;
@@ -104,8 +96,7 @@ public class Spacing {
       mHasAliasesSet =
           (mValueFlags & sFlagsMap[ALL]) != 0
               || (mValueFlags & sFlagsMap[VERTICAL]) != 0
-              || (mValueFlags & sFlagsMap[HORIZONTAL]) != 0
-              || (mValueFlags & sFlagsMap[BLOCK]) != 0;
+              || (mValueFlags & sFlagsMap[HORIZONTAL]) != 0;
 
       return true;
     }
@@ -120,13 +111,7 @@ public class Spacing {
    */
   public float get(int spacingType) {
     float defaultValue =
-        (spacingType == START
-                || spacingType == END
-                || spacingType == BLOCK
-                || spacingType == BLOCK_END
-                || spacingType == BLOCK_START
-            ? YogaConstants.UNDEFINED
-            : mDefaultValue);
+        (spacingType == START || spacingType == END ? YogaConstants.UNDEFINED : mDefaultValue);
 
     if (mValueFlags == 0) {
       return defaultValue;
@@ -189,9 +174,6 @@ public class Spacing {
       YogaConstants.UNDEFINED,
       YogaConstants.UNDEFINED,
       YogaConstants.UNDEFINED,
-      YogaConstants.UNDEFINED,
-      YogaConstants.UNDEFINED,
-      YogaConstants.UNDEFINED,
     };
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ThemedReactContext.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ThemedReactContext.java
index b10d2d9..28cd185 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ThemedReactContext.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ThemedReactContext.java
@@ -50,7 +50,6 @@ public class ThemedReactContext extends ReactContext {
     if (reactApplicationContext.hasCatalystInstance()) {
       initializeWithInstance(reactApplicationContext.getCatalystInstance());
     }
-    initializeInteropModules(reactApplicationContext);
     mReactApplicationContext = reactApplicationContext;
     mModuleName = moduleName;
     mSurfaceId = surfaceId;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TouchTargetHelper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TouchTargetHelper.java
index f3ad5d2..f0d7c6f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TouchTargetHelper.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TouchTargetHelper.java
@@ -17,9 +17,9 @@ import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.UiThreadUtil;
-import com.facebook.react.common.ReactConstants;
+import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.react.touch.ReactHitSlopView;
 import com.facebook.react.uimanager.common.ViewUtil;
 import java.util.ArrayList;
@@ -140,7 +140,7 @@ public class TouchTargetHelper {
         pathAccumulator = pathAccumulator.subList(firstReactAncestor, pathAccumulator.size());
       }
 
-      int targetTag = getTouchTargetForView(reactTargetView, viewCoords[0], viewCoords[1]);
+      int targetTag = getTouchTargetForView(reactTargetView, eventX, eventY);
       if (targetTag != reactTargetView.getId()) {
         pathAccumulator.add(0, new ViewTarget(targetTag, (View) null));
       }
@@ -192,6 +192,7 @@ public class TouchTargetHelper {
           // If the touch point is outside of the overflowinset for the view, we can safely ignore
           // it.
           if (ViewUtil.getUIManagerType(view.getId()) == FABRIC
+              && ReactFeatureFlags.useOverflowInset
               && !isTouchPointInViewWithOverflowInset(eventCoords[0], eventCoords[1], view)) {
             return null;
           }
@@ -367,10 +368,7 @@ public class TouchTargetHelper {
 
       return null;
 
-    } else {
-      if (pointerEvents != PointerEvents.AUTO) {
-        FLog.w(ReactConstants.TAG, "Unknown pointer event type: " + pointerEvents.toString());
-      }
+    } else if (pointerEvents == PointerEvents.AUTO) {
       // Either this view or one of its children is the target
       if (view instanceof ReactCompoundViewGroup
           && isTouchPointInView(eventCoords[0], eventCoords[1], view)
@@ -391,14 +389,18 @@ public class TouchTargetHelper {
         pathAccumulator.add(new ViewTarget(view.getId(), view));
       }
       return result;
+
+    } else {
+      throw new JSApplicationIllegalArgumentException(
+          "Unknown pointer event type: " + pointerEvents.toString());
     }
   }
 
-  private static int getTouchTargetForView(View targetView, float viewX, float viewY) {
+  private static int getTouchTargetForView(View targetView, float eventX, float eventY) {
     if (targetView instanceof ReactCompoundView) {
       // Use coordinates relative to the view, which have been already computed by
       // {@link #findTouchTargetView()}.
-      return ((ReactCompoundView) targetView).reactTagForTouch(viewX, viewY);
+      return ((ReactCompoundView) targetView).reactTagForTouch(eventX, eventY);
     }
     return targetView.getId();
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TransformHelper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TransformHelper.java
index 49d6af1..da72da4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TransformHelper.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/TransformHelper.java
@@ -7,11 +7,10 @@
 
 package com.facebook.react.uimanager;
 
-import com.facebook.common.logging.FLog;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.ReadableType;
-import com.facebook.react.common.ReactConstants;
 
 /**
  * Class providing helper methods for converting transformation list (as accepted by 'transform'
@@ -101,7 +100,8 @@ public class TransformHelper {
       } else if ("skewY".equals(transformType)) {
         MatrixMathHelper.applySkewY(helperMatrix, convertToRadians(transform, transformType));
       } else {
-        FLog.w(ReactConstants.TAG, "Unsupported transform type: " + transformType);
+        throw new JSApplicationIllegalArgumentException(
+            "Unsupported transform type: " + transformType);
       }
 
       MatrixMathHelper.multiplyInto(result, result, helperMatrix);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIImplementation.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIImplementation.java
index ed4ec63..55939a9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIImplementation.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIImplementation.java
@@ -170,15 +170,6 @@ public class UIImplementation {
     mOperationsQueue.enqueueRemoveRootView(rootViewTag);
   }
 
-  /**
-   * Return root view num
-   *
-   * @return The num of root view
-   */
-  private int getRootViewNum() {
-    return mOperationsQueue.getNativeViewHierarchyManager().getRootViewNum();
-  }
-
   /** Unregisters a root node with a given tag from the shadow node registry */
   public void removeRootShadowNode(int rootViewTag) {
     synchronized (uiImplementationThreadLock) {
@@ -301,7 +292,7 @@ public class UIImplementation {
    * Invoked when there is a mutation in a node tree.
    *
    * @param tag react tag of the node we want to manage
-   * @param indicesToRemove ordered (asc) list of indices at which view should be removed
+   * @param indicesToRemove ordered (asc) list of indicies at which view should be removed
    * @param viewsToAdd ordered (asc based on mIndex property) list of tag-index pairs that represent
    *     a view which should be added at the specified index
    * @param tagsToDelete list of tags corresponding to views that should be removed
@@ -608,12 +599,6 @@ public class UIImplementation {
 
   /** Invoked at the end of the transaction to commit any updates to the node hierarchy. */
   public void dispatchViewUpdates(int batchId) {
-    if (getRootViewNum() <= 0) {
-      // If there are no RootViews registered, there will be no View updates to dispatch.
-      // This is a hack to prevent this from being called when Fabric is used everywhere.
-      // This should no longer be necessary in Bridgeless Mode.
-      return;
-    }
     SystraceMessage.beginSection(
             Systrace.TRACE_TAG_REACT_JAVA_BRIDGE, "UIImplementation.dispatchViewUpdates")
         .arg("batchId", batchId)
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModule.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModule.java
index 78b174f..7525869 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModule.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModule.java
@@ -17,6 +17,7 @@ import android.content.res.Configuration;
 import android.view.View;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.collection.ArrayMap;
 import com.facebook.common.logging.FLog;
 import com.facebook.debug.holder.PrinterHolder;
 import com.facebook.debug.tags.ReactDebugOverlayTags;
@@ -48,6 +49,7 @@ import com.facebook.react.uimanager.events.RCTEventEmitter;
 import com.facebook.systrace.Systrace;
 import com.facebook.systrace.SystraceMessage;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.CopyOnWriteArrayList;
@@ -107,8 +109,11 @@ public class UIManagerModule extends ReactContextBaseJavaModule
   private final List<UIManagerModuleListener> mListeners = new ArrayList<>();
   private final CopyOnWriteArrayList<UIManagerListener> mUIManagerListeners =
       new CopyOnWriteArrayList<>();
+  private @Nullable Map<String, WritableMap> mViewManagerConstantsCache;
+  private volatile int mViewManagerConstantsCacheSize;
 
   private int mBatchId = 0;
+  private int mNumRootViews = 0;
 
   public UIManagerModule(
       ReactApplicationContext reactContext,
@@ -246,8 +251,50 @@ public class UIManagerModule extends ReactContextBaseJavaModule
     }
   }
 
+  /**
+   * Helper method to pre-compute the constants for a view manager. This method ensures that we
+   * don't block for getting the constants for view managers during TTI
+   *
+   * @deprecated this method will be removed in the future
+   * @param viewManagerNames {@link List<String>} names of ViewManagers
+   */
+  @Deprecated
+  @Override
+  public void preInitializeViewManagers(List<String> viewManagerNames) {
+    Map<String, WritableMap> constantsMap = new ArrayMap<>();
+    for (String viewManagerName : viewManagerNames) {
+      WritableMap constants = computeConstantsForViewManager(viewManagerName);
+      if (constants != null) {
+        constantsMap.put(viewManagerName, constants);
+      }
+    }
+
+    // To ensure that this is thread safe, we return an unmodifiableMap
+    // We use mViewManagerConstantsCacheSize to count the times we access the contents of the map
+    // Once we have accessed all the values, we free this cache
+    // Assumption is that JS gets the constants only once for each viewManager.
+    // Using this mechanism prevents expensive synchronized blocks, due to the nature of how this is
+    // accessed - write one, read multiple times, and then throw the data away.
+    mViewManagerConstantsCacheSize = viewManagerNames.size();
+    mViewManagerConstantsCache = Collections.unmodifiableMap(constantsMap);
+  }
+
   @ReactMethod(isBlockingSynchronousMethod = true)
   public @Nullable WritableMap getConstantsForViewManager(@Nullable String viewManagerName) {
+    if (mViewManagerConstantsCache != null
+        && mViewManagerConstantsCache.containsKey(viewManagerName)) {
+      WritableMap constants = mViewManagerConstantsCache.get(viewManagerName);
+      if (--mViewManagerConstantsCacheSize <= 0) {
+        // Looks like we have read all the values from the cache, so we may as well free this cache
+        mViewManagerConstantsCache = null;
+      }
+      return constants;
+    } else {
+      return computeConstantsForViewManager(viewManagerName);
+    }
+  }
+
+  private @Nullable WritableMap computeConstantsForViewManager(@Nullable String viewManagerName) {
     ViewManager targetView =
         viewManagerName != null ? mUIImplementation.resolveViewManager(viewManagerName) : null;
     if (targetView == null) {
@@ -356,6 +403,7 @@ public class UIManagerModule extends ReactContextBaseJavaModule
             -1);
 
     mUIImplementation.registerRootView(rootView, tag, themedRootContext);
+    mNumRootViews++;
     Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
     return tag;
   }
@@ -379,6 +427,7 @@ public class UIManagerModule extends ReactContextBaseJavaModule
   @ReactMethod
   public void removeRootView(int rootViewTag) {
     mUIImplementation.removeRootView(rootViewTag);
+    mNumRootViews--;
   }
 
   public void updateNodeSize(int nodeViewTag, int newWidth, int newHeight) {
@@ -719,7 +768,12 @@ public class UIManagerModule extends ReactContextBaseJavaModule
       listener.willDispatchViewUpdates(this);
     }
     try {
-      mUIImplementation.dispatchViewUpdates(batchId);
+      // If there are no RootViews registered, there will be no View updates to dispatch.
+      // This is a hack to prevent this from being called when Fabric is used everywhere.
+      // This should no longer be necessary in Bridgeless Mode.
+      if (mNumRootViews > 0) {
+        mUIImplementation.dispatchViewUpdates(batchId);
+      }
     } finally {
       Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
     }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstantsHelper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstantsHelper.java
index a570c7a..a4d8fac 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstantsHelper.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/UIManagerModuleConstantsHelper.java
@@ -10,15 +10,11 @@ package com.facebook.react.uimanager;
 import static com.facebook.systrace.Systrace.TRACE_TAG_REACT_JAVA_BRIDGE;
 
 import androidx.annotation.Nullable;
-import androidx.annotation.VisibleForTesting;
 import com.facebook.react.common.MapBuilder;
-import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.systrace.SystraceMessage;
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 
 /**
  * Helps generate constants map for {@link UIManagerModule} by collecting and merging constants from
@@ -117,13 +113,6 @@ import java.util.Set;
 
     Map viewManagerBubblingEvents = viewManager.getExportedCustomBubblingEventTypeConstants();
     if (viewManagerBubblingEvents != null) {
-
-      if (ReactFeatureFlags.enableFabricRenderer && ReactFeatureFlags.unstable_useFabricInterop) {
-        // For Fabric, events needs to be fired with a "top" prefix.
-        // For the sake of Fabric Interop, here we normalize events adding "top" in their
-        // name if the user hasn't provided it.
-        normalizeEventTypes(viewManagerBubblingEvents);
-      }
       recursiveMerge(cumulativeBubblingEventTypes, viewManagerBubblingEvents);
       recursiveMerge(viewManagerBubblingEvents, defaultBubblingEvents);
       viewManagerConstants.put(BUBBLING_EVENTS_KEY, viewManagerBubblingEvents);
@@ -156,27 +145,6 @@ import java.util.Set;
     return viewManagerConstants;
   }
 
-  @VisibleForTesting
-  /* package */ static void normalizeEventTypes(Map events) {
-    if (events == null) {
-      return;
-    }
-    Set<String> keysToNormalize = new HashSet<>();
-    for (Object key : events.keySet()) {
-      if (key instanceof String) {
-        String keyString = (String) key;
-        if (!keyString.startsWith("top")) {
-          keysToNormalize.add(keyString);
-        }
-      }
-    }
-    for (String oldKey : keysToNormalize) {
-      Object value = events.get(oldKey);
-      String newKey = "top" + oldKey.substring(0, 1).toUpperCase() + oldKey.substring(1);
-      events.put(newKey, value);
-    }
-  }
-
   /** Merges {@param source} map into {@param dest} map recursively */
   private static void recursiveMerge(@Nullable Map dest, @Nullable Map source) {
     if (dest == null || source == null || source.isEmpty()) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewGroupManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewGroupManager.java
index 12fca87..8605405 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewGroupManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewGroupManager.java
@@ -16,7 +16,7 @@ import java.util.WeakHashMap;
 
 /** Class providing children management API for view managers of classes extending ViewGroup. */
 public abstract class ViewGroupManager<T extends ViewGroup>
-    extends BaseViewManager<T, LayoutShadowNode> implements IViewGroupManager<T> {
+    extends BaseViewManager<T, LayoutShadowNode> implements IViewManagerWithChildren {
 
   private static WeakHashMap<View, Integer> mZIndexHash = new WeakHashMap<>();
 
@@ -33,7 +33,6 @@ public abstract class ViewGroupManager<T extends ViewGroup>
   @Override
   public void updateExtraData(T root, Object extraData) {}
 
-  @Override
   public void addView(T parent, View child, int index) {
     parent.addView(child, index);
   }
@@ -61,17 +60,14 @@ public abstract class ViewGroupManager<T extends ViewGroup>
     return mZIndexHash.get(view);
   }
 
-  @Override
   public int getChildCount(T parent) {
     return parent.getChildCount();
   }
 
-  @Override
   public View getChildAt(T parent, int index) {
     return parent.getChildAt(index);
   }
 
-  @Override
   public void removeViewAt(T parent, int index) {
     UiThreadUtil.assertOnUiThread();
 
@@ -109,4 +105,14 @@ public abstract class ViewGroupManager<T extends ViewGroup>
   public boolean needsCustomLayoutForChildren() {
     return false;
   }
+
+  /**
+   * Returns whether or not this View type should promote its grandchildren as Views. This is an
+   * optimization for Scrollable containers when using Nodes, where instead of having one ViewGroup
+   * containing a large number of draw commands (and thus being more expensive in the case of an
+   * invalidate or re-draw), we split them up into several draw commands.
+   */
+  public boolean shouldPromoteGrandchildren() {
+    return false;
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java
index 6c5a085..17f975e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java
@@ -234,7 +234,7 @@ public abstract class ViewManager<T extends View, C extends ReactShadowNode>
   }
 
   /**
-   * Called when a View is removed from the hierarchy. This should be used to reset any properties.
+   * Called when a View is removed from the hierachy. This should be used to reset any properties.
    */
   protected T prepareToRecycleView(@NonNull ThemedReactContext reactContext, @NonNull T view) {
     return view;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManagerRegistry.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManagerRegistry.java
index 995f6ee..ec107e8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManagerRegistry.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManagerRegistry.java
@@ -12,7 +12,6 @@ import android.content.res.Configuration;
 import androidx.annotation.Nullable;
 import com.facebook.react.bridge.UiThreadUtil;
 import com.facebook.react.common.MapBuilder;
-import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 
@@ -52,7 +51,7 @@ public final class ViewManagerRegistry implements ComponentCallbacks2 {
    *     view manager registered for the className received as a parameter.
    * @return the {@link ViewManager} registered to the className received as a parameter
    */
-  public synchronized ViewManager get(String className) {
+  public ViewManager get(String className) {
     ViewManager viewManager = mViewManagers.get(className);
     if (viewManager != null) {
       return viewManager;
@@ -85,7 +84,7 @@ public final class ViewManagerRegistry implements ComponentCallbacks2 {
    *     there is no ViewManager associated to the className received as a parameter.
    */
   @Nullable
-  /* package */ synchronized ViewManager getViewManagerIfExists(String className) {
+  ViewManager getViewManagerIfExists(String className) {
     ViewManager viewManager = mViewManagers.get(className);
     if (viewManager != null) {
       return viewManager;
@@ -98,16 +97,12 @@ public final class ViewManagerRegistry implements ComponentCallbacks2 {
 
   /** Send lifecycle signal to all ViewManagers that StopSurface has been called. */
   public void onSurfaceStopped(final int surfaceId) {
-    final List<ViewManager> viewManagers;
-    synchronized (this) {
-      viewManagers = new ArrayList<>(mViewManagers.values());
-    }
     Runnable runnable =
         new Runnable() {
           @Override
           public void run() {
-            for (ViewManager viewManager : viewManagers) {
-              viewManager.onSurfaceStopped(surfaceId);
+            for (Map.Entry<String, ViewManager> entry : mViewManagers.entrySet()) {
+              entry.getValue().onSurfaceStopped(surfaceId);
             }
           }
         };
@@ -121,16 +116,12 @@ public final class ViewManagerRegistry implements ComponentCallbacks2 {
   /** ComponentCallbacks2 method. */
   @Override
   public void onTrimMemory(int level) {
-    final List<ViewManager> viewManagers;
-    synchronized (this) {
-      viewManagers = new ArrayList<>(mViewManagers.values());
-    }
     Runnable runnable =
         new Runnable() {
           @Override
           public void run() {
-            for (ViewManager viewManager : viewManagers) {
-              viewManager.trimMemory();
+            for (Map.Entry<String, ViewManager> entry : mViewManagers.entrySet()) {
+              entry.getValue().trimMemory();
             }
           }
         };
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewProps.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewProps.java
index 3f76fa7..462fd25 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewProps.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewProps.java
@@ -135,17 +135,10 @@ public class ViewProps {
   public static final String BORDER_RIGHT_COLOR = "borderRightColor";
   public static final String BORDER_TOP_COLOR = "borderTopColor";
   public static final String BORDER_BOTTOM_COLOR = "borderBottomColor";
-  public static final String BORDER_BLOCK_COLOR = "borderBlockColor";
-  public static final String BORDER_BLOCK_END_COLOR = "borderBlockEndColor";
-  public static final String BORDER_BLOCK_START_COLOR = "borderBlockStartColor";
   public static final String BORDER_TOP_START_RADIUS = "borderTopStartRadius";
   public static final String BORDER_TOP_END_RADIUS = "borderTopEndRadius";
   public static final String BORDER_BOTTOM_START_RADIUS = "borderBottomStartRadius";
   public static final String BORDER_BOTTOM_END_RADIUS = "borderBottomEndRadius";
-  public static final String BORDER_END_END_RADIUS = "borderEndEndRadius";
-  public static final String BORDER_END_START_RADIUS = "borderEndStartRadius";
-  public static final String BORDER_START_END_RADIUS = "borderStartEndRadius";
-  public static final String BORDER_START_START_RADIUS = "borderStartStartRadius";
   public static final String BORDER_START_COLOR = "borderStartColor";
   public static final String BORDER_END_COLOR = "borderEndColor";
   public static final String ON_LAYOUT = "onLayout";
@@ -302,15 +295,6 @@ public class ViewProps {
       case BORDER_BOTTOM_COLOR:
         return map.getType(BORDER_BOTTOM_COLOR) == ReadableType.Number
             && map.getInt(BORDER_BOTTOM_COLOR) == Color.TRANSPARENT;
-      case BORDER_BLOCK_COLOR:
-        return map.getType(BORDER_BLOCK_COLOR) == ReadableType.Number
-            && map.getInt(BORDER_BLOCK_COLOR) == Color.TRANSPARENT;
-      case BORDER_BLOCK_END_COLOR:
-        return map.getType(BORDER_BLOCK_END_COLOR) == ReadableType.Number
-            && map.getInt(BORDER_BLOCK_END_COLOR) == Color.TRANSPARENT;
-      case BORDER_BLOCK_START_COLOR:
-        return map.getType(BORDER_BLOCK_START_COLOR) == ReadableType.Number
-            && map.getInt(BORDER_BLOCK_START_COLOR) == Color.TRANSPARENT;
       case BORDER_WIDTH:
         return map.isNull(BORDER_WIDTH) || map.getDouble(BORDER_WIDTH) == 0d;
       case BORDER_LEFT_WIDTH:
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/common/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/common/BUCK
index 7e66ae0..8820a30 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/common/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/common/BUCK
@@ -8,15 +8,18 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
     ],
     deps = [
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java
index 2178af1..01b355d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/Event.java
@@ -77,7 +77,7 @@ public abstract class Event<T extends Event> {
     //
     // Why does this matter?
     // Events can be sent to Views that are part of the View hierarchy *but not directly managed
-    // by React Native*. For example, embedded custom hierarchies, Litho hierarchies, etc.
+    // by React Native*. For example, embedded custom hierachies, Litho hierachies, etc.
     // In those cases it's important to know that the Event should be sent to the Fabric or
     // non-Fabric UIManager, and we cannot use the ViewTag for inference since it's not controlled
     // by RN and is essentially a random number.
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/EventCategoryDef.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/EventCategoryDef.java
index a4dbf0f..4cf9f7e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/EventCategoryDef.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/EventCategoryDef.java
@@ -14,15 +14,12 @@ import static com.facebook.react.uimanager.events.EventCategoryDef.DISCRETE;
 import static com.facebook.react.uimanager.events.EventCategoryDef.UNSPECIFIED;
 
 import androidx.annotation.IntDef;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
 
 /**
  * Java specific declaration of the `RawEvent::Category` enum. Keep in sync with
  * `renderer/core/RawEvent.h`.
  */
 @IntDef(value = {CONTINUOUS_START, CONTINUOUS_END, UNSPECIFIED, DISCRETE, CONTINUOUS})
-@Retention(RetentionPolicy.SOURCE)
 public @interface EventCategoryDef {
   /** Start of a continuous event. To be used with touchStart. */
   int CONTINUOUS_START = 0;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEvent.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEvent.java
index 589a115..ed7004a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEvent.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEvent.java
@@ -18,10 +18,8 @@ import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.TouchTargetHelper;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
-import java.util.Set;
 
 public class PointerEvent extends Event<PointerEvent> {
   private static final String TAG = PointerEvent.class.getSimpleName();
@@ -124,21 +122,18 @@ public class PointerEvent extends Event<PointerEvent> {
           new EventAnimationDriverMatchSpec() {
             @Override
             public boolean match(int viewTag, String eventName) {
-              if (!eventName.equals(mEventName)) {
+              if (!PointerEventHelper.isBubblingEvent(eventName)) {
                 return false;
               }
 
-              if (PointerEventHelper.isBubblingEvent(eventName)) {
-                for (TouchTargetHelper.ViewTarget viewTarget :
-                    mEventState.getHitPathForActivePointer()) {
-                  if (viewTarget.getViewId() == viewTag) {
-                    return true;
-                  }
+              List<TouchTargetHelper.ViewTarget> viewTargets =
+                  mEventState.getHitPathForActivePointer();
+              for (TouchTargetHelper.ViewTarget viewTarget : viewTargets) {
+                if (viewTarget.getViewId() == viewTag && eventName.equals(mEventName)) {
+                  return true;
                 }
-                return false;
-              } else {
-                return getViewTag() == viewTag;
               }
+              return false;
             }
           };
     }
@@ -189,9 +184,9 @@ public class PointerEvent extends Event<PointerEvent> {
     String pointerType = PointerEventHelper.getW3CPointerType(mMotionEvent.getToolType(index));
     pointerEvent.putString("pointerType", pointerType);
 
-    boolean isPrimary =
-        mEventState.supportsHover(pointerId) || pointerId == mEventState.mPrimaryPointerId;
-    pointerEvent.putBoolean("isPrimary", isPrimary);
+    pointerEvent.putBoolean(
+        "isPrimary",
+        PointerEventHelper.isPrimary(pointerId, mEventState.getPrimaryPointerId(), mMotionEvent));
 
     // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent
     // Client refers to upper left edge of the content area (viewport)
@@ -315,7 +310,6 @@ public class PointerEvent extends Event<PointerEvent> {
     private Map<Integer, float[]> mOffsetByPointerId;
     private Map<Integer, List<TouchTargetHelper.ViewTarget>> mHitPathByPointerId;
     private Map<Integer, float[]> mEventCoordinatesByPointerId;
-    private Set<Integer> mHoveringPointerIds;
 
     public PointerEventState(
         int primaryPointerId,
@@ -324,8 +318,7 @@ public class PointerEvent extends Event<PointerEvent> {
         int surfaceId,
         Map<Integer, float[]> offsetByPointerId,
         Map<Integer, List<TouchTargetHelper.ViewTarget>> hitPathByPointerId,
-        Map<Integer, float[]> eventCoordinatesByPointerId,
-        Set<Integer> hoveringPointerIds) {
+        Map<Integer, float[]> eventCoordinatesByPointerId) {
       mPrimaryPointerId = primaryPointerId;
       mActivePointerId = activePointerId;
       mLastButtonState = lastButtonState;
@@ -333,7 +326,6 @@ public class PointerEvent extends Event<PointerEvent> {
       mOffsetByPointerId = offsetByPointerId;
       mHitPathByPointerId = hitPathByPointerId;
       mEventCoordinatesByPointerId = eventCoordinatesByPointerId;
-      mHoveringPointerIds = new HashSet<>(hoveringPointerIds);
     }
 
     public int getLastButtonState() {
@@ -352,10 +344,6 @@ public class PointerEvent extends Event<PointerEvent> {
       return mActivePointerId;
     }
 
-    public boolean supportsHover(int pointerId) {
-      return mHoveringPointerIds.contains(pointerId);
-    }
-
     public final Map<Integer, float[]> getOffsetByPointerId() {
       return mOffsetByPointerId;
     }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEventHelper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEventHelper.java
index 757d5f5..da6b77c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEventHelper.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/PointerEventHelper.java
@@ -11,7 +11,9 @@ import android.view.InputDevice;
 import android.view.MotionEvent;
 import android.view.View;
 import androidx.annotation.Nullable;
+import com.facebook.common.logging.FLog;
 import com.facebook.react.R;
+import com.facebook.react.common.ReactConstants;
 
 /** Class responsible for generating catalyst touch events based on android {@link MotionEvent}. */
 public class PointerEventHelper {
@@ -20,7 +22,6 @@ public class PointerEventHelper {
   public static final String POINTER_TYPE_PEN = "pen";
   public static final String POINTER_TYPE_MOUSE = "mouse";
   public static final String POINTER_TYPE_UNKNOWN = "";
-  private static final int X_FLAG_SUPPORTS_HOVER = 0x01000000;
 
   public static enum EVENT {
     CANCEL,
@@ -50,6 +51,31 @@ public class PointerEventHelper {
   public static final String POINTER_OVER = "topPointerOver";
   public static final String POINTER_OUT = "topPointerOut";
 
+  /** We don't dispatch capture events from native; that's currently handled by JS. */
+  public static @Nullable String getDispatchableEventName(EVENT event) {
+    switch (event) {
+      case LEAVE:
+        return PointerEventHelper.POINTER_LEAVE;
+      case DOWN:
+        return PointerEventHelper.POINTER_DOWN;
+      case MOVE:
+        return PointerEventHelper.POINTER_MOVE;
+      case ENTER:
+        return PointerEventHelper.POINTER_ENTER;
+      case CANCEL:
+        return PointerEventHelper.POINTER_CANCEL;
+      case UP:
+        return PointerEventHelper.POINTER_UP;
+      case OVER:
+        return PointerEventHelper.POINTER_OVER;
+      case OUT:
+        return PointerEventHelper.POINTER_OUT;
+      default:
+        FLog.e(ReactConstants.TAG, "No dispatchable event name for type: " + event);
+        return null;
+    }
+  }
+
   // https://w3c.github.io/pointerevents/#the-buttons-property
   public static int getButtons(String eventName, String pointerType, int buttonState) {
     if (isExitEvent(eventName)) {
@@ -90,6 +116,14 @@ public class PointerEventHelper {
     return -1;
   }
 
+  public static boolean isPrimary(int pointerId, int primaryPointerId, MotionEvent event) {
+    if (supportsHover(event)) {
+      return true;
+    }
+
+    return pointerId == primaryPointerId;
+  }
+
   public static String getW3CPointerType(final int toolType) {
     // https://www.w3.org/TR/pointerevents3/#dom-pointerevent-pointertype
     switch (toolType) {
@@ -107,7 +141,7 @@ public class PointerEventHelper {
 
   public static boolean isListening(@Nullable View view, EVENT event) {
     if (view == null) {
-      return true;
+      return false;
     }
 
     switch (event) {
@@ -150,16 +184,8 @@ public class PointerEventHelper {
   }
 
   public static boolean supportsHover(MotionEvent motionEvent) {
-    // A flag has been set on the MotionEvent to indicate it supports hover
-    // See D36958947 on justifications for this.
-    // TODO(luwe): Leverage previous events to determine if MotionEvent
-    //  is from an input device that supports hover
-    boolean supportsHoverFlag = (motionEvent.getFlags() & X_FLAG_SUPPORTS_HOVER) != 0;
-    if (supportsHoverFlag) {
-      return true;
-    }
-
-    return motionEvent.isFromSource(InputDevice.SOURCE_MOUSE);
+    int source = motionEvent.getSource();
+    return source == InputDevice.SOURCE_MOUSE || source == InputDevice.SOURCE_CLASS_POINTER;
   }
 
   public static boolean isExitEvent(String eventName) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/RCTEventEmitter.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/RCTEventEmitter.java
index 49234af..82e26d5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/RCTEventEmitter.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/events/RCTEventEmitter.java
@@ -20,12 +20,12 @@ public interface RCTEventEmitter extends JavaScriptModule {
   /**
    * Deprecated in favor of RCTModernEventEmitter.receiveEvent.
    *
-   * @param targetReactTag react tag of the view that receives the event
-   * @param eventName name of event
-   * @param event event params
+   * @param targetTag
+   * @param eventName
+   * @param event
    */
   @Deprecated
-  void receiveEvent(int targetReactTag, String eventName, @Nullable WritableMap event);
+  void receiveEvent(int targetTag, String eventName, @Nullable WritableMap event);
 
   /**
    * Receive and process touches
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/util/ReactFindViewUtil.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/util/ReactFindViewUtil.java
index 18312c3..c86e731 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/util/ReactFindViewUtil.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/util/ReactFindViewUtil.java
@@ -43,6 +43,11 @@ public class ReactFindViewUtil {
   public interface OnMultipleViewsFoundListener {
 
     void onViewFound(View view, String nativeId);
+    /**
+     * Called when all teh views have been found
+     *
+     * @param map
+     */
   }
 
   /**
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/common/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/common/BUCK
index 005d554..4a06ec1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/common/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/common/BUCK
@@ -8,14 +8,17 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
-    visibility = [
-        "PUBLIC",
-    ],
-    deps = [
+    provided_deps = [
+        react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
-        react_native_dep("third-party/java/jsr-305:jsr-305"),
+    ],
+    visibility = [
+        "PUBLIC",
+    ],
+    deps = [
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/BUCK
index 5579a69..9677362 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/BUCK
@@ -8,25 +8,26 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:drawerlayout"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_root_target(":generated_components_java-FBReactNativeComponentSpec"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
         react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
         react_native_target("java/com/facebook/react/views/scroll:scroll"),
-        react_native_target("res:uimanager"),
+        react_native_root_target(":generated_components_java-FBReactNativeComponentSpec"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayout.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayout.java
index 4039288..ab9bb7d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayout.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayout.java
@@ -10,16 +10,10 @@ package com.facebook.react.views.drawer;
 import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.View;
-import android.view.accessibility.AccessibilityEvent;
-import androidx.core.view.AccessibilityDelegateCompat;
-import androidx.core.view.ViewCompat;
-import androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
 import androidx.drawerlayout.widget.DrawerLayout;
 import com.facebook.common.logging.FLog;
-import com.facebook.react.R;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.common.ReactConstants;
-import com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
 import com.facebook.react.uimanager.events.NativeGestureUtil;
 
 /**
@@ -35,30 +29,6 @@ import com.facebook.react.uimanager.events.NativeGestureUtil;
 
   public ReactDrawerLayout(ReactContext reactContext) {
     super(reactContext);
-    ViewCompat.setAccessibilityDelegate(
-        this,
-        new AccessibilityDelegateCompat() {
-          @Override
-          public void onInitializeAccessibilityNodeInfo(
-              View host, AccessibilityNodeInfoCompat info) {
-            super.onInitializeAccessibilityNodeInfo(host, info);
-            final AccessibilityRole accessibilityRole =
-                (AccessibilityRole) host.getTag(R.id.accessibility_role);
-            if (accessibilityRole != null) {
-              info.setClassName(AccessibilityRole.getValue(accessibilityRole));
-            }
-          }
-
-          @Override
-          public void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) {
-            super.onInitializeAccessibilityEvent(host, event);
-            final AccessibilityRole accessibilityRole =
-                (AccessibilityRole) host.getTag(R.id.accessibility_role);
-            if (accessibilityRole != null) {
-              event.setClassName(AccessibilityRole.getValue(accessibilityRole));
-            }
-          }
-        });
   }
 
   @Override
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayoutManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayoutManager.java
index 68a941f..f3b5012 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayoutManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/drawer/ReactDrawerLayoutManager.java
@@ -12,13 +12,11 @@ import android.view.View;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.drawerlayout.widget.DrawerLayout;
-import com.facebook.common.logging.FLog;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableType;
 import com.facebook.react.common.MapBuilder;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.ThemedReactContext;
@@ -92,14 +90,13 @@ public class ReactDrawerLayoutManager extends ViewGroupManager<ReactDrawerLayout
       if (Gravity.START == drawerPositionNum || Gravity.END == drawerPositionNum) {
         view.setDrawerPosition(drawerPositionNum);
       } else {
-        FLog.w(ReactConstants.TAG, "Unknown drawerPosition " + drawerPositionNum);
-        view.setDrawerPosition(Gravity.START);
+        throw new JSApplicationIllegalArgumentException(
+            "Unknown drawerPosition " + drawerPositionNum);
       }
     } else if (drawerPosition.getType() == ReadableType.String) {
       setDrawerPositionInternal(view, drawerPosition.asString());
     } else {
-      FLog.w(ReactConstants.TAG, "drawerPosition must be a string or int");
-      view.setDrawerPosition(Gravity.START);
+      throw new JSApplicationIllegalArgumentException("drawerPosition must be a string or int");
     }
   }
 
@@ -109,10 +106,8 @@ public class ReactDrawerLayoutManager extends ViewGroupManager<ReactDrawerLayout
     } else if (drawerPosition.equals("right")) {
       view.setDrawerPosition(Gravity.END);
     } else {
-      FLog.w(
-          ReactConstants.TAG,
+      throw new JSApplicationIllegalArgumentException(
           "drawerPosition must be 'left' or 'right', received" + drawerPosition);
-      view.setDrawerPosition(Gravity.START);
     }
   }
 
@@ -144,8 +139,7 @@ public class ReactDrawerLayoutManager extends ViewGroupManager<ReactDrawerLayout
     } else if ("locked-open".equals(drawerLockMode)) {
       view.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_OPEN);
     } else {
-      FLog.w(ReactConstants.TAG, "Unknown drawerLockMode " + drawerLockMode);
-      view.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED);
+      throw new JSApplicationIllegalArgumentException("Unknown drawerLockMode " + drawerLockMode);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/BUCK
index eecd39d..f4a3f14 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/BUCK
@@ -12,13 +12,16 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
-    required_for_source_only_abi = True,
-    visibility = ["PUBLIC"],
-    deps = [
+    provided_deps = [
         react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
+    required_for_source_only_abi = True,
+    visibility = ["PUBLIC"],
+    deps = [
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
@@ -36,29 +39,31 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/fresco/fresco-react-native:fbcore"),
         react_native_dep("libraries/fresco/fresco-react-native:fresco-drawee"),
         react_native_dep("libraries/fresco/fresco-react-native:fresco-react-native"),
         react_native_dep("libraries/fresco/fresco-react-native:imagepipeline"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
-        react_native_target("java/com/facebook/react/modules/fresco:fresco"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
-        react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
         react_native_target("java/com/facebook/react/util:util"),
+        react_native_target("java/com/facebook/react/modules/fresco:fresco"),
+        react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
         react_native_target("java/com/facebook/react/views/imagehelper:withmultisource"),
     ],
     exported_deps = [
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ImageResizeMode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ImageResizeMode.java
index 8af1fce..54df4db 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ImageResizeMode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ImageResizeMode.java
@@ -9,9 +9,8 @@ package com.facebook.react.views.image;
 
 import android.graphics.Shader;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
 import com.facebook.drawee.drawable.ScalingUtils;
-import com.facebook.react.common.ReactConstants;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 
 /** Converts JS resize modes into Android-specific scale type. */
 public class ImageResizeMode {
@@ -42,11 +41,12 @@ public class ImageResizeMode {
       // Handled via a combination of ScaleType and TileMode
       return ScaleTypeStartInside.INSTANCE;
     }
-    if (resizeModeValue != null) {
-      FLog.w(ReactConstants.TAG, "Invalid resize mode: '" + resizeModeValue + "'");
+    if (resizeModeValue == null) {
+      // Use the default. Never use null.
+      return defaultValue();
     }
-    // Use the default. Never use null.
-    return defaultValue();
+    throw new JSApplicationIllegalArgumentException(
+        "Invalid resize mode: '" + resizeModeValue + "'");
   }
 
   /** Converts JS resize modes into {@code Shader.TileMode}. See {@code ImageResizeMode.js}. */
@@ -61,11 +61,12 @@ public class ImageResizeMode {
       // Handled via a combination of ScaleType and TileMode
       return Shader.TileMode.REPEAT;
     }
-    if (resizeModeValue != null) {
-      FLog.w(ReactConstants.TAG, "Invalid resize mode: '" + resizeModeValue + "'");
+    if (resizeModeValue == null) {
+      // Use the default. Never use null.
+      return defaultTileMode();
     }
-    // Use the default. Never use null.
-    return defaultTileMode();
+    throw new JSApplicationIllegalArgumentException(
+        "Invalid resize mode: '" + resizeModeValue + "'");
   }
 
   /** This is the default as per web and iOS. We want to be consistent across platforms. */
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageManager.java
index 6734580..187958c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/image/ReactImageManager.java
@@ -10,13 +10,12 @@ package com.facebook.react.views.image;
 import android.graphics.Color;
 import android.graphics.PorterDuff.Mode;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
 import com.facebook.drawee.backends.pipeline.Fresco;
 import com.facebook.drawee.controller.AbstractDraweeControllerBuilder;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.common.MapBuilder;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.SimpleViewManager;
@@ -211,8 +210,8 @@ public class ReactImageManager extends SimpleViewManager<ReactImageView> {
     } else if ("scale".equals(resizeMethod)) {
       view.setResizeMethod(ImageResizeMethod.SCALE);
     } else {
-      view.setResizeMethod(ImageResizeMethod.AUTO);
-      FLog.w(ReactConstants.TAG, "Invalid resize method: '" + resizeMethod + "'");
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid resize method: '" + resizeMethod + "'");
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/BUCK
index c3c0669..4418ccf 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/BUCK
@@ -8,16 +8,18 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+    ],
     required_for_source_only_abi = True,
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
+        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_root_target(":generated_components_java-FBReactNativeComponentSpec"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.java
index 8c401a3..b8046f5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/modal/ReactModalHostView.java
@@ -41,7 +41,6 @@ import com.facebook.react.uimanager.JSPointerDispatcher;
 import com.facebook.react.uimanager.JSTouchDispatcher;
 import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.RootView;
-import com.facebook.react.uimanager.ThemedReactContext;
 import com.facebook.react.uimanager.UIManagerModule;
 import com.facebook.react.uimanager.events.EventDispatcher;
 import com.facebook.react.views.common.ContextUtils;
@@ -88,9 +87,9 @@ public class ReactModalHostView extends ViewGroup
   private @Nullable DialogInterface.OnShowListener mOnShowListener;
   private @Nullable OnRequestCloseListener mOnRequestCloseListener;
 
-  public ReactModalHostView(ThemedReactContext context) {
+  public ReactModalHostView(Context context) {
     super(context);
-    context.addLifecycleEventListener(this);
+    ((ReactContext) context).addLifecycleEventListener(this);
 
     mHostView = new DialogRootViewGroup(context);
   }
@@ -160,7 +159,7 @@ public class ReactModalHostView extends ViewGroup
   }
 
   public void onDropInstance() {
-    ((ThemedReactContext) getContext()).removeLifecycleEventListener(this);
+    ((ReactContext) getContext()).removeLifecycleEventListener(this);
     dismiss();
   }
 
@@ -238,7 +237,7 @@ public class ReactModalHostView extends ViewGroup
   }
 
   private @Nullable Activity getCurrentActivity() {
-    return ((ThemedReactContext) getContext()).getCurrentActivity();
+    return ((ReactContext) getContext()).getCurrentActivity();
   }
 
   /**
@@ -461,9 +460,7 @@ public class ReactModalHostView extends ViewGroup
                 @Override
                 public void runGuarded() {
                   UIManagerModule uiManager =
-                      getReactContext()
-                          .getReactApplicationContext()
-                          .getNativeModule(UIManagerModule.class);
+                      (getReactContext()).getNativeModule(UIManagerModule.class);
 
                   if (uiManager == null) {
                     return;
@@ -523,18 +520,18 @@ public class ReactModalHostView extends ViewGroup
 
     @Override
     public void handleException(Throwable t) {
-      getReactContext().getReactApplicationContext().handleException(new RuntimeException(t));
+      getReactContext().handleException(new RuntimeException(t));
     }
 
-    private ThemedReactContext getReactContext() {
-      return (ThemedReactContext) getContext();
+    private ReactContext getReactContext() {
+      return (ReactContext) getContext();
     }
 
     @Override
     public boolean onInterceptTouchEvent(MotionEvent event) {
       mJSTouchDispatcher.handleTouchEvent(event, mEventDispatcher);
       if (mJSPointerDispatcher != null) {
-        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher, true);
+        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher);
       }
       return super.onInterceptTouchEvent(event);
     }
@@ -543,7 +540,7 @@ public class ReactModalHostView extends ViewGroup
     public boolean onTouchEvent(MotionEvent event) {
       mJSTouchDispatcher.handleTouchEvent(event, mEventDispatcher);
       if (mJSPointerDispatcher != null) {
-        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher, false);
+        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher);
       }
       super.onTouchEvent(event);
       // In case when there is no children interested in handling touch event, we return true from
@@ -554,7 +551,7 @@ public class ReactModalHostView extends ViewGroup
     @Override
     public boolean onInterceptHoverEvent(MotionEvent event) {
       if (mJSPointerDispatcher != null) {
-        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher, true);
+        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher);
       }
       return super.onHoverEvent(event);
     }
@@ -562,7 +559,7 @@ public class ReactModalHostView extends ViewGroup
     @Override
     public boolean onHoverEvent(MotionEvent event) {
       if (mJSPointerDispatcher != null) {
-        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher, false);
+        mJSPointerDispatcher.handleMotionEvent(event, mEventDispatcher);
       }
       return super.onHoverEvent(event);
     }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/BUCK
index ba2f92b..52d4b63 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/BUCK
@@ -13,7 +13,6 @@ rn_android_library(
     ],
     deps = [
         YOGA_TARGET,
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/ReactProgressBarViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/ReactProgressBarViewManager.java
index eb4cbfd..3cdb730 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/ReactProgressBarViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/progressbar/ReactProgressBarViewManager.java
@@ -13,9 +13,8 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ProgressBar;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.uimanager.BaseViewManager;
 import com.facebook.react.uimanager.PixelUtil;
@@ -147,8 +146,8 @@ public class ReactProgressBarViewManager
 
   /* package */ static int getStyleFromString(@Nullable String styleStr) {
     if (styleStr == null) {
-      FLog.w(ReactConstants.TAG, "ProgressBar needs to have a style, null received");
-      return android.R.attr.progressBarStyle;
+      throw new JSApplicationIllegalArgumentException(
+          "ProgressBar needs to have a style, null received");
     } else if (styleStr.equals("Horizontal")) {
       return android.R.attr.progressBarStyleHorizontal;
     } else if (styleStr.equals("Small")) {
@@ -164,8 +163,7 @@ public class ReactProgressBarViewManager
     } else if (styleStr.equals("Normal")) {
       return android.R.attr.progressBarStyle;
     } else {
-      FLog.w(ReactConstants.TAG, "Unknown ProgressBar style: " + styleStr);
-      return android.R.attr.progressBarStyle;
+      throw new JSApplicationIllegalArgumentException("Unknown ProgressBar style: " + styleStr);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/BUCK
index 0a80d61..4a3644e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/BUCK
@@ -8,16 +8,19 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
-        react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/MaintainVisibleScrollPositionHelper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/MaintainVisibleScrollPositionHelper.java
deleted file mode 100644
index f76c432..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/MaintainVisibleScrollPositionHelper.java
+++ /dev/null
@@ -1,200 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.views.scroll;
-
-import android.graphics.Rect;
-import android.view.View;
-import android.view.ViewGroup;
-import androidx.annotation.Nullable;
-import com.facebook.infer.annotation.Assertions;
-import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.bridge.UIManager;
-import com.facebook.react.bridge.UIManagerListener;
-import com.facebook.react.bridge.UiThreadUtil;
-import com.facebook.react.uimanager.UIManagerHelper;
-import com.facebook.react.uimanager.common.UIManagerType;
-import com.facebook.react.uimanager.common.ViewUtil;
-import com.facebook.react.views.scroll.ReactScrollViewHelper.HasSmoothScroll;
-import com.facebook.react.views.view.ReactViewGroup;
-import java.lang.ref.WeakReference;
-
-/**
- * Manage state for the maintainVisibleContentPosition prop.
- *
- * <p>This uses UIManager to listen to updates and capture position of items before and after
- * layout.
- */
-public class MaintainVisibleScrollPositionHelper<ScrollViewT extends ViewGroup & HasSmoothScroll>
-    implements UIManagerListener {
-  private final ScrollViewT mScrollView;
-  private final boolean mHorizontal;
-  private @Nullable Config mConfig;
-  private @Nullable WeakReference<View> mFirstVisibleView = null;
-  private @Nullable Rect mPrevFirstVisibleFrame = null;
-  private boolean mListening = false;
-
-  public static class Config {
-    public final int minIndexForVisible;
-    public final @Nullable Integer autoScrollToTopThreshold;
-
-    Config(int minIndexForVisible, @Nullable Integer autoScrollToTopThreshold) {
-      this.minIndexForVisible = minIndexForVisible;
-      this.autoScrollToTopThreshold = autoScrollToTopThreshold;
-    }
-
-    static Config fromReadableMap(ReadableMap value) {
-      int minIndexForVisible = value.getInt("minIndexForVisible");
-      Integer autoScrollToTopThreshold =
-          value.hasKey("autoscrollToTopThreshold")
-              ? value.getInt("autoscrollToTopThreshold")
-              : null;
-      return new Config(minIndexForVisible, autoScrollToTopThreshold);
-    }
-  }
-
-  public MaintainVisibleScrollPositionHelper(ScrollViewT scrollView, boolean horizontal) {
-    mScrollView = scrollView;
-    mHorizontal = horizontal;
-  }
-
-  public void setConfig(@Nullable Config config) {
-    mConfig = config;
-  }
-
-  /** Start listening to view hierarchy updates. Should be called when this is created. */
-  public void start() {
-    if (mListening) {
-      return;
-    }
-    mListening = true;
-    getUIManagerModule().addUIManagerEventListener(this);
-  }
-
-  /** Stop listening to view hierarchy updates. Should be called before this is destroyed. */
-  public void stop() {
-    if (!mListening) {
-      return;
-    }
-    mListening = false;
-    getUIManagerModule().removeUIManagerEventListener(this);
-  }
-
-  /**
-   * Update the scroll position of the managed ScrollView. This should be called after layout has
-   * been updated.
-   */
-  public void updateScrollPosition() {
-    // On Fabric this will be called internally in `didMountItems`.
-    if (ViewUtil.getUIManagerType(mScrollView.getId()) == UIManagerType.FABRIC) {
-      return;
-    }
-    updateScrollPositionInternal();
-  }
-
-  private void updateScrollPositionInternal() {
-    if (mConfig == null || mFirstVisibleView == null || mPrevFirstVisibleFrame == null) {
-      return;
-    }
-
-    View firstVisibleView = mFirstVisibleView.get();
-    Rect newFrame = new Rect();
-    firstVisibleView.getHitRect(newFrame);
-
-    if (mHorizontal) {
-      int deltaX = newFrame.left - mPrevFirstVisibleFrame.left;
-      if (deltaX != 0) {
-        int scrollX = mScrollView.getScrollX();
-        mScrollView.scrollTo(scrollX + deltaX, mScrollView.getScrollY());
-        mPrevFirstVisibleFrame = newFrame;
-        if (mConfig.autoScrollToTopThreshold != null
-            && scrollX <= mConfig.autoScrollToTopThreshold) {
-          mScrollView.reactSmoothScrollTo(0, mScrollView.getScrollY());
-        }
-      }
-    } else {
-      int deltaY = newFrame.top - mPrevFirstVisibleFrame.top;
-      if (deltaY != 0) {
-        int scrollY = mScrollView.getScrollY();
-        mScrollView.scrollTo(mScrollView.getScrollX(), scrollY + deltaY);
-        mPrevFirstVisibleFrame = newFrame;
-        if (mConfig.autoScrollToTopThreshold != null
-            && scrollY <= mConfig.autoScrollToTopThreshold) {
-          mScrollView.reactSmoothScrollTo(mScrollView.getScrollX(), 0);
-        }
-      }
-    }
-  }
-
-  private @Nullable ReactViewGroup getContentView() {
-    return (ReactViewGroup) mScrollView.getChildAt(0);
-  }
-
-  private UIManager getUIManagerModule() {
-    return Assertions.assertNotNull(
-        UIManagerHelper.getUIManager(
-            (ReactContext) mScrollView.getContext(),
-            ViewUtil.getUIManagerType(mScrollView.getId())));
-  }
-
-  private void computeTargetView() {
-    if (mConfig == null) {
-      return;
-    }
-    ReactViewGroup contentView = getContentView();
-    if (contentView == null) {
-      return;
-    }
-
-    int currentScroll = mHorizontal ? mScrollView.getScrollX() : mScrollView.getScrollY();
-    for (int i = mConfig.minIndexForVisible; i < contentView.getChildCount(); i++) {
-      View child = contentView.getChildAt(i);
-      float position = mHorizontal ? child.getX() : child.getY();
-      if (position > currentScroll || i == contentView.getChildCount() - 1) {
-        mFirstVisibleView = new WeakReference<>(child);
-        Rect frame = new Rect();
-        child.getHitRect(frame);
-        mPrevFirstVisibleFrame = frame;
-        break;
-      }
-    }
-  }
-
-  // UIManagerListener
-
-  @Override
-  public void willDispatchViewUpdates(final UIManager uiManager) {
-    UiThreadUtil.runOnUiThread(
-        new Runnable() {
-          @Override
-          public void run() {
-            computeTargetView();
-          }
-        });
-  }
-
-  @Override
-  public void willMountItems(UIManager uiManager) {
-    computeTargetView();
-  }
-
-  @Override
-  public void didMountItems(UIManager uiManager) {
-    updateScrollPositionInternal();
-  }
-
-  @Override
-  public void didDispatchMountItems(UIManager uiManager) {
-    // noop
-  }
-
-  @Override
-  public void didScheduleMountItems(UIManager uiManager) {
-    // noop
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollView.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollView.java
index c527185..3c962f0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollView.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollView.java
@@ -45,7 +45,6 @@ import com.facebook.react.uimanager.events.NativeGestureUtil;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.HasFlingAnimator;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.HasScrollEventThrottle;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.HasScrollState;
-import com.facebook.react.views.scroll.ReactScrollViewHelper.HasSmoothScroll;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.ReactScrollViewScrollState;
 import com.facebook.react.views.view.ReactViewBackgroundManager;
 import java.lang.reflect.Field;
@@ -55,14 +54,11 @@ import java.util.List;
 /** Similar to {@link ReactScrollView} but only supports horizontal scrolling. */
 public class ReactHorizontalScrollView extends HorizontalScrollView
     implements ReactClippingViewGroup,
-        ViewGroup.OnHierarchyChangeListener,
-        View.OnLayoutChangeListener,
         FabricViewStateManager.HasFabricViewStateManager,
         ReactOverflowViewWithInset,
         HasScrollState,
         HasFlingAnimator,
-        HasScrollEventThrottle,
-        HasSmoothScroll {
+        HasScrollEventThrottle {
 
   private static boolean DEBUG_MODE = false && ReactBuildConfig.DEBUG;
   private static String TAG = ReactHorizontalScrollView.class.getSimpleName();
@@ -111,8 +107,6 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
   private PointerEvents mPointerEvents = PointerEvents.AUTO;
   private long mLastScrollDispatchTime = 0;
   private int mScrollEventThrottle = 0;
-  private @Nullable View mContentView;
-  private @Nullable MaintainVisibleScrollPositionHelper mMaintainVisibleContentPositionHelper;
 
   private final Rect mTempRect = new Rect();
 
@@ -133,8 +127,6 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
             I18nUtil.getInstance().isRTL(context)
                 ? ViewCompat.LAYOUT_DIRECTION_RTL
                 : ViewCompat.LAYOUT_DIRECTION_LTR);
-
-    setOnHierarchyChangeListener(this);
   }
 
   public boolean getScrollEnabled() {
@@ -251,20 +243,6 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
     invalidate();
   }
 
-  public void setMaintainVisibleContentPosition(
-      @Nullable MaintainVisibleScrollPositionHelper.Config config) {
-    if (config != null && mMaintainVisibleContentPositionHelper == null) {
-      mMaintainVisibleContentPositionHelper = new MaintainVisibleScrollPositionHelper(this, true);
-      mMaintainVisibleContentPositionHelper.start();
-    } else if (config == null && mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.stop();
-      mMaintainVisibleContentPositionHelper = null;
-    }
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.setConfig(config);
-    }
-  }
-
   @Override
   public @Nullable String getOverflow() {
     return mOverflow;
@@ -356,17 +334,14 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
       mScrollXAfterMeasure = NO_SCROLL_POSITION;
     }
 
-    // Apply pending contentOffset in case it was set before the view was laid out.
-    if (isContentReady()) {
-      // If a "pending" content offset value has been set, we restore that value.
-      // Upon call to scrollTo, the "pending" values will be re-set.
-      int scrollToX =
-          pendingContentOffsetX != UNSET_CONTENT_OFFSET ? pendingContentOffsetX : getScrollX();
-      int scrollToY =
-          pendingContentOffsetY != UNSET_CONTENT_OFFSET ? pendingContentOffsetY : getScrollY();
-      scrollTo(scrollToX, scrollToY);
-    }
-
+    // Call with the present values in order to re-layout if necessary
+    // If a "pending" value has been set, we restore that value.
+    // That value gets cleared by reactScrollTo.
+    int scrollToX =
+        pendingContentOffsetX != UNSET_CONTENT_OFFSET ? pendingContentOffsetX : getScrollX();
+    int scrollToY =
+        pendingContentOffsetY != UNSET_CONTENT_OFFSET ? pendingContentOffsetY : getScrollY();
+    scrollTo(scrollToX, scrollToY);
     ReactScrollViewHelper.emitLayoutEvent(this);
   }
 
@@ -660,17 +635,6 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
     if (mRemoveClippedSubviews) {
       updateClippingRect();
     }
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.start();
-    }
-  }
-
-  @Override
-  protected void onDetachedFromWindow() {
-    super.onDetachedFromWindow();
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.stop();
-    }
   }
 
   @Override
@@ -750,18 +714,6 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
     super.onOverScrolled(scrollX, scrollY, clampedX, clampedY);
   }
 
-  @Override
-  public void onChildViewAdded(View parent, View child) {
-    mContentView = child;
-    mContentView.addOnLayoutChangeListener(this);
-  }
-
-  @Override
-  public void onChildViewRemoved(View parent, View child) {
-    mContentView.removeOnLayoutChangeListener(this);
-    mContentView = null;
-  }
-
   private void enableFpsListener() {
     if (isScrollPerfLoggingEnabled()) {
       Assertions.assertNotNull(mFpsListener);
@@ -1285,26 +1237,6 @@ public class ReactHorizontalScrollView extends HorizontalScrollView
     }
   }
 
-  @Override
-  public void onLayoutChange(
-      View v,
-      int left,
-      int top,
-      int right,
-      int bottom,
-      int oldLeft,
-      int oldTop,
-      int oldRight,
-      int oldBottom) {
-    if (mContentView == null) {
-      return;
-    }
-
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.updateScrollPosition();
-    }
-  }
-
   @Override
   public FabricViewStateManager getFabricViewStateManager() {
     return mFabricViewStateManager;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollViewManager.java
index f148dcd..aada6a7 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollViewManager.java
@@ -90,8 +90,8 @@ public class ReactHorizontalScrollViewManager extends ViewGroupManager<ReactHori
 
   @ReactProp(name = "disableIntervalMomentum")
   public void setDisableIntervalMomentum(
-      ReactHorizontalScrollView view, boolean disableIntervalMomentum) {
-    view.setDisableIntervalMomentum(disableIntervalMomentum);
+      ReactHorizontalScrollView view, boolean disbaleIntervalMomentum) {
+    view.setDisableIntervalMomentum(disbaleIntervalMomentum);
   }
 
   @ReactProp(name = "snapToInterval")
@@ -328,16 +328,6 @@ public class ReactHorizontalScrollViewManager extends ViewGroupManager<ReactHori
     }
   }
 
-  @ReactProp(name = "maintainVisibleContentPosition")
-  public void setMaintainVisibleContentPosition(ReactHorizontalScrollView view, ReadableMap value) {
-    if (value != null) {
-      view.setMaintainVisibleContentPosition(
-          MaintainVisibleScrollPositionHelper.Config.fromReadableMap(value));
-    } else {
-      view.setMaintainVisibleContentPosition(null);
-    }
-  }
-
   @ReactProp(name = ViewProps.POINTER_EVENTS)
   public void setPointerEvents(ReactHorizontalScrollView view, @Nullable String pointerEventsStr) {
     view.setPointerEvents(PointerEvents.parsePointerEvents(pointerEventsStr));
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollView.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollView.java
index 6bda8b8..ae0a512 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollView.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollView.java
@@ -33,11 +33,9 @@ import androidx.core.view.ViewCompat;
 import com.facebook.common.logging.FLog;
 import com.facebook.infer.annotation.Assertions;
 import com.facebook.react.R;
-import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.common.ReactConstants;
 import com.facebook.react.uimanager.FabricViewStateManager;
 import com.facebook.react.uimanager.MeasureSpecAssertions;
-import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.PointerEvents;
 import com.facebook.react.uimanager.ReactClippingViewGroup;
 import com.facebook.react.uimanager.ReactClippingViewGroupHelper;
@@ -47,7 +45,6 @@ import com.facebook.react.uimanager.events.NativeGestureUtil;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.HasFlingAnimator;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.HasScrollEventThrottle;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.HasScrollState;
-import com.facebook.react.views.scroll.ReactScrollViewHelper.HasSmoothScroll;
 import com.facebook.react.views.scroll.ReactScrollViewHelper.ReactScrollViewScrollState;
 import com.facebook.react.views.view.ReactViewBackgroundManager;
 import java.lang.reflect.Field;
@@ -68,8 +65,7 @@ public class ReactScrollView extends ScrollView
         ReactOverflowViewWithInset,
         HasScrollState,
         HasFlingAnimator,
-        HasScrollEventThrottle,
-        HasSmoothScroll {
+        HasScrollEventThrottle {
 
   private static @Nullable Field sScrollerField;
   private static boolean sTriedToGetScrollerField = false;
@@ -104,7 +100,6 @@ public class ReactScrollView extends ScrollView
   private int mSnapToAlignment = SNAP_ALIGNMENT_DISABLED;
   private @Nullable View mContentView;
   private ReactViewBackgroundManager mReactBackgroundManager;
-  private @Nullable ReadableMap mCurrentContentOffset = null;
   private int pendingContentOffsetX = UNSET_CONTENT_OFFSET;
   private int pendingContentOffsetY = UNSET_CONTENT_OFFSET;
   private final FabricViewStateManager mFabricViewStateManager = new FabricViewStateManager();
@@ -114,8 +109,6 @@ public class ReactScrollView extends ScrollView
   private PointerEvents mPointerEvents = PointerEvents.AUTO;
   private long mLastScrollDispatchTime = 0;
   private int mScrollEventThrottle = 0;
-  private @Nullable MaintainVisibleScrollPositionHelper mMaintainVisibleContentPositionHelper =
-      null;
 
   public ReactScrollView(Context context) {
     this(context, null);
@@ -247,20 +240,6 @@ public class ReactScrollView extends ScrollView
     invalidate();
   }
 
-  public void setMaintainVisibleContentPosition(
-      @Nullable MaintainVisibleScrollPositionHelper.Config config) {
-    if (config != null && mMaintainVisibleContentPositionHelper == null) {
-      mMaintainVisibleContentPositionHelper = new MaintainVisibleScrollPositionHelper(this, false);
-      mMaintainVisibleContentPositionHelper.start();
-    } else if (config == null && mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.stop();
-      mMaintainVisibleContentPositionHelper = null;
-    }
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.setConfig(config);
-    }
-  }
-
   @Override
   public @Nullable String getOverflow() {
     return mOverflow;
@@ -286,17 +265,14 @@ public class ReactScrollView extends ScrollView
 
   @Override
   protected void onLayout(boolean changed, int l, int t, int r, int b) {
-    // Apply pending contentOffset in case it was set before the view was laid out.
-    if (isContentReady()) {
-      // If a "pending" content offset value has been set, we restore that value.
-      // Upon call to scrollTo, the "pending" values will be re-set.
-      int scrollToX =
-          pendingContentOffsetX != UNSET_CONTENT_OFFSET ? pendingContentOffsetX : getScrollX();
-      int scrollToY =
-          pendingContentOffsetY != UNSET_CONTENT_OFFSET ? pendingContentOffsetY : getScrollY();
-      scrollTo(scrollToX, scrollToY);
-    }
-
+    // Call with the present values in order to re-layout if necessary
+    // If a "pending" content offset value has been set, we restore that value.
+    // Upon call to scrollTo, the "pending" values will be re-set.
+    int scrollToX =
+        pendingContentOffsetX != UNSET_CONTENT_OFFSET ? pendingContentOffsetX : getScrollX();
+    int scrollToY =
+        pendingContentOffsetY != UNSET_CONTENT_OFFSET ? pendingContentOffsetY : getScrollY();
+    scrollTo(scrollToX, scrollToY);
     ReactScrollViewHelper.emitLayoutEvent(this);
   }
 
@@ -314,17 +290,6 @@ public class ReactScrollView extends ScrollView
     if (mRemoveClippedSubviews) {
       updateClippingRect();
     }
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.start();
-    }
-  }
-
-  @Override
-  protected void onDetachedFromWindow() {
-    super.onDetachedFromWindow();
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.stop();
-    }
   }
 
   /**
@@ -1037,23 +1002,6 @@ public class ReactScrollView extends ScrollView
     mContentView = null;
   }
 
-  public void setContentOffset(ReadableMap value) {
-    // When contentOffset={{x:0,y:0}} with lazy load items, setContentOffset
-    // is repeatedly called, causing an unexpected scroll to top behavior.
-    // Avoid updating contentOffset if the value has not changed.
-    if (mCurrentContentOffset == null || !mCurrentContentOffset.equals(value)) {
-      mCurrentContentOffset = value;
-
-      if (value != null) {
-        double x = value.hasKey("x") ? value.getDouble("x") : 0;
-        double y = value.hasKey("y") ? value.getDouble("y") : 0;
-        scrollTo((int) PixelUtil.toPixelFromDIP(x), (int) PixelUtil.toPixelFromDIP(y));
-      } else {
-        scrollTo(0, 0);
-      }
-    }
-  }
-
   /**
    * Calls `smoothScrollTo` and updates state.
    *
@@ -1076,7 +1024,6 @@ public class ReactScrollView extends ScrollView
    */
   @Override
   public void scrollTo(int x, int y) {
-    mScroller.abortAnimation();
     super.scrollTo(x, y);
     ReactScrollViewHelper.updateFabricScrollState(this);
     setPendingContentOffsets(x, y);
@@ -1124,16 +1071,10 @@ public class ReactScrollView extends ScrollView
       return;
     }
 
-    if (mMaintainVisibleContentPositionHelper != null) {
-      mMaintainVisibleContentPositionHelper.updateScrollPosition();
-    }
-
-    if (isShown() && isContentReady()) {
-      int currentScrollY = getScrollY();
-      int maxScrollY = getMaxScrollY();
-      if (currentScrollY > maxScrollY) {
-        scrollTo(getScrollX(), maxScrollY);
-      }
+    int currentScrollY = getScrollY();
+    int maxScrollY = getMaxScrollY();
+    if (currentScrollY > maxScrollY) {
+      scrollTo(getScrollX(), maxScrollY);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewHelper.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewHelper.java
index e16dd1c..b574cb5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewHelper.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewHelper.java
@@ -17,10 +17,10 @@ import android.widget.OverScroller;
 import androidx.annotation.Nullable;
 import androidx.core.view.ViewCompat;
 import com.facebook.common.logging.FLog;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.bridge.WritableNativeMap;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.common.build.ReactBuildConfig;
 import com.facebook.react.uimanager.FabricViewStateManager;
 import com.facebook.react.uimanager.PixelUtil;
@@ -153,8 +153,7 @@ public class ReactScrollViewHelper {
     } else if (jsOverScrollMode.equals(OVER_SCROLL_NEVER)) {
       return View.OVER_SCROLL_NEVER;
     } else {
-      FLog.w(ReactConstants.TAG, "wrong overScrollMode: " + jsOverScrollMode);
-      return View.OVER_SCROLL_IF_CONTENT_SCROLLS;
+      throw new JSApplicationIllegalArgumentException("wrong overScrollMode: " + jsOverScrollMode);
     }
   }
 
@@ -168,8 +167,7 @@ public class ReactScrollViewHelper {
     } else if ("end".equals(alignment)) {
       return SNAP_ALIGNMENT_END;
     } else {
-      FLog.w(ReactConstants.TAG, "wrong snap alignment value: " + alignment);
-      return SNAP_ALIGNMENT_DISABLED;
+      throw new JSApplicationIllegalArgumentException("wrong snap alignment value: " + alignment);
     }
   }
 
@@ -604,8 +602,4 @@ public class ReactScrollViewHelper {
     /** Get the scroll view dispatch time for throttling */
     long getLastScrollDispatchTime();
   }
-
-  public interface HasSmoothScroll {
-    void reactSmoothScrollTo(int x, int y);
-  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewManager.java
index 46e0ccf..933455e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactScrollViewManager.java
@@ -89,8 +89,8 @@ public class ReactScrollViewManager extends ViewGroupManager<ReactScrollView>
   }
 
   @ReactProp(name = "disableIntervalMomentum")
-  public void setDisableIntervalMomentum(ReactScrollView view, boolean disableIntervalMomentum) {
-    view.setDisableIntervalMomentum(disableIntervalMomentum);
+  public void setDisableIntervalMomentum(ReactScrollView view, boolean disbaleIntervalMomentum) {
+    view.setDisableIntervalMomentum(disbaleIntervalMomentum);
   }
 
   @ReactProp(name = "snapToInterval")
@@ -320,16 +320,12 @@ public class ReactScrollViewManager extends ViewGroupManager<ReactScrollView>
 
   @ReactProp(name = "contentOffset", customType = "Point")
   public void setContentOffset(ReactScrollView view, ReadableMap value) {
-    view.setContentOffset(value);
-  }
-
-  @ReactProp(name = "maintainVisibleContentPosition")
-  public void setMaintainVisibleContentPosition(ReactScrollView view, ReadableMap value) {
     if (value != null) {
-      view.setMaintainVisibleContentPosition(
-          MaintainVisibleScrollPositionHelper.Config.fromReadableMap(value));
+      double x = value.hasKey("x") ? value.getDouble("x") : 0;
+      double y = value.hasKey("y") ? value.getDouble("y") : 0;
+      view.scrollTo((int) PixelUtil.toPixelFromDIP(x), (int) PixelUtil.toPixelFromDIP(y));
     } else {
-      view.setMaintainVisibleContentPosition(null);
+      view.scrollTo(0, 0);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/BUCK
similarity index 62%
rename from node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/BUCK
rename to node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/BUCK
index 832e27f..e402f20 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/BUCK
@@ -1,9 +1,7 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "react_native_dep", "react_native_target", "rn_android_library")
-
-oncall("react_native")
+load("//tools/build_defs/oss:rn_defs.bzl", "YOGA_TARGET", "react_native_dep", "react_native_root_target", "react_native_target", "rn_android_library")
 
 rn_android_library(
-    name = "traceupdateoverlay",
+    name = "slider",
     srcs = glob(["*.java"]),
     autoglob = False,
     labels = [
@@ -14,16 +12,18 @@ rn_android_library(
         "PUBLIC",
     ],
     deps = [
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
+        YOGA_TARGET,
         react_native_dep("third-party/android/androidx:annotation"),
+        react_native_dep("third-party/android/androidx:appcompat"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
-        react_native_target("java/com/facebook/react/module/annotations:annotations"),
+        react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
         react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
-        react_native_target("java/com/facebook/react/util:util"),
+        react_native_root_target(":generated_components_java-FBReactNativeComponentSpec"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSlider.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSlider.java
new file mode 100644
index 0000000..d255cb6
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSlider.java
@@ -0,0 +1,116 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+package com.facebook.react.views.slider;
+
+import android.content.Context;
+import android.os.Build;
+import android.util.AttributeSet;
+import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatSeekBar;
+
+/**
+ * Slider that behaves more like the iOS one, for consistency.
+ *
+ * <p>On iOS, the value is 0..1. Android SeekBar only supports integer values. For consistency, we
+ * pretend in JS that the value is 0..1 but set the SeekBar value to 0..100.
+ *
+ * <p>Note that the slider is _not_ a controlled component (setValue isn't called during dragging).
+ */
+public class ReactSlider extends AppCompatSeekBar {
+
+  /**
+   * If step is 0 (unset) we default to this total number of steps. Don't use 100 which leads to
+   * rounding errors (0.200000000001).
+   */
+  private static int DEFAULT_TOTAL_STEPS = 128;
+
+  /**
+   * We want custom min..max range. Android only supports 0..max range so we implement this
+   * ourselves.
+   */
+  private double mMinValue = 0;
+
+  private double mMaxValue = 0;
+
+  /**
+   * Value sent from JS (setState). Doesn't get updated during drag (slider is not a controlled
+   * component).
+   */
+  private double mValue = 0;
+
+  /** If zero it's determined automatically. */
+  private double mStep = 0;
+
+  private double mStepCalculated = 0;
+
+  public ReactSlider(Context context, @Nullable AttributeSet attrs, int style) {
+    super(context, attrs, style);
+    disableStateListAnimatorIfNeeded();
+  }
+
+  /* package */ void disableStateListAnimatorIfNeeded() {
+    // We disable the state list animator for Android 6 and 7; this is a hack to prevent T37452851
+    // and https://github.com/facebook/react-native/issues/9979
+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
+        && Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {
+      super.setStateListAnimator(null);
+    }
+  }
+
+  /* package */ void setMaxValue(double max) {
+    mMaxValue = max;
+    updateAll();
+  }
+
+  /* package */ void setMinValue(double min) {
+    mMinValue = min;
+    updateAll();
+  }
+
+  /* package */ void setValue(double value) {
+    mValue = value;
+    updateValue();
+  }
+
+  /* package */ void setStep(double step) {
+    mStep = step;
+    updateAll();
+  }
+
+  /**
+   * Convert SeekBar's native progress value (e.g. 0..100) to a value passed to JS (e.g. -1.0..2.5).
+   */
+  public double toRealProgress(int seekBarProgress) {
+    if (seekBarProgress == getMax()) {
+      return mMaxValue;
+    }
+    return seekBarProgress * getStepValue() + mMinValue;
+  }
+
+  /** Update underlying native SeekBar's values. */
+  private void updateAll() {
+    if (mStep == 0) {
+      mStepCalculated = (mMaxValue - mMinValue) / (double) DEFAULT_TOTAL_STEPS;
+    }
+    setMax(getTotalSteps());
+    updateValue();
+  }
+
+  /** Update value only (optimization in case only value is set). */
+  private void updateValue() {
+    setProgress((int) Math.round((mValue - mMinValue) / (mMaxValue - mMinValue) * getTotalSteps()));
+  }
+
+  private int getTotalSteps() {
+    return (int) Math.ceil((mMaxValue - mMinValue) / getStepValue());
+  }
+
+  private double getStepValue() {
+    return mStep > 0 ? mStep : mStepCalculated;
+  }
+}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSliderEvent.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSliderEvent.java
new file mode 100644
index 0000000..8f97341
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSliderEvent.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+package com.facebook.react.views.slider;
+
+import com.facebook.react.bridge.Arguments;
+import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.uimanager.events.Event;
+import com.facebook.react.uimanager.events.RCTEventEmitter;
+
+/** Event emitted by a ReactSliderManager when user changes slider position. */
+public class ReactSliderEvent extends Event<ReactSliderEvent> {
+
+  public static final String EVENT_NAME = "topValueChange";
+
+  private final double mValue;
+  private final boolean mFromUser;
+
+  public ReactSliderEvent(int viewId, double value, boolean fromUser) {
+    super(viewId);
+    mValue = value;
+    mFromUser = fromUser;
+  }
+
+  public double getValue() {
+    return mValue;
+  }
+
+  public boolean isFromUser() {
+    return mFromUser;
+  }
+
+  @Override
+  public String getEventName() {
+    return EVENT_NAME;
+  }
+
+  @Override
+  public void dispatch(RCTEventEmitter rctEventEmitter) {
+    rctEventEmitter.receiveEvent(getViewTag(), getEventName(), serializeEventData());
+  }
+
+  private WritableMap serializeEventData() {
+    WritableMap eventData = Arguments.createMap();
+    eventData.putInt("target", getViewTag());
+    eventData.putDouble("value", getValue());
+    eventData.putBoolean("fromUser", isFromUser());
+    return eventData;
+  }
+}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSliderManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSliderManager.java
new file mode 100644
index 0000000..86cbe70
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSliderManager.java
@@ -0,0 +1,336 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+package com.facebook.react.views.slider;
+
+import android.content.Context;
+import android.graphics.PorterDuff;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.LayerDrawable;
+import android.os.Bundle;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.SeekBar;
+import androidx.annotation.Nullable;
+import androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat;
+import com.facebook.react.bridge.ReactContext;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.common.MapBuilder;
+import com.facebook.react.uimanager.LayoutShadowNode;
+import com.facebook.react.uimanager.PixelUtil;
+import com.facebook.react.uimanager.ReactAccessibilityDelegate;
+import com.facebook.react.uimanager.SimpleViewManager;
+import com.facebook.react.uimanager.ThemedReactContext;
+import com.facebook.react.uimanager.UIManagerHelper;
+import com.facebook.react.uimanager.ViewManagerDelegate;
+import com.facebook.react.uimanager.ViewProps;
+import com.facebook.react.uimanager.annotations.ReactProp;
+import com.facebook.react.uimanager.events.EventDispatcher;
+import com.facebook.react.viewmanagers.SliderManagerDelegate;
+import com.facebook.react.viewmanagers.SliderManagerInterface;
+import com.facebook.yoga.YogaMeasureFunction;
+import com.facebook.yoga.YogaMeasureMode;
+import com.facebook.yoga.YogaMeasureOutput;
+import com.facebook.yoga.YogaNode;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Manages instances of {@code ReactSlider}.
+ *
+ * <p>Note that the slider is _not_ a controlled component.
+ */
+public class ReactSliderManager extends SimpleViewManager<ReactSlider>
+    implements SliderManagerInterface<ReactSlider> {
+
+  private static final int STYLE = android.R.attr.seekBarStyle;
+
+  public static final String REACT_CLASS = "RCTSlider";
+
+  static class ReactSliderShadowNode extends LayoutShadowNode implements YogaMeasureFunction {
+
+    private int mWidth;
+    private int mHeight;
+    private boolean mMeasured;
+
+    private ReactSliderShadowNode() {
+      initMeasureFunction();
+    }
+
+    private void initMeasureFunction() {
+      setMeasureFunction(this);
+    }
+
+    @Override
+    public long measure(
+        YogaNode node,
+        float width,
+        YogaMeasureMode widthMode,
+        float height,
+        YogaMeasureMode heightMode) {
+      if (!mMeasured) {
+        ReactSlider reactSlider = new ReactSlider(getThemedContext(), null, STYLE);
+        // reactSlider is used for measurements purposes, it is not necessary to set a
+        // StateListAnimator.
+        // It is not safe to access StateListAnimator from a background thread.
+        reactSlider.disableStateListAnimatorIfNeeded();
+        final int spec =
+            View.MeasureSpec.makeMeasureSpec(
+                ViewGroup.LayoutParams.WRAP_CONTENT, View.MeasureSpec.UNSPECIFIED);
+        reactSlider.measure(spec, spec);
+        mWidth = reactSlider.getMeasuredWidth();
+        mHeight = reactSlider.getMeasuredHeight();
+        mMeasured = true;
+      }
+
+      return YogaMeasureOutput.make(mWidth, mHeight);
+    }
+  }
+
+  private static final SeekBar.OnSeekBarChangeListener ON_CHANGE_LISTENER =
+      new SeekBar.OnSeekBarChangeListener() {
+        @Override
+        public void onProgressChanged(SeekBar seekbar, int progress, boolean fromUser) {
+          ReactContext reactContext = (ReactContext) seekbar.getContext();
+          EventDispatcher eventDispatcher =
+              UIManagerHelper.getEventDispatcherForReactTag(reactContext, seekbar.getId());
+
+          if (eventDispatcher != null) {
+            eventDispatcher.dispatchEvent(
+                new ReactSliderEvent(
+                    seekbar.getId(), ((ReactSlider) seekbar).toRealProgress(progress), fromUser));
+          }
+        }
+
+        @Override
+        public void onStartTrackingTouch(SeekBar seekbar) {}
+
+        @Override
+        public void onStopTrackingTouch(SeekBar seekbar) {
+          ReactContext reactContext = (ReactContext) seekbar.getContext();
+          EventDispatcher eventDispatcher =
+              UIManagerHelper.getEventDispatcherForReactTag(reactContext, seekbar.getId());
+
+          if (eventDispatcher != null) {
+            eventDispatcher.dispatchEvent(
+                new ReactSlidingCompleteEvent(
+                    UIManagerHelper.getSurfaceId(seekbar),
+                    seekbar.getId(),
+                    ((ReactSlider) seekbar).toRealProgress(seekbar.getProgress())));
+          }
+        }
+      };
+
+  private final ViewManagerDelegate<ReactSlider> mDelegate;
+
+  public ReactSliderManager() {
+    mDelegate = new SliderManagerDelegate<>(this);
+  }
+
+  @Override
+  public String getName() {
+    return REACT_CLASS;
+  }
+
+  @Override
+  public LayoutShadowNode createShadowNodeInstance() {
+    return new ReactSliderShadowNode();
+  }
+
+  @Override
+  public Class getShadowNodeClass() {
+    return ReactSliderShadowNode.class;
+  }
+
+  @Override
+  protected ReactSlider createViewInstance(ThemedReactContext context) {
+    final ReactSlider slider = new ReactSlider(context, null, STYLE);
+    ReactSliderAccessibilityDelegate.setDelegate(
+        slider, slider.isFocusable(), slider.getImportantForAccessibility());
+    return slider;
+  }
+
+  @Override
+  @ReactProp(name = ViewProps.ENABLED, defaultBoolean = true)
+  public void setEnabled(ReactSlider view, boolean enabled) {
+    view.setEnabled(enabled);
+  }
+
+  @Override
+  @ReactProp(name = "value", defaultDouble = 0d)
+  public void setValue(ReactSlider view, double value) {
+    view.setOnSeekBarChangeListener(null);
+    view.setValue(value);
+    view.setOnSeekBarChangeListener(ON_CHANGE_LISTENER);
+  }
+
+  @Override
+  @ReactProp(name = "minimumValue", defaultDouble = 0d)
+  public void setMinimumValue(ReactSlider view, double value) {
+    view.setMinValue(value);
+  }
+
+  @Override
+  @ReactProp(name = "maximumValue", defaultDouble = 1d)
+  public void setMaximumValue(ReactSlider view, double value) {
+    view.setMaxValue(value);
+  }
+
+  @Override
+  @ReactProp(name = "step", defaultDouble = 0d)
+  public void setStep(ReactSlider view, double value) {
+    view.setStep(value);
+  }
+
+  @Override
+  @ReactProp(name = "thumbTintColor", customType = "Color")
+  public void setThumbTintColor(ReactSlider view, Integer color) {
+    if (color == null) {
+      view.getThumb().clearColorFilter();
+    } else {
+      view.getThumb().setColorFilter(color, PorterDuff.Mode.SRC_IN);
+    }
+  }
+
+  @Override
+  @ReactProp(name = "minimumTrackTintColor", customType = "Color")
+  public void setMinimumTrackTintColor(ReactSlider view, Integer color) {
+    LayerDrawable drawable = (LayerDrawable) view.getProgressDrawable().getCurrent();
+    Drawable progress = drawable.findDrawableByLayerId(android.R.id.progress);
+    if (color == null) {
+      progress.clearColorFilter();
+    } else {
+      progress.setColorFilter(color, PorterDuff.Mode.SRC_IN);
+    }
+  }
+
+  @Override
+  @ReactProp(name = "maximumTrackTintColor", customType = "Color")
+  public void setMaximumTrackTintColor(ReactSlider view, Integer color) {
+    LayerDrawable drawable = (LayerDrawable) view.getProgressDrawable().getCurrent();
+    Drawable background = drawable.findDrawableByLayerId(android.R.id.background);
+    if (color == null) {
+      background.clearColorFilter();
+    } else {
+      background.setColorFilter(color, PorterDuff.Mode.SRC_IN);
+    }
+  }
+
+  @Override
+  @ReactProp(name = "disabled")
+  public void setDisabled(ReactSlider view, boolean value) {}
+
+  @Override
+  @ReactProp(name = "maximumTrackImage", customType = "ImageSource")
+  public void setMaximumTrackImage(ReactSlider view, @Nullable ReadableMap value) {}
+
+  @Override
+  @ReactProp(name = "minimumTrackImage", customType = "ImageSource")
+  public void setMinimumTrackImage(ReactSlider view, @Nullable ReadableMap value) {}
+
+  @Override
+  public void setTestID(ReactSlider view, @Nullable String value) {
+    super.setTestId(view, value);
+  }
+
+  @Override
+  @ReactProp(name = "thumbImage", customType = "ImageSource")
+  public void setThumbImage(ReactSlider view, @Nullable ReadableMap value) {}
+
+  @Override
+  @ReactProp(name = "trackImage", customType = "ImageSource")
+  public void setTrackImage(ReactSlider view, @Nullable ReadableMap value) {}
+
+  @Override
+  protected void addEventEmitters(final ThemedReactContext reactContext, final ReactSlider view) {
+    view.setOnSeekBarChangeListener(ON_CHANGE_LISTENER);
+  }
+
+  @Override
+  public Map getExportedCustomDirectEventTypeConstants() {
+    @Nullable
+    Map<String, Object> baseEventTypeConstants = super.getExportedCustomDirectEventTypeConstants();
+    Map<String, Object> eventTypeConstants =
+        baseEventTypeConstants == null ? new HashMap<String, Object>() : baseEventTypeConstants;
+    eventTypeConstants.putAll(
+        MapBuilder.of(
+            ReactSlidingCompleteEvent.EVENT_NAME,
+            MapBuilder.of("registrationName", "onSlidingComplete")));
+    return eventTypeConstants;
+  }
+
+  @Nullable
+  @Override
+  public Map<String, Object> getExportedCustomBubblingEventTypeConstants() {
+    @Nullable
+    Map<String, Object> baseEventTypeConstants =
+        super.getExportedCustomBubblingEventTypeConstants();
+    Map<String, Object> eventTypeConstants =
+        baseEventTypeConstants == null ? new HashMap<String, Object>() : baseEventTypeConstants;
+    eventTypeConstants.putAll(
+        MapBuilder.<String, Object>builder()
+            .put(
+                "topValueChange",
+                MapBuilder.of(
+                    "phasedRegistrationNames",
+                    MapBuilder.of("bubbled", "onValueChange", "captured", "onValueChangeCapture")))
+            .build());
+    return eventTypeConstants;
+  }
+
+  @Override
+  public long measure(
+      Context context,
+      ReadableMap localData,
+      ReadableMap props,
+      ReadableMap state,
+      float width,
+      YogaMeasureMode widthMode,
+      float height,
+      YogaMeasureMode heightMode,
+      @Nullable float[] attachmentsPositions) {
+    SeekBar reactSlider = new ReactSlider(context, null, STYLE);
+    final int spec =
+        View.MeasureSpec.makeMeasureSpec(
+            ViewGroup.LayoutParams.WRAP_CONTENT, View.MeasureSpec.UNSPECIFIED);
+    reactSlider.measure(spec, spec);
+
+    return YogaMeasureOutput.make(
+        PixelUtil.toDIPFromPixel(reactSlider.getMeasuredWidth()),
+        PixelUtil.toDIPFromPixel(reactSlider.getMeasuredHeight()));
+  }
+
+  @Override
+  protected ViewManagerDelegate<ReactSlider> getDelegate() {
+    return mDelegate;
+  }
+
+  protected class ReactSliderAccessibilityDelegate extends ReactAccessibilityDelegate {
+    public ReactSliderAccessibilityDelegate(
+        final View view, boolean originalFocus, int originalImportantForAccessibility) {
+      super(view, originalFocus, originalImportantForAccessibility);
+    }
+
+    private boolean isSliderAction(int action) {
+      return (action == AccessibilityActionCompat.ACTION_SCROLL_FORWARD.getId())
+          || (action == AccessibilityActionCompat.ACTION_SCROLL_BACKWARD.getId())
+          || (action == AccessibilityActionCompat.ACTION_SET_PROGRESS.getId());
+    }
+
+    @Override
+    public boolean performAccessibilityAction(View host, int action, Bundle args) {
+      if (isSliderAction(action)) {
+        ON_CHANGE_LISTENER.onStartTrackingTouch((SeekBar) host);
+      }
+      final boolean rv = super.performAccessibilityAction(host, action, args);
+      if (isSliderAction(action)) {
+        ON_CHANGE_LISTENER.onStopTrackingTouch((SeekBar) host);
+      }
+      return rv;
+    }
+  };
+}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSlidingCompleteEvent.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSlidingCompleteEvent.java
new file mode 100644
index 0000000..b1c249b
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/slider/ReactSlidingCompleteEvent.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+package com.facebook.react.views.slider;
+
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.Arguments;
+import com.facebook.react.bridge.WritableMap;
+import com.facebook.react.uimanager.events.Event;
+
+/** Event emitted when the user finishes dragging the slider. */
+public class ReactSlidingCompleteEvent extends Event<ReactSlidingCompleteEvent> {
+
+  public static final String EVENT_NAME = "topSlidingComplete";
+
+  private final double mValue;
+
+  @Deprecated
+  public ReactSlidingCompleteEvent(int viewId, double value) {
+    this(-1, viewId, value);
+  }
+
+  public ReactSlidingCompleteEvent(int surfaceId, int viewId, double value) {
+    super(surfaceId, viewId);
+    mValue = value;
+  }
+
+  public double getValue() {
+    return mValue;
+  }
+
+  @Override
+  public String getEventName() {
+    return EVENT_NAME;
+  }
+
+  @Nullable
+  @Override
+  protected WritableMap getEventData() {
+    WritableMap eventData = Arguments.createMap();
+    eventData.putInt("target", getViewTag());
+    eventData.putDouble("value", getValue());
+    return eventData;
+  }
+
+  @Override
+  public boolean canCoalesce() {
+    return false;
+  }
+}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/swiperefresh/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/swiperefresh/BUCK
index 700d8bd..a1fe56f 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/swiperefresh/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/swiperefresh/BUCK
@@ -8,15 +8,17 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
-    visibility = [
-        "PUBLIC",
-    ],
-    deps = [
+    provided_deps = [
         react_native_dep("third-party/android/androidx:annotation"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
-        react_native_dep("third-party/android/androidx:swiperefreshlayout"),
+    ],
+    visibility = [
+        "PUBLIC",
+    ],
+    deps = [
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/BUCK
index 7c8001f..ad8db8e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/BUCK
@@ -8,21 +8,24 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:appcompat"),
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
         react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:appcompat"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
-        react_native_root_target(":generated_components_java-FBReactNativeComponentSpec"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
         react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
+        react_native_root_target(":generated_components_java-FBReactNativeComponentSpec"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/ReactSwitch.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/ReactSwitch.java
index 0cb48ef..69c7dbd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/ReactSwitch.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/switchview/ReactSwitch.java
@@ -7,7 +7,6 @@
 
 package com.facebook.react.views.switchview;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.graphics.PorterDuff;
@@ -51,11 +50,15 @@ import androidx.appcompat.widget.SwitchCompat;
   }
 
   @Override
-  @TargetApi(Build.VERSION_CODES.LOLLIPOP)
   public void setBackgroundColor(int color) {
-    setBackground(
-        new RippleDrawable(
-            createRippleDrawableColorStateList(color), new ColorDrawable(color), null));
+    // Ensure RippleDrawable is preserved for >=21
+    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+      setBackground(
+          new RippleDrawable(
+              createRippleDrawableColorStateList(color), new ColorDrawable(color), null));
+    } else {
+      super.setBackgroundColor(color);
+    }
   }
 
   void setColor(Drawable drawable, @Nullable Integer color) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/BUCK
index b8a7f7b..c751332 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/BUCK
@@ -22,6 +22,7 @@ rn_android_library(
         react_native_dep("third-party/android/androidx:appcompat"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
         react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/CustomLineHeightSpan.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/CustomLineHeightSpan.java
index 46293eb..1c09358 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/CustomLineHeightSpan.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/CustomLineHeightSpan.java
@@ -21,10 +21,6 @@ public class CustomLineHeightSpan implements LineHeightSpan, ReactSpan {
     this.mHeight = (int) Math.ceil(height);
   }
 
-  public int getLineHeight() {
-    return mHeight;
-  }
-
   @Override
   public void chooseHeight(
       CharSequence text, int start, int end, int spanstartv, int v, Paint.FontMetricsInt fm) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/DefaultStyleValuesUtil.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/DefaultStyleValuesUtil.java
index 6dffc0c..c71bae2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/DefaultStyleValuesUtil.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/DefaultStyleValuesUtil.java
@@ -54,7 +54,8 @@ public final class DefaultStyleValuesUtil {
     TypedArray textAppearances = null;
     try {
       textAppearances = theme.obtainStyledAttributes(new int[] {attribute});
-      return textAppearances.getColorStateList(0);
+      ColorStateList textColor = textAppearances.getColorStateList(0);
+      return textColor;
     } finally {
       if (textAppearances != null) {
         textAppearances.recycle();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/FontMetricsUtil.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/FontMetricsUtil.java
index 84dc328..f19a1b0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/FontMetricsUtil.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/FontMetricsUtil.java
@@ -42,14 +42,12 @@ public class FontMetricsUtil {
         X_HEIGHT_MEASUREMENT_TEXT, 0, X_HEIGHT_MEASUREMENT_TEXT.length(), xHeightBounds);
     double xHeight = xHeightBounds.height() / AMPLIFICATION_FACTOR / dm.density;
     for (int i = 0; i < layout.getLineCount(); i++) {
-      boolean endsWithNewLine = text.length() > 0 && text.charAt(layout.getLineEnd(i) - 1) == '\n';
-      float lineWidth = endsWithNewLine ? layout.getLineMax(i) : layout.getLineWidth(i);
       Rect bounds = new Rect();
       layout.getLineBounds(i, bounds);
       WritableMap line = Arguments.createMap();
       line.putDouble("x", layout.getLineLeft(i) / dm.density);
       line.putDouble("y", bounds.top / dm.density);
-      line.putDouble("width", lineWidth / dm.density);
+      line.putDouble("width", layout.getLineWidth(i) / dm.density);
       line.putDouble("height", bounds.height() / dm.density);
       line.putDouble("descender", layout.getLineDescent(i) / dm.density);
       line.putDouble("ascender", -layout.getLineAscent(i) / dm.density);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactBaseTextShadowNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactBaseTextShadowNode.java
index b5811c7..cbf2967 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactBaseTextShadowNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactBaseTextShadowNode.java
@@ -17,11 +17,10 @@ import android.text.SpannableStringBuilder;
 import android.text.TextUtils;
 import android.view.Gravity;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
 import com.facebook.infer.annotation.Assertions;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.uimanager.IllegalViewOperationException;
 import com.facebook.react.uimanager.LayoutShadowNode;
 import com.facebook.react.uimanager.NativeViewHierarchyOptimizer;
@@ -69,6 +68,31 @@ public abstract class ReactBaseTextShadowNode extends LayoutShadowNode {
 
   protected @Nullable ReactTextViewManagerCallback mReactTextViewManagerCallback;
 
+  private static class SetSpanOperation {
+    protected int start, end;
+    protected ReactSpan what;
+
+    SetSpanOperation(int start, int end, ReactSpan what) {
+      this.start = start;
+      this.end = end;
+      this.what = what;
+    }
+
+    public void execute(SpannableStringBuilder sb, int priority) {
+      // All spans will automatically extend to the right of the text, but not the left - except
+      // for spans that start at the beginning of the text.
+      int spanFlags = Spannable.SPAN_EXCLUSIVE_INCLUSIVE;
+      if (start == 0) {
+        spanFlags = Spannable.SPAN_INCLUSIVE_INCLUSIVE;
+      }
+
+      spanFlags &= ~Spannable.SPAN_PRIORITY;
+      spanFlags |= (priority << Spannable.SPAN_PRIORITY_SHIFT) & Spannable.SPAN_PRIORITY;
+
+      sb.setSpan(what, start, end, spanFlags);
+    }
+  }
+
   private static void buildSpannedFromShadowNode(
       ReactBaseTextShadowNode textShadowNode,
       SpannableStringBuilder sb,
@@ -251,9 +275,8 @@ public abstract class ReactBaseTextShadowNode extends LayoutShadowNode {
 
     // While setting the Spans on the final text, we also check whether any of them are inline views
     // or images.
-    for (int priorityIndex = 0; priorityIndex < ops.size(); priorityIndex++) {
-      final SetSpanOperation op = ops.get(ops.size() - priorityIndex - 1);
-
+    int priority = 0;
+    for (SetSpanOperation op : ops) {
       boolean isInlineImage = op.what instanceof TextInlineImageSpan;
       if (isInlineImage || op.what instanceof TextInlineViewPlaceholderSpan) {
         int height;
@@ -280,8 +303,9 @@ public abstract class ReactBaseTextShadowNode extends LayoutShadowNode {
       }
 
       // Actual order of calling {@code execute} does NOT matter,
-      // but the {@code priorityIndex} DOES matter.
-      op.execute(sb, priorityIndex);
+      // but the {@code priority} DOES matter.
+      op.execute(sb, priority);
+      priority++;
     }
 
     textShadowNode.mTextAttributes.setHeightOfTallestInlineViewOrImage(
@@ -436,8 +460,7 @@ public abstract class ReactBaseTextShadowNode extends LayoutShadowNode {
       } else if ("center".equals(textAlign)) {
         mTextAlign = Gravity.CENTER_HORIZONTAL;
       } else {
-        FLog.w(ReactConstants.TAG, "Invalid textAlign: " + textAlign);
-        mTextAlign = Gravity.NO_GRAVITY;
+        throw new JSApplicationIllegalArgumentException("Invalid textAlign: " + textAlign);
       }
     }
     markUpdated();
@@ -549,8 +572,8 @@ public abstract class ReactBaseTextShadowNode extends LayoutShadowNode {
     } else if ("balanced".equals(textBreakStrategy)) {
       mTextBreakStrategy = Layout.BREAK_STRATEGY_BALANCED;
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid textBreakStrategy: " + textBreakStrategy);
-      mTextBreakStrategy = Layout.BREAK_STRATEGY_HIGH_QUALITY;
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid textBreakStrategy: " + textBreakStrategy);
     }
 
     markUpdated();
@@ -606,8 +629,7 @@ public abstract class ReactBaseTextShadowNode extends LayoutShadowNode {
     } else if ("capitalize".equals(textTransform)) {
       mTextAttributes.setTextTransform(TextTransform.CAPITALIZE);
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid textTransform: " + textTransform);
-      mTextAttributes.setTextTransform(TextTransform.UNSET);
+      throw new JSApplicationIllegalArgumentException("Invalid textTransform: " + textTransform);
     }
     markUpdated();
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextAnchorViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextAnchorViewManager.java
index 7b5d0c1..dc87402 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextAnchorViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextAnchorViewManager.java
@@ -16,7 +16,7 @@ import android.view.Gravity;
 import android.view.View;
 import androidx.annotation.Nullable;
 import com.facebook.common.logging.FLog;
-import com.facebook.react.common.ReactConstants;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.uimanager.BaseViewManager;
 import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.Spacing;
@@ -65,8 +65,7 @@ public abstract class ReactTextAnchorViewManager<T extends View, C extends React
     } else if (ellipsizeMode.equals("clip")) {
       view.setEllipsizeLocation(null);
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid ellipsizeMode: " + ellipsizeMode);
-      view.setEllipsizeLocation(TextUtils.TruncateAt.END);
+      throw new JSApplicationIllegalArgumentException("Invalid ellipsizeMode: " + ellipsizeMode);
     }
   }
 
@@ -86,8 +85,8 @@ public abstract class ReactTextAnchorViewManager<T extends View, C extends React
     } else if ("center".equals(textAlignVertical)) {
       view.setGravityVertical(Gravity.CENTER_VERTICAL);
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid textAlignVertical: " + textAlignVertical);
-      view.setGravityVertical(Gravity.NO_GRAVITY);
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid textAlignVertical: " + textAlignVertical);
     }
   }
 
@@ -119,8 +118,8 @@ public abstract class ReactTextAnchorViewManager<T extends View, C extends React
     } else if (frequency.equals("normal")) {
       view.setHyphenationFrequency(Layout.HYPHENATION_FREQUENCY_NORMAL);
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid android_hyphenationFrequency: " + frequency);
-      view.setHyphenationFrequency(Layout.HYPHENATION_FREQUENCY_NONE);
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid android_hyphenationFrequency: " + frequency);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextShadowNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextShadowNode.java
index b69452d..4e67070 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextShadowNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextShadowNode.java
@@ -135,10 +135,7 @@ public class ReactTextShadowNode extends ReactBaseTextShadowNode {
             layoutWidth = width;
           } else {
             for (int lineIndex = 0; lineIndex < lineCount; lineIndex++) {
-              boolean endsWithNewLine =
-                  text.length() > 0 && text.charAt(layout.getLineEnd(lineIndex) - 1) == '\n';
-              float lineWidth =
-                  endsWithNewLine ? layout.getLineMax(lineIndex) : layout.getLineWidth(lineIndex);
+              float lineWidth = layout.getLineWidth(lineIndex);
               if (lineWidth > layoutWidth) {
                 layoutWidth = lineWidth;
               }
@@ -266,13 +263,6 @@ public class ReactTextShadowNode extends ReactBaseTextShadowNode {
             new StaticLayout(
                 text, textPaint, (int) width, alignment, 1.f, 0.f, mIncludeFontPadding);
       } else {
-        // Android 11+ introduces changes in text width calculation which leads to cases
-        // where the container is measured smaller than text. Math.ceil prevents it
-        // See T136756103 for investigation
-        if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.Q) {
-          width = (float) Math.ceil(width);
-        }
-
         StaticLayout.Builder builder =
             StaticLayout.Builder.obtain(text, 0, text.length(), textPaint, (int) width)
                 .setAlignment(alignment)
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextUpdate.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextUpdate.java
index 0802ec3..82c9f5d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextUpdate.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextUpdate.java
@@ -27,6 +27,8 @@ public class ReactTextUpdate {
   private final float mPaddingBottom;
   private final int mTextAlign;
   private final int mTextBreakStrategy;
+  private final int mSelectionStart;
+  private final int mSelectionEnd;
   private final int mJustificationMode;
 
   /**
@@ -53,7 +55,35 @@ public class ReactTextUpdate {
         paddingBottom,
         textAlign,
         Layout.BREAK_STRATEGY_HIGH_QUALITY,
-        Layout.JUSTIFICATION_MODE_NONE);
+        Layout.JUSTIFICATION_MODE_NONE,
+        -1,
+        -1);
+  }
+
+  public ReactTextUpdate(
+      Spannable text,
+      int jsEventCounter,
+      boolean containsImages,
+      float paddingStart,
+      float paddingTop,
+      float paddingEnd,
+      float paddingBottom,
+      int textAlign,
+      int textBreakStrategy,
+      int justificationMode) {
+    this(
+        text,
+        jsEventCounter,
+        containsImages,
+        paddingStart,
+        paddingTop,
+        paddingEnd,
+        paddingBottom,
+        textAlign,
+        textBreakStrategy,
+        justificationMode,
+        -1,
+        -1);
   }
 
   public ReactTextUpdate(
@@ -73,7 +103,9 @@ public class ReactTextUpdate {
         UNSET,
         textAlign,
         textBreakStrategy,
-        justificationMode);
+        justificationMode,
+        -1,
+        -1);
   }
 
   public ReactTextUpdate(
@@ -86,7 +118,9 @@ public class ReactTextUpdate {
       float paddingBottom,
       int textAlign,
       int textBreakStrategy,
-      int justificationMode) {
+      int justificationMode,
+      int selectionStart,
+      int selectionEnd) {
     mText = text;
     mJsEventCounter = jsEventCounter;
     mContainsImages = containsImages;
@@ -96,6 +130,8 @@ public class ReactTextUpdate {
     mPaddingBottom = paddingBottom;
     mTextAlign = textAlign;
     mTextBreakStrategy = textBreakStrategy;
+    mSelectionStart = selectionStart;
+    mSelectionEnd = selectionEnd;
     mJustificationMode = justificationMode;
   }
 
@@ -151,4 +187,12 @@ public class ReactTextUpdate {
   public int getJustificationMode() {
     return mJustificationMode;
   }
+
+  public int getSelectionStart() {
+    return mSelectionStart;
+  }
+
+  public int getSelectionEnd() {
+    return mSelectionEnd;
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextView.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextView.java
index 190bc27..6e74279 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextView.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/ReactTextView.java
@@ -264,14 +264,11 @@ public class ReactTextView extends AppCompatTextView implements ReactCompoundVie
         // the last offset in the layout will result in an endless loop. Work around
         // this bug by avoiding getPrimaryHorizontal in that case.
         if (start == text.length() - 1) {
-          boolean endsWithNewLine =
-              text.length() > 0 && text.charAt(layout.getLineEnd(line) - 1) == '\n';
-          float lineWidth = endsWithNewLine ? layout.getLineMax(line) : layout.getLineWidth(line);
           placeholderHorizontalPosition =
               isRtlParagraph
                   // Equivalent to `layout.getLineLeft(line)` but `getLineLeft` returns incorrect
                   // values when the paragraph is RTL and `setSingleLine(true)`.
-                  ? textViewWidth - (int) lineWidth
+                  ? textViewWidth - (int) layout.getLineWidth(line)
                   : (int) layout.getLineRight(line) - width;
         } else {
           // The direction of the paragraph may not be exactly the direction the string is heading
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/SetSpanOperation.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/SetSpanOperation.java
deleted file mode 100644
index cccbe58..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/SetSpanOperation.java
+++ /dev/null
@@ -1,52 +0,0 @@
-package com.facebook.react.views.text;
-
-import android.text.Spannable;
-import android.text.SpannableStringBuilder;
-import android.text.Spanned;
-import com.facebook.common.logging.FLog;
-
-class SetSpanOperation {
-  private static final String TAG = "SetSpanOperation";
-  static final int SPAN_MAX_PRIORITY = Spanned.SPAN_PRIORITY >> Spanned.SPAN_PRIORITY_SHIFT;
-
-  protected int start, end;
-  protected ReactSpan what;
-
-  SetSpanOperation(int start, int end, ReactSpan what) {
-    this.start = start;
-    this.end = end;
-    this.what = what;
-  }
-
-  /**
-   * @param sb builder
-   * @param priorityIndex index of this operation in the topological sorting which puts operations
-   *     with higher priority before operations with lower priority.
-   */
-  public void execute(SpannableStringBuilder sb, int priorityIndex) {
-    assert priorityIndex >= 0;
-
-    // All spans will automatically extend to the right of the text, but not the left - except
-    // for spans that start at the beginning of the text.
-    int spanFlags = Spannable.SPAN_EXCLUSIVE_INCLUSIVE;
-    if (start == 0) {
-      spanFlags = Spannable.SPAN_INCLUSIVE_INCLUSIVE;
-    }
-
-    // Calculate priority, assigning the highest values to operations with the highest priority
-    final int priority = SPAN_MAX_PRIORITY - priorityIndex;
-
-    if (priority < 0) {
-      FLog.w(TAG, "Text tree size exceeded the limit, styling may become unpredictable");
-    }
-
-    // If the computed priority doesn't fit in the flags, clamp it. The effect might not be correct
-    // in 100% of cases, but doing nothing (as we did in the past) leads to totally random results.
-    final int effectivePriority = Math.max(priority, 0);
-
-    spanFlags &= ~Spannable.SPAN_PRIORITY;
-    spanFlags |= (effectivePriority << Spannable.SPAN_PRIORITY_SHIFT) & Spannable.SPAN_PRIORITY;
-
-    sb.setSpan(what, start, end, spanFlags);
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributeProps.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributeProps.java
index d503a64..0a14e28 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributeProps.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributeProps.java
@@ -13,10 +13,9 @@ import android.text.TextUtils;
 import android.util.LayoutDirection;
 import android.view.Gravity;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.common.mapbuffer.MapBuffer;
 import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.ReactAccessibilityDelegate;
@@ -268,8 +267,7 @@ public class TextAttributeProps {
       } else if ("center".equals(textAlignPropValue)) {
         return Gravity.CENTER_HORIZONTAL;
       } else {
-        FLog.w(ReactConstants.TAG, "Invalid textAlign: " + textAlignPropValue);
-        return Gravity.NO_GRAVITY;
+        throw new JSApplicationIllegalArgumentException("Invalid textAlign: " + textAlignPropValue);
       }
     }
   }
@@ -565,8 +563,8 @@ public class TextAttributeProps {
     } else if ("ltr".equals(layoutDirection)) {
       androidLayoutDirection = LayoutDirection.LTR;
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid layoutDirection: " + layoutDirection);
-      androidLayoutDirection = UNSET;
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid layoutDirection: " + layoutDirection);
     }
     return androidLayoutDirection;
   }
@@ -597,8 +595,7 @@ public class TextAttributeProps {
     } else if ("capitalize".equals(textTransform)) {
       mTextTransform = TextTransform.CAPITALIZE;
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid textTransform: " + textTransform);
-      mTextTransform = TextTransform.NONE;
+      throw new JSApplicationIllegalArgumentException("Invalid textTransform: " + textTransform);
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributes.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributes.java
index 8d54a23..f4f7887 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributes.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextAttributes.java
@@ -7,8 +7,7 @@
 
 package com.facebook.react.views.text;
 
-import com.facebook.common.logging.FLog;
-import com.facebook.react.common.ReactConstants;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.uimanager.PixelUtil;
 import com.facebook.react.uimanager.ViewDefaults;
 
@@ -99,9 +98,8 @@ public class TextAttributes {
 
   public void setMaxFontSizeMultiplier(float maxFontSizeMultiplier) {
     if (maxFontSizeMultiplier != 0 && maxFontSizeMultiplier < 1) {
-      FLog.w(ReactConstants.TAG, "maxFontSizeMultiplier must be NaN, 0, or >= 1");
-      mMaxFontSizeMultiplier = Float.NaN;
-      return;
+      throw new JSApplicationIllegalArgumentException(
+          "maxFontSizeMultiplier must be NaN, 0, or >= 1");
     }
     mMaxFontSizeMultiplier = maxFontSizeMultiplier;
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java
index 561a2d0..964152d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java
@@ -72,12 +72,11 @@ public class TextLayoutManager {
 
   public static boolean isRTL(ReadableMap attributedString) {
     ReadableArray fragments = attributedString.getArray("fragments");
-    if (fragments != null && fragments.size() > 0) {
-      ReadableMap fragment = fragments.getMap(0);
+    for (int i = 0; i < fragments.size(); i++) {
+      ReadableMap fragment = fragments.getMap(i);
       ReadableMap map = fragment.getMap("textAttributes");
-      return map != null
-          && TextAttributeProps.getLayoutDirection(map.getString(ViewProps.LAYOUT_DIRECTION))
-              == LayoutDirection.RTL;
+      return TextAttributeProps.getLayoutDirection(map.getString(ViewProps.LAYOUT_DIRECTION))
+          == LayoutDirection.RTL;
     }
     return false;
   }
@@ -213,12 +212,12 @@ public class TextLayoutManager {
 
     // TODO T31905686: add support for inline Images
     // While setting the Spans on the final text, we also check whether any of them are images.
-    for (int priorityIndex = 0; priorityIndex < ops.size(); ++priorityIndex) {
-      final SetSpanOperation op = ops.get(ops.size() - priorityIndex - 1);
-
+    int priority = 0;
+    for (SetSpanOperation op : ops) {
       // Actual order of calling {@code execute} does NOT matter,
-      // but the {@code priorityIndex} DOES matter.
-      op.execute(sb, priorityIndex);
+      // but the {@code priority} DOES matter.
+      op.execute(sb, priority);
+      priority++;
     }
 
     if (reactTextViewManagerCallback != null) {
@@ -238,8 +237,8 @@ public class TextLayoutManager {
     Layout layout;
     int spanLength = text.length();
     boolean unconstrainedWidth = widthYogaMeasureMode == YogaMeasureMode.UNDEFINED || width < 0;
-    float desiredWidth =
-        boring == null ? Layout.getDesiredWidth(text, sTextPaintInstance) : Float.NaN;
+    TextPaint textPaint = sTextPaintInstance;
+    float desiredWidth = boring == null ? Layout.getDesiredWidth(text, textPaint) : Float.NaN;
 
     if (boring == null
         && (unconstrainedWidth
@@ -252,7 +251,7 @@ public class TextLayoutManager {
         layout =
             new StaticLayout(
                 text,
-                sTextPaintInstance,
+                textPaint,
                 hintWidth,
                 Layout.Alignment.ALIGN_NORMAL,
                 1.f,
@@ -260,7 +259,7 @@ public class TextLayoutManager {
                 includeFontPadding);
       } else {
         layout =
-            StaticLayout.Builder.obtain(text, 0, spanLength, sTextPaintInstance, hintWidth)
+            StaticLayout.Builder.obtain(text, 0, spanLength, textPaint, hintWidth)
                 .setAlignment(Layout.Alignment.ALIGN_NORMAL)
                 .setLineSpacing(0.f, 1.f)
                 .setIncludePad(includeFontPadding)
@@ -281,7 +280,7 @@ public class TextLayoutManager {
       layout =
           BoringLayout.make(
               text,
-              sTextPaintInstance,
+              textPaint,
               boringLayoutWidth,
               Layout.Alignment.ALIGN_NORMAL,
               1.f,
@@ -295,7 +294,7 @@ public class TextLayoutManager {
         layout =
             new StaticLayout(
                 text,
-                sTextPaintInstance,
+                textPaint,
                 (int) width,
                 Layout.Alignment.ALIGN_NORMAL,
                 1.f,
@@ -303,7 +302,7 @@ public class TextLayoutManager {
                 includeFontPadding);
       } else {
         StaticLayout.Builder builder =
-            StaticLayout.Builder.obtain(text, 0, spanLength, sTextPaintInstance, (int) width)
+            StaticLayout.Builder.obtain(text, 0, spanLength, textPaint, (int) width)
                 .setAlignment(Layout.Alignment.ALIGN_NORMAL)
                 .setLineSpacing(0.f, 1.f)
                 .setIncludePad(includeFontPadding)
@@ -332,6 +331,7 @@ public class TextLayoutManager {
       @Nullable float[] attachmentsPositions) {
 
     // TODO(5578671): Handle text direction (see View#getTextDirectionHeuristic)
+    TextPaint textPaint = sTextPaintInstance;
     Spannable text;
     if (attributedString.hasKey("cacheId")) {
       int cacheId = attributedString.getInt("cacheId");
@@ -341,7 +341,7 @@ public class TextLayoutManager {
       if (sTagToSpannableCache.containsKey(cacheId)) {
         text = sTagToSpannableCache.get(cacheId);
         if (ENABLE_MEASURE_LOGGING) {
-          FLog.e(TAG, "Text for spannable found for cacheId[" + cacheId + "]: " + text);
+          FLog.e(TAG, "Text for spannable found for cacheId[" + cacheId + "]: " + text.toString());
         }
       } else {
         if (ENABLE_MEASURE_LOGGING) {
@@ -368,7 +368,7 @@ public class TextLayoutManager {
       throw new IllegalStateException("Spannable element has not been prepared in onBeforeLayout");
     }
 
-    BoringLayout.Metrics boring = BoringLayout.isBoring(text, sTextPaintInstance);
+    BoringLayout.Metrics boring = BoringLayout.isBoring(text, textPaint);
 
     Layout layout =
         createLayout(
@@ -397,10 +397,7 @@ public class TextLayoutManager {
       calculatedWidth = width;
     } else {
       for (int lineIndex = 0; lineIndex < calculatedLineCount; lineIndex++) {
-        boolean endsWithNewLine =
-            text.length() > 0 && text.charAt(layout.getLineEnd(lineIndex) - 1) == '\n';
-        float lineWidth =
-            endsWithNewLine ? layout.getLineMax(lineIndex) : layout.getLineWidth(lineIndex);
+        float lineWidth = layout.getLineWidth(lineIndex);
         if (lineWidth > calculatedWidth) {
           calculatedWidth = lineWidth;
         }
@@ -410,13 +407,6 @@ public class TextLayoutManager {
       }
     }
 
-    // Android 11+ introduces changes in text width calculation which leads to cases
-    // where the container is measured smaller than text. Math.ceil prevents it
-    // See T136756103 for investigation
-    if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.Q) {
-      calculatedWidth = (float) Math.ceil(calculatedWidth);
-    }
-
     float calculatedHeight = height;
     if (heightYogaMeasureMode != YogaMeasureMode.EXACTLY) {
       calculatedHeight = layout.getLineBottom(calculatedLineCount - 1);
@@ -455,14 +445,11 @@ public class TextLayoutManager {
           // the last offset in the layout will result in an endless loop. Work around
           // this bug by avoiding getPrimaryHorizontal in that case.
           if (start == text.length() - 1) {
-            boolean endsWithNewLine =
-                text.length() > 0 && text.charAt(layout.getLineEnd(line) - 1) == '\n';
-            float lineWidth = endsWithNewLine ? layout.getLineMax(line) : layout.getLineWidth(line);
             placeholderLeftPosition =
                 isRtlParagraph
                     // Equivalent to `layout.getLineLeft(line)` but `getLineLeft` returns incorrect
                     // values when the paragraph is RTL and `setSingleLine(true)`.
-                    ? calculatedWidth - lineWidth
+                    ? calculatedWidth - layout.getLineWidth(line)
                     : layout.getLineRight(line) - placeholderWidth;
           } else {
             // The direction of the paragraph may not be exactly the direction the string is heading
@@ -532,8 +519,9 @@ public class TextLayoutManager {
       ReadableMap attributedString,
       ReadableMap paragraphAttributes,
       float width) {
+    TextPaint textPaint = sTextPaintInstance;
     Spannable text = getOrCreateSpannableForText(context, attributedString, null);
-    BoringLayout.Metrics boring = BoringLayout.isBoring(text, sTextPaintInstance);
+    BoringLayout.Metrics boring = BoringLayout.isBoring(text, textPaint);
 
     int textBreakStrategy =
         TextAttributeProps.getTextBreakStrategy(
@@ -557,4 +545,30 @@ public class TextLayoutManager {
             hyphenationFrequency);
     return FontMetricsUtil.getFontMetrics(text, layout, sTextPaintInstance, context);
   }
+
+  // TODO T31905686: This class should be private
+  public static class SetSpanOperation {
+    protected int start, end;
+    protected ReactSpan what;
+
+    public SetSpanOperation(int start, int end, ReactSpan what) {
+      this.start = start;
+      this.end = end;
+      this.what = what;
+    }
+
+    public void execute(Spannable sb, int priority) {
+      // All spans will automatically extend to the right of the text, but not the left - except
+      // for spans that start at the beginning of the text.
+      int spanFlags = Spannable.SPAN_EXCLUSIVE_INCLUSIVE;
+      if (start == 0) {
+        spanFlags = Spannable.SPAN_INCLUSIVE_INCLUSIVE;
+      }
+
+      spanFlags &= ~Spannable.SPAN_PRIORITY;
+      spanFlags |= (priority << Spannable.SPAN_PRIORITY_SHIFT) & Spannable.SPAN_PRIORITY;
+
+      sb.setSpan(what, start, end, spanFlags);
+    }
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManagerMapBuffer.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManagerMapBuffer.java
index 0d118f0..e2a8c05 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManagerMapBuffer.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManagerMapBuffer.java
@@ -76,6 +76,7 @@ public class TextLayoutManagerMapBuffer {
 
   private static final String INLINE_VIEW_PLACEHOLDER = "0";
 
+  private static final Object sSpannableCacheLock = new Object();
   private static final boolean DEFAULT_INCLUDE_FONT_PADDING = true;
   private static final LruCache<MapBuffer, Spannable> sSpannableCache =
       new LruCache<>(spannableCacheSize);
@@ -227,12 +228,12 @@ public class TextLayoutManagerMapBuffer {
 
     // TODO T31905686: add support for inline Images
     // While setting the Spans on the final text, we also check whether any of them are images.
-    for (int priorityIndex = 0; priorityIndex < ops.size(); ++priorityIndex) {
-      final SetSpanOperation op = ops.get(ops.size() - priorityIndex - 1);
-
+    int priority = 0;
+    for (SetSpanOperation op : ops) {
       // Actual order of calling {@code execute} does NOT matter,
-      // but the {@code priorityIndex} DOES matter.
-      op.execute(sb, priorityIndex);
+      // but the {@code priority} DOES matter.
+      op.execute(sb, priority);
+      priority++;
     }
 
     if (reactTextViewManagerCallback != null) {
@@ -252,8 +253,8 @@ public class TextLayoutManagerMapBuffer {
     Layout layout;
     int spanLength = text.length();
     boolean unconstrainedWidth = widthYogaMeasureMode == YogaMeasureMode.UNDEFINED || width < 0;
-    float desiredWidth =
-        boring == null ? Layout.getDesiredWidth(text, sTextPaintInstance) : Float.NaN;
+    TextPaint textPaint = sTextPaintInstance;
+    float desiredWidth = boring == null ? Layout.getDesiredWidth(text, textPaint) : Float.NaN;
 
     if (boring == null
         && (unconstrainedWidth
@@ -266,7 +267,7 @@ public class TextLayoutManagerMapBuffer {
         layout =
             new StaticLayout(
                 text,
-                sTextPaintInstance,
+                textPaint,
                 hintWidth,
                 Layout.Alignment.ALIGN_NORMAL,
                 1.f,
@@ -274,7 +275,7 @@ public class TextLayoutManagerMapBuffer {
                 includeFontPadding);
       } else {
         layout =
-            StaticLayout.Builder.obtain(text, 0, spanLength, sTextPaintInstance, hintWidth)
+            StaticLayout.Builder.obtain(text, 0, spanLength, textPaint, hintWidth)
                 .setAlignment(Layout.Alignment.ALIGN_NORMAL)
                 .setLineSpacing(0.f, 1.f)
                 .setIncludePad(includeFontPadding)
@@ -295,7 +296,7 @@ public class TextLayoutManagerMapBuffer {
       layout =
           BoringLayout.make(
               text,
-              sTextPaintInstance,
+              textPaint,
               boringLayoutWidth,
               Layout.Alignment.ALIGN_NORMAL,
               1.f,
@@ -309,7 +310,7 @@ public class TextLayoutManagerMapBuffer {
         layout =
             new StaticLayout(
                 text,
-                sTextPaintInstance,
+                textPaint,
                 (int) width,
                 Layout.Alignment.ALIGN_NORMAL,
                 1.f,
@@ -317,7 +318,7 @@ public class TextLayoutManagerMapBuffer {
                 includeFontPadding);
       } else {
         StaticLayout.Builder builder =
-            StaticLayout.Builder.obtain(text, 0, spanLength, sTextPaintInstance, (int) width)
+            StaticLayout.Builder.obtain(text, 0, spanLength, textPaint, (int) width)
                 .setAlignment(Layout.Alignment.ALIGN_NORMAL)
                 .setLineSpacing(0.f, 1.f)
                 .setIncludePad(includeFontPadding)
@@ -356,7 +357,7 @@ public class TextLayoutManagerMapBuffer {
       if (sTagToSpannableCache.containsKey(cacheId)) {
         text = sTagToSpannableCache.get(cacheId);
         if (ENABLE_MEASURE_LOGGING) {
-          FLog.e(TAG, "Text for spannable found for cacheId[" + cacheId + "]: " + text);
+          FLog.e(TAG, "Text for spannable found for cacheId[" + cacheId + "]: " + text.toString());
         }
       } else {
         if (ENABLE_MEASURE_LOGGING) {
@@ -376,7 +377,7 @@ public class TextLayoutManagerMapBuffer {
             ? paragraphAttributes.getBoolean(PA_KEY_INCLUDE_FONT_PADDING)
             : DEFAULT_INCLUDE_FONT_PADDING;
     int hyphenationFrequency =
-        TextAttributeProps.getHyphenationFrequency(
+        TextAttributeProps.getTextBreakStrategy(
             paragraphAttributes.getString(PA_KEY_HYPHENATION_FREQUENCY));
 
     if (text == null) {
@@ -384,6 +385,11 @@ public class TextLayoutManagerMapBuffer {
     }
 
     BoringLayout.Metrics boring = BoringLayout.isBoring(text, textPaint);
+    float desiredWidth = boring == null ? Layout.getDesiredWidth(text, textPaint) : Float.NaN;
+
+    // technically, width should never be negative, but there is currently a bug in
+    boolean unconstrainedWidth = widthYogaMeasureMode == YogaMeasureMode.UNDEFINED || width < 0;
+
     Layout layout =
         createLayout(
             text,
@@ -411,10 +417,7 @@ public class TextLayoutManagerMapBuffer {
       calculatedWidth = width;
     } else {
       for (int lineIndex = 0; lineIndex < calculatedLineCount; lineIndex++) {
-        boolean endsWithNewLine =
-            text.length() > 0 && text.charAt(layout.getLineEnd(lineIndex) - 1) == '\n';
-        float lineWidth =
-            endsWithNewLine ? layout.getLineMax(lineIndex) : layout.getLineWidth(lineIndex);
+        float lineWidth = layout.getLineWidth(lineIndex);
         if (lineWidth > calculatedWidth) {
           calculatedWidth = lineWidth;
         }
@@ -424,13 +427,6 @@ public class TextLayoutManagerMapBuffer {
       }
     }
 
-    // Android 11+ introduces changes in text width calculation which leads to cases
-    // where the container is measured smaller than text. Math.ceil prevents it
-    // See T136756103 for investigation
-    if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.Q) {
-      calculatedWidth = (float) Math.ceil(calculatedWidth);
-    }
-
     float calculatedHeight = height;
     if (heightYogaMeasureMode != YogaMeasureMode.EXACTLY) {
       calculatedHeight = layout.getLineBottom(calculatedLineCount - 1);
@@ -469,15 +465,12 @@ public class TextLayoutManagerMapBuffer {
           // the last offset in the layout will result in an endless loop. Work around
           // this bug by avoiding getPrimaryHorizontal in that case.
           if (start == text.length() - 1) {
-            boolean endsWithNewLine =
-                text.length() > 0 && text.charAt(layout.getLineEnd(line) - 1) == '\n';
-            float lineWidth = endsWithNewLine ? layout.getLineMax(line) : layout.getLineWidth(line);
             placeholderLeftPosition =
                 isRtlParagraph
                     // Equivalent to `layout.getLineLeft(line)` but `getLineLeft` returns
                     // incorrect
                     // values when the paragraph is RTL and `setSingleLine(true)`.
-                    ? calculatedWidth - lineWidth
+                    ? calculatedWidth - layout.getLineWidth(line)
                     : layout.getLineRight(line) - placeholderWidth;
           } else {
             // The direction of the paragraph may not be exactly the direction the string is
@@ -551,8 +544,9 @@ public class TextLayoutManagerMapBuffer {
       MapBuffer paragraphAttributes,
       float width) {
 
+    TextPaint textPaint = sTextPaintInstance;
     Spannable text = getOrCreateSpannableForText(context, attributedString, null);
-    BoringLayout.Metrics boring = BoringLayout.isBoring(text, sTextPaintInstance);
+    BoringLayout.Metrics boring = BoringLayout.isBoring(text, textPaint);
 
     int textBreakStrategy =
         TextAttributeProps.getTextBreakStrategy(
@@ -576,4 +570,30 @@ public class TextLayoutManagerMapBuffer {
             hyphenationFrequency);
     return FontMetricsUtil.getFontMetrics(text, layout, sTextPaintInstance, context);
   }
+
+  // TODO T31905686: This class should be private
+  public static class SetSpanOperation {
+    protected int start, end;
+    protected ReactSpan what;
+
+    public SetSpanOperation(int start, int end, ReactSpan what) {
+      this.start = start;
+      this.end = end;
+      this.what = what;
+    }
+
+    public void execute(Spannable sb, int priority) {
+      // All spans will automatically extend to the right of the text, but not the left - except
+      // for spans that start at the beginning of the text.
+      int spanFlags = Spannable.SPAN_EXCLUSIVE_INCLUSIVE;
+      if (start == 0) {
+        spanFlags = Spannable.SPAN_INCLUSIVE_INCLUSIVE;
+      }
+
+      spanFlags &= ~Spannable.SPAN_PRIORITY;
+      spanFlags |= (priority << Spannable.SPAN_PRIORITY_SHIFT) & Spannable.SPAN_PRIORITY;
+
+      sb.setSpan(what, start, end, spanFlags);
+    }
+  }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/BUCK
index 7f8afcb..e48762c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/BUCK
@@ -14,7 +14,6 @@ rn_android_library(
     deps = [
         YOGA_TARGET,
         react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("libraries/fresco/fresco-react-native:fbcore"),
         react_native_dep("libraries/fresco/fresco-react-native:fresco-drawee"),
         react_native_dep("libraries/fresco/fresco-react-native:fresco-react-native"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/FrescoBasedReactTextInlineImageShadowNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/FrescoBasedReactTextInlineImageShadowNode.java
index 845ca7f..65d83c2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/FrescoBasedReactTextInlineImageShadowNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/frescosupport/FrescoBasedReactTextInlineImageShadowNode.java
@@ -11,14 +11,13 @@ import android.content.Context;
 import android.content.res.Resources;
 import android.net.Uri;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
 import com.facebook.common.util.UriUtil;
 import com.facebook.drawee.controller.AbstractDraweeControllerBuilder;
 import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.ReadableType;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.uimanager.ViewProps;
 import com.facebook.react.uimanager.annotations.ReactProp;
 import com.facebook.react.views.text.ReactTextInlineImageShadowNode;
@@ -85,8 +84,8 @@ public class FrescoBasedReactTextInlineImageShadowNode extends ReactTextInlineIm
     if (width.getType() == ReadableType.Number) {
       mWidth = (float) width.asDouble();
     } else {
-      FLog.w(ReactConstants.TAG, "Inline images must not have percentage based width");
-      mWidth = YogaConstants.UNDEFINED;
+      throw new JSApplicationIllegalArgumentException(
+          "Inline images must not have percentage based width");
     }
   }
 
@@ -95,8 +94,8 @@ public class FrescoBasedReactTextInlineImageShadowNode extends ReactTextInlineIm
     if (height.getType() == ReadableType.Number) {
       mHeight = (float) height.asDouble();
     } else {
-      FLog.w(ReactConstants.TAG, "Inline images must not have percentage based height");
-      mHeight = YogaConstants.UNDEFINED;
+      throw new JSApplicationIllegalArgumentException(
+          "Inline images must not have percentage based height");
     }
   }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactEditText.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactEditText.java
index 1b5e0f4..290bd23 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactEditText.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactEditText.java
@@ -116,7 +116,6 @@ public class ReactEditText extends AppCompatEditText
   private int mFontStyle = UNSET;
   private boolean mAutoFocus = false;
   private boolean mDidAttachToWindow = false;
-  private @Nullable String mPlaceholder = null;
 
   private ReactViewBackgroundManager mReactBackgroundManager;
 
@@ -497,13 +496,6 @@ public class ReactEditText extends AppCompatEditText
     setKeyListener(mKeyListener);
   }
 
-  public void setPlaceholder(@Nullable String placeholder) {
-    if (!Objects.equals(placeholder, mPlaceholder)) {
-      mPlaceholder = placeholder;
-      setHint(placeholder);
-    }
-  }
-
   public void setFontFamily(String fontFamily) {
     mFontFamily = fontFamily;
     mTypefaceDirty = true;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputManager.java
index b27ace4..5fda12a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputManager.java
@@ -27,7 +27,6 @@ import android.text.TextWatcher;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.inputmethod.EditorInfo;
 import android.widget.TextView;
 import androidx.annotation.Nullable;
@@ -36,6 +35,7 @@ import androidx.core.content.ContextCompat;
 import com.facebook.common.logging.FLog;
 import com.facebook.infer.annotation.Assertions;
 import com.facebook.react.bridge.Dynamic;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.ReactSoftExceptionLogger;
 import com.facebook.react.bridge.ReadableArray;
@@ -45,7 +45,6 @@ import com.facebook.react.bridge.ReadableType;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.bridge.WritableNativeMap;
 import com.facebook.react.common.MapBuilder;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.common.mapbuffer.MapBuffer;
 import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.uimanager.BaseViewManager;
@@ -192,13 +191,6 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
     int inputType = editText.getInputType();
     editText.setInputType(inputType & (~InputType.TYPE_TEXT_FLAG_MULTI_LINE));
     editText.setReturnKeyType("done");
-    // Set default layoutParams to avoid NullPointerException to be thrown by Android EditTextView
-    // when update props (PlaceHolder) is executed before the view is layout.
-    // This change should not affect layout for TextInput components because layout will be
-    // overridden on the first RN commit.
-    editText.setLayoutParams(
-        new ViewGroup.LayoutParams(
-            ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
     return editText;
   }
 
@@ -328,19 +320,21 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
 
         if (!args.isNull(1)) {
           String text = args.getString(1);
-          reactEditText.maybeSetTextFromJS(getReactTextUpdate(text, mostRecentEventCount));
+          reactEditText.maybeSetTextFromJS(
+              getReactTextUpdate(text, mostRecentEventCount, start, end));
         }
         reactEditText.maybeSetSelection(mostRecentEventCount, start, end);
         break;
     }
   }
 
-  private ReactTextUpdate getReactTextUpdate(String text, int mostRecentEventCount) {
+  private ReactTextUpdate getReactTextUpdate(
+      String text, int mostRecentEventCount, int start, int end) {
     SpannableStringBuilder sb = new SpannableStringBuilder();
     sb.append(TextTransform.apply(text, TextTransform.UNSET));
 
     return new ReactTextUpdate(
-        sb, mostRecentEventCount, false, 0, 0, 0, 0, Gravity.NO_GRAVITY, 0, 0);
+        sb, mostRecentEventCount, false, 0, 0, 0, 0, Gravity.NO_GRAVITY, 0, 0, start, end);
   }
 
   @Override
@@ -371,9 +365,9 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
 
       // Ensure that selection is handled correctly on text update
       boolean isCurrentSelectionEmpty = view.getSelectionStart() == view.getSelectionEnd();
-      int selectionStart = UNSET;
-      int selectionEnd = UNSET;
-      if (isCurrentSelectionEmpty) {
+      int selectionStart = update.getSelectionStart();
+      int selectionEnd = update.getSelectionEnd();
+      if ((selectionStart == UNSET || selectionEnd == UNSET) && isCurrentSelectionEmpty) {
         // if selection is not set by state, shift current selection to ensure constant gap to
         // text end
         int textLength = view.getText() == null ? 0 : view.getText().length();
@@ -505,7 +499,7 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
 
   @ReactProp(name = "placeholder")
   public void setPlaceholder(ReactEditText view, String placeholder) {
-    view.setPlaceholder(placeholder);
+    view.setHint(placeholder);
   }
 
   @ReactProp(name = "placeholderTextColor", customType = "Color")
@@ -696,8 +690,7 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
       } else if ("center".equals(textAlign)) {
         view.setGravityHorizontal(Gravity.CENTER_HORIZONTAL);
       } else {
-        FLog.w(ReactConstants.TAG, "Invalid textAlign: " + textAlign);
-        view.setGravityHorizontal(Gravity.NO_GRAVITY);
+        throw new JSApplicationIllegalArgumentException("Invalid textAlign: " + textAlign);
       }
     }
   }
@@ -713,8 +706,8 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
     } else if ("center".equals(textAlignVertical)) {
       view.setGravityVertical(Gravity.CENTER_VERTICAL);
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid textAlignVertical: " + textAlignVertical);
-      view.setGravityVertical(Gravity.NO_GRAVITY);
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid textAlignVertical: " + textAlignVertical);
     }
   }
 
@@ -790,8 +783,7 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
     } else if (REACT_PROPS_AUTOFILL_HINTS_MAP.containsKey(autoComplete)) {
       setAutofillHints(view, REACT_PROPS_AUTOFILL_HINTS_MAP.get(autoComplete));
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid autoComplete: " + autoComplete);
-      setImportantForAutofill(view, View.IMPORTANT_FOR_AUTOFILL_NO);
+      throw new JSApplicationIllegalArgumentException("Invalid autoComplete: " + autoComplete);
     }
   }
 
@@ -876,7 +868,7 @@ public class ReactTextInputManager extends BaseViewManager<ReactEditText, Layout
     } else if (KEYBOARD_TYPE_PHONE_PAD.equalsIgnoreCase(keyboardType)) {
       flagsToSet = InputType.TYPE_CLASS_PHONE;
     } else if (KEYBOARD_TYPE_VISIBLE_PASSWORD.equalsIgnoreCase(keyboardType)) {
-      // This will supersede secureTextEntry={false}. If it doesn't, due to the way
+      // This will supercede secureTextEntry={false}. If it doesn't, due to the way
       //  the flags work out, the underlying field will end up a URI-type field.
       flagsToSet = InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD;
     } else if (KEYBOARD_TYPE_URI.equalsIgnoreCase(keyboardType)) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputShadowNode.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputShadowNode.java
index 75e932c..e621e1b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputShadowNode.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/textinput/ReactTextInputShadowNode.java
@@ -15,9 +15,9 @@ import android.view.ViewGroup;
 import android.widget.EditText;
 import androidx.annotation.Nullable;
 import androidx.core.view.ViewCompat;
-import com.facebook.common.logging.FLog;
 import com.facebook.infer.annotation.Assertions;
-import com.facebook.react.common.ReactConstants;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
+import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.common.annotations.VisibleForTesting;
 import com.facebook.react.uimanager.Spacing;
 import com.facebook.react.uimanager.ThemedReactContext;
@@ -43,10 +43,13 @@ public class ReactTextInputShadowNode extends ReactBaseTextShadowNode
 
   @VisibleForTesting public static final String PROP_TEXT = "text";
   @VisibleForTesting public static final String PROP_PLACEHOLDER = "placeholder";
+  @VisibleForTesting public static final String PROP_SELECTION = "selection";
 
   // Represents the {@code text} property only, not possible nested content.
   private @Nullable String mText = null;
   private @Nullable String mPlaceholder = null;
+  private int mSelectionStart = UNSET;
+  private int mSelectionEnd = UNSET;
 
   public ReactTextInputShadowNode(
       @Nullable ReactTextViewManagerCallback reactTextViewManagerCallback) {
@@ -161,6 +164,18 @@ public class ReactTextInputShadowNode extends ReactBaseTextShadowNode
   @ReactProp(name = PROP_TEXT)
   public void setText(@Nullable String text) {
     mText = text;
+    if (text != null) {
+      // The selection shouldn't be bigger than the length of the text
+      if (mSelectionStart > text.length()) {
+        mSelectionStart = text.length();
+      }
+      if (mSelectionEnd > text.length()) {
+        mSelectionEnd = text.length();
+      }
+    } else {
+      mSelectionStart = UNSET;
+      mSelectionEnd = UNSET;
+    }
     markUpdated();
   }
 
@@ -178,6 +193,18 @@ public class ReactTextInputShadowNode extends ReactBaseTextShadowNode
     return mPlaceholder;
   }
 
+  @ReactProp(name = PROP_SELECTION)
+  public void setSelection(@Nullable ReadableMap selection) {
+    mSelectionStart = mSelectionEnd = UNSET;
+    if (selection == null) return;
+
+    if (selection.hasKey("start") && selection.hasKey("end")) {
+      mSelectionStart = selection.getInt("start");
+      mSelectionEnd = selection.getInt("end");
+      markUpdated();
+    }
+  }
+
   @Override
   public void setTextBreakStrategy(@Nullable String textBreakStrategy) {
     if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
@@ -191,8 +218,8 @@ public class ReactTextInputShadowNode extends ReactBaseTextShadowNode
     } else if ("balanced".equals(textBreakStrategy)) {
       mTextBreakStrategy = Layout.BREAK_STRATEGY_BALANCED;
     } else {
-      FLog.w(ReactConstants.TAG, "Invalid textBreakStrategy: " + textBreakStrategy);
-      mTextBreakStrategy = Layout.BREAK_STRATEGY_SIMPLE;
+      throw new JSApplicationIllegalArgumentException(
+          "Invalid textBreakStrategy: " + textBreakStrategy);
     }
   }
 
@@ -217,7 +244,9 @@ public class ReactTextInputShadowNode extends ReactBaseTextShadowNode
               getPadding(Spacing.BOTTOM),
               mTextAlign,
               mTextBreakStrategy,
-              mJustificationMode);
+              mJustificationMode,
+              mSelectionStart,
+              mSelectionEnd);
       uiViewOperationQueue.enqueueUpdateExtraData(getReactTag(), reactTextUpdate);
     }
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/TraceUpdateOverlay.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/TraceUpdateOverlay.java
deleted file mode 100644
index 6799848..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/TraceUpdateOverlay.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.views.traceupdateoverlay;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.RectF;
-import android.view.View;
-import androidx.annotation.UiThread;
-import com.facebook.react.uimanager.PixelUtil;
-import java.util.ArrayList;
-import java.util.List;
-
-public class TraceUpdateOverlay extends View {
-  private final Paint mOverlayPaint = new Paint();
-  private List<Overlay> mOverlays = new ArrayList<Overlay>();
-
-  public static class Overlay {
-    private final int mColor;
-    private final RectF mRect;
-
-    public Overlay(int color, RectF rect) {
-      mColor = color;
-      mRect = rect;
-    }
-
-    public int getColor() {
-      return mColor;
-    }
-
-    public RectF getPixelRect() {
-      return new RectF(
-          PixelUtil.toPixelFromDIP(mRect.left),
-          PixelUtil.toPixelFromDIP(mRect.top),
-          PixelUtil.toPixelFromDIP(mRect.right),
-          PixelUtil.toPixelFromDIP(mRect.bottom));
-    }
-  }
-
-  public TraceUpdateOverlay(Context context) {
-    super(context);
-    mOverlayPaint.setStyle(Paint.Style.STROKE);
-    mOverlayPaint.setStrokeWidth(6);
-  }
-
-  @UiThread
-  public void setOverlays(List<Overlay> overlays) {
-    mOverlays = overlays;
-    invalidate();
-  }
-
-  @Override
-  public void onDraw(Canvas canvas) {
-    super.onDraw(canvas);
-
-    if (!mOverlays.isEmpty()) {
-      // Draw border outside of the given overlays to be aligned with web trace highlights
-      for (Overlay overlay : mOverlays) {
-        mOverlayPaint.setColor(overlay.getColor());
-        canvas.drawRect(overlay.getPixelRect(), mOverlayPaint);
-      }
-    }
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/TraceUpdateOverlayManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/TraceUpdateOverlayManager.java
deleted file mode 100644
index 434be09..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/traceupdateoverlay/TraceUpdateOverlayManager.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.react.views.traceupdateoverlay;
-
-import android.graphics.RectF;
-import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
-import com.facebook.react.bridge.ReactNoCrashSoftException;
-import com.facebook.react.bridge.ReactSoftExceptionLogger;
-import com.facebook.react.bridge.ReadableArray;
-import com.facebook.react.module.annotations.ReactModule;
-import com.facebook.react.uimanager.SimpleViewManager;
-import com.facebook.react.uimanager.ThemedReactContext;
-import com.facebook.react.views.traceupdateoverlay.TraceUpdateOverlay.Overlay;
-import java.util.ArrayList;
-import java.util.List;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-@ReactModule(name = TraceUpdateOverlayManager.REACT_CLASS)
-public class TraceUpdateOverlayManager extends SimpleViewManager<TraceUpdateOverlay> {
-  public static final String REACT_CLASS = "TraceUpdateOverlay";
-
-  public TraceUpdateOverlayManager() {}
-
-  @Override
-  public void receiveCommand(
-      TraceUpdateOverlay view, String commandId, @Nullable ReadableArray args) {
-    switch (commandId) {
-      case "draw":
-        if (args == null) {
-          break;
-        }
-
-        String overlaysStr = args.getString(0);
-        if (overlaysStr == null) {
-          return;
-        }
-
-        try {
-          JSONArray overlaysArr = new JSONArray(overlaysStr);
-          List<Overlay> overlays = new ArrayList<>();
-          for (int i = 0; i < overlaysArr.length(); i++) {
-            JSONObject overlay = overlaysArr.getJSONObject(i);
-            JSONObject rectObj = overlay.getJSONObject("rect");
-            float left = (float) rectObj.getDouble("left");
-            float top = (float) rectObj.getDouble("top");
-            float right = (float) (left + rectObj.getDouble("width"));
-            float bottom = (float) (top + rectObj.getDouble("height"));
-            RectF rect = new RectF(left, top, right, bottom);
-            overlays.add(new Overlay(overlay.getInt("color"), rect));
-          }
-
-          view.setOverlays(overlays);
-        } catch (JSONException e) {
-          FLog.e(REACT_CLASS, "Failed to parse overlays: ", e);
-        }
-        break;
-
-      default:
-        ReactSoftExceptionLogger.logSoftException(
-            REACT_CLASS,
-            new ReactNoCrashSoftException(
-                "Received unexpected command in TraceUpdateOverlayManager"));
-    }
-  }
-
-  @Override
-  public TraceUpdateOverlay createViewInstance(ThemedReactContext context) {
-    return new TraceUpdateOverlay(context);
-  }
-
-  @Override
-  public String getName() {
-    return REACT_CLASS;
-  }
-}
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/unimplementedview/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/unimplementedview/BUCK
index c7a9106..5efd187 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/unimplementedview/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/unimplementedview/BUCK
@@ -8,15 +8,18 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "JAVA",
-    visibility = [
-        "PUBLIC",
-    ],
-    deps = [
+    provided_deps = [
         react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:appcompat"),
         react_native_dep("third-party/android/androidx:core"),
         react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
         react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+        react_native_dep("third-party/android/androidx:appcompat"),
+    ],
+    visibility = [
+        "PUBLIC",
+    ],
+    deps = [
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
         react_native_target("java/com/facebook/react/common:common"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/BUCK b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/BUCK
index e78142e..2db76a7 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/BUCK
@@ -11,17 +11,20 @@ rn_android_library(
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
     language = "KOTLIN",
+    provided_deps = [
+        react_native_dep("third-party/android/androidx:core"),
+        react_native_dep("third-party/android/androidx:fragment"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-ui"),
+        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+    ],
     pure_kotlin = False,
     visibility = [
         "PUBLIC",
     ],
     deps = [
         YOGA_TARGET,
-        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("third-party/android/androidx:annotation"),
-        react_native_dep("third-party/android/androidx:core"),
-        react_native_dep("third-party/android/androidx:fragment"),
-        react_native_dep("third-party/android/androidx:legacy-support-core-utils"),
+        react_native_dep("libraries/fbcore/src/main/java/com/facebook/common/logging:logging"),
         react_native_dep("third-party/java/infer-annotations:infer-annotations"),
         react_native_dep("third-party/java/jsr-305:jsr-305"),
         react_native_target("java/com/facebook/react/bridge:bridge"),
@@ -29,11 +32,11 @@ rn_android_library(
         react_native_target("java/com/facebook/react/common/mapbuffer:mapbuffer"),
         react_native_target("java/com/facebook/react/config:config"),
         react_native_target("java/com/facebook/react/module/annotations:annotations"),
-        react_native_target("java/com/facebook/react/modules/i18nmanager:i18nmanager"),
         react_native_target("java/com/facebook/react/touch:touch"),
+        react_native_target("java/com/facebook/react/views/common:common"),
         react_native_target("java/com/facebook/react/uimanager:uimanager"),
+        react_native_target("java/com/facebook/react/modules/i18nmanager:i18nmanager"),
         react_native_target("java/com/facebook/react/uimanager/annotations:annotations"),
-        react_native_target("java/com/facebook/react/views/common:common"),
         react_native_target("res:uimanager"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/CanvasUtil.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/CanvasUtil.java
index c844069..e8c5460 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/CanvasUtil.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/CanvasUtil.java
@@ -32,7 +32,11 @@ public class CanvasUtil {
    */
   @SuppressLint({"SoonBlockedPrivateApi", "PrivateApi"})
   public static void enableZ(Canvas canvas, boolean enable) {
-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
+    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+      return;
+    }
+
+    if (Build.VERSION.SDK_INT >= 29) {
       if (enable) {
         canvas.enableZ();
       } else {
@@ -75,7 +79,11 @@ public class CanvasUtil {
 
         mReorderBarrierMethod.setAccessible(true);
         mInorderBarrierMethod.setAccessible(true);
-      } catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException ignore) {
+      } catch (IllegalAccessException ignore) {
+        // Do nothing
+      } catch (InvocationTargetException ignore) {
+        // Do nothing
+      } catch (NoSuchMethodException ignore) {
         // Do nothing
       }
       mOrderMethodsFetched = true;
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactMapBufferPropSetter.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactMapBufferPropSetter.kt
index a7effcd..7218daf 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactMapBufferPropSetter.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactMapBufferPropSetter.kt
@@ -87,9 +87,6 @@ object ReactMapBufferPropSetter {
   private const val EDGE_START = 4
   private const val EDGE_END = 5
   private const val EDGE_ALL = 6
-  private const val EDGE_BLOCK = 7
-  private const val EDGE_BLOCK_END = 8
-  private const val EDGE_BLOCK_START = 9
 
   private const val CORNER_TOP_LEFT = 0
   private const val CORNER_TOP_RIGHT = 1
@@ -100,10 +97,6 @@ object ReactMapBufferPropSetter {
   private const val CORNER_BOTTOM_END = 6
   private const val CORNER_BOTTOM_START = 7
   private const val CORNER_ALL = 8
-  private const val CORNER_END_END = 9
-  private const val CORNER_END_START = 10
-  private const val CORNER_START_END = 11
-  private const val CORNER_START_START = 12
 
   private const val NATIVE_DRAWABLE_KIND = 0
   private const val NATIVE_DRAWABLE_ATTRIBUTE = 1
@@ -262,9 +255,11 @@ object ReactMapBufferPropSetter {
     for (entry in mapBuffer) {
       val map = JavaOnlyMap()
       val action = entry.mapBufferValue
-      map.putString("name", action.getString(ACCESSIBILITY_ACTION_NAME))
-      if (action.contains(ACCESSIBILITY_ACTION_LABEL)) {
-        map.putString("label", action.getString(ACCESSIBILITY_ACTION_LABEL))
+      if (action != null) {
+        map.putString("name", action.getString(ACCESSIBILITY_ACTION_NAME))
+        if (action.contains(ACCESSIBILITY_ACTION_LABEL)) {
+          map.putString("label", action.getString(ACCESSIBILITY_ACTION_LABEL))
+        }
       }
       actions.add(map)
     }
@@ -352,9 +347,6 @@ object ReactMapBufferPropSetter {
             EDGE_BOTTOM -> 4
             EDGE_START -> 5
             EDGE_END -> 6
-            EDGE_BLOCK -> 7
-            EDGE_BLOCK_END -> 8
-            EDGE_BLOCK_START -> 9
             else -> throw IllegalArgumentException("Unknown key for border color: $key")
           }
       val colorValue = entry.intValue
@@ -375,10 +367,6 @@ object ReactMapBufferPropSetter {
             CORNER_TOP_END -> 6
             CORNER_BOTTOM_START -> 7
             CORNER_BOTTOM_END -> 8
-            CORNER_END_END -> 9
-            CORNER_END_START -> 10
-            CORNER_START_END -> 11
-            CORNER_START_START -> 12
             else -> throw IllegalArgumentException("Unknown key for border style: $key")
           }
       val borderRadius = entry.doubleValue
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java
index 0912803..6a53ed8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java
@@ -27,7 +27,6 @@ import android.graphics.drawable.Drawable;
 import android.view.View;
 import androidx.annotation.Nullable;
 import com.facebook.react.common.annotations.VisibleForTesting;
-import com.facebook.react.config.ReactFeatureFlags;
 import com.facebook.react.modules.i18nmanager.I18nUtil;
 import com.facebook.react.uimanager.FloatUtil;
 import com.facebook.react.uimanager.Spacing;
@@ -87,7 +86,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
   private @Nullable BorderStyle mBorderStyle;
 
   private @Nullable Path mInnerClipPathForBorderRadius;
-  private @Nullable Path mBackgroundColorRenderPath;
   private @Nullable Path mOuterClipPathForBorderRadius;
   private @Nullable Path mPathForBorderRadiusOutline;
   private @Nullable Path mPathForBorder;
@@ -109,13 +107,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
   private int mColor = Color.TRANSPARENT;
   private int mAlpha = 255;
 
-  // There is a small gap between the edges of adjacent paths
-  // such as between the mBackgroundColorRenderPath and its border.
-  // The smallest amount (found to be 0.8f) is used to extend
-  // the paths, overlapping them and closing the visible gap.
-  private final float mGapBetweenPaths =
-      ReactFeatureFlags.enableCloseVisibleGapBetweenPaths ? 0.8f : 0.0f;
-
   private @Nullable float[] mBorderCornerRadii;
   private final Context mContext;
   private int mLayoutDirection;
@@ -128,11 +119,7 @@ public class ReactViewBackgroundDrawable extends Drawable {
     TOP_START,
     TOP_END,
     BOTTOM_START,
-    BOTTOM_END,
-    END_END,
-    END_START,
-    START_END,
-    START_START
+    BOTTOM_END
   }
 
   public ReactViewBackgroundDrawable(Context context) {
@@ -275,7 +262,7 @@ public class ReactViewBackgroundDrawable extends Drawable {
 
   public void setRadius(float radius, int position) {
     if (mBorderCornerRadii == null) {
-      mBorderCornerRadii = new float[12];
+      mBorderCornerRadii = new float[8];
       Arrays.fill(mBorderCornerRadii, YogaConstants.UNDEFINED);
     }
 
@@ -342,15 +329,11 @@ public class ReactViewBackgroundDrawable extends Drawable {
     updatePath();
     canvas.save();
 
-    // Clip outer border
-    canvas.clipPath(mOuterClipPathForBorderRadius, Region.Op.INTERSECT);
-
-    // Draws the View without its border first (with background color fill)
     int useColor = ColorUtil.multiplyColorAlpha(mColor, mAlpha);
     if (Color.alpha(useColor) != 0) { // color is not transparent
       mPaint.setColor(useColor);
       mPaint.setStyle(Paint.Style.FILL);
-      canvas.drawPath(mBackgroundColorRenderPath, mPaint);
+      canvas.drawPath(mInnerClipPathForBorderRadius, mPaint);
     }
 
     final RectF borderWidth = getDirectionAwareBorderInsets();
@@ -359,21 +342,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
     int colorRight = getBorderColor(Spacing.RIGHT);
     int colorBottom = getBorderColor(Spacing.BOTTOM);
 
-    int colorBlock = getBorderColor(Spacing.BLOCK);
-    int colorBlockStart = getBorderColor(Spacing.BLOCK_START);
-    int colorBlockEnd = getBorderColor(Spacing.BLOCK_END);
-
-    if (isBorderColorDefined(Spacing.BLOCK)) {
-      colorBottom = colorBlock;
-      colorTop = colorBlock;
-    }
-    if (isBorderColorDefined(Spacing.BLOCK_END)) {
-      colorBottom = colorBlockEnd;
-    }
-    if (isBorderColorDefined(Spacing.BLOCK_START)) {
-      colorTop = colorBlockStart;
-    }
-
     if (borderWidth.top > 0
         || borderWidth.bottom > 0
         || borderWidth.left > 0
@@ -401,7 +369,8 @@ public class ReactViewBackgroundDrawable extends Drawable {
       else {
         mPaint.setStyle(Paint.Style.FILL);
 
-        // Clip inner border
+        // Draw border
+        canvas.clipPath(mOuterClipPathForBorderRadius, Region.Op.INTERSECT);
         canvas.clipPath(mInnerClipPathForBorderRadius, Region.Op.DIFFERENCE);
 
         final boolean isRTL = getResolvedLayoutDirection() == View.LAYOUT_DIRECTION_RTL;
@@ -447,29 +416,27 @@ public class ReactViewBackgroundDrawable extends Drawable {
         final float top = mOuterClipTempRectForBorderRadius.top;
         final float bottom = mOuterClipTempRectForBorderRadius.bottom;
 
-        // mGapBetweenPaths is used to close the gap between the diagonal
-        // edges of the quadrilaterals on adjacent sides of the rectangle
         if (borderWidth.left > 0) {
           final float x1 = left;
-          final float y1 = top - mGapBetweenPaths;
+          final float y1 = top;
           final float x2 = mInnerTopLeftCorner.x;
-          final float y2 = mInnerTopLeftCorner.y - mGapBetweenPaths;
+          final float y2 = mInnerTopLeftCorner.y;
           final float x3 = mInnerBottomLeftCorner.x;
-          final float y3 = mInnerBottomLeftCorner.y + mGapBetweenPaths;
+          final float y3 = mInnerBottomLeftCorner.y;
           final float x4 = left;
-          final float y4 = bottom + mGapBetweenPaths;
+          final float y4 = bottom;
 
           drawQuadrilateral(canvas, colorLeft, x1, y1, x2, y2, x3, y3, x4, y4);
         }
 
         if (borderWidth.top > 0) {
-          final float x1 = left - mGapBetweenPaths;
+          final float x1 = left;
           final float y1 = top;
-          final float x2 = mInnerTopLeftCorner.x - mGapBetweenPaths;
+          final float x2 = mInnerTopLeftCorner.x;
           final float y2 = mInnerTopLeftCorner.y;
-          final float x3 = mInnerTopRightCorner.x + mGapBetweenPaths;
+          final float x3 = mInnerTopRightCorner.x;
           final float y3 = mInnerTopRightCorner.y;
-          final float x4 = right + mGapBetweenPaths;
+          final float x4 = right;
           final float y4 = top;
 
           drawQuadrilateral(canvas, colorTop, x1, y1, x2, y2, x3, y3, x4, y4);
@@ -477,25 +444,25 @@ public class ReactViewBackgroundDrawable extends Drawable {
 
         if (borderWidth.right > 0) {
           final float x1 = right;
-          final float y1 = top - mGapBetweenPaths;
+          final float y1 = top;
           final float x2 = mInnerTopRightCorner.x;
-          final float y2 = mInnerTopRightCorner.y - mGapBetweenPaths;
+          final float y2 = mInnerTopRightCorner.y;
           final float x3 = mInnerBottomRightCorner.x;
-          final float y3 = mInnerBottomRightCorner.y + mGapBetweenPaths;
+          final float y3 = mInnerBottomRightCorner.y;
           final float x4 = right;
-          final float y4 = bottom + mGapBetweenPaths;
+          final float y4 = bottom;
 
           drawQuadrilateral(canvas, colorRight, x1, y1, x2, y2, x3, y3, x4, y4);
         }
 
         if (borderWidth.bottom > 0) {
-          final float x1 = left - mGapBetweenPaths;
+          final float x1 = left;
           final float y1 = bottom;
-          final float x2 = mInnerBottomLeftCorner.x - mGapBetweenPaths;
+          final float x2 = mInnerBottomLeftCorner.x;
           final float y2 = mInnerBottomLeftCorner.y;
-          final float x3 = mInnerBottomRightCorner.x + mGapBetweenPaths;
+          final float x3 = mInnerBottomRightCorner.x;
           final float y3 = mInnerBottomRightCorner.y;
-          final float x4 = right + mGapBetweenPaths;
+          final float x4 = right;
           final float y4 = bottom;
 
           drawQuadrilateral(canvas, colorBottom, x1, y1, x2, y2, x3, y3, x4, y4);
@@ -517,10 +484,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
       mInnerClipPathForBorderRadius = new Path();
     }
 
-    if (mBackgroundColorRenderPath == null) {
-      mBackgroundColorRenderPath = new Path();
-    }
-
     if (mOuterClipPathForBorderRadius == null) {
       mOuterClipPathForBorderRadius = new Path();
     }
@@ -550,7 +513,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
     }
 
     mInnerClipPathForBorderRadius.reset();
-    mBackgroundColorRenderPath.reset();
     mOuterClipPathForBorderRadius.reset();
     mPathForBorderRadiusOutline.reset();
     mCenterDrawPath.reset();
@@ -568,21 +530,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
     int colorBottom = getBorderColor(Spacing.BOTTOM);
     int borderColor = getBorderColor(Spacing.ALL);
 
-    int colorBlock = getBorderColor(Spacing.BLOCK);
-    int colorBlockStart = getBorderColor(Spacing.BLOCK_START);
-    int colorBlockEnd = getBorderColor(Spacing.BLOCK_END);
-
-    if (isBorderColorDefined(Spacing.BLOCK)) {
-      colorBottom = colorBlock;
-      colorTop = colorBlock;
-    }
-    if (isBorderColorDefined(Spacing.BLOCK_END)) {
-      colorBottom = colorBlockEnd;
-    }
-    if (isBorderColorDefined(Spacing.BLOCK_START)) {
-      colorTop = colorBlockStart;
-    }
-
     // Clip border ONLY if its color is non transparent
     if (Color.alpha(colorLeft) != 0
         && Color.alpha(colorTop) != 0
@@ -615,11 +562,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
     float bottomStartRadius = getBorderRadius(BorderRadiusLocation.BOTTOM_START);
     float bottomEndRadius = getBorderRadius(BorderRadiusLocation.BOTTOM_END);
 
-    float endEndRadius = getBorderRadius(BorderRadiusLocation.END_END);
-    float endStartRadius = getBorderRadius(BorderRadiusLocation.END_START);
-    float startEndRadius = getBorderRadius(BorderRadiusLocation.START_END);
-    float startStartRadius = getBorderRadius(BorderRadiusLocation.START_START);
-
     if (I18nUtil.getInstance().doLeftAndRightSwapInRTL(mContext)) {
       if (YogaConstants.isUndefined(topStartRadius)) {
         topStartRadius = topLeftRadius;
@@ -637,44 +579,20 @@ public class ReactViewBackgroundDrawable extends Drawable {
         bottomEndRadius = bottomRightRadius;
       }
 
-      final float logicalTopStartRadius =
-          YogaConstants.isUndefined(topStartRadius) ? startStartRadius : topStartRadius;
-      final float logicalTopEndRadius =
-          YogaConstants.isUndefined(topEndRadius) ? startEndRadius : topEndRadius;
-      final float logicalBottomStartRadius =
-          YogaConstants.isUndefined(bottomStartRadius) ? endStartRadius : bottomStartRadius;
-      final float logicalBottomEndRadius =
-          YogaConstants.isUndefined(bottomEndRadius) ? endEndRadius : bottomEndRadius;
-
-      final float directionAwareTopLeftRadius = isRTL ? logicalTopEndRadius : logicalTopStartRadius;
-      final float directionAwareTopRightRadius =
-          isRTL ? logicalTopStartRadius : logicalTopEndRadius;
-      final float directionAwareBottomLeftRadius =
-          isRTL ? logicalBottomEndRadius : logicalBottomStartRadius;
-      final float directionAwareBottomRightRadius =
-          isRTL ? logicalBottomStartRadius : logicalBottomEndRadius;
+      final float directionAwareTopLeftRadius = isRTL ? topEndRadius : topStartRadius;
+      final float directionAwareTopRightRadius = isRTL ? topStartRadius : topEndRadius;
+      final float directionAwareBottomLeftRadius = isRTL ? bottomEndRadius : bottomStartRadius;
+      final float directionAwareBottomRightRadius = isRTL ? bottomStartRadius : bottomEndRadius;
 
       topLeftRadius = directionAwareTopLeftRadius;
       topRightRadius = directionAwareTopRightRadius;
       bottomLeftRadius = directionAwareBottomLeftRadius;
       bottomRightRadius = directionAwareBottomRightRadius;
     } else {
-      final float logicalTopStartRadius =
-          YogaConstants.isUndefined(topStartRadius) ? startStartRadius : topStartRadius;
-      final float logicalTopEndRadius =
-          YogaConstants.isUndefined(topEndRadius) ? startEndRadius : topEndRadius;
-      final float logicalBottomStartRadius =
-          YogaConstants.isUndefined(bottomStartRadius) ? endStartRadius : bottomStartRadius;
-      final float logicalBottomEndRadius =
-          YogaConstants.isUndefined(bottomEndRadius) ? endEndRadius : bottomEndRadius;
-
-      final float directionAwareTopLeftRadius = isRTL ? logicalTopEndRadius : logicalTopStartRadius;
-      final float directionAwareTopRightRadius =
-          isRTL ? logicalTopStartRadius : logicalTopEndRadius;
-      final float directionAwareBottomLeftRadius =
-          isRTL ? logicalBottomEndRadius : logicalBottomStartRadius;
-      final float directionAwareBottomRightRadius =
-          isRTL ? logicalBottomStartRadius : logicalBottomEndRadius;
+      final float directionAwareTopLeftRadius = isRTL ? topEndRadius : topStartRadius;
+      final float directionAwareTopRightRadius = isRTL ? topStartRadius : topEndRadius;
+      final float directionAwareBottomLeftRadius = isRTL ? bottomEndRadius : bottomStartRadius;
+      final float directionAwareBottomRightRadius = isRTL ? bottomStartRadius : bottomEndRadius;
 
       if (!YogaConstants.isUndefined(directionAwareTopLeftRadius)) {
         topLeftRadius = directionAwareTopLeftRadius;
@@ -716,27 +634,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
         },
         Path.Direction.CW);
 
-    // There is a small gap between mBackgroundColorRenderPath and its
-    // border. mGapBetweenPaths is used to slightly enlarge the rectangle
-    // (mInnerClipTempRectForBorderRadius), ensuring the border can be
-    // drawn on top without the gap.
-    mBackgroundColorRenderPath.addRoundRect(
-        mInnerClipTempRectForBorderRadius.left - mGapBetweenPaths,
-        mInnerClipTempRectForBorderRadius.top - mGapBetweenPaths,
-        mInnerClipTempRectForBorderRadius.right + mGapBetweenPaths,
-        mInnerClipTempRectForBorderRadius.bottom + mGapBetweenPaths,
-        new float[] {
-          innerTopLeftRadiusX,
-          innerTopLeftRadiusY,
-          innerTopRightRadiusX,
-          innerTopRightRadiusY,
-          innerBottomRightRadiusX,
-          innerBottomRightRadiusY,
-          innerBottomLeftRadiusX,
-          innerBottomLeftRadiusY,
-        },
-        Path.Direction.CW);
-
     mOuterClipPathForBorderRadius.addRoundRect(
         mOuterClipTempRectForBorderRadius,
         new float[] {
@@ -1158,21 +1055,6 @@ public class ReactViewBackgroundDrawable extends Drawable {
       int colorRight = getBorderColor(Spacing.RIGHT);
       int colorBottom = getBorderColor(Spacing.BOTTOM);
 
-      int colorBlock = getBorderColor(Spacing.BLOCK);
-      int colorBlockStart = getBorderColor(Spacing.BLOCK_START);
-      int colorBlockEnd = getBorderColor(Spacing.BLOCK_END);
-
-      if (isBorderColorDefined(Spacing.BLOCK)) {
-        colorBottom = colorBlock;
-        colorTop = colorBlock;
-      }
-      if (isBorderColorDefined(Spacing.BLOCK_END)) {
-        colorBottom = colorBlockEnd;
-      }
-      if (isBorderColorDefined(Spacing.BLOCK_START)) {
-        colorTop = colorBlockStart;
-      }
-
       final boolean isRTL = getResolvedLayoutDirection() == View.LAYOUT_DIRECTION_RTL;
       int colorStart = getBorderColor(Spacing.START);
       int colorEnd = getBorderColor(Spacing.END);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManager.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManager.java
index 4b3d624..7765a3a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManager.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManager.java
@@ -13,14 +13,12 @@ import android.os.Build;
 import android.view.View;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import com.facebook.common.logging.FLog;
 import com.facebook.react.bridge.Dynamic;
 import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
 import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.ReadableArray;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.common.MapBuilder;
-import com.facebook.react.common.ReactConstants;
 import com.facebook.react.common.annotations.VisibleForTesting;
 import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.uimanager.PixelUtil;
@@ -49,9 +47,6 @@ public class ReactViewManager extends ReactClippingViewManager<ReactViewGroup> {
     Spacing.BOTTOM,
     Spacing.START,
     Spacing.END,
-    Spacing.BLOCK,
-    Spacing.BLOCK_END,
-    Spacing.BLOCK_START
   };
   private static final int CMD_HOTSPOT_UPDATE = 1;
   private static final int CMD_SET_PRESSED = 2;
@@ -124,10 +119,6 @@ public class ReactViewManager extends ReactClippingViewManager<ReactViewGroup> {
         ViewProps.BORDER_TOP_END_RADIUS,
         ViewProps.BORDER_BOTTOM_START_RADIUS,
         ViewProps.BORDER_BOTTOM_END_RADIUS,
-        ViewProps.BORDER_END_END_RADIUS,
-        ViewProps.BORDER_END_START_RADIUS,
-        ViewProps.BORDER_START_END_RADIUS,
-        ViewProps.BORDER_START_START_RADIUS,
       },
       defaultFloat = YogaConstants.UNDEFINED)
   public void setBorderRadius(ReactViewGroup view, int index, float borderRadius) {
@@ -154,6 +145,9 @@ public class ReactViewManager extends ReactClippingViewManager<ReactViewGroup> {
   @ReactProp(name = "hitSlop")
   public void setHitSlop(final ReactViewGroup view, Dynamic hitSlop) {
     switch (hitSlop.getType()) {
+      case Null:
+        view.setHitSlopRect(null);
+        break;
       case Map:
         ReadableMap hitSlopMap = hitSlop.asMap();
         view.setHitSlopRect(
@@ -176,11 +170,8 @@ public class ReactViewManager extends ReactClippingViewManager<ReactViewGroup> {
         view.setHitSlopRect(new Rect(hitSlopValue, hitSlopValue, hitSlopValue, hitSlopValue));
         break;
       default:
-        FLog.w(ReactConstants.TAG, "Invalid type for 'hitSlop' value " + hitSlop.getType());
-        /* falls through */
-      case Null:
-        view.setHitSlopRect(null);
-        break;
+        throw new JSApplicationIllegalArgumentException(
+            "Invalid type for 'hitSlop' value " + hitSlop.getType());
     }
   }
 
@@ -243,10 +234,7 @@ public class ReactViewManager extends ReactClippingViewManager<ReactViewGroup> {
         ViewProps.BORDER_TOP_COLOR,
         ViewProps.BORDER_BOTTOM_COLOR,
         ViewProps.BORDER_START_COLOR,
-        ViewProps.BORDER_END_COLOR,
-        ViewProps.BORDER_BLOCK_COLOR,
-        ViewProps.BORDER_BLOCK_END_COLOR,
-        ViewProps.BORDER_BLOCK_START_COLOR
+        ViewProps.BORDER_END_COLOR
       },
       customType = "Color")
   public void setBorderColor(ReactViewGroup view, int index, Integer color) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManagerWrapper.kt b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManagerWrapper.kt
index 0a34940..ac9327e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManagerWrapper.kt
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewManagerWrapper.kt
@@ -10,10 +10,10 @@ package com.facebook.react.views.view
 import android.view.View
 import com.facebook.react.bridge.ReadableArray
 import com.facebook.react.touch.JSResponderHandler
-import com.facebook.react.uimanager.IViewGroupManager
 import com.facebook.react.uimanager.ReactStylesDiffMap
 import com.facebook.react.uimanager.StateWrapper
 import com.facebook.react.uimanager.ThemedReactContext
+import com.facebook.react.uimanager.ViewGroupManager
 import com.facebook.react.uimanager.ViewManager
 
 interface ReactViewManagerWrapper {
@@ -41,7 +41,7 @@ interface ReactViewManagerWrapper {
 
   fun getName(): String
 
-  val viewGroupManager: IViewGroupManager<*>
+  val viewGroupManager: ViewGroupManager<*>
 
   class DefaultViewManager(private val viewManager: ViewManager<View, *>) :
       ReactViewManagerWrapper {
@@ -64,7 +64,7 @@ interface ReactViewManagerWrapper {
     }
 
     override fun receiveCommand(root: View, commandId: Int, args: ReadableArray?) {
-      @Suppress("DEPRECATION") viewManager.receiveCommand(root, commandId, args)
+      viewManager.receiveCommand(root, commandId, args)
     }
 
     override fun setPadding(view: View, left: Int, top: Int, right: Int, bottom: Int) {
@@ -84,7 +84,7 @@ interface ReactViewManagerWrapper {
 
     override fun getName(): String = viewManager.name
 
-    override val viewGroupManager: IViewGroupManager<*>
-      get() = viewManager as IViewGroupManager<*>
+    override val viewGroupManager: ViewGroupManager<*>
+      get() = viewManager as ViewGroupManager<*>
   }
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfig.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfig.java
index ec96a96..a91e515 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfig.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfig.java
@@ -25,6 +25,14 @@ public abstract class YogaConfig {
    */
   public abstract void setUseLegacyStretchBehaviour(boolean useLegacyStretchBehaviour);
 
+  /**
+   * If this flag is set then yoga would diff the layout without legacy flag and would set a bool in
+   * YogaNode(mDoesLegacyStretchFlagAffectsLayout) with true if the layouts were different and false
+   * if not
+   */
+  public abstract void setShouldDiffLayoutWithoutLegacyStretchBehaviour(
+      boolean shouldDiffLayoutWithoutLegacyStretchBehaviour);
+
   public abstract void setLogger(YogaLogger logger);
 
   public abstract YogaLogger getLogger();
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfigJNIBase.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfigJNIBase.java
index 62a740e..b5820d8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfigJNIBase.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaConfigJNIBase.java
@@ -52,6 +52,17 @@ public abstract class YogaConfigJNIBase extends YogaConfig {
     YogaNative.jni_YGConfigSetUseLegacyStretchBehaviourJNI(mNativePointer, useLegacyStretchBehaviour);
   }
 
+  /**
+   * If this flag is set then yoga would diff the layout without legacy flag and would set a bool in
+   * YogaNode(mDoesLegacyStretchFlagAffectsLayout) with true if the layouts were different and false
+   * if not
+   */
+  public void setShouldDiffLayoutWithoutLegacyStretchBehaviour(
+      boolean shouldDiffLayoutWithoutLegacyStretchBehaviour) {
+      YogaNative.jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(
+          mNativePointer, shouldDiffLayoutWithoutLegacyStretchBehaviour);
+  }
+
   public void setLogger(YogaLogger logger) {
     mLogger = logger;
     YogaNative.jni_YGConfigSetLoggerJNI(mNativePointer, logger);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaExperimentalFeature.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaExperimentalFeature.java
index 3532e45..3fabbb9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaExperimentalFeature.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaExperimentalFeature.java
@@ -10,9 +10,7 @@
 package com.facebook.yoga;
 
 public enum YogaExperimentalFeature {
-  WEB_FLEX_BASIS(0),
-  ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE(1),
-  FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN(2);
+  WEB_FLEX_BASIS(0);
 
   private final int mIntValue;
 
@@ -27,8 +25,6 @@ public enum YogaExperimentalFeature {
   public static YogaExperimentalFeature fromInt(int value) {
     switch (value) {
       case 0: return WEB_FLEX_BASIS;
-      case 1: return ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE;
-      case 2: return FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN;
       default: throw new IllegalArgumentException("Unknown enum value: " + value);
     }
   }
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogLevel.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogLevel.java
index 761f302..8507670 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogLevel.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogLevel.java
@@ -9,7 +9,7 @@
 
 package com.facebook.yoga;
 
-import com.facebook.yoga.annotations.DoNotStrip;
+import com.facebook.proguard.annotations.DoNotStrip;
 
 @DoNotStrip
 public enum YogaLogLevel {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogger.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogger.java
index f40292d..9d439ad 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogger.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaLogger.java
@@ -7,7 +7,7 @@
 
 package com.facebook.yoga;
 
-import com.facebook.yoga.annotations.DoNotStrip;
+import com.facebook.proguard.annotations.DoNotStrip;
 
 /**
  * Interface for receiving logs from native layer. Use by setting YogaNode.setLogger(myLogger);
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNative.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNative.java
index 202e4fe..f6c53c3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNative.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNative.java
@@ -7,7 +7,7 @@
 
 package com.facebook.yoga;
 
-import com.facebook.yoga.annotations.DoNotStrip;
+import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.soloader.SoLoader;
 
 @DoNotStrip
@@ -25,6 +25,7 @@ public class YogaNative {
   static native void jni_YGConfigSetPrintTreeFlagJNI(long nativePointer, boolean enable);
   static native void jni_YGConfigSetPointScaleFactorJNI(long nativePointer, float pixelsInPoint);
   static native void jni_YGConfigSetUseLegacyStretchBehaviourJNI(long nativePointer, boolean useLegacyStretchBehaviour);
+  static native void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(long nativePointer, boolean shouldDiffLayoutWithoutLegacyStretchBehaviour);
   static native void jni_YGConfigSetLoggerJNI(long nativePointer, YogaLogger logger);
 
   // YGNode related
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNodeJNIBase.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNodeJNIBase.java
index ef432cf..85aebb3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNodeJNIBase.java
+++ b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaNodeJNIBase.java
@@ -7,7 +7,7 @@
 
 package com.facebook.yoga;
 
-import com.facebook.yoga.annotations.DoNotStrip;
+import com.facebook.proguard.annotations.DoNotStrip;
 import java.util.ArrayList;
 import java.util.List;
 import javax.annotation.Nullable;
@@ -19,6 +19,7 @@ public abstract class YogaNodeJNIBase extends YogaNode implements Cloneable {
   private static final byte MARGIN = 1;
   private static final byte PADDING = 2;
   private static final byte BORDER = 4;
+  private static final byte DOES_LEGACY_STRETCH_BEHAVIOUR = 8;
   private static final byte HAS_NEW_LAYOUT = 16;
 
   private static final byte LAYOUT_EDGE_SET_FLAG_INDEX = 0;
@@ -605,6 +606,12 @@ public abstract class YogaNodeJNIBase extends YogaNode implements Cloneable {
     return arr != null ? arr[LAYOUT_HEIGHT_INDEX] : 0;
   }
 
+  public boolean getDoesLegacyStretchFlagAffectsLayout() {
+    return arr != null
+        && (((int) arr[LAYOUT_EDGE_SET_FLAG_INDEX] & DOES_LEGACY_STRETCH_BEHAVIOUR)
+            == DOES_LEGACY_STRETCH_BEHAVIOUR);
+  }
+
   @Override
   public float getLayoutMargin(YogaEdge edge) {
     if (arr != null && ((int) arr[LAYOUT_EDGE_SET_FLAG_INDEX] & MARGIN) == MARGIN) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/annotations/DoNotStrip.java b/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/annotations/DoNotStrip.java
deleted file mode 100644
index 574d356..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/java/com/facebook/yoga/annotations/DoNotStrip.java
+++ /dev/null
@@ -1,18 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-package com.facebook.yoga.annotations;
-
-import java.lang.annotation.ElementType;
-import java.lang.annotation.Retention;
-import java.lang.annotation.Target;
-
-import static java.lang.annotation.RetentionPolicy.CLASS;
-
-@Target({ ElementType.TYPE, ElementType.FIELD, ElementType.METHOD, ElementType.CONSTRUCTOR })
-@Retention(CLASS)
-public @interface DoNotStrip { }
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/CMakeLists.txt b/node_modules/react-native/ReactAndroid/src/main/jni/CMakeLists.txt
index 78f2b94..c7ee615 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/CMakeLists.txt
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/CMakeLists.txt
@@ -17,10 +17,7 @@ endif(CCACHE_FOUND)
 
 # Make sure every shared lib includes a .note.gnu.build-id header
 add_link_options(-Wl,--build-id)
-add_compile_options(-Wall -Werror -std=c++17)
-
-# This exposes the check_for_circular_dependencies macro to all the submodules
-include(CircularDepsValidator.cmake)
+add_compile_options(-Wall -Werror -std=c++1y)
 
 function(add_react_android_subdir relative_path)
   add_subdirectory(${REACT_ANDROID_DIR}/${relative_path} ReactAndroid/${relative_path})
@@ -78,7 +75,6 @@ add_react_common_subdir(react/renderer/telemetry)
 add_react_common_subdir(react/renderer/templateprocessor)
 add_react_common_subdir(react/renderer/uimanager)
 add_react_common_subdir(react/renderer/core)
-add_react_common_subdir(react/renderer/element)
 add_react_common_subdir(react/renderer/graphics)
 add_react_common_subdir(react/renderer/debug)
 add_react_common_subdir(react/renderer/imagemanager)
@@ -86,9 +82,9 @@ add_react_common_subdir(react/renderer/components/view)
 add_react_common_subdir(react/renderer/components/switch)
 add_react_common_subdir(react/renderer/components/textinput)
 add_react_common_subdir(react/renderer/components/progressbar)
+add_react_common_subdir(react/renderer/components/slider)
 add_react_common_subdir(react/renderer/components/root)
 add_react_common_subdir(react/renderer/components/image)
-add_react_common_subdir(react/renderer/components/legacyviewmanagerinterop)
 add_react_common_subdir(react/renderer/componentregistry/native)
 add_react_common_subdir(react/renderer/components/text)
 add_react_common_subdir(react/renderer/components/unimplementedview)
@@ -106,6 +102,7 @@ add_react_build_subdir(generated/source/codegen/jni)
 add_react_android_subdir(src/main/jni/first-party/fb)
 add_react_android_subdir(src/main/jni/first-party/fbgloginit)
 add_react_android_subdir(src/main/jni/first-party/yogajni)
+add_react_android_subdir(src/main/jni/react/cxxcomponents)
 add_react_android_subdir(src/main/jni/react/jni)
 add_react_android_subdir(src/main/jni/react/reactperflogger)
 add_react_android_subdir(src/main/jni/react/jscexecutor)
@@ -117,108 +114,3 @@ add_react_android_subdir(src/main/jni/react/fabric)
 add_react_android_subdir(src/main/jni/react/newarchdefaults)
 add_react_android_subdir(src/main/jni/react/hermes/reactexecutor)
 add_react_android_subdir(src/main/jni/react/hermes/instrumentation/)
-
-# GTest setup
-set(GOOGLETEST_ROOT ${ANDROID_NDK}/sources/third_party/googletest)
-add_library(gtest STATIC ${GOOGLETEST_ROOT}/src/gtest_main.cc ${GOOGLETEST_ROOT}/src/gtest-all.cc)
-target_include_directories(gtest PRIVATE ${GOOGLETEST_ROOT})
-target_include_directories(gtest PUBLIC ${GOOGLETEST_ROOT}/include)
-
-# GTest dependencies
-add_executable(reactnative_unittest
-  ${REACT_COMMON_DIR}/cxxreact/tests/jsarg_helpers.cpp
-  ${REACT_COMMON_DIR}/cxxreact/tests/jsbigstring.cpp
-  ${REACT_COMMON_DIR}/cxxreact/tests/methodcall.cpp
-  ${REACT_COMMON_DIR}/cxxreact/tests/RecoverableErrorTest.cpp
-  ${REACT_COMMON_DIR}/hermes/inspector/chrome/tests/MessageTests.cpp
-  ${REACT_COMMON_DIR}/hermes/inspector/chrome/tests/RemoteObjectsTableTest.cpp
-  ${REACT_COMMON_DIR}/react/bridging/tests/BridgingTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/attributedstring/tests/AttributedStringBoxTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/attributedstring/tests/AttributedStringTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/attributedstring/tests/ParagraphAttributesTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/attributedstring/tests/TextAttributesTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/image/tests/ImageTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/root/tests/RootShadowNodeTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/scrollview/tests/ScrollViewTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/text/tests/ParagraphLocalDataTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/text/tests/TextTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/view/tests/LayoutTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/components/view/tests/ViewTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/DynamicPropsUtilitiesTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/EventQueueProcessorTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/FindNodeAtPointTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/LayoutableShadowNodeTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/PrimitivesTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/RawPropsTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/ShadowNodeFamilyTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/core/tests/traitCastTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/debug/tests/DebugStringConvertibleTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/element/tests/ElementTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/graphics/tests/GraphicsTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/graphics/tests/TransformTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/imagemanager/tests/ImageManagerTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/mapbuffer/tests/MapBufferTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/mounting/tests/StackingContextTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/mounting/tests/StateReconciliationTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/runtimescheduler/tests/RuntimeSchedulerTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/runtimescheduler/tests/SchedulerPriorityTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/telemetry/tests/TransactionTelemetryTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/templateprocessor/tests/UITemplateProcessorTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/textlayoutmanager/tests/TextLayoutManagerTest.cpp
-  ${REACT_COMMON_DIR}/react/renderer/uimanager/tests/FabricUIManagerTest.cpp
-  
-  ########## (COMPILE BUT FAIL ON ASSERTS) ###########
-  # ${REACT_COMMON_DIR}/react/renderer/animations/tests/LayoutAnimationTest.cpp
-  # ${REACT_COMMON_DIR}/react/renderer/mounting/tests/MountingTest.cpp
-  # ${REACT_COMMON_DIR}/react/renderer/mounting/tests/ShadowTreeLifeCycleTest.cpp
-  
-  ########## (COMPILE BUT FAIL WITH RUNTIME EXCEPTIONS) ###########
-  # ${REACT_COMMON_DIR}/hermes/inspector/chrome/tests/ConnectionDemuxTests.cpp
-  # ${REACT_COMMON_DIR}/hermes/inspector/detail/tests/SerialExecutorTests.cpp
-  # ${REACT_COMMON_DIR}/hermes/inspector/tests/InspectorTests.cpp
-  
-  ########## (DO NOT COMPILE) ###########
-  # ${REACT_COMMON_DIR}/react/renderer/core/tests/ShadowNodeTest.cpp
-  # ${REACT_COMMON_DIR}/react/renderer/core/tests/ConcreteShadowNodeTest.cpp
-  # ${REACT_COMMON_DIR}/react/renderer/core/tests/ComponentDescriptorTest.cpp
-  # ${REACT_COMMON_DIR}/hermes/inspector/chrome/tests/ConnectionTests.cpp
-  )
-  target_compile_options(reactnative_unittest
-    PRIVATE
-    -Wall
-    -Werror
-    -fexceptions
-    -frtti
-    -std=c++17
-    -DHERMES_ENABLE_DEBUGGER)
-
-  target_link_libraries(reactnative_unittest
-  folly_runtime
-  folly_futures
-  glog  
-  glog_init
-  gtest
-  hermes-engine::libhermes
-  hermes_inspector
-  jsi
-  react_codegen_rncore
-  react_debug
-  react_render_animations
-  react_render_attributedstring
-  react_render_core
-  react_render_debug
-  react_render_element
-  react_render_graphics
-  react_render_mapbuffer
-  react_render_mounting
-  react_render_templateprocessor
-  react_render_textlayoutmanager
-  react_render_uimanager
-  react_utils
-  reactnative
-  rrc_modal
-  rrc_scrollview
-  rrc_text
-  rrc_view
-  yoga
-)
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/CircularDepsValidator.cmake b/node_modules/react-native/ReactAndroid/src/main/jni/CircularDepsValidator.cmake
deleted file mode 100644
index 44f8fb9..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/jni/CircularDepsValidator.cmake
+++ /dev/null
@@ -1,32 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-cmake_minimum_required(VERSION 3.13)
-set(CMAKE_VERBOSE_MAKEFILE on)
-
-# Util function that help us verify that you're not including a header file
-# which has an invalid import path. Most of the time this is causing a C++ circular dependency.
-function(check_for_circular_dependencies allowed_imports_paths)
-  file(GLOB headers CONFIGURE_DEPENDS *.h)
-  foreach(file ${headers})
-    file(STRINGS ${file} header_file)
-    while(header_file)
-      list(POP_FRONT header_file line)
-      if (line MATCHES "^#include <react")
-        set(matched_import false)
-        foreach(allowed_import ${allowed_imports_paths})
-          if (line MATCHES "^#include <${allowed_import}")
-            set(matched_import true)
-            continue()
-          endif()
-        endforeach()
-        if (NOT matched_import)
-          message(FATAL_ERROR "!!!!!\nDiscovered an invalid include on file\n${file}\nfor include\n${line}\n")
-          break()
-        endif()
-      endif()
-    endwhile()
-  endforeach()
-endfunction()
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/.clang-tidy b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/.clang-tidy
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/fb/CMakeLists.txt b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/fb/CMakeLists.txt
index c3e3ece..7319e83 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/fb/CMakeLists.txt
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/fb/CMakeLists.txt
@@ -21,9 +21,6 @@ add_compile_options(
         -Wno-error=unused-but-set-variable
         -DHAVE_POSIX_CLOCKS
 )
-if(${CMAKE_BUILD_TYPE} MATCHES Release)
-        add_compile_options(-DNDEBUG)
-endif()
 
 # Yogacore needs to link towards android and log from the NDK libs
 target_link_libraries(fb dl android log)
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/BUCK b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/BUCK
index 3e25340..fa379d2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/BUCK
@@ -16,7 +16,7 @@ oss_cxx_library(
     soname = "libyoga.$(ext)",
     visibility = ["PUBLIC"],
     deps = [
-        "//packages/react-native/ReactCommon/yoga:yoga",
+        "//ReactCommon/yoga:yoga",
         FBJNI_TARGET,
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNI.h b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNI.h
index 69f1139..8001681 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNI.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNI.h
@@ -17,6 +17,7 @@ const short int LAYOUT_BORDER_START_INDEX = 14;
 
 namespace {
 
+const int DOES_LEGACY_STRETCH_BEHAVIOUR = 8;
 const int HAS_NEW_LAYOUT = 16;
 
 union YGNodeContext {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNIVanilla.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNIVanilla.cpp
index 8860832..e531681 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNIVanilla.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJNIVanilla.cpp
@@ -57,6 +57,15 @@ static void jni_YGConfigSetExperimentalFeatureEnabledJNI(
       config, static_cast<YGExperimentalFeature>(feature), enabled);
 }
 
+static void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI(
+    JNIEnv* env,
+    jobject obj,
+    jlong nativePointer,
+    jboolean enabled) {
+  const YGConfigRef config = _jlong2YGConfigRef(nativePointer);
+  YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour(config, enabled);
+}
+
 static void jni_YGConfigSetUseWebDefaultsJNI(
     JNIEnv* env,
     jobject obj,
@@ -285,6 +294,9 @@ static void YGTransferLayoutOutputsRecursive(
 
   int fieldFlags = edgesSet.get();
   fieldFlags |= HAS_NEW_LAYOUT;
+  if (YGNodeLayoutGetDidLegacyStretchFlagAffectLayout(root)) {
+    fieldFlags |= DOES_LEGACY_STRETCH_BEHAVIOUR;
+  }
 
   const int arrSize = 6 + (marginFieldSet ? 4 : 0) + (paddingFieldSet ? 4 : 0) +
       (borderFieldSet ? 4 : 0);
@@ -764,6 +776,9 @@ static JNINativeMethod methods[] = {
     {"jni_YGConfigSetUseLegacyStretchBehaviourJNI",
      "(JZ)V",
      (void*) jni_YGConfigSetUseLegacyStretchBehaviourJNI},
+    {"jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI",
+     "(JZ)V",
+     (void*) jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviourJNI},
     {"jni_YGConfigSetLoggerJNI",
      "(JLcom/facebook/yoga/YogaLogger;)V",
      (void*) jni_YGConfigSetLoggerJNI},
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJTypesVanilla.h b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJTypesVanilla.h
index 1b4d62d..5cf4068 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJTypesVanilla.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/first-party/yogajni/jni/YGJTypesVanilla.h
@@ -11,6 +11,9 @@
 #include <map>
 #include "common.h"
 
+using namespace facebook::yoga::vanillajni;
+using namespace std;
+
 class PtrJNodeMapVanilla {
   std::map<YGNodeRef, size_t> ptrsToIdxs_;
   jobjectArray javaNodes_;
@@ -19,7 +22,6 @@ public:
   PtrJNodeMapVanilla() : ptrsToIdxs_{}, javaNodes_{} {}
   PtrJNodeMapVanilla(jlongArray javaNativePointers, jobjectArray javaNodes)
       : javaNodes_{javaNodes} {
-    using namespace facebook::yoga::vanillajni;
 
     JNIEnv* env = getCurrentEnv();
     size_t nativePointersSize = env->GetArrayLength(javaNativePointers);
@@ -32,9 +34,7 @@ public:
     }
   }
 
-  facebook::yoga::vanillajni::ScopedLocalRef<jobject> ref(YGNodeRef node) {
-    using namespace facebook::yoga::vanillajni;
-
+  ScopedLocalRef<jobject> ref(YGNodeRef node) {
     JNIEnv* env = getCurrentEnv();
     auto idx = ptrsToIdxs_.find(node);
     if (idx == ptrsToIdxs_.end()) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/BUCK b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/BUCK
new file mode 100644
index 0000000..3c51f2f
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/BUCK
@@ -0,0 +1,44 @@
+load(
+    "//tools/build_defs/oss:rn_defs.bzl",
+    "ANDROID",
+    "APPLE",
+    "CXX",
+    "react_native_xplat_target",
+    "rn_xplat_cxx_library",
+    "subdir_glob",
+)
+
+rn_xplat_cxx_library(
+    name = "components",
+    srcs = glob(
+        ["**/*.cpp"],
+    ),
+    headers = glob(
+        ["**/*.h"],
+    ),
+    header_namespace = "",
+    exported_headers = subdir_glob(
+        [
+            ("", "**/*.h"),
+        ],
+        prefix = "react/cxxcomponents",
+    ),
+    force_static = True,
+    labels = [
+        "pfh:ReactNative_CommonInfrastructurePlaceholder",
+    ],
+    platforms = (APPLE, ANDROID, CXX),
+    preprocessor_flags = [
+        "-DLOG_TAG=\"ReactNative\"",
+        "-DWITH_FBSYSTRACE=1",
+    ],
+    soname = "libcxxcomponents.$(ext)",
+    visibility = ["PUBLIC"],
+    deps = [
+        "//third-party/glog:glog",
+        "//xplat/fbsystrace:fbsystrace",
+        "//xplat/folly:memory",
+        "//xplat/folly:molly",
+        react_native_xplat_target("react/renderer/core:core"),
+    ],
+)
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/CMakeLists.txt b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/CMakeLists.txt
new file mode 100644
index 0000000..b60af53
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/CMakeLists.txt
@@ -0,0 +1,22 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+add_compile_options(
+        -fexceptions
+        -frtti
+        -std=c++17
+        -Wall
+        -Wpedantic
+        -Wno-gnu-zero-variadic-macro-arguments)
+
+file(GLOB_RECURSE cxxcomponents_SRC CONFIGURE_DEPENDS *.cpp *.h)
+
+add_library(cxxcomponents SHARED ${cxxcomponents_SRC})
+
+target_include_directories(cxxcomponents PUBLIC .)
+set_target_properties(cxxcomponents PROPERTIES LINKER_LANGUAGE CXX)
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/Component.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/Component.h
new file mode 100644
index 0000000..6ddda4e
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/Component.h
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/renderer/core/Props.h>
+#include <react/renderer/core/ReactPrimitives.h>
+#include <memory>
+#include <string>
+
+namespace facebook::react {
+
+class Component {
+ public:
+  Component(Tag tag, Props::Shared initialProps)
+      : tag_(tag), props_(std::move(initialProps)) {}
+
+  virtual ~Component() = default;
+
+  /*
+   * Called for updating component's props.
+   * Receiver must update native view props accordingly changed props.
+   */
+  virtual void updateProps(
+      Props::Shared const &oldProps,
+      Props::Shared const &newProps) = 0;
+
+  /*
+   * Called for mounting (attaching) a child component view inside `self`
+   * component view.
+   * Receiver must add `childComponent` as a sub component.
+   */
+  virtual void mountChildComponent(
+      std::shared_ptr<facebook::react::Component> childComponent,
+      int index){};
+
+  /*
+   * Called for unmounting (detaching) a child component view from `self`
+   * component view.
+   * Receiver must remove `childComponent` from a sub component
+   */
+  virtual void unmountChildComponent(
+      std::shared_ptr<facebook::react::Component> childComponent,
+      int index){};
+
+  /*
+   * Called for updating component's state.
+   * Receiver must update native view according to changed state.
+   */
+  virtual void updateState(){};
+
+  /*
+   * Called when the component is being deleted.
+   */
+  virtual void deleteComponent() = 0;
+
+ protected:
+  Tag tag_ = -1;
+  Props::Shared props_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/ComponentManager.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/ComponentManager.h
new file mode 100644
index 0000000..3f2123b
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/cxxcomponents/ComponentManager.h
@@ -0,0 +1,26 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/cxxcomponents/Component.h>
+#include <react/renderer/core/Props.h>
+
+namespace facebook::react {
+
+class ComponentManager {
+ public:
+  ComponentManager() {}
+
+  virtual std::shared_ptr<Component> createComponent(
+      Tag tag,
+      Props::Shared initialProps) = 0;
+
+  virtual ~ComponentManager() = default;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/BUCK b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/BUCK
index 5172ec4..b8e6516 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/BUCK
@@ -34,6 +34,7 @@ rn_xplat_cxx_library(
         react_native_xplat_target("react/renderer/componentregistry:componentregistry"),
         react_native_xplat_target("react/renderer/components/scrollview:scrollview"),
         react_native_xplat_target("runtimeexecutor:runtimeexecutor"),
+        "//xplat/js/react-native-github/ReactAndroid/src/main/jni/react/cxxcomponents:components",
         react_native_target("jni/react/jni:jni"),
         "//xplat/fbsystrace:fbsystrace",
         "//xplat/jsi:JSIDynamic",
@@ -45,6 +46,7 @@ rn_xplat_cxx_library(
         "//xplat/js/react-native-github:generated_components-rncore",
         react_native_xplat_target("react/renderer/components/image:image"),
         react_native_xplat_target("react/renderer/components/modal:modal"),
+        react_native_xplat_target("react/renderer/components/slider:slider"),
         react_native_xplat_target("react/renderer/components/switch:androidswitch"),
         react_native_xplat_target("react/renderer/components/progressbar:androidprogressbar"),
         react_native_xplat_target("react/renderer/components/text:text"),
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.cpp
index 36a78a6..9556822 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.cpp
@@ -8,6 +8,7 @@
 #include "Binding.h"
 
 #include "AsyncEventBeat.h"
+#include "CppComponentRegistry.h"
 #include "EventEmitterWrapper.h"
 #include "JBackgroundExecutor.h"
 #include "ReactNativeConfigHolder.h"
@@ -51,7 +52,7 @@ jni::local_ref<Binding::jhybriddata> Binding::initHybrid(
 
 // Thread-safe getter
 std::shared_ptr<Scheduler> Binding::getScheduler() {
-  std::shared_lock lock(installMutex_);
+  std::shared_lock<butter::shared_mutex> lock(installMutex_);
   return scheduler_;
 }
 
@@ -132,7 +133,7 @@ void Binding::startSurface(
 
   {
     SystraceSection s2("FabricUIManagerBinding::startSurface::surfaceId::lock");
-    std::unique_lock lock(surfaceHandlerRegistryMutex_);
+    std::unique_lock<butter::shared_mutex> lock(surfaceHandlerRegistryMutex_);
     SystraceSection s3("FabricUIManagerBinding::startSurface::surfaceId");
     surfaceHandlerRegistry_.emplace(surfaceId, std::move(surfaceHandler));
   }
@@ -202,7 +203,7 @@ void Binding::startSurfaceWithConstraints(
   {
     SystraceSection s2(
         "FabricUIManagerBinding::startSurfaceWithConstraints::surfaceId::lock");
-    std::unique_lock lock(surfaceHandlerRegistryMutex_);
+    std::unique_lock<butter::shared_mutex> lock(surfaceHandlerRegistryMutex_);
     SystraceSection s3(
         "FabricUIManagerBinding::startSurfaceWithConstraints::surfaceId");
     surfaceHandlerRegistry_.emplace(surfaceId, std::move(surfaceHandler));
@@ -246,7 +247,7 @@ void Binding::stopSurface(jint surfaceId) {
   }
 
   {
-    std::unique_lock lock(surfaceHandlerRegistryMutex_);
+    std::unique_lock<butter::shared_mutex> lock(surfaceHandlerRegistryMutex_);
 
     auto iterator = surfaceHandlerRegistry_.find(surfaceId);
 
@@ -338,7 +339,7 @@ void Binding::setConstraints(
       isRTL ? LayoutDirection::RightToLeft : LayoutDirection::LeftToRight;
 
   {
-    std::shared_lock lock(surfaceHandlerRegistryMutex_);
+    std::shared_lock<butter::shared_mutex> lock(surfaceHandlerRegistryMutex_);
 
     auto iterator = surfaceHandlerRegistry_.find(surfaceId);
 
@@ -361,7 +362,8 @@ void Binding::installFabricUIManager(
     jni::alias_ref<jobject> javaUIManager,
     EventBeatManager *eventBeatManager,
     ComponentFactory *componentsRegistry,
-    jni::alias_ref<jobject> reactNativeConfig) {
+    jni::alias_ref<jobject> reactNativeConfig,
+    CppComponentRegistry *cppComponentRegistry) {
   SystraceSection s("FabricUIManagerBinding::installFabricUIManager");
 
   std::shared_ptr<const ReactNativeConfig> config =
@@ -375,13 +377,19 @@ void Binding::installFabricUIManager(
                  << this << ").";
   }
 
+  // TODO[T135327389]: Investigate why code relying on CppComponentRegistry
+  // crashing during hot reload restart.
+  // sharedCppComponentRegistry_ =
+  //     std::shared_ptr<const facebook::react::CppComponentRegistry>(
+  //         cppComponentRegistry ? cppComponentRegistry : nullptr);
+
   // Use std::lock and std::adopt_lock to prevent deadlocks by locking mutexes
   // at the same time
-  std::unique_lock lock(installMutex_);
+  std::unique_lock<butter::shared_mutex> lock(installMutex_);
 
   auto globalJavaUiManager = make_global(javaUIManager);
-  mountingManager_ =
-      std::make_shared<FabricMountingManager>(config, globalJavaUiManager);
+  mountingManager_ = std::make_shared<FabricMountingManager>(
+      config, sharedCppComponentRegistry_, globalJavaUiManager);
 
   ContextContainer::Shared contextContainer =
       std::make_shared<ContextContainer>();
@@ -429,16 +437,13 @@ void Binding::installFabricUIManager(
       "CalculateTransformedFramesEnabled",
       getFeatureFlagValue("calculateTransformedFramesEnabled"));
 
-  CoreFeatures::cacheLastTextMeasurement =
-      getFeatureFlagValue("enableTextMeasureCachePerShadowNode");
+  disablePreallocateViews_ = reactNativeConfig_->getBool(
+      "react_fabric:disabled_view_preallocation_android");
 
   // Props setter pattern feature
   CoreFeatures::enablePropIteratorSetter =
       getFeatureFlagValue("enableCppPropsIteratorSetter");
 
-  // NativeState experiment
-  CoreFeatures::useNativeState = getFeatureFlagValue("useNativeState");
-
   // RemoveDelete mega-op
   ShadowViewMutation::PlatformSupportsRemoveDeleteTreeInstruction =
       getFeatureFlagValue("enableRemoveDeleteTreeInstruction");
@@ -473,16 +478,17 @@ void Binding::uninstallFabricUIManager() {
                  << this << ").";
   }
 
-  std::unique_lock lock(installMutex_);
+  std::unique_lock<butter::shared_mutex> lock(installMutex_);
   animationDriver_ = nullptr;
   scheduler_ = nullptr;
   mountingManager_ = nullptr;
   reactNativeConfig_ = nullptr;
+  sharedCppComponentRegistry_ = nullptr;
 }
 
 std::shared_ptr<FabricMountingManager> Binding::verifyMountingManager(
     std::string const &hint) {
-  std::shared_lock lock(installMutex_);
+  std::shared_lock<butter::shared_mutex> lock(installMutex_);
   if (!mountingManager_) {
     LOG(ERROR) << hint << " mounting manager disappeared.";
   }
@@ -490,19 +496,23 @@ std::shared_ptr<FabricMountingManager> Binding::verifyMountingManager(
 }
 
 void Binding::schedulerDidFinishTransaction(
-    MountingCoordinator::Shared mountingCoordinator) {
+    MountingCoordinator::Shared const &mountingCoordinator) {
   auto mountingManager =
       verifyMountingManager("Binding::schedulerDidFinishTransaction");
   if (!mountingManager) {
     return;
   }
 
-  mountingManager->executeMount(std::move(mountingCoordinator));
+  mountingManager->executeMount(mountingCoordinator);
 }
 
 void Binding::schedulerDidRequestPreliminaryViewAllocation(
     const SurfaceId surfaceId,
     const ShadowNode &shadowNode) {
+  if (disablePreallocateViews_) {
+    return;
+  }
+
   if (!shadowNode.getTraits().check(ShadowNodeTraits::Trait::FormsView)) {
     return;
   }
@@ -514,13 +524,29 @@ void Binding::preallocateView(
     SurfaceId surfaceId,
     ShadowNode const &shadowNode) {
   auto name = std::string(shadowNode.getComponentName());
-  auto shadowView = ShadowView(shadowNode);
-  auto mountingManager = verifyMountingManager("Binding::preallocateView");
-  if (!mountingManager) {
+
+  // Disable preallocation in java for C++ view managers
+  // RootComponents that are implmented as C++ view managers are still
+  // preallocated (this could be avoided by using Portals)
+  if (sharedCppComponentRegistry_ && sharedCppComponentRegistry_.get() &&
+      sharedCppComponentRegistry_->containsComponentManager(name) &&
+      !sharedCppComponentRegistry_->isRootComponent(name)) {
     return;
   }
 
-  mountingManager->preallocateShadowView(surfaceId, shadowView);
+  auto shadowView = ShadowView(shadowNode);
+  auto preallocationFunction = [this,
+                                surfaceId,
+                                shadowView = std::move(shadowView)] {
+    auto mountingManager = verifyMountingManager("Binding::preallocateView");
+    if (!mountingManager) {
+      return;
+    }
+
+    mountingManager->preallocateShadowView(surfaceId, shadowView);
+  };
+
+  preallocationFunction();
 }
 
 void Binding::schedulerDidDispatchCommand(
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.h
index 318fa1e..a69fe98 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/Binding.h
@@ -7,10 +7,11 @@
 
 #pragma once
 
+#include "CppComponentRegistry.h"
 #include "FabricMountingManager.h"
 
 #include <memory>
-#include <shared_mutex>
+#include <mutex>
 
 #include <fbjni/fbjni.h>
 #include <react/jni/JRuntimeExecutor.h>
@@ -65,7 +66,8 @@ class Binding : public jni::HybridClass<Binding>,
       jni::alias_ref<jobject> javaUIManager,
       EventBeatManager *eventBeatManager,
       ComponentFactory *componentsRegistry,
-      jni::alias_ref<jobject> reactNativeConfig);
+      jni::alias_ref<jobject> reactNativeConfig,
+      CppComponentRegistry *cppComponentRegistry);
 
   void startSurface(
       jint surfaceId,
@@ -94,7 +96,7 @@ class Binding : public jni::HybridClass<Binding>,
   void unregisterSurface(SurfaceHandlerBinding *surfaceHandler);
 
   void schedulerDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator) override;
+      MountingCoordinator::Shared const &mountingCoordinator) override;
 
   void schedulerDidRequestPreliminaryViewAllocation(
       const SurfaceId surfaceId,
@@ -123,7 +125,7 @@ class Binding : public jni::HybridClass<Binding>,
   void uninstallFabricUIManager();
 
   // Private member variables
-  std::shared_mutex installMutex_;
+  butter::shared_mutex installMutex_;
   std::shared_ptr<FabricMountingManager> mountingManager_;
   std::shared_ptr<Scheduler> scheduler_;
 
@@ -139,12 +141,15 @@ class Binding : public jni::HybridClass<Binding>,
   BackgroundExecutor backgroundExecutor_;
 
   butter::map<SurfaceId, SurfaceHandler> surfaceHandlerRegistry_{};
-  std::shared_mutex
+  butter::shared_mutex
       surfaceHandlerRegistryMutex_; // Protects `surfaceHandlerRegistry_`.
 
   float pointScaleFactor_ = 1;
 
   std::shared_ptr<const ReactNativeConfig> reactNativeConfig_{nullptr};
+  std::shared_ptr<const facebook::react::CppComponentRegistry>
+      sharedCppComponentRegistry_{nullptr};
+  bool disablePreallocateViews_{false};
   bool enableFabricLogs_{false};
 };
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CMakeLists.txt b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CMakeLists.txt
index 865dbb2..920103e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CMakeLists.txt
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CMakeLists.txt
@@ -18,6 +18,7 @@ target_include_directories(fabricjni PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
 target_link_libraries(
         fabricjni
         butter
+        cxxcomponents
         fb
         fbjni
         folly_runtime
@@ -50,6 +51,7 @@ target_link_libraries(
         rrc_progressbar
         rrc_root
         rrc_scrollview
+        rrc_slider
         rrc_switch
         rrc_text
         rrc_textinput
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentFactory.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentFactory.h
index ffbb3f7..e28fb19 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentFactory.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentFactory.h
@@ -8,8 +8,14 @@
 #pragma once
 
 #include <fbjni/fbjni.h>
-#include <react/renderer/componentregistry/ComponentDescriptorFactory.h>
+#include <jsi/jsi.h>
 #include <react/renderer/componentregistry/ComponentDescriptorRegistry.h>
+#include <react/renderer/scheduler/Scheduler.h>
+#include <react/utils/ContextContainer.h>
+#include <mutex>
+#include <unordered_set>
+
+using namespace facebook::jsi;
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentRegistryResolver.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentRegistryResolver.cpp
new file mode 100644
index 0000000..5560590
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentRegistryResolver.cpp
@@ -0,0 +1,51 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "ComponentRegistryResolver.h"
+
+#include <android/log.h>
+
+namespace facebook {
+namespace react {
+
+void ComponentRegistryResolver::addComponentManager(
+    std::string name,
+    bool isRootComponent,
+    std::function<std::shared_ptr<facebook::react::ComponentManager>(
+        const std::string &name)> f) {
+  ComponentResolverData data = {isRootComponent, std::move(f)};
+  resolverMap_.insert({name, data});
+}
+
+bool ComponentRegistryResolver::containsComponentManager(
+    std::string componentName) const {
+  return resolverMap_.contains(componentName);
+}
+
+std::shared_ptr<facebook::react::ComponentManager>
+ComponentRegistryResolver::getComponentManager(
+    std::string componentName) const {
+  auto iterator = resolverMap_.find(componentName);
+  if (iterator != resolverMap_.end()) {
+    return iterator->second.getComponentManagerFunction(componentName);
+  }
+
+  return nullptr;
+}
+
+bool ComponentRegistryResolver::isRootComponent(
+    std::string componentName) const {
+  auto iterator = resolverMap_.find(componentName);
+  if (iterator != resolverMap_.end()) {
+    return iterator->second.isRootComponent;
+  }
+
+  return false;
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentRegistryResolver.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentRegistryResolver.h
new file mode 100644
index 0000000..5d8adec
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/ComponentRegistryResolver.h
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <react/cxxcomponents/ComponentManager.h>
+
+namespace facebook {
+namespace react {
+
+struct ComponentResolverData {
+  bool isRootComponent;
+  std::function<std::shared_ptr<facebook::react::ComponentManager>(
+      const std::string &name)>
+      getComponentManagerFunction;
+};
+
+using ComponentResolverMap = butter::map<std::string, ComponentResolverData>;
+
+class ComponentRegistryResolver {
+ public:
+  ComponentRegistryResolver(){};
+
+  void addComponentManager(
+      std::string name,
+      bool isRootComponent,
+      std::function<std::shared_ptr<facebook::react::ComponentManager>(
+          const std::string &name)> f);
+
+  bool containsComponentManager(std::string componentName) const;
+
+  bool isRootComponent(std::string componentName) const;
+
+  std::shared_ptr<facebook::react::ComponentManager> getComponentManager(
+      std::string name) const;
+
+ private:
+  butter::map<std::string, ComponentResolverData> resolverMap_{};
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CoreComponentsRegistry.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CoreComponentsRegistry.cpp
index 933e9fe..22f1dde 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CoreComponentsRegistry.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CoreComponentsRegistry.cpp
@@ -19,6 +19,7 @@
 #include <react/renderer/components/progressbar/AndroidProgressBarComponentDescriptor.h>
 #include <react/renderer/components/rncore/ComponentDescriptors.h>
 #include <react/renderer/components/scrollview/ScrollViewComponentDescriptor.h>
+#include <react/renderer/components/slider/SliderComponentDescriptor.h>
 #include <react/renderer/components/text/ParagraphComponentDescriptor.h>
 #include <react/renderer/components/text/RawTextComponentDescriptor.h>
 #include <react/renderer/components/text/TextComponentDescriptor.h>
@@ -57,6 +58,8 @@ CoreComponentsRegistry::sharedProviderRegistry() {
         concreteComponentDescriptorProvider<TextComponentDescriptor>());
     providerRegistry->add(
         concreteComponentDescriptorProvider<RawTextComponentDescriptor>());
+    providerRegistry->add(
+        concreteComponentDescriptorProvider<SliderComponentDescriptor>());
     providerRegistry->add(
         concreteComponentDescriptorProvider<ScrollViewComponentDescriptor>());
     providerRegistry->add(
@@ -66,8 +69,6 @@ CoreComponentsRegistry::sharedProviderRegistry() {
         concreteComponentDescriptorProvider<ParagraphComponentDescriptor>());
     providerRegistry->add(concreteComponentDescriptorProvider<
                           AndroidDrawerLayoutComponentDescriptor>());
-    providerRegistry->add(concreteComponentDescriptorProvider<
-                          TraceUpdateOverlayComponentDescriptor>());
 
     return providerRegistry;
   }();
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppComponentRegistry.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppComponentRegistry.cpp
new file mode 100644
index 0000000..b1f845a
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppComponentRegistry.cpp
@@ -0,0 +1,73 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "CppComponentRegistry.h"
+#include <android/log.h>
+#include <fbjni/fbjni.h>
+#include <jsi/jsi.h>
+#include <react/renderer/componentregistry/ComponentDescriptorRegistry.h>
+
+using namespace facebook::jsi;
+
+namespace facebook {
+namespace react {
+
+jni::local_ref<CppComponentRegistry::jhybriddata>
+CppComponentRegistry::initHybrid(jni::alias_ref<jclass>) {
+  return makeCxxInstance();
+}
+
+void CppComponentRegistry::registerNatives() {
+  registerHybrid({
+      makeNativeMethod("initHybrid", CppComponentRegistry::initHybrid),
+  });
+}
+
+void CppComponentRegistry::addComponentManager(
+    std::string name,
+    bool isRootComponent,
+    std::function<std::shared_ptr<facebook::react::ComponentManager>(
+        const std::string &name)> f) {
+  componentManagerResolver_.addComponentManager(name, isRootComponent, f);
+}
+
+bool CppComponentRegistry::containsComponentManager(std::string name) const {
+  return componentManagerResolver_.containsComponentManager(name);
+}
+
+std::shared_ptr<facebook::react::ComponentManager>
+CppComponentRegistry::getComponentManager(const std::string &name) const {
+  return componentManagerResolver_.getComponentManager(name);
+}
+
+std::shared_ptr<facebook::react::Component>
+CppComponentRegistry::getComponentInstance(Tag tag) const {
+  return components_[tag];
+}
+
+bool CppComponentRegistry::isRootComponent(std::string name) const {
+  return componentManagerResolver_.isRootComponent(name);
+}
+
+std::shared_ptr<facebook::react::Component>
+CppComponentRegistry::createComponentInstance(
+    const std::string &componentName,
+    Tag tag,
+    Props::Shared initialProps) const {
+  // TODO: cache component managers
+  auto componentManager = getComponentManager(componentName);
+  auto component = componentManager->createComponent(tag, initialProps);
+  components_[tag] = component;
+  return component;
+}
+
+void CppComponentRegistry::deleteComponentInstance(Tag tag) const {
+  components_.erase(tag);
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppComponentRegistry.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppComponentRegistry.h
new file mode 100644
index 0000000..0354a19
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppComponentRegistry.h
@@ -0,0 +1,64 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <fbjni/fbjni.h>
+#include <glog/logging.h>
+#include <jsi/jsi.h>
+#include <react/utils/ContextContainer.h>
+#include <mutex>
+#include <unordered_set>
+
+#include <react/cxxcomponents/Component.h>
+#include <react/cxxcomponents/ComponentManager.h>
+#include <react/fabric/ComponentRegistryResolver.h>
+
+namespace facebook {
+namespace react {
+
+class Instance;
+
+class CppComponentRegistry : public jni::HybridClass<CppComponentRegistry> {
+ public:
+  constexpr static const char *const kJavaDescriptor =
+      "Lcom/facebook/react/fabric/CppComponentRegistry;";
+
+  static void registerNatives();
+
+  void addComponentManager(
+      std::string name,
+      bool isRootComponent,
+      std::function<std::shared_ptr<facebook::react::ComponentManager>(
+          const std::string &name)> f);
+
+  bool isRootComponent(std::string name) const;
+
+  bool containsComponentManager(std::string name) const;
+
+  std::shared_ptr<facebook::react::ComponentManager> getComponentManager(
+      const std::string &name) const;
+
+  std::shared_ptr<facebook::react::Component> getComponentInstance(
+      Tag tag) const;
+
+  std::shared_ptr<facebook::react::Component> createComponentInstance(
+      const std::string &componentName,
+      Tag tag,
+      Props::Shared initialProps) const;
+
+  void deleteComponentInstance(Tag tag) const;
+
+ private:
+  static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jclass>);
+  ComponentRegistryResolver componentManagerResolver_{};
+  mutable butter::map<Tag, std::shared_ptr<facebook::react::Component>>
+      components_{};
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppViewMutationsWrapper.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppViewMutationsWrapper.cpp
new file mode 100644
index 0000000..eb85fae
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppViewMutationsWrapper.cpp
@@ -0,0 +1,100 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "CppViewMutationsWrapper.h"
+
+#include <react/renderer/core/ReactPrimitives.h>
+
+#include <fbjni/fbjni.h>
+#include <glog/logging.h>
+
+using namespace facebook::jni;
+
+namespace facebook {
+namespace react {
+
+jni::local_ref<CppViewMutationsWrapper::jhybriddata>
+CppViewMutationsWrapper::initHybrid(jni::alias_ref<jclass>) {
+  return makeCxxInstance();
+}
+
+void CppViewMutationsWrapper::registerNatives() {
+  registerHybrid({
+      makeNativeMethod("initHybrid", CppViewMutationsWrapper::initHybrid),
+      makeNativeMethod(
+          "runCppViewMutations", CppViewMutationsWrapper::runCppViewMutations),
+  });
+}
+
+void CppViewMutationsWrapper::runCppViewMutations() {
+  // TODO implement rendering logic:
+  // - caching of componengtManagers of views into maps
+  // - caching of allocated views
+  // - logic for each mutation instruction
+  // - Define API in ComponentManager
+  // - Define API in Component
+  // - see RCTMountingManager.mm for logic
+  for (const auto &mutation : *cppViewMutations) {
+    const auto &newChildShadowView = mutation.newChildShadowView;
+    auto &mutationType = mutation.type;
+    auto componentName = newChildShadowView.componentName;
+    auto tag = mutation.newChildShadowView.tag;
+
+    switch (mutationType) {
+      case ShadowViewMutation::Create: {
+        auto component = cppComponentRegistry->createComponentInstance(
+            componentName, tag, newChildShadowView.props);
+        break;
+      }
+      case ShadowViewMutation::Remove: {
+        auto parentTag = mutation.parentShadowView.tag;
+        auto parentComponent =
+            cppComponentRegistry->getComponentInstance(parentTag);
+        auto childComponent = cppComponentRegistry->getComponentInstance(
+            mutation.newChildShadowView.tag);
+        parentComponent->unmountChildComponent(childComponent, mutation.index);
+        break;
+      }
+      case ShadowViewMutation::Delete: {
+        cppComponentRegistry->deleteComponentInstance(tag);
+        break;
+      }
+      case ShadowViewMutation::Update: {
+        auto component = cppComponentRegistry->getComponentInstance(tag);
+        if (mutation.oldChildShadowView.props !=
+            mutation.newChildShadowView.props) {
+          component->updateProps(
+              mutation.oldChildShadowView.props,
+              mutation.newChildShadowView.props);
+        }
+        break;
+      }
+      case ShadowViewMutation::Insert: {
+        auto parentTag = mutation.parentShadowView.tag;
+        auto parentComponent =
+            cppComponentRegistry->getComponentInstance(parentTag);
+        auto childTag = mutation.newChildShadowView.tag;
+        auto childComponent =
+            cppComponentRegistry->getComponentInstance(childTag);
+        auto oldProps = mutation.oldChildShadowView.props;
+        auto newProps = mutation.newChildShadowView.props;
+        childComponent->updateProps(oldProps, newProps);
+
+        if (childComponent && parentComponent) {
+          parentComponent->mountChildComponent(childComponent, mutation.index);
+        }
+        break;
+      }
+      default: {
+        break;
+      }
+    }
+  }
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppViewMutationsWrapper.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppViewMutationsWrapper.h
new file mode 100644
index 0000000..6e875b6
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/CppViewMutationsWrapper.h
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/fabric/CppComponentRegistry.h>
+
+#include <fbjni/fbjni.h>
+#include <react/jni/ReadableNativeMap.h>
+#include <react/renderer/mounting/ShadowViewMutation.h>
+
+namespace facebook {
+namespace react {
+
+class CppViewMutationsWrapper
+    : public jni::HybridClass<CppViewMutationsWrapper> {
+ public:
+  constexpr static const char *const kJavaDescriptor =
+      "Lcom/facebook/react/fabric/CppViewMutationsWrapper;";
+
+  static void registerNatives();
+
+  // TODO move this to a constructor or init methods
+  std::shared_ptr<ShadowViewMutationList> cppViewMutations;
+
+  std::shared_ptr<const CppComponentRegistry> cppComponentRegistry;
+
+  void runCppViewMutations();
+
+ private:
+  static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jclass>);
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/EventEmitterWrapper.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/EventEmitterWrapper.cpp
index 31c1bff..5b21697 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/EventEmitterWrapper.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/EventEmitterWrapper.cpp
@@ -28,7 +28,7 @@ void EventEmitterWrapper::invokeEvent(
   if (eventEmitter != nullptr) {
     eventEmitter->dispatchEvent(
         eventName,
-        payload ? payload->consume() : folly::dynamic::object(),
+        payload->consume(),
         EventPriority::AsynchronousBatched,
         static_cast<RawEvent::Category>(category));
   }
@@ -43,8 +43,7 @@ void EventEmitterWrapper::invokeUniqueEvent(
   // EventEmitter. In those cases, make sure we noop/blackhole events instead of
   // crashing.
   if (eventEmitter != nullptr) {
-    eventEmitter->dispatchUniqueEvent(
-        eventName, payload ? payload->consume() : folly::dynamic::object());
+    eventEmitter->dispatchUniqueEvent(eventName, payload->consume());
   }
 }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountItem.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountItem.h
index f2e82f7..adc6ed8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountItem.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountItem.h
@@ -72,7 +72,8 @@ struct CppMountItem final {
     UpdateEventEmitter = 256,
     UpdatePadding = 512,
     UpdateOverflowInset = 1024,
-    RemoveDeleteTree = 2048
+    RemoveDeleteTree = 2048,
+    RunCPPMutations = 4096
   };
 
 #pragma mark - Fields
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.cpp
index 54845eb..b0df638 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.cpp
@@ -6,6 +6,7 @@
  */
 
 #include "FabricMountingManager.h"
+#include "CppViewMutationsWrapper.h"
 #include "EventEmitterWrapper.h"
 #include "StateWrapperImpl.h"
 
@@ -38,10 +39,13 @@ static bool getFeatureFlagValue(const char *name) {
 
 FabricMountingManager::FabricMountingManager(
     std::shared_ptr<const ReactNativeConfig> &config,
+    std::shared_ptr<const CppComponentRegistry> &cppComponentRegistry,
     global_ref<jobject> &javaUIManager)
     : javaUIManager_(javaUIManager),
-      reduceDeleteCreateMutation_(
-          getFeatureFlagValue("reduceDeleteCreateMutation")) {
+      cppComponentRegistry_(cppComponentRegistry),
+      disableRevisionCheckForPreallocation_(config->getBool(
+          "react_fabric:disable_revision_check_for_preallocation")),
+      useOverflowInset_(getFeatureFlagValue("useOverflowInset")) {
   CoreFeatures::enableMapBuffer = getFeatureFlagValue("useMapBufferProps");
 }
 
@@ -75,6 +79,8 @@ static inline int getIntBufferSizeForType(CppMountItem::Type mountItemType) {
       return 7; // tag, parentTag, x, y, w, h, DisplayType
     case CppMountItem::Type::UpdateOverflowInset:
       return 5; // tag, left, top, right, bottom
+    case CppMountItem::Type::RunCPPMutations:
+      return 1;
     case CppMountItem::Undefined:
     case CppMountItem::Multiple:
       return -1;
@@ -263,7 +269,7 @@ local_ref<jobject> FabricMountingManager::getProps(
 }
 
 void FabricMountingManager::executeMount(
-    MountingCoordinator::Shared mountingCoordinator) {
+    MountingCoordinator::Shared const &mountingCoordinator) {
   std::lock_guard<std::recursive_mutex> lock(commitMutex_);
 
   SystraceSection s(
@@ -313,35 +319,31 @@ void FabricMountingManager::executeMount(
       auto &index = mutation.index;
 
       bool isVirtual = mutation.mutatedViewIsVirtual();
+
+      // Detect if the mutation instruction belongs to C++ view managers
+      if (cppComponentRegistry_) {
+        auto componentName = newChildShadowView.componentName
+            ? newChildShadowView.componentName
+            : oldChildShadowView.componentName;
+        auto name = std::string(componentName);
+        if (cppComponentRegistry_->containsComponentManager(name)) {
+          // is this thread safe?
+          cppViewMutations.push_back(mutation);
+
+          // This is a hack that could be avoided by using Portals
+          // Only execute mutations instructions for Root C++ ViewManagers
+          // because Root C++ Components have a Android view counterpart.
+          if (!cppComponentRegistry_->isRootComponent(name)) {
+            continue;
+          }
+        }
+      }
+
       switch (mutationType) {
         case ShadowViewMutation::Create: {
-          bool shouldCreateView =
+          bool allocationCheck =
               !allocatedViewTags.contains(newChildShadowView.tag);
-          if (reduceDeleteCreateMutation_) {
-            // Detect DELETE...CREATE situation on the same node and do NOT push
-            // back to the mount items. This is an edge case that may happen
-            // when for example animation runs while commit happened, and we
-            // want to filter them out here to capture all possible sources of
-            // such mutations. The re-ordering logic here assumes no
-            // DELETE...CREATE in the mutations, as we will re-order mutations
-            // and batch all DELETE instructions in the end.
-            auto it = std::remove_if(
-                cppDeleteMountItems.begin(),
-                cppDeleteMountItems.end(),
-                [&](auto &deletedMountItem) -> bool {
-                  return deletedMountItem.oldChildShadowView.tag ==
-                      newChildShadowView.tag;
-                });
-            bool hasDeletedViewsWithSameTag = it != cppDeleteMountItems.end();
-            cppDeleteMountItems.erase(it, cppDeleteMountItems.end());
-
-            if (hasDeletedViewsWithSameTag) {
-              shouldCreateView = false;
-              LOG(ERROR)
-                  << "XIN: Detect DELETE...CREATE on the same tag from mutations in the same batch. The DELETE and CREATE mutations are removed before sending to the native platforms";
-            }
-          }
-
+          bool shouldCreateView = allocationCheck;
           if (shouldCreateView) {
             cppCommonMountItems.push_back(
                 CppMountItem::CreateMountItem(newChildShadowView));
@@ -403,7 +405,8 @@ void FabricMountingManager::executeMount(
             // children of the current view. The layout of current view may not
             // change, and we separate this part from layout mount items to not
             // pack too much data there.
-            if ((oldChildShadowView.layoutMetrics.overflowInset !=
+            if (useOverflowInset_ &&
+                (oldChildShadowView.layoutMetrics.overflowInset !=
                  newChildShadowView.layoutMetrics.overflowInset)) {
               cppUpdateOverflowInsetMountItems.push_back(
                   CppMountItem::UpdateOverflowInsetMountItem(
@@ -459,8 +462,9 @@ void FabricMountingManager::executeMount(
             // children of the current view. The layout of current view may not
             // change, and we separate this part from layout mount items to not
             // pack too much data there.
-            if (newChildShadowView.layoutMetrics.overflowInset !=
-                EdgeInsets::ZERO) {
+            if (useOverflowInset_ &&
+                newChildShadowView.layoutMetrics.overflowInset !=
+                    EdgeInsets::ZERO) {
               cppUpdateOverflowInsetMountItems.push_back(
                   CppMountItem::UpdateOverflowInsetMountItem(
                       newChildShadowView));
@@ -819,6 +823,36 @@ void FabricMountingManager::executeMount(
     }
   }
 
+  if (cppViewMutations.size() > 0) {
+    writeIntBufferTypePreamble(
+        CppMountItem::Type::RunCPPMutations,
+        1,
+        env,
+        intBufferArray,
+        intBufferPosition);
+
+    // TODO review this logic and memory mamangement
+    // this might not be necessary:
+    // temp[0] = 1234;
+    // env->SetIntArrayRegion(intBufferArray, intBufferPosition, 1, temp);
+    // intBufferPosition += 1;
+
+    // Do not hold a reference to javaCppMutations from the C++ side.
+    auto javaCppMutations = CppViewMutationsWrapper::newObjectJavaArgs();
+    CppViewMutationsWrapper *cppViewMutationsWrapper = cthis(javaCppMutations);
+
+    // TODO move this to init methods
+    cppViewMutationsWrapper->cppComponentRegistry = cppComponentRegistry_;
+    // TODO is moving the cppViewMutations safe / thread safe?
+    // cppViewMutations will be accessed from the UI Thread in a near future
+    // can they dissapear?
+    cppViewMutationsWrapper->cppViewMutations =
+        std::make_shared<std::vector<facebook::react::ShadowViewMutation>>(
+            std::move(cppViewMutations));
+
+    (*objBufferArray)[objBufferPosition++] = javaCppMutations.get();
+  }
+
   // If there are no items, we pass a nullptr instead of passing the object
   // through the JNI
   auto batch = createMountItemsIntBufferBatchContainer(
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.h
index cc97048..d5f068e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/FabricMountingManager.h
@@ -7,6 +7,7 @@
 
 #pragma once
 
+#include "CppComponentRegistry.h"
 #include "FabricMountItem.h"
 
 #include <react/config/ReactNativeConfig.h>
@@ -33,6 +34,7 @@ class FabricMountingManager final {
 
   FabricMountingManager(
       std::shared_ptr<const ReactNativeConfig> &config,
+      std::shared_ptr<const CppComponentRegistry> &cppComponentRegistry,
       jni::global_ref<jobject> &javaUIManager);
 
   void onSurfaceStart(SurfaceId surfaceId);
@@ -41,7 +43,7 @@ class FabricMountingManager final {
 
   void preallocateShadowView(SurfaceId surfaceId, ShadowView const &shadowView);
 
-  void executeMount(MountingCoordinator::Shared mountingCoordinator);
+  void executeMount(MountingCoordinator::Shared const &mountingCoordinator);
 
   void dispatchCommand(
       ShadowView const &shadowView,
@@ -68,8 +70,10 @@ class FabricMountingManager final {
 
   butter::map<SurfaceId, butter::set<Tag>> allocatedViewRegistry_{};
   std::recursive_mutex allocatedViewsMutex_;
+  std::shared_ptr<const CppComponentRegistry> cppComponentRegistry_;
 
-  bool const reduceDeleteCreateMutation_{false};
+  bool const disableRevisionCheckForPreallocation_{false};
+  bool const useOverflowInset_{false};
 
   jni::local_ref<jobject> getProps(
       ShadowView const &oldShadowView,
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JBackgroundExecutor.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JBackgroundExecutor.h
index 50e37da..f1bad8d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JBackgroundExecutor.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JBackgroundExecutor.h
@@ -13,7 +13,9 @@
 namespace facebook {
 namespace react {
 
-class JBackgroundExecutor : public jni::JavaClass<JBackgroundExecutor> {
+using namespace facebook::jni;
+
+class JBackgroundExecutor : public JavaClass<JBackgroundExecutor> {
  public:
   static auto constexpr kJavaDescriptor =
       "Lcom/facebook/react/bridge/BackgroundExecutor;";
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JFabricUIManager.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JFabricUIManager.h
index d1c1846..dffb099 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JFabricUIManager.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/JFabricUIManager.h
@@ -8,12 +8,13 @@
 #pragma once
 
 #include <fbjni/fbjni.h>
-
 #include "Binding.h"
 
+using namespace facebook::jni;
+
 namespace facebook::react {
 
-class JFabricUIManager : public jni::JavaClass<JFabricUIManager> {
+class JFabricUIManager : public JavaClass<JFabricUIManager> {
  public:
   static constexpr auto kJavaDescriptor =
       "Lcom/facebook/react/fabric/FabricUIManager;";
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/OnLoad.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/OnLoad.cpp
index 7ebf9b5..b7825d4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/OnLoad.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/OnLoad.cpp
@@ -10,6 +10,7 @@
 #include "Binding.h"
 #include "ComponentFactory.h"
 #include "CoreComponentsRegistry.h"
+#include "CppViewMutationsWrapper.h"
 #include "EventBeatManager.h"
 #include "EventEmitterWrapper.h"
 #include "StateWrapperImpl.h"
@@ -20,6 +21,7 @@ JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *) {
     facebook::react::Binding::registerNatives();
     facebook::react::EventBeatManager::registerNatives();
     facebook::react::EventEmitterWrapper::registerNatives();
+    facebook::react::CppViewMutationsWrapper::registerNatives();
     facebook::react::StateWrapperImpl::registerNatives();
     facebook::react::ComponentFactory::registerNatives();
     facebook::react::CoreComponentsRegistry::registerNatives();
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/StateWrapperImpl.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/StateWrapperImpl.cpp
index 49e3f3e..c336df5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/StateWrapperImpl.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/StateWrapperImpl.cpp
@@ -27,20 +27,24 @@ jni::local_ref<StateWrapperImpl::jhybriddata> StateWrapperImpl::initHybrid(
 jni::local_ref<ReadableNativeMap::jhybridobject>
 StateWrapperImpl::getStateDataImpl() {
   folly::dynamic map = state_->getDynamic();
-  return ReadableNativeMap::newObjectCxxArgs(std::move(map));
+  local_ref<ReadableNativeMap::jhybridobject> readableNativeMap =
+      ReadableNativeMap::newObjectCxxArgs(map);
+  return readableNativeMap;
 }
 
 jni::local_ref<JReadableMapBuffer::jhybridobject>
 StateWrapperImpl::getStateMapBufferDataImpl() {
   MapBuffer map = state_->getMapBuffer();
-  return JReadableMapBuffer::createWithContents(std::move(map));
+  auto readableMapBuffer =
+      JReadableMapBuffer::createWithContents(std::move(map));
+  return readableMapBuffer;
 }
 
 void StateWrapperImpl::updateStateImpl(NativeMap *map) {
   // Get folly::dynamic from map
   auto dynamicMap = map->consume();
   // Set state
-  state_->updateState(std::move(dynamicMap));
+  state_->updateState(dynamicMap);
 }
 
 void StateWrapperImpl::registerNatives() {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.cpp
index 63559fe..5eaf0a3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.cpp
@@ -21,7 +21,7 @@ void SurfaceHandlerBinding::setDisplayMode(jint mode) {
 }
 
 void SurfaceHandlerBinding::start() {
-  std::unique_lock lock(lifecycleMutex_);
+  std::unique_lock<butter::shared_mutex> lock(lifecycleMutex_);
 
   if (surfaceHandler_.getStatus() != SurfaceHandler::Status::Running) {
     surfaceHandler_.start();
@@ -29,7 +29,7 @@ void SurfaceHandlerBinding::start() {
 }
 
 void SurfaceHandlerBinding::stop() {
-  std::unique_lock lock(lifecycleMutex_);
+  std::unique_lock<butter::shared_mutex> lock(lifecycleMutex_);
 
   if (surfaceHandler_.getStatus() == SurfaceHandler::Status::Running) {
     surfaceHandler_.stop();
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.h
index e067810..7fdc491 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/SurfaceHandlerBinding.h
@@ -7,8 +7,6 @@
 
 #pragma once
 
-#include <shared_mutex>
-
 #include <fbjni/fbjni.h>
 #include <react/jni/ReadableNativeMap.h>
 #include <react/renderer/scheduler/SurfaceHandler.h>
@@ -52,7 +50,7 @@ class SurfaceHandlerBinding : public jni::HybridClass<SurfaceHandlerBinding> {
   SurfaceHandler const &getSurfaceHandler();
 
  private:
-  mutable std::shared_mutex lifecycleMutex_;
+  mutable butter::shared_mutex lifecycleMutex_;
   const SurfaceHandler surfaceHandler_;
 
   jni::alias_ref<SurfaceHandlerBinding::jhybriddata> jhybridobject_;
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/viewPropConversions.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/viewPropConversions.h
index 1c05d79..fe44e66 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/viewPropConversions.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/fabric/viewPropConversions.h
@@ -10,7 +10,7 @@
 #include <react/renderer/components/view/ViewProps.h>
 #include <react/renderer/components/view/ViewPropsMapBuffer.h>
 #include <react/renderer/components/view/conversions.h>
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 #include <react/renderer/mapbuffer/MapBuffer.h>
 #include <react/renderer/mapbuffer/MapBufferBuilder.h>
 
@@ -113,10 +113,6 @@ constexpr MapBuffer::Key CORNER_TOP_END = 5;
 constexpr MapBuffer::Key CORNER_BOTTOM_END = 6;
 constexpr MapBuffer::Key CORNER_BOTTOM_START = 7;
 constexpr MapBuffer::Key CORNER_ALL = 8;
-constexpr MapBuffer::Key CORNER_END_END = 9;
-constexpr MapBuffer::Key CORNER_END_START = 10;
-constexpr MapBuffer::Key CORNER_START_END = 11;
-constexpr MapBuffer::Key CORNER_START_START = 12;
 
 inline void putOptionalFloat(
     MapBufferBuilder &builder,
@@ -126,7 +122,7 @@ inline void putOptionalFloat(
 }
 
 MapBuffer convertBorderRadii(CascadedBorderRadii const &radii) {
-  MapBufferBuilder builder(13);
+  MapBufferBuilder builder(9);
   putOptionalFloat(builder, CORNER_TOP_LEFT, radii.topLeft);
   putOptionalFloat(builder, CORNER_TOP_RIGHT, radii.topRight);
   putOptionalFloat(builder, CORNER_BOTTOM_RIGHT, radii.bottomRight);
@@ -136,10 +132,6 @@ MapBuffer convertBorderRadii(CascadedBorderRadii const &radii) {
   putOptionalFloat(builder, CORNER_BOTTOM_END, radii.bottomEnd);
   putOptionalFloat(builder, CORNER_BOTTOM_START, radii.bottomStart);
   putOptionalFloat(builder, CORNER_ALL, radii.all);
-  putOptionalFloat(builder, CORNER_END_END, radii.endEnd);
-  putOptionalFloat(builder, CORNER_END_START, radii.endStart);
-  putOptionalFloat(builder, CORNER_START_END, radii.startEnd);
-  putOptionalFloat(builder, CORNER_START_START, radii.startStart);
   return builder.build();
 }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/instrumentation/BUCK b/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/instrumentation/BUCK
index 6f89b5b..f2c0e6e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/instrumentation/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/instrumentation/BUCK
@@ -22,6 +22,6 @@ rn_xplat_cxx_library(
     deps = [
         react_native_target("jni/react/jni:jni"),
         FBJNI_TARGET,
-        react_native_xplat_dep("hermes/API:HermesAPIFullOrLean"),
+        react_native_xplat_dep("hermes/API:HermesAPI"),
     ],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/CMakeLists.txt b/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/CMakeLists.txt
index 5a70624..550b324 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/CMakeLists.txt
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/CMakeLists.txt
@@ -16,7 +16,6 @@ target_compile_options(
         hermes_executor
         PRIVATE
         $<$<CONFIG:Debug>:-DHERMES_ENABLE_DEBUGGER=1>
-        -std=c++17
         -fexceptions
 )
 target_include_directories(hermes_executor PRIVATE .)
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/OnLoad.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/OnLoad.cpp
index 6326364..2a102d5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/OnLoad.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/hermes/reactexecutor/OnLoad.cpp
@@ -16,6 +16,7 @@
 #include <react/jni/JReactMarker.h>
 #include <react/jni/JSLogging.h>
 #include <react/jni/JavaScriptExecutorHolder.h>
+#include <react/jni/NativeTime.h>
 
 #include <memory>
 
@@ -55,7 +56,10 @@ static void installBindings(jsi::Runtime &runtime) {
       static_cast<void (*)(const std::string &, unsigned int)>(
           &reactAndroidLoggingHook);
   react::bindNativeLogger(runtime, androidLogger);
-  react::bindNativePerformanceNow(runtime);
+
+  react::PerformanceNow androidNativePerformanceNow =
+      static_cast<double (*)()>(&reactAndroidNativePerformanceNowHook);
+  react::bindNativePerformanceNow(runtime, androidNativePerformanceNow);
 }
 
 class HermesExecutorHolder
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/.clang-tidy b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/.clang-tidy
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/BUCK b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/BUCK
index 23c1890..5ce1930 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/BUCK
@@ -1,4 +1,4 @@
-load("//tools/build_defs/oss:rn_defs.bzl", "ANDROID", "FBGLOGINIT_TARGET", "FBJNI_TARGET", "IS_OSS_BUILD", "react_native_target", "react_native_xplat_dep", "react_native_xplat_target", "rn_xplat_cxx_library")
+load("//tools/build_defs/oss:rn_defs.bzl", "ANDROID", "FBJNI_TARGET", "IS_OSS_BUILD", "react_native_target", "react_native_xplat_dep", "react_native_xplat_target", "rn_xplat_cxx_library")
 
 EXPORTED_HEADERS = [
     "CxxModuleWrapper.h",
@@ -48,7 +48,7 @@ rn_xplat_cxx_library(
         "-DLOG_TAG=\"ReactNativeJNI\"",
         "-DWITH_FBSYSTRACE=1",
         "-DWITH_INSPECTOR=1",
-    ] + ["-DWITH_GLOGINIT=0"] if not IS_OSS_BUILD else [],
+    ],
     soname = "libreactnativejni.$(ext)",
     visibility = [
         "PUBLIC",
@@ -59,6 +59,7 @@ rn_xplat_cxx_library(
         "//third-party/glog:glog",
         "//xplat/folly:dynamic",
         "//xplat/folly:json",
+        "//fbandroid/xplat/fbgloginit:fbgloginit",
         "//xplat/fbsystrace:fbsystrace",
         react_native_target("jni/react/turbomodule:callinvokerholder"),
         react_native_xplat_target("cxxreact:bridge"),
@@ -70,7 +71,5 @@ rn_xplat_cxx_library(
         react_native_xplat_target("logger:logger"),
         react_native_xplat_dep("jsi:jsi"),
         FBJNI_TARGET,
-    ] + ([
-        FBGLOGINIT_TARGET,
-    ] if IS_OSS_BUILD else []),
+    ] if not IS_OSS_BUILD else [],
 )
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/CatalystInstanceImpl.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/CatalystInstanceImpl.cpp
index 513b97e..e44913e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/CatalystInstanceImpl.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/CatalystInstanceImpl.cpp
@@ -418,11 +418,8 @@ CatalystInstanceImpl::getNativeCallInvokerHolder() {
 jni::alias_ref<JRuntimeExecutor::javaobject>
 CatalystInstanceImpl::getRuntimeExecutor() {
   if (!runtimeExecutor_) {
-    auto executor = instance_->getRuntimeExecutor();
-    if (executor) {
-      runtimeExecutor_ =
-          jni::make_global(JRuntimeExecutor::newObjectCxxArgs(executor));
-    }
+    runtimeExecutor_ = jni::make_global(
+        JRuntimeExecutor::newObjectCxxArgs(instance_->getRuntimeExecutor()));
   }
   return runtimeExecutor_;
 }
@@ -431,16 +428,15 @@ jni::alias_ref<JRuntimeScheduler::javaobject>
 CatalystInstanceImpl::getRuntimeScheduler() {
   if (!runtimeScheduler_) {
     auto runtimeExecutor = instance_->getRuntimeExecutor();
-    if (runtimeExecutor) {
-      auto runtimeScheduler =
-          std::make_shared<RuntimeScheduler>(runtimeExecutor);
-      runtimeScheduler_ = jni::make_global(
-          JRuntimeScheduler::newObjectCxxArgs(runtimeScheduler));
-      runtimeExecutor([scheduler =
-                           std::move(runtimeScheduler)](jsi::Runtime &runtime) {
-        RuntimeSchedulerBinding::createAndInstallIfNeeded(runtime, scheduler);
-      });
-    }
+    auto runtimeScheduler = std::make_shared<RuntimeScheduler>(runtimeExecutor);
+
+    runtimeScheduler_ =
+        jni::make_global(JRuntimeScheduler::newObjectCxxArgs(runtimeScheduler));
+
+    runtimeExecutor([runtimeScheduler](jsi::Runtime &runtime) {
+      RuntimeSchedulerBinding::createAndInstallIfNeeded(
+          runtime, runtimeScheduler);
+    });
   }
 
   return runtimeScheduler_;
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.cpp
index d95c28e..dcb4fcd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.cpp
@@ -18,8 +18,6 @@
 namespace facebook {
 namespace react {
 
-using namespace jni;
-
 namespace {
 
 struct JavaJSException : jni::JavaClass<JavaJSException, JThrowable> {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.h
index c000129..bc5334a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JMessageQueueThread.h
@@ -12,7 +12,10 @@
 #include <cxxreact/MessageQueueThread.h>
 #include <fbjni/fbjni.h>
 
-namespace facebook::react {
+using namespace facebook::jni;
+
+namespace facebook {
+namespace react {
 
 class JavaMessageQueueThread : public jni::JavaClass<JavaMessageQueueThread> {
  public:
@@ -22,7 +25,7 @@ class JavaMessageQueueThread : public jni::JavaClass<JavaMessageQueueThread> {
 
 class JMessageQueueThread : public MessageQueueThread {
  public:
-  JMessageQueueThread(jni::alias_ref<JavaMessageQueueThread::javaobject> jobj);
+  JMessageQueueThread(alias_ref<JavaMessageQueueThread::javaobject> jobj);
 
   /**
    * Enqueues the given function to run on this MessageQueueThread.
@@ -47,7 +50,8 @@ class JMessageQueueThread : public MessageQueueThread {
   }
 
  private:
-  jni::global_ref<JavaMessageQueueThread::javaobject> m_jobj;
+  global_ref<JavaMessageQueueThread::javaobject> m_jobj;
 };
 
-} // namespace facebook::react
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.cpp
index 6708d0d..ecb87cd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.cpp
@@ -17,10 +17,9 @@ namespace react {
 void JReactMarker::setLogPerfMarkerIfNeeded() {
   static std::once_flag flag{};
   std::call_once(flag, []() {
-    ReactMarker::logTaggedMarkerImpl = JReactMarker::logPerfMarker;
-    ReactMarker::logTaggedMarkerBridgelessImpl =
+    ReactMarker::logTaggedMarker = JReactMarker::logPerfMarker;
+    ReactMarker::logTaggedMarkerBridgeless =
         JReactMarker::logPerfMarkerBridgeless;
-    ReactMarker::getAppStartTimeImpl = JReactMarker::getAppStartTime;
   });
 }
 
@@ -104,11 +103,5 @@ void JReactMarker::logPerfMarkerWithInstanceKey(
   }
 }
 
-double JReactMarker::getAppStartTime() {
-  static auto cls = javaClassStatic();
-  static auto meth = cls->getStaticMethod<double()>("getAppStartTime");
-  return meth(cls);
-}
-
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.h
index b945d55..7ee91f0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JReactMarker.h
@@ -38,7 +38,6 @@ class JReactMarker : public facebook::jni::JavaClass<JReactMarker> {
       const ReactMarker::ReactMarkerId markerId,
       const char *tag,
       const int instanceKey);
-  static double getAppStartTime();
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.cpp
index 5cfdf7f..b737cd0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.cpp
@@ -62,7 +62,7 @@ std::string JavaNativeModule::getSyncMethodName(unsigned int reactMethodId) {
 
   auto &methodInvoker = syncMethods_[reactMethodId];
 
-  if (!methodInvoker.has_value()) {
+  if (!methodInvoker.hasValue()) {
     throw std::invalid_argument(folly::to<std::string>(
         "methodId ", reactMethodId, " is not a recognized sync method"));
   }
@@ -147,7 +147,7 @@ MethodCallResult JavaNativeModule::callSerializableNativeHook(
   }
 
   auto &method = syncMethods_[reactMethodId];
-  CHECK(method.has_value() && method->isSyncHook())
+  CHECK(method.hasValue() && method->isSyncHook())
       << "Trying to invoke a asynchronous method as synchronous hook";
   return method->invoke(instance_, wrapper_->getModule(), params);
 }
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.h
index f5bf7dc..e4a56e4 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/JavaModuleWrapper.h
@@ -9,7 +9,7 @@
 
 #include <cxxreact/NativeModule.h>
 #include <fbjni/fbjni.h>
-#include <optional>
+#include <folly/Optional.h>
 
 #include "MethodInvoker.h"
 
@@ -82,7 +82,7 @@ class JavaNativeModule : public NativeModule {
   std::weak_ptr<Instance> instance_;
   jni::global_ref<JavaModuleWrapper::javaobject> wrapper_;
   std::shared_ptr<MessageQueueThread> messageQueueThread_;
-  std::vector<std::optional<MethodInvoker>> syncMethods_;
+  std::vector<folly::Optional<MethodInvoker>> syncMethods_;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/MethodInvoker.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/MethodInvoker.cpp
index 4223a44..b9009c1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/MethodInvoker.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/MethodInvoker.cpp
@@ -279,7 +279,7 @@ MethodCallResult MethodInvoker::invoke(
     case 'v':
       env->CallVoidMethodA(module.get(), method_, args);
       throwPendingJniExceptionAsCppException();
-      return std::nullopt;
+      return folly::none;
 
     case 'z':
       PRIMITIVE_CASE_CASTING(Boolean, bool)
@@ -307,7 +307,7 @@ MethodCallResult MethodInvoker::invoke(
 
     default:
       LOG(FATAL) << "Unknown return type: " << returnType;
-      return std::nullopt;
+      return folly::none;
   }
 }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.cpp
index 6d43378..09dd34c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.cpp
@@ -7,6 +7,7 @@
 
 #include "NativeArray.h"
 
+#include <fbjni/fbjni.h>
 #include <folly/json.h>
 
 using namespace facebook::jni;
@@ -14,7 +15,8 @@ using namespace facebook::jni;
 namespace facebook {
 namespace react {
 
-void NativeArray::assertInternalType() {
+NativeArray::NativeArray(folly::dynamic array)
+    : isConsumed(false), array_(std::move(array)) {
   if (!array_.isArray()) {
     throwNewJavaException(
         exceptions::gUnexpectedNativeTypeExceptionClass,
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.h
index 1e48e74..b420830 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeArray.h
@@ -17,7 +17,7 @@ namespace react {
 
 class NativeArray : public jni::HybridClass<NativeArray> {
  public:
-  static auto constexpr *kJavaDescriptor =
+  static constexpr const char *kJavaDescriptor =
       "Lcom/facebook/react/bridge/NativeArray;";
 
   jni::local_ref<jstring> toString();
@@ -27,6 +27,7 @@ class NativeArray : public jni::HybridClass<NativeArray> {
   // Whether this array has been added to another array or map and no longer
   // has a valid array value.
   bool isConsumed;
+  void throwIfConsumed();
 
   static void registerNatives();
 
@@ -34,18 +35,7 @@ class NativeArray : public jni::HybridClass<NativeArray> {
   folly::dynamic array_;
 
   friend HybridBase;
-
-  template <class Dyn>
-  explicit NativeArray(Dyn &&array)
-      : isConsumed(false), array_(std::forward<Dyn>(array)) {
-    assertInternalType();
-  }
-
-  void assertInternalType();
-  void throwIfConsumed();
-
-  NativeArray(const NativeArray &) = delete;
-  NativeArray &operator=(const NativeArray &) = delete;
+  explicit NativeArray(folly::dynamic array);
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.cpp
index ee58163..9783ac1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.cpp
@@ -14,9 +14,9 @@ using namespace facebook::jni;
 namespace facebook {
 namespace react {
 
-local_ref<jstring> NativeMap::toString() {
+std::string NativeMap::toString() {
   throwIfConsumed();
-  return make_jstring(folly::toJson(map_).c_str());
+  return ("{ NativeMap: " + folly::toJson(map_) + " }").c_str();
 }
 
 void NativeMap::registerNatives() {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.h
index 39a42b2..2318ca2 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeMap.h
@@ -20,13 +20,14 @@ class NativeMap : public jni::HybridClass<NativeMap> {
   static auto constexpr kJavaDescriptor =
       "Lcom/facebook/react/bridge/NativeMap;";
 
-  jni::local_ref<jstring> toString();
+  std::string toString();
 
   RN_EXPORT folly::dynamic consume();
 
   // Whether this map has been added to another array or map and no longer
   // has a valid map value.
   bool isConsumed;
+  void throwIfConsumed();
 
   static void registerNatives();
 
@@ -34,15 +35,8 @@ class NativeMap : public jni::HybridClass<NativeMap> {
   folly::dynamic map_;
 
   friend HybridBase;
-
-  template <class Dyn>
-  explicit NativeMap(Dyn &&map)
-      : isConsumed(false), map_(std::forward<Dyn>(map)) {}
-
-  void throwIfConsumed();
-
-  NativeMap(const NativeMap &) = delete;
-  NativeMap &operator=(const NativeMap &) = delete;
+  friend struct ReadableNativeMapKeySetIterator;
+  explicit NativeMap(folly::dynamic s) : isConsumed(false), map_(s) {}
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeTime.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeTime.cpp
new file mode 100644
index 0000000..042805f
--- /dev/null
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeTime.cpp
@@ -0,0 +1,26 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "NativeTime.h"
+#include <chrono>
+
+namespace facebook {
+namespace react {
+
+double reactAndroidNativePerformanceNowHook() {
+  auto time = std::chrono::steady_clock::now();
+  auto duration = std::chrono::duration_cast<std::chrono::nanoseconds>(
+                      time.time_since_epoch())
+                      .count();
+
+  constexpr double NANOSECONDS_IN_MILLISECOND = 1000000.0;
+
+  return duration / NANOSECONDS_IN_MILLISECOND;
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/Vector.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeTime.h
similarity index 70%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/Vector.h
rename to node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeTime.h
index f8b8f7b..bc943de 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/Vector.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/NativeTime.h
@@ -7,17 +7,10 @@
 
 #pragma once
 
-#include <react/renderer/graphics/Float.h>
-
 namespace facebook {
 namespace react {
 
-struct Vector {
-  Float x{0};
-  Float y{0};
-  Float z{0};
-  Float w{0};
-};
+double reactAndroidNativePerformanceNowHook();
 
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/OnLoad.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/OnLoad.cpp
index 5dd3d18..cbcaa77 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/OnLoad.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/OnLoad.cpp
@@ -25,10 +25,6 @@
 #include "JInspector.h"
 #endif
 
-#ifndef WITH_GLOGINIT
-#define WITH_GLOGINIT 1
-#endif
-
 using namespace facebook::jni;
 
 namespace facebook {
@@ -71,10 +67,8 @@ class ProxyJavaScriptExecutorHolder : public HybridClass<
 
 extern "C" JNIEXPORT jint JNI_OnLoad(JavaVM *vm, void *reserved) {
   return initialize(vm, [] {
-#if WITH_GLOGINIT
     gloginit::initialize();
     FLAGS_minloglevel = 0;
-#endif
     ProxyJavaScriptExecutorHolder::registerNatives();
     CatalystInstanceImpl::registerNatives();
     CxxModuleWrapperBase::registerNatives();
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.cpp
index 397108b..8eab88e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.cpp
@@ -14,6 +14,12 @@ using namespace facebook::jni;
 namespace facebook {
 namespace react {
 
+// This attribute exports the ctor symbol, so ReadableNativeArray to be
+// constructed from other DSOs.
+__attribute__((visibility("default")))
+ReadableNativeArray::ReadableNativeArray(folly::dynamic array)
+    : HybridBase(std::move(array)) {}
+
 // TODO T112842309: Remove after fbjni upgraded in OSS
 void ReadableNativeArray::mapException(const std::exception &ex) {
   if (dynamic_cast<const folly::TypeError *>(&ex) != nullptr) {
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.h
index 0242a49..f077907 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeArray.h
@@ -24,10 +24,7 @@ class ReadableNativeArray
     : public jni::HybridClass<ReadableNativeArray, NativeArray> {
  protected:
   friend HybridBase;
-
-  template <class Dyn>
-  explicit ReadableNativeArray(Dyn &&array)
-      : HybridBase(std::forward<Dyn>(array)) {}
+  explicit ReadableNativeArray(folly::dynamic array);
 
  public:
   static constexpr const char *kJavaDescriptor =
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.cpp
index f55a92d..365c0de 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.cpp
@@ -69,17 +69,17 @@ void addDynamicToJArray(
 }
 
 local_ref<JArrayClass<jstring>> ReadableNativeMap::importKeys() {
-  throwIfConsumed();
-
   keys_ = folly::dynamic::array();
   if (map_ == nullptr) {
     return JArrayClass<jstring>::newArray(0);
   }
-  auto jarray = JArrayClass<jstring>::newArray(map_.size());
+  auto pairs = map_.items();
+  jint size = map_.size();
+  auto jarray = JArrayClass<jstring>::newArray(size);
   jint i = 0;
-  for (auto &pair : map_.items()) {
+  for (auto &pair : pairs) {
     auto value = pair.first.asString();
-    (*keys_).push_back(value);
+    keys_.value().push_back(value);
     (*jarray)[i++] = make_jstring(value);
   }
 
@@ -87,24 +87,20 @@ local_ref<JArrayClass<jstring>> ReadableNativeMap::importKeys() {
 }
 
 local_ref<JArrayClass<jobject>> ReadableNativeMap::importValues() {
-  throwIfConsumed();
-
   jint size = keys_.value().size();
   auto jarray = JArrayClass<jobject>::newArray(size);
   for (jint ii = 0; ii < size; ii++) {
-    const std::string &key = (*keys_)[ii].getString();
+    const std::string &key = keys_.value()[ii].getString();
     addDynamicToJArray(jarray, ii, map_.at(key));
   }
   return jarray;
 }
 
 local_ref<JArrayClass<jobject>> ReadableNativeMap::importTypes() {
-  throwIfConsumed();
-
   jint size = keys_.value().size();
   auto jarray = JArrayClass<jobject>::newArray(size);
   for (jint ii = 0; ii < size; ii++) {
-    const std::string &key = (*keys_)[ii].getString();
+    const std::string &key = keys_.value()[ii].getString();
     (*jarray)[ii] = ReadableType::getType(map_.at(key).type());
   }
   return jarray;
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.h
index bf6a442..0b79bcd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/ReadableNativeMap.h
@@ -8,9 +8,9 @@
 #pragma once
 
 #include <fbjni/fbjni.h>
+#include <folly/Optional.h>
 #include <folly/dynamic.h>
 #include <folly/json.h>
-#include <optional>
 
 #include "NativeCommon.h"
 #include "NativeMap.h"
@@ -38,7 +38,7 @@ struct ReadableNativeMap : jni::HybridClass<ReadableNativeMap, NativeMap> {
   jni::local_ref<jni::JArrayClass<jstring>> importKeys();
   jni::local_ref<jni::JArrayClass<jobject>> importValues();
   jni::local_ref<jni::JArrayClass<jobject>> importTypes();
-  std::optional<folly::dynamic> keys_;
+  folly::Optional<folly::dynamic> keys_;
   static jni::local_ref<jhybridobject> createWithContents(folly::dynamic &&map);
 
   static void mapException(const std::exception &ex);
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/jscexecutor/OnLoad.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/jscexecutor/OnLoad.cpp
index d61e070..9d38412 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/jscexecutor/OnLoad.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/jscexecutor/OnLoad.cpp
@@ -11,6 +11,7 @@
 #include <react/jni/JReactMarker.h>
 #include <react/jni/JSLogging.h>
 #include <react/jni/JavaScriptExecutorHolder.h>
+#include <react/jni/NativeTime.h>
 #include <react/jni/ReadableNativeMap.h>
 
 #include <memory>
@@ -30,7 +31,10 @@ class JSCExecutorFactory : public JSExecutorFactory {
           static_cast<void (*)(const std::string &, unsigned int)>(
               &reactAndroidLoggingHook);
       react::bindNativeLogger(runtime, androidLogger);
-      react::bindNativePerformanceNow(runtime);
+
+      react::PerformanceNow androidNativePerformanceNow =
+          static_cast<double (*)()>(&reactAndroidNativePerformanceNowHook);
+      react::bindNativePerformanceNow(runtime, androidNativePerformanceNow);
     };
     return std::make_unique<JSIExecutor>(
         jsc::makeJSCRuntime(),
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.cpp b/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.cpp
index 7fa0f86..a4d1c12 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.cpp
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.cpp
@@ -36,26 +36,55 @@ TurboModuleManager::TurboModuleManager(
     RuntimeExecutor runtimeExecutor,
     std::shared_ptr<CallInvoker> jsCallInvoker,
     std::shared_ptr<CallInvoker> nativeCallInvoker,
-    jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate)
+    jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate,
+    bool useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+    bool useTurboModuleManagerCallbackCleanupScope)
     : javaPart_(jni::make_global(jThis)),
       runtimeExecutor_(runtimeExecutor),
       jsCallInvoker_(jsCallInvoker),
       nativeCallInvoker_(nativeCallInvoker),
       delegate_(jni::make_global(delegate)),
-      turboModuleCache_(std::make_shared<TurboModuleCache>()) {}
+      turboModuleCache_(std::make_shared<TurboModuleCache>()) {
+  if (useGlobalCallbackCleanupScopeUsingRetainJSCallback) {
+    longLivedObjectCollection_ = nullptr;
+    retainJSCallback_ = [](jsi::Function &&callback,
+                           jsi::Runtime &runtime,
+                           std::shared_ptr<CallInvoker> jsInvoker) {
+      return CallbackWrapper::createWeak(
+          std::move(callback), runtime, jsInvoker);
+    };
+  } else if (useTurboModuleManagerCallbackCleanupScope) {
+    longLivedObjectCollection_ = std::make_shared<LongLivedObjectCollection>();
+    retainJSCallback_ = [longLivedObjectCollection =
+                             longLivedObjectCollection_](
+                            jsi::Function &&callback,
+                            jsi::Runtime &runtime,
+                            std::shared_ptr<CallInvoker> jsInvoker) {
+      return CallbackWrapper::createWeak(
+          longLivedObjectCollection, std::move(callback), runtime, jsInvoker);
+    };
+  }
+}
 
 jni::local_ref<TurboModuleManager::jhybriddata> TurboModuleManager::initHybrid(
     jni::alias_ref<jhybridobject> jThis,
     jni::alias_ref<JRuntimeExecutor::javaobject> runtimeExecutor,
     jni::alias_ref<CallInvokerHolder::javaobject> jsCallInvokerHolder,
     jni::alias_ref<CallInvokerHolder::javaobject> nativeCallInvokerHolder,
-    jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate) {
+    jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate,
+    bool useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+    bool useTurboModuleManagerCallbackCleanupScope) {
+  auto jsCallInvoker = jsCallInvokerHolder->cthis()->getCallInvoker();
+  auto nativeCallInvoker = nativeCallInvokerHolder->cthis()->getCallInvoker();
+
   return makeCxxInstance(
       jThis,
       runtimeExecutor->cthis()->get(),
-      jsCallInvokerHolder->cthis()->getCallInvoker(),
-      nativeCallInvokerHolder->cthis()->getCallInvoker(),
-      delegate);
+      jsCallInvoker,
+      nativeCallInvoker,
+      delegate,
+      useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+      useTurboModuleManagerCallbackCleanupScope);
 }
 
 void TurboModuleManager::registerNatives() {
@@ -77,7 +106,8 @@ void TurboModuleManager::installJSIBindings() {
          jsCallInvoker_ = std::weak_ptr<CallInvoker>(jsCallInvoker_),
          nativeCallInvoker_ = std::weak_ptr<CallInvoker>(nativeCallInvoker_),
          delegate_ = jni::make_weak(delegate_),
-         javaPart_ = jni::make_weak(javaPart_)](
+         javaPart_ = jni::make_weak(javaPart_),
+         retainJSCallback = retainJSCallback_](
             const std::string &name) -> std::shared_ptr<TurboModule> {
       auto turboModuleCache = turboModuleCache_.lock();
       auto jsCallInvoker = jsCallInvoker_.lock();
@@ -138,7 +168,8 @@ void TurboModuleManager::installJSIBindings() {
             .moduleName = name,
             .instance = moduleInstance,
             .jsInvoker = jsCallInvoker,
-            .nativeInvoker = nativeCallInvoker};
+            .nativeInvoker = nativeCallInvoker,
+            .retainJSCallback = retainJSCallback};
 
         auto turboModule = delegate->cthis()->getTurboModule(name, params);
         turboModuleCache->insert({name, turboModule});
@@ -152,7 +183,10 @@ void TurboModuleManager::installJSIBindings() {
     TurboModuleBindingMode bindingMode = static_cast<TurboModuleBindingMode>(
         getFeatureFlagValue("turboModuleBindingMode"));
     TurboModuleBinding::install(
-        runtime, bindingMode, std::move(turboModuleProvider));
+        runtime,
+        std::move(turboModuleProvider),
+        bindingMode,
+        longLivedObjectCollection_);
   });
 }
 
diff --git a/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.h b/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.h
index 98bbc70..26c13fd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.h
+++ b/node_modules/react-native/ReactAndroid/src/main/jni/react/turbomodule/ReactCommon/TurboModuleManager.h
@@ -32,7 +32,9 @@ class TurboModuleManager : public jni::HybridClass<TurboModuleManager> {
       jni::alias_ref<JRuntimeExecutor::javaobject> runtimeExecutor,
       jni::alias_ref<CallInvokerHolder::javaobject> jsCallInvokerHolder,
       jni::alias_ref<CallInvokerHolder::javaobject> nativeCallInvokerHolder,
-      jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate);
+      jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate,
+      bool useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+      bool useTurboModuleManagerCallbackCleanupScope);
   static void registerNatives();
 
  private:
@@ -43,6 +45,9 @@ class TurboModuleManager : public jni::HybridClass<TurboModuleManager> {
   std::shared_ptr<CallInvoker> nativeCallInvoker_;
   jni::global_ref<TurboModuleManagerDelegate::javaobject> delegate_;
 
+  JSCallbackRetainer retainJSCallback_;
+  std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection_;
+
   using TurboModuleCache =
       std::unordered_map<std::string, std::shared_ptr<react::TurboModule>>;
 
@@ -60,7 +65,9 @@ class TurboModuleManager : public jni::HybridClass<TurboModuleManager> {
       RuntimeExecutor runtimeExecutor,
       std::shared_ptr<CallInvoker> jsCallInvoker,
       std::shared_ptr<CallInvoker> nativeCallInvoker,
-      jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate);
+      jni::alias_ref<TurboModuleManagerDelegate::javaobject> delegate,
+      bool useGlobalCallbackCleanupScopeUsingRetainJSCallback,
+      bool useTurboModuleManagerCallbackCleanupScope);
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactAndroid/src/main/libraries/fbcore/src/main/java/com/facebook/common/logging/BUCK b/node_modules/react-native/ReactAndroid/src/main/libraries/fbcore/src/main/java/com/facebook/common/logging/BUCK
index 0a71b21..d0a86fa 100644
--- a/node_modules/react-native/ReactAndroid/src/main/libraries/fbcore/src/main/java/com/facebook/common/logging/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/libraries/fbcore/src/main/java/com/facebook/common/logging/BUCK
@@ -4,7 +4,7 @@ rn_android_library(
     name = "logging",
     autoglob = False,
     language = "JAVA",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
     exported_deps = [
         react_native_dep("libraries/fresco/fresco-react-native:fbcore"),
     ],
diff --git a/node_modules/react-native/ReactAndroid/src/main/libraries/fresco/fresco-react-native/BUCK b/node_modules/react-native/ReactAndroid/src/main/libraries/fresco/fresco-react-native/BUCK
index 315f64e..2e13d10 100644
--- a/node_modules/react-native/ReactAndroid/src/main/libraries/fresco/fresco-react-native/BUCK
+++ b/node_modules/react-native/ReactAndroid/src/main/libraries/fresco/fresco-react-native/BUCK
@@ -4,7 +4,7 @@ load("//tools/build_defs/oss:rn_defs.bzl", "rn_android_library", "rn_android_pre
 rn_android_prebuilt_aar(
     name = "fresco-react-native",
     aar = ":fresco-binary-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -16,7 +16,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "fresco-drawee",
     aar = ":drawee-binary-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -29,7 +29,7 @@ rn_android_library(
     name = "imagepipeline",
     autoglob = False,
     language = "JAVA",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
     exported_deps = [
         ":bolts",
         ":imagepipeline-base",
@@ -47,7 +47,7 @@ rn_android_library(
 rn_android_prebuilt_aar(
     name = "imagepipeline-base",
     aar = ":imagepipeline-base-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -59,7 +59,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "imagepipeline-core",
     aar = ":imagepipeline-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -71,7 +71,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "native-filters",
     aar = ":nativeimagefilters-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -83,7 +83,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "native-transcoder",
     aar = ":nativeimagetranscoder-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -95,7 +95,7 @@ fb_native.remote_file(
 rn_prebuilt_jar(
     name = "bolts",
     binary_jar = ":download-bolts.jar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -107,7 +107,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "fbcore",
     aar = ":fbcore-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -119,7 +119,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "imagepipeline-native",
     aar = ":imagepipeline-native-binary-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -131,7 +131,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "imagepipeline-okhttp3",
     aar = ":imagepipeline-okhttp3-binary-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -143,7 +143,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "memory-type-ashmem",
     aar = ":memory-type-ashmem-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -155,7 +155,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "memory-type-java",
     aar = ":memory-type-java-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -167,7 +167,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "memory-type-native",
     aar = ":memory-type-native-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -179,7 +179,7 @@ fb_native.remote_file(
 rn_android_prebuilt_aar(
     name = "ui-common",
     aar = ":ui-common-aar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-af/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-af/strings.xml
index 24e1b69..2ac5f22 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-af/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-af/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: af_ZA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ar/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ar/strings.xml
index 9ee5b12..f493c38 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ar/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ar/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ar_AR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-as/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-as/strings.xml
index 7224dbc..6f7fecb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-as/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-as/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: as_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-az/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-az/strings.xml
index 8d1df47..ad4b43e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-az/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-az/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: az_AZ -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-be/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-be/strings.xml
deleted file mode 100644
index ce84b2a..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-be/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: be_BY -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bg/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bg/strings.xml
index 09b7b31..0dbf000 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bg/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bg/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: bg_BG -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bn/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bn/strings.xml
index b5d5166..4af0c01 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bn/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bn/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: bn_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bs/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bs/strings.xml
index 6360c5c..83bfd3e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bs/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-bs/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: bs_BA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ca/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ca/strings.xml
index d839c0b..18a7066 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ca/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ca/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ca_ES -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cb/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cb/strings.xml
index 89de99e..a936c2b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cb/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cb/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: cb_IQ -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cs/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cs/strings.xml
index b556b85..1d7a37b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cs/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-cs/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: cs_CZ -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-da/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-da/strings.xml
index 1fd6723..ee82576 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-da/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-da/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: da_DK -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-de/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-de/strings.xml
index b4629c9..e1b0f2a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-de/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-de/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: de_DE -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-el/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-el/strings.xml
index 0604fa1..53281c1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-el/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-el/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: el_GR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-en-rGB/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-en-rGB/strings.xml
index 4914778..4ce9e91 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-en-rGB/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-en-rGB/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: en_GB -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es-rES/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es-rES/strings.xml
index 025a080..ee27f4a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es-rES/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es-rES/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: es_ES -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es/strings.xml
index bfb1514..228d615 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-es/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: es_LA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-et/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-et/strings.xml
index e17476d..ccb6ac6 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-et/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-et/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: et_EE -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fa/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fa/strings.xml
index 72270d9..d571b0a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fa/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fa/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: fa_IR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb-rLS/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb-rLS/strings.xml
index d531cc7..3e5736e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb-rLS/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb-rLS/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: fb_LS -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb/strings.xml
index aee984f..5700690 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fb/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: fb_HA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fi/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fi/strings.xml
index 7c49d51..6211222 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fi/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fi/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: fi_FI -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr-rCA/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr-rCA/strings.xml
index d5fe3fb..a91bb8a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr-rCA/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr-rCA/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: fr_CA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr/strings.xml
index 64b98fc..5658892 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-fr/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: fr_FR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-gu/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-gu/strings.xml
index 2a2946b..f3174fd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-gu/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-gu/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: gu_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ha/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ha/strings.xml
deleted file mode 100644
index 084b1b6..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ha/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: ha_NG -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hi/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hi/strings.xml
index 3bca368..41f3ba7 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hi/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hi/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: hi_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hr/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hr/strings.xml
index 97250a3..0112dc1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hr/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hr/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: hr_HR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hu/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hu/strings.xml
index 7c28e05..ca3ba72 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hu/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hu/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: hu_HU -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hy/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hy/strings.xml
deleted file mode 100644
index 9fc19db..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-hy/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: hy_AM -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-in/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-in/strings.xml
index 6d32bd7..dee75b1 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-in/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-in/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: id_ID -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-is/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-is/strings.xml
index e4a30ca..86daafa 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-is/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-is/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: is_IS -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-it/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-it/strings.xml
index 89dcf44..eb0618a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-it/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-it/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: it_IT -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-iw/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-iw/strings.xml
index dcca08e..2ee633a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-iw/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-iw/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: he_IL -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ja/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ja/strings.xml
index 437a25f..afe0efd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ja/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ja/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ja_JP -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-jv/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-jv/strings.xml
deleted file mode 100644
index 5bc93b9..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-jv/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: jv_ID -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ka/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ka/strings.xml
index 1c2a251..a2d62dd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ka/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ka/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ka_GE -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kk/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kk/strings.xml
deleted file mode 100644
index f2afa03..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kk/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: kk_KZ -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-km/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-km/strings.xml
index d6ed5fa..b9f9cb3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-km/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-km/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: km_KH -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kn/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kn/strings.xml
index b4a93b3..2497405 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kn/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-kn/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: kn_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ko/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ko/strings.xml
index ba31001..a06e326 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ko/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ko/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ko_KR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ku/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ku/strings.xml
deleted file mode 100644
index 60ec646..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ku/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: ku_TR -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ky/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ky/strings.xml
deleted file mode 100644
index 8bdeee4..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ky/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: ky_KG -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lo/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lo/strings.xml
index d35f4bd..72a0480 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lo/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lo/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: lo_LA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lt/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lt/strings.xml
index c3177bb..0a9ee39 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lt/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lt/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: lt_LT -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lv/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lv/strings.xml
index a66be9d..a617e2c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lv/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-lv/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: lv_LV -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mk/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mk/strings.xml
index 1c76e1b..b519c79 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mk/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mk/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: mk_MK -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ml/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ml/strings.xml
index 5d568f3..0421596 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ml/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ml/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ml_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mn/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mn/strings.xml
index 2f27b04..d2249ce 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mn/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mn/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: mn_MN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mr/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mr/strings.xml
index ad23922..06650b3 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mr/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-mr/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: mr_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ms/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ms/strings.xml
index 443eca7..3254e7a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ms/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ms/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ms_MY -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-my/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-my/strings.xml
index 65abfdb..35aed12 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-my/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-my/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: my_MM -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nb/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nb/strings.xml
index 873742c..ab5d781 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nb/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nb/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: nb_NO -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ne/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ne/strings.xml
index 47a8e78..e986ad9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ne/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ne/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ne_NP -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nl/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nl/strings.xml
index 75355cf..dc4c14a 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nl/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-nl/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: nl_NL -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pa/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pa/strings.xml
index ea45e68..f1994dd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pa/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pa/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: pa_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pl/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pl/strings.xml
index 4f53d3e..1f396b7 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pl/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pl/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: pl_PL -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ps/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ps/strings.xml
deleted file mode 100644
index d86dbad..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ps/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: ps_AF -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt-rPT/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt-rPT/strings.xml
index a0d4564..2081dde 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt-rPT/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt-rPT/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: pt_PT -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt/strings.xml
index 3a24466..ebe70ac 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-pt/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: pt_BR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-qz/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-qz/strings.xml
index 57089df..2bad18d 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-qz/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-qz/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: qz_MM -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ro/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ro/strings.xml
index 445f1af..551623e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ro/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ro/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ro_RO -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ru/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ru/strings.xml
index 1105ec0..38e533e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ru/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ru/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ru_RU -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-si/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-si/strings.xml
index 2153d88..48b45a5 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-si/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-si/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: si_LK -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sk/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sk/strings.xml
index 2d1768d..a7b69ad 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sk/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sk/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sk_SK -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sl/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sl/strings.xml
index a8d2a68..2fde2cc 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sl/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sl/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sl_SI -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sn/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sn/strings.xml
index ed69640..a585ebb 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sn/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sn/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sn_ZW -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-so/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-so/strings.xml
deleted file mode 100644
index bf64cba..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-so/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: so_SO -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sq/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sq/strings.xml
index a225539..0004bf8 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sq/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sq/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sq_AL -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sr/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sr/strings.xml
index 47782d7..44a1069 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sr/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sr/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sr_RS -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sv/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sv/strings.xml
index 2eed928..3b69b62 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sv/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sv/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sv_SE -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sw/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sw/strings.xml
index 6dea5b8..9a632fd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sw/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-sw/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: sw_KE -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ta/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ta/strings.xml
index f8bfd1c..4f2782c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ta/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ta/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ta_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-te/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-te/strings.xml
index 241b213..87a1986 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-te/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-te/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: te_IN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tg/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tg/strings.xml
deleted file mode 100644
index 330b5d7..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tg/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: tg_TJ -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-th/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-th/strings.xml
index a420650..21c5c6b 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-th/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-th/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: th_TH -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tk/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tk/strings.xml
deleted file mode 100644
index abee0e9..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tk/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: tk_TM -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tl/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tl/strings.xml
index dadacb7..83fab2e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tl/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tl/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: tl_PH -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tr/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tr/strings.xml
index 755cf86..4b59dbd 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tr/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-tr/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: tr_TR -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uk/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uk/strings.xml
index bf3cc46..ba21f8c 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uk/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uk/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: uk_UA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ur/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ur/strings.xml
index 6d76f39..20afa47 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ur/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-ur/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: ur_PK -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uz/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uz/strings.xml
deleted file mode 100644
index 9d4667f..0000000
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-uz/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- See fburl.com/140690840 for information about i18n on Android -->
-<!-- @generated -->
-<!-- FB Locale: uz_UZ -->
-<resources exclude-from-buck-resource-map="true">
-</resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-vi/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-vi/strings.xml
index 706622a..d6f0df9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-vi/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-vi/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: vi_VN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-wo/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-wo/strings.xml
index b7de403..f052e42 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-wo/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-wo/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: wo_SN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rCN/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rCN/strings.xml
index c50c06c..d3c30bf 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rCN/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rCN/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: zh_CN -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rHK/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rHK/strings.xml
index 067865f..29bd2a9 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rHK/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rHK/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: zh_HK -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rTW/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rTW/strings.xml
index c56baa9..2e57ad0 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rTW/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zh-rTW/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: zh_TW -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zu/strings.xml b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zu/strings.xml
index 44cf81d..cf05696 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zu/strings.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/devsupport/values-zu/strings.xml
@@ -2,5 +2,6 @@
 <!-- See fburl.com/140690840 for information about i18n on Android -->
 <!-- @generated -->
 <!-- FB Locale: zu_ZA -->
+
 <resources exclude-from-buck-resource-map="true">
 </resources>
diff --git a/node_modules/react-native/ReactAndroid/src/main/res/views/uimanager/values/ids.xml b/node_modules/react-native/ReactAndroid/src/main/res/views/uimanager/values/ids.xml
index 6324b85..998cb3e 100644
--- a/node_modules/react-native/ReactAndroid/src/main/res/views/uimanager/values/ids.xml
+++ b/node_modules/react-native/ReactAndroid/src/main/res/views/uimanager/values/ids.xml
@@ -24,10 +24,7 @@
   <!-- tag is used to store accessibilityState -->
   <item type="id" name="accessibility_state"/>
 
-  <!--tag is used to store accessibilityStateExpanded -->
-  <item type="id" name="accessibility_state_expanded"/>
-
-  <!--tag is used to store accessibilityLabel tag-->
+  <!-- tag is used to store accessibilityLabel tag-->
   <item type="id" name="accessibility_label"/>
 
   <!-- tag is used to store accessibilityActions tag-->
diff --git a/node_modules/react-native/ReactCommon/React-Fabric.podspec b/node_modules/react-native/ReactCommon/React-Fabric.podspec
index 1a8e4eb..9c9d693 100644
--- a/node_modules/react-native/ReactCommon/React-Fabric.podspec
+++ b/node_modules/react-native/ReactCommon/React-Fabric.podspec
@@ -28,18 +28,13 @@ Pod::Spec.new do |s|
   s.summary                = "Fabric for React Native."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "dummyFile.cpp"
   s.pod_target_xcconfig = { "USE_HEADERMAP" => "YES",
                             "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }
 
-  if ENV['USE_FRAMEWORKS']
-    s.header_mappings_dir     = File.absolute_path('./')
-    s.module_name             = 'React_Fabric'
-  end
-
   s.dependency folly_dep_name, folly_version
   s.dependency "React-graphics", version
   s.dependency "React-jsiexecutor", version
@@ -47,19 +42,6 @@ Pod::Spec.new do |s|
   s.dependency "RCTTypeSafety", version
   s.dependency "ReactCommon/turbomodule/core", version
   s.dependency "React-jsi", version
-  s.dependency "React-logger"
-  s.dependency "glog"
-  s.dependency "DoubleConversion"
-  s.dependency "React-Core"
-  s.dependency "React-debug"
-  s.dependency "React-utils"
-  s.dependency "React-runtimescheduler"
-
-  if ENV["USE_HERMES"] == nil || ENV["USE_HERMES"] == "1"
-    s.dependency "hermes-engine"
-  else
-    s.dependency "React-jsi"
-  end
 
   s.subspec "animations" do |ss|
     ss.dependency             folly_dep_name, folly_version
@@ -67,6 +49,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/animations/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/animations/tests"
     ss.header_dir           = "react/renderer/animations"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "attributedstring" do |ss|
@@ -75,6 +58,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/attributedstring/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/attributedstring/tests"
     ss.header_dir           = "react/renderer/attributedstring"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "butter" do |ss|
@@ -83,39 +67,22 @@ Pod::Spec.new do |s|
     ss.source_files         = "butter/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "butter/tests"
     ss.header_dir           = "butter"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "config" do |ss|
     ss.source_files         = "react/config/*.{m,mm,cpp,h}"
     ss.header_dir           = "react/config"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\"" }
   end
 
   s.subspec "core" do |ss|
-    header_search_path = [
-      "\"$(PODS_ROOT)/boost\"",
-      "\"$(PODS_TARGET_SRCROOT)/ReactCommon\"",
-      "\"$(PODS_ROOT)/RCT-Folly\"",
-    ]
-
-    if ENV['USE_FRAMEWORKS']
-      header_search_path = header_search_path + [
-        "\"$(PODS_TARGET_SRCROOT)\"",
-        "\"$(PODS_ROOT)/DoubleConversion\"",
-        "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Codegen/React_Codegen.framework/Headers\"",
-        "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\"",
-        "\"$(PODS_TARGET_SRCROOT)/react/renderer/textlayoutmanager/platform/ios\"",
-        "\"$(PODS_TARGET_SRCROOT)/react/renderer/components/textinput/iostextinput\""
-      ]
-    end
-
     ss.dependency             folly_dep_name, folly_version
     ss.compiler_flags       = folly_compiler_flags + ' ' + boost_compiler_flags
     ss.source_files         = "react/renderer/core/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/core/tests"
     ss.header_dir           = "react/renderer/core"
-    ss.pod_target_xcconfig  = {
-      "HEADER_SEARCH_PATHS" => header_search_path.join(" ")
-    }
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "componentregistry" do |ss|
@@ -123,6 +90,7 @@ Pod::Spec.new do |s|
     ss.compiler_flags       = folly_compiler_flags
     ss.source_files         = "react/renderer/componentregistry/**/*.{m,mm,cpp,h}"
     ss.header_dir           = "react/renderer/componentregistry"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "componentregistrynative" do |ss|
@@ -130,6 +98,7 @@ Pod::Spec.new do |s|
     ss.compiler_flags       = folly_compiler_flags
     ss.source_files         = "react/renderer/componentregistry/native/**/*.{m,mm,cpp,h}"
     ss.header_dir           = "react/renderer/componentregistry/native"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "components" do |ss|
@@ -139,6 +108,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/activityindicator/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/activityindicator/tests"
       sss.header_dir           = "react/renderer/components/activityindicator"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "image" do |sss|
@@ -147,6 +117,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/image/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/image/tests"
       sss.header_dir           = "react/renderer/components/image"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "inputaccessory" do |sss|
@@ -155,6 +126,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/inputaccessory/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/inputaccessory/tests"
       sss.header_dir           = "react/renderer/components/inputaccessory"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "legacyviewmanagerinterop" do |sss|
@@ -163,7 +135,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/legacyviewmanagerinterop/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/legacyviewmanagerinterop/tests"
       sss.header_dir           = "react/renderer/components/legacyviewmanagerinterop"
-      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/Headers/Private/React-Core\"" }
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/Headers/Private/React-Core\"" }
     end
 
     ss.subspec "modal" do |sss|
@@ -172,13 +144,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/modal/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/modal/tests"
       sss.header_dir           = "react/renderer/components/modal"
-    end
-
-    ss.subspec "rncore" do |sss|
-      sss.dependency             folly_dep_name, folly_version
-      sss.compiler_flags       = folly_compiler_flags
-      sss.source_files         = "react/renderer/components/rncore/**/*.{m,mm,cpp,h}"
-      sss.header_dir           = "react/renderer/components/rncore"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "root" do |sss|
@@ -187,6 +153,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/root/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/root/tests"
       sss.header_dir           = "react/renderer/components/root"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "safeareaview" do |sss|
@@ -195,7 +162,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/safeareaview/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/safeareaview/tests"
       sss.header_dir           = "react/renderer/components/safeareaview"
-
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "scrollview" do |sss|
@@ -204,7 +171,17 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/scrollview/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/scrollview/tests"
       sss.header_dir           = "react/renderer/components/scrollview"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
+    end
 
+    ss.subspec "slider" do |sss|
+      sss.dependency             folly_dep_name, folly_version
+      sss.compiler_flags       = folly_compiler_flags
+      sss.source_files         = "react/renderer/components/slider/**/*.{m,mm,cpp,h}"
+      sss.exclude_files        = "react/renderer/components/slider/tests/**/*",
+                                 "react/renderer/components/slider/platform/android"
+      sss.header_dir           = "react/renderer/components/slider"
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "text" do |sss|
@@ -213,7 +190,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/text/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/text/tests"
       sss.header_dir           = "react/renderer/components/text"
-
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "textinput" do |sss|
@@ -222,7 +199,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/textinput/iostextinput/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/textinput/iostextinput/tests"
       sss.header_dir           = "react/renderer/components/iostextinput"
-
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "unimplementedview" do |sss|
@@ -231,7 +208,7 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/unimplementedview/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/unimplementedview/tests"
       sss.header_dir           = "react/renderer/components/unimplementedview"
-
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
 
     ss.subspec "view" do |sss|
@@ -241,23 +218,38 @@ Pod::Spec.new do |s|
       sss.source_files         = "react/renderer/components/view/**/*.{m,mm,cpp,h}"
       sss.exclude_files        = "react/renderer/components/view/tests"
       sss.header_dir           = "react/renderer/components/view"
-
+      sss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
     end
   end
 
+  s.subspec "debug_core" do |ss|
+    ss.dependency             folly_dep_name, folly_version
+    ss.compiler_flags       = folly_compiler_flags
+    ss.source_files         = "react/debug/**/*.{m,mm,cpp,h}"
+    ss.exclude_files        = "react/debug/tests"
+    ss.header_dir           = "react/debug"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
+  end
+
   s.subspec "debug_renderer" do |ss|
     ss.dependency             folly_dep_name, folly_version
     ss.compiler_flags       = folly_compiler_flags
     ss.source_files         = "react/renderer/debug/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/debug/tests"
     ss.header_dir           = "react/renderer/debug"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "imagemanager" do |ss|
+    ss.dependency             "React-RCTImage", version
     ss.dependency             folly_dep_name, folly_version
     ss.compiler_flags       = folly_compiler_flags
-    ss.source_files         = "react/renderer/imagemanager/*.{m,mm,cpp,h}"
+    ss.source_files         = "react/renderer/imagemanager/**/*.{m,mm,cpp,h}"
+    ss.exclude_files        = "react/renderer/imagemanager/tests",
+                              "react/renderer/imagemanager/platform/android",
+                              "react/renderer/imagemanager/platform/cxx"
     ss.header_dir           = "react/renderer/imagemanager"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "mapbuffer" do |ss|
@@ -266,6 +258,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/mapbuffer/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/mapbuffer/tests"
     ss.header_dir           = "react/renderer/mapbuffer"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "mounting" do |ss|
@@ -274,6 +267,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/mounting/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/mounting/tests"
     ss.header_dir           = "react/renderer/mounting"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "scheduler" do |ss|
@@ -281,6 +275,7 @@ Pod::Spec.new do |s|
     ss.compiler_flags       = folly_compiler_flags
     ss.source_files         = "react/renderer/scheduler/**/*.{m,mm,cpp,h}"
     ss.header_dir           = "react/renderer/scheduler"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "templateprocessor" do |ss|
@@ -289,6 +284,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/templateprocessor/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/templateprocessor/tests"
     ss.header_dir           = "react/renderer/templateprocessor"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "textlayoutmanager" do |ss|
@@ -301,6 +297,7 @@ Pod::Spec.new do |s|
                               "react/renderer/textlayoutmanager/platform/android",
                               "react/renderer/textlayoutmanager/platform/cxx"
     ss.header_dir           = "react/renderer/textlayoutmanager"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "uimanager" do |ss|
@@ -309,6 +306,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/uimanager/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/uimanager/tests"
     ss.header_dir           = "react/renderer/uimanager"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "telemetry" do |ss|
@@ -317,7 +315,7 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/telemetry/**/*.{m,mm,cpp,h}"
     ss.exclude_files        = "react/renderer/telemetry/tests"
     ss.header_dir           = "react/renderer/telemetry"
-
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"" }
   end
 
   s.subspec "leakchecker" do |ss|
@@ -326,6 +324,24 @@ Pod::Spec.new do |s|
     ss.source_files         = "react/renderer/leakchecker/**/*.{cpp,h}"
     ss.exclude_files        = "react/renderer/leakchecker/tests"
     ss.header_dir           = "react/renderer/leakchecker"
-    ss.pod_target_xcconfig  = { "GCC_WARN_PEDANTIC" => "YES" }
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"",
+                                "GCC_WARN_PEDANTIC" => "YES" }
   end
+
+  s.subspec "runtimescheduler" do |ss|
+    ss.dependency             folly_dep_name, folly_version
+    ss.compiler_flags       = folly_compiler_flags
+    ss.source_files         = "react/renderer/runtimescheduler/**/*.{cpp,h}"
+    ss.exclude_files        = "react/renderer/runtimescheduler/tests"
+    ss.header_dir           = "react/renderer/runtimescheduler"
+    ss.pod_target_xcconfig  = {"HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\"",
+                               "GCC_WARN_PEDANTIC" => "YES" }
+  end
+
+  s.subspec "utils" do |ss|
+    ss.source_files         = "react/utils/*.{m,mm,cpp,h}"
+    ss.header_dir           = "react/utils"
+    ss.pod_target_xcconfig  = { "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_ROOT)/RCT-Folly\""}
+  end
+
 end
diff --git a/node_modules/react-native/ReactCommon/React-rncore.podspec b/node_modules/react-native/ReactCommon/React-rncore.podspec
index 9ff023c..635c80e 100644
--- a/node_modules/react-native/ReactCommon/React-rncore.podspec
+++ b/node_modules/react-native/ReactCommon/React-rncore.podspec
@@ -16,26 +16,7 @@ else
   source[:tag] = "v#{version}"
 end
 
-# We are using two different paths for react native because of the way how js_srcs_dir and output_dir options are used
-# output_dir option usage was introduced in https://github.com/facebook/react-native/pull/36210
-# React-rncore.podspec is the only podspec in the project that uses this option
-# We should rethink this approach in T148704916
-
-# Relative path to react native from iOS project root (e.g. <ios-project-root>/../node_modules/react-native)
-react_native_dependency_path = ENV['REACT_NATIVE_PATH']
-# Relative path to react native from current podspec
-react_native_sources_path = '..'
-
-header_search_paths = [
-  "\"$(PODS_TARGET_SRCROOT)\"",
-  "\"$(PODS_TARGET_SRCROOT)/ReactCommon\"",
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths = header_search_paths.concat([
-    "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-  ])
-end
+react_native_path = ".."
 
 Pod::Spec.new do |s|
   s.name                   = "React-rncore"
@@ -43,20 +24,18 @@ Pod::Spec.new do |s|
   s.summary                = "Fabric for React Native."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "dummyFile.cpp"
   s.pod_target_xcconfig = { "USE_HEADERMAP" => "YES",
-                            "HEADER_SEARCH_PATHS" => header_search_paths.join(' '),
                             "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }
 
 
   use_react_native_codegen!(s, {
-    :react_native_path => react_native_sources_path,
-    :js_srcs_dir => "#{react_native_sources_path}/Libraries",
+    :react_native_path => react_native_path,
+    :js_srcs_dir => "#{react_native_path}/Libraries",
     :library_name => "rncore",
     :library_type => "components",
-    :output_dir => "#{react_native_dependency_path}/ReactCommon"
   })
 end
diff --git a/node_modules/react-native/ReactCommon/ReactCommon.podspec b/node_modules/react-native/ReactCommon/ReactCommon.podspec
index 8ae3b99..0d9792a 100644
--- a/node_modules/react-native/ReactCommon/ReactCommon.podspec
+++ b/node_modules/react-native/ReactCommon/ReactCommon.podspec
@@ -27,7 +27,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.header_dir             = "ReactCommon" # Use global header_dir for all subspecs for use_frameworks! compatibility
@@ -36,15 +36,13 @@ Pod::Spec.new do |s|
                                "USE_HEADERMAP" => "YES",
                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
                                "GCC_WARN_PEDANTIC" => "YES" }
-  if ENV['USE_FRAMEWORKS']
-    s.header_mappings_dir     = File.absolute_path("./")
-  end
 
   # TODO (T48588859): Restructure this target to align with dir structure: "react/nativemodule/..."
   # Note: Update this only when ready to minimize breaking changes.
   s.subspec "turbomodule" do |ss|
     ss.dependency "React-callinvoker", version
     ss.dependency "React-perflogger", version
+    ss.dependency "React-Core", version
     ss.dependency "React-cxxreact", version
     ss.dependency "React-jsi", version
     ss.dependency "RCT-Folly", folly_version
@@ -67,7 +65,22 @@ Pod::Spec.new do |s|
     end
 
     ss.subspec "core" do |sss|
-      sss.source_files = "react/nativemodule/core/ReactCommon/**/*.{cpp,h}"
+      sss.source_files = "react/nativemodule/core/ReactCommon/**/*.{cpp,h}",
+                         "react/nativemodule/core/platform/ios/**/*.{mm,cpp,h}"
+      excluded_files = ENV['USE_FRAMEWORKS'] == nil ?
+        "react/nativemodule/core/ReactCommon/LongLivedObject.h" :
+        "react/nativemodule/core/ReactCommon/{LongLivedObject,CallbackWrapper}.h"
+      sss.exclude_files = excluded_files
+    end
+
+    s.subspec "react_debug_core" do |sss|
+        sss.source_files = "react/debug/*.{cpp,h}"
+    end
+
+    ss.subspec "samples" do |sss|
+      sss.source_files = "react/nativemodule/samples/ReactCommon/**/*.{cpp,h}",
+                         "react/nativemodule/samples/platform/ios/**/*.{mm,cpp,h}"
+      sss.dependency "ReactCommon/turbomodule/core", version
     end
   end
 end
diff --git a/node_modules/react-native/ReactCommon/butter/BUCK b/node_modules/react-native/ReactCommon/butter/BUCK
index e1de1a5..58c92e8 100644
--- a/node_modules/react-native/ReactCommon/butter/BUCK
+++ b/node_modules/react-native/ReactCommon/butter/BUCK
@@ -14,6 +14,14 @@ APPLE_COMPILER_FLAGS = get_apple_compiler_flags()
 
 rn_xplat_cxx_library(
     name = "butter",
+    srcs = glob(
+        ["**/*.cpp"],
+        exclude = glob(["tests/**/*.cpp"]),
+    ),
+    headers = glob(
+        ["**/*.h"],
+        exclude = glob(["tests/**/*.h"]),
+    ),
     header_namespace = "",
     exported_headers = subdir_glob(
         [
@@ -39,9 +47,9 @@ rn_xplat_cxx_library(
     deps = [
         "//third-party/glog:glog",
         "//xplat/fbsystrace:fbsystrace",
+        "//xplat/folly:container_f14_hash",
         "//xplat/folly:memory",
         "//xplat/folly:shared_mutex",
         "//xplat/folly:small_vector",
-        "//xplat/folly/container:f14_hash",
     ],
 )
diff --git a/node_modules/react-native/ReactCommon/butter/function.h b/node_modules/react-native/ReactCommon/butter/function.h
deleted file mode 100644
index 7247524..0000000
--- a/node_modules/react-native/ReactCommon/butter/function.h
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <butter/butter.h>
-
-#if (                                            \
-    defined(BUTTER_FUNCTION_OVERRIDE_INCLUDE) && \
-    defined(BUTTER_FUNCTION_OVERRIDE))
-
-#include BUTTER_FUNCTION_OVERRIDE_INCLUDE
-
-#elif defined(BUTTER_USE_FOLLY_CONTAINERS)
-
-#include <folly/Function.h>
-
-#else
-
-#include <functional>
-
-#endif
-
-namespace facebook {
-namespace butter {
-
-#if (                                            \
-    defined(BUTTER_FUNCTION_OVERRIDE_INCLUDE) && \
-    defined(BUTTER_FUNCTION_OVERRIDE))
-
-template <typename... Ts>
-using function = BUTTER_FUNCTION_OVERRIDE<Ts...>;
-
-#elif defined(BUTTER_USE_FOLLY_CONTAINERS)
-
-template <typename... Ts>
-using function = folly::Function<Ts...>;
-
-#else
-
-template <typename... Ts>
-using function = std::function<Ts...>;
-
-#endif
-
-} // namespace butter
-} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/butter/map.h b/node_modules/react-native/ReactCommon/butter/map.h
index a5f6c66..09e87ae 100644
--- a/node_modules/react-native/ReactCommon/butter/map.h
+++ b/node_modules/react-native/ReactCommon/butter/map.h
@@ -23,9 +23,9 @@ namespace facebook {
 namespace butter {
 
 /*
- * Note: In Butter, `map` aliases to `unordered_map` because everyone agrees
- * that an *ordered* map is nonsense and was a huge mistake for standardization.
- * If you need an *ordered* map, feel free to introduce that as
+ * Note: In Butter, `map` aliases to `unorderd_map` because everyone agrees that
+ * an *ordered* map is nonsense and was a huge mistake for standardization. If
+ * you need an *ordered* map, feel free to introduce that as
  * `butter::ordered_map`.
  */
 
diff --git a/node_modules/react-native/ReactCommon/callinvoker/ReactCommon/SchedulerPriority.h b/node_modules/react-native/ReactCommon/butter/mutex.h
similarity index 54%
rename from node_modules/react-native/ReactCommon/callinvoker/ReactCommon/SchedulerPriority.h
rename to node_modules/react-native/ReactCommon/butter/mutex.h
index ffa1432..9071356 100644
--- a/node_modules/react-native/ReactCommon/callinvoker/ReactCommon/SchedulerPriority.h
+++ b/node_modules/react-native/ReactCommon/butter/mutex.h
@@ -7,18 +7,14 @@
 
 #pragma once
 
-#include <chrono>
+#include <folly/SharedMutex.h>
+#include <mutex>
+#include <shared_mutex>
 
 namespace facebook {
-namespace react {
+namespace butter {
 
-enum class SchedulerPriority : int {
-  ImmediatePriority = 1,
-  UserBlockingPriority = 2,
-  NormalPriority = 3,
-  LowPriority = 4,
-  IdlePriority = 5,
-};
+using shared_mutex = folly::SharedMutex;
 
-} // namespace react
+} // namespace butter
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/callinvoker/.clang-tidy b/node_modules/react-native/ReactCommon/callinvoker/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/callinvoker/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/callinvoker/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/callinvoker/BUCK b/node_modules/react-native/ReactCommon/callinvoker/BUCK
index 64cdb74..dda5b56 100644
--- a/node_modules/react-native/ReactCommon/callinvoker/BUCK
+++ b/node_modules/react-native/ReactCommon/callinvoker/BUCK
@@ -2,6 +2,7 @@ load("//tools/build_defs/oss:rn_defs.bzl", "ANDROID", "APPLE", "CXX", "rn_xplat_
 
 rn_xplat_cxx_library(
     name = "callinvoker",
+    srcs = glob(["**/*.cpp"]),
     header_namespace = "",
     exported_headers = subdir_glob(
         [
diff --git a/node_modules/react-native/ReactCommon/callinvoker/React-callinvoker.podspec b/node_modules/react-native/ReactCommon/callinvoker/React-callinvoker.podspec
index dbff635..7ade869 100644
--- a/node_modules/react-native/ReactCommon/callinvoker/React-callinvoker.podspec
+++ b/node_modules/react-native/ReactCommon/callinvoker/React-callinvoker.podspec
@@ -26,7 +26,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{cpp,h}"
diff --git a/node_modules/react-native/ReactCommon/callinvoker/ReactCommon/CallInvoker.h b/node_modules/react-native/ReactCommon/callinvoker/ReactCommon/CallInvoker.h
index 30996e8..ccca8b9 100644
--- a/node_modules/react-native/ReactCommon/callinvoker/ReactCommon/CallInvoker.h
+++ b/node_modules/react-native/ReactCommon/callinvoker/ReactCommon/CallInvoker.h
@@ -10,26 +10,17 @@
 #include <functional>
 #include <memory>
 
-#include "SchedulerPriority.h"
-
 namespace facebook {
 namespace react {
 
-using CallFunc = std::function<void()>;
-
 /**
  * An interface for a generic native-to-JS call invoker. See BridgeJSCallInvoker
  * for an implementation.
  */
 class CallInvoker {
  public:
-  virtual void invokeAsync(CallFunc &&func) = 0;
-  virtual void invokeAsync(SchedulerPriority /*priority*/, CallFunc &&func) {
-    // When call with priority is not implemented, fall back to a regular async
-    // execution
-    invokeAsync(std::move(func));
-  }
-  virtual void invokeSync(CallFunc &&func) = 0;
+  virtual void invokeAsync(std::function<void()> &&func) = 0;
+  virtual void invokeSync(std::function<void()> &&func) = 0;
   virtual ~CallInvoker() {}
 };
 
diff --git a/node_modules/react-native/ReactCommon/cxxreact/.clang-tidy b/node_modules/react-native/ReactCommon/cxxreact/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/cxxreact/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/cxxreact/BUCK b/node_modules/react-native/ReactCommon/cxxreact/BUCK
index 9c8a168..c22ce5b 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/BUCK
+++ b/node_modules/react-native/ReactCommon/cxxreact/BUCK
@@ -123,9 +123,6 @@ rn_xplat_cxx_library(
         for header in CXXREACT_PUBLIC_HEADERS
     ]),
     compiler_flags_pedantic = True,
-    exported_preprocessor_flags = [
-        "-DWITH_FBSYSTRACE=1",
-    ],
     fbandroid_preprocessor_flags = get_android_inspector_flags(),
     fbobjc_compiler_flags = get_apple_compiler_flags(),
     fbobjc_force_static = True,
@@ -137,6 +134,7 @@ rn_xplat_cxx_library(
     platforms = (ANDROID, APPLE, CXX),
     preprocessor_flags = [
         "-DLOG_TAG=\"ReactNative\"",
+        "-DWITH_FBSYSTRACE=1",
     ],
     tests = [
         react_native_xplat_target("cxxreact/tests:tests"),
diff --git a/node_modules/react-native/ReactCommon/cxxreact/CMakeLists.txt b/node_modules/react-native/ReactCommon/cxxreact/CMakeLists.txt
index d1316d7..5518b09 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/cxxreact/CMakeLists.txt
@@ -9,7 +9,6 @@ set(CMAKE_VERBOSE_MAKEFILE on)
 add_compile_options(
         -fexceptions
         -frtti
-        -std=c++17
         -Wno-unused-lambda-capture
         -DLOG_TAG=\"ReactNative\")
 
@@ -27,5 +26,4 @@ target_link_libraries(reactnative
         jsinspector
         logger
         reactperflogger
-        runtimeexecutor
-        react_debug)
+        runtimeexecutor)
diff --git a/node_modules/react-native/ReactCommon/cxxreact/Instance.cpp b/node_modules/react-native/ReactCommon/cxxreact/Instance.cpp
index 310a542..71bb151 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/Instance.cpp
+++ b/node_modules/react-native/ReactCommon/cxxreact/Instance.cpp
@@ -21,7 +21,6 @@
 #include <cxxreact/JSIndexedRAMBundle.h>
 #include <folly/MoveWrapper.h>
 #include <folly/json.h>
-#include <react/debug/react_native_assert.h>
 
 #include <glog/logging.h>
 
@@ -213,31 +212,26 @@ std::shared_ptr<CallInvoker> Instance::getJSCallInvoker() {
 }
 
 RuntimeExecutor Instance::getRuntimeExecutor() {
-  // HACK: RuntimeExecutor is not compatible with non-JSIExecutor, we return
-  // a null callback, which the caller should handle.
-  if (!getJavaScriptContext()) {
-    return nullptr;
-  }
-
   std::weak_ptr<NativeToJsBridge> weakNativeToJsBridge = nativeToJsBridge_;
-  return [weakNativeToJsBridge](
-             std::function<void(jsi::Runtime & runtime)> &&callback) {
-    if (auto strongNativeToJsBridge = weakNativeToJsBridge.lock()) {
-      strongNativeToJsBridge->runOnExecutorQueue(
-          [callback = std::move(callback)](JSExecutor *executor) {
-            // Assumes the underlying executor is a JSIExecutor
-            jsi::Runtime *runtime =
-                (jsi::Runtime *)executor->getJavaScriptContext();
-            try {
-              react_native_assert(runtime != nullptr);
-              callback(*runtime);
-              executor->flush();
-            } catch (jsi::JSError &originalError) {
-              handleJSError(*runtime, originalError, true);
-            }
-          });
-    }
-  };
+
+  auto runtimeExecutor =
+      [weakNativeToJsBridge](
+          std::function<void(jsi::Runtime & runtime)> &&callback) {
+        if (auto strongNativeToJsBridge = weakNativeToJsBridge.lock()) {
+          strongNativeToJsBridge->runOnExecutorQueue(
+              [callback = std::move(callback)](JSExecutor *executor) {
+                jsi::Runtime *runtime =
+                    (jsi::Runtime *)executor->getJavaScriptContext();
+                try {
+                  callback(*runtime);
+                  executor->flush();
+                } catch (jsi::JSError &originalError) {
+                  handleJSError(*runtime, originalError, true);
+                }
+              });
+        }
+      };
+  return runtimeExecutor;
 }
 
 std::shared_ptr<CallInvoker> Instance::getDecoratedNativeCallInvoker(
diff --git a/node_modules/react-native/ReactCommon/cxxreact/Instance.h b/node_modules/react-native/ReactCommon/cxxreact/Instance.h
index cf20a35..12bfd86 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/Instance.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/Instance.h
@@ -111,7 +111,7 @@ class RN_EXPORT Instance {
    *   When all queued NativeModule method calls are flushed by a call from
    *   Native -> JS, if that queue was non-zero in size, JsToNativeBridge
    *   dispatches onBatchComplete. When we turn our NativeModules to
-   *   TurboModules, there will be less and less pending NativeModule method
+   *   TurboModuels, there will be less and less pending NativeModule method
    *   calls, so onBatchComplete will not fire as often. Therefore, the bridge
    *   needs to know how many TurboModule async method calls have been completed
    *   since the last time the bridge was flushed. If this number is non-zero,
@@ -120,7 +120,7 @@ class RN_EXPORT Instance {
    * Why can't we just create and return a new native CallInvoker?
    *
    * - On Android, we have one NativeModule thread. That thread is created and
-   *   managed outside of NativeToJsBridge. On iOS, we have one MethodQueue per
+   *   managed outisde of NativeToJsBridge. On iOS, we have one MethodQueue per
    *   module. Those MethodQueues are also created and managed outside of
    *   NativeToJsBridge. Therefore, we need to pass in a CallInvoker that
    *   schedules work on the respective thread.
diff --git a/node_modules/react-native/ReactCommon/cxxreact/JSBigString.h b/node_modules/react-native/ReactCommon/cxxreact/JSBigString.h
index 691bb1a..bd7297e 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/JSBigString.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/JSBigString.h
@@ -126,11 +126,11 @@ class RN_EXPORT JSBigFileString : public JSBigString {
       const std::string &sourceURL);
 
  private:
-  int m_fd; // The file descriptor being mmapped
-  size_t m_size; // The size of the mmapped region
-  mutable off_t m_pageOff; // The offset in the mmapped region to the data.
-  off_t m_mapOff; // The offset in the file to the mmapped region.
-  mutable const char *m_data; // Pointer to the mmapped region.
+  int m_fd; // The file descriptor being mmaped
+  size_t m_size; // The size of the mmaped region
+  mutable off_t m_pageOff; // The offset in the mmaped region to the data.
+  off_t m_mapOff; // The offset in the file to the mmaped region.
+  mutable const char *m_data; // Pointer to the mmaped region.
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.cpp b/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.cpp
index 7f7bfd3..471d54c 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.cpp
+++ b/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.cpp
@@ -11,8 +11,6 @@
 
 #include <folly/Conv.h>
 
-#include <chrono>
-
 namespace facebook {
 namespace react {
 
@@ -25,15 +23,5 @@ std::string JSExecutor::getSyntheticBundlePath(
   return folly::to<std::string>("seg-", bundleId, ".js");
 }
 
-double JSExecutor::performanceNow() {
-  auto time = std::chrono::steady_clock::now();
-  auto duration = std::chrono::duration_cast<std::chrono::nanoseconds>(
-                      time.time_since_epoch())
-                      .count();
-
-  constexpr double NANOSECONDS_IN_MILLISECOND = 1000000.0;
-  return duration / NANOSECONDS_IN_MILLISECOND;
-}
-
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.h b/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.h
index 112426a..4d6e45f 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/JSExecutor.h
@@ -138,8 +138,6 @@ class RN_EXPORT JSExecutor {
   static std::string getSyntheticBundlePath(
       uint32_t bundleId,
       const std::string &bundlePath);
-
-  static double performanceNow();
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/cxxreact/MethodCall.cpp b/node_modules/react-native/ReactCommon/cxxreact/MethodCall.cpp
index c5e0681..d3e8433 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/MethodCall.cpp
+++ b/node_modules/react-native/ReactCommon/cxxreact/MethodCall.cpp
@@ -15,7 +15,7 @@ namespace react {
 
 #define REQUEST_MODULE_IDS 0
 #define REQUEST_METHOD_IDS 1
-#define REQUEST_PARAMS 2
+#define REQUEST_PARAMSS 2
 #define REQUEST_CALLID 3
 
 static const char *errorPrefix = "Malformed calls from JS: ";
@@ -30,14 +30,14 @@ std::vector<MethodCall> parseMethodCalls(folly::dynamic &&jsonData) {
         errorPrefix, "input isn't array but ", jsonData.typeName()));
   }
 
-  if (jsonData.size() < REQUEST_PARAMS + 1) {
+  if (jsonData.size() < REQUEST_PARAMSS + 1) {
     throw std::invalid_argument(
         folly::to<std::string>(errorPrefix, "size == ", jsonData.size()));
   }
 
   auto &moduleIds = jsonData[REQUEST_MODULE_IDS];
   auto &methodIds = jsonData[REQUEST_METHOD_IDS];
-  auto &params = jsonData[REQUEST_PARAMS];
+  auto &params = jsonData[REQUEST_PARAMSS];
   int callId = -1;
 
   if (!moduleIds.isArray() || !methodIds.isArray() || !params.isArray()) {
diff --git a/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.cpp b/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.cpp
index 962a84e..5a0221b 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.cpp
+++ b/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.cpp
@@ -92,7 +92,8 @@ std::vector<std::string> ModuleRegistry::moduleNames() {
   return names;
 }
 
-std::optional<ModuleConfig> ModuleRegistry::getConfig(const std::string &name) {
+folly::Optional<ModuleConfig> ModuleRegistry::getConfig(
+    const std::string &name) {
   SystraceSection s("ModuleRegistry::getConfig", "module", name);
 
   // Initialize modulesByName_
@@ -106,14 +107,14 @@ std::optional<ModuleConfig> ModuleRegistry::getConfig(const std::string &name) {
     if (unknownModules_.find(name) != unknownModules_.end()) {
       BridgeNativeModulePerfLogger::moduleJSRequireBeginningFail(name.c_str());
       BridgeNativeModulePerfLogger::moduleJSRequireEndingStart(name.c_str());
-      return std::nullopt;
+      return folly::none;
     }
 
     if (!moduleNotFoundCallback_) {
       unknownModules_.insert(name);
       BridgeNativeModulePerfLogger::moduleJSRequireBeginningFail(name.c_str());
       BridgeNativeModulePerfLogger::moduleJSRequireEndingStart(name.c_str());
-      return std::nullopt;
+      return folly::none;
     }
 
     BridgeNativeModulePerfLogger::moduleJSRequireBeginningEnd(name.c_str());
@@ -127,7 +128,7 @@ std::optional<ModuleConfig> ModuleRegistry::getConfig(const std::string &name) {
     if (!wasModuleRegisteredWithRegistry) {
       BridgeNativeModulePerfLogger::moduleJSRequireEndingStart(name.c_str());
       unknownModules_.insert(name);
-      return std::nullopt;
+      return folly::none;
     }
   } else {
     BridgeNativeModulePerfLogger::moduleJSRequireBeginningEnd(name.c_str());
@@ -186,7 +187,7 @@ std::optional<ModuleConfig> ModuleRegistry::getConfig(const std::string &name) {
 
   if (config.size() == 2 && config[1].empty()) {
     // no constants or methods
-    return std::nullopt;
+    return folly::none;
   } else {
     return ModuleConfig{index, std::move(config)};
   }
diff --git a/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.h b/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.h
index 55d9c0b..20e3067 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/ModuleRegistry.h
@@ -12,8 +12,8 @@
 #include <vector>
 
 #include <cxxreact/JSExecutor.h>
+#include <folly/Optional.h>
 #include <folly/dynamic.h>
-#include <optional>
 
 #ifndef RN_EXPORT
 #define RN_EXPORT __attribute__((visibility("default")))
@@ -47,7 +47,7 @@ class RN_EXPORT ModuleRegistry {
 
   std::vector<std::string> moduleNames();
 
-  std::optional<ModuleConfig> getConfig(const std::string &name);
+  folly::Optional<ModuleConfig> getConfig(const std::string &name);
 
   void callNativeMethod(
       unsigned int moduleId,
@@ -83,7 +83,7 @@ class RN_EXPORT ModuleRegistry {
 
   // Function will be called if a module was requested but was not found.
   // If the function returns true, ModuleRegistry will try to find the module
-  // again (assuming it's registered) If the function returns false,
+  // again (assuming it's registered) If the functon returns false,
   // ModuleRegistry will not try to find the module and return nullptr instead.
   ModuleNotFoundCallback moduleNotFoundCallback_;
 };
diff --git a/node_modules/react-native/ReactCommon/cxxreact/NativeModule.h b/node_modules/react-native/ReactCommon/cxxreact/NativeModule.h
index 5fa4397..a088f5b 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/NativeModule.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/NativeModule.h
@@ -10,8 +10,8 @@
 #include <string>
 #include <vector>
 
+#include <folly/Optional.h>
 #include <folly/dynamic.h>
-#include <optional>
 
 namespace facebook {
 namespace react {
@@ -25,7 +25,7 @@ struct MethodDescriptor {
       : name(std::move(n)), type(std::move(t)) {}
 };
 
-using MethodCallResult = std::optional<folly::dynamic>;
+using MethodCallResult = folly::Optional<folly::dynamic>;
 
 class NativeModule {
  public:
diff --git a/node_modules/react-native/ReactCommon/cxxreact/React-cxxreact.podspec b/node_modules/react-native/ReactCommon/cxxreact/React-cxxreact.podspec
index d455d2b..33910c9 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/React-cxxreact.podspec
+++ b/node_modules/react-native/ReactCommon/cxxreact/React-cxxreact.podspec
@@ -27,14 +27,13 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "*.{cpp,h}"
   s.exclude_files          = "SampleCxxModule.*"
   s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
-  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-runtimeexecutor/React_runtimeexecutor.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-debug/React_debug.framework/Headers\"",
-                               "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }
+  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\"" }
   s.header_dir             = "cxxreact"
 
   s.dependency "boost", "1.76.0"
@@ -47,7 +46,6 @@ Pod::Spec.new do |s|
   s.dependency "React-perflogger", version
   s.dependency "React-jsi", version
   s.dependency "React-logger", version
-  s.dependency "React-debug", version
 
   if ENV['USE_HERMES'] == nil || ENV['USE_HERMES'] == "1"
     s.dependency 'hermes-engine'
diff --git a/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.cpp b/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.cpp
index c154fcc..8746a19 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.cpp
+++ b/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.cpp
@@ -6,7 +6,6 @@
  */
 
 #include "ReactMarker.h"
-#include <cxxreact/JSExecutor.h>
 
 namespace facebook {
 namespace react {
@@ -17,9 +16,8 @@ namespace ReactMarker {
 #pragma clang diagnostic ignored "-Wglobal-constructors"
 #endif
 
-LogTaggedMarker logTaggedMarkerImpl = nullptr;
-LogTaggedMarker logTaggedMarkerBridgelessImpl = nullptr;
-GetAppStartTime getAppStartTimeImpl = nullptr;
+LogTaggedMarker logTaggedMarker = nullptr;
+LogTaggedMarker logTaggedMarkerBridgeless = nullptr;
 
 #if __clang__
 #pragma clang diagnostic pop
@@ -29,61 +27,10 @@ void logMarker(const ReactMarkerId markerId) {
   logTaggedMarker(markerId, nullptr);
 }
 
-void logTaggedMarker(const ReactMarkerId markerId, const char *tag) {
-  StartupLogger::getInstance().logStartupEvent(markerId);
-  logTaggedMarkerImpl(markerId, tag);
-}
-
 void logMarkerBridgeless(const ReactMarkerId markerId) {
   logTaggedMarkerBridgeless(markerId, nullptr);
 }
 
-void logTaggedMarkerBridgeless(const ReactMarkerId markerId, const char *tag) {
-  StartupLogger::getInstance().logStartupEvent(markerId);
-  logTaggedMarkerBridgelessImpl(markerId, tag);
-}
-
-StartupLogger &StartupLogger::getInstance() {
-  static StartupLogger instance;
-  return instance;
-}
-
-void StartupLogger::logStartupEvent(const ReactMarkerId markerId) {
-  auto now = JSExecutor::performanceNow();
-  switch (markerId) {
-    case ReactMarkerId::RUN_JS_BUNDLE_START:
-      if (runJSBundleStartTime == 0) {
-        runJSBundleStartTime = now;
-      }
-      return;
-
-    case ReactMarkerId::RUN_JS_BUNDLE_STOP:
-      if (runJSBundleEndTime == 0) {
-        runJSBundleEndTime = now;
-      }
-      return;
-
-    default:
-      return;
-  }
-}
-
-double StartupLogger::getAppStartTime() {
-  if (getAppStartTimeImpl == nullptr) {
-    return 0;
-  }
-
-  return getAppStartTimeImpl();
-}
-
-double StartupLogger::getRunJSBundleStartTime() {
-  return runJSBundleStartTime;
-}
-
-double StartupLogger::getRunJSBundleEndTime() {
-  return runJSBundleEndTime;
-}
-
 } // namespace ReactMarker
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.h b/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.h
index e0640ae..21d8c2a 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/ReactMarker.h
@@ -36,55 +36,21 @@ using LogTaggedMarker =
     std::function<void(const ReactMarkerId, const char *tag)>; // Bridge only
 using LogTaggedMarkerBridgeless =
     std::function<void(const ReactMarkerId, const char *tag)>;
-using GetAppStartTime = std::function<double()>;
 #else
 typedef void (
     *LogTaggedMarker)(const ReactMarkerId, const char *tag); // Bridge only
 typedef void (*LogTaggedMarkerBridgeless)(const ReactMarkerId, const char *tag);
-typedef double (*GetAppStartTime)();
 #endif
 
 #ifndef RN_EXPORT
 #define RN_EXPORT __attribute__((visibility("default")))
 #endif
 
-extern RN_EXPORT LogTaggedMarker logTaggedMarkerImpl; // Bridge only
-extern RN_EXPORT LogTaggedMarker logTaggedMarkerBridgelessImpl;
-extern RN_EXPORT GetAppStartTime getAppStartTimeImpl;
+extern RN_EXPORT LogTaggedMarker logTaggedMarker; // Bridge only
+extern RN_EXPORT LogTaggedMarker logTaggedMarkerBridgeless;
 
 extern RN_EXPORT void logMarker(const ReactMarkerId markerId); // Bridge only
-extern RN_EXPORT void logTaggedMarker(
-    const ReactMarkerId markerId,
-    const char *tag); // Bridge only
 extern RN_EXPORT void logMarkerBridgeless(const ReactMarkerId markerId);
-extern RN_EXPORT void logTaggedMarkerBridgeless(
-    const ReactMarkerId markerId,
-    const char *tag);
-extern RN_EXPORT double getAppStartTime();
-
-struct ReactMarkerEvent {
-  const ReactMarkerId markerId;
-  const char *tag;
-  double time;
-};
-
-class StartupLogger {
- public:
-  static StartupLogger &getInstance();
-
-  void logStartupEvent(const ReactMarker::ReactMarkerId markerId);
-  double getAppStartTime();
-  double getRunJSBundleStartTime();
-  double getRunJSBundleEndTime();
-
- private:
-  StartupLogger() = default;
-  StartupLogger(const StartupLogger &) = delete;
-  StartupLogger &operator=(const StartupLogger &) = delete;
-
-  double runJSBundleStartTime;
-  double runJSBundleEndTime;
-};
 
 } // namespace ReactMarker
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/cxxreact/ReactNativeVersion.h b/node_modules/react-native/ReactCommon/cxxreact/ReactNativeVersion.h
index 9d5e7bc..0a27282 100644
--- a/node_modules/react-native/ReactCommon/cxxreact/ReactNativeVersion.h
+++ b/node_modules/react-native/ReactCommon/cxxreact/ReactNativeVersion.h
@@ -16,8 +16,8 @@ namespace facebook::react {
 
 constexpr struct {
   int32_t Major = 0;
-  int32_t Minor = 72;
-  int32_t Patch = 3;
+  int32_t Minor = 71;
+  int32_t Patch = 12;
   std::string_view Prerelease = "";
 } ReactNativeVersion;
 
diff --git a/node_modules/react-native/ReactCommon/hermes/.clang-tidy b/node_modules/react-native/ReactCommon/hermes/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/hermes/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/hermes/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/hermes/React-hermes.podspec b/node_modules/react-native/ReactCommon/hermes/React-hermes.podspec
index 425ef3c..d29457e 100644
--- a/node_modules/react-native/ReactCommon/hermes/React-hermes.podspec
+++ b/node_modules/react-native/ReactCommon/hermes/React-hermes.podspec
@@ -30,7 +30,7 @@ Pod::Spec.new do |s|
   s.summary                = "Hermes engine for React Native"
   s.homepage               = "https://reactnative.dev/"
   s.license                = package['license']
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :osx => "10.14", :ios => "12.4" }
   s.source                 = source
   s.source_files           = "executor/*.{cpp,h}",
@@ -40,8 +40,7 @@ Pod::Spec.new do |s|
   s.public_header_files    = "executor/HermesExecutorFactory.h"
   s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
   s.pod_target_xcconfig    = {
-                               "HEADER_SEARCH_PATHS" => "\"${PODS_ROOT}/hermes-engine/destroot/include\" \"$(PODS_TARGET_SRCROOT)/..\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/libevent/include\"",
-                               "CLANG_CXX_LANGUAGE_STANDARD" => "c++17"
+                               "HEADER_SEARCH_PATHS" => "\"${PODS_ROOT}/hermes-engine/destroot/include\" \"$(PODS_TARGET_SRCROOT)/..\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/libevent/include\""
                              }.merge!(build_type == :debug ? { "GCC_PREPROCESSOR_DEFINITIONS" => "HERMES_ENABLE_DEBUGGER=1" } : {})
   s.header_dir             = "reacthermes"
   s.dependency "React-cxxreact", version
diff --git a/node_modules/react-native/ReactCommon/hermes/executor/CMakeLists.txt b/node_modules/react-native/ReactCommon/hermes/executor/CMakeLists.txt
index f63bd1e..10cf67f 100644
--- a/node_modules/react-native/ReactCommon/hermes/executor/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/hermes/executor/CMakeLists.txt
@@ -6,8 +6,6 @@
 cmake_minimum_required(VERSION 3.13)
 set(CMAKE_VERBOSE_MAKEFILE on)
 
-add_compile_options(-std=c++17)
-
 file(GLOB_RECURSE hermes_executor_SRC CONFIGURE_DEPENDS *.cpp)
 add_library(
         hermes_executor_common
@@ -19,6 +17,7 @@ target_link_libraries(hermes_executor_common
         jsireact
         hermes-engine::libhermes
         jsi
+        debug
         hermes_inspector
 )
 
@@ -28,10 +27,4 @@ if(${CMAKE_BUILD_TYPE} MATCHES Debug)
                 PRIVATE
                 -DHERMES_ENABLE_DEBUGGER=1
         )
-else()
-        target_compile_options(
-                hermes_executor_common
-                PRIVATE
-                -DNDEBUG
-        )
 endif()
diff --git a/node_modules/react-native/ReactCommon/hermes/executor/HermesExecutorFactory.cpp b/node_modules/react-native/ReactCommon/hermes/executor/HermesExecutorFactory.cpp
index 9d68c8c..500eac9 100644
--- a/node_modules/react-native/ReactCommon/hermes/executor/HermesExecutorFactory.cpp
+++ b/node_modules/react-native/ReactCommon/hermes/executor/HermesExecutorFactory.cpp
@@ -14,8 +14,10 @@
 #include <hermes/hermes.h>
 #include <jsi/decorator.h>
 
+#ifdef HERMES_ENABLE_DEBUGGER
 #include <hermes/inspector/RuntimeAdapter.h>
 #include <hermes/inspector/chrome/Registration.h>
+#endif
 
 #include "JSITracing.h"
 
@@ -27,6 +29,14 @@ namespace react {
 
 namespace {
 
+std::unique_ptr<HermesRuntime> makeHermesRuntimeSystraced(
+    const ::hermes::vm::RuntimeConfig &runtimeConfig) {
+  SystraceSection s("HermesExecutorFactory::makeHermesRuntimeSystraced");
+  return hermes::makeHermesRuntime(runtimeConfig);
+}
+
+#ifdef HERMES_ENABLE_DEBUGGER
+
 class HermesExecutorRuntimeAdapter
     : public facebook::hermes::inspector::RuntimeAdapter {
  public:
@@ -57,6 +67,8 @@ class HermesExecutorRuntimeAdapter
   std::shared_ptr<MessageQueueThread> thread_;
 };
 
+#endif
+
 struct ReentrancyCheck {
 // This is effectively a very subtle and complex assert, so only
 // include it in builds which would include asserts.
@@ -140,6 +152,7 @@ class DecoratedRuntime : public jsi::WithRuntimeDecorator<ReentrancyCheck> {
       const std::string &debuggerName)
       : jsi::WithRuntimeDecorator<ReentrancyCheck>(*runtime, reentrancyCheck_),
         runtime_(std::move(runtime)) {
+#ifdef HERMES_ENABLE_DEBUGGER
     enableDebugger_ = enableDebugger;
     if (enableDebugger_) {
       std::shared_ptr<HermesRuntime> rt(runtime_, &hermesRuntime);
@@ -148,12 +161,15 @@ class DecoratedRuntime : public jsi::WithRuntimeDecorator<ReentrancyCheck> {
       debugToken_ = facebook::hermes::inspector::chrome::enableDebugging(
           std::move(adapter), debuggerName);
     }
+#endif
   }
 
   ~DecoratedRuntime() {
+#ifdef HERMES_ENABLE_DEBUGGER
     if (enableDebugger_) {
       facebook::hermes::inspector::chrome::disableDebugging(debugToken_);
     }
+#endif
   }
 
  private:
@@ -166,8 +182,10 @@ class DecoratedRuntime : public jsi::WithRuntimeDecorator<ReentrancyCheck> {
 
   std::shared_ptr<Runtime> runtime_;
   ReentrancyCheck reentrancyCheck_;
+#ifdef HERMES_ENABLE_DEBUGGER
   bool enableDebugger_;
   facebook::hermes::inspector::chrome::DebugSessionToken debugToken_;
+#endif
 };
 
 } // namespace
@@ -183,12 +201,8 @@ void HermesExecutorFactory::setDebuggerName(const std::string &debuggerName) {
 std::unique_ptr<JSExecutor> HermesExecutorFactory::createJSExecutor(
     std::shared_ptr<ExecutorDelegate> delegate,
     std::shared_ptr<MessageQueueThread> jsQueue) {
-  std::unique_ptr<HermesRuntime> hermesRuntime;
-  {
-    SystraceSection s("makeHermesRuntime");
-    hermesRuntime = hermes::makeHermesRuntime(runtimeConfig_);
-  }
-
+  std::unique_ptr<HermesRuntime> hermesRuntime =
+      makeHermesRuntimeSystraced(runtimeConfig_);
   HermesRuntime &hermesRuntimeRef = *hermesRuntime;
   auto decoratedRuntime = std::make_shared<DecoratedRuntime>(
       std::move(hermesRuntime),
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/BUCK b/node_modules/react-native/ReactCommon/hermes/inspector/BUCK
index 7d8548f..53bbdb2 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/BUCK
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/BUCK
@@ -48,9 +48,7 @@ fb_xplat_cxx_library(
     exported_headers = CHROME_EXPORTED_HEADERS,
     compiler_flags = CFLAGS_BY_MODE[hermes_build_mode()],
     fbobjc_header_path_prefix = "hermes/inspector/chrome",
-    labels = [
-        "pfh:ReactNative_CommonInfrastructurePlaceholder",
-    ],
+    labels = [],
     macosx_tests_override = [],
     platforms = (ANDROID, APPLE, CXX, FBCODE, WINDOWS),
     tests = [":chrome-tests"],
@@ -64,7 +62,7 @@ fb_xplat_cxx_library(
         ":inspectorlib",
         "//third-party/glog:glog",
         "//xplat/folly:futures",
-        "//xplat/hermes/API:HermesAPIFullOrLean",
+        "//xplat/hermes/API:HermesAPI",
         "//xplat/jsi:JSIDynamic",
         "//xplat/jsi:jsi",
     ],
@@ -118,9 +116,7 @@ fb_xplat_cxx_library(
         "//fbandroid/libraries/fbjni:fbjni",
     ],
     fbobjc_header_path_prefix = "hermes/inspector/detail",
-    labels = [
-        "pfh:ReactNative_CommonInfrastructurePlaceholder",
-    ],
+    labels = [],
     macosx_tests_override = [],
     platforms = (ANDROID, APPLE, CXX, FBCODE, WINDOWS),
     tests = [":detail-tests"],
@@ -168,7 +164,7 @@ fb_xplat_cxx_binary(
     deps = [
         ":chrome",
         ":inspectorlib",
-        "//xplat/hermes/API:HermesAPIFullOrLean",
+        "//xplat/hermes/API:HermesAPI",
     ],
 )
 
@@ -196,9 +192,7 @@ fb_xplat_cxx_library(
     cxx_tests = [":inspector-tests"],
     exported_preprocessor_flags = get_hermes_shared_library_preprocessor_flags(),
     fbobjc_header_path_prefix = "hermes/inspector",
-    labels = [
-        "pfh:ReactNative_CommonInfrastructurePlaceholder",
-    ],
+    labels = [],
     macosx_tests_override = [],
     platforms = (ANDROID, APPLE, CXX, FBCODE, WINDOWS),
     visibility = [
@@ -209,7 +203,7 @@ fb_xplat_cxx_library(
         ":detail",
         "//third-party/glog:glog",
         "//xplat/folly:futures",
-        "//xplat/hermes/API:HermesAPIFullOrLean",
+        "//xplat/hermes/API:HermesAPI",
         "//xplat/jsi:jsi",
     ],
 )
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/CMakeLists.txt b/node_modules/react-native/ReactCommon/hermes/inspector/CMakeLists.txt
index c6a94c8..1b4c6a3 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/CMakeLists.txt
@@ -15,19 +15,11 @@ add_library(hermes_inspector
 target_compile_options(
         hermes_inspector
         PRIVATE
+        -DHERMES_ENABLE_DEBUGGER=1
         -DHERMES_INSPECTOR_FOLLY_KLUDGE=1
-        -std=c++17
         -fexceptions
 )
 
-if(${CMAKE_BUILD_TYPE} MATCHES Debug)
-        target_compile_options(
-                hermes_inspector
-                PRIVATE
-                -DHERMES_ENABLE_DEBUGGER=1
-        )
-endif()
-
 target_include_directories(hermes_inspector PUBLIC ${REACT_COMMON_DIR})
 target_link_libraries(hermes_inspector
         jsinspector
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/DEFS.bzl b/node_modules/react-native/ReactCommon/hermes/inspector/DEFS.bzl
index d56163c..bdd90c4 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/DEFS.bzl
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/DEFS.bzl
@@ -2,6 +2,6 @@ load("@fbsource//xplat/hermes/defs:hermes.bzl", "hermes_is_debugger_enabled")
 
 def hermes_inspector_dep_list():
     return [
-        "//xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:chrome",
-        "//xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:inspectorlib",
+        "//xplat/js/react-native-github/ReactCommon/hermes/inspector:chrome",
+        "//xplat/js/react-native-github/ReactCommon/hermes/inspector:inspectorlib",
     ] if hermes_is_debugger_enabled() else []
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.cpp b/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.cpp
index b3b1127..9aafecb 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.cpp
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.cpp
@@ -348,7 +348,7 @@ folly::Future<Unit> Inspector::executeIfEnabled(
 
 folly::Future<debugger::BreakpointInfo> Inspector::setBreakpoint(
     debugger::SourceLocation loc,
-    std::optional<std::string> condition) {
+    folly::Optional<std::string> condition) {
   auto promise = std::make_shared<folly::Promise<debugger::BreakpointInfo>>();
   // Automatically re-enable breakpoints since the user presumably wants this
   // to start triggering.
@@ -599,7 +599,7 @@ void Inspector::executeIfEnabledOnExecutor(
 
 void Inspector::setBreakpointOnExecutor(
     debugger::SourceLocation loc,
-    std::optional<std::string> condition,
+    folly::Optional<std::string> condition,
     std::shared_ptr<folly::Promise<debugger::BreakpointInfo>> promise) {
   std::lock_guard<std::mutex> lock(mutex_);
 
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.h b/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.h
index 672bfad..6484992 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/Inspector.h
@@ -15,6 +15,7 @@
 #include <unordered_map>
 
 #include <folly/Executor.h>
+#include <folly/Optional.h>
 #include <folly/Unit.h>
 #include <folly/futures/Future.h>
 #include <hermes/DebuggerAPI.h>
@@ -22,7 +23,6 @@
 #include <hermes/inspector/AsyncPauseState.h>
 #include <hermes/inspector/Exceptions.h>
 #include <hermes/inspector/RuntimeAdapter.h>
-#include <optional>
 
 namespace facebook {
 namespace hermes {
@@ -109,7 +109,7 @@ class Inspector : public facebook::hermes::debugger::EventObserver,
       std::shared_ptr<RuntimeAdapter> adapter,
       InspectorObserver &observer,
       bool pauseOnFirstStatement);
-  ~Inspector() override;
+  ~Inspector();
 
   /**
    * disable turns off the inspector. All of the subsequent methods will not do
@@ -164,7 +164,7 @@ class Inspector : public facebook::hermes::debugger::EventObserver,
    */
   folly::Future<facebook::hermes::debugger::BreakpointInfo> setBreakpoint(
       facebook::hermes::debugger::SourceLocation loc,
-      std::optional<std::string> condition = std::nullopt);
+      folly::Optional<std::string> condition = folly::none);
 
   folly::Future<folly::Unit> removeBreakpoint(
       facebook::hermes::debugger::BreakpointID loc);
@@ -176,7 +176,7 @@ class Inspector : public facebook::hermes::debugger::EventObserver,
 
   /**
    * resume and step methods are only valid when the VM is currently paused. The
-   * returned future succeeds when the VM resumes execution, or fails with an
+   * returned future suceeds when the VM resumes execution, or fails with an
    * InvalidStateException otherwise.
    */
   folly::Future<folly::Unit> resume();
@@ -186,7 +186,7 @@ class Inspector : public facebook::hermes::debugger::EventObserver,
 
   /**
    * pause can be issued at any time while the inspector is enabled. It requests
-   * the VM to asynchronously break execution. The returned future succeeds if
+   * the VM to asynchronously break execution. The returned future suceeds if
    * the VM can be paused in this state and fails with InvalidStateException if
    * otherwise.
    */
@@ -281,7 +281,7 @@ class Inspector : public facebook::hermes::debugger::EventObserver,
 
   void setBreakpointOnExecutor(
       debugger::SourceLocation loc,
-      std::optional<std::string> condition,
+      folly::Optional<std::string> condition,
       std::shared_ptr<
           folly::Promise<facebook::hermes::debugger::BreakpointInfo>> promise);
 
@@ -367,7 +367,7 @@ class Inspector : public facebook::hermes::debugger::EventObserver,
 
 /// Helper function that guards user code execution in a try-catch block.
 template <typename C, typename... A>
-std::optional<UserCallbackException> runUserCallback(C &cb, A &&...arg) {
+folly::Optional<UserCallbackException> runUserCallback(C &cb, A &&...arg) {
   try {
     cb(std::forward<A>(arg)...);
   } catch (const std::exception &e) {
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/InspectorState.h b/node_modules/react-native/ReactCommon/hermes/inspector/InspectorState.h
index 3552b5c..f5fac9e 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/InspectorState.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/InspectorState.h
@@ -184,7 +184,7 @@ class InspectorState::RunningDetached : public InspectorState {
   }
 
   RunningDetached(Inspector &inspector) : InspectorState(inspector) {}
-  ~RunningDetached() override {}
+  ~RunningDetached() {}
 
   std::pair<NextStatePtr, CommandPtr> didPause(MonitorLock &lock) override;
   std::pair<NextStatePtr, bool> enable() override;
@@ -211,7 +211,7 @@ class InspectorState::RunningWaitEnable : public InspectorState {
   }
 
   RunningWaitEnable(Inspector &inspector) : InspectorState(inspector) {}
-  ~RunningWaitEnable() override {}
+  ~RunningWaitEnable() {}
 
   std::pair<NextStatePtr, CommandPtr> didPause(MonitorLock &lock) override;
   std::pair<NextStatePtr, bool> enable() override;
@@ -260,7 +260,7 @@ class InspectorState::PausedWaitEnable : public InspectorState {
   }
 
   PausedWaitEnable(Inspector &inspector) : InspectorState(inspector) {}
-  ~PausedWaitEnable() override {}
+  ~PausedWaitEnable() {}
 
   std::pair<NextStatePtr, CommandPtr> didPause(MonitorLock &lock) override;
   std::pair<NextStatePtr, bool> enable() override;
@@ -306,7 +306,7 @@ class InspectorState::Running : public InspectorState {
   }
 
   Running(Inspector &inspector) : InspectorState(inspector) {}
-  ~Running() override {}
+  ~Running() {}
 
   void onEnter(InspectorState *prevState) override;
 
@@ -366,7 +366,7 @@ class InspectorState::Paused : public InspectorState {
   }
 
   Paused(Inspector &inspector) : InspectorState(inspector) {}
-  ~Paused() override {}
+  ~Paused() {}
 
   void onEnter(InspectorState *prevState) override;
 
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/README.md b/node_modules/react-native/ReactCommon/hermes/inspector/README.md
index 9531811..57b6658 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/README.md
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/README.md
@@ -17,23 +17,23 @@ can get debug logs to show even when tests are passing by running the test
 executable directly:
 
 ```
-$ buck build //xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:chrome-tests
-$ buck-out/gen/xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector/chrome-tests
+$ buck build //xplat/js/react-native-github/ReactCommon/hermes/inspector:chrome-tests
+$ buck-out/gen/js/react-native-github/ReactCommon/hermes/inspector/chrome-tests
 [...]
 ```
 
 You can use standard gtest filters to only execute a particular set of tests:
 
 ```
-$ buck-out/gen/xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector/chrome-tests \
+$ buck-out/gen/js/react-native-github/ReactCommon/hermes/inspector/chrome-tests \
     --gtest_filter='ConnectionTests.testSetBreakpoint'
 ```
 
 You can debug the tests using lldb or gdb:
 
 ```
-$ lldb buck-out/gen/xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector/chrome-tests
-$ gdb buck-out/gen/xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector/chrome-tests
+$ lldb buck-out/gen/js/react-native-github/ReactCommon/hermes/inspector/chrome-tests
+$ gdb buck-out/gen/js/react-native-github/ReactCommon/hermes/inspector/chrome-tests
 ```
 
 # Formatting
@@ -42,7 +42,7 @@ Make sure the code is formatted using the hermes clang-format rules before
 committing:
 
 ```
-$ xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector/tools/format
+$ xplat/js/react-native-github/ReactCommon/hermes/inspector/tools/format
 ```
 
 We follow the clang format rules used by the rest of the Hermes project.
@@ -53,7 +53,7 @@ To add support for a new Chrome DevTools protocol message, add the message you
 want to add to tools/message_types.txt, and re-run the message types generator:
 
 ```
-$ xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector/tools/run_msggen
+$ xplat/js/react-native-github/ReactCommon/hermes/inspector/tools/run_msggen
 ```
 
 This will generate C++ structs for the new message type in
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/RuntimeAdapter.h b/node_modules/react-native/ReactCommon/hermes/inspector/RuntimeAdapter.h
index 253c987..0e7f061 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/RuntimeAdapter.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/RuntimeAdapter.h
@@ -49,7 +49,7 @@ class INSPECTOR_EXPORT RuntimeAdapter {
   /// the ability to force the process to enter the Hermes interpreter loop
   /// soon. This is important because the inspector can only do a number of
   /// important operations (like manipulating breakpoints) within the context of
-  /// a Hermes interpreter loop.
+  /// a Hermes interperter loop.
   ///
   /// The default implementation does nothing.
   virtual void tickleJs();
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/Connection.cpp b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/Connection.cpp
index 2259d50..fbe0a3d 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/Connection.cpp
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/Connection.cpp
@@ -23,7 +23,6 @@
 #include <hermes/inspector/detail/SerialExecutor.h>
 #include <hermes/inspector/detail/Thread.h>
 #include <jsi/instrumentation.h>
-#include <optional>
 
 namespace facebook {
 namespace hermes {
@@ -668,7 +667,7 @@ void Connection::Impl::handle(
 void Connection::Impl::handle(
     const m::heapProfiler::GetObjectByHeapObjectIdRequest &req) {
   uint64_t objID = atoi(req.objectId.c_str());
-  std::optional<std::string> group = req.objectGroup;
+  folly::Optional<std::string> group = req.objectGroup;
   auto remoteObjPtr = std::make_shared<m::runtime::RemoteObject>();
 
   inspector_
@@ -783,7 +782,7 @@ namespace {
 class CallFunctionOnArgument {
  public:
   explicit CallFunctionOnArgument(
-      std::optional<m::runtime::RemoteObjectId> maybeObjectId)
+      folly::Optional<m::runtime::RemoteObjectId> maybeObjectId)
       : maybeObjectId_(std::move(maybeObjectId)) {}
 
   /// Computes the real value for this argument, which can be an object
@@ -815,7 +814,7 @@ class CallFunctionOnArgument {
     throw std::runtime_error("unknown object id " + objId);
   }
 
-  std::optional<m::runtime::RemoteObjectId> maybeObjectId_;
+  folly::Optional<m::runtime::RemoteObjectId> maybeObjectId_;
 };
 
 /// Functor that should be used to run the result of eval-ing a CallFunctionOn
@@ -877,7 +876,7 @@ class CallFunctionOnRunner {
 
   CallFunctionOnRunner(
       std::vector<CallFunctionOnArgument> thisAndArguments,
-      std::optional<m::runtime::ExecutionContextId> executionContextId)
+      folly::Optional<m::runtime::ExecutionContextId> executionContextId)
       : thisAndArguments_(std::move(thisAndArguments)),
         executionContextId_(std::move(executionContextId)) {}
 
@@ -910,7 +909,7 @@ class CallFunctionOnRunner {
   }
 
   std::vector<CallFunctionOnArgument> thisAndArguments_;
-  std::optional<m::runtime::ExecutionContextId> executionContextId_;
+  folly::Optional<m::runtime::ExecutionContextId> executionContextId_;
 };
 
 /*static*/ const char *CallFunctionOnRunner::kJsThisArgPlaceholder =
@@ -967,7 +966,7 @@ class CallFunctionOnBuilder {
   }
 
  private:
-  void addParams(const std::optional<std::vector<m::runtime::CallArgument>>
+  void addParams(const folly::Optional<std::vector<m::runtime::CallArgument>>
                      &maybeArguments) {
     if (maybeArguments) {
       for (const auto &ca : *maybeArguments) {
@@ -999,7 +998,7 @@ class CallFunctionOnBuilder {
   std::ostringstream out_;
 
   std::vector<CallFunctionOnArgument> thisAndArguments_;
-  std::optional<m::runtime::ExecutionContextId> executionContextId_;
+  folly::Optional<m::runtime::ExecutionContextId> executionContextId_;
 };
 
 } // namespace
@@ -1010,8 +1009,8 @@ void Connection::Impl::handle(const m::runtime::CallFunctionOnRequest &req) {
 
   auto validateAndParseRequest =
       [&expression, &runner](const m::runtime::CallFunctionOnRequest &req)
-      -> std::optional<std::string> {
-    if (req.objectId.has_value() == req.executionContextId.has_value()) {
+      -> folly::Optional<std::string> {
+    if (req.objectId.hasValue() == req.executionContextId.hasValue()) {
       return std::string(
           "The request must specify either object id or execution context id.");
     }
@@ -1050,6 +1049,7 @@ void Connection::Impl::handle(const m::runtime::CallFunctionOnRequest &req) {
            remoteObjPtr,
            objectGroup = req.objectGroup,
            jsThisId = req.objectId,
+           executionContextId = req.executionContextId,
            byValue = req.returnByValue.value_or(false),
            runner =
                std::move(runner)](const facebook::hermes::debugger::EvalResult
@@ -1091,7 +1091,7 @@ void Connection::Impl::handle(const m::runtime::CompileScriptRequest &req) {
       ->executeIfEnabled(
           "Runtime.compileScriptRequest",
           [this, req, resp](const debugger::ProgramState &state) {
-            if (req.executionContextId.has_value() &&
+            if (req.executionContextId.hasValue() &&
                 req.executionContextId.value() != kHermesExecutionContextId) {
               throw std::invalid_argument("Invalid execution context");
             }
@@ -1482,7 +1482,7 @@ void Connection::Impl::handle(
       ->executeIfEnabled(
           "Runtime.globalLexicalScopeNames",
           [req, resp](const debugger::ProgramState &state) {
-            if (req.executionContextId.has_value() &&
+            if (req.executionContextId.hasValue() &&
                 req.executionContextId.value() != kHermesExecutionContextId) {
               throw std::invalid_argument("Invalid execution context");
             }
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageConverters.h b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageConverters.h
index a60747f..d2f90a4 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageConverters.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageConverters.h
@@ -33,7 +33,7 @@ void setHermesLocation(
     const std::vector<std::string> &parsedScripts) {
   hermesLoc.line = chromeLoc.lineNumber + 1;
 
-  if (chromeLoc.columnNumber.has_value()) {
+  if (chromeLoc.columnNumber.hasValue()) {
     if (chromeLoc.columnNumber.value() == 0) {
       // TODO: When CDTP sends a column number of 0, we send Hermes a column
       // number of 1. For some reason, this causes Hermes to not be
@@ -44,9 +44,9 @@ void setHermesLocation(
     }
   }
 
-  if (chromeLoc.url.has_value()) {
+  if (chromeLoc.url.hasValue()) {
     hermesLoc.fileName = stripCachePrevention(chromeLoc.url.value());
-  } else if (chromeLoc.urlRegex.has_value()) {
+  } else if (chromeLoc.urlRegex.hasValue()) {
     const std::regex regex(stripCachePrevention(chromeLoc.urlRegex.value()));
     auto it = parsedScripts.rbegin();
 
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypes.h b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypes.h
index 61a4772..fb5e10d 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypes.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypes.h
@@ -1,13 +1,14 @@
 // Copyright (c) Meta Platforms, Inc. and affiliates. All Rights Reserved.
-// @generated SignedSource<<521cb6eba7e5df060b4836f0f60126b9>>
+// @generated SignedSource<<2bada3d9c303c840ddcc292c7ba52604>>
 
 #pragma once
 
 #include <hermes/inspector/chrome/MessageInterfaces.h>
 
-#include <optional>
 #include <vector>
 
+#include <folly/Optional.h>
+
 namespace facebook {
 namespace hermes {
 namespace inspector {
@@ -198,7 +199,7 @@ struct debugger::Location : public Serializable {
 
   runtime::ScriptId scriptId{};
   int lineNumber{};
-  std::optional<int> columnNumber;
+  folly::Optional<int> columnNumber;
 };
 
 struct runtime::RemoteObject : public Serializable {
@@ -207,12 +208,12 @@ struct runtime::RemoteObject : public Serializable {
   folly::dynamic toDynamic() const override;
 
   std::string type;
-  std::optional<std::string> subtype;
-  std::optional<std::string> className;
-  std::optional<folly::dynamic> value;
-  std::optional<runtime::UnserializableValue> unserializableValue;
-  std::optional<std::string> description;
-  std::optional<runtime::RemoteObjectId> objectId;
+  folly::Optional<std::string> subtype;
+  folly::Optional<std::string> className;
+  folly::Optional<folly::dynamic> value;
+  folly::Optional<runtime::UnserializableValue> unserializableValue;
+  folly::Optional<std::string> description;
+  folly::Optional<runtime::RemoteObjectId> objectId;
 };
 
 struct runtime::CallFrame : public Serializable {
@@ -232,7 +233,7 @@ struct runtime::StackTrace : public Serializable {
   explicit StackTrace(const folly::dynamic &obj);
   folly::dynamic toDynamic() const override;
 
-  std::optional<std::string> description;
+  folly::Optional<std::string> description;
   std::vector<runtime::CallFrame> callFrames;
   std::unique_ptr<runtime::StackTrace> parent;
 };
@@ -246,11 +247,11 @@ struct runtime::ExceptionDetails : public Serializable {
   std::string text;
   int lineNumber{};
   int columnNumber{};
-  std::optional<runtime::ScriptId> scriptId;
-  std::optional<std::string> url;
-  std::optional<runtime::StackTrace> stackTrace;
-  std::optional<runtime::RemoteObject> exception;
-  std::optional<runtime::ExecutionContextId> executionContextId;
+  folly::Optional<runtime::ScriptId> scriptId;
+  folly::Optional<std::string> url;
+  folly::Optional<runtime::StackTrace> stackTrace;
+  folly::Optional<runtime::RemoteObject> exception;
+  folly::Optional<runtime::ExecutionContextId> executionContextId;
 };
 
 struct debugger::Scope : public Serializable {
@@ -260,9 +261,9 @@ struct debugger::Scope : public Serializable {
 
   std::string type;
   runtime::RemoteObject object{};
-  std::optional<std::string> name;
-  std::optional<debugger::Location> startLocation;
-  std::optional<debugger::Location> endLocation;
+  folly::Optional<std::string> name;
+  folly::Optional<debugger::Location> startLocation;
+  folly::Optional<debugger::Location> endLocation;
 };
 
 struct debugger::CallFrame : public Serializable {
@@ -272,12 +273,12 @@ struct debugger::CallFrame : public Serializable {
 
   debugger::CallFrameId callFrameId{};
   std::string functionName;
-  std::optional<debugger::Location> functionLocation;
+  folly::Optional<debugger::Location> functionLocation;
   debugger::Location location{};
   std::string url;
   std::vector<debugger::Scope> scopeChain;
   runtime::RemoteObject thisObj{};
-  std::optional<runtime::RemoteObject> returnValue;
+  folly::Optional<runtime::RemoteObject> returnValue;
 };
 
 struct heapProfiler::SamplingHeapProfileNode : public Serializable {
@@ -326,10 +327,10 @@ struct profiler::ProfileNode : public Serializable {
 
   int id{};
   runtime::CallFrame callFrame{};
-  std::optional<int> hitCount;
-  std::optional<std::vector<int>> children;
-  std::optional<std::string> deoptReason;
-  std::optional<std::vector<profiler::PositionTickInfo>> positionTicks;
+  folly::Optional<int> hitCount;
+  folly::Optional<std::vector<int>> children;
+  folly::Optional<std::string> deoptReason;
+  folly::Optional<std::vector<profiler::PositionTickInfo>> positionTicks;
 };
 
 struct profiler::Profile : public Serializable {
@@ -340,8 +341,8 @@ struct profiler::Profile : public Serializable {
   std::vector<profiler::ProfileNode> nodes;
   double startTime{};
   double endTime{};
-  std::optional<std::vector<int>> samples;
-  std::optional<std::vector<int>> timeDeltas;
+  folly::Optional<std::vector<int>> samples;
+  folly::Optional<std::vector<int>> timeDeltas;
 };
 
 struct runtime::CallArgument : public Serializable {
@@ -349,9 +350,9 @@ struct runtime::CallArgument : public Serializable {
   explicit CallArgument(const folly::dynamic &obj);
   folly::dynamic toDynamic() const override;
 
-  std::optional<folly::dynamic> value;
-  std::optional<runtime::UnserializableValue> unserializableValue;
-  std::optional<runtime::RemoteObjectId> objectId;
+  folly::Optional<folly::dynamic> value;
+  folly::Optional<runtime::UnserializableValue> unserializableValue;
+  folly::Optional<runtime::RemoteObjectId> objectId;
 };
 
 struct runtime::ExecutionContextDescription : public Serializable {
@@ -362,7 +363,7 @@ struct runtime::ExecutionContextDescription : public Serializable {
   runtime::ExecutionContextId id{};
   std::string origin;
   std::string name;
-  std::optional<folly::dynamic> auxData;
+  folly::Optional<folly::dynamic> auxData;
 };
 
 struct runtime::PropertyDescriptor : public Serializable {
@@ -371,15 +372,15 @@ struct runtime::PropertyDescriptor : public Serializable {
   folly::dynamic toDynamic() const override;
 
   std::string name;
-  std::optional<runtime::RemoteObject> value;
-  std::optional<bool> writable;
-  std::optional<runtime::RemoteObject> get;
-  std::optional<runtime::RemoteObject> set;
+  folly::Optional<runtime::RemoteObject> value;
+  folly::Optional<bool> writable;
+  folly::Optional<runtime::RemoteObject> get;
+  folly::Optional<runtime::RemoteObject> set;
   bool configurable{};
   bool enumerable{};
-  std::optional<bool> wasThrown;
-  std::optional<bool> isOwn;
-  std::optional<runtime::RemoteObject> symbol;
+  folly::Optional<bool> wasThrown;
+  folly::Optional<bool> isOwn;
+  folly::Optional<runtime::RemoteObject> symbol;
 };
 
 struct runtime::InternalPropertyDescriptor : public Serializable {
@@ -388,7 +389,7 @@ struct runtime::InternalPropertyDescriptor : public Serializable {
   folly::dynamic toDynamic() const override;
 
   std::string name;
-  std::optional<runtime::RemoteObject> value;
+  folly::Optional<runtime::RemoteObject> value;
 };
 
 /// Requests
@@ -399,7 +400,7 @@ struct UnknownRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<folly::dynamic> params;
+  folly::Optional<folly::dynamic> params;
 };
 
 struct debugger::DisableRequest : public Request {
@@ -427,11 +428,11 @@ struct debugger::EvaluateOnCallFrameRequest : public Request {
 
   debugger::CallFrameId callFrameId{};
   std::string expression;
-  std::optional<std::string> objectGroup;
-  std::optional<bool> includeCommandLineAPI;
-  std::optional<bool> silent;
-  std::optional<bool> returnByValue;
-  std::optional<bool> throwOnSideEffect;
+  folly::Optional<std::string> objectGroup;
+  folly::Optional<bool> includeCommandLineAPI;
+  folly::Optional<bool> silent;
+  folly::Optional<bool> returnByValue;
+  folly::Optional<bool> throwOnSideEffect;
 };
 
 struct debugger::PauseRequest : public Request {
@@ -459,7 +460,7 @@ struct debugger::ResumeRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<bool> terminateOnResume;
+  folly::Optional<bool> terminateOnResume;
 };
 
 struct debugger::SetBreakpointRequest : public Request {
@@ -470,7 +471,7 @@ struct debugger::SetBreakpointRequest : public Request {
   void accept(RequestHandler &handler) const override;
 
   debugger::Location location{};
-  std::optional<std::string> condition;
+  folly::Optional<std::string> condition;
 };
 
 struct debugger::SetBreakpointByUrlRequest : public Request {
@@ -481,11 +482,11 @@ struct debugger::SetBreakpointByUrlRequest : public Request {
   void accept(RequestHandler &handler) const override;
 
   int lineNumber{};
-  std::optional<std::string> url;
-  std::optional<std::string> urlRegex;
-  std::optional<std::string> scriptHash;
-  std::optional<int> columnNumber;
-  std::optional<std::string> condition;
+  folly::Optional<std::string> url;
+  folly::Optional<std::string> urlRegex;
+  folly::Optional<std::string> scriptHash;
+  folly::Optional<int> columnNumber;
+  folly::Optional<std::string> condition;
 };
 
 struct debugger::SetBreakpointsActiveRequest : public Request {
@@ -568,7 +569,7 @@ struct heapProfiler::GetObjectByHeapObjectIdRequest : public Request {
   void accept(RequestHandler &handler) const override;
 
   heapProfiler::HeapSnapshotObjectId objectId{};
-  std::optional<std::string> objectGroup;
+  folly::Optional<std::string> objectGroup;
 };
 
 struct heapProfiler::StartSamplingRequest : public Request {
@@ -578,7 +579,7 @@ struct heapProfiler::StartSamplingRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<double> samplingInterval;
+  folly::Optional<double> samplingInterval;
 };
 
 struct heapProfiler::StartTrackingHeapObjectsRequest : public Request {
@@ -588,7 +589,7 @@ struct heapProfiler::StartTrackingHeapObjectsRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<bool> trackAllocations;
+  folly::Optional<bool> trackAllocations;
 };
 
 struct heapProfiler::StopSamplingRequest : public Request {
@@ -606,9 +607,9 @@ struct heapProfiler::StopTrackingHeapObjectsRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<bool> reportProgress;
-  std::optional<bool> treatGlobalObjectsAsRoots;
-  std::optional<bool> captureNumericValue;
+  folly::Optional<bool> reportProgress;
+  folly::Optional<bool> treatGlobalObjectsAsRoots;
+  folly::Optional<bool> captureNumericValue;
 };
 
 struct heapProfiler::TakeHeapSnapshotRequest : public Request {
@@ -618,9 +619,9 @@ struct heapProfiler::TakeHeapSnapshotRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<bool> reportProgress;
-  std::optional<bool> treatGlobalObjectsAsRoots;
-  std::optional<bool> captureNumericValue;
+  folly::Optional<bool> reportProgress;
+  folly::Optional<bool> treatGlobalObjectsAsRoots;
+  folly::Optional<bool> captureNumericValue;
 };
 
 struct profiler::StartRequest : public Request {
@@ -647,14 +648,14 @@ struct runtime::CallFunctionOnRequest : public Request {
   void accept(RequestHandler &handler) const override;
 
   std::string functionDeclaration;
-  std::optional<runtime::RemoteObjectId> objectId;
-  std::optional<std::vector<runtime::CallArgument>> arguments;
-  std::optional<bool> silent;
-  std::optional<bool> returnByValue;
-  std::optional<bool> userGesture;
-  std::optional<bool> awaitPromise;
-  std::optional<runtime::ExecutionContextId> executionContextId;
-  std::optional<std::string> objectGroup;
+  folly::Optional<runtime::RemoteObjectId> objectId;
+  folly::Optional<std::vector<runtime::CallArgument>> arguments;
+  folly::Optional<bool> silent;
+  folly::Optional<bool> returnByValue;
+  folly::Optional<bool> userGesture;
+  folly::Optional<bool> awaitPromise;
+  folly::Optional<runtime::ExecutionContextId> executionContextId;
+  folly::Optional<std::string> objectGroup;
 };
 
 struct runtime::CompileScriptRequest : public Request {
@@ -667,7 +668,7 @@ struct runtime::CompileScriptRequest : public Request {
   std::string expression;
   std::string sourceURL;
   bool persistScript{};
-  std::optional<runtime::ExecutionContextId> executionContextId;
+  folly::Optional<runtime::ExecutionContextId> executionContextId;
 };
 
 struct runtime::EvaluateRequest : public Request {
@@ -678,13 +679,13 @@ struct runtime::EvaluateRequest : public Request {
   void accept(RequestHandler &handler) const override;
 
   std::string expression;
-  std::optional<std::string> objectGroup;
-  std::optional<bool> includeCommandLineAPI;
-  std::optional<bool> silent;
-  std::optional<runtime::ExecutionContextId> contextId;
-  std::optional<bool> returnByValue;
-  std::optional<bool> userGesture;
-  std::optional<bool> awaitPromise;
+  folly::Optional<std::string> objectGroup;
+  folly::Optional<bool> includeCommandLineAPI;
+  folly::Optional<bool> silent;
+  folly::Optional<runtime::ExecutionContextId> contextId;
+  folly::Optional<bool> returnByValue;
+  folly::Optional<bool> userGesture;
+  folly::Optional<bool> awaitPromise;
 };
 
 struct runtime::GetHeapUsageRequest : public Request {
@@ -703,7 +704,7 @@ struct runtime::GetPropertiesRequest : public Request {
   void accept(RequestHandler &handler) const override;
 
   runtime::RemoteObjectId objectId{};
-  std::optional<bool> ownProperties;
+  folly::Optional<bool> ownProperties;
 };
 
 struct runtime::GlobalLexicalScopeNamesRequest : public Request {
@@ -713,7 +714,7 @@ struct runtime::GlobalLexicalScopeNamesRequest : public Request {
   folly::dynamic toDynamic() const override;
   void accept(RequestHandler &handler) const override;
 
-  std::optional<runtime::ExecutionContextId> executionContextId;
+  folly::Optional<runtime::ExecutionContextId> executionContextId;
 };
 
 struct runtime::RunIfWaitingForDebuggerRequest : public Request {
@@ -732,7 +733,7 @@ struct ErrorResponse : public Response {
 
   int code;
   std::string message;
-  std::optional<folly::dynamic> data;
+  folly::Optional<folly::dynamic> data;
 };
 
 struct OkResponse : public Response {
@@ -747,7 +748,7 @@ struct debugger::EvaluateOnCallFrameResponse : public Response {
   folly::dynamic toDynamic() const override;
 
   runtime::RemoteObject result{};
-  std::optional<runtime::ExceptionDetails> exceptionDetails;
+  folly::Optional<runtime::ExceptionDetails> exceptionDetails;
 };
 
 struct debugger::SetBreakpointResponse : public Response {
@@ -814,7 +815,7 @@ struct runtime::CallFunctionOnResponse : public Response {
   folly::dynamic toDynamic() const override;
 
   runtime::RemoteObject result{};
-  std::optional<runtime::ExceptionDetails> exceptionDetails;
+  folly::Optional<runtime::ExceptionDetails> exceptionDetails;
 };
 
 struct runtime::CompileScriptResponse : public Response {
@@ -822,8 +823,8 @@ struct runtime::CompileScriptResponse : public Response {
   explicit CompileScriptResponse(const folly::dynamic &obj);
   folly::dynamic toDynamic() const override;
 
-  std::optional<runtime::ScriptId> scriptId;
-  std::optional<runtime::ExceptionDetails> exceptionDetails;
+  folly::Optional<runtime::ScriptId> scriptId;
+  folly::Optional<runtime::ExceptionDetails> exceptionDetails;
 };
 
 struct runtime::EvaluateResponse : public Response {
@@ -832,7 +833,7 @@ struct runtime::EvaluateResponse : public Response {
   folly::dynamic toDynamic() const override;
 
   runtime::RemoteObject result{};
-  std::optional<runtime::ExceptionDetails> exceptionDetails;
+  folly::Optional<runtime::ExceptionDetails> exceptionDetails;
 };
 
 struct runtime::GetHeapUsageResponse : public Response {
@@ -850,9 +851,9 @@ struct runtime::GetPropertiesResponse : public Response {
   folly::dynamic toDynamic() const override;
 
   std::vector<runtime::PropertyDescriptor> result;
-  std::optional<std::vector<runtime::InternalPropertyDescriptor>>
+  folly::Optional<std::vector<runtime::InternalPropertyDescriptor>>
       internalProperties;
-  std::optional<runtime::ExceptionDetails> exceptionDetails;
+  folly::Optional<runtime::ExceptionDetails> exceptionDetails;
 };
 
 struct runtime::GlobalLexicalScopeNamesResponse : public Response {
@@ -880,9 +881,9 @@ struct debugger::PausedNotification : public Notification {
 
   std::vector<debugger::CallFrame> callFrames;
   std::string reason;
-  std::optional<folly::dynamic> data;
-  std::optional<std::vector<std::string>> hitBreakpoints;
-  std::optional<runtime::StackTrace> asyncStackTrace;
+  folly::Optional<folly::dynamic> data;
+  folly::Optional<std::vector<std::string>> hitBreakpoints;
+  folly::Optional<runtime::StackTrace> asyncStackTrace;
 };
 
 struct debugger::ResumedNotification : public Notification {
@@ -904,11 +905,11 @@ struct debugger::ScriptParsedNotification : public Notification {
   int endColumn{};
   runtime::ExecutionContextId executionContextId{};
   std::string hash;
-  std::optional<folly::dynamic> executionContextAuxData;
-  std::optional<std::string> sourceMapURL;
-  std::optional<bool> hasSourceURL;
-  std::optional<bool> isModule;
-  std::optional<int> length;
+  folly::Optional<folly::dynamic> executionContextAuxData;
+  folly::Optional<std::string> sourceMapURL;
+  folly::Optional<bool> hasSourceURL;
+  folly::Optional<bool> isModule;
+  folly::Optional<int> length;
 };
 
 struct heapProfiler::AddHeapSnapshotChunkNotification : public Notification {
@@ -944,7 +945,7 @@ struct heapProfiler::ReportHeapSnapshotProgressNotification
 
   int done{};
   int total{};
-  std::optional<bool> finished;
+  folly::Optional<bool> finished;
 };
 
 struct runtime::ConsoleAPICalledNotification : public Notification {
@@ -956,7 +957,7 @@ struct runtime::ConsoleAPICalledNotification : public Notification {
   std::vector<runtime::RemoteObject> args;
   runtime::ExecutionContextId executionContextId{};
   runtime::Timestamp timestamp{};
-  std::optional<runtime::StackTrace> stackTrace;
+  folly::Optional<runtime::StackTrace> stackTrace;
 };
 
 struct runtime::ExecutionContextCreatedNotification : public Notification {
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypesInlines.h b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypesInlines.h
index 54a2f6f..2f6bff4 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypesInlines.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/MessageTypesInlines.h
@@ -10,7 +10,6 @@
 #include <hermes/inspector/chrome/MessageInterfaces.h>
 
 #include <memory>
-#include <optional>
 #include <type_traits>
 
 namespace facebook {
@@ -22,7 +21,7 @@ namespace message {
 using dynamic = folly::dynamic;
 
 template <typename T>
-using optional = std::optional<T>;
+using optional = folly::Optional<T>;
 
 template <typename>
 struct is_vector : std::false_type {};
@@ -91,7 +90,7 @@ void assign(optional<T> &lhs, const dynamic &obj, const U &key) {
   if (it != obj.items().end()) {
     lhs = valueFromDynamic<T>(it->second);
   } else {
-    lhs.reset();
+    lhs.clear();
   }
 }
 
@@ -137,7 +136,7 @@ void put(dynamic &obj, const K &key, const V &value) {
 
 template <typename K, typename V>
 void put(dynamic &obj, const K &key, const optional<V> &optValue) {
-  if (optValue.has_value()) {
+  if (optValue.hasValue()) {
     obj[key] = valueToDynamic(optValue.value());
   } else {
     obj.erase(key);
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/ConnectionTests.cpp b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/ConnectionTests.cpp
index 1338154..64d29f5 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/ConnectionTests.cpp
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/ConnectionTests.cpp
@@ -23,7 +23,6 @@
 #include <hermes/hermes.h>
 #include <hermes/inspector/chrome/MessageTypes.h>
 #include <jsi/instrumentation.h>
-#include <optional>
 
 namespace facebook {
 namespace hermes {
@@ -182,7 +181,7 @@ void expectCallFrames(
       EXPECT_EQ(frame.scopeChain.size(), info.scopeCount);
 
       for (int j = 0; j < info.scopeCount; j++) {
-        EXPECT_TRUE(frame.scopeChain[j].object.objectId.has_value());
+        EXPECT_TRUE(frame.scopeChain[j].object.objectId.hasValue());
       }
     }
 
@@ -251,7 +250,7 @@ m::debugger::ScriptParsedNotification expectScriptParsed(
   EXPECT_GT(note.scriptId.size(), 0);
 
   if (sourceMapURL.empty()) {
-    EXPECT_FALSE(note.sourceMapURL.has_value());
+    EXPECT_FALSE(note.sourceMapURL.hasValue());
   } else {
     EXPECT_EQ(note.sourceMapURL.value(), sourceMapURL);
   }
@@ -305,7 +304,7 @@ void expectEvalResponse(
   EXPECT_EQ(resp.id, id);
   EXPECT_EQ(resp.result.type, "string");
   EXPECT_EQ(resp.result.value, expectedValue);
-  EXPECT_FALSE(resp.exceptionDetails.has_value());
+  EXPECT_FALSE(resp.exceptionDetails.hasValue());
 }
 
 void expectEvalResponse(SyncConnection &conn, int id, bool expectedValue) {
@@ -315,7 +314,7 @@ void expectEvalResponse(SyncConnection &conn, int id, bool expectedValue) {
   EXPECT_EQ(resp.id, id);
   EXPECT_EQ(resp.result.type, "boolean");
   EXPECT_EQ(resp.result.value, expectedValue);
-  EXPECT_FALSE(resp.exceptionDetails.has_value());
+  EXPECT_FALSE(resp.exceptionDetails.hasValue());
 }
 
 void expectEvalResponse(SyncConnection &conn, int id, int expectedValue) {
@@ -325,7 +324,7 @@ void expectEvalResponse(SyncConnection &conn, int id, int expectedValue) {
   EXPECT_EQ(resp.id, id);
   EXPECT_EQ(resp.result.type, "number");
   EXPECT_EQ(resp.result.value, expectedValue);
-  EXPECT_FALSE(resp.exceptionDetails.has_value());
+  EXPECT_FALSE(resp.exceptionDetails.hasValue());
 }
 
 void expectEvalException(
@@ -337,7 +336,7 @@ void expectEvalException(
       expectResponse<m::debugger::EvaluateOnCallFrameResponse>(conn, id);
 
   EXPECT_EQ(resp.id, id);
-  EXPECT_TRUE(resp.exceptionDetails.has_value());
+  EXPECT_TRUE(resp.exceptionDetails.hasValue());
 
   m::runtime::ExceptionDetails &details = resp.exceptionDetails.value();
   EXPECT_EQ(details.text, exceptionText);
@@ -345,7 +344,7 @@ void expectEvalException(
   // TODO: Hermes doesn't seem to populate the line number for the exception?
   EXPECT_EQ(details.lineNumber, 0);
 
-  EXPECT_TRUE(details.stackTrace.has_value());
+  EXPECT_TRUE(details.stackTrace.hasValue());
 
   m::runtime::StackTrace &stackTrace = details.stackTrace.value();
   EXPECT_EQ(stackTrace.callFrames.size(), infos.size());
@@ -382,9 +381,9 @@ struct PropInfo {
   }
 
   std::string type;
-  std::optional<std::string> subtype;
-  std::optional<folly::dynamic> value;
-  std::optional<std::string> unserializableValue;
+  folly::Optional<std::string> subtype;
+  folly::Optional<folly::dynamic> value;
+  folly::Optional<std::string> unserializableValue;
 };
 
 std::unordered_map<std::string, std::string> expectProps(
@@ -413,23 +412,23 @@ std::unordered_map<std::string, std::string> expectProps(
     if (infoIt != infos.end()) {
       const PropInfo &info = infoIt->second;
 
-      EXPECT_TRUE(desc.value.has_value());
+      EXPECT_TRUE(desc.value.hasValue());
 
       m::runtime::RemoteObject &remoteObj = desc.value.value();
       EXPECT_EQ(remoteObj.type, info.type);
 
-      if (info.subtype.has_value()) {
-        EXPECT_TRUE(remoteObj.subtype.has_value());
+      if (info.subtype.hasValue()) {
+        EXPECT_TRUE(remoteObj.subtype.hasValue());
         EXPECT_EQ(remoteObj.subtype.value(), info.subtype.value());
       }
 
-      if (info.value.has_value()) {
-        EXPECT_TRUE(remoteObj.value.has_value());
+      if (info.value.hasValue()) {
+        EXPECT_TRUE(remoteObj.value.hasValue());
         EXPECT_EQ(remoteObj.value.value(), info.value.value());
       }
 
-      if (info.unserializableValue.has_value()) {
-        EXPECT_TRUE(remoteObj.unserializableValue.has_value());
+      if (info.unserializableValue.hasValue()) {
+        EXPECT_TRUE(remoteObj.unserializableValue.hasValue());
         EXPECT_EQ(
             remoteObj.unserializableValue.value(),
             info.unserializableValue.value());
@@ -437,7 +436,7 @@ std::unordered_map<std::string, std::string> expectProps(
 
       if ((info.type == "object" && info.subtype != "null") ||
           info.type == "function") {
-        EXPECT_TRUE(remoteObj.objectId.has_value());
+        EXPECT_TRUE(remoteObj.objectId.hasValue());
         objectIds[desc.name] = remoteObj.objectId.value();
       }
     }
@@ -455,9 +454,9 @@ void expectEvalResponse(
 
   EXPECT_EQ(resp.id, id);
   EXPECT_EQ(resp.result.type, "object");
-  EXPECT_FALSE(resp.exceptionDetails.has_value());
+  EXPECT_FALSE(resp.exceptionDetails.hasValue());
 
-  EXPECT_TRUE(resp.result.objectId.has_value());
+  EXPECT_TRUE(resp.result.objectId.hasValue());
   expectProps(conn, id + 1, resp.result.objectId.value(), infos);
 }
 
@@ -1008,7 +1007,7 @@ TEST(ConnectionTests, testSetBreakpointConditional) {
   m::debugger::SetBreakpointByUrlRequest req0;
   req0.id = msgId++;
   req0.lineNumber = 4;
-  req0.condition = std::optional<std::string>("throw Error('Boom!')");
+  req0.condition = folly::Optional<std::string>("throw Error('Boom!')");
   conn.send(req0.toJson());
 
   expectBreakpointResponse(conn, req0.id, 4, 4);
@@ -1016,7 +1015,7 @@ TEST(ConnectionTests, testSetBreakpointConditional) {
   m::debugger::SetBreakpointByUrlRequest req1;
   req1.id = msgId++;
   req1.lineNumber = 5;
-  req1.condition = std::optional<std::string>("b === a");
+  req1.condition = folly::Optional<std::string>("b === a");
   conn.send(req1.toJson());
 
   expectBreakpointResponse(conn, req1.id, 5, 5);
@@ -1024,7 +1023,7 @@ TEST(ConnectionTests, testSetBreakpointConditional) {
   m::debugger::SetBreakpointByUrlRequest req2;
   req2.id = msgId++;
   req2.lineNumber = 6;
-  req2.condition = std::optional<std::string>("c === 5");
+  req2.condition = folly::Optional<std::string>("c === 5");
   conn.send(req2.toJson());
 
   expectBreakpointResponse(conn, req2.id, 6, 6);
@@ -1322,7 +1321,7 @@ TEST(ConnectionTests, testRuntimeEvaluateReturnByValue) {
   auto resp =
       expectResponse<m::debugger::EvaluateOnCallFrameResponse>(conn, msgId);
   EXPECT_EQ(resp.result.type, "object");
-  ASSERT_TRUE(resp.result.value.has_value());
+  ASSERT_TRUE(resp.result.value.hasValue());
   EXPECT_EQ(folly::toJson(resp.result.value.value()), object);
 
   // [3] exit run loop
@@ -1485,7 +1484,7 @@ TEST(ConnectionTests, testGetProperties) {
       conn, "other", {{"bar", 17, 3}, {"foo", 19, 2}, {"global", 23, 1}});
 
   auto &scopeObj = pausedNote.callFrames.at(1).scopeChain.at(0).object;
-  EXPECT_TRUE(scopeObj.objectId.has_value());
+  EXPECT_TRUE(scopeObj.objectId.hasValue());
   std::string scopeObjId = scopeObj.objectId.value();
   objIds.push_back(scopeObjId);
 
@@ -1964,7 +1963,7 @@ TEST(ConnectionTests, testScopeVariables) {
   req.objectId = globalScopeObject.objectId.value();
   conn.send(req.toJson());
   auto resp = expectResponse<m::runtime::GetPropertiesResponse>(conn, req.id);
-  std::unordered_map<std::string, std::optional<m::runtime::RemoteObject>>
+  std::unordered_map<std::string, folly::Optional<m::runtime::RemoteObject>>
       globalProperties;
   for (auto propertyDescriptor : resp.result) {
     globalProperties[propertyDescriptor.name] = propertyDescriptor.value;
@@ -1973,20 +1972,20 @@ TEST(ConnectionTests, testScopeVariables) {
 
   // globalString should be of type "string" and have value "global-string".
   EXPECT_EQ(globalProperties.count("globalString"), 1);
-  EXPECT_TRUE(globalProperties["globalString"].has_value());
+  EXPECT_TRUE(globalProperties["globalString"].hasValue());
   EXPECT_EQ(globalProperties["globalString"].value().type, "string");
   EXPECT_EQ(
       globalProperties["globalString"].value().value.value(), "global-string");
 
   // func should be of type "function".
   EXPECT_EQ(globalProperties.count("func"), 1);
-  EXPECT_TRUE(globalProperties["func"].has_value());
+  EXPECT_TRUE(globalProperties["func"].hasValue());
   EXPECT_EQ(globalProperties["func"].value().type, "function");
 
   // globalObject should be of type "object" with "number" and "bool"
   // properties.
   EXPECT_EQ(globalProperties.count("globalObject"), 1);
-  EXPECT_TRUE(globalProperties["globalObject"].has_value());
+  EXPECT_TRUE(globalProperties["globalObject"].hasValue());
   EXPECT_EQ(globalProperties["globalObject"].value().type, "object");
   expectProps(
       conn,
@@ -2077,7 +2076,7 @@ TEST(ConnectionTests, testRuntimeCallFunctionOnObject) {
   /// ensures that \p objId has all of the expected properties; Returns the
   /// runtime::RemoteObjectId for the "self_ref" property (which must exist).
   auto verifyObjShape = [&](const m::runtime::RemoteObjectId &objId)
-      -> std::optional<std::string> {
+      -> folly::Optional<std::string> {
     auto objProps = expectProps(conn, msgId++, objId, expectedPropInfos);
     EXPECT_TRUE(objProps.count("__proto__"));
     auto objPropIt = objProps.find("self_ref");
@@ -2134,7 +2133,7 @@ TEST(ConnectionTests, testRuntimeCallFunctionOnExecutionContext) {
     req.objectId = objId;
     conn.send(req.toJson());
     auto resp = expectResponse<m::runtime::GetPropertiesResponse>(conn, req.id);
-    std::unordered_map<std::string, std::optional<m::runtime::RemoteObject>>
+    std::unordered_map<std::string, folly::Optional<m::runtime::RemoteObject>>
         properties;
     for (auto propertyDescriptor : resp.result) {
       properties[propertyDescriptor.name] = propertyDescriptor.value;
@@ -2203,18 +2202,18 @@ TEST(ConnectionTests, testRuntimeCallFunctionOnExecutionContext) {
       // and it should have a value.
       ASSERT_TRUE(it->second) << test.propName;
 
-      if (it->second->value.has_value()) {
+      if (it->second->value.hasValue()) {
         // the property has a value, so make sure that's what's being expected.
         auto actual = it->second->value;
         auto expected = test.callArg.value;
-        ASSERT_TRUE(expected.has_value()) << test.propName;
+        ASSERT_TRUE(expected.hasValue()) << test.propName;
         EXPECT_EQ(*actual, *expected) << test.propName;
-      } else if (it->second->unserializableValue.has_value()) {
+      } else if (it->second->unserializableValue.hasValue()) {
         // the property has an unserializable value, so make sure that's what's
         // being expected.
         auto actual = it->second->unserializableValue;
         auto expected = test.callArg.unserializableValue;
-        ASSERT_TRUE(expected.has_value()) << test.propName;
+        ASSERT_TRUE(expected.hasValue()) << test.propName;
         EXPECT_EQ(*actual, *expected) << test.propName;
       } else {
         FAIL() << "No value or unserializable value in " << test.propName;
@@ -2354,7 +2353,7 @@ TEST(ConnectionTests, testThisObject) {
   req.objectId = globalThisObj.objectId.value();
   conn.send(req.toJson());
   auto resp = expectResponse<m::runtime::GetPropertiesResponse>(conn, req.id);
-  std::unordered_map<std::string, std::optional<m::runtime::RemoteObject>>
+  std::unordered_map<std::string, folly::Optional<m::runtime::RemoteObject>>
       properties;
   for (auto propertyDescriptor : resp.result) {
     properties[propertyDescriptor.name] = propertyDescriptor.value;
@@ -2362,7 +2361,7 @@ TEST(ConnectionTests, testThisObject) {
 
   // globalString should be of type "string" and have value "global-string".
   EXPECT_EQ(properties.count("globalString"), 1);
-  EXPECT_TRUE(properties["globalString"].has_value());
+  EXPECT_TRUE(properties["globalString"].hasValue());
   EXPECT_EQ(properties["globalString"].value().type, "string");
   EXPECT_EQ(properties["globalString"].value().value.value(), "global-string");
 
@@ -2614,7 +2613,7 @@ TEST(ConnectionTests, canBreakOnScriptsWithSourceMap) {
   auto note = expectNotification<m::debugger::PausedNotification>(conn);
   ASSERT_FALSE(asyncRuntime.hasStoredValue());
   EXPECT_EQ(note.reason, "other");
-  ASSERT_TRUE(note.hitBreakpoints.has_value());
+  ASSERT_TRUE(note.hitBreakpoints.hasValue());
   ASSERT_EQ(note.hitBreakpoints->size(), 1);
   EXPECT_EQ(note.hitBreakpoints->at(0), bpId);
 
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/MessageTests.cpp b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/MessageTests.cpp
index c8a94d6..dae6513 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/MessageTests.cpp
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/MessageTests.cpp
@@ -56,10 +56,10 @@ TEST(MessageTests, testDeserializeSomeFieldsInRequest) {
   EXPECT_EQ(req.id, 10);
   EXPECT_EQ(req.method, "Debugger.setBreakpointByUrl");
   EXPECT_EQ(req.lineNumber, 42);
-  EXPECT_FALSE(req.columnNumber.has_value());
-  EXPECT_FALSE(req.condition.has_value());
+  EXPECT_FALSE(req.columnNumber.hasValue());
+  EXPECT_FALSE(req.condition.hasValue());
   EXPECT_EQ(req.url, "http://example.com");
-  EXPECT_FALSE(req.urlRegex.has_value());
+  EXPECT_FALSE(req.urlRegex.hasValue());
 }
 
 TEST(MessageTests, testSerializeAllFieldsInRequest) {
@@ -329,12 +329,12 @@ TEST(MessageTests, testDeserializeNotification) {
 
   debugger::Location &startLocation = scope.startLocation.value();
   EXPECT_EQ(startLocation.lineNumber, 1);
-  EXPECT_FALSE(startLocation.columnNumber.has_value());
+  EXPECT_FALSE(startLocation.columnNumber.hasValue());
   EXPECT_EQ(startLocation.scriptId, "script1");
 
   debugger::Location &endLocation = scope.endLocation.value();
   EXPECT_EQ(endLocation.lineNumber, 2);
-  EXPECT_FALSE(endLocation.columnNumber.has_value());
+  EXPECT_FALSE(endLocation.columnNumber.hasValue());
   EXPECT_EQ(endLocation.scriptId, "script2");
 }
 
@@ -550,11 +550,11 @@ TEST(MessageTests, testEvaluateOnCallFrameRequestMinimal) {
   EXPECT_EQ(resolvedReq->callFrameId, deserializedReq.callFrameId);
   EXPECT_EQ(resolvedReq->expression, deserializedReq.expression);
 
-  EXPECT_FALSE(resolvedReq->objectGroup.has_value());
-  EXPECT_FALSE(resolvedReq->includeCommandLineAPI.has_value());
-  EXPECT_FALSE(resolvedReq->silent.has_value());
-  EXPECT_FALSE(resolvedReq->returnByValue.has_value());
-  EXPECT_FALSE(resolvedReq->throwOnSideEffect.has_value());
+  EXPECT_FALSE(resolvedReq->objectGroup.hasValue());
+  EXPECT_FALSE(resolvedReq->includeCommandLineAPI.hasValue());
+  EXPECT_FALSE(resolvedReq->silent.hasValue());
+  EXPECT_FALSE(resolvedReq->returnByValue.hasValue());
+  EXPECT_FALSE(resolvedReq->throwOnSideEffect.hasValue());
 }
 
 TEST(MessageTests, testEvaluateOnCallFrameRequestFull) {
@@ -593,11 +593,11 @@ TEST(MessageTests, testEvaluateOnCallFrameRequestFull) {
   EXPECT_EQ(resolvedReq->callFrameId, "42");
   EXPECT_EQ(resolvedReq->expression, "Foo Bar");
 
-  EXPECT_TRUE(resolvedReq->objectGroup.has_value());
-  EXPECT_TRUE(resolvedReq->includeCommandLineAPI.has_value());
-  EXPECT_TRUE(resolvedReq->silent.has_value());
-  EXPECT_TRUE(resolvedReq->returnByValue.has_value());
-  EXPECT_TRUE(resolvedReq->throwOnSideEffect.has_value());
+  EXPECT_TRUE(resolvedReq->objectGroup.hasValue());
+  EXPECT_TRUE(resolvedReq->includeCommandLineAPI.hasValue());
+  EXPECT_TRUE(resolvedReq->silent.hasValue());
+  EXPECT_TRUE(resolvedReq->returnByValue.hasValue());
+  EXPECT_TRUE(resolvedReq->throwOnSideEffect.hasValue());
 
   EXPECT_TRUE(resolvedReq->objectGroup.value() == "FooBarGroup");
   EXPECT_TRUE(resolvedReq->includeCommandLineAPI.value() == false);
@@ -761,7 +761,7 @@ TEST(MessageTests, testSetBreakpointRequestMinimal) {
   EXPECT_EQ(resolvedReq->location.lineNumber, 2);
   EXPECT_EQ(resolvedReq->location.columnNumber, 3);
 
-  EXPECT_FALSE(resolvedReq->condition.has_value());
+  EXPECT_FALSE(resolvedReq->condition.hasValue());
 
   EXPECT_EQ(resolvedReq->id, deserializedReq.id);
   EXPECT_EQ(resolvedReq->method, deserializedReq.method);
@@ -810,7 +810,7 @@ TEST(MessageTests, testSetBreakpointRequestFull) {
   EXPECT_EQ(resolvedReq->location.lineNumber, 2);
   EXPECT_EQ(resolvedReq->location.columnNumber, 3);
 
-  EXPECT_TRUE(resolvedReq->condition.has_value());
+  EXPECT_TRUE(resolvedReq->condition.hasValue());
   EXPECT_EQ(resolvedReq->condition.value(), "FooBarCondition");
 
   EXPECT_EQ(resolvedReq->id, deserializedReq.id);
@@ -853,10 +853,10 @@ TEST(MessageTests, testSetBreakpointByUrlRequestMinimal) {
   EXPECT_EQ(resolvedReq->method, "Debugger.setBreakpointByUrl");
   EXPECT_EQ(resolvedReq->lineNumber, 2);
 
-  EXPECT_FALSE(resolvedReq->condition.has_value());
-  EXPECT_FALSE(resolvedReq->columnNumber.has_value());
-  EXPECT_FALSE(resolvedReq->url.has_value());
-  EXPECT_FALSE(resolvedReq->urlRegex.has_value());
+  EXPECT_FALSE(resolvedReq->condition.hasValue());
+  EXPECT_FALSE(resolvedReq->columnNumber.hasValue());
+  EXPECT_FALSE(resolvedReq->url.hasValue());
+  EXPECT_FALSE(resolvedReq->urlRegex.hasValue());
 
   EXPECT_EQ(resolvedReq->id, deserializedReq.id);
   EXPECT_EQ(resolvedReq->method, deserializedReq.method);
@@ -896,13 +896,13 @@ TEST(MessageTests, testSetBreakpointByUrlRequestFull) {
   EXPECT_EQ(resolvedReq->method, "Debugger.setBreakpointByUrl");
   EXPECT_EQ(resolvedReq->lineNumber, 2);
 
-  EXPECT_TRUE(resolvedReq->condition.has_value());
+  EXPECT_TRUE(resolvedReq->condition.hasValue());
   EXPECT_EQ(resolvedReq->condition.value(), "foo == 42");
-  EXPECT_TRUE(resolvedReq->columnNumber.has_value());
+  EXPECT_TRUE(resolvedReq->columnNumber.hasValue());
   EXPECT_EQ(resolvedReq->columnNumber.value(), 3);
-  EXPECT_TRUE(resolvedReq->url.has_value());
+  EXPECT_TRUE(resolvedReq->url.hasValue());
   EXPECT_EQ(resolvedReq->url.value(), "http://example.com/example.js");
-  EXPECT_TRUE(resolvedReq->urlRegex.has_value());
+  EXPECT_TRUE(resolvedReq->urlRegex.hasValue());
   EXPECT_EQ(resolvedReq->urlRegex.value(), "http://example.com/.*");
 
   EXPECT_EQ(resolvedReq->id, deserializedReq.id);
@@ -955,7 +955,7 @@ TEST(MessageTests, testSetInstrumentationBreakpointRequest) {
       "id": 1,
       "method": "Debugger.setInstrumentationBreakpoint",
       "params": {
-        "instrumentation": "TODO: THIS SHOULD NOT BE ACCEPTED BY ENUM"
+        "instrumentation": "TODO: THIS SHOUD NOT BE ACCEPTED BY ENUM"
       }
     }
   )";
@@ -977,8 +977,7 @@ TEST(MessageTests, testSetInstrumentationBreakpointRequest) {
   EXPECT_EQ(resolvedReq->id, 1);
   EXPECT_EQ(resolvedReq->method, "Debugger.setInstrumentationBreakpoint");
   EXPECT_EQ(
-      resolvedReq->instrumentation,
-      "TODO: THIS SHOULD NOT BE ACCEPTED BY ENUM");
+      resolvedReq->instrumentation, "TODO: THIS SHOUD NOT BE ACCEPTED BY ENUM");
 
   EXPECT_EQ(resolvedReq->id, deserializedReq.id);
   EXPECT_EQ(resolvedReq->method, deserializedReq.method);
@@ -991,7 +990,7 @@ TEST(MessageTests, testSetPauseOnExceptionsRequest) {
       "id": 1,
       "method": "Debugger.setPauseOnExceptions",
       "params": {
-        "state": "TODO: THIS SHOULD NOT BE ACCEPTED BY ENUM"
+        "state": "TODO: THIS SHOUD NOT BE ACCEPTED BY ENUM"
       }
     }
   )";
@@ -1012,7 +1011,7 @@ TEST(MessageTests, testSetPauseOnExceptionsRequest) {
   // Specifics
   EXPECT_EQ(resolvedReq->id, 1);
   EXPECT_EQ(resolvedReq->method, "Debugger.setPauseOnExceptions");
-  EXPECT_EQ(resolvedReq->state, "TODO: THIS SHOULD NOT BE ACCEPTED BY ENUM");
+  EXPECT_EQ(resolvedReq->state, "TODO: THIS SHOUD NOT BE ACCEPTED BY ENUM");
 
   EXPECT_EQ(resolvedReq->id, deserializedReq.id);
   EXPECT_EQ(resolvedReq->method, deserializedReq.method);
@@ -1124,11 +1123,11 @@ TEST(MessageTests, testEvaluateOnCallFrameResponseMinimal) {
   debugger::EvaluateOnCallFrameResponse deserializedReq(messageJSON);
   EXPECT_EQ(deserializedReq.toDynamic(), messageJSON);
 
-  EXPECT_FALSE(deserializedReq.result.subtype.has_value());
-  EXPECT_FALSE(deserializedReq.result.value.has_value());
-  EXPECT_FALSE(deserializedReq.result.unserializableValue.has_value());
-  EXPECT_FALSE(deserializedReq.result.description.has_value());
-  EXPECT_FALSE(deserializedReq.result.objectId.has_value());
+  EXPECT_FALSE(deserializedReq.result.subtype.hasValue());
+  EXPECT_FALSE(deserializedReq.result.value.hasValue());
+  EXPECT_FALSE(deserializedReq.result.unserializableValue.hasValue());
+  EXPECT_FALSE(deserializedReq.result.description.hasValue());
+  EXPECT_FALSE(deserializedReq.result.objectId.hasValue());
 
   // Specifics
   EXPECT_EQ(deserializedReq.id, 2);
@@ -1158,11 +1157,11 @@ TEST(MessageTests, testEvaluateOnCallFrameResponseFull) {
   debugger::EvaluateOnCallFrameResponse deserializedReq(messageJSON);
   EXPECT_EQ(deserializedReq.toDynamic(), messageJSON);
 
-  EXPECT_TRUE(deserializedReq.result.subtype.has_value());
-  EXPECT_TRUE(deserializedReq.result.value.has_value());
-  EXPECT_TRUE(deserializedReq.result.unserializableValue.has_value());
-  EXPECT_TRUE(deserializedReq.result.description.has_value());
-  EXPECT_TRUE(deserializedReq.result.objectId.has_value());
+  EXPECT_TRUE(deserializedReq.result.subtype.hasValue());
+  EXPECT_TRUE(deserializedReq.result.value.hasValue());
+  EXPECT_TRUE(deserializedReq.result.unserializableValue.hasValue());
+  EXPECT_TRUE(deserializedReq.result.description.hasValue());
+  EXPECT_TRUE(deserializedReq.result.objectId.hasValue());
 
   EXPECT_EQ(deserializedReq.result.subtype.value(), "SuperString");
   EXPECT_EQ(
@@ -1320,11 +1319,11 @@ TEST(MessageTests, testPauseNotificationMinimal) {
   debugger::PausedNotification deserializedReq(messageJSON);
   EXPECT_EQ(deserializedReq.toDynamic(), messageJSON);
 
-  EXPECT_FALSE(deserializedReq.callFrames[0].functionLocation.has_value());
-  EXPECT_FALSE(deserializedReq.callFrames[0].returnValue.has_value());
-  EXPECT_FALSE(deserializedReq.asyncStackTrace.has_value());
-  EXPECT_FALSE(deserializedReq.hitBreakpoints.has_value());
-  EXPECT_FALSE(deserializedReq.data.has_value());
+  EXPECT_FALSE(deserializedReq.callFrames[0].functionLocation.hasValue());
+  EXPECT_FALSE(deserializedReq.callFrames[0].returnValue.hasValue());
+  EXPECT_FALSE(deserializedReq.asyncStackTrace.hasValue());
+  EXPECT_FALSE(deserializedReq.hitBreakpoints.hasValue());
+  EXPECT_FALSE(deserializedReq.data.hasValue());
 
   // Specifics
   EXPECT_EQ(deserializedReq.method, "Debugger.paused");
@@ -1405,8 +1404,8 @@ TEST(MessageTests, testPauseNotificationFull) {
     }
   )";
 
-  std::optional<debugger::Location> functionLocation;
-  std::optional<runtime::RemoteObject> returnValue;
+  folly::Optional<debugger::Location> functionLocation;
+  folly::Optional<runtime::RemoteObject> returnValue;
   // Serialize and Deserialize are inverse functions
   dynamic messageJSON = folly::parseJson(message);
   debugger::PausedNotification deserializedReq(messageJSON);
@@ -1414,26 +1413,25 @@ TEST(MessageTests, testPauseNotificationFull) {
 
   // Check optionnals
   // ----------------
-  EXPECT_TRUE(deserializedReq.callFrames[0].functionLocation.has_value());
-  EXPECT_TRUE(deserializedReq.callFrames[0].returnValue.has_value());
-  EXPECT_TRUE(deserializedReq.asyncStackTrace.has_value());
-  EXPECT_TRUE(deserializedReq.hitBreakpoints.has_value());
-  EXPECT_TRUE(deserializedReq.data.has_value());
+  EXPECT_TRUE(deserializedReq.callFrames[0].functionLocation.hasValue());
+  EXPECT_TRUE(deserializedReq.callFrames[0].returnValue.hasValue());
+  EXPECT_TRUE(deserializedReq.asyncStackTrace.hasValue());
+  EXPECT_TRUE(deserializedReq.hitBreakpoints.hasValue());
+  EXPECT_TRUE(deserializedReq.data.hasValue());
 
   EXPECT_TRUE(
-      deserializedReq.callFrames[0].returnValue.value().subtype.has_value());
+      deserializedReq.callFrames[0].returnValue.value().subtype.hasValue());
   EXPECT_TRUE(
-      deserializedReq.callFrames[0].returnValue.value().className.has_value());
+      deserializedReq.callFrames[0].returnValue.value().className.hasValue());
   EXPECT_TRUE(deserializedReq.callFrames[0]
                   .returnValue.value()
-                  .unserializableValue.has_value());
+                  .unserializableValue.hasValue());
   EXPECT_TRUE(
-      deserializedReq.callFrames[0].returnValue.value().value.has_value());
-  EXPECT_TRUE(deserializedReq.callFrames[0]
-                  .returnValue.value()
-                  .description.has_value());
+      deserializedReq.callFrames[0].returnValue.value().value.hasValue());
   EXPECT_TRUE(
-      deserializedReq.callFrames[0].returnValue.value().objectId.has_value());
+      deserializedReq.callFrames[0].returnValue.value().description.hasValue());
+  EXPECT_TRUE(
+      deserializedReq.callFrames[0].returnValue.value().objectId.hasValue());
 
   // Check optionnals Values
   // -----------------------
@@ -1449,26 +1447,25 @@ TEST(MessageTests, testPauseNotificationFull) {
       deserializedReq.callFrames[0].returnValue.value().type,
       "aRemoteObjectType");
   EXPECT_EQ(
-      deserializedReq.callFrames[0].returnValue.value().subtype.has_value(),
+      deserializedReq.callFrames[0].returnValue.value().subtype.hasValue(),
       true);
   EXPECT_EQ(
       deserializedReq.callFrames[0].returnValue.value().subtype.value(),
       "subtype");
   EXPECT_EQ(
-      deserializedReq.callFrames[0].returnValue.value().className.has_value(),
+      deserializedReq.callFrames[0].returnValue.value().className.hasValue(),
       true);
   EXPECT_EQ(
       deserializedReq.callFrames[0].returnValue.value().className.value(),
       "className");
   EXPECT_EQ(
-      deserializedReq.callFrames[0].returnValue.value().value.has_value(),
-      true);
+      deserializedReq.callFrames[0].returnValue.value().value.hasValue(), true);
   EXPECT_EQ(
       deserializedReq.callFrames[0].returnValue.value().value.value(), "value");
   EXPECT_EQ(
       deserializedReq.callFrames[0]
           .returnValue.value()
-          .unserializableValue.has_value(),
+          .unserializableValue.hasValue(),
       true);
   EXPECT_EQ(
       deserializedReq.callFrames[0]
@@ -1476,13 +1473,13 @@ TEST(MessageTests, testPauseNotificationFull) {
           .unserializableValue.value(),
       "unserializableValue");
   EXPECT_EQ(
-      deserializedReq.callFrames[0].returnValue.value().description.has_value(),
+      deserializedReq.callFrames[0].returnValue.value().description.hasValue(),
       true);
   EXPECT_EQ(
       deserializedReq.callFrames[0].returnValue.value().description.value(),
       "description");
   EXPECT_EQ(
-      deserializedReq.callFrames[0].returnValue.value().objectId.has_value(),
+      deserializedReq.callFrames[0].returnValue.value().objectId.hasValue(),
       true);
   EXPECT_EQ(
       deserializedReq.callFrames[0].returnValue.value().objectId.value(),
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.cpp b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.cpp
index 2bfe584..57223de 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.cpp
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.cpp
@@ -38,9 +38,9 @@ std::string prettify(const std::string &str) {
 
 } // namespace
 
-class SyncConnection::RemoteConnection : public IRemoteConnection {
+class SyncConnection::RemoteConnnection : public IRemoteConnection {
  public:
-  RemoteConnection(SyncConnection &conn) : conn_(conn) {}
+  RemoteConnnection(SyncConnection &conn) : conn_(conn) {}
 
   void onMessage(std::string message) override {
     conn_.onReply(message);
@@ -59,7 +59,7 @@ SyncConnection::SyncConnection(
           std::make_unique<SharedRuntimeAdapter>(runtime),
           "testConn",
           waitForDebugger) {
-  connection_.connect(std::make_unique<RemoteConnection>(*this));
+  connection_.connect(std::make_unique<RemoteConnnection>(*this));
 }
 
 void SyncConnection::send(const std::string &str) {
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.h b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.h
index e8864f0..d50018a 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/chrome/tests/SyncConnection.h
@@ -13,9 +13,9 @@
 #include <queue>
 
 #include <folly/Function.h>
+#include <folly/Optional.h>
 #include <hermes/hermes.h>
 #include <hermes/inspector/chrome/Connection.h>
-#include <optional>
 
 namespace facebook {
 namespace hermes {
@@ -49,8 +49,8 @@ class SyncConnection {
       std::chrono::milliseconds timeout = std::chrono::milliseconds(2500));
 
  private:
-  class RemoteConnection;
-  friend class RemoteConnection;
+  class RemoteConnnection;
+  friend class RemoteConnnection;
 
   void onReply(const std::string &message);
 
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/detail/SerialExecutor.h b/node_modules/react-native/ReactCommon/hermes/inspector/detail/SerialExecutor.h
index 919a15b..e8e52f1 100644
--- a/node_modules/react-native/ReactCommon/hermes/inspector/detail/SerialExecutor.h
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/detail/SerialExecutor.h
@@ -36,7 +36,7 @@ namespace detail {
 class SerialExecutor : public folly::Executor {
  public:
   SerialExecutor(const std::string &name);
-  ~SerialExecutor() override;
+  ~SerialExecutor();
 
   void add(folly::Func) override;
 
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/tools/format b/node_modules/react-native/ReactCommon/hermes/inspector/tools/format
index e22332a..5449a47 100755
--- a/node_modules/react-native/ReactCommon/hermes/inspector/tools/format
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/tools/format
@@ -5,6 +5,6 @@ cd "$DIR"
 
 FBSOURCE="$(hg root)"
 CLANG_FORMAT="$FBSOURCE/tools/third-party/clang-format/clang-format"
-SRC="$FBSOURCE/xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector"
+SRC="$FBSOURCE/xplat/js/react-native-github/ReactCommon/hermes/inspector"
 
 find "$SRC" '(' -name '*.h' -or -name '*.cpp' ')' -exec "$CLANG_FORMAT" -i -style=file '{}' ';'
diff --git a/node_modules/react-native/ReactCommon/hermes/inspector/tools/sandcastle/build_and_test.sh b/node_modules/react-native/ReactCommon/hermes/inspector/tools/sandcastle/build_and_test.sh
index 8ac34ea..dab7ee0 100755
--- a/node_modules/react-native/ReactCommon/hermes/inspector/tools/sandcastle/build_and_test.sh
+++ b/node_modules/react-native/ReactCommon/hermes/inspector/tools/sandcastle/build_and_test.sh
@@ -7,7 +7,7 @@
 THIS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
 source "$THIS_DIR/setup.sh"
 
-buck test //xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:chrome &&
-  buck test //xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:detail &&
-  buck test //xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:inspectorlib &&
-  buck build //xplat/js/react-native-github/packages/react-native/ReactCommon/hermes/inspector:hermes-chrome-debug-server
+buck test //xplat/js/react-native-github/ReactCommon/hermes/inspector:chrome &&
+  buck test //xplat/js/react-native-github/ReactCommon/hermes/inspector:detail &&
+  buck test //xplat/js/react-native-github/ReactCommon/hermes/inspector:inspectorlib &&
+  buck build //xplat/js/react-native-github/ReactCommon/hermes/inspector:hermes-chrome-debug-server
diff --git a/node_modules/react-native/ReactCommon/jsc/CMakeLists.txt b/node_modules/react-native/ReactCommon/jsc/CMakeLists.txt
index 5db3ff6..2f387fa 100644
--- a/node_modules/react-native/ReactCommon/jsc/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/jsc/CMakeLists.txt
@@ -33,7 +33,3 @@ target_link_libraries(jscruntime
 # TODO: Remove this flag when ready.
 # Android has this enabled by default, but the flag is still needed for iOS.
 target_compile_options(jscruntime PRIVATE -DRN_FABRIC_ENABLED)
-
-if(${CMAKE_BUILD_TYPE} MATCHES Release)
-        target_compile_options(jscruntime PRIVATE -DNDEBUG)
-endif()
diff --git a/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp b/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp
index 7958519..bbc6065 100644
--- a/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp
+++ b/node_modules/react-native/ReactCommon/jsc/JSCRuntime.cpp
@@ -187,11 +187,11 @@ class JSCRuntime : public jsi::Runtime {
   bool hasProperty(const jsi::Object &, const jsi::String &name) override;
   bool hasProperty(const jsi::Object &, const jsi::PropNameID &name) override;
   void setPropertyValue(
-      const jsi::Object &,
+      jsi::Object &,
       const jsi::String &name,
       const jsi::Value &value) override;
   void setPropertyValue(
-      const jsi::Object &,
+      jsi::Object &,
       const jsi::PropNameID &name,
       const jsi::Value &value) override;
   bool isArray(const jsi::Object &) const override;
@@ -203,7 +203,7 @@ class JSCRuntime : public jsi::Runtime {
 
   // TODO: revisit this implementation
   jsi::WeakObject createWeakObject(const jsi::Object &) override;
-  jsi::Value lockWeakObject(const jsi::WeakObject &) override;
+  jsi::Value lockWeakObject(jsi::WeakObject &) override;
 
   jsi::Array createArray(size_t length) override;
   jsi::ArrayBuffer createArrayBuffer(
@@ -212,10 +212,8 @@ class JSCRuntime : public jsi::Runtime {
   size_t size(const jsi::ArrayBuffer &) override;
   uint8_t *data(const jsi::ArrayBuffer &) override;
   jsi::Value getValueAtIndex(const jsi::Array &, size_t i) override;
-  void setValueAtIndexImpl(
-      const jsi::Array &,
-      size_t i,
-      const jsi::Value &value) override;
+  void setValueAtIndexImpl(jsi::Array &, size_t i, const jsi::Value &value)
+      override;
 
   jsi::Function createFunctionFromHostFunction(
       const jsi::PropNameID &name,
@@ -951,7 +949,7 @@ bool JSCRuntime::hasProperty(
 }
 
 void JSCRuntime::setPropertyValue(
-    const jsi::Object &object,
+    jsi::Object &object,
     const jsi::PropNameID &name,
     const jsi::Value &value) {
   JSValueRef exc = nullptr;
@@ -966,7 +964,7 @@ void JSCRuntime::setPropertyValue(
 }
 
 void JSCRuntime::setPropertyValue(
-    const jsi::Object &object,
+    jsi::Object &object,
     const jsi::String &name,
     const jsi::Value &value) {
   JSValueRef exc = nullptr;
@@ -1066,7 +1064,7 @@ jsi::WeakObject JSCRuntime::createWeakObject(const jsi::Object &obj) {
 #endif
 }
 
-jsi::Value JSCRuntime::lockWeakObject(const jsi::WeakObject &obj) {
+jsi::Value JSCRuntime::lockWeakObject(jsi::WeakObject &obj) {
 #ifdef RN_FABRIC_ENABLED
   // TODO: revisit this implementation
   JSObjectRef objRef = objectRef(obj);
@@ -1109,7 +1107,7 @@ jsi::Value JSCRuntime::getValueAtIndex(const jsi::Array &arr, size_t i) {
 }
 
 void JSCRuntime::setValueAtIndexImpl(
-    const jsi::Array &arr,
+    jsi::Array &arr,
     size_t i,
     const jsi::Value &value) {
   JSValueRef exc = nullptr;
diff --git a/node_modules/react-native/ReactCommon/jsc/React-jsc.podspec b/node_modules/react-native/ReactCommon/jsc/React-jsc.podspec
index ac0e785..6bb2347 100644
--- a/node_modules/react-native/ReactCommon/jsc/React-jsc.podspec
+++ b/node_modules/react-native/ReactCommon/jsc/React-jsc.podspec
@@ -22,7 +22,7 @@ Pod::Spec.new do |s|
   s.summary                = "JavaScriptCore engine for React Native"
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "JSCRuntime.{cpp,h}"
diff --git a/node_modules/react-native/ReactCommon/jsengineinstance/.clang-tidy b/node_modules/react-native/ReactCommon/jsengineinstance/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/jsengineinstance/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/jsengineinstance/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/jserrorhandler/BUCK b/node_modules/react-native/ReactCommon/jserrorhandler/BUCK
index 05b20d8..9edd672 100644
--- a/node_modules/react-native/ReactCommon/jserrorhandler/BUCK
+++ b/node_modules/react-native/ReactCommon/jserrorhandler/BUCK
@@ -1,6 +1,6 @@
 load("//tools/build_defs/oss:rn_defs.bzl", "ANDROID", "APPLE", "CXX", "react_native_xplat_target", "rn_xplat_cxx_library")
 
-# TODO: Expolre merging this module into venice so we don't to load this library separately
+# TODO: Expolre merging this module into venice so we don't to load this library seperately
 rn_xplat_cxx_library(
     name = "jserrorhandler",
     srcs = glob(["*.cpp"]),
diff --git a/node_modules/react-native/ReactCommon/jsi/.clang-tidy b/node_modules/react-native/ReactCommon/jsi/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/jsi/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/jsi/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/jsi/React-jsi.podspec b/node_modules/react-native/ReactCommon/jsi/React-jsi.podspec
index e7c49d2..621faa9 100644
--- a/node_modules/react-native/ReactCommon/jsi/React-jsi.podspec
+++ b/node_modules/react-native/ReactCommon/jsi/React-jsi.podspec
@@ -30,7 +30,7 @@ Pod::Spec.new do |s|
   s.summary                = "JavaScript Interface layer for React Native"
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
 
diff --git a/node_modules/react-native/ReactCommon/jsi/jsi/decorator.h b/node_modules/react-native/ReactCommon/jsi/jsi/decorator.h
index baece80..9df3a2b 100644
--- a/node_modules/react-native/ReactCommon/jsi/jsi/decorator.h
+++ b/node_modules/react-native/ReactCommon/jsi/jsi/decorator.h
@@ -264,13 +264,11 @@ class RuntimeDecorator : public Base, private jsi::Instrumentation {
   bool hasProperty(const Object& o, const String& name) override {
     return plain_.hasProperty(o, name);
   };
-  void setPropertyValue(
-      const Object& o,
-      const PropNameID& name,
-      const Value& value) override {
+  void setPropertyValue(Object& o, const PropNameID& name, const Value& value)
+      override {
     plain_.setPropertyValue(o, name, value);
   };
-  void setPropertyValue(const Object& o, const String& name, const Value& value)
+  void setPropertyValue(Object& o, const String& name, const Value& value)
       override {
     plain_.setPropertyValue(o, name, value);
   };
@@ -297,7 +295,7 @@ class RuntimeDecorator : public Base, private jsi::Instrumentation {
   WeakObject createWeakObject(const Object& o) override {
     return plain_.createWeakObject(o);
   };
-  Value lockWeakObject(const WeakObject& wo) override {
+  Value lockWeakObject(WeakObject& wo) override {
     return plain_.lockWeakObject(wo);
   };
 
@@ -320,8 +318,7 @@ class RuntimeDecorator : public Base, private jsi::Instrumentation {
   Value getValueAtIndex(const Array& a, size_t i) override {
     return plain_.getValueAtIndex(a, i);
   };
-  void setValueAtIndexImpl(const Array& a, size_t i, const Value& value)
-      override {
+  void setValueAtIndexImpl(Array& a, size_t i, const Value& value) override {
     plain_.setValueAtIndexImpl(a, i, value);
   };
 
@@ -659,14 +656,12 @@ class WithRuntimeDecorator : public RuntimeDecorator<Plain, Base> {
     Around around{with_};
     return RD::hasProperty(o, name);
   };
-  void setPropertyValue(
-      const Object& o,
-      const PropNameID& name,
-      const Value& value) override {
+  void setPropertyValue(Object& o, const PropNameID& name, const Value& value)
+      override {
     Around around{with_};
     RD::setPropertyValue(o, name, value);
   };
-  void setPropertyValue(const Object& o, const String& name, const Value& value)
+  void setPropertyValue(Object& o, const String& name, const Value& value)
       override {
     Around around{with_};
     RD::setPropertyValue(o, name, value);
@@ -701,7 +696,7 @@ class WithRuntimeDecorator : public RuntimeDecorator<Plain, Base> {
     Around around{with_};
     return RD::createWeakObject(o);
   };
-  Value lockWeakObject(const WeakObject& wo) override {
+  Value lockWeakObject(WeakObject& wo) override {
     Around around{with_};
     return RD::lockWeakObject(wo);
   };
@@ -730,8 +725,7 @@ class WithRuntimeDecorator : public RuntimeDecorator<Plain, Base> {
     Around around{with_};
     return RD::getValueAtIndex(a, i);
   };
-  void setValueAtIndexImpl(const Array& a, size_t i, const Value& value)
-      override {
+  void setValueAtIndexImpl(Array& a, size_t i, const Value& value) override {
     Around around{with_};
     RD::setValueAtIndexImpl(a, i, value);
   };
diff --git a/node_modules/react-native/ReactCommon/jsi/jsi/jsi-inl.h b/node_modules/react-native/ReactCommon/jsi/jsi/jsi-inl.h
index 4ce00ad..a7e5158 100644
--- a/node_modules/react-native/ReactCommon/jsi/jsi/jsi-inl.h
+++ b/node_modules/react-native/ReactCommon/jsi/jsi/jsi-inl.h
@@ -111,21 +111,19 @@ inline bool Object::hasProperty(Runtime& runtime, const PropNameID& name)
 }
 
 template <typename T>
-void Object::setProperty(Runtime& runtime, const char* name, T&& value) const {
+void Object::setProperty(Runtime& runtime, const char* name, T&& value) {
   setProperty(
       runtime, String::createFromAscii(runtime, name), std::forward<T>(value));
 }
 
 template <typename T>
-void Object::setProperty(Runtime& runtime, const String& name, T&& value)
-    const {
+void Object::setProperty(Runtime& runtime, const String& name, T&& value) {
   setPropertyValue(
       runtime, name, detail::toValue(runtime, std::forward<T>(value)));
 }
 
 template <typename T>
-void Object::setProperty(Runtime& runtime, const PropNameID& name, T&& value)
-    const {
+void Object::setProperty(Runtime& runtime, const PropNameID& name, T&& value) {
   setPropertyValue(
       runtime, name, detail::toValue(runtime, std::forward<T>(value)));
 }
@@ -231,12 +229,12 @@ inline Array Object::getPropertyNames(Runtime& runtime) const {
   return runtime.getPropertyNames(*this);
 }
 
-inline Value WeakObject::lock(Runtime& runtime) const {
+inline Value WeakObject::lock(Runtime& runtime) {
   return runtime.lockWeakObject(*this);
 }
 
 template <typename T>
-void Array::setValueAtIndex(Runtime& runtime, size_t i, T&& value) const {
+void Array::setValueAtIndex(Runtime& runtime, size_t i, T&& value) {
   setValueAtIndexImpl(
       runtime, i, detail::toValue(runtime, std::forward<T>(value)));
 }
diff --git a/node_modules/react-native/ReactCommon/jsi/jsi/jsi.cpp b/node_modules/react-native/ReactCommon/jsi/jsi/jsi.cpp
index 25fd946..2831571 100644
--- a/node_modules/react-native/ReactCommon/jsi/jsi/jsi.cpp
+++ b/node_modules/react-native/ReactCommon/jsi/jsi/jsi.cpp
@@ -427,9 +427,11 @@ JSError::JSError(Runtime& rt, std::string msg) : message_(std::move(msg)) {
     setValue(
         rt,
         callGlobalFunction(rt, "Error", String::createFromUtf8(rt, message_)));
-  } catch (const JSIException& ex) {
+  } catch (const std::exception& ex) {
     message_ = std::string(ex.what()) + " (while raising " + message_ + ")";
     setValue(rt, String::createFromUtf8(rt, message_));
+  } catch (...) {
+    setValue(rt, Value());
   }
 }
 
@@ -440,8 +442,10 @@ JSError::JSError(Runtime& rt, std::string msg, std::string stack)
     e.setProperty(rt, "message", String::createFromUtf8(rt, message_));
     e.setProperty(rt, "stack", String::createFromUtf8(rt, stack_));
     setValue(rt, std::move(e));
-  } catch (const JSIException& ex) {
+  } catch (const std::exception& ex) {
     setValue(rt, String::createFromUtf8(rt, ex.what()));
+  } catch (...) {
+    setValue(rt, Value());
   }
 }
 
@@ -453,68 +457,74 @@ JSError::JSError(std::string what, Runtime& rt, Value&& value)
 void JSError::setValue(Runtime& rt, Value&& value) {
   value_ = std::make_shared<Value>(std::move(value));
 
-  if ((message_.empty() || stack_.empty()) && value_->isObject()) {
-    auto obj = value_->getObject(rt);
-
-    if (message_.empty()) {
-      try {
-        Value message = obj.getProperty(rt, "message");
-        if (!message.isUndefined() && !message.isString()) {
-          message = callGlobalFunction(rt, "String", message);
-        }
-        if (message.isString()) {
-          message_ = message.getString(rt).utf8(rt);
-        } else if (!message.isUndefined()) {
-          message_ = "String(e.message) is a " + kindToString(message, &rt);
+  try {
+    if ((message_.empty() || stack_.empty()) && value_->isObject()) {
+      auto obj = value_->getObject(rt);
+
+      if (message_.empty()) {
+        try {
+          Value message = obj.getProperty(rt, "message");
+          if (!message.isUndefined() && !message.isString()) {
+            message = callGlobalFunction(rt, "String", message);
+          }
+          if (message.isString()) {
+            message_ = message.getString(rt).utf8(rt);
+          } else if (!message.isUndefined()) {
+            message_ = "String(e.message) is a " + kindToString(message, &rt);
+          }
+        } catch (const std::exception& ex) {
+          message_ = std::string("[Exception while creating message string: ") +
+              ex.what() + "]";
         }
-      } catch (const JSIException& ex) {
-        message_ = std::string("[Exception while creating message string: ") +
-            ex.what() + "]";
       }
-    }
 
-    if (stack_.empty()) {
-      try {
-        Value stack = obj.getProperty(rt, "stack");
-        if (!stack.isUndefined() && !stack.isString()) {
-          stack = callGlobalFunction(rt, "String", stack);
-        }
-        if (stack.isString()) {
-          stack_ = stack.getString(rt).utf8(rt);
-        } else if (!stack.isUndefined()) {
-          stack_ = "String(e.stack) is a " + kindToString(stack, &rt);
+      if (stack_.empty()) {
+        try {
+          Value stack = obj.getProperty(rt, "stack");
+          if (!stack.isUndefined() && !stack.isString()) {
+            stack = callGlobalFunction(rt, "String", stack);
+          }
+          if (stack.isString()) {
+            stack_ = stack.getString(rt).utf8(rt);
+          } else if (!stack.isUndefined()) {
+            stack_ = "String(e.stack) is a " + kindToString(stack, &rt);
+          }
+        } catch (const std::exception& ex) {
+          message_ = std::string("[Exception while creating stack string: ") +
+              ex.what() + "]";
         }
-      } catch (const JSIException& ex) {
-        message_ = std::string("[Exception while creating stack string: ") +
-            ex.what() + "]";
       }
     }
-  }
 
-  if (message_.empty()) {
-    try {
-      if (value_->isString()) {
-        message_ = value_->getString(rt).utf8(rt);
-      } else {
-        Value message = callGlobalFunction(rt, "String", *value_);
-        if (message.isString()) {
-          message_ = message.getString(rt).utf8(rt);
+    if (message_.empty()) {
+      try {
+        if (value_->isString()) {
+          message_ = value_->getString(rt).utf8(rt);
         } else {
-          message_ = "String(e) is a " + kindToString(message, &rt);
+          Value message = callGlobalFunction(rt, "String", *value_);
+          if (message.isString()) {
+            message_ = message.getString(rt).utf8(rt);
+          } else {
+            message_ = "String(e) is a " + kindToString(message, &rt);
+          }
         }
+      } catch (const std::exception& ex) {
+        message_ = std::string("[Exception while creating message string: ") +
+            ex.what() + "]";
       }
-    } catch (const JSIException& ex) {
-      message_ = std::string("[Exception while creating message string: ") +
-          ex.what() + "]";
     }
-  }
 
-  if (stack_.empty()) {
-    stack_ = "no stack";
-  }
+    if (stack_.empty()) {
+      stack_ = "no stack";
+    }
 
-  if (what_.empty()) {
-    what_ = message_ + "\n\n" + stack_;
+    if (what_.empty()) {
+      what_ = message_ + "\n\n" + stack_;
+    }
+  } catch (...) {
+    message_ = "[Exception caught creating message string]";
+    stack_ = "[Exception caught creating stack string]";
+    what_ = "[Exception caught getting value fields]";
   }
 }
 
diff --git a/node_modules/react-native/ReactCommon/jsi/jsi/jsi.h b/node_modules/react-native/ReactCommon/jsi/jsi/jsi.h
index ec7fd77..b507809 100644
--- a/node_modules/react-native/ReactCommon/jsi/jsi/jsi.h
+++ b/node_modules/react-native/ReactCommon/jsi/jsi/jsi.h
@@ -336,12 +336,10 @@ class JSI_EXPORT Runtime {
   virtual Value getProperty(const Object&, const String& name) = 0;
   virtual bool hasProperty(const Object&, const PropNameID& name) = 0;
   virtual bool hasProperty(const Object&, const String& name) = 0;
-  virtual void setPropertyValue(
-      const Object&,
-      const PropNameID& name,
-      const Value& value) = 0;
   virtual void
-  setPropertyValue(const Object&, const String& name, const Value& value) = 0;
+  setPropertyValue(Object&, const PropNameID& name, const Value& value) = 0;
+  virtual void
+  setPropertyValue(Object&, const String& name, const Value& value) = 0;
 
   virtual bool isArray(const Object&) const = 0;
   virtual bool isArrayBuffer(const Object&) const = 0;
@@ -351,7 +349,7 @@ class JSI_EXPORT Runtime {
   virtual Array getPropertyNames(const Object&) = 0;
 
   virtual WeakObject createWeakObject(const Object&) = 0;
-  virtual Value lockWeakObject(const WeakObject&) = 0;
+  virtual Value lockWeakObject(WeakObject&) = 0;
 
   virtual Array createArray(size_t length) = 0;
   virtual ArrayBuffer createArrayBuffer(
@@ -360,8 +358,7 @@ class JSI_EXPORT Runtime {
   virtual size_t size(const ArrayBuffer&) = 0;
   virtual uint8_t* data(const ArrayBuffer&) = 0;
   virtual Value getValueAtIndex(const Array&, size_t i) = 0;
-  virtual void
-  setValueAtIndexImpl(const Array&, size_t i, const Value& value) = 0;
+  virtual void setValueAtIndexImpl(Array&, size_t i, const Value& value) = 0;
 
   virtual Function createFunctionFromHostFunction(
       const PropNameID& name,
@@ -669,7 +666,7 @@ class JSI_EXPORT Object : public Pointer {
   }
 
   /// \return the result of `this instanceOf ctor` in JS.
-  bool instanceOf(Runtime& rt, const Function& ctor) const {
+  bool instanceOf(Runtime& rt, const Function& ctor) {
     return rt.instanceOf(*this, ctor);
   }
 
@@ -704,19 +701,19 @@ class JSI_EXPORT Object : public Pointer {
   /// used to make one: nullptr_t, bool, double, int, const char*,
   /// String, or Object.
   template <typename T>
-  void setProperty(Runtime& runtime, const char* name, T&& value) const;
+  void setProperty(Runtime& runtime, const char* name, T&& value);
 
   /// Sets the property value from a Value or anything which can be
   /// used to make one: nullptr_t, bool, double, int, const char*,
   /// String, or Object.
   template <typename T>
-  void setProperty(Runtime& runtime, const String& name, T&& value) const;
+  void setProperty(Runtime& runtime, const String& name, T&& value);
 
   /// Sets the property value from a Value or anything which can be
   /// used to make one: nullptr_t, bool, double, int, const char*,
   /// String, or Object.
   template <typename T>
-  void setProperty(Runtime& runtime, const PropNameID& name, T&& value) const;
+  void setProperty(Runtime& runtime, const PropNameID& name, T&& value);
 
   /// \return true iff JS \c Array.isArray() would return \c true.  If
   /// so, then \c getArray() will succeed.
@@ -835,17 +832,15 @@ class JSI_EXPORT Object : public Pointer {
   Array getPropertyNames(Runtime& runtime) const;
 
  protected:
-  void setPropertyValue(
-      Runtime& runtime,
-      const String& name,
-      const Value& value) const {
+  void
+  setPropertyValue(Runtime& runtime, const String& name, const Value& value) {
     return runtime.setPropertyValue(*this, name, value);
   }
 
   void setPropertyValue(
       Runtime& runtime,
       const PropNameID& name,
-      const Value& value) const {
+      const Value& value) {
     return runtime.setPropertyValue(*this, name, value);
   }
 
@@ -871,7 +866,7 @@ class JSI_EXPORT WeakObject : public Pointer {
   /// otherwise returns \c undefined.  Note that this method has nothing to do
   /// with threads or concurrency.  The name is based on std::weak_ptr::lock()
   /// which serves a similar purpose.
-  Value lock(Runtime& runtime) const;
+  Value lock(Runtime& runtime);
 
   friend class Runtime;
 };
@@ -907,7 +902,7 @@ class JSI_EXPORT Array : public Object {
   /// value behaves as with Object::setProperty().  If \c i is out of
   /// range [ 0..\c length ] throws a JSIException.
   template <typename T>
-  void setValueAtIndex(Runtime& runtime, size_t i, T&& value) const;
+  void setValueAtIndex(Runtime& runtime, size_t i, T&& value);
 
   /// There is no current API for changing the size of an array once
   /// created.  We'll probably need that eventually.
@@ -925,8 +920,7 @@ class JSI_EXPORT Array : public Object {
   friend class Object;
   friend class Value;
 
-  void setValueAtIndexImpl(Runtime& runtime, size_t i, const Value& value)
-      const {
+  void setValueAtIndexImpl(Runtime& runtime, size_t i, const Value& value) {
     return runtime.setValueAtIndexImpl(*this, i, value);
   }
 
@@ -952,7 +946,7 @@ class JSI_EXPORT ArrayBuffer : public Object {
     return runtime.size(*this);
   }
 
-  uint8_t* data(Runtime& runtime) const {
+  uint8_t* data(Runtime& runtime) {
     return runtime.data(*this);
   }
 
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/.clang-tidy b/node_modules/react-native/ReactCommon/jsiexecutor/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/CMakeLists.txt b/node_modules/react-native/ReactCommon/jsiexecutor/CMakeLists.txt
index ae63005..6859756 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/CMakeLists.txt
@@ -6,11 +6,7 @@
 cmake_minimum_required(VERSION 3.13)
 set(CMAKE_VERBOSE_MAKEFILE on)
 
-add_compile_options(
-        -fexceptions
-        -frtti
-        -std=c++17
-        -O3)
+add_compile_options(-fexceptions -frtti -O3)
 
 add_library(jsireact
         STATIC
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/React-jsiexecutor.podspec b/node_modules/react-native/ReactCommon/jsiexecutor/React-jsiexecutor.podspec
index e97969d..9a6b447 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/React-jsiexecutor.podspec
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/React-jsiexecutor.podspec
@@ -26,13 +26,12 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files         = "jsireact/*.{cpp,h}"
   s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
-  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\"",
-                               "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }
+  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\"" }
   s.header_dir             = "jsireact"
 
   s.dependency "React-cxxreact", version
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.cpp b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.cpp
index 3e72ed8..10552e0 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.cpp
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.cpp
@@ -137,7 +137,7 @@ void JSIExecutor::initializeRuntime() {
   if (runtimeInstaller_) {
     runtimeInstaller_(*runtime_);
   }
-  bool hasLogger(ReactMarker::logTaggedMarkerImpl);
+  bool hasLogger(ReactMarker::logTaggedMarker);
   if (hasLogger) {
     ReactMarker::logMarker(ReactMarker::CREATE_REACT_CONTEXT_STOP);
   }
@@ -148,7 +148,7 @@ void JSIExecutor::loadBundle(
     std::string sourceURL) {
   SystraceSection s("JSIExecutor::loadBundle");
 
-  bool hasLogger(ReactMarker::logTaggedMarkerImpl);
+  bool hasLogger(ReactMarker::logTaggedMarker);
   std::string scriptName = simpleBasename(sourceURL);
   if (hasLogger) {
     ReactMarker::logTaggedMarker(
@@ -206,7 +206,7 @@ void JSIExecutor::registerBundle(
 // Looping on \c drainMicrotasks until it completes or hits the retries bound.
 static void performMicrotaskCheckpoint(jsi::Runtime &runtime) {
   uint8_t retries = 0;
-  // A heuristic number to guard infinite or absurd numbers of retries.
+  // A heuristic number to guard inifinite or absurd numbers of retries.
   const static unsigned int kRetriesBound = 255;
 
   while (retries < kRetriesBound) {
@@ -495,21 +495,20 @@ Value JSIExecutor::nativeCallSyncHook(const Value *args, size_t count) {
 
   /**
    * Note:
-   * In RCTNativeModule, std::nullopt is returned from
-   * callSerializableNativeHook when executing a NativeModule method fails.
-   * Therefore, it's safe to not terminate the syncMethodCall when std::nullopt
-   * is returned.
+   * In RCTNativeModule, folly::none is returned from callSerializableNativeHook
+   * when executing a NativeModule method fails. Therefore, it's safe to not
+   * terminate the syncMethodCall when folly::none is returned.
    *
-   * TODO: In JavaNativeModule, std::nullopt is returned when the synchronous
+   * TODO: In JavaNativeModule, folly::none is returned when the synchronous
    * NativeModule method has the void return type. Change this to return
-   * folly::dynamic(nullptr) instead, so that std::nullopt is reserved for
+   * folly::dynamic(nullptr) instead, so that folly::none is reserved for
    * exceptional scenarios.
    *
-   * TODO: Investigate CxxModule infra to see if std::nullopt is used for
+   * TODO: Investigate CxxModule infra to see if folly::none is used for
    * returns in exceptional scenarios.
    **/
 
-  if (!result.has_value()) {
+  if (!result.hasValue()) {
     return Value::undefined();
   }
 
@@ -565,7 +564,7 @@ void bindNativeLogger(Runtime &runtime, Logger logger) {
           }));
 }
 
-void bindNativePerformanceNow(Runtime &runtime) {
+void bindNativePerformanceNow(Runtime &runtime, PerformanceNow performanceNow) {
   runtime.global().setProperty(
       runtime,
       "nativePerformanceNow",
@@ -573,10 +572,11 @@ void bindNativePerformanceNow(Runtime &runtime) {
           runtime,
           PropNameID::forAscii(runtime, "nativePerformanceNow"),
           0,
-          [](jsi::Runtime &runtime,
-             const jsi::Value &,
-             const jsi::Value *args,
-             size_t count) { return Value(JSExecutor::performanceNow()); }));
+          [performanceNow = std::move(performanceNow)](
+              jsi::Runtime &runtime,
+              const jsi::Value &,
+              const jsi::Value *args,
+              size_t count) { return Value(performanceNow()); }));
 }
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.h b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.h
index c17a052..1a8d01f 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.h
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.h
@@ -15,7 +15,6 @@
 #include <jsi/jsi.h>
 #include <functional>
 #include <mutex>
-#include <optional>
 
 namespace facebook {
 namespace react {
@@ -128,17 +127,18 @@ class JSIExecutor : public JSExecutor {
   JSIScopedTimeoutInvoker scopedTimeoutInvoker_;
   RuntimeInstaller runtimeInstaller_;
 
-  std::optional<jsi::Function> callFunctionReturnFlushedQueue_;
-  std::optional<jsi::Function> invokeCallbackAndReturnFlushedQueue_;
-  std::optional<jsi::Function> flushedQueue_;
+  folly::Optional<jsi::Function> callFunctionReturnFlushedQueue_;
+  folly::Optional<jsi::Function> invokeCallbackAndReturnFlushedQueue_;
+  folly::Optional<jsi::Function> flushedQueue_;
 };
 
 using Logger =
     std::function<void(const std::string &message, unsigned int logLevel)>;
 void bindNativeLogger(jsi::Runtime &runtime, Logger logger);
 
-void bindNativePerformanceNow(jsi::Runtime &runtime);
-
-double performanceNow();
+using PerformanceNow = std::function<double()>;
+void bindNativePerformanceNow(
+    jsi::Runtime &runtime,
+    PerformanceNow performanceNow);
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.cpp b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.cpp
index de51c93..2dadd43 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.cpp
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.cpp
@@ -45,7 +45,7 @@ Value JSINativeModules::getModule(Runtime &rt, const PropNameID &name) {
   }
 
   auto module = createModule(rt, moduleName);
-  if (!module.has_value()) {
+  if (!module.hasValue()) {
     BridgeNativeModulePerfLogger::moduleJSRequireEndingFail(moduleName.c_str());
     // Allow lookup to continue in the objects own properties, which allows for
     // overrides of NativeModules
@@ -61,14 +61,14 @@ Value JSINativeModules::getModule(Runtime &rt, const PropNameID &name) {
 }
 
 void JSINativeModules::reset() {
-  m_genNativeModuleJS = std::nullopt;
+  m_genNativeModuleJS = folly::none;
   m_objects.clear();
 }
 
-std::optional<Object> JSINativeModules::createModule(
+folly::Optional<Object> JSINativeModules::createModule(
     Runtime &rt,
     const std::string &name) {
-  bool hasLogger(ReactMarker::logTaggedMarkerImpl);
+  bool hasLogger(ReactMarker::logTaggedMarker);
   if (hasLogger) {
     ReactMarker::logTaggedMarker(
         ReactMarker::NATIVE_MODULE_SETUP_START, name.c_str());
@@ -80,8 +80,8 @@ std::optional<Object> JSINativeModules::createModule(
   }
 
   auto result = m_moduleRegistry->getConfig(name);
-  if (!result.has_value()) {
-    return std::nullopt;
+  if (!result.hasValue()) {
+    return folly::none;
   }
 
   Value moduleInfo = m_genNativeModuleJS->call(
@@ -92,7 +92,7 @@ std::optional<Object> JSINativeModules::createModule(
   CHECK(moduleInfo.isObject())
       << "Module returned from genNativeModule isn't an Object";
 
-  std::optional<Object> module(
+  folly::Optional<Object> module(
       moduleInfo.asObject(rt).getPropertyAsObject(rt, "module"));
 
   if (hasLogger) {
diff --git a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.h b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.h
index fd769a7..c6aaacf 100644
--- a/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.h
+++ b/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSINativeModules.h
@@ -11,8 +11,8 @@
 #include <string>
 
 #include <cxxreact/ModuleRegistry.h>
+#include <folly/Optional.h>
 #include <jsi/jsi.h>
-#include <optional>
 
 namespace facebook {
 namespace react {
@@ -27,11 +27,11 @@ class JSINativeModules {
   void reset();
 
  private:
-  std::optional<jsi::Function> m_genNativeModuleJS;
+  folly::Optional<jsi::Function> m_genNativeModuleJS;
   std::shared_ptr<ModuleRegistry> m_moduleRegistry;
   std::unordered_map<std::string, jsi::Object> m_objects;
 
-  std::optional<jsi::Object> createModule(
+  folly::Optional<jsi::Object> createModule(
       jsi::Runtime &rt,
       const std::string &name);
 };
diff --git a/node_modules/react-native/ReactCommon/jsinspector/.clang-tidy b/node_modules/react-native/ReactCommon/jsinspector/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/jsinspector/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/jsinspector/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/jsinspector/CMakeLists.txt b/node_modules/react-native/ReactCommon/jsinspector/CMakeLists.txt
index dd361e9..511afcb 100644
--- a/node_modules/react-native/ReactCommon/jsinspector/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/jsinspector/CMakeLists.txt
@@ -6,9 +6,7 @@
 cmake_minimum_required(VERSION 3.13)
 set(CMAKE_VERBOSE_MAKEFILE on)
 
-add_compile_options(
-        -fexceptions
-        -std=c++17)
+add_compile_options(-fexceptions)
 
 file(GLOB jsinspector_SRC CONFIGURE_DEPENDS *.cpp)
 add_library(jsinspector SHARED ${jsinspector_SRC})
diff --git a/node_modules/react-native/ReactCommon/jsinspector/React-jsinspector.podspec b/node_modules/react-native/ReactCommon/jsinspector/React-jsinspector.podspec
index 4b6d9a9..a1d6f7f 100644
--- a/node_modules/react-native/ReactCommon/jsinspector/React-jsinspector.podspec
+++ b/node_modules/react-native/ReactCommon/jsinspector/React-jsinspector.podspec
@@ -22,10 +22,9 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "*.{cpp,h}"
   s.header_dir             = 'jsinspector'
-  s.pod_target_xcconfig    = { "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }
 end
diff --git a/node_modules/react-native/ReactCommon/libraries/fbcore/src/test/java/com/facebook/powermock/BUCK b/node_modules/react-native/ReactCommon/libraries/fbcore/src/test/java/com/facebook/powermock/BUCK
index 02c4903..7818848 100644
--- a/node_modules/react-native/ReactCommon/libraries/fbcore/src/test/java/com/facebook/powermock/BUCK
+++ b/node_modules/react-native/ReactCommon/libraries/fbcore/src/test/java/com/facebook/powermock/BUCK
@@ -35,7 +35,7 @@ rn_android_library(
 rn_prebuilt_jar(
     name = "byte-buddy",
     binary_jar = ":byte-buddy-binary.jar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -47,7 +47,7 @@ fb_native.remote_file(
 rn_prebuilt_jar(
     name = "byte-buddy-agent",
     binary_jar = ":byte-buddy-agent-binary.jar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
@@ -59,7 +59,7 @@ fb_native.remote_file(
 rn_prebuilt_jar(
     name = "objenesis",
     binary_jar = ":objenesis-binary.jar",
-    visibility = ["//packages/react-native/ReactAndroid/..."],
+    visibility = ["//ReactAndroid/..."],
 )
 
 fb_native.remote_file(
diff --git a/node_modules/react-native/ReactCommon/logger/React-logger.podspec b/node_modules/react-native/ReactCommon/logger/React-logger.podspec
index 17c2856..193f42e 100644
--- a/node_modules/react-native/ReactCommon/logger/React-logger.podspec
+++ b/node_modules/react-native/ReactCommon/logger/React-logger.podspec
@@ -27,7 +27,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "*.{cpp,h}"
diff --git a/node_modules/react-native/ReactCommon/react/bridging/BUCK b/node_modules/react-native/ReactCommon/react/bridging/BUCK
index 3d1ecdc..b5f531d 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/BUCK
+++ b/node_modules/react-native/ReactCommon/react/bridging/BUCK
@@ -50,7 +50,8 @@ fb_xplat_cxx_test(
     contacts = ["oncall+react_native@xmail.facebook.com"],
     platforms = (ANDROID, APPLE, CXX),
     deps = [
-        ":testlib",
+        ":bridging",
         "//xplat/hermes/API:HermesAPI",
+        "//xplat/third-party/gmock:gtest",
     ],
 )
diff --git a/node_modules/react-native/ReactCommon/react/bridging/Base.h b/node_modules/react-native/ReactCommon/react/bridging/Base.h
index 4ff8ef3..4a65364 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/Base.h
+++ b/node_modules/react-native/ReactCommon/react/bridging/Base.h
@@ -10,7 +10,7 @@
 #include <react/bridging/Convert.h>
 
 #include <ReactCommon/CallInvoker.h>
-#include <butter/function.h>
+#include <folly/Function.h>
 #include <jsi/jsi.h>
 
 #include <cstdint>
@@ -36,12 +36,12 @@ struct function_wrapper;
 
 template <typename C, typename R, typename... Args>
 struct function_wrapper<R (C::*)(Args...)> {
-  using type = butter::function<R(Args...)>;
+  using type = folly::Function<R(Args...)>;
 };
 
 template <typename C, typename R, typename... Args>
 struct function_wrapper<R (C::*)(Args...) const> {
-  using type = butter::function<R(Args...)>;
+  using type = folly::Function<R(Args...)>;
 };
 
 template <typename T, typename = void>
diff --git a/node_modules/react-native/ReactCommon/react/bridging/CallbackWrapper.h b/node_modules/react-native/ReactCommon/react/bridging/CallbackWrapper.h
index 52dd1d6..8670f2b 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/CallbackWrapper.h
+++ b/node_modules/react-native/ReactCommon/react/bridging/CallbackWrapper.h
@@ -22,10 +22,25 @@ class CallbackWrapper : public LongLivedObject {
       jsi::Function &&callback,
       jsi::Runtime &runtime,
       std::shared_ptr<CallInvoker> jsInvoker)
-      : callback_(std::move(callback)),
+      : longLivedObjectCollection_(),
+        callback_(std::move(callback)),
         runtime_(runtime),
         jsInvoker_(std::move(jsInvoker)) {}
 
+  CallbackWrapper(
+      std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection,
+      jsi::Function &&callback,
+      jsi::Runtime &runtime,
+      std::shared_ptr<CallInvoker> jsInvoker)
+      : longLivedObjectCollection_(longLivedObjectCollection),
+        callback_(std::move(callback)),
+        runtime_(runtime),
+        jsInvoker_(std::move(jsInvoker)) {}
+
+  // Use a weak_ptr to avoid a retain cycle: LongLivedObjectCollection owns all
+  // CallbackWrappers. So, CallbackWrapper cannot own its
+  // LongLivedObjectCollection.
+  std::weak_ptr<LongLivedObjectCollection> longLivedObjectCollection_;
   jsi::Function callback_;
   jsi::Runtime &runtime_;
   std::shared_ptr<CallInvoker> jsInvoker_;
@@ -35,12 +50,23 @@ class CallbackWrapper : public LongLivedObject {
       jsi::Function &&callback,
       jsi::Runtime &runtime,
       std::shared_ptr<CallInvoker> jsInvoker) {
-    auto wrapper = std::shared_ptr<CallbackWrapper>(new CallbackWrapper(
-        std::move(callback), runtime, std::move(jsInvoker)));
+    auto wrapper = std::shared_ptr<CallbackWrapper>(
+        new CallbackWrapper(std::move(callback), runtime, jsInvoker));
     LongLivedObjectCollection::get().add(wrapper);
     return wrapper;
   }
 
+  static std::weak_ptr<CallbackWrapper> createWeak(
+      std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection,
+      jsi::Function &&callback,
+      jsi::Runtime &runtime,
+      std::shared_ptr<CallInvoker> jsInvoker) {
+    auto wrapper = std::shared_ptr<CallbackWrapper>(new CallbackWrapper(
+        longLivedObjectCollection, std::move(callback), runtime, jsInvoker));
+    longLivedObjectCollection->add(wrapper);
+    return wrapper;
+  }
+
   // Delete the enclosed jsi::Function
   void destroy() {
     allowRelease();
@@ -61,6 +87,16 @@ class CallbackWrapper : public LongLivedObject {
   std::shared_ptr<CallInvoker> jsInvokerPtr() {
     return jsInvoker_;
   }
+
+  void allowRelease() override {
+    if (auto longLivedObjectCollection = longLivedObjectCollection_.lock()) {
+      if (longLivedObjectCollection != nullptr) {
+        longLivedObjectCollection->remove(this);
+        return;
+      }
+    }
+    LongLivedObject::allowRelease();
+  }
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/bridging/Function.h b/node_modules/react-native/ReactCommon/react/bridging/Function.h
index 568dd59..fdac94b 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/Function.h
+++ b/node_modules/react-native/ReactCommon/react/bridging/Function.h
@@ -10,9 +10,7 @@
 #include <react/bridging/Base.h>
 #include <react/bridging/CallbackWrapper.h>
 
-#include <ReactCommon/SchedulerPriority.h>
-
-#include <butter/function.h>
+#include <folly/Function.h>
 
 namespace facebook::react {
 
@@ -39,36 +37,23 @@ class AsyncCallback {
   }
 
   void call(Args... args) const {
-    callInternal(std::nullopt, std::forward<Args>(args)...);
-  }
+    auto wrapper = callback_->wrapper_.lock();
+    if (!wrapper) {
+      throw std::runtime_error("Failed to call invalidated async callback");
+    }
 
-  void callWithPriority(SchedulerPriority priority, Args... args) const {
-    callInternal(priority, std::forward<Args>(args)...);
+    auto argsTuple = std::make_tuple(std::forward<Args>(args)...);
+
+    wrapper->jsInvoker().invokeAsync(
+        [callback = callback_,
+         argsPtr = std::make_shared<decltype(argsTuple)>(
+             std::move(argsTuple))] { callback->apply(std::move(*argsPtr)); });
   }
 
  private:
   friend Bridging<AsyncCallback>;
 
   std::shared_ptr<SyncCallback<void(Args...)>> callback_;
-
-  void callInternal(std::optional<SchedulerPriority> priority, Args... args)
-      const {
-    auto wrapper = callback_->wrapper_.lock();
-    if (!wrapper) {
-      throw std::runtime_error("Failed to call invalidated async callback");
-    }
-    auto fn = [callback = callback_,
-               argsPtr = std::make_shared<std::tuple<Args...>>(
-                   std::make_tuple(std::forward<Args>(args)...))] {
-      callback->apply(std::move(*argsPtr));
-    };
-
-    if (priority) {
-      wrapper->jsInvoker().invokeAsync(*priority, std::move(fn));
-    } else {
-      wrapper->jsInvoker().invokeAsync(std::move(fn));
-    }
-  }
 };
 
 template <typename R, typename... Args>
@@ -169,8 +154,8 @@ struct Bridging<SyncCallback<R(Args...)>> {
 };
 
 template <typename R, typename... Args>
-struct Bridging<butter::function<R(Args...)>> {
-  using Func = butter::function<R(Args...)>;
+struct Bridging<folly::Function<R(Args...)>> {
+  using Func = folly::Function<R(Args...)>;
   using IndexSequence = std::index_sequence_for<Args...>;
 
   static constexpr size_t kArgumentCount = sizeof...(Args);
@@ -217,17 +202,13 @@ struct Bridging<butter::function<R(Args...)>> {
 };
 
 template <typename R, typename... Args>
-struct Bridging<
-    std::function<R(Args...)>,
-    std::enable_if_t<!std::is_same_v<
-        std::function<R(Args...)>,
-        butter::function<R(Args...)>>>>
-    : Bridging<butter::function<R(Args...)>> {};
+struct Bridging<std::function<R(Args...)>>
+    : Bridging<folly::Function<R(Args...)>> {};
 
 template <typename R, typename... Args>
-struct Bridging<R(Args...)> : Bridging<butter::function<R(Args...)>> {};
+struct Bridging<R(Args...)> : Bridging<folly::Function<R(Args...)>> {};
 
 template <typename R, typename... Args>
-struct Bridging<R (*)(Args...)> : Bridging<butter::function<R(Args...)>> {};
+struct Bridging<R (*)(Args...)> : Bridging<folly::Function<R(Args...)>> {};
 
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.cpp b/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.cpp
index f5616fd..dc6d44d 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.cpp
+++ b/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.cpp
@@ -16,22 +16,27 @@ LongLivedObjectCollection &LongLivedObjectCollection::get() {
   return instance;
 }
 
-void LongLivedObjectCollection::add(std::shared_ptr<LongLivedObject> so) {
+LongLivedObjectCollection::LongLivedObjectCollection() {}
+
+void LongLivedObjectCollection::add(std::shared_ptr<LongLivedObject> so) const {
   std::lock_guard<std::mutex> lock(collectionMutex_);
-  collection_.insert(std::move(so));
+  collection_.insert(so);
 }
 
-void LongLivedObjectCollection::remove(const LongLivedObject *o) {
+void LongLivedObjectCollection::remove(const LongLivedObject *o) const {
   std::lock_guard<std::mutex> lock(collectionMutex_);
-  for (auto p = collection_.begin(); p != collection_.end(); p++) {
+  auto p = collection_.begin();
+  for (; p != collection_.end(); p++) {
     if (p->get() == o) {
-      collection_.erase(p);
       break;
     }
   }
+  if (p != collection_.end()) {
+    collection_.erase(p);
+  }
 }
 
-void LongLivedObjectCollection::clear() {
+void LongLivedObjectCollection::clear() const {
   std::lock_guard<std::mutex> lock(collectionMutex_);
   collection_.clear();
 }
@@ -42,6 +47,8 @@ size_t LongLivedObjectCollection::size() const {
 }
 
 // LongLivedObject
+LongLivedObject::LongLivedObject() {}
+LongLivedObject::~LongLivedObject() {}
 
 void LongLivedObject::allowRelease() {
   LongLivedObjectCollection::get().remove(this);
diff --git a/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.h b/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.h
index 2c2b5bf..cfb1008 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.h
+++ b/node_modules/react-native/ReactCommon/react/bridging/LongLivedObject.h
@@ -26,11 +26,11 @@ namespace react {
  */
 class LongLivedObject {
  public:
-  void allowRelease();
+  virtual void allowRelease();
 
  protected:
-  LongLivedObject() = default;
-  virtual ~LongLivedObject() = default;
+  LongLivedObject();
+  virtual ~LongLivedObject();
 };
 
 /**
@@ -40,18 +40,17 @@ class LongLivedObjectCollection {
  public:
   static LongLivedObjectCollection &get();
 
+  LongLivedObjectCollection();
   LongLivedObjectCollection(LongLivedObjectCollection const &) = delete;
   void operator=(LongLivedObjectCollection const &) = delete;
 
-  void add(std::shared_ptr<LongLivedObject> o);
-  void remove(const LongLivedObject *o);
-  void clear();
+  void add(std::shared_ptr<LongLivedObject> o) const;
+  void remove(const LongLivedObject *o) const;
+  void clear() const;
   size_t size() const;
 
  private:
-  LongLivedObjectCollection() = default;
-
-  std::unordered_set<std::shared_ptr<LongLivedObject>> collection_;
+  mutable std::unordered_set<std::shared_ptr<LongLivedObject>> collection_;
   mutable std::mutex collectionMutex_;
 };
 
diff --git a/node_modules/react-native/ReactCommon/react/bridging/Number.h b/node_modules/react-native/ReactCommon/react/bridging/Number.h
index fdc39d4..4857b9e 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/Number.h
+++ b/node_modules/react-native/ReactCommon/react/bridging/Number.h
@@ -44,15 +44,4 @@ struct Bridging<int32_t> {
   }
 };
 
-template <>
-struct Bridging<uint32_t> {
-  static uint32_t fromJs(jsi::Runtime &, const jsi::Value &value) {
-    return (uint32_t)value.asNumber();
-  }
-
-  static jsi::Value toJs(jsi::Runtime &, uint32_t value) {
-    return (double)value;
-  }
-};
-
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/bridging/tests/BridgingTest.cpp b/node_modules/react-native/ReactCommon/react/bridging/tests/BridgingTest.cpp
index 995bce4..a1f50fe 100644
--- a/node_modules/react-native/ReactCommon/react/bridging/tests/BridgingTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/bridging/tests/BridgingTest.cpp
@@ -60,21 +60,6 @@ TEST_F(BridgingTest, numberTest) {
   EXPECT_FLOAT_EQ(
       1.2f, static_cast<float>(bridging::toJs(rt, 1.2f).asNumber()));
   EXPECT_DOUBLE_EQ(1.2, bridging::toJs(rt, 1.2).asNumber());
-
-  EXPECT_EQ(
-      42,
-      static_cast<uint32_t>(
-          bridging::toJs(rt, static_cast<uint32_t>(42)).asNumber()));
-
-  EXPECT_EQ(
-      -42,
-      static_cast<uint32_t>(
-          bridging::toJs(rt, static_cast<uint32_t>(-42)).asNumber()));
-
-  EXPECT_FALSE(
-      -42 ==
-      static_cast<int32_t>(
-          bridging::toJs(rt, static_cast<uint32_t>(-42)).asNumber()));
 }
 
 TEST_F(BridgingTest, stringTest) {
@@ -420,7 +405,7 @@ TEST_F(BridgingTest, pointerTest) {
   auto str = "hi"s;
   auto unique = std::make_unique<std::string>(str);
   auto shared = std::make_shared<std::string>(str);
-  auto weak = std::weak_ptr<std::string>(shared);
+  auto weak = std::weak_ptr(shared);
 
   EXPECT_EQ(str, bridging::toJs(rt, unique, invoker).asString(rt).utf8(rt));
   EXPECT_EQ(str, bridging::toJs(rt, shared, invoker).asString(rt).utf8(rt));
diff --git a/node_modules/react-native/ReactCommon/react/config/.clang-tidy b/node_modules/react-native/ReactCommon/react/config/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/react/config/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/react/config/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.cpp b/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.cpp
index 9a496f9..abb3311 100644
--- a/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.cpp
+++ b/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.cpp
@@ -21,9 +21,6 @@ ReactNativeConfig::~ReactNativeConfig() {}
 EmptyReactNativeConfig::EmptyReactNativeConfig() {}
 
 bool EmptyReactNativeConfig::getBool(const std::string &param) const {
-  if (param == "react_fabric:enabled_layout_animations_ios") {
-    return true;
-  }
   return false;
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.h b/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.h
index 65ff784..63a8f2f 100644
--- a/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.h
+++ b/node_modules/react-native/ReactCommon/react/config/ReactNativeConfig.h
@@ -28,7 +28,7 @@ class ReactNativeConfig {
 };
 
 /**
- * Empty configuration that will provide hardcoded values.
+ * Empty configuration that will always provide "falsy" values.
  */
 class EmptyReactNativeConfig : public ReactNativeConfig {
  public:
diff --git a/node_modules/react-native/ReactCommon/react/debug/CMakeLists.txt b/node_modules/react-native/ReactCommon/react/debug/CMakeLists.txt
index ccfc698..620a1c5 100644
--- a/node_modules/react-native/ReactCommon/react/debug/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/react/debug/CMakeLists.txt
@@ -22,7 +22,3 @@ add_library(react_debug SHARED ${react_debug_SRC})
 target_include_directories(react_debug PUBLIC ${REACT_COMMON_DIR})
 
 target_link_libraries(react_debug log folly_runtime)
-
-if(${CMAKE_BUILD_TYPE} MATCHES Release)
-        target_compile_options(react_debug PUBLIC -DNDEBUG)
-endif()
diff --git a/node_modules/react-native/ReactCommon/react/debug/React-debug.podspec b/node_modules/react-native/ReactCommon/react/debug/React-debug.podspec
deleted file mode 100644
index 5a27310..0000000
--- a/node_modules/react-native/ReactCommon/react/debug/React-debug.podspec
+++ /dev/null
@@ -1,36 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "..", "..", "..", "package.json")))
-version = package['version']
-
-source = { :git => 'https://github.com/facebook/react-native.git' }
-if version == '1000.0.0'
-  # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
-  source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
-else
-  source[:tag] = "v#{version}"
-end
-
-Pod::Spec.new do |s|
-  s.name                   = "React-debug"
-  s.version                = version
-  s.summary                = "-"  # TODO
-  s.homepage               = "https://reactnative.dev/"
-  s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
-  s.platforms              = { :ios => min_ios_version_supported }
-  s.source                 = source
-  s.source_files           = "**/*.{cpp,h}"
-  s.header_dir             = "react/debug"
-  s.pod_target_xcconfig    = { "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }
-
-  if ENV['USE_FRAMEWORKS']
-    s.module_name            = "React_debug"
-    s.header_mappings_dir  = File.absolute_path("../..")
-  end
-end
diff --git a/node_modules/react-native/ReactCommon/react/debug/flags.h b/node_modules/react-native/ReactCommon/react/debug/flags.h
index dae3ecc..62d1cc4 100644
--- a/node_modules/react-native/ReactCommon/react/debug/flags.h
+++ b/node_modules/react-native/ReactCommon/react/debug/flags.h
@@ -10,9 +10,7 @@
 //
 // Enable REACT_NATIVE_DEBUG if NDEBUG is not defined.
 // Due to BUCK defaults in open-source, NDEBUG is always defined for all android
-// builds.
-// If you build in OSS with CMake, you will have -DNDEBUG set only for release
-// builds, therefore REACT_NATIVE_DEBUG will not be set. Here we introduce
+// builds (if you build without BUCK, this isn't an issue). Thus we introduce
 // REACT_NATIVE_DEBUG that we use internally instead of NDEBUG that we can
 // control and use as a more reliable xplat flag. For any build that doesn't
 // have NDEBUG defined, we enable REACT_NATIVE_DEBUG for convenience.
diff --git a/node_modules/react-native/ReactCommon/react/debug/react_native_assert.h b/node_modules/react-native/ReactCommon/react/debug/react_native_assert.h
index 9ee5ce6..b152858 100644
--- a/node_modules/react-native/ReactCommon/react/debug/react_native_assert.h
+++ b/node_modules/react-native/ReactCommon/react/debug/react_native_assert.h
@@ -12,12 +12,6 @@
 // test before moving on. When all issues have been found, maybe we can use
 // `UNDEBUG` flag to disable NDEBUG in debug builds on Android.
 
-// Asserting is appropriate for conditions that:
-//   1. May or may not be recoverable, and
-//   2. imply there is a bug in React Native when violated.
-// For recoverable conditions that can be violated by user mistake (e.g. JS
-// code passes an unexpected prop value), consider react_native_expect instead.
-
 #include "flags.h"
 
 #undef react_native_assert
diff --git a/node_modules/react-native/ReactCommon/react/debug/react_native_expect.h b/node_modules/react-native/ReactCommon/react/debug/react_native_expect.h
deleted file mode 100644
index 4565666..0000000
--- a/node_modules/react-native/ReactCommon/react/debug/react_native_expect.h
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-// No header guards since it is legitimately possible to include this file more
-// than once with and without REACT_NATIVE_DEBUG.
-
-// react_native_expect is a non-fatal counterpart of react_native_assert.
-// In debug builds, when an expectation fails, we log and move on.
-// In release builds, react_native_expect is a noop.
-
-// react_native_expect is appropriate for recoverable conditions that can be
-// violated by user mistake (e.g. JS code passes an unexpected prop value).
-// To enforce invariants that are internal to React Native, consider
-// react_native_assert (or a stronger mechanism).
-// Calling react_native_expect does NOT, by itself, guarantee that the user
-// will see a helpful diagnostic (beyond a low level log). That concern is the
-// caller's responsibility.
-
-#include "flags.h"
-
-#undef react_native_expect
-
-#ifndef REACT_NATIVE_DEBUG
-
-#define react_native_expect(e) ((void)0)
-
-#else // REACT_NATIVE_DEBUG
-
-#include <glog/logging.h>
-#include <cassert>
-
-#define react_native_expect(cond)                           \
-  if (!(cond)) {                                            \
-    LOG(ERROR) << "react_native_expect failure: " << #cond; \
-  }
-
-#endif // REACT_NATIVE_DEBUG
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/.clang-tidy b/node_modules/react-native/ReactCommon/react/nativemodule/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/BUCK b/node_modules/react-native/ReactCommon/react/nativemodule/core/BUCK
index 143dcb6..9de875e 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/BUCK
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/BUCK
@@ -1,7 +1,5 @@
 load("//tools/build_defs/oss:rn_defs.bzl", "ANDROID", "APPLE", "CXX", "FBJNI_TARGET", "get_objc_arc_preprocessor_flags", "get_preprocessor_flags_for_build_mode", "get_static_library_ios_flags", "react_native_target", "react_native_xplat_shared_library_target", "react_native_xplat_target", "rn_xplat_cxx_library", "subdir_glob")
 
-oncall("react_native")
-
 rn_xplat_cxx_library(
     name = "core",
     srcs = glob(
@@ -45,7 +43,7 @@ rn_xplat_cxx_library(
     ],
     ios_exported_headers = subdir_glob(
         [
-            ("platform/ios/ReactCommon", "*.h"),
+            ("platform/ios", "*.h"),
         ],
         prefix = "ReactCommon",
     ),
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboCxxModule.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboCxxModule.cpp
index 1e5a1f6..82d8767 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboCxxModule.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboCxxModule.cpp
@@ -111,12 +111,7 @@ jsi::Value TurboCxxModule::get(
 
   // If we have a JS wrapper, cache the result of this lookup
   if (jsRepresentation_) {
-    auto jsRepresentation = jsRepresentation_->lock(runtime);
-    if (!jsRepresentation.isUndefined()) {
-      std::move(jsRepresentation)
-          .asObject(runtime)
-          .setProperty(runtime, propName, result);
-    }
+    jsRepresentation_->setProperty(runtime, propName, result);
   }
 
   return result;
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.cpp
index 75b7c5d..89ac90b 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.cpp
@@ -15,11 +15,11 @@ TurboModule::TurboModule(
     std::shared_ptr<CallInvoker> jsInvoker)
     : name_(std::move(name)), jsInvoker_(std::move(jsInvoker)) {}
 
-jsi::Value TurboModule::createHostFunction(
+jsi::Value TurboModule::get(
     jsi::Runtime &runtime,
     const jsi::PropNameID &propName,
     const MethodMetadata &meta) {
-  return jsi::Function::createFromHostFunction(
+  auto result = jsi::Function::createFromHostFunction(
       runtime,
       propName,
       static_cast<unsigned int>(meta.argCount),
@@ -28,30 +28,12 @@ jsi::Value TurboModule::createHostFunction(
           const jsi::Value &thisVal,
           const jsi::Value *args,
           size_t count) { return meta.invoker(rt, *this, args, count); });
-}
-
-void TurboModule::emitDeviceEvent(
-    jsi::Runtime &runtime,
-    const std::string &eventName,
-    ArgFactory argFactory) {
-  jsInvoker_->invokeAsync([&runtime, eventName, argFactory]() {
-    jsi::Value emitter =
-        runtime.global().getProperty(runtime, "__rctDeviceEventEmitter");
-    if (!emitter.isUndefined()) {
-      jsi::Object emitterObject = emitter.asObject(runtime);
-      // TODO: consider caching these
-      jsi::Function emitFunction =
-          emitterObject.getPropertyAsFunction(runtime, "emit");
-      std::vector<jsi::Value> args;
-      args.emplace_back(
-          jsi::String::createFromAscii(runtime, eventName.c_str()));
-      if (argFactory) {
-        argFactory(runtime, args);
-      }
-      emitFunction.callWithThis(
-          runtime, emitterObject, (const jsi::Value *)args.data(), args.size());
-    }
-  });
+  // If we have a JS wrapper, cache the result of this lookup
+  // We don't cache misses, to allow for methodMap_ to dynamically be extended
+  if (jsRepresentation_) {
+    jsRepresentation_->setProperty(runtime, propName, result);
+  }
+  return result;
 }
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.h
index 8ca27a2..866a0b4 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModule.h
@@ -54,15 +54,7 @@ class JSI_EXPORT TurboModule : public facebook::jsi::HostObject {
         // Method was not found, let JS decide what to do.
         return facebook::jsi::Value::undefined();
       } else {
-        auto moduleMethod = createHostFunction(runtime, propName, p->second);
-        // If we have a JS wrapper, cache the result of this lookup
-        // We don't cache misses, to allow for methodMap_ to dynamically be
-        // extended
-        if (jsRepresentation_) {
-          jsRepresentation_->lock(runtime).asObject(runtime).setProperty(
-              runtime, propName, moduleMethod);
-        }
-        return moduleMethod;
+        return get(runtime, propName, p->second);
       }
     }
   }
@@ -91,32 +83,12 @@ class JSI_EXPORT TurboModule : public facebook::jsi::HostObject {
   };
   std::unordered_map<std::string, MethodMetadata> methodMap_;
 
-  using ArgFactory =
-      std::function<void(jsi::Runtime &runtime, std::vector<jsi::Value> &args)>;
-
-  /**
-   * Calls RCTDeviceEventEmitter.emit to JavaScript, with given event name and
-   * an optional list of arguments.
-   * If present, argFactory is a callback used to construct extra arguments,
-   * e.g.
-   *
-   *  emitDeviceEvent(rt, "myCustomEvent",
-   *    [](jsi::Runtime& rt, std::vector<jsi::Value>& args) {
-   *      args.emplace_back(jsi::Value(true));
-   *      args.emplace_back(jsi::Value(42));
-   *  });
-   */
-  void emitDeviceEvent(
-      jsi::Runtime &runtime,
-      const std::string &eventName,
-      ArgFactory argFactory = nullptr);
-
  private:
   friend class TurboCxxModule;
   friend class TurboModuleBinding;
-  std::unique_ptr<jsi::WeakObject> jsRepresentation_;
+  std::unique_ptr<jsi::Object> jsRepresentation_;
 
-  facebook::jsi::Value createHostFunction(
+  facebook::jsi::Value get(
       facebook::jsi::Runtime &runtime,
       const facebook::jsi::PropNameID &propName,
       const MethodMetadata &meta);
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.cpp
index cc08d03..03c65ef 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.cpp
@@ -23,14 +23,18 @@ namespace react {
  */
 
 TurboModuleBinding::TurboModuleBinding(
+    const TurboModuleProviderFunctionType &&moduleProvider,
     TurboModuleBindingMode bindingMode,
-    TurboModuleProviderFunctionType &&moduleProvider)
-    : bindingMode_(bindingMode), moduleProvider_(std::move(moduleProvider)) {}
+    std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection)
+    : moduleProvider_(std::move(moduleProvider)),
+      longLivedObjectCollection_(std::move(longLivedObjectCollection)),
+      bindingMode_(bindingMode) {}
 
 void TurboModuleBinding::install(
     jsi::Runtime &runtime,
+    const TurboModuleProviderFunctionType &&moduleProvider,
     TurboModuleBindingMode bindingMode,
-    TurboModuleProviderFunctionType &&moduleProvider) {
+    std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection) {
   runtime.global().setProperty(
       runtime,
       "__turboModuleProxy",
@@ -38,28 +42,37 @@ void TurboModuleBinding::install(
           runtime,
           jsi::PropNameID::forAscii(runtime, "__turboModuleProxy"),
           1,
-          [binding =
-               TurboModuleBinding(bindingMode, std::move(moduleProvider))](
+          [binding = TurboModuleBinding(
+               std::move(moduleProvider),
+               bindingMode,
+               std::move(longLivedObjectCollection))](
               jsi::Runtime &rt,
               const jsi::Value &thisVal,
               const jsi::Value *args,
-              size_t count) {
-            if (count < 1) {
-              throw std::invalid_argument(
-                  "__turboModuleProxy must be called with at least 1 argument");
-            }
-            std::string moduleName = args[0].getString(rt).utf8(rt);
-            return binding.getModule(rt, moduleName);
+              size_t count) mutable {
+            return binding.getModule(rt, thisVal, args, count);
           }));
 }
 
 TurboModuleBinding::~TurboModuleBinding() {
-  LongLivedObjectCollection::get().clear();
+  if (longLivedObjectCollection_) {
+    longLivedObjectCollection_->clear();
+  } else {
+    LongLivedObjectCollection::get().clear();
+  }
 }
 
 jsi::Value TurboModuleBinding::getModule(
     jsi::Runtime &runtime,
-    const std::string &moduleName) const {
+    const jsi::Value &thisVal,
+    const jsi::Value *args,
+    size_t count) {
+  if (count < 1) {
+    throw std::invalid_argument(
+        "__turboModuleProxy must be called with at least 1 argument");
+  }
+  std::string moduleName = args[0].getString(runtime).utf8(runtime);
+
   std::shared_ptr<TurboModule> module;
   {
     SystraceSection s(
@@ -72,33 +85,25 @@ jsi::Value TurboModuleBinding::getModule(
       return jsi::Object::createFromHostObject(runtime, std::move(module));
     }
 
-    auto &weakJsRepresentation = module->jsRepresentation_;
-    if (weakJsRepresentation) {
-      auto jsRepresentation = weakJsRepresentation->lock(runtime);
-      if (!jsRepresentation.isUndefined()) {
-        return jsRepresentation;
-      }
-    }
-
-    // No JS representation found, or object has been collected
-    jsi::Object jsRepresentation(runtime);
-    weakJsRepresentation =
-        std::make_unique<jsi::WeakObject>(runtime, jsRepresentation);
-
-    if (bindingMode_ == TurboModuleBindingMode::Prototype) {
-      // Option 1: create plain object, with it's prototype mapped back to the
-      // hostobject. Any properties accessed are stored on the plain object
-      auto hostObject =
-          jsi::Object::createFromHostObject(runtime, std::move(module));
-      jsRepresentation.setProperty(runtime, "__proto__", std::move(hostObject));
-    } else {
-      // Option 2: eagerly install all hostfunctions at this point, avoids
-      // prototype
-      for (auto &propName : module->getPropertyNames(runtime)) {
-        module->get(runtime, propName);
+    auto &jsRepresentation = module->jsRepresentation_;
+    if (!jsRepresentation) {
+      jsRepresentation = std::make_unique<jsi::Object>(runtime);
+      if (bindingMode_ == TurboModuleBindingMode::Prototype) {
+        // Option 1: create plain object, with it's prototype mapped back to the
+        // hostobject. Any properties accessed are stored on the plain object
+        auto hostObject =
+            jsi::Object::createFromHostObject(runtime, std::move(module));
+        jsRepresentation->setProperty(
+            runtime, "__proto__", std::move(hostObject));
+      } else {
+        // Option 2: eagerly install all hostfunctions at this point, avoids
+        // prototype
+        for (auto &propName : module->getPropertyNames(runtime)) {
+          module->get(runtime, propName);
+        }
       }
     }
-    return jsRepresentation;
+    return jsi::Value(runtime, *jsRepresentation);
   } else {
     return jsi::Value::null();
   }
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.h
index cbcd729..1791d4e 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleBinding.h
@@ -9,12 +9,15 @@
 
 #include <string>
 
+#include <ReactCommon/LongLivedObject.h>
 #include <ReactCommon/TurboModule.h>
 #include <jsi/jsi.h>
 
 namespace facebook {
 namespace react {
 
+class JSCallInvoker;
+
 enum class TurboModuleBindingMode : uint8_t {
   HostObject = 0,
   Prototype = 1,
@@ -32,24 +35,30 @@ class TurboModuleBinding {
    */
   static void install(
       jsi::Runtime &runtime,
+      const TurboModuleProviderFunctionType &&moduleProvider,
       TurboModuleBindingMode bindingMode,
-      TurboModuleProviderFunctionType &&moduleProvider);
+      std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection);
 
  private:
   TurboModuleBinding(
+      const TurboModuleProviderFunctionType &&moduleProvider,
       TurboModuleBindingMode bindingMode,
-      TurboModuleProviderFunctionType &&moduleProvider);
+      std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection);
   virtual ~TurboModuleBinding();
 
   /**
    * A lookup function exposed to JS to get an instance of a TurboModule
    * for the given name.
    */
-  jsi::Value getModule(jsi::Runtime &runtime, const std::string &moduleName)
-      const;
+  jsi::Value getModule(
+      jsi::Runtime &runtime,
+      const jsi::Value &thisVal,
+      const jsi::Value *args,
+      size_t count);
 
-  TurboModuleBindingMode bindingMode_;
   TurboModuleProviderFunctionType moduleProvider_;
+  std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection_;
+  TurboModuleBindingMode bindingMode_;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.cpp
index 8662775..cf9726a 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.cpp
@@ -79,13 +79,13 @@ void Promise::reject(const std::string &message) {
 
 jsi::Value createPromiseAsJSIValue(
     jsi::Runtime &rt,
-    PromiseSetupFunctionType &&func) {
+    const PromiseSetupFunctionType func) {
   jsi::Function JSPromise = rt.global().getPropertyAsFunction(rt, "Promise");
   jsi::Function fn = jsi::Function::createFromHostFunction(
       rt,
       jsi::PropNameID::forAscii(rt, "fn"),
       2,
-      [func = std::move(func)](
+      [func](
           jsi::Runtime &rt2,
           const jsi::Value &thisVal,
           const jsi::Value *args,
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.h
index 0bc4a86..6136658 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/ReactCommon/TurboModuleUtils.h
@@ -36,7 +36,7 @@ using PromiseSetupFunctionType =
     std::function<void(jsi::Runtime &rt, std::shared_ptr<Promise>)>;
 jsi::Value createPromiseAsJSIValue(
     jsi::Runtime &rt,
-    PromiseSetupFunctionType &&func);
+    const PromiseSetupFunctionType func);
 
 class RAIICallbackWrapperDestroyer {
  public:
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.cpp
index 280780b..92e4c2b 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.cpp
@@ -15,7 +15,6 @@
 #include <ReactCommon/TurboModule.h>
 #include <ReactCommon/TurboModulePerfLogger.h>
 #include <ReactCommon/TurboModuleUtils.h>
-#include <butter/function.h>
 #include <jsi/JSIDynamic.h>
 #include <react/debug/react_native_assert.h>
 #include <react/jni/NativeMap.h>
@@ -32,7 +31,8 @@ namespace TMPL = TurboModulePerfLogger;
 JavaTurboModule::JavaTurboModule(const InitParams &params)
     : TurboModule(params.moduleName, params.jsInvoker),
       instance_(jni::make_global(params.instance)),
-      nativeInvoker_(params.nativeInvoker) {}
+      nativeInvoker_(params.nativeInvoker),
+      retainJSCallback_(params.retainJSCallback) {}
 
 JavaTurboModule::~JavaTurboModule() {
   /**
@@ -63,11 +63,13 @@ struct JNIArgs {
 };
 
 jni::local_ref<JCxxCallbackImpl::JavaPart> createJavaCallbackFromJSIFunction(
+    const JSCallbackRetainer &retainJSCallback,
     jsi::Function &&function,
     jsi::Runtime &rt,
     const std::shared_ptr<CallInvoker> &jsInvoker) {
-  auto weakWrapper =
-      CallbackWrapper::createWeak(std::move(function), rt, jsInvoker);
+  auto weakWrapper = retainJSCallback != nullptr
+      ? retainJSCallback(std::move(function), rt, jsInvoker)
+      : react::CallbackWrapper::createWeak(std::move(function), rt, jsInvoker);
 
   // This needs to be a shared_ptr because:
   // 1. It cannot be unique_ptr. std::function is copyable but unique_ptr is
@@ -78,13 +80,12 @@ jni::local_ref<JCxxCallbackImpl::JavaPart> createJavaCallbackFromJSIFunction(
   auto callbackWrapperOwner =
       std::make_shared<RAIICallbackWrapperDestroyer>(weakWrapper);
 
-  return JCxxCallbackImpl::newObjectCxxArgs(
-      [weakWrapper = std::move(weakWrapper),
-       callbackWrapperOwner = std::move(callbackWrapperOwner),
-       wrapperWasCalled = false](folly::dynamic responses) mutable {
+  std::function<void(folly::dynamic)> fn =
+      [weakWrapper, callbackWrapperOwner, wrapperWasCalled = false](
+          folly::dynamic responses) mutable {
         if (wrapperWasCalled) {
           throw std::runtime_error(
-              "Callback arg cannot be called more than once");
+              "callback 2 arg cannot be called more than once");
         }
 
         auto strongWrapper = weakWrapper.lock();
@@ -93,29 +94,37 @@ jni::local_ref<JCxxCallbackImpl::JavaPart> createJavaCallbackFromJSIFunction(
         }
 
         strongWrapper->jsInvoker().invokeAsync(
-            [weakWrapper = std::move(weakWrapper),
-             callbackWrapperOwner = std::move(callbackWrapperOwner),
-             responses = std::move(responses)]() {
+            [weakWrapper, callbackWrapperOwner, responses]() mutable {
               auto strongWrapper2 = weakWrapper.lock();
               if (!strongWrapper2) {
                 return;
               }
 
-              std::vector<jsi::Value> args;
-              args.reserve(responses.size());
-              for (const auto &val : responses) {
-                args.emplace_back(
-                    jsi::valueFromDynamic(strongWrapper2->runtime(), val));
+              // TODO (T43155926) valueFromDynamic already returns a Value
+              // array. Don't iterate again
+              jsi::Value args =
+                  jsi::valueFromDynamic(strongWrapper2->runtime(), responses);
+              auto argsArray = args.getObject(strongWrapper2->runtime())
+                                   .asArray(strongWrapper2->runtime());
+              std::vector<jsi::Value> result;
+              for (size_t i = 0; i < argsArray.size(strongWrapper2->runtime());
+                   i++) {
+                result.emplace_back(
+                    strongWrapper2->runtime(),
+                    argsArray.getValueAtIndex(strongWrapper2->runtime(), i));
               }
-
               strongWrapper2->callback().call(
                   strongWrapper2->runtime(),
-                  (const jsi::Value *)args.data(),
-                  args.size());
+                  (const jsi::Value *)result.data(),
+                  result.size());
+
+              callbackWrapperOwner.reset();
             });
 
         wrapperWasCalled = true;
-      });
+      };
+
+  return JCxxCallbackImpl::newObjectCxxArgs(fn);
 }
 
 // This is used for generating short exception strings.
@@ -244,7 +253,8 @@ JNIArgs convertJSIArgsToJNIArgs(
     const jsi::Value *args,
     size_t count,
     const std::shared_ptr<CallInvoker> &jsInvoker,
-    TurboModuleMethodValueKind valueKind) {
+    TurboModuleMethodValueKind valueKind,
+    const JSCallbackRetainer &retainJSCallback) {
   unsigned int expectedArgumentCount = valueKind == PromiseKind
       ? methodArgTypes.size() - 1
       : methodArgTypes.size();
@@ -324,7 +334,8 @@ JNIArgs convertJSIArgsToJNIArgs(
       }
       jsi::Function fn = arg->getObject(rt).getFunction(rt);
       jarg->l = makeGlobalIfNecessary(
-          createJavaCallbackFromJSIFunction(std::move(fn), rt, jsInvoker)
+          createJavaCallbackFromJSIFunction(
+              retainJSCallback, std::move(fn), rt, jsInvoker)
               .release());
     } else if (type == "Lcom/facebook/react/bridge/ReadableArray;") {
       if (!(arg->isObject() && arg->getObject(rt).isArray(rt))) {
@@ -363,7 +374,8 @@ jsi::Value convertFromJMapToValue(JNIEnv *env, jsi::Runtime &rt, jobject arg) {
       jArguments,
       "makeNativeMap",
       "(Ljava/util/Map;)Lcom/facebook/react/bridge/WritableNativeMap;");
-  auto constants = env->CallStaticObjectMethod(jArguments, jMakeNativeMap, arg);
+  auto constants =
+      (jobject)env->CallStaticObjectMethod(jArguments, jMakeNativeMap, arg);
   auto jResult = jni::adopt_local(constants);
   auto result = jni::static_ref_cast<NativeMap::jhybridobject>(jResult);
   return jsi::valueFromDynamic(rt, result->cthis()->consume());
@@ -480,7 +492,8 @@ jsi::Value JavaTurboModule::invokeJavaMethod(
       args,
       argCount,
       jsInvoker_,
-      valueKind);
+      valueKind,
+      retainJSCallback_);
 
   if (isMethodSync && valueKind != PromiseKind) {
     TMPL::syncMethodCallArgConversionEnd(moduleName, methodName);
@@ -683,7 +696,8 @@ jsi::Value JavaTurboModule::invokeJavaMethod(
            methodID,
            moduleNameStr = name_,
            methodNameStr,
-           env](
+           env,
+           retainJSCallback = retainJSCallback_](
               jsi::Runtime &runtime,
               const jsi::Value &thisVal,
               const jsi::Value *promiseConstructorArgs,
@@ -700,10 +714,16 @@ jsi::Value JavaTurboModule::invokeJavaMethod(
                     runtime);
 
             auto resolve = createJavaCallbackFromJSIFunction(
-                               std::move(resolveJSIFn), runtime, jsInvoker_)
+                               retainJSCallback,
+                               std::move(resolveJSIFn),
+                               runtime,
+                               jsInvoker_)
                                .release();
             auto reject = createJavaCallbackFromJSIFunction(
-                              std::move(rejectJSIFn), runtime, jsInvoker_)
+                              retainJSCallback,
+                              std::move(rejectJSIFn),
+                              runtime,
+                              jsInvoker_)
                               .release();
 
             jclass jPromiseImpl =
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.h
index 8988189..e420e46 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/android/ReactCommon/JavaTurboModule.h
@@ -25,14 +25,20 @@ struct JTurboModule : jni::JavaClass<JTurboModule> {
       "Lcom/facebook/react/turbomodule/core/interfaces/TurboModule;";
 };
 
+using JSCallbackRetainer = std::function<std::weak_ptr<CallbackWrapper>(
+    jsi::Function &&callback,
+    jsi::Runtime &runtime,
+    const std::shared_ptr<CallInvoker> &jsInvoker)>;
+
 class JSI_EXPORT JavaTurboModule : public TurboModule {
  public:
   // TODO(T65603471): Should we unify this with a Fabric abstraction?
   struct InitParams {
     std::string moduleName;
-    jni::alias_ref<jobject> instance;
+    jni::alias_ref<JTurboModule> instance;
     std::shared_ptr<CallInvoker> jsInvoker;
     std::shared_ptr<CallInvoker> nativeInvoker;
+    JSCallbackRetainer retainJSCallback;
   };
 
   JavaTurboModule(const InitParams &params);
@@ -48,9 +54,9 @@ class JSI_EXPORT JavaTurboModule : public TurboModule {
       jmethodID &cachedMethodID);
 
  private:
-  // instance_ can be of type JTurboModule, or JNativeModule
-  jni::global_ref<jobject> instance_;
+  jni::global_ref<JTurboModule> instance_;
   std::shared_ptr<CallInvoker> nativeInvoker_;
+  JSCallbackRetainer retainJSCallback_;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTBlockGuard.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTBlockGuard.h
similarity index 92%
rename from node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTBlockGuard.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTBlockGuard.h
index 0e34516..a4bbb8b 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTBlockGuard.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTBlockGuard.h
@@ -12,7 +12,7 @@ NS_ASSUME_NONNULL_BEGIN
 /**
  * RCTBlockGuard is designed to be used with obj-c blocks to assist with manual deallocation of C++ resources
  * tied to lifetime of a block. If C++ resources needs to be manually released at the end of block or when the block
- * is deallocated, place the clean up code inside constructor and make sure the instance of the class is references in
+ * is deallocated, place the clean up code inside constructor and make sure the instace of the class is references in
  * the block.
  */
 @interface RCTBlockGuard : NSObject
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTBlockGuard.mm b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTBlockGuard.mm
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTBlockGuard.mm
rename to node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTBlockGuard.mm
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModule.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModule.h
similarity index 94%
rename from node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModule.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModule.h
index 555c22b..1d16b08 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModule.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModule.h
@@ -29,6 +29,9 @@ namespace react {
 class CallbackWrapper;
 class Instance;
 
+typedef std::weak_ptr<CallbackWrapper> (
+    ^RCTRetainJSCallback)(jsi::Function &&callback, jsi::Runtime &runtime, std::shared_ptr<CallInvoker> jsInvoker);
+
 /**
  * ObjC++ specific TurboModule base class.
  */
@@ -41,6 +44,7 @@ class JSI_EXPORT ObjCTurboModule : public TurboModule {
     std::shared_ptr<CallInvoker> jsInvoker;
     std::shared_ptr<CallInvoker> nativeInvoker;
     bool isSyncModule;
+    RCTRetainJSCallback retainJSCallback;
   };
 
   ObjCTurboModule(const InitParams &params);
@@ -63,6 +67,8 @@ class JSI_EXPORT ObjCTurboModule : public TurboModule {
   // Does the NativeModule dispatch async methods to the JS thread?
   const bool isSyncModule_;
 
+  RCTRetainJSCallback retainJSCallback_;
+
   /**
    * TODO(ramanpreet):
    * Investigate an optimization that'll let us get rid of this NSMutableDictionary.
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModule.mm b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModule.mm
similarity index 90%
rename from node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModule.mm
rename to node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModule.mm
index e56672a..1ee5908 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModule.mm
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModule.mm
@@ -59,7 +59,7 @@ static int32_t getUniqueId()
 {
   jsi::Object result = jsi::Object(runtime);
   for (NSString *k in value) {
-    result.setProperty(runtime, convertNSStringToJSIString(runtime, k), convertObjCObjectToJSIValue(runtime, value[k]));
+    result.setProperty(runtime, [k UTF8String], convertObjCObjectToJSIValue(runtime, value[k]));
   }
   return result;
 }
@@ -101,28 +101,38 @@ static int32_t getUniqueId()
   return jsi::Value::undefined();
 }
 
-static id
-convertJSIValueToObjCObject(jsi::Runtime &runtime, const jsi::Value &value, std::shared_ptr<CallInvoker> jsInvoker);
+static id convertJSIValueToObjCObject(
+    jsi::Runtime &runtime,
+    const jsi::Value &value,
+    std::shared_ptr<CallInvoker> jsInvoker,
+    RCTRetainJSCallback retainJSCallback);
 static NSString *convertJSIStringToNSString(jsi::Runtime &runtime, const jsi::String &value)
 {
   return [NSString stringWithUTF8String:value.utf8(runtime).c_str()];
 }
 
-static NSArray *
-convertJSIArrayToNSArray(jsi::Runtime &runtime, const jsi::Array &value, std::shared_ptr<CallInvoker> jsInvoker)
+static NSArray *convertJSIArrayToNSArray(
+    jsi::Runtime &runtime,
+    const jsi::Array &value,
+    std::shared_ptr<CallInvoker> jsInvoker,
+    RCTRetainJSCallback retainJSCallback)
 {
   size_t size = value.size(runtime);
   NSMutableArray *result = [NSMutableArray new];
   for (size_t i = 0; i < size; i++) {
     // Insert kCFNull when it's `undefined` value to preserve the indices.
     [result
-        addObject:convertJSIValueToObjCObject(runtime, value.getValueAtIndex(runtime, i), jsInvoker) ?: (id)kCFNull];
+        addObject:convertJSIValueToObjCObject(runtime, value.getValueAtIndex(runtime, i), jsInvoker, retainJSCallback)
+            ?: (id)kCFNull];
   }
   return [result copy];
 }
 
-static NSDictionary *
-convertJSIObjectToNSDictionary(jsi::Runtime &runtime, const jsi::Object &value, std::shared_ptr<CallInvoker> jsInvoker)
+static NSDictionary *convertJSIObjectToNSDictionary(
+    jsi::Runtime &runtime,
+    const jsi::Object &value,
+    std::shared_ptr<CallInvoker> jsInvoker,
+    RCTRetainJSCallback retainJSCallback)
 {
   jsi::Array propertyNames = value.getPropertyNames(runtime);
   size_t size = propertyNames.size(runtime);
@@ -130,7 +140,7 @@ static int32_t getUniqueId()
   for (size_t i = 0; i < size; i++) {
     jsi::String name = propertyNames.getValueAtIndex(runtime, i).getString(runtime);
     NSString *k = convertJSIStringToNSString(runtime, name);
-    id v = convertJSIValueToObjCObject(runtime, value.getProperty(runtime, name), jsInvoker);
+    id v = convertJSIValueToObjCObject(runtime, value.getProperty(runtime, name), jsInvoker, retainJSCallback);
     if (v) {
       result[k] = v;
     }
@@ -138,10 +148,16 @@ static int32_t getUniqueId()
   return [result copy];
 }
 
-static RCTResponseSenderBlock
-convertJSIFunctionToCallback(jsi::Runtime &runtime, const jsi::Function &value, std::shared_ptr<CallInvoker> jsInvoker);
-static id
-convertJSIValueToObjCObject(jsi::Runtime &runtime, const jsi::Value &value, std::shared_ptr<CallInvoker> jsInvoker)
+static RCTResponseSenderBlock convertJSIFunctionToCallback(
+    jsi::Runtime &runtime,
+    const jsi::Function &value,
+    std::shared_ptr<CallInvoker> jsInvoker,
+    RCTRetainJSCallback retainJSCallback);
+static id convertJSIValueToObjCObject(
+    jsi::Runtime &runtime,
+    const jsi::Value &value,
+    std::shared_ptr<CallInvoker> jsInvoker,
+    RCTRetainJSCallback retainJSCallback)
 {
   if (value.isUndefined() || value.isNull()) {
     return nil;
@@ -158,21 +174,26 @@ static int32_t getUniqueId()
   if (value.isObject()) {
     jsi::Object o = value.getObject(runtime);
     if (o.isArray(runtime)) {
-      return convertJSIArrayToNSArray(runtime, o.getArray(runtime), jsInvoker);
+      return convertJSIArrayToNSArray(runtime, o.getArray(runtime), jsInvoker, retainJSCallback);
     }
     if (o.isFunction(runtime)) {
-      return convertJSIFunctionToCallback(runtime, std::move(o.getFunction(runtime)), jsInvoker);
+      return convertJSIFunctionToCallback(runtime, std::move(o.getFunction(runtime)), jsInvoker, retainJSCallback);
     }
-    return convertJSIObjectToNSDictionary(runtime, o, jsInvoker);
+    return convertJSIObjectToNSDictionary(runtime, o, jsInvoker, retainJSCallback);
   }
 
   throw std::runtime_error("Unsupported jsi::jsi::Value kind");
 }
 
-static RCTResponseSenderBlock
-convertJSIFunctionToCallback(jsi::Runtime &runtime, const jsi::Function &value, std::shared_ptr<CallInvoker> jsInvoker)
+static RCTResponseSenderBlock convertJSIFunctionToCallback(
+    jsi::Runtime &runtime,
+    const jsi::Function &value,
+    std::shared_ptr<CallInvoker> jsInvoker,
+    RCTRetainJSCallback retainJSCallback)
 {
-  auto weakWrapper = CallbackWrapper::createWeak(value.getFunction(runtime), runtime, jsInvoker);
+  auto weakWrapper = retainJSCallback != nil
+      ? retainJSCallback(value.getFunction(runtime), runtime, jsInvoker)
+      : CallbackWrapper::createWeak(value.getFunction(runtime), runtime, jsInvoker);
   RCTBlockGuard *blockGuard = [[RCTBlockGuard alloc] initWithCleanup:^() {
     auto strongWrapper = weakWrapper.lock();
     if (strongWrapper) {
@@ -230,7 +251,7 @@ static int32_t getUniqueId()
       runtime,
       jsi::PropNameID::forAscii(runtime, "fn"),
       2,
-      [invokeCopy, jsInvoker = jsInvoker_, moduleName, methodName](
+      [invokeCopy, jsInvoker = jsInvoker_, moduleName, methodName, retainJSCallback = retainJSCallback_](
           jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args, size_t count) {
         std::string moduleMethod = moduleName + "." + methodName + "()";
 
@@ -243,8 +264,12 @@ static int32_t getUniqueId()
           return jsi::Value::undefined();
         }
 
-        auto weakResolveWrapper = CallbackWrapper::createWeak(args[0].getObject(rt).getFunction(rt), rt, jsInvoker);
-        auto weakRejectWrapper = CallbackWrapper::createWeak(args[1].getObject(rt).getFunction(rt), rt, jsInvoker);
+        auto weakResolveWrapper = retainJSCallback != nil
+            ? retainJSCallback(args[0].getObject(rt).getFunction(rt), rt, jsInvoker)
+            : CallbackWrapper::createWeak(args[0].getObject(rt).getFunction(rt), rt, jsInvoker);
+        auto weakRejectWrapper = retainJSCallback != nil
+            ? retainJSCallback(args[1].getObject(rt).getFunction(rt), rt, jsInvoker)
+            : CallbackWrapper::createWeak(args[1].getObject(rt).getFunction(rt), rt, jsInvoker);
 
         __block BOOL resolveWasCalled = NO;
         __block BOOL rejectWasCalled = NO;
@@ -567,7 +592,8 @@ static int32_t getUniqueId()
     /**
      * Convert arg to ObjC objects.
      */
-    id objCArg = convertJSIValueToObjCObject(runtime, *arg, jsInvoker_);
+    id objCArg = convertJSIValueToObjCObject(runtime, *arg, jsInvoker_, retainJSCallback_);
+
     if (objCArg) {
       NSString *methodNameNSString = @(methodName);
 
@@ -639,7 +665,8 @@ static int32_t getUniqueId()
     : TurboModule(params.moduleName, params.jsInvoker),
       instance_(params.instance),
       nativeInvoker_(params.nativeInvoker),
-      isSyncModule_(params.isSyncModule)
+      isSyncModule_(params.isSyncModule),
+      retainJSCallback_(params.retainJSCallback)
 {
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModuleManager.h b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModuleManager.h
similarity index 88%
rename from node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModuleManager.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModuleManager.h
index 2124e05..016d382 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModuleManager.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModuleManager.h
@@ -9,14 +9,10 @@
 
 #import <memory>
 
-#import <React/RCTDefines.h>
 #import <React/RCTTurboModuleRegistry.h>
 #import <ReactCommon/RuntimeExecutor.h>
-#import <ReactCommon/TurboModuleBinding.h>
 #import "RCTTurboModule.h"
 
-RCT_EXTERN void RCTTurboModuleSetBindingMode(facebook::react::TurboModuleBindingMode bindingMode);
-
 @protocol RCTTurboModuleManagerDelegate <NSObject>
 
 @optional
@@ -48,7 +44,7 @@ RCT_EXTERN void RCTTurboModuleSetBindingMode(facebook::react::TurboModuleBinding
                       delegate:(id<RCTTurboModuleManagerDelegate>)delegate
                      jsInvoker:(std::shared_ptr<facebook::react::CallInvoker>)jsInvoker;
 
-- (void)installJSBindingWithRuntimeExecutor:(facebook::react::RuntimeExecutor &)runtimeExecutor;
+- (void)installJSBindingWithRuntimeExecutor:(facebook::react::RuntimeExecutor)runtimeExecutor;
 
 - (void)invalidate;
 
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModuleManager.mm b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModuleManager.mm
similarity index 89%
rename from node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModuleManager.mm
rename to node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModuleManager.mm
index 9bfea51..2b7ef22 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon/RCTTurboModuleManager.mm
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/RCTTurboModuleManager.mm
@@ -11,6 +11,7 @@
 #import <cassert>
 #import <condition_variable>
 #import <mutex>
+#import <shared_mutex>
 
 #import <objc/runtime.h>
 
@@ -25,18 +26,13 @@
 #import <React/RCTUtils.h>
 #import <ReactCommon/RuntimeExecutor.h>
 #import <ReactCommon/TurboCxxModule.h>
+#import <ReactCommon/TurboModuleBinding.h>
 #import <ReactCommon/TurboModulePerfLogger.h>
 #import <ReactCommon/TurboModuleUtils.h>
 
 using namespace facebook;
 using namespace facebook::react;
 
-static TurboModuleBindingMode sTurboModuleBindingMode = TurboModuleBindingMode::HostObject;
-void RCTTurboModuleSetBindingMode(TurboModuleBindingMode bindingMode)
-{
-  sTurboModuleBindingMode = bindingMode;
-}
-
 /**
  * A global variable whose address we use to associate method queues to id<RCTTurboModule> objects.
  */
@@ -177,8 +173,12 @@ @implementation RCTTurboModuleManager {
   std::mutex _turboModuleManagerDelegateMutex;
 
   // Enforce synchronous access to _invalidating and _turboModuleHolders
+  std::shared_timed_mutex _turboModuleHoldersSharedMutex;
   std::mutex _turboModuleHoldersMutex;
   std::atomic<bool> _invalidating;
+
+  RCTRetainJSCallback _retainJSCallback;
+  std::shared_ptr<LongLivedObjectCollection> _longLivedObjectCollection;
 }
 
 - (instancetype)initWithBridge:(RCTBridge *)bridge
@@ -186,7 +186,7 @@ - (instancetype)initWithBridge:(RCTBridge *)bridge
                      jsInvoker:(std::shared_ptr<CallInvoker>)jsInvoker
 {
   if (self = [super init]) {
-    _jsInvoker = std::move(jsInvoker);
+    _jsInvoker = jsInvoker;
     _delegate = delegate;
     _bridge = bridge;
     _invalidating = false;
@@ -199,6 +199,23 @@ - (instancetype)initWithBridge:(RCTBridge *)bridge
                                              selector:@selector(bridgeDidInvalidateModules:)
                                                  name:RCTBridgeDidInvalidateModulesNotification
                                                object:_bridge.parentBridge];
+
+    if (RCTGetTurboModuleCleanupMode() == kRCTGlobalScope) {
+      // Use LongLivedObjectCollection singleton regularly
+      _retainJSCallback = nil;
+    } else if (RCTGetTurboModuleCleanupMode() == kRCTGlobalScopeUsingRetainJSCallback) {
+      // Use LongLivedObjectCollection singleton via the _retainJSCallback
+      _retainJSCallback = ^(jsi::Function &&callback, jsi::Runtime &runtime, std::shared_ptr<CallInvoker> jsInvoker2) {
+        return CallbackWrapper::createWeak(std::move(callback), runtime, jsInvoker2);
+      };
+    } else if (RCTGetTurboModuleCleanupMode() == kRCTTurboModuleManagerScope) {
+      // Use a LongLivedObjectCollection scoped to the TurboModuleManager
+      _longLivedObjectCollection = std::make_shared<LongLivedObjectCollection>();
+      __block std::shared_ptr<LongLivedObjectCollection> longLivedObjectCollection = _longLivedObjectCollection;
+      _retainJSCallback = ^(jsi::Function &&callback, jsi::Runtime &runtime, std::shared_ptr<CallInvoker> jsInvoker2) {
+        return CallbackWrapper::createWeak(longLivedObjectCollection, std::move(callback), runtime, jsInvoker2);
+      };
+    }
   }
   return self;
 }
@@ -305,6 +322,7 @@ - (void)notifyAboutTurboModuleSetup:(const char *)name
       .jsInvoker = _jsInvoker,
       .nativeInvoker = nativeInvoker,
       .isSyncModule = methodQueue == RCTJSThread,
+      .retainJSCallback = _retainJSCallback,
   };
 
   /**
@@ -320,6 +338,23 @@ - (void)notifyAboutTurboModuleSetup:(const char *)name
 
 - (TurboModuleHolder *)_getOrCreateTurboModuleHolder:(const char *)moduleName
 {
+  if (RCTTurboModuleSharedMutexInitEnabled()) {
+    {
+      std::shared_lock<std::shared_timed_mutex> guard(_turboModuleHoldersSharedMutex);
+      if (_invalidating) {
+        return nullptr;
+      }
+
+      auto it = _turboModuleHolders.find(moduleName);
+      if (it != _turboModuleHolders.end()) {
+        return &it->second;
+      }
+    }
+
+    std::unique_lock<std::shared_timed_mutex> guard(_turboModuleHoldersSharedMutex);
+    return &_turboModuleHolders[moduleName];
+  }
+
   std::lock_guard<std::mutex> guard(_turboModuleHoldersMutex);
   if (_invalidating) {
     return nullptr;
@@ -452,7 +487,7 @@ - (TurboModuleHolder *)_getOrCreateTurboModuleHolder:(const char *)moduleName
     /**
      * TODO(T65905574):
      * If the thread responsible for creating and initializing the NativeModule stalls, we'll wait here indefinitely.
-     * This is the behaviour in legacy NativeModules. Changing this now could lead to more crashes/problems in
+     * This is the behaviour in legacy NativeModuels. Changing this now could lead to more crashes/problems in
      * TurboModules than in NativeModules, which'll make it more difficult to test the TurboModules infra. Therefore,
      * we should consider making it post TurboModule 100% rollout.
      */
@@ -696,7 +731,7 @@ - (BOOL)_requiresMainQueueSetup:(Class)moduleClass
   return requiresMainQueueSetup;
 }
 
-- (void)installJSBindingWithRuntimeExecutor:(facebook::react::RuntimeExecutor &)runtimeExecutor
+- (void)installJSBindingWithRuntimeExecutor:(facebook::react::RuntimeExecutor)runtimeExecutor
 {
   if (!runtimeExecutor) {
     // jsi::Runtime doesn't exist when attached to Chrome debugger.
@@ -740,9 +775,19 @@ - (void)installJSBindingWithRuntimeExecutor:(facebook::react::RuntimeExecutor &)
     return turboModule;
   };
 
-  runtimeExecutor([turboModuleProvider = std::move(turboModuleProvider)](jsi::Runtime &runtime) {
-    TurboModuleBinding::install(runtime, sTurboModuleBindingMode, std::move(turboModuleProvider));
-  });
+  if (RCTGetTurboModuleCleanupMode() == kRCTGlobalScope ||
+      RCTGetTurboModuleCleanupMode() == kRCTGlobalScopeUsingRetainJSCallback) {
+    runtimeExecutor([turboModuleProvider = std::move(turboModuleProvider)](jsi::Runtime &runtime) {
+      react::TurboModuleBinding::install(
+          runtime, std::move(turboModuleProvider), TurboModuleBindingMode::HostObject, nullptr);
+    });
+  } else if (RCTGetTurboModuleCleanupMode() == kRCTTurboModuleManagerScope) {
+    runtimeExecutor([turboModuleProvider = std::move(turboModuleProvider),
+                     longLivedObjectCollection = _longLivedObjectCollection](jsi::Runtime &runtime) {
+      react::TurboModuleBinding::install(
+          runtime, std::move(turboModuleProvider), TurboModuleBindingMode::HostObject, longLivedObjectCollection);
+    });
+  }
 }
 
 #pragma mark RCTTurboModuleRegistry
@@ -771,6 +816,11 @@ - (id)moduleForName:(const char *)moduleName warnOnLookupFailure:(BOOL)warnOnLoo
 
 - (BOOL)moduleIsInitialized:(const char *)moduleName
 {
+  if (RCTTurboModuleSharedMutexInitEnabled()) {
+    std::shared_lock<std::shared_timed_mutex> guard(_turboModuleHoldersSharedMutex);
+    return _turboModuleHolders.find(moduleName) != _turboModuleHolders.end();
+  }
+
   std::unique_lock<std::mutex> guard(_turboModuleHoldersMutex);
   return _turboModuleHolders.find(moduleName) != _turboModuleHolders.end();
 }
@@ -824,8 +874,13 @@ - (void)invalidate
 - (void)_enterInvalidatingState
 {
   // This should halt all insertions into _turboModuleHolders
-  std::lock_guard<std::mutex> guard(_turboModuleHoldersMutex);
-  _invalidating = true;
+  if (RCTTurboModuleSharedMutexInitEnabled()) {
+    std::unique_lock<std::shared_timed_mutex> guard(_turboModuleHoldersSharedMutex);
+    _invalidating = true;
+  } else {
+    std::lock_guard<std::mutex> guard(_turboModuleHoldersMutex);
+    _invalidating = true;
+  }
 }
 
 - (void)_invalidateModules
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/React-NativeModulesApple.podspec b/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/React-NativeModulesApple.podspec
deleted file mode 100644
index 7821fec..0000000
--- a/node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios/React-NativeModulesApple.podspec
+++ /dev/null
@@ -1,56 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "..", "..", "..", "..", "..", "..", "package.json")))
-version = package['version']
-
-source = { :git => 'https://github.com/facebook/react-native.git' }
-if version == '1000.0.0'
-  # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
-  source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
-else
-  source[:tag] = "v#{version}"
-end
-
-folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32 -Wno-gnu-zero-variadic-macro-arguments'
-folly_version = '2021.07.22.00'
-boost_compiler_flags = '-Wno-documentation'
-using_hermes = ENV['USE_HERMES'] == nil || ENV['USE_HERMES'] == "1"
-Pod::Spec.new do |s|
-    s.name                   = "React-NativeModulesApple"
-    s.module_name            = "React_NativeModulesApple"
-    s.header_dir             = "ReactCommon" # Use global header_dir for all subspecs for use_frameworks! compatibility
-    s.version                = version
-    s.summary                = "-"
-    s.homepage               = "https://reactnative.dev/"
-    s.license                = package["license"]
-    s.author                 = "Meta Platforms, Inc. and its affiliates"
-    s.platforms              = { :ios => "12.4" }
-    s.source                 = source
-    s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
-    s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/Headers/Private/React-Core\"",
-                                "USE_HEADERMAP" => "YES",
-                                "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                                "GCC_WARN_PEDANTIC" => "YES" }
-    if ENV['USE_FRAMEWORKS']
-        s.header_mappings_dir     = File.absolute_path('./')
-    end
-
-    s.source_files = "ReactCommon/**/*.{mm,cpp,h}"
-
-    s.dependency "ReactCommon/turbomodule/core"
-    s.dependency "ReactCommon/turbomodule/bridging"
-    s.dependency "React-callinvoker"
-    s.dependency "React-Core"
-    s.dependency "React-cxxreact"
-    s.dependency "React-runtimeexecutor"
-    s.dependency "React-jsi"
-
-    if using_hermes
-      s.dependency "hermes-engine"
-    end
-end
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/BUCK b/node_modules/react-native/ReactCommon/react/nativemodule/samples/BUCK
index ea1153f..2285cf0 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/BUCK
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/BUCK
@@ -1,7 +1,5 @@
 load("//tools/build_defs/oss:rn_defs.bzl", "ANDROID", "APPLE", "FBJNI_TARGET", "get_objc_arc_preprocessor_flags", "get_preprocessor_flags_for_build_mode", "get_static_library_ios_flags", "react_native_dep", "react_native_target", "react_native_xplat_target", "rn_android_library", "rn_xplat_cxx_library", "subdir_glob")
 
-oncall("react_native")
-
 rn_xplat_cxx_library(
     name = "samples",
     srcs = glob(
@@ -46,7 +44,7 @@ rn_xplat_cxx_library(
     ],
     ios_exported_headers = subdir_glob(
         [
-            ("platform/ios/ReactCommon", "*.h"),
+            ("platform/ios", "*.h"),
         ],
         prefix = "ReactCommon",
     ),
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon-Samples.podspec b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon-Samples.podspec
deleted file mode 100644
index c72d727..0000000
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon-Samples.podspec
+++ /dev/null
@@ -1,59 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "..", "..", "..", "..", "package.json")))
-version = package['version']
-
-source = { :git => 'https://github.com/facebook/react-native.git' }
-if version == '1000.0.0'
-  # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
-  source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
-else
-  source[:tag] = "v#{version}"
-end
-
-folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32 -Wno-gnu-zero-variadic-macro-arguments'
-folly_version = '2021.07.22.00'
-boost_compiler_flags = '-Wno-documentation'
-using_hermes = ENV['USE_HERMES'] == nil || ENV['USE_HERMES'] == "1"
-Pod::Spec.new do |s|
-  s.name                   = "ReactCommon-Samples"
-  s.module_name            = "ReactCommon_Samples"
-  s.header_dir             = "ReactCommon"
-  s.version                = version
-  s.summary                = "-"  # TODO
-  s.homepage               = "https://reactnative.dev/"
-  s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
-  s.platforms              = { :ios => "12.4" }
-  s.source                 = source
-  s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
-  s.pod_target_xcconfig    = { "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/Headers/Private/React-Core\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers\"",
-                               "USE_HEADERMAP" => "YES",
-                               "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-                               "GCC_WARN_PEDANTIC" => "YES" }
-  if ENV['USE_FRAMEWORKS']
-    s.header_mappings_dir     = File.absolute_path('./')
-  end
-
-
-
-  s.source_files = "ReactCommon/**/*.{cpp,h}",
-        "platform/ios/**/*.{mm,cpp,h}"
-
-  s.dependency "RCT-Folly"
-  s.dependency "DoubleConversion"
-  s.dependency "ReactCommon/turbomodule/core"
-  s.dependency "React-NativeModulesApple"
-  s.dependency "React-Core"
-  s.dependency "React-cxxreact"
-  s.dependency "React-Codegen"
-
-  if using_hermes
-    s.dependency "hermes-engine"
-  end
-end
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.cpp
index 4a40f93..d45de55 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.cpp
@@ -31,16 +31,6 @@ static jsi::Value __hostFunction_NativeSampleTurboCxxModuleSpecJSI_getBool(
           ->getBool(rt, args[0].getBool()));
 }
 
-static jsi::Value __hostFunction_NativeSampleTurboCxxModuleSpecJSI_getEnum(
-    jsi::Runtime &rt,
-    TurboModule &turboModule,
-    const jsi::Value *args,
-    size_t count) {
-  return jsi::Value(
-      static_cast<NativeSampleTurboCxxModuleSpecJSI *>(&turboModule)
-          ->getEnum(rt, args[0].getNumber()));
-}
-
 static jsi::Value __hostFunction_NativeSampleTurboCxxModuleSpecJSI_getNumber(
     jsi::Runtime &rt,
     TurboModule &turboModule,
@@ -129,8 +119,6 @@ NativeSampleTurboCxxModuleSpecJSI::NativeSampleTurboCxxModuleSpecJSI(
       0, __hostFunction_NativeSampleTurboCxxModuleSpecJSI_voidFunc};
   methodMap_["getBool"] = MethodMetadata{
       1, __hostFunction_NativeSampleTurboCxxModuleSpecJSI_getBool};
-  methodMap_["getEnum"] = MethodMetadata{
-      1, __hostFunction_NativeSampleTurboCxxModuleSpecJSI_getEnum};
   methodMap_["getNumber"] = MethodMetadata{
       1, __hostFunction_NativeSampleTurboCxxModuleSpecJSI_getNumber};
   methodMap_["getString"] = MethodMetadata{
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.h b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.h
index 2b4b342..400ee7e 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/NativeSampleTurboCxxModuleSpecJSI.h
@@ -23,7 +23,6 @@ class JSI_EXPORT NativeSampleTurboCxxModuleSpecJSI : public TurboModule {
  public:
   virtual void voidFunc(jsi::Runtime &rt) = 0;
   virtual bool getBool(jsi::Runtime &rt, bool arg) = 0;
-  virtual double getEnum(jsi::Runtime &rt, double arg) = 0;
   virtual double getNumber(jsi::Runtime &rt, double arg) = 0;
   virtual jsi::String getString(jsi::Runtime &rt, const jsi::String &arg) = 0;
   virtual jsi::Array getArray(jsi::Runtime &rt, const jsi::Array &arg) = 0;
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.cpp
index 9b3fff0..a3d04f9 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.cpp
@@ -26,10 +26,6 @@ bool SampleTurboCxxModule::getBool(jsi::Runtime &rt, bool arg) {
   return arg;
 }
 
-double SampleTurboCxxModule::getEnum(jsi::Runtime &rt, double arg) {
-  return arg;
-}
-
 double SampleTurboCxxModule::getNumber(jsi::Runtime &rt, double arg) {
   return arg;
 }
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.h b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.h
index 8d397ae..5c41f71 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/ReactCommon/SampleTurboCxxModule.h
@@ -25,7 +25,6 @@ class SampleTurboCxxModule : public NativeSampleTurboCxxModuleSpecJSI {
 
   void voidFunc(jsi::Runtime &rt) override;
   bool getBool(jsi::Runtime &rt, bool arg) override;
-  double getEnum(jsi::Runtime &rt, double arg) override;
   double getNumber(jsi::Runtime &rt, double arg) override;
   jsi::String getString(jsi::Runtime &rt, const jsi::String &arg) override;
   jsi::Array getArray(jsi::Runtime &rt, const jsi::Array &arg) override;
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/NativeSampleTurboModuleSpec.java b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/NativeSampleTurboModuleSpec.java
index d3e50a5..1dd66de 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/NativeSampleTurboModuleSpec.java
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/NativeSampleTurboModuleSpec.java
@@ -66,9 +66,6 @@ public abstract class NativeSampleTurboModuleSpec extends ReactContextBaseJavaMo
   @ReactMethod(isBlockingSynchronousMethod = true)
   public abstract boolean getBool(boolean arg);
 
-  @ReactMethod(isBlockingSynchronousMethod = true)
-  public abstract double getEnum(double arg);
-
   protected abstract Map<String, Object> getTypedExportedConstants();
 
   @Override
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/ReactCommon/SampleTurboModuleSpec.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/ReactCommon/SampleTurboModuleSpec.cpp
index b0a9b07..d8001bf 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/ReactCommon/SampleTurboModuleSpec.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/ReactCommon/SampleTurboModuleSpec.cpp
@@ -36,18 +36,6 @@ __hostFunction_NativeSampleTurboModuleSpecJSI_getBool(
           rt, BooleanKind, "getBool", "(Z)Z", args, count, cachedMethodId);
 }
 
-static facebook::jsi::Value
-__hostFunction_NativeSampleTurboModuleSpecJSI_getEnum(
-    facebook::jsi::Runtime &rt,
-    TurboModule &turboModule,
-    const facebook::jsi::Value *args,
-    size_t count) {
-  static jmethodID cachedMethodId = nullptr;
-  return static_cast<JavaTurboModule &>(turboModule)
-      .invokeJavaMethod(
-          rt, NumberKind, "getEnum", "(D)D", args, count, cachedMethodId);
-}
-
 static facebook::jsi::Value
 __hostFunction_NativeSampleTurboModuleSpecJSI_getNumber(
     facebook::jsi::Runtime &rt,
@@ -207,9 +195,6 @@ NativeSampleTurboModuleSpecJSI::NativeSampleTurboModuleSpecJSI(
   methodMap_["getBool"] =
       MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getBool};
 
-  methodMap_["getEnum"] =
-      MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getEnum};
-
   methodMap_["getNumber"] = MethodMetadata{
       1, __hostFunction_NativeSampleTurboModuleSpecJSI_getNumber};
 
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/SampleTurboModule.java b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/SampleTurboModule.java
index 73a1ac7..84a0f6d 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/SampleTurboModule.java
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/android/SampleTurboModule.java
@@ -48,14 +48,6 @@ public class SampleTurboModule extends NativeSampleTurboModuleSpec {
     return arg;
   }
 
-  @DoNotStrip
-  @SuppressWarnings("unused")
-  @Override
-  public double getEnum(double arg) {
-    log("getEnum", arg, arg);
-    return arg;
-  }
-
   @Override
   protected Map<String, Object> getTypedExportedConstants() {
     Map<String, Object> result = new HashMap<>();
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTNativeSampleTurboModuleSpec.h b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTNativeSampleTurboModuleSpec.h
similarity index 97%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTNativeSampleTurboModuleSpec.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTNativeSampleTurboModuleSpec.h
index 9f75fdc..ab91dbe 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTNativeSampleTurboModuleSpec.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTNativeSampleTurboModuleSpec.h
@@ -22,7 +22,6 @@
 
 - (void)voidFunc;
 - (NSNumber *)getBool:(BOOL)arg;
-- (NSNumber *)getEnum:(double)arg;
 - (NSNumber *)getNumber:(double)arg;
 - (NSString *)getString:(NSString *)arg;
 - (NSArray<id<NSObject>> *)getArray:(NSArray *)arg;
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTNativeSampleTurboModuleSpec.mm b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTNativeSampleTurboModuleSpec.mm
similarity index 93%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTNativeSampleTurboModuleSpec.mm
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTNativeSampleTurboModuleSpec.mm
index 79feb93..d3edbda 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTNativeSampleTurboModuleSpec.mm
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTNativeSampleTurboModuleSpec.mm
@@ -30,16 +30,6 @@
       .invokeObjCMethod(rt, BooleanKind, "getBool", @selector(getBool:), args, count);
 }
 
-static facebook::jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getEnum(
-    facebook::jsi::Runtime &rt,
-    TurboModule &turboModule,
-    const facebook::jsi::Value *args,
-    size_t count)
-{
-  return static_cast<ObjCTurboModule &>(turboModule)
-      .invokeObjCMethod(rt, NumberKind, "getEnum", @selector(getEnum:), args, count);
-}
-
 static facebook::jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getNumber(
     facebook::jsi::Runtime &rt,
     TurboModule &turboModule,
@@ -146,7 +136,6 @@
 {
   methodMap_["voidFunc"] = MethodMetadata{0, __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc};
   methodMap_["getBool"] = MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getBool};
-  methodMap_["getEnum"] = MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getEnum};
   methodMap_["getNumber"] = MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getNumber};
   methodMap_["getString"] = MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getString};
   methodMap_["getArray"] = MethodMetadata{1, __hostFunction_NativeSampleTurboModuleSpecJSI_getArray};
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboCxxModule.h b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboCxxModule.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboCxxModule.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboCxxModule.h
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboCxxModule.mm b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboCxxModule.mm
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboCxxModule.mm
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboCxxModule.mm
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboModule.h b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboModule.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboModule.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboModule.h
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboModule.mm b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboModule.mm
similarity index 96%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboModule.mm
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboModule.mm
index c3176f3..11e5747 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/RCTSampleTurboModule.mm
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/RCTSampleTurboModule.mm
@@ -74,11 +74,6 @@ - (NSDictionary *)constantsToExport
   return @(arg);
 }
 
-RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSNumber *, getEnum : (double)arg)
-{
-  return @(arg);
-}
-
 RCT_EXPORT_SYNCHRONOUS_TYPED_METHOD(NSNumber *, getNumber : (double)arg)
 {
   return @(arg);
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/SampleTurboCxxModuleLegacyImpl.cpp b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/SampleTurboCxxModuleLegacyImpl.cpp
similarity index 94%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/SampleTurboCxxModuleLegacyImpl.cpp
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/SampleTurboCxxModuleLegacyImpl.cpp
index 5b90e17..e46412e 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/SampleTurboCxxModuleLegacyImpl.cpp
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/SampleTurboCxxModuleLegacyImpl.cpp
@@ -39,12 +39,6 @@ std::vector<CxxModule::Method> SampleTurboCxxModuleLegacyImpl::getMethods() {
             return getBool(xplat::jsArgAsBool(args, 0));
           },
           CxxModule::SyncTag),
-      CxxModule::Method(
-          "getEnum",
-          [this](folly::dynamic args) {
-            return getEnum(xplat::jsArgAsDouble(args, 0));
-          },
-          CxxModule::SyncTag),
       CxxModule::Method(
           "getNumber",
           [this](folly::dynamic args) {
@@ -120,10 +114,6 @@ bool SampleTurboCxxModuleLegacyImpl::getBool(bool arg) {
   return arg;
 }
 
-double SampleTurboCxxModuleLegacyImpl::getEnum(double arg) {
-  return arg;
-}
-
 double SampleTurboCxxModuleLegacyImpl::getNumber(double arg) {
   return arg;
 }
diff --git a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/SampleTurboCxxModuleLegacyImpl.h b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/SampleTurboCxxModuleLegacyImpl.h
similarity index 97%
rename from node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/SampleTurboCxxModuleLegacyImpl.h
rename to node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/SampleTurboCxxModuleLegacyImpl.h
index b360a02..d09e688 100644
--- a/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/ReactCommon/SampleTurboCxxModuleLegacyImpl.h
+++ b/node_modules/react-native/ReactCommon/react/nativemodule/samples/platform/ios/SampleTurboCxxModuleLegacyImpl.h
@@ -27,7 +27,6 @@ class SampleTurboCxxModuleLegacyImpl
   // API
   void voidFunc();
   bool getBool(bool arg);
-  double getEnum(double arg);
   double getNumber(double arg);
   std::string getString(const std::string &arg);
   folly::dynamic getArray(const folly::dynamic &arg);
diff --git a/node_modules/react-native/ReactCommon/react/renderer/.clang-tidy b/node_modules/react-native/ReactCommon/react/renderer/.clang-tidy
index 6ddb7b6..d709ad7 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/react/renderer/.clang-tidy
@@ -185,11 +185,4 @@ clang-analyzer-valist.Uninitialized,
 clang-analyzer-valist.Unterminated,
 google-build-using-namespace,
 '
-
-CheckOptions:
-- key: performance-unnecessary-value-param.AllowedTypes
-  value: '[Pp]ointer$;[Pp]tr$;[Rr]ef(erence)?$;'
-- key: performance-unnecessary-copy-initialization.AllowedTypes
-  value: '[Pp]ointer$;[Pp]tr$;[Rr]ef(erence)?$'
-
 ...
diff --git a/node_modules/react-native/ReactCommon/react/renderer/animations/BUCK b/node_modules/react-native/ReactCommon/react/renderer/animations/BUCK
index a7afd44..985667a 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/animations/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/animations/BUCK
@@ -35,8 +35,6 @@ rn_xplat_cxx_library(
         "-lm",
     ],
     compiler_flags_pedantic = True,
-    # TODO(145803035) Fix Android tests
-    fbandroid_tests_override = [],
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
     force_static = True,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.cpp
index 34aed3a..b4caab9 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.cpp
@@ -144,11 +144,6 @@ void LayoutAnimationKeyFrameManager::setComponentDescriptorRegistry(
   componentDescriptorRegistry_ = componentDescriptorRegistry;
 }
 
-void LayoutAnimationKeyFrameManager::setReduceDeleteCreateMutation(
-    const bool reduceDeleteCreateMutation) {
-  reduceDeleteCreateMutation_ = reduceDeleteCreateMutation;
-}
-
 bool LayoutAnimationKeyFrameManager::shouldAnimateFrame() const {
   std::lock_guard<std::mutex> lock(currentAnimationMutex_);
   return currentAnimation_ || !inflightAnimations_.empty();
@@ -171,6 +166,7 @@ LayoutAnimationKeyFrameManager::pullTransaction(
     MountingTransaction::Number transactionNumber,
     TransactionTelemetry const &telemetry,
     ShadowViewMutationList mutations) const {
+  simulateImagePropsMemoryAccess(mutations);
   // Current time in milliseconds
   uint64_t now = now_();
 
@@ -736,40 +732,6 @@ LayoutAnimationKeyFrameManager::pullTransaction(
 
       auto finalConflictingMutations = ShadowViewMutationList{};
       for (auto &keyFrame : conflictingAnimations) {
-        // Special-case: if the next conflicting animation contain "delete",
-        // while the final mutation has the same tag with "create", we should
-        // remove both the delete and create as they have no effect when
-        // combined in the same frame. The Fabric mount layer assumes no such
-        // combinations in the final mutations either.
-        if (reduceDeleteCreateMutation_) {
-          for (auto itMutation = immediateMutations.begin();
-               itMutation != immediateMutations.end();) {
-            auto &mutation = *itMutation;
-            bool hasCreateMutationDeletedWithSameTag = false;
-            if (mutation.newChildShadowView.tag == keyFrame.tag &&
-                mutation.type == ShadowViewMutation::Create) {
-              for (auto itKeyFrame = keyFrame.finalMutationsForKeyFrame.begin();
-                   itKeyFrame != keyFrame.finalMutationsForKeyFrame.end();) {
-                auto &conflictFinalMutation = *itKeyFrame;
-                if (conflictFinalMutation.type == ShadowViewMutation::Delete) {
-                  itKeyFrame =
-                      keyFrame.finalMutationsForKeyFrame.erase(itKeyFrame);
-                  hasCreateMutationDeletedWithSameTag = true;
-                  break;
-                } else {
-                  itKeyFrame++;
-                }
-              }
-            }
-
-            if (hasCreateMutationDeletedWithSameTag) {
-              itMutation = immediateMutations.erase(itMutation);
-            } else {
-              itMutation++;
-            }
-          }
-        }
-
         // Special-case: if we have some (1) ongoing UPDATE animation,
         // (2) it conflicted with a new MOVE operation (REMOVE+INSERT)
         // without another corresponding UPDATE, we should re-queue the
@@ -1085,6 +1047,8 @@ LayoutAnimationKeyFrameManager::pullTransaction(
     }
   }
 
+  simulateImagePropsMemoryAccess(mutations);
+
   return MountingTransaction{
       surfaceId, transactionNumber, std::move(mutations), telemetry};
 }
@@ -1105,12 +1069,34 @@ void LayoutAnimationKeyFrameManager::setClockNow(
   now_ = std::move(now);
 }
 
+void LayoutAnimationKeyFrameManager::enableSkipInvalidatedKeyFrames() {
+  skipInvalidatedKeyFrames_ = true;
+}
+
+void LayoutAnimationKeyFrameManager::enableCrashOnMissingComponentDescriptor() {
+  crashOnMissingComponentDescriptor_ = true;
+}
+
+void LayoutAnimationKeyFrameManager::enableSimulateImagePropsMemoryAccess() {
+  simulateImagePropsMemoryAccess_ = true;
+}
+
 #pragma mark - Protected
 
 bool LayoutAnimationKeyFrameManager::hasComponentDescriptorForShadowView(
     ShadowView const &shadowView) const {
-  return componentDescriptorRegistry_->hasComponentDescriptorAt(
-      shadowView.componentHandle);
+  auto hasComponentDescriptor =
+      componentDescriptorRegistry_->hasComponentDescriptorAt(
+          shadowView.componentHandle);
+
+  if (crashOnMissingComponentDescriptor_ && !hasComponentDescriptor) {
+    LOG(FATAL) << "Component descriptor with handle: "
+               << shadowView.componentHandle
+               << " doesn't exist. The component name: "
+               << shadowView.componentName;
+  }
+
+  return hasComponentDescriptor;
 }
 
 ComponentDescriptor const &
@@ -1197,6 +1183,9 @@ void LayoutAnimationKeyFrameManager::queueFinalMutationsForCompletedKeyFrame(
     ShadowViewMutation::List &mutationsList,
     bool interrupted,
     const std::string & /*logPrefix*/) const {
+  if (skipInvalidatedKeyFrames_ && keyframe.invalidated) {
+    return;
+  }
   if (!keyframe.finalMutationsForKeyFrame.empty()) {
     // TODO: modularize this segment, it is repeated 2x in KeyFrameManager
     // as well.
@@ -1658,4 +1647,39 @@ void LayoutAnimationKeyFrameManager::deleteAnimationsForStoppedSurfaces()
   }
 }
 
+void LayoutAnimationKeyFrameManager::simulateImagePropsMemoryAccess(
+    ShadowViewMutationList const &mutations) const {
+  if (!simulateImagePropsMemoryAccess_) {
+    return;
+  }
+  for (auto const &mutation : mutations) {
+    if (mutation.type != ShadowViewMutation::Type::Insert) {
+      continue;
+    }
+    if (strcmp(mutation.newChildShadowView.componentName, "Image") == 0) {
+      auto const &imageProps = *std::static_pointer_cast<ImageProps const>(
+          mutation.newChildShadowView.props);
+      int temp = 0;
+      switch (imageProps.resizeMode) {
+        case ImageResizeMode::Cover:
+          temp = 1;
+          break;
+        case ImageResizeMode::Contain:
+          temp = 2;
+          break;
+        case ImageResizeMode::Stretch:
+          temp = 3;
+          break;
+        case ImageResizeMode::Center:
+          temp = 4;
+          break;
+        case ImageResizeMode::Repeat:
+          temp = 5;
+          break;
+      }
+      (void)temp;
+    }
+  }
+}
+
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.h b/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.h
index 18c356d..56d283a 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/animations/LayoutAnimationKeyFrameManager.h
@@ -56,8 +56,6 @@ class LayoutAnimationKeyFrameManager : public UIManagerAnimationDelegate,
   void setComponentDescriptorRegistry(SharedComponentDescriptorRegistry const &
                                           componentDescriptorRegistry) override;
 
-  void setReduceDeleteCreateMutation(bool reduceDeleteCreateMutation) override;
-
   // TODO: add SurfaceId to this API as well
   bool shouldAnimateFrame() const override;
 
@@ -90,6 +88,12 @@ class LayoutAnimationKeyFrameManager : public UIManagerAnimationDelegate,
 
   void setClockNow(std::function<uint64_t()> now);
 
+  void enableSkipInvalidatedKeyFrames();
+
+  void enableCrashOnMissingComponentDescriptor();
+
+  void enableSimulateImagePropsMemoryAccess();
+
  protected:
   SharedComponentDescriptorRegistry componentDescriptorRegistry_;
   mutable std::optional<LayoutAnimation> currentAnimation_{};
@@ -146,7 +150,20 @@ class LayoutAnimationKeyFrameManager : public UIManagerAnimationDelegate,
   mutable LayoutAnimationStatusDelegate *layoutAnimationStatusDelegate_{};
   mutable std::mutex surfaceIdsToStopMutex_;
   mutable butter::set<SurfaceId> surfaceIdsToStop_{};
-  bool reduceDeleteCreateMutation_{false};
+  bool skipInvalidatedKeyFrames_{false};
+
+  /*
+   * Feature flag that forces a crash if component descriptor for shadow view
+   * doesn't exist. This is an unexpected state and we crash to collect extra
+   * logs.
+   */
+  bool crashOnMissingComponentDescriptor_{false};
+
+  /*
+   * Feature flag that enables simulation of memory access. This is a temporary
+   * flag to diagnose where crashes are coming from in LayoutAnimations on iOS.
+   */
+  bool simulateImagePropsMemoryAccess_{false};
 
   // Function that returns current time in milliseconds
   std::function<uint64_t()> now_;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/AttributedString.h b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/AttributedString.h
index 69ef92b..2f1858c 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/AttributedString.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/AttributedString.h
@@ -25,7 +25,7 @@ class AttributedString;
 using SharedAttributedString = std::shared_ptr<const AttributedString>;
 
 /*
- * Simple, cross-platform, React-specific implementation of attributed string
+ * Simple, cross-platfrom, React-specific implementation of attributed string
  * (aka spanned string).
  * `AttributedString` is basically a list of `Fragments` which have `string` and
  * `textAttributes` + `shadowNode` associated with the `string`.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.cpp b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.cpp
index 2994aca..cec544e 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.cpp
@@ -8,8 +8,8 @@
 #include "ParagraphAttributes.h"
 
 #include <react/renderer/attributedstring/conversions.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/debug/debugStringConvertibleUtils.h>
+#include <react/renderer/graphics/conversions.h>
 #include <react/utils/FloatComparison.h>
 
 namespace facebook::react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.h b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.h
index f5f87c6..c71909b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/ParagraphAttributes.h
@@ -12,7 +12,7 @@
 #include <folly/Hash.h>
 #include <react/renderer/attributedstring/primitives.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
-#include <react/renderer/graphics/Float.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.cpp b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.cpp
index 2112a70..63b5a4a 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.cpp
@@ -9,7 +9,7 @@
 
 #include <react/renderer/attributedstring/conversions.h>
 #include <react/renderer/core/conversions.h>
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 #include <react/utils/FloatComparison.h>
 #include <cmath>
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.h b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.h
index f53ad73..89a6ba3 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/TextAttributes.h
@@ -17,8 +17,7 @@
 #include <react/renderer/core/ReactPrimitives.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
 #include <react/renderer/graphics/Color.h>
-#include <react/renderer/graphics/Float.h>
-#include <react/renderer/graphics/Size.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/conversions.h b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/conversions.h
index 8687b89..f768de8 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/conversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/conversions.h
@@ -9,7 +9,7 @@
 
 #include <folly/Conv.h>
 #include <folly/dynamic.h>
-#include <react/debug/react_native_expect.h>
+#include <react/debug/react_native_assert.h>
 #include <react/renderer/attributedstring/AttributedString.h>
 #include <react/renderer/attributedstring/ParagraphAttributes.h>
 #include <react/renderer/attributedstring/TextAttributes.h>
@@ -19,8 +19,9 @@
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/core/ShadowNode.h>
 #include <react/renderer/core/conversions.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/core/propsConversions.h>
+#include <react/renderer/graphics/Geometry.h>
+#include <react/renderer/graphics/conversions.h>
 #include <cmath>
 
 #ifdef ANDROID
@@ -60,7 +61,7 @@ inline std::string toString(const DynamicTypeRamp &dynamicTypeRamp) {
   }
 
   LOG(ERROR) << "Unsupported DynamicTypeRamp value";
-  react_native_expect(false);
+  react_native_assert(false);
 
   // Sane default in case of parsing errors
   return "body";
@@ -70,7 +71,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     DynamicTypeRamp &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "caption2") {
@@ -98,14 +99,14 @@ inline void fromRawValue(
     } else {
       // sane default
       LOG(ERROR) << "Unsupported DynamicTypeRamp value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       result = DynamicTypeRamp::Body;
     }
     return;
   }
 
   LOG(ERROR) << "Unsupported DynamicTypeRamp type";
-  react_native_expect(false);
+  react_native_assert(false);
 
   // Sane default in case of parsing errors
   result = DynamicTypeRamp::Body;
@@ -124,7 +125,7 @@ inline std::string toString(const EllipsizeMode &ellipsisMode) {
   }
 
   LOG(ERROR) << "Unsupported EllipsizeMode value";
-  react_native_expect(false);
+  react_native_assert(false);
 
   // Sane default in case of parsing errors
   return "tail";
@@ -134,7 +135,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     EllipsizeMode &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "clip") {
@@ -148,14 +149,14 @@ inline void fromRawValue(
     } else {
       // sane default
       LOG(ERROR) << "Unsupported EllipsizeMode value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       result = EllipsizeMode::Tail;
     }
     return;
   }
 
   LOG(ERROR) << "Unsupported EllipsizeMode type";
-  react_native_expect(false);
+  react_native_assert(false);
 
   // Sane default in case of parsing errors
   result = EllipsizeMode::Tail;
@@ -172,7 +173,7 @@ inline std::string toString(const TextBreakStrategy &textBreakStrategy) {
   }
 
   LOG(ERROR) << "Unsupported TextBreakStrategy value";
-  react_native_expect(false);
+  react_native_assert(false);
   return "highQuality";
 }
 
@@ -180,7 +181,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     TextBreakStrategy &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "simple") {
@@ -192,14 +193,14 @@ inline void fromRawValue(
     } else {
       // sane default
       LOG(ERROR) << "Unsupported TextBreakStrategy value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       result = TextBreakStrategy::HighQuality;
     }
     return;
   }
 
   LOG(ERROR) << "Unsupported TextBreakStrategy type";
-  react_native_expect(false);
+  react_native_assert(false);
   result = TextBreakStrategy::HighQuality;
 }
 
@@ -207,7 +208,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     FontWeight &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "normal") {
@@ -236,7 +237,7 @@ inline void fromRawValue(
       result = FontWeight::Weight900;
     } else {
       LOG(ERROR) << "Unsupported FontWeight value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = FontWeight::Regular;
     }
@@ -244,7 +245,7 @@ inline void fromRawValue(
   }
 
   LOG(ERROR) << "Unsupported FontWeight type";
-  react_native_expect(false);
+  react_native_assert(false);
   result = FontWeight::Regular;
 }
 
@@ -256,7 +257,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     FontStyle &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "normal") {
@@ -267,7 +268,7 @@ inline void fromRawValue(
       result = FontStyle::Oblique;
     } else {
       LOG(ERROR) << "Unsupported FontStyle value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = FontStyle::Normal;
     }
@@ -275,7 +276,7 @@ inline void fromRawValue(
   }
 
   LOG(ERROR) << "Unsupported FontStyle type";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   result = FontStyle::Normal;
 }
@@ -291,7 +292,7 @@ inline std::string toString(const FontStyle &fontStyle) {
   }
 
   LOG(ERROR) << "Unsupported FontStyle value";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   return "normal";
 }
@@ -300,8 +301,8 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     FontVariant &result) {
+  react_native_assert(value.hasType<std::vector<std::string>>());
   result = FontVariant::Default;
-  react_native_expect(value.hasType<std::vector<std::string>>());
   if (value.hasType<std::vector<std::string>>()) {
     auto items = std::vector<std::string>{value};
     for (const auto &item : items) {
@@ -318,7 +319,7 @@ inline void fromRawValue(
             (FontVariant)((int)result | (int)FontVariant::ProportionalNums);
       } else {
         LOG(ERROR) << "Unsupported FontVariant value: " << item;
-        react_native_expect(false);
+        react_native_assert(false);
       }
       continue;
     }
@@ -357,7 +358,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     TextTransform &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "none") {
@@ -372,7 +373,7 @@ inline void fromRawValue(
       result = TextTransform::Unset;
     } else {
       LOG(ERROR) << "Unsupported TextTransform value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = TextTransform::None;
     }
@@ -380,7 +381,7 @@ inline void fromRawValue(
   }
 
   LOG(ERROR) << "Unsupported TextTransform type";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   result = TextTransform::None;
 }
@@ -400,7 +401,7 @@ inline std::string toString(const TextTransform &textTransform) {
   }
 
   LOG(ERROR) << "Unsupported TextTransform value";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   return "none";
 }
@@ -409,7 +410,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     TextAlignment &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "auto") {
@@ -424,7 +425,7 @@ inline void fromRawValue(
       result = TextAlignment::Justified;
     } else {
       LOG(ERROR) << "Unsupported TextAlignment value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = TextAlignment::Natural;
     }
@@ -459,7 +460,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     WritingDirection &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "natural" || string == "auto") {
@@ -470,7 +471,7 @@ inline void fromRawValue(
       result = WritingDirection::RightToLeft;
     } else {
       LOG(ERROR) << "Unsupported WritingDirection value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = WritingDirection::Natural;
     }
@@ -501,7 +502,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     LineBreakStrategy &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "none") {
@@ -514,7 +515,7 @@ inline void fromRawValue(
       result = LineBreakStrategy::Standard;
     } else {
       LOG(ERROR) << "Unsupported LineBreakStrategy value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = LineBreakStrategy::None;
     }
@@ -547,7 +548,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     TextDecorationLineType &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "none") {
@@ -564,7 +565,7 @@ inline void fromRawValue(
       result = TextDecorationLineType::UnderlineStrikethrough;
     } else {
       LOG(ERROR) << "Unsupported TextDecorationLineType value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = TextDecorationLineType::None;
     }
@@ -590,7 +591,7 @@ inline std::string toString(
   }
 
   LOG(ERROR) << "Unsupported TextDecorationLineType value";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   return "none";
 }
@@ -599,7 +600,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     TextDecorationStyle &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "solid") {
@@ -612,7 +613,7 @@ inline void fromRawValue(
       result = TextDecorationStyle::Dashed;
     } else {
       LOG(ERROR) << "Unsupported TextDecorationStyle value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = TextDecorationStyle::Solid;
     }
@@ -637,7 +638,7 @@ inline std::string toString(const TextDecorationStyle &textDecorationStyle) {
   }
 
   LOG(ERROR) << "Unsupported TextDecorationStyle value";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   return "solid";
 }
@@ -703,7 +704,7 @@ inline std::string toString(const AccessibilityRole &accessibilityRole) {
   }
 
   LOG(ERROR) << "Unsupported AccessibilityRole value";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   return "none";
 }
@@ -712,12 +713,12 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     AccessibilityRole &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "none") {
       result = AccessibilityRole::None;
-    } else if (string == "button" || string == "togglebutton") {
+    } else if (string == "button") {
       result = AccessibilityRole::Button;
     } else if (string == "link") {
       result = AccessibilityRole::Link;
@@ -773,7 +774,7 @@ inline void fromRawValue(
       result = AccessibilityRole::Toolbar;
     } else {
       LOG(ERROR) << "Unsupported AccessibilityRole value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       // sane default for prod
       result = AccessibilityRole::None;
     }
@@ -781,7 +782,7 @@ inline void fromRawValue(
   }
 
   LOG(ERROR) << "Unsupported AccessibilityRole type";
-  react_native_expect(false);
+  react_native_assert(false);
   // sane default for prod
   result = AccessibilityRole::None;
 }
@@ -797,7 +798,7 @@ inline std::string toString(const HyphenationFrequency &hyphenationFrequency) {
   }
 
   LOG(ERROR) << "Unsupported HyphenationFrequency value";
-  react_native_expect(false);
+  react_native_assert(false);
   return "none";
 }
 
@@ -805,7 +806,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     HyphenationFrequency &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "none") {
@@ -817,14 +818,14 @@ inline void fromRawValue(
     } else {
       // sane default
       LOG(ERROR) << "Unsupported HyphenationFrequency value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
       result = HyphenationFrequency::None;
     }
     return;
   }
 
   LOG(ERROR) << "Unsupported HyphenationFrequency type";
-  react_native_expect(false);
+  react_native_assert(false);
   result = HyphenationFrequency::None;
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/AttributedStringTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/AttributedStringTest.cpp
index 466c76f..6399113 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/AttributedStringTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/AttributedStringTest.cpp
@@ -9,7 +9,7 @@
 #include <react/renderer/attributedstring/TextAttributes.h>
 #include <react/renderer/attributedstring/conversions.h>
 #include <react/renderer/attributedstring/primitives.h>
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/TextAttributesTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/TextAttributesTest.cpp
index fdb3251..c753b00 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/TextAttributesTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/attributedstring/tests/TextAttributesTest.cpp
@@ -9,7 +9,7 @@
 #include <react/renderer/attributedstring/TextAttributes.h>
 #include <react/renderer/attributedstring/conversions.h>
 #include <react/renderer/attributedstring/primitives.h>
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.cpp b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.cpp
index 627b19e..1869439 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.cpp
@@ -11,7 +11,7 @@ namespace facebook::react {
 
 void ComponentDescriptorProviderRegistry::add(
     const ComponentDescriptorProvider &provider) const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   /*
   // TODO: T57583139
@@ -44,7 +44,7 @@ void ComponentDescriptorProviderRegistry::add(
 void ComponentDescriptorProviderRegistry::setComponentDescriptorProviderRequest(
     ComponentDescriptorProviderRequest componentDescriptorProviderRequest)
     const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
   componentDescriptorProviderRequest_ =
       std::move(componentDescriptorProviderRequest);
 }
@@ -54,7 +54,7 @@ void ComponentDescriptorProviderRegistry::request(
   ComponentDescriptorProviderRequest componentDescriptorProviderRequest;
 
   {
-    std::shared_lock lock(mutex_);
+    std::shared_lock<butter::shared_mutex> lock(mutex_);
     componentDescriptorProviderRequest = componentDescriptorProviderRequest_;
   }
 
@@ -66,7 +66,7 @@ void ComponentDescriptorProviderRegistry::request(
 ComponentDescriptorRegistry::Shared
 ComponentDescriptorProviderRegistry::createComponentDescriptorRegistry(
     ComponentDescriptorParameters const &parameters) const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   auto registry = std::make_shared<ComponentDescriptorRegistry const>(
       parameters, *this, parameters.contextContainer);
diff --git a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h
index d905063..cba6783 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h
@@ -7,11 +7,12 @@
 
 #pragma once
 
-#include <shared_mutex>
+#include <butter/mutex.h>
 
 #include <react/renderer/componentregistry/ComponentDescriptorProvider.h>
 #include <react/renderer/componentregistry/ComponentDescriptorRegistry.h>
 #include <react/renderer/core/ComponentDescriptor.h>
+#include <react/utils/ContextContainer.h>
 
 namespace facebook {
 namespace react {
@@ -37,7 +38,7 @@ class ComponentDescriptorProviderRegistry final {
   /*
    * ComponenDescriptorRegistry will call the `request` in case if a component
    * with given name wasn't registered yet.
-   * The request handler must register a ComponentDescriptor with requested name
+   * The request handler must register a ComponentDescripor with requested name
    * synchronously during handling the request.
    * The request can be called on any thread.
    * The methods can be called on any thread.
@@ -58,13 +59,13 @@ class ComponentDescriptorProviderRegistry final {
 
   void request(ComponentName componentName) const;
 
-  mutable std::shared_mutex mutex_;
+  mutable butter::shared_mutex mutex_;
   mutable std::vector<std::weak_ptr<ComponentDescriptorRegistry const>>
       componentDescriptorRegistries_;
   mutable butter::map<ComponentHandle, ComponentDescriptorProvider const>
       componentDescriptorProviders_;
   mutable ComponentDescriptorProviderRequest
-      componentDescriptorProviderRequest_{};
+      componentDescriptorProviderRequest_;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.cpp b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.cpp
index 2d85ec3..23e0330 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.cpp
@@ -28,7 +28,7 @@ ComponentDescriptorRegistry::ComponentDescriptorRegistry(
 
 void ComponentDescriptorRegistry::add(
     ComponentDescriptorProvider componentDescriptorProvider) const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   auto componentDescriptor = componentDescriptorProvider.constructor(
       {parameters_.eventDispatcher,
@@ -59,7 +59,7 @@ void ComponentDescriptorRegistry::registerComponentDescriptor(
 
 ComponentDescriptor const &ComponentDescriptorRegistry::at(
     std::string const &componentName) const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   auto unifiedComponentName = componentNameByReactViewName(componentName);
 
@@ -96,7 +96,7 @@ ComponentDescriptor const &ComponentDescriptorRegistry::at(
 ComponentDescriptor const *ComponentDescriptorRegistry::
     findComponentDescriptorByHandle_DO_NOT_USE_THIS_IS_BROKEN(
         ComponentHandle componentHandle) const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   auto iterator = _registryByHandle.find(componentHandle);
   if (iterator == _registryByHandle.end()) {
@@ -108,14 +108,14 @@ ComponentDescriptor const *ComponentDescriptorRegistry::
 
 ComponentDescriptor const &ComponentDescriptorRegistry::at(
     ComponentHandle componentHandle) const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   return *_registryByHandle.at(componentHandle);
 }
 
 bool ComponentDescriptorRegistry::hasComponentDescriptorAt(
     ComponentHandle componentHandle) const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   auto iterator = _registryByHandle.find(componentHandle);
   return iterator != _registryByHandle.end();
diff --git a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.h b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.h
index 4a83a4e..d2eecea 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/componentregistry/ComponentDescriptorRegistry.h
@@ -8,9 +8,9 @@
 #pragma once
 
 #include <memory>
-#include <shared_mutex>
 
 #include <butter/map.h>
+#include <butter/mutex.h>
 
 #include <react/renderer/componentregistry/ComponentDescriptorProvider.h>
 #include <react/renderer/core/ComponentDescriptor.h>
@@ -81,7 +81,7 @@ class ComponentDescriptorRegistry {
    */
   void add(ComponentDescriptorProvider componentDescriptorProvider) const;
 
-  mutable std::shared_mutex mutex_;
+  mutable butter::shared_mutex mutex_;
   mutable butter::map<ComponentHandle, SharedComponentDescriptor>
       _registryByHandle;
   mutable butter::map<std::string, SharedComponentDescriptor> _registryByName;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageProps.cpp
index 5598746..7feac63 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageProps.cpp
@@ -87,16 +87,14 @@ void ImageProps::setProp(
   // reuse the same values.
   ViewProps::setProp(context, hash, propName, value);
 
-  static auto defaults = ImageProps{};
-
   switch (hash) {
-    RAW_SET_PROP_SWITCH_CASE(sources, "source");
-    RAW_SET_PROP_SWITCH_CASE(defaultSources, "defaultSource");
-    RAW_SET_PROP_SWITCH_CASE_BASIC(resizeMode);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(blurRadius);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(capInsets);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(tintColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(internal_analyticTag);
+    RAW_SET_PROP_SWITCH_CASE(sources, "source", {});
+    RAW_SET_PROP_SWITCH_CASE(defaultSources, "defaultSource", {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(resizeMode, ImageResizeMode::Stretch);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(blurRadius, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(capInsets, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(tintColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(internal_analyticTag, {});
   }
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageShadowNode.h
index 34aba9a..4376eda 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/image/ImageShadowNode.h
@@ -46,7 +46,7 @@ class ImageShadowNode final : public ConcreteViewShadowNode<
       ShadowNodeFamilyFragment const &familyFragment,
       ComponentDescriptor const &componentDescriptor) {
     auto imageSource = ImageSource{ImageSource::Type::Invalid};
-    return {imageSource, {imageSource, nullptr, {}}, 0};
+    return {imageSource, {imageSource, nullptr}, 0};
   }
 
 #pragma mark - LayoutableShadowNode
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/image/conversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/image/conversions.h
index d2c8e49..4b4e3d9 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/image/conversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/image/conversions.h
@@ -10,9 +10,9 @@
 #include <butter/map.h>
 #include <folly/dynamic.h>
 #include <glog/logging.h>
-#include <react/debug/react_native_expect.h>
+#include <react/debug/react_native_assert.h>
 #include <react/renderer/core/PropsParserContext.h>
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 #include <react/renderer/imagemanager/primitives.h>
 
 namespace facebook {
@@ -97,7 +97,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     ImageResizeMode &result) {
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (!value.hasType<std::string>()) {
     LOG(ERROR) << "Unsupported ImageResizeMode type";
     // "cover" is default in non-Fabric web and iOS
@@ -118,7 +118,7 @@ inline void fromRawValue(
     result = ImageResizeMode::Repeat;
   } else {
     LOG(ERROR) << "Unsupported ImageResizeMode value: " << stringValue;
-    react_native_expect(false);
+    react_native_assert(false);
     // "cover" is default in non-Fabric web and iOS
     result = ImageResizeMode::Cover;
   }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/inputaccessory/InputAccessoryState.h b/node_modules/react-native/ReactCommon/react/renderer/components/inputaccessory/InputAccessoryState.h
index 81cfdd3..b581752 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/inputaccessory/InputAccessoryState.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/inputaccessory/InputAccessoryState.h
@@ -7,8 +7,9 @@
 
 #pragma once
 
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/graphics/Float.h>
+#include <react/renderer/graphics/Geometry.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/CMakeLists.txt b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/CMakeLists.txt
deleted file mode 100644
index 016015f..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/CMakeLists.txt
+++ /dev/null
@@ -1,31 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-cmake_minimum_required(VERSION 3.13)
-set(CMAKE_VERBOSE_MAKEFILE on)
-
-add_compile_options(
-        -fexceptions
-        -frtti
-        -std=c++17
-        -Wall
-        -Wpedantic
-        -Wno-gnu-zero-variadic-macro-arguments
-        -DLOG_TAG=\"Fabric\")
-
-file(GLOB rrc_legacyviewmanagerinterop_SRC CONFIGURE_DEPENDS *.cpp)
-add_library(rrc_legacyviewmanagerinterop SHARED ${rrc_legacyviewmanagerinterop_SRC})
-
-target_include_directories(rrc_legacyviewmanagerinterop PUBLIC ${REACT_COMMON_DIR})
-
-target_link_libraries(rrc_legacyviewmanagerinterop
-        glog
-        glog_init
-        folly_runtime
-        jsi
-        react_render_core
-        rrc_view
-        yoga
-)
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/LegacyViewManagerInteropComponentDescriptor.mm b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/LegacyViewManagerInteropComponentDescriptor.mm
index 745154f..9b8e78b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/LegacyViewManagerInteropComponentDescriptor.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/LegacyViewManagerInteropComponentDescriptor.mm
@@ -19,7 +19,7 @@
 namespace facebook {
 namespace react {
 
-static std::string moduleNameFromComponentNameNoRCTPrefix(const std::string &componentName)
+static std::string moduleNameFromComponentName(const std::string &componentName)
 {
   // TODO: remove FB specific code (T56174424)
   if (componentName == "StickerInputView") {
@@ -46,32 +46,12 @@
     return componentName + "Manager";
   }
 
-  return componentName + "Manager";
+  return "RCT" + componentName + "Manager";
 }
 
 inline NSString *RCTNSStringFromString(const std::string &string)
 {
-  return [NSString stringWithUTF8String:string.c_str()];
-}
-
-static Class getViewManagerFromComponentName(const std::string &componentName)
-{
-  auto viewManagerName = moduleNameFromComponentNameNoRCTPrefix(componentName);
-
-  // 1. Try to get the manager with the RCT prefix.
-  auto rctViewManagerName = "RCT" + viewManagerName;
-  Class viewManagerClass = NSClassFromString(RCTNSStringFromString(rctViewManagerName));
-  if (viewManagerClass) {
-    return viewManagerClass;
-  }
-
-  // 2. Try to get the manager without the prefix.
-  viewManagerClass = NSClassFromString(RCTNSStringFromString(viewManagerName));
-  if (viewManagerClass) {
-    return viewManagerClass;
-  }
-
-  return nil;
+  return [NSString stringWithCString:string.c_str() encoding:NSUTF8StringEncoding];
 }
 
 static std::shared_ptr<void> const constructCoordinator(
@@ -79,8 +59,9 @@ static Class getViewManagerFromComponentName(const std::string &componentName)
     ComponentDescriptor::Flavor const &flavor)
 {
   auto componentName = *std::static_pointer_cast<std::string const>(flavor);
-  Class viewManagerClass = getViewManagerFromComponentName(componentName);
-  assert(viewManagerClass);
+  auto moduleName = moduleNameFromComponentName(componentName);
+  Class module = NSClassFromString(RCTNSStringFromString(moduleName));
+  assert(module);
   auto optionalBridge = contextContainer->find<std::shared_ptr<void>>("Bridge");
   RCTBridge *bridge;
   if (optionalBridge) {
@@ -99,7 +80,7 @@ static Class getViewManagerFromComponentName(const std::string &componentName)
     bridgeModuleDecorator = unwrapManagedObject(optionalModuleDecorator.value());
   }
 
-  RCTComponentData *componentData = [[RCTComponentData alloc] initWithManagerClass:viewManagerClass
+  RCTComponentData *componentData = [[RCTComponentData alloc] initWithManagerClass:module
                                                                             bridge:bridge
                                                                    eventDispatcher:eventDispatcher];
   return wrapManagedObject([[RCTLegacyViewManagerInteropCoordinator alloc]
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.h b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.h
index 05e8a97..242574f 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.h
@@ -33,14 +33,7 @@ typedef void (^InterceptorBlock)(std::string eventName, folly::dynamic event);
 
 - (NSString *)componentViewName;
 
-- (void)handleCommand:(NSString *)commandName
-                 args:(NSArray *)args
-             reactTag:(NSInteger)tag
-            paperView:(UIView *)paperView;
-
-- (void)removeViewFromRegistryWithTag:(NSInteger)tag;
-
-- (void)addViewToRegistry:(UIView *)view withTag:(NSInteger)tag;
+- (void)handleCommand:(NSString *)commandName args:(NSArray *)args reactTag:(NSInteger)tag;
 
 @end
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.mm b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.mm
index d1b0bff..02141cd 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/RCTLegacyViewManagerInteropCoordinator.mm
@@ -51,7 +51,7 @@ - (instancetype)initWithComponentData:(RCTComponentData *)componentData
       //  During bridge mode, RCTBridgeModules will be decorated with these APIs by the bridge.
       RCTAssert(
           _bridge == nil,
-          @"RCTLegacyViewManagerInteropCoordinator should not be initialized with RCTBridgeModuleDecorator in bridge mode.");
+          @"RCTLegacyViewManagerInteropCoordinator should not be intialized with RCTBridgeModuleDecorator in bridge mode.");
     }
 
     _eventInterceptors = [NSMutableDictionary new];
@@ -100,23 +100,13 @@ - (NSString *)componentViewName
   return RCTDropReactPrefixes(_componentData.name);
 }
 
-- (void)handleCommand:(NSString *)commandName
-                 args:(NSArray *)args
-             reactTag:(NSInteger)tag
-            paperView:(nonnull UIView *)paperView
+- (void)handleCommand:(NSString *)commandName args:(NSArray *)args reactTag:(NSInteger)tag
 {
   Class managerClass = _componentData.managerClass;
   [self _lookupModuleMethodsIfNecessary];
   RCTModuleData *moduleData = [_bridge.batchedBridge moduleDataForName:RCTBridgeModuleNameForClass(managerClass)];
   id<RCTBridgeMethod> method;
-
-  // We can't use `[NSString intValue]` as "0" is a valid command,
-  // but also a falsy value. [NSNumberFormatter numberFromString] returns a
-  // `NSNumber *` which is NULL when it's to be NULL
-  // and it points to 0 when the string is @"0" (not a falsy value).
-  NSNumberFormatter *formatter = [[NSNumberFormatter alloc] init];
-
-  if ([commandName isKindOfClass:[NSNumber class]] || [formatter numberFromString:commandName] != NULL) {
+  if ([commandName isKindOfClass:[NSNumber class]]) {
     method = moduleData ? moduleData.methods[[commandName intValue]] : _moduleMethods[[commandName intValue]];
   } else if ([commandName isKindOfClass:[NSString class]]) {
     method = moduleData ? moduleData.methodsByName[commandName] : _moduleMethodsByName[commandName];
@@ -143,44 +133,8 @@ - (void)handleCommand:(NSString *)commandName
   }
 }
 
-- (void)addViewToRegistry:(UIView *)view withTag:(NSInteger)tag
-{
-  [self _addUIBlock:^(RCTUIManager *uiManager, NSDictionary<NSNumber *, UIView *> *viewRegistry) {
-    if ([viewRegistry objectForKey:@(tag)] != NULL) {
-      return;
-    }
-    NSMutableDictionary<NSNumber *, UIView *> *mutableViewRegistry =
-        (NSMutableDictionary<NSNumber *, UIView *> *)viewRegistry;
-    [mutableViewRegistry setObject:view forKey:@(tag)];
-  }];
-}
-
-- (void)removeViewFromRegistryWithTag:(NSInteger)tag
-{
-  [self _addUIBlock:^(RCTUIManager *uiManager, NSDictionary<NSNumber *, UIView *> *viewRegistry) {
-    if ([viewRegistry objectForKey:@(tag)] == NULL) {
-      return;
-    }
-
-    NSMutableDictionary<NSNumber *, UIView *> *mutableViewRegistry =
-        (NSMutableDictionary<NSNumber *, UIView *> *)viewRegistry;
-    [mutableViewRegistry removeObjectForKey:@(tag)];
-  }];
-}
-
 #pragma mark - Private
 
-- (void)_addUIBlock:(RCTViewManagerUIBlock)block
-{
-  __weak __typeof__(self) weakSelf = self;
-  [_bridge.batchedBridge
-      dispatchBlock:^{
-        __typeof__(self) strongSelf = weakSelf;
-        [strongSelf->_bridge.uiManager addUIBlock:block];
-      }
-              queue:RCTGetUIManagerQueue()];
-}
-
 // This is copy-pasta from RCTModuleData.
 - (void)_lookupModuleMethodsIfNecessary
 {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/UnstableLegacyViewManagerInteropComponentDescriptor.h b/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/UnstableLegacyViewManagerInteropComponentDescriptor.h
deleted file mode 100644
index f61e723..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/components/legacyviewmanagerinterop/UnstableLegacyViewManagerInteropComponentDescriptor.h
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <react/renderer/components/view/ConcreteViewShadowNode.h>
-#include <react/renderer/components/view/ViewProps.h>
-#include <react/renderer/core/ConcreteComponentDescriptor.h>
-
-namespace facebook {
-namespace react {
-
-/*
- * Descriptor for <UnstableReactLegacyComponent> component.
- *
- * This component is part of the Fabric Interop Layer and is subject to future
- * changes (hence the "Unstable" prefix).
- */
-template <const char *concreteComponentName>
-class UnstableLegacyViewManagerInteropComponentDescriptor
-    : public ConcreteComponentDescriptor<
-          ConcreteViewShadowNode<concreteComponentName, ViewProps>> {
- public:
-  UnstableLegacyViewManagerInteropComponentDescriptor<concreteComponentName>(
-      ComponentDescriptorParameters const &parameters)
-      : ConcreteComponentDescriptor<
-            ConcreteViewShadowNode<concreteComponentName, ViewProps>>(
-            parameters) {}
-
- private:
-};
-
-} // namespace react
-} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/modal/ModalHostViewState.h b/node_modules/react-native/ReactCommon/react/renderer/components/modal/ModalHostViewState.h
index dd5f7a5..2afe223 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/modal/ModalHostViewState.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/modal/ModalHostViewState.h
@@ -7,8 +7,9 @@
 
 #pragma once
 
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/graphics/Float.h>
+#include <react/renderer/graphics/Geometry.h>
+#include <react/renderer/graphics/conversions.h>
 
 #ifdef ANDROID
 #include <folly/dynamic.h>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/root/RootProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/root/RootProps.cpp
index cb85133..777e799 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/root/RootProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/root/RootProps.cpp
@@ -13,8 +13,8 @@
 namespace facebook::react {
 
 // Note that a default/empty context may be passed here from RootShadowNode.
-// If that's a problem and the context is necessary here, refactor
-// RootShadowNode first.
+// If that's a problem and the context is necesary here, refactor RootShadowNode
+// first.
 RootProps::RootProps(
     const PropsParserContext &context,
     RootProps const &sourceProps,
@@ -22,8 +22,8 @@ RootProps::RootProps(
     : ViewProps(context, sourceProps, rawProps) {}
 
 // Note that a default/empty context may be passed here from RootShadowNode.
-// If that's a problem and the context is necessary here, refactor
-// RootShadowNode first.
+// If that's a problem and the context is necesary here, refactor RootShadowNode
+// first.
 RootProps::RootProps(
     const PropsParserContext & /*context*/,
     RootProps const & /*sourceProps*/,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/root/tests/RootShadowNodeTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/root/tests/RootShadowNodeTest.cpp
index 2ed4e06..659ce01 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/root/tests/RootShadowNodeTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/root/tests/RootShadowNodeTest.cpp
@@ -36,11 +36,11 @@ TEST(RootShadowNodeTest, cloneWithLayoutConstraints) {
   EXPECT_TRUE(rootShadowNode->layoutIfNeeded());
   EXPECT_TRUE(rootShadowNode->getIsLayoutClean());
 
-  auto clonedWithDifferentLayoutConstraints = rootShadowNode->clone(
+  auto clonedWithDiffentLayoutConstraints = rootShadowNode->clone(
       parserContext, LayoutConstraints{{0, 0}, {10, 10}}, {});
 
-  EXPECT_FALSE(clonedWithDifferentLayoutConstraints->getIsLayoutClean());
-  EXPECT_TRUE(clonedWithDifferentLayoutConstraints->layoutIfNeeded());
+  EXPECT_FALSE(clonedWithDiffentLayoutConstraints->getIsLayoutClean());
+  EXPECT_TRUE(clonedWithDiffentLayoutConstraints->layoutIfNeeded());
 }
 
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/safeareaview/SafeAreaViewState.h b/node_modules/react-native/ReactCommon/react/renderer/components/safeareaview/SafeAreaViewState.h
index 6216cf6..a2d272b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/safeareaview/SafeAreaViewState.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/safeareaview/SafeAreaViewState.h
@@ -7,7 +7,7 @@
 
 #pragma once
 
-#include <react/renderer/graphics/RectangleEdges.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewEventEmitter.h b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewEventEmitter.h
index 868441d..39274ad 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewEventEmitter.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewEventEmitter.h
@@ -12,6 +12,7 @@
 #include <folly/dynamic.h>
 #include <react/renderer/components/view/ViewEventEmitter.h>
 #include <react/renderer/core/EventEmitter.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.cpp
index e60623e..4eff278 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.cpp
@@ -9,8 +9,8 @@
 
 #include <react/renderer/components/scrollview/conversions.h>
 #include <react/renderer/core/CoreFeatures.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/debug/debugStringConvertibleUtils.h>
+#include <react/renderer/graphics/conversions.h>
 
 #include <react/renderer/core/propsConversions.h>
 
@@ -127,15 +127,6 @@ ScrollViewProps::ScrollViewProps(
                     "keyboardDismissMode",
                     sourceProps.keyboardDismissMode,
                     {})),
-      maintainVisibleContentPosition(
-          CoreFeatures::enablePropIteratorSetter
-              ? sourceProps.maintainVisibleContentPosition
-              : convertRawProp(
-                    context,
-                    rawProps,
-                    "maintainVisibleContentPosition",
-                    sourceProps.maintainVisibleContentPosition,
-                    {})),
       maximumZoomScale(
           CoreFeatures::enablePropIteratorSetter
               ? sourceProps.maximumZoomScale
@@ -331,43 +322,42 @@ void ScrollViewProps::setProp(
   // reuse the same values.
   ViewProps::setProp(context, hash, propName, value);
 
-  static auto defaults = ScrollViewProps{};
-
   switch (hash) {
-    RAW_SET_PROP_SWITCH_CASE_BASIC(alwaysBounceHorizontal);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(alwaysBounceVertical);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(bounces);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(bouncesZoom);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(canCancelContentTouches);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(centerContent);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(automaticallyAdjustContentInsets);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(automaticallyAdjustsScrollIndicatorInsets);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(decelerationRate);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(directionalLockEnabled);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(indicatorStyle);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(keyboardDismissMode);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(maintainVisibleContentPosition);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(maximumZoomScale);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(minimumZoomScale);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollEnabled);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(pagingEnabled);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(pinchGestureEnabled);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollsToTop);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(showsHorizontalScrollIndicator);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(showsVerticalScrollIndicator);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollEventThrottle);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(zoomScale);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(contentInset);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(contentOffset);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollIndicatorInsets);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToInterval);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToAlignment);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(disableIntervalMomentum);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToOffsets);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToStart);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToEnd);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(contentInsetAdjustmentBehavior);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollToOverflowEnabled);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(alwaysBounceHorizontal, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(alwaysBounceVertical, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(bounces, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(bouncesZoom, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(canCancelContentTouches, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(centerContent, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(automaticallyAdjustContentInsets, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(
+        automaticallyAdjustsScrollIndicatorInsets, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(decelerationRate, (Float)0.998);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(directionalLockEnabled, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(indicatorStyle, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(keyboardDismissMode, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(maximumZoomScale, (Float)1.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(minimumZoomScale, (Float)1.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollEnabled, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(pagingEnabled, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(pinchGestureEnabled, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollsToTop, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(showsHorizontalScrollIndicator, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(showsVerticalScrollIndicator, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollEventThrottle, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(zoomScale, (Float)1.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(contentInset, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(contentOffset, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollIndicatorInsets, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToInterval, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToAlignment, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(disableIntervalMomentum, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToOffsets, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToStart, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(snapToEnd, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(
+        contentInsetAdjustmentBehavior, ContentInsetAdjustmentBehavior::Never);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(scrollToOverflowEnabled, {});
   }
 }
 
@@ -423,10 +413,6 @@ SharedDebugStringConvertibleList ScrollViewProps::getDebugProps() const {
               "keyboardDismissMode",
               keyboardDismissMode,
               defaultScrollViewProps.keyboardDismissMode),
-          debugStringConvertibleItem(
-              "maintainVisibleContentPosition",
-              maintainVisibleContentPosition,
-              defaultScrollViewProps.maintainVisibleContentPosition),
           debugStringConvertibleItem(
               "maximumZoomScale",
               maximumZoomScale,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.h
index c76c99e..bd53bc4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewProps.h
@@ -11,8 +11,6 @@
 #include <react/renderer/components/view/ViewProps.h>
 #include <react/renderer/core/PropsParserContext.h>
 
-#include <optional>
-
 namespace facebook {
 namespace react {
 
@@ -45,8 +43,6 @@ class ScrollViewProps final : public ViewProps {
   bool directionalLockEnabled{};
   ScrollViewIndicatorStyle indicatorStyle{};
   ScrollViewKeyboardDismissMode keyboardDismissMode{};
-  std::optional<ScrollViewMaintainVisibleContentPosition>
-      maintainVisibleContentPosition{};
   Float maximumZoomScale{1.0f};
   Float minimumZoomScale{1.0f};
   bool scrollEnabled{true};
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewState.h b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewState.h
index 7d767b5..d0846ba 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewState.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/ScrollViewState.h
@@ -7,10 +7,7 @@
 
 #pragma once
 
-#include <react/renderer/graphics/Float.h>
-#include <react/renderer/graphics/Point.h>
-#include <react/renderer/graphics/Rect.h>
-#include <react/renderer/graphics/Size.h>
+#include <react/renderer/graphics/Geometry.h>
 
 #ifdef ANDROID
 #include <folly/dynamic.h>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/conversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/conversions.h
index 3c888b4..4605f08 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/conversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/conversions.h
@@ -10,7 +10,6 @@
 #include <folly/dynamic.h>
 #include <react/renderer/components/scrollview/primitives.h>
 #include <react/renderer/core/PropsParserContext.h>
-#include <react/renderer/core/propsConversions.h>
 
 namespace facebook {
 namespace react {
@@ -99,26 +98,6 @@ inline void fromRawValue(
   abort();
 }
 
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    ScrollViewMaintainVisibleContentPosition &result) {
-  auto map = (butter::map<std::string, RawValue>)value;
-
-  auto minIndexForVisible = map.find("minIndexForVisible");
-  if (minIndexForVisible != map.end()) {
-    fromRawValue(
-        context, minIndexForVisible->second, result.minIndexForVisible);
-  }
-  auto autoscrollToTopThreshold = map.find("autoscrollToTopThreshold");
-  if (autoscrollToTopThreshold != map.end()) {
-    fromRawValue(
-        context,
-        autoscrollToTopThreshold->second,
-        result.autoscrollToTopThreshold);
-  }
-}
-
 inline std::string toString(const ScrollViewSnapToAlignment &value) {
   switch (value) {
     case ScrollViewSnapToAlignment::Start:
@@ -130,8 +109,6 @@ inline std::string toString(const ScrollViewSnapToAlignment &value) {
   }
 }
 
-#if RN_DEBUG_STRING_CONVERTIBLE
-
 inline std::string toString(const ScrollViewIndicatorStyle &value) {
   switch (value) {
     case ScrollViewIndicatorStyle::Default:
@@ -167,17 +144,5 @@ inline std::string toString(const ContentInsetAdjustmentBehavior &value) {
   }
 }
 
-inline std::string toString(
-    const std::optional<ScrollViewMaintainVisibleContentPosition> &value) {
-  if (!value) {
-    return "null";
-  }
-  return "{minIndexForVisible: " + toString(value.value().minIndexForVisible) +
-      ", autoscrollToTopThreshold: " +
-      toString(value.value().autoscrollToTopThreshold) + "}";
-}
-
-#endif
-
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/primitives.h b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/primitives.h
index e627d76..fe8a60e 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/primitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/scrollview/primitives.h
@@ -7,8 +7,6 @@
 
 #pragma once
 
-#include <optional>
-
 namespace facebook {
 namespace react {
 
@@ -25,20 +23,5 @@ enum class ContentInsetAdjustmentBehavior {
   Always
 };
 
-class ScrollViewMaintainVisibleContentPosition final {
- public:
-  int minIndexForVisible{0};
-  std::optional<int> autoscrollToTopThreshold{};
-
-  bool operator==(const ScrollViewMaintainVisibleContentPosition &rhs) const {
-    return std::tie(this->minIndexForVisible, this->autoscrollToTopThreshold) ==
-        std::tie(rhs.minIndexForVisible, rhs.autoscrollToTopThreshold);
-  }
-
-  bool operator!=(const ScrollViewMaintainVisibleContentPosition &rhs) const {
-    return !(*this == rhs);
-  }
-};
-
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/BUCK b/node_modules/react-native/ReactCommon/react/renderer/components/slider/BUCK
new file mode 100644
index 0000000..7cc3f2f
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/BUCK
@@ -0,0 +1,117 @@
+load(
+    "//tools/build_defs/oss:rn_defs.bzl",
+    "ANDROID",
+    "APPLE",
+    "CXX",
+    "YOGA_CXX_TARGET",
+    "fb_xplat_cxx_test",
+    "get_apple_compiler_flags",
+    "get_apple_inspector_flags",
+    "get_preprocessor_flags_for_build_mode",
+    "react_native_target",
+    "react_native_xplat_target",
+    "rn_xplat_cxx_library",
+    "subdir_glob",
+)
+
+APPLE_COMPILER_FLAGS = get_apple_compiler_flags()
+
+rn_xplat_cxx_library(
+    name = "slider",
+    srcs = glob(
+        ["**/*.cpp"],
+        exclude = glob([
+            "tests/**/*.cpp",
+            "platform/**/*.cpp",
+        ]),
+    ),
+    headers = [],
+    header_namespace = "",
+    exported_headers = subdir_glob(
+        [
+            ("", "*.h"),
+        ],
+        prefix = "react/renderer/components/slider",
+    ),
+    compiler_flags_pedantic = True,
+    cxx_tests = [":tests"],
+    fbandroid_deps = [
+        "//xplat/folly:dynamic",
+        react_native_target("jni/react/jni:jni"),
+        react_native_xplat_target("react/renderer/mapbuffer:mapbuffer"),
+    ],
+    fbandroid_exported_headers = subdir_glob(
+        [
+            ("", "*.h"),
+            ("platform/android/react/renderer/components/slider", "*.h"),
+        ],
+        prefix = "react/renderer/components/slider",
+    ),
+    fbandroid_headers = glob(
+        ["platform/android/react/renderer/components/slider/*.h"],
+    ),
+    fbandroid_srcs = glob(
+        ["platform/android/react/renderer/components/slider/*.cpp"],
+    ),
+    fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
+    fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
+    force_static = True,
+    ios_exported_headers = subdir_glob(
+        [
+            ("", "*.h"),
+            ("platform/ios", "*.h"),
+        ],
+        prefix = "react/renderer/components/slider",
+    ),
+    ios_headers = glob(
+        ["platform/ios/*.h"],
+    ),
+    ios_srcs = glob(
+        ["platform/ios/*.cpp"],
+    ),
+    labels = [
+        "pfh:ReactNative_CommonInfrastructurePlaceholder",
+    ],
+    platforms = (ANDROID, APPLE, CXX),
+    preprocessor_flags = [
+        "-DLOG_TAG=\"ReactNative\"",
+        "-DWITH_FBSYSTRACE=1",
+    ],
+    visibility = ["PUBLIC"],
+    deps = [
+        YOGA_CXX_TARGET,
+        react_native_xplat_target("react/debug:debug"),
+        react_native_xplat_target("react/renderer/debug:debug"),
+        react_native_xplat_target("react/renderer/core:core"),
+        react_native_xplat_target("react/renderer/components/image:image"),
+        react_native_xplat_target("react/renderer/components/view:view"),
+        react_native_xplat_target("react/renderer/graphics:graphics"),
+        react_native_xplat_target("react/renderer/imagemanager:imagemanager"),
+        react_native_xplat_target("react/renderer/uimanager:uimanager"),
+        react_native_xplat_target("react/renderer/componentregistry:componentregistry"),
+        "//xplat/js/react-native-github:generated_components-rncore",
+    ],
+)
+
+fb_xplat_cxx_test(
+    name = "tests",
+    srcs = glob(["tests/**/*.cpp"]),
+    headers = glob(["tests/**/*.h"]),
+    compiler_flags = [
+        "-fexceptions",
+        "-frtti",
+        "-std=c++17",
+        "-Wall",
+    ],
+    contacts = ["oncall+react_native@xmail.facebook.com"],
+    platforms = (
+        # `Apple` and `Android` flavors are disabled because the module (built with those flavors) requires Emulator/Simulator (which is expensive and slow). At the same time, we don't really have tests here.
+        # ANDROID,
+        # APPLE,
+        CXX,
+    ),
+    deps = [
+        ":slider",
+        "//xplat/third-party/gmock:gtest",
+    ],
+)
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/CMakeLists.txt b/node_modules/react-native/ReactCommon/react/renderer/components/slider/CMakeLists.txt
new file mode 100644
index 0000000..e69b514
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/CMakeLists.txt
@@ -0,0 +1,45 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+add_compile_options(
+        -fexceptions
+        -frtti
+        -std=c++17
+        -Wall
+        -Wpedantic
+        -Wno-gnu-zero-variadic-macro-arguments
+        -DLOG_TAG=\"Fabric\")
+
+file(GLOB rrc_slider_SRC CONFIGURE_DEPENDS *.cpp platform/android/react/renderer/components/slider/*.cpp)
+add_library(rrc_slider STATIC ${rrc_slider_SRC})
+
+target_include_directories(rrc_slider
+        PUBLIC
+        ${REACT_COMMON_DIR}
+        ${CMAKE_CURRENT_SOURCE_DIR}/platform/android/
+)
+
+target_link_libraries(rrc_slider
+        glog
+        fbjni
+        folly_runtime
+        glog_init
+        react_codegen_rncore
+        react_debug
+        react_render_componentregistry
+        react_render_core
+        react_render_debug
+        react_render_graphics
+        react_render_imagemanager
+        react_render_mapbuffer
+        react_render_uimanager
+        reactnativejni
+        rrc_image
+        rrc_view
+        yoga
+)
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderComponentDescriptor.h b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderComponentDescriptor.h
new file mode 100644
index 0000000..8a4d592
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderComponentDescriptor.h
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/renderer/components/slider/SliderMeasurementsManager.h>
+#include <react/renderer/components/slider/SliderShadowNode.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+
+namespace facebook {
+namespace react {
+
+/*
+ * Descriptor for <Slider> component.
+ */
+class SliderComponentDescriptor final
+    : public ConcreteComponentDescriptor<SliderShadowNode> {
+ public:
+  SliderComponentDescriptor(ComponentDescriptorParameters const &parameters)
+      : ConcreteComponentDescriptor(parameters),
+        imageManager_(std::make_shared<ImageManager>(contextContainer_)),
+        measurementsManager_(
+            SliderMeasurementsManager::shouldMeasureSlider()
+                ? std::make_shared<SliderMeasurementsManager>(contextContainer_)
+                : nullptr) {}
+
+  void adopt(ShadowNode::Unshared const &shadowNode) const override {
+    ConcreteComponentDescriptor::adopt(shadowNode);
+
+    auto sliderShadowNode =
+        std::static_pointer_cast<SliderShadowNode>(shadowNode);
+
+    // `SliderShadowNode` uses `ImageManager` to initiate image loading and
+    // communicate the loading state and results to mounting layer.
+    sliderShadowNode->setImageManager(imageManager_);
+
+    if (measurementsManager_) {
+      // `SliderShadowNode` uses `SliderMeasurementsManager` to
+      // provide measurements to Yoga.
+      sliderShadowNode->setSliderMeasurementsManager(measurementsManager_);
+
+      // All `SliderShadowNode`s must have leaf Yoga nodes with properly
+      // setup measure function.
+      sliderShadowNode->enableMeasurement();
+    }
+  }
+
+ private:
+  const SharedImageManager imageManager_;
+  const std::shared_ptr<SliderMeasurementsManager> measurementsManager_;
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderShadowNode.cpp
new file mode 100644
index 0000000..bb70718
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderShadowNode.cpp
@@ -0,0 +1,100 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "SliderShadowNode.h"
+
+#include <react/renderer/core/LayoutContext.h>
+
+namespace facebook::react {
+
+extern const char SliderComponentName[] = "Slider";
+
+void SliderShadowNode::setImageManager(const SharedImageManager &imageManager) {
+  ensureUnsealed();
+  imageManager_ = imageManager;
+}
+
+void SliderShadowNode::setSliderMeasurementsManager(
+    const std::shared_ptr<SliderMeasurementsManager> &measurementsManager) {
+  ensureUnsealed();
+  measurementsManager_ = measurementsManager;
+}
+
+void SliderShadowNode::updateStateIfNeeded() {
+  const auto &newTrackImageSource = getTrackImageSource();
+  const auto &newMinimumTrackImageSource = getMinimumTrackImageSource();
+  const auto &newMaximumTrackImageSource = getMaximumTrackImageSource();
+  const auto &newThumbImageSource = getThumbImageSource();
+
+  auto const &currentState = getStateData();
+
+  auto trackImageSource = currentState.getTrackImageSource();
+  auto minimumTrackImageSource = currentState.getMinimumTrackImageSource();
+  auto maximumTrackImageSource = currentState.getMaximumTrackImageSource();
+  auto thumbImageSource = currentState.getThumbImageSource();
+
+  bool anyChanged = newTrackImageSource != trackImageSource ||
+      newMinimumTrackImageSource != minimumTrackImageSource ||
+      newMaximumTrackImageSource != maximumTrackImageSource ||
+      newThumbImageSource != thumbImageSource;
+
+  if (!anyChanged) {
+    return;
+  }
+
+  // Now we are about to mutate the Shadow Node.
+  ensureUnsealed();
+
+  // It is not possible to copy or move image requests from SliderLocalData,
+  // so instead we recreate any image requests (that may already be in-flight?)
+  // TODO: check if multiple requests are cached or if it's a net loss
+  auto state = SliderState{
+      newTrackImageSource,
+      imageManager_->requestImage(newTrackImageSource, getSurfaceId()),
+      newMinimumTrackImageSource,
+      imageManager_->requestImage(newMinimumTrackImageSource, getSurfaceId()),
+      newMaximumTrackImageSource,
+      imageManager_->requestImage(newMaximumTrackImageSource, getSurfaceId()),
+      newThumbImageSource,
+      imageManager_->requestImage(newThumbImageSource, getSurfaceId())};
+  setStateData(std::move(state));
+}
+
+ImageSource SliderShadowNode::getTrackImageSource() const {
+  return getConcreteProps().trackImage;
+}
+
+ImageSource SliderShadowNode::getMinimumTrackImageSource() const {
+  return getConcreteProps().minimumTrackImage;
+}
+
+ImageSource SliderShadowNode::getMaximumTrackImageSource() const {
+  return getConcreteProps().maximumTrackImage;
+}
+
+ImageSource SliderShadowNode::getThumbImageSource() const {
+  return getConcreteProps().thumbImage;
+}
+
+#pragma mark - LayoutableShadowNode
+
+Size SliderShadowNode::measureContent(
+    LayoutContext const & /*layoutContext*/,
+    LayoutConstraints const &layoutConstraints) const {
+  if (SliderMeasurementsManager::shouldMeasureSlider()) {
+    return measurementsManager_->measure(getSurfaceId(), layoutConstraints);
+  }
+
+  return {};
+}
+
+void SliderShadowNode::layout(LayoutContext layoutContext) {
+  updateStateIfNeeded();
+  ConcreteViewShadowNode::layout(layoutContext);
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderShadowNode.h
new file mode 100644
index 0000000..b1aa0dc
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderShadowNode.h
@@ -0,0 +1,77 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/renderer/components/rncore/EventEmitters.h>
+#include <react/renderer/components/rncore/Props.h>
+#include <react/renderer/components/slider/SliderMeasurementsManager.h>
+#include <react/renderer/components/slider/SliderState.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <react/renderer/imagemanager/ImageManager.h>
+#include <react/renderer/imagemanager/primitives.h>
+
+namespace facebook {
+namespace react {
+
+extern const char SliderComponentName[];
+
+/*
+ * `ShadowNode` for <Slider> component.
+ */
+class SliderShadowNode final : public ConcreteViewShadowNode<
+                                   SliderComponentName,
+                                   SliderProps,
+                                   SliderEventEmitter,
+                                   SliderState> {
+ public:
+  using ConcreteViewShadowNode::ConcreteViewShadowNode;
+
+  // Associates a shared `ImageManager` with the node.
+  void setImageManager(const SharedImageManager &imageManager);
+
+  // Associates a shared `SliderMeasurementsManager` with the node.
+  void setSliderMeasurementsManager(
+      const std::shared_ptr<SliderMeasurementsManager> &measurementsManager);
+
+  static SliderState initialStateData(
+      ShadowNodeFragment const &fragment,
+      ShadowNodeFamilyFragment const &familyFragment,
+      ComponentDescriptor const &componentDescriptor) {
+    auto imageSource = ImageSource{ImageSource::Type::Invalid};
+    return {
+        imageSource,
+        {imageSource, nullptr},
+        imageSource,
+        {imageSource, nullptr},
+        imageSource,
+        {imageSource, nullptr},
+        imageSource,
+        {imageSource, nullptr}};
+  }
+
+#pragma mark - LayoutableShadowNode
+
+  Size measureContent(
+      LayoutContext const &layoutContext,
+      LayoutConstraints const &layoutConstraints) const override;
+  void layout(LayoutContext layoutContext) override;
+
+ private:
+  void updateStateIfNeeded();
+
+  ImageSource getTrackImageSource() const;
+  ImageSource getMinimumTrackImageSource() const;
+  ImageSource getMaximumTrackImageSource() const;
+  ImageSource getThumbImageSource() const;
+
+  SharedImageManager imageManager_;
+  std::shared_ptr<SliderMeasurementsManager> measurementsManager_;
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderState.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderState.cpp
new file mode 100644
index 0000000..adce049
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderState.cpp
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "SliderState.h"
+
+namespace facebook::react {
+
+ImageSource SliderState::getTrackImageSource() const {
+  return trackImageSource_;
+}
+
+ImageRequest const &SliderState::getTrackImageRequest() const {
+  return *trackImageRequest_;
+}
+
+ImageSource SliderState::getMinimumTrackImageSource() const {
+  return minimumTrackImageSource_;
+}
+
+ImageRequest const &SliderState::getMinimumTrackImageRequest() const {
+  return *minimumTrackImageRequest_;
+}
+
+ImageSource SliderState::getMaximumTrackImageSource() const {
+  return maximumTrackImageSource_;
+}
+
+ImageRequest const &SliderState::getMaximumTrackImageRequest() const {
+  return *maximumTrackImageRequest_;
+}
+
+ImageSource SliderState::getThumbImageSource() const {
+  return thumbImageSource_;
+}
+
+ImageRequest const &SliderState::getThumbImageRequest() const {
+  return *thumbImageRequest_;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderState.h b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderState.h
new file mode 100644
index 0000000..7984a65
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/SliderState.h
@@ -0,0 +1,89 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#include <react/renderer/mapbuffer/MapBuffer.h>
+#include <react/renderer/mapbuffer/MapBufferBuilder.h>
+#endif
+
+#include <react/renderer/imagemanager/ImageRequest.h>
+#include <react/renderer/imagemanager/primitives.h>
+
+namespace facebook {
+namespace react {
+
+/*
+ * State for <Slider> component.
+ */
+class SliderState final {
+ public:
+  SliderState(
+      ImageSource const &trackImageSource,
+      ImageRequest trackImageRequest,
+      ImageSource const &minimumTrackImageSource,
+      ImageRequest minimumTrackImageRequest,
+      ImageSource const &maximumTrackImageSource,
+      ImageRequest maximumTrackImageRequest,
+      ImageSource const &thumbImageSource,
+      ImageRequest thumbImageRequest)
+      : trackImageSource_(trackImageSource),
+        trackImageRequest_(
+            std::make_shared<ImageRequest>(std::move(trackImageRequest))),
+        minimumTrackImageSource_(minimumTrackImageSource),
+        minimumTrackImageRequest_(std::make_shared<ImageRequest>(
+            std::move(minimumTrackImageRequest))),
+        maximumTrackImageSource_(maximumTrackImageSource),
+        maximumTrackImageRequest_(std::make_shared<ImageRequest>(
+            std::move(maximumTrackImageRequest))),
+        thumbImageSource_(thumbImageSource),
+        thumbImageRequest_(
+            std::make_shared<ImageRequest>(std::move(thumbImageRequest))){};
+
+  SliderState() = default;
+
+  ImageSource getTrackImageSource() const;
+  ImageRequest const &getTrackImageRequest() const;
+
+  ImageSource getMinimumTrackImageSource() const;
+  ImageRequest const &getMinimumTrackImageRequest() const;
+
+  ImageSource getMaximumTrackImageSource() const;
+  ImageRequest const &getMaximumTrackImageRequest() const;
+
+  ImageSource getThumbImageSource() const;
+  ImageRequest const &getThumbImageRequest() const;
+
+#ifdef ANDROID
+  SliderState(SliderState const &previousState, folly::dynamic data){};
+
+  /*
+   * Empty implementation for Android because it doesn't use this class.
+   */
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+  MapBuffer getMapBuffer() const {
+    return MapBufferBuilder::EMPTY();
+  };
+#endif
+
+ private:
+  ImageSource trackImageSource_;
+  std::shared_ptr<ImageRequest> trackImageRequest_;
+  ImageSource minimumTrackImageSource_;
+  std::shared_ptr<ImageRequest> minimumTrackImageRequest_;
+  ImageSource maximumTrackImageSource_;
+  std::shared_ptr<ImageRequest> maximumTrackImageRequest_;
+  ImageSource thumbImageSource_;
+  std::shared_ptr<ImageRequest> thumbImageRequest_;
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/android/react/renderer/components/slider/SliderMeasurementsManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/android/react/renderer/components/slider/SliderMeasurementsManager.cpp
new file mode 100644
index 0000000..2f161fe
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/android/react/renderer/components/slider/SliderMeasurementsManager.cpp
@@ -0,0 +1,72 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "SliderMeasurementsManager.h"
+
+#include <fbjni/fbjni.h>
+#include <react/jni/ReadableNativeMap.h>
+#include <react/renderer/core/conversions.h>
+
+using namespace facebook::jni;
+
+namespace facebook::react {
+
+Size SliderMeasurementsManager::measure(
+    SurfaceId surfaceId,
+    LayoutConstraints layoutConstraints) const {
+  {
+    std::lock_guard<std::mutex> lock(mutex_);
+    if (hasBeenMeasured_) {
+      return cachedMeasurement_;
+    }
+  }
+
+  const jni::global_ref<jobject> &fabricUIManager =
+      contextContainer_->at<jni::global_ref<jobject>>("FabricUIManager");
+
+  static auto measure =
+      jni::findClassStatic("com/facebook/react/fabric/FabricUIManager")
+          ->getMethod<jlong(
+              jint,
+              jstring,
+              ReadableMap::javaobject,
+              ReadableMap::javaobject,
+              ReadableMap::javaobject,
+              jfloat,
+              jfloat,
+              jfloat,
+              jfloat)>("measure");
+
+  auto minimumSize = layoutConstraints.minimumSize;
+  auto maximumSize = layoutConstraints.maximumSize;
+
+  local_ref<JString> componentName = make_jstring("RCTSlider");
+
+  auto measurement = yogaMeassureToSize(measure(
+      fabricUIManager,
+      surfaceId,
+      componentName.get(),
+      nullptr,
+      nullptr,
+      nullptr,
+      minimumSize.width,
+      maximumSize.width,
+      minimumSize.height,
+      maximumSize.height));
+
+  // Explicitly release smart pointers to free up space faster in JNI tables
+  componentName.reset();
+
+  {
+    std::lock_guard<std::mutex> lock(mutex_);
+    cachedMeasurement_ = measurement;
+  }
+
+  return measurement;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/android/react/renderer/components/slider/SliderMeasurementsManager.h b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/android/react/renderer/components/slider/SliderMeasurementsManager.h
new file mode 100644
index 0000000..a8234ae
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/android/react/renderer/components/slider/SliderMeasurementsManager.h
@@ -0,0 +1,40 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/core/LayoutConstraints.h>
+#include <react/utils/ContextContainer.h>
+
+namespace facebook {
+namespace react {
+
+/**
+ * Class that manages slider measurements across platforms.
+ * On iOS it is a noop, since the height is passed in from JS on iOS only.
+ */
+class SliderMeasurementsManager {
+ public:
+  SliderMeasurementsManager(const ContextContainer::Shared &contextContainer)
+      : contextContainer_(contextContainer) {}
+
+  static inline bool shouldMeasureSlider() {
+    return true;
+  }
+
+  Size measure(SurfaceId surfaceId, LayoutConstraints layoutConstraints) const;
+
+ private:
+  const ContextContainer::Shared contextContainer_;
+  mutable std::mutex mutex_;
+  mutable bool hasBeenMeasured_ = false;
+  mutable Size cachedMeasurement_{};
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/ios/SliderMeasurementsManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/ios/SliderMeasurementsManager.cpp
new file mode 100644
index 0000000..773d3f7
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/ios/SliderMeasurementsManager.cpp
@@ -0,0 +1,23 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "SliderMeasurementsManager.h"
+
+#include <react/debug/react_native_assert.h>
+
+namespace facebook {
+namespace react {
+
+Size SliderMeasurementsManager::measure(
+    SurfaceId surfaceId,
+    LayoutConstraints layoutConstraints) const {
+  react_native_assert(false); // should never reach this point
+  return {};
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/ios/SliderMeasurementsManager.h b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/ios/SliderMeasurementsManager.h
new file mode 100644
index 0000000..067deea
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/platform/ios/SliderMeasurementsManager.h
@@ -0,0 +1,33 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/core/LayoutConstraints.h>
+#include <react/utils/ContextContainer.h>
+
+namespace facebook {
+namespace react {
+
+/**
+ * Class that manages slider measurements across platforms.
+ * On iOS it is a noop, since the height is passed in from JS on iOS only.
+ */
+class SliderMeasurementsManager {
+ public:
+  SliderMeasurementsManager(ContextContainer::Shared const &contextContainer) {}
+
+  static inline bool shouldMeasureSlider() {
+    return false;
+  }
+
+  Size measure(SurfaceId surfaceId, LayoutConstraints layoutConstraints) const;
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/slider/tests/SliderTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/slider/tests/SliderTest.cpp
new file mode 100644
index 0000000..5bb020e
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/slider/tests/SliderTest.cpp
@@ -0,0 +1,14 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include <memory>
+
+#include <gtest/gtest.h>
+
+TEST(SliderTest, testSomething) {
+  // TODO
+}
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.cpp
index d83b9f7..e098e7b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.cpp
@@ -9,9 +9,9 @@
 
 #include <react/renderer/attributedstring/conversions.h>
 #include <react/renderer/core/CoreFeatures.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/core/propsConversions.h>
 #include <react/renderer/debug/DebugStringConvertibleItem.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook::react {
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.h
index 82369e2..b2d4e07 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextProps.h
@@ -11,6 +11,7 @@
 #include <react/renderer/core/Props.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/graphics/Color.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextShadowNode.cpp
index 0be6cdb..b0758dc 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/BaseTextShadowNode.cpp
@@ -11,7 +11,6 @@
 #include <react/renderer/components/text/RawTextShadowNode.h>
 #include <react/renderer/components/text/TextProps.h>
 #include <react/renderer/components/text/TextShadowNode.h>
-#include <react/renderer/core/TraitCast.h>
 #include <react/renderer/mounting/ShadowView.h>
 
 namespace facebook::react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphLayoutManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphLayoutManager.cpp
deleted file mode 100644
index 1f4cbc4..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphLayoutManager.cpp
+++ /dev/null
@@ -1,84 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#include "ParagraphLayoutManager.h"
-#include <folly/Hash.h>
-#include <react/renderer/core/CoreFeatures.h>
-
-namespace facebook::react {
-
-TextMeasurement ParagraphLayoutManager::measure(
-    AttributedString const &attributedString,
-    ParagraphAttributes const &paragraphAttributes,
-    LayoutConstraints layoutConstraints) const {
-  bool cacheLastTextMeasurement = CoreFeatures::cacheLastTextMeasurement;
-  if (cacheLastTextMeasurement &&
-      (layoutConstraints.maximumSize.width == availableWidth_ ||
-       layoutConstraints.maximumSize.width ==
-           cachedTextMeasurement_.size.width)) {
-    /* Yoga has requested measurement for this size before. Let's use cached
-     * value. `TextLayoutManager` might not have cached this because it could be
-     * using different width to generate cache key. This happens because Yoga
-     * switches between available width and exact width but since we already
-     * know exact width, it is wasteful to calculate it again.
-     */
-    return cachedTextMeasurement_;
-  }
-  if (CoreFeatures::cacheNSTextStorage) {
-    size_t newHash = folly::hash::hash_combine(
-        0,
-        textAttributedStringHashLayoutWise(attributedString),
-        paragraphAttributes);
-
-    if (!hostTextStorage_ || newHash != hash_) {
-      hostTextStorage_ = textLayoutManager_->getHostTextStorage(
-          attributedString, paragraphAttributes, layoutConstraints);
-      hash_ = newHash;
-    }
-  }
-
-  if (cacheLastTextMeasurement) {
-    cachedTextMeasurement_ = textLayoutManager_->measure(
-        AttributedStringBox(attributedString),
-        paragraphAttributes,
-        layoutConstraints,
-        hostTextStorage_);
-
-    availableWidth_ = layoutConstraints.maximumSize.width;
-
-    return cachedTextMeasurement_;
-  } else {
-    return textLayoutManager_->measure(
-        AttributedStringBox(attributedString),
-        paragraphAttributes,
-        layoutConstraints,
-        hostTextStorage_);
-  }
-}
-
-LinesMeasurements ParagraphLayoutManager::measureLines(
-    AttributedString const &attributedString,
-    ParagraphAttributes const &paragraphAttributes,
-    Size size) const {
-  return textLayoutManager_->measureLines(
-      attributedString, paragraphAttributes, size);
-}
-
-void ParagraphLayoutManager::setTextLayoutManager(
-    std::shared_ptr<TextLayoutManager const> textLayoutManager) const {
-  textLayoutManager_ = std::move(textLayoutManager);
-}
-
-std::shared_ptr<TextLayoutManager const>
-ParagraphLayoutManager::getTextLayoutManager() const {
-  return textLayoutManager_;
-}
-
-std::shared_ptr<void> ParagraphLayoutManager::getHostTextStorage() const {
-  return hostTextStorage_;
-}
-} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphLayoutManager.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphLayoutManager.h
deleted file mode 100644
index d262db6..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphLayoutManager.h
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <react/renderer/attributedstring/AttributedString.h>
-#include <react/renderer/attributedstring/ParagraphAttributes.h>
-#include <react/renderer/core/LayoutConstraints.h>
-#include <react/renderer/textlayoutmanager/TextLayoutManager.h>
-
-namespace facebook::react {
-
-/*
- * Serves as a middle man between `ParagraphShadowNode` and `TextLayoutManager`.
- * On iOS, caches `NSTextStorage` for individual `ParagraphShadowNode` to make
- * sure only one `NSTextStorage` is created for every string. `NSTextStorage`
- * can be re created on native views layer but it is expensive. On Android, this
- * class does not cache anything.
- */
-class ParagraphLayoutManager {
- public:
-  TextMeasurement measure(
-      AttributedString const &attributedString,
-      ParagraphAttributes const &paragraphAttributes,
-      LayoutConstraints layoutConstraints) const;
-
-  LinesMeasurements measureLines(
-      AttributedString const &attributedString,
-      ParagraphAttributes const &paragraphAttributes,
-      Size size) const;
-
-  void setTextLayoutManager(
-      std::shared_ptr<TextLayoutManager const> textLayoutManager) const;
-
-  /*
-   * Returns an opaque pointer to platform-specific `TextLayoutManager`.
-   * Is used on a native views layer to delegate text rendering to the manager.
-   */
-  std::shared_ptr<TextLayoutManager const> getTextLayoutManager() const;
-
-  /*
-   * Returns opaque shared_ptr holding `NSTextStorage`.
-   * May be nullptr.
-   * Is used on a native views layer to prevent `NSTextStorage` from being
-   * created twice.
-   */
-  std::shared_ptr<void> getHostTextStorage() const;
-
- private:
-  std::shared_ptr<TextLayoutManager const> mutable textLayoutManager_{};
-  std::shared_ptr<void> mutable hostTextStorage_{};
-
-  /* The width Yoga set as maximum width.
-   * Yoga sometimes calls measure twice with two
-   * different maximum width. One if available space.
-   * The other one is exact space needed for the string.
-   * This happens when node is dirtied but its size is not affected.
-   * To deal with this inefficiency, we cache `TextMeasurement` for each
-   * `ParagraphShadowNode`. If Yoga tries to re-measure with available width
-   * or exact width, we provide it with the cached value.
-   */
-  Float mutable availableWidth_{};
-  TextMeasurement mutable cachedTextMeasurement_{};
-
-  size_t mutable hash_{};
-};
-} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphProps.cpp
index 242567d..c666e5e 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphProps.cpp
@@ -66,8 +66,6 @@ void ParagraphProps::setProp(
   ViewProps::setProp(context, hash, propName, value);
   BaseTextProps::setProp(context, hash, propName, value);
 
-  static auto defaults = ParagraphProps{};
-
   // ParagraphAttributes has its own switch statement - to keep all
   // of these fields together, and because there are some collisions between
   // propnames parsed here and outside of ParagraphAttributes.
@@ -121,8 +119,8 @@ void ParagraphProps::setProp(
   }
 
   switch (hash) {
-    RAW_SET_PROP_SWITCH_CASE_BASIC(isSelectable);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(onTextLayout);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(isSelectable, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(onTextLayout, {});
   }
 
   /*
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.cpp
index 17cb7dd..48b3a21 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.cpp
@@ -13,7 +13,6 @@
 #include <react/renderer/attributedstring/AttributedStringBox.h>
 #include <react/renderer/components/view/ViewShadowNode.h>
 #include <react/renderer/components/view/conversions.h>
-#include <react/renderer/core/TraitCast.h>
 #include <react/renderer/graphics/rounding.h>
 #include <react/renderer/telemetry/TransactionTelemetry.h>
 
@@ -95,8 +94,7 @@ Content ParagraphShadowNode::getContentWithMeasuredAttachments(
 void ParagraphShadowNode::setTextLayoutManager(
     std::shared_ptr<TextLayoutManager const> textLayoutManager) {
   ensureUnsealed();
-  getStateData().paragraphLayoutManager.setTextLayoutManager(
-      std::move(textLayoutManager));
+  textLayoutManager_ = std::move(textLayoutManager);
 }
 
 void ParagraphShadowNode::updateStateIfNeeded(Content const &content) {
@@ -104,7 +102,7 @@ void ParagraphShadowNode::updateStateIfNeeded(Content const &content) {
 
   auto &state = getStateData();
 
-  react_native_assert(state.paragraphLayoutManager.getTextLayoutManager());
+  react_native_assert(textLayoutManager_);
 
   if (state.attributedString == content.attributedString) {
     return;
@@ -113,7 +111,7 @@ void ParagraphShadowNode::updateStateIfNeeded(Content const &content) {
   setStateData(ParagraphState{
       content.attributedString,
       content.paragraphAttributes,
-      state.paragraphLayoutManager});
+      textLayoutManager_});
 }
 
 #pragma mark - LayoutableShadowNode
@@ -137,9 +135,11 @@ Size ParagraphShadowNode::measureContent(
     attributedString.appendFragment({string, textAttributes, {}});
   }
 
-  return getStateData()
-      .paragraphLayoutManager
-      .measure(attributedString, content.paragraphAttributes, layoutConstraints)
+  return textLayoutManager_
+      ->measure(
+          AttributedStringBox{attributedString},
+          content.paragraphAttributes,
+          layoutConstraints)
       .size;
 }
 
@@ -156,11 +156,13 @@ void ParagraphShadowNode::layout(LayoutContext layoutContext) {
 
   updateStateIfNeeded(content);
 
-  auto measurement = getStateData().paragraphLayoutManager.measure(
-      content.attributedString, content.paragraphAttributes, layoutConstraints);
+  auto measurement = textLayoutManager_->measure(
+      AttributedStringBox{content.attributedString},
+      content.paragraphAttributes,
+      layoutConstraints);
 
   if (getConcreteProps().onTextLayout) {
-    auto linesMeasurements = getStateData().paragraphLayoutManager.measureLines(
+    auto linesMeasurements = textLayoutManager_->measureLines(
         content.attributedString,
         content.paragraphAttributes,
         measurement.size);
@@ -203,8 +205,8 @@ void ParagraphShadowNode::layout(LayoutContext layoutContext) {
     paragraphShadowNode =
         static_cast<ParagraphShadowNode *>(paragraphOwningShadowNode.get());
 
-    auto &layoutableShadowNode =
-        traitCast<LayoutableShadowNode &>(*clonedShadowNode);
+    auto &layoutableShadowNode = const_cast<LayoutableShadowNode &>(
+        traitCast<LayoutableShadowNode const &>(*clonedShadowNode));
 
     auto attachmentFrame = measurement.attachments[i].frame;
     auto attachmentSize = roundToPixel<&ceil>(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.h
index b240637..42ef650 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphShadowNode.h
@@ -7,14 +7,16 @@
 
 #pragma once
 
-#include <react/renderer/components/text/BaseTextShadowNode.h>
+#include <folly/Optional.h>
 #include <react/renderer/components/text/ParagraphEventEmitter.h>
-#include <react/renderer/components/text/ParagraphLayoutManager.h>
 #include <react/renderer/components/text/ParagraphProps.h>
 #include <react/renderer/components/text/ParagraphState.h>
+#include <react/renderer/components/text/TextShadowNode.h>
 #include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <react/renderer/core/ConcreteShadowNode.h>
 #include <react/renderer/core/LayoutContext.h>
 #include <react/renderer/core/ShadowNode.h>
+#include <react/renderer/textlayoutmanager/TextLayoutManager.h>
 
 namespace facebook {
 namespace react {
@@ -95,6 +97,8 @@ class ParagraphShadowNode final : public ConcreteViewShadowNode<
    */
   void updateStateIfNeeded(Content const &content);
 
+  std::shared_ptr<TextLayoutManager const> textLayoutManager_;
+
   /*
    * Cached content of the subtree started from the node.
    */
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphState.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphState.h
index f5a0408..24a8e12 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphState.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/ParagraphState.h
@@ -10,14 +10,15 @@
 #include <react/debug/react_native_assert.h>
 #include <react/renderer/attributedstring/AttributedString.h>
 #include <react/renderer/attributedstring/ParagraphAttributes.h>
-#include <react/renderer/components/text/ParagraphLayoutManager.h>
+#include <react/renderer/textlayoutmanager/TextLayoutManager.h>
 
 #ifdef ANDROID
 #include <folly/dynamic.h>
 #include <react/renderer/mapbuffer/MapBuffer.h>
 #endif
 
-namespace facebook::react {
+namespace facebook {
+namespace react {
 
 #ifdef ANDROID
 // constants for Text State serialization
@@ -32,7 +33,8 @@ constexpr static MapBuffer::Key TX_STATE_KEY_MOST_RECENT_EVENT_COUNT = 3;
  * State for <Paragraph> component.
  * Represents what to render and how to render.
  */
-struct ParagraphState {
+class ParagraphState final {
+ public:
   /*
    * All content of <Paragraph> component represented as an `AttributedString`.
    */
@@ -45,22 +47,22 @@ struct ParagraphState {
   ParagraphAttributes paragraphAttributes;
 
   /*
-   * `ParagraphLayoutManager` provides a connection to platform-specific
+   * `TextLayoutManager` provides a connection to platform-specific
    * text rendering infrastructure which is capable to render the
    * `AttributedString`.
    * This is not on every platform. This is not used on Android, but is
    * used on the iOS mounting layer.
    */
-  ParagraphLayoutManager paragraphLayoutManager;
+  std::weak_ptr<TextLayoutManager const> layoutManager;
 
 #ifdef ANDROID
   ParagraphState(
       AttributedString const &attributedString,
       ParagraphAttributes const &paragraphAttributes,
-      ParagraphLayoutManager const &paragraphLayoutManager)
+      std::weak_ptr<const TextLayoutManager> const &layoutManager)
       : attributedString(attributedString),
         paragraphAttributes(paragraphAttributes),
-        paragraphLayoutManager(paragraphLayoutManager) {}
+        layoutManager(layoutManager) {}
   ParagraphState() = default;
   ParagraphState(
       ParagraphState const &previousState,
@@ -72,4 +74,5 @@ struct ParagraphState {
 #endif
 };
 
-} // namespace facebook::react
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/RawTextShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/RawTextShadowNode.h
index bd62a4a..11cda56 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/RawTextShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/RawTextShadowNode.h
@@ -29,13 +29,34 @@ class RawTextShadowNode : public ConcreteShadowNode<
   using ConcreteShadowNode::ConcreteShadowNode;
   static ShadowNodeTraits BaseTraits() {
     auto traits = ConcreteShadowNode::BaseTraits();
-    traits.set(IdentifierTrait());
+    traits.set(ShadowNodeTraits::Trait::RawText);
     return traits;
   }
-  static ShadowNodeTraits::Trait IdentifierTrait() {
-    return ShadowNodeTraits::Trait::RawText;
-  }
 };
 
+template <>
+inline RawTextShadowNode const &traitCast<RawTextShadowNode const &>(
+    ShadowNode const &shadowNode) {
+  bool castable =
+      shadowNode.getTraits().check(ShadowNodeTraits::Trait::RawText);
+  react_native_assert(castable);
+  (void)castable;
+  return static_cast<RawTextShadowNode const &>(shadowNode);
+}
+
+template <>
+inline RawTextShadowNode const *traitCast<RawTextShadowNode const *>(
+    ShadowNode const *shadowNode) {
+  if (!shadowNode) {
+    return nullptr;
+  }
+  bool castable =
+      shadowNode->getTraits().check(ShadowNodeTraits::Trait::RawText);
+  if (!castable) {
+    return nullptr;
+  }
+  return static_cast<RawTextShadowNode const *>(shadowNode);
+}
+
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/TextProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/TextProps.h
index 38502bc..53df637 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/TextProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/TextProps.h
@@ -12,6 +12,7 @@
 #include <react/renderer/core/Props.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/graphics/Color.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/TextShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/text/TextShadowNode.h
index 3c252a2..cefad90 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/TextShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/TextShadowNode.h
@@ -34,15 +34,11 @@ class TextShadowNode : public ConcreteShadowNode<
 #ifdef ANDROID
     traits.set(ShadowNodeTraits::Trait::FormsView);
 #endif
-    traits.set(IdentifierTrait());
+    traits.set(ShadowNodeTraits::Trait::Text);
 
     return traits;
   }
 
-  static ShadowNodeTraits::Trait IdentifierTrait() {
-    return ShadowNodeTraits::Trait::Text;
-  }
-
   using ConcreteShadowNode::ConcreteShadowNode;
 
 #ifdef ANDROID
@@ -62,5 +58,27 @@ class TextShadowNode : public ConcreteShadowNode<
 #endif
 };
 
+template <>
+inline TextShadowNode const &traitCast<TextShadowNode const &>(
+    ShadowNode const &shadowNode) {
+  bool castable = shadowNode.getTraits().check(ShadowNodeTraits::Trait::Text);
+  react_native_assert(castable);
+  (void)castable;
+  return static_cast<TextShadowNode const &>(shadowNode);
+}
+
+template <>
+inline TextShadowNode const *traitCast<TextShadowNode const *>(
+    ShadowNode const *shadowNode) {
+  if (!shadowNode) {
+    return nullptr;
+  }
+  bool castable = shadowNode->getTraits().check(ShadowNodeTraits::Trait::Text);
+  if (!castable) {
+    return nullptr;
+  }
+  return static_cast<TextShadowNode const *>(shadowNode);
+}
+
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/text/tests/ParagraphLocalDataTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/text/tests/ParagraphLocalDataTest.cpp
index afa6723..1c09c5d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/text/tests/ParagraphLocalDataTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/text/tests/ParagraphLocalDataTest.cpp
@@ -9,6 +9,7 @@
 
 #include <assert.h>
 #include <gtest/gtest.h>
+#include <react/debug/react_native_assert.h>
 #include <react/renderer/attributedstring/AttributedString.h>
 #include <react/renderer/attributedstring/TextAttributes.h>
 #include <react/renderer/attributedstring/primitives.h>
@@ -33,19 +34,21 @@ TEST(ParagraphLocalDataTest, testSomething) {
   text.fontWeight = FontWeight::Thin;
   text.fontVariant = FontVariant::TabularNums;
   fragment.textAttributes = text;
-  attributedString.prependFragment(fragment);
+  attString.prependFragment(fragment);
 
   auto paragraphState = ParagraphState{};
-  paragraphState.attributedString = attributedString;
+  paragraphLocalData.attributedString = attributedString;
 
   auto result = toDynamic(paragraphState)["attributedString"];
 
-  EXPECT_EQ(result["string"], fragment.string);
+  react_native_assert(result["string"] == fragment.string);
   auto textAttribute = result["fragments"][0]["textAttributes"];
-  EXPECT_EQ(textAttribute["foregroundColor"], toDynamic(text.foregroundColor));
-  EXPECT_EQ(textAttribute["opacity"], text.opacity);
-  EXPECT_EQ(textAttribute["fontStyle"], toString(*text.fontStyle));
-  EXPECT_EQ(textAttribute["fontWeight"], toString(*text.fontWeight));
+  react_native_assert(
+      textAttribute["foregroundColor"] == toDynamic(text.foregroundColor));
+  react_native_assert(textAttribute["opacity"] == text.opacity);
+  react_native_assert(textAttribute["fontStyle"] == toString(*text.fontStyle));
+  react_native_assert(
+      textAttribute["fontWeight"] == toString(*text.fontWeight));
 }
 
 #endif
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.cpp
index 9953e22..c8eaf16 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.cpp
@@ -8,8 +8,8 @@
 #include "AndroidTextInputProps.h"
 #include <react/renderer/components/image/conversions.h>
 #include <react/renderer/core/CoreFeatures.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/core/propsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook::react {
 
@@ -134,6 +134,8 @@ AndroidTextInputProps::AndroidTextInputProps(
           "selectionColor",
           sourceProps.selectionColor,
           {})),
+      selection(CoreFeatures::enablePropIteratorSetter? sourceProps.selection :
+          convertRawProp(context, rawProps, "selection", sourceProps.selection, {})),
       value(CoreFeatures::enablePropIteratorSetter? sourceProps.value : convertRawProp(context, rawProps, "value", sourceProps.value, {})),
       defaultValue(CoreFeatures::enablePropIteratorSetter? sourceProps.defaultValue : convertRawProp(context, rawProps,
           "defaultValue",
@@ -267,8 +269,6 @@ void AndroidTextInputProps::setProp(
   ViewProps::setProp(context, hash, propName, value);
   BaseTextProps::setProp(context, hash, propName, value);
 
-  static auto defaults = AndroidTextInputProps{};
-
   // ParagraphAttributes has its own switch statement - to keep all
   // of these fields together, and because there are some collisions between
   // propnames parsed here and outside of ParagraphAttributes. For example,
@@ -323,58 +323,55 @@ void AndroidTextInputProps::setProp(
   }
 
   switch (hash) {
-    RAW_SET_PROP_SWITCH_CASE_BASIC(autoComplete);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(returnKeyLabel);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(numberOfLines);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(disableFullscreenUI);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textBreakStrategy);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(underlineColorAndroid);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(inlineImageLeft);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(inlineImagePadding);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(importantForAutofill);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(showSoftInputOnFocus);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(autoCapitalize);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(autoCorrect);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(autoFocus);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(allowFontScaling);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(maxFontSizeMultiplier);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(editable);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(keyboardType);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(returnKeyType);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(maxLength);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(multiline);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(placeholder);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(placeholderTextColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(secureTextEntry);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(selectionColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(defaultValue);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(selectTextOnFocus);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(submitBehavior);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(caretHidden);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(contextMenuHidden);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textShadowColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textShadowRadius);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textDecorationLine);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(fontStyle);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textShadowOffset);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(lineHeight);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textTransform);
-    // RAW_SET_PROP_SWITCH_CASE_BASIC(color);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(letterSpacing);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(fontSize);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textAlign);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(includeFontPadding);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(fontWeight);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(fontFamily);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(textAlignVertical);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(cursorColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(mostRecentEventCount);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(text);
-
-    case CONSTEXPR_RAW_PROPS_KEY_HASH("value"): {
-      fromRawValue(context, value, this->value, {});
-      return;
-    }
+    RAW_SET_PROP_SWITCH_CASE_BASIC(autoComplete, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(returnKeyLabel, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(numberOfLines, 0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(disableFullscreenUI, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textBreakStrategy, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(underlineColorAndroid, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(inlineImageLeft, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(inlineImagePadding, 0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(importantForAutofill, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(showSoftInputOnFocus, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(autoCapitalize, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(autoCorrect, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(autoFocus, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(allowFontScaling, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(maxFontSizeMultiplier, (Float)0.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(editable, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(keyboardType, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(returnKeyType, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(maxLength, 0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(multiline, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(placeholder, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(placeholderTextColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(secureTextEntry, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(selectionColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(selection, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(this->value, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(defaultValue, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(selectTextOnFocus, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(submitBehavior, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(caretHidden, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(contextMenuHidden, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textShadowColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textShadowRadius, (Float)0.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textDecorationLine, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(fontStyle, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textShadowOffset, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(lineHeight, (Float)0.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textTransform, {});
+    // RAW_SET_PROP_SWITCH_CASE_BASIC(color, {0}); // currently not being parsed
+    RAW_SET_PROP_SWITCH_CASE_BASIC(letterSpacing, (Float)0.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(fontSize, (Float)0.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textAlign, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(includeFontPadding, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(fontWeight, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(fontFamily, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(textAlignVertical, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(cursorColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(mostRecentEventCount, 0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(text, {});
 
     // Paddings are not parsed at this level of the component (they're parsed in
     // ViewProps) but we do need to know if they're present or not. See
@@ -446,6 +443,7 @@ folly::dynamic AndroidTextInputProps::getDynamic() const {
   props["placeholderTextColor"] = toAndroidRepr(placeholderTextColor);
   props["secureTextEntry"] = secureTextEntry;
   props["selectionColor"] = toAndroidRepr(selectionColor);
+  props["selection"] = toDynamic(selection);
   props["value"] = value;
   props["defaultValue"] = defaultValue;
   props["selectTextOnFocus"] = selectTextOnFocus;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.h
index ba39ebb..33b34ad 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputProps.h
@@ -12,6 +12,7 @@
 // #include <react/renderer/components/text/BaseTextProps.h>
 #include <react/renderer/core/Props.h>
 #include <react/renderer/graphics/Color.h>
+#include <react/renderer/graphics/Geometry.h>
 
 #include <react/renderer/attributedstring/TextAttributes.h>
 #include <react/renderer/attributedstring/conversions.h>
@@ -27,6 +28,32 @@
 namespace facebook {
 namespace react {
 
+struct AndroidTextInputSelectionStruct {
+  int start;
+  int end;
+};
+
+static inline void fromRawValue(
+    const PropsParserContext &context,
+    const RawValue &value,
+    AndroidTextInputSelectionStruct &result) {
+  auto map = (butter::map<std::string, RawValue>)value;
+
+  auto start = map.find("start");
+  if (start != map.end()) {
+    fromRawValue(context, start->second, result.start);
+  }
+  auto end = map.find("end");
+  if (end != map.end()) {
+    fromRawValue(context, end->second, result.end);
+  }
+}
+
+static inline std::string toString(
+    const AndroidTextInputSelectionStruct &value) {
+  return "[Object AndroidTextInputSelectionStruct]";
+}
+
 struct AndroidTextInputTextShadowOffsetStruct {
   double width;
   double height;
@@ -61,6 +88,13 @@ inline folly::dynamic toDynamic(
   dynamicValue["height"] = value.height;
   return dynamicValue;
 }
+
+inline folly::dynamic toDynamic(const AndroidTextInputSelectionStruct &value) {
+  folly::dynamic dynamicValue = folly::dynamic::object();
+  dynamicValue["start"] = value.start;
+  dynamicValue["end"] = value.end;
+  return dynamicValue;
+}
 #endif
 
 class AndroidTextInputProps final : public ViewProps, public BaseTextProps {
@@ -105,6 +139,7 @@ class AndroidTextInputProps final : public ViewProps, public BaseTextProps {
   SharedColor placeholderTextColor{};
   bool secureTextEntry{false};
   SharedColor selectionColor{};
+  AndroidTextInputSelectionStruct selection{};
   std::string value{};
   std::string defaultValue{};
   bool selectTextOnFocus{false};
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputShadowNode.cpp
index 7bd83c7..2c9a4a5 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/androidtextinput/react/renderer/components/androidtextinput/AndroidTextInputShadowNode.cpp
@@ -197,8 +197,7 @@ Size AndroidTextInputShadowNode::measureContent(
       ->measure(
           AttributedStringBox{attributedString},
           getConcreteProps().paragraphAttributes,
-          layoutConstraints,
-          nullptr)
+          layoutConstraints)
       .size;
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/BUCK b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/BUCK
index 7b60f0a..28b6cf4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/BUCK
@@ -12,8 +12,6 @@ load(
     "subdir_glob",
 )
 
-oncall("react_native")
-
 APPLE_COMPILER_FLAGS = get_apple_compiler_flags()
 
 rn_xplat_cxx_library(
@@ -30,7 +28,6 @@ rn_xplat_cxx_library(
     exported_headers = subdir_glob(
         [
             ("", "*.h"),
-            ("react/renderer/components/iostextinput", "*.h"),
         ],
         # TODO(shergin) T26519801 Figure out better directories structure
         prefix = "react/renderer/components/iostextinput",
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputComponentDescriptor.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputComponentDescriptor.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputComponentDescriptor.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputComponentDescriptor.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputEventEmitter.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputEventEmitter.cpp
similarity index 80%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputEventEmitter.cpp
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputEventEmitter.cpp
index 24a5802..494ab15 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputEventEmitter.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputEventEmitter.cpp
@@ -36,23 +36,6 @@ static jsi::Value textInputMetricsPayload(
   return payload;
 };
 
-static jsi::Value textInputMetricsContentSizePayload(
-    jsi::Runtime &runtime,
-    TextInputMetrics const &textInputMetrics) {
-  auto payload = jsi::Object(runtime);
-
-  {
-    auto contentSize = jsi::Object(runtime);
-    contentSize.setProperty(
-        runtime, "width", textInputMetrics.contentSize.width);
-    contentSize.setProperty(
-        runtime, "height", textInputMetrics.contentSize.height);
-    payload.setProperty(runtime, "contentSize", contentSize);
-  }
-
-  return payload;
-};
-
 static jsi::Value keyPressMetricsPayload(
     jsi::Runtime &runtime,
     KeyPressMetrics const &keyPressMetrics) {
@@ -99,8 +82,7 @@ void TextInputEventEmitter::onChangeSync(
 
 void TextInputEventEmitter::onContentSizeChange(
     TextInputMetrics const &textInputMetrics) const {
-  dispatchTextInputContentSizeChangeEvent(
-      "contentSizeChange", textInputMetrics);
+  dispatchTextInputEvent("contentSizeChange", textInputMetrics);
 }
 
 void TextInputEventEmitter::onSelectionChange(
@@ -155,16 +137,4 @@ void TextInputEventEmitter::dispatchTextInputEvent(
       priority);
 }
 
-void TextInputEventEmitter::dispatchTextInputContentSizeChangeEvent(
-    std::string const &name,
-    TextInputMetrics const &textInputMetrics,
-    EventPriority priority) const {
-  dispatchEvent(
-      name,
-      [textInputMetrics](jsi::Runtime &runtime) {
-        return textInputMetricsContentSizePayload(runtime, textInputMetrics);
-      },
-      priority);
-}
-
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputEventEmitter.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputEventEmitter.h
similarity index 90%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputEventEmitter.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputEventEmitter.h
index 2e7e2f7..3dc1cef 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputEventEmitter.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputEventEmitter.h
@@ -54,11 +54,6 @@ class TextInputEventEmitter : public ViewEventEmitter {
       std::string const &name,
       TextInputMetrics const &textInputMetrics,
       EventPriority priority = EventPriority::AsynchronousBatched) const;
-
-  void dispatchTextInputContentSizeChangeEvent(
-      std::string const &name,
-      TextInputMetrics const &textInputMetrics,
-      EventPriority priority = EventPriority::AsynchronousBatched) const;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputProps.cpp
similarity index 98%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputProps.cpp
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputProps.cpp
index 5b1c867..dad0ea7 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputProps.cpp
@@ -9,8 +9,8 @@
 
 #include <react/renderer/attributedstring/conversions.h>
 #include <react/renderer/components/iostextinput/propsConversions.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/core/propsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook::react {
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputProps.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputProps.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputProps.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputShadowNode.cpp
similarity index 98%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputShadowNode.cpp
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputShadowNode.cpp
index 6e4771a..b35b802 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputShadowNode.cpp
@@ -110,8 +110,7 @@ Size TextInputShadowNode::measureContent(
       ->measure(
           attributedStringBoxToMeasure(layoutContext),
           getConcreteProps().getEffectiveParagraphAttributes(),
-          layoutConstraints,
-          nullptr)
+          layoutConstraints)
       .size;
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputShadowNode.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputShadowNode.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputShadowNode.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputState.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputState.cpp
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputState.cpp
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputState.cpp
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputState.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputState.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/TextInputState.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/TextInputState.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/conversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/conversions.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/conversions.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/conversions.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/primitives.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/primitives.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/primitives.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/primitives.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/propsConversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/propsConversions.h
similarity index 96%
rename from node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/propsConversions.h
rename to node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/propsConversions.h
index d3cdf58..15dc000 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/react/renderer/components/iostextinput/propsConversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/textinput/iostextinput/propsConversions.h
@@ -7,7 +7,6 @@
 
 #pragma once
 
-#include <react/debug/react_native_expect.h>
 #include <react/renderer/components/iostextinput/primitives.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/core/propsConversions.h>
@@ -159,16 +158,16 @@ inline void fromRawValue(
         result.end = pair.second;
       } else {
         LOG(ERROR) << "Unsupported Selection map key: " << pair.first;
-        react_native_expect(false);
+        react_native_assert(false);
       }
     }
     return;
   }
 
-  react_native_expect(value.hasType<std::vector<int>>());
+  react_native_assert(value.hasType<std::vector<int>>());
   if (value.hasType<std::vector<int>>()) {
     auto array = (std::vector<int>)value;
-    react_native_expect(array.size() == 2);
+    react_native_assert(array.size() == 2);
     if (array.size() >= 2) {
       result = {array.at(0), array.at(1)};
     } else {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/unimplementedview/UnimplementedViewComponentDescriptor.h b/node_modules/react-native/ReactCommon/react/renderer/components/unimplementedview/UnimplementedViewComponentDescriptor.h
index 3ae47a5..0d89f95 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/unimplementedview/UnimplementedViewComponentDescriptor.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/unimplementedview/UnimplementedViewComponentDescriptor.h
@@ -30,7 +30,7 @@ class UnimplementedViewComponentDescriptor final
   ComponentName getComponentName() const override;
 
   /*
-   * In addition to base implementation, stores a component name inside cloned
+   * In addtion to base implementation, stores a component name inside cloned
    * `Props` object.
    */
   Props::Shared cloneProps(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPrimitives.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPrimitives.h
index a1b369a..abc5df0 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPrimitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPrimitives.h
@@ -69,9 +69,9 @@ inline static bool operator!=(
 struct AccessibilityState {
   bool disabled{false};
   bool selected{false};
+  enum { Unchecked, Checked, Mixed, None } checked{None};
   bool busy{false};
   bool expanded{false};
-  enum { Unchecked, Checked, Mixed, None } checked{None};
 };
 
 constexpr bool operator==(
@@ -124,14 +124,14 @@ constexpr bool operator!=(
   return !(rhs == lhs);
 }
 
-enum class ImportantForAccessibility : uint8_t {
+enum class ImportantForAccessibility {
   Auto,
   Yes,
   No,
   NoHideDescendants,
 };
 
-enum class AccessibilityLiveRegion : uint8_t {
+enum class AccessibilityLiveRegion {
   None,
   Polite,
   Assertive,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityProps.cpp
index 8861f69..8ee8640 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityProps.cpp
@@ -192,8 +192,8 @@ AccessibilityProps::AccessibilityProps(
     AccessibilityTraits traits;
     std::string roleString;
     if (rawPropValue == nullptr || !rawPropValue->hasValue()) {
-      traits = sourceProps.accessibilityTraits;
-      roleString = sourceProps.accessibilityRole;
+      traits = AccessibilityTraits::None;
+      roleString = "";
     } else {
       fromRawValue(context, *rawPropValue, traits);
       fromRawValue(context, *rawPropValue, roleString);
@@ -208,26 +208,25 @@ void AccessibilityProps::setProp(
     RawPropsPropNameHash hash,
     const char * /*propName*/,
     RawValue const &value) {
-  static auto defaults = AccessibilityProps{};
-
   switch (hash) {
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessible);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityState);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityLabel);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityLabelledBy);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityHint);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityLanguage);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityValue);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityActions);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityViewIsModal);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityElementsHidden);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityIgnoresInvertColors);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityTap);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityMagicTap);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityEscape);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityAction);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(importantForAccessibility);
-    RAW_SET_PROP_SWITCH_CASE(testId, "testID");
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessible, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityState, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityLabel, std::string{""});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityLabelledBy, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityHint, std::string{""});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityLanguage, std::string{""});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityValue, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityActions, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityViewIsModal, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityElementsHidden, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(accessibilityIgnoresInvertColors, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityTap, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityMagicTap, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityEscape, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(onAccessibilityAction, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(
+        importantForAccessibility, ImportantForAccessibility::Auto);
+    RAW_SET_PROP_SWITCH_CASE(testId, "testID", std::string{""});
     case CONSTEXPR_RAW_PROPS_KEY_HASH("accessibilityRole"): {
       AccessibilityTraits traits = AccessibilityTraits::None;
       std::string roleString;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.cpp
index 01111a6..31f34b3 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.cpp
@@ -8,6 +8,8 @@
 #include "AccessibilityPropsMapBuffer.h"
 #include "AccessibilityProps.h"
 
+#include <react/renderer/mapbuffer/MapBufferBuilder.h>
+
 namespace facebook {
 namespace react {
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.h
index 16b5202..a4aa6c9 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/AccessibilityPropsMapBuffer.h
@@ -7,14 +7,12 @@
 
 #pragma once
 
-#ifdef ANDROID
-
 #include <react/renderer/mapbuffer/MapBuffer.h>
-#include <react/renderer/mapbuffer/MapBufferBuilder.h>
 
 namespace facebook {
 namespace react {
 
+#ifdef ANDROID
 constexpr MapBuffer::Key AP_ACCESSIBILITY_ACTIONS = 0;
 constexpr MapBuffer::Key AP_ACCESSIBILITY_HINT = 1;
 constexpr MapBuffer::Key AP_ACCESSIBILITY_LABEL = 2;
@@ -29,7 +27,7 @@ constexpr MapBuffer::Key AP_IMPORTANT_FOR_ACCESSIBILITY = 19;
 // AccessibilityAction values
 constexpr MapBuffer::Key ACCESSIBILITY_ACTION_NAME = 0;
 constexpr MapBuffer::Key ACCESSIBILITY_ACTION_LABEL = 1;
+#endif
 
 } // namespace react
 } // namespace facebook
-#endif
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/BUCK b/node_modules/react-native/ReactCommon/react/renderer/components/view/BUCK
index dee2c4b..0693887 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/BUCK
@@ -60,7 +60,6 @@ rn_xplat_cxx_library(
         react_native_xplat_target("react/renderer/core:core"),
         react_native_xplat_target("react/renderer/debug:debug"),
         react_native_xplat_target("react/renderer/graphics:graphics"),
-        react_native_xplat_target("react/renderer/mapbuffer:mapbuffer"),
         react_native_xplat_target("react/config:config"),
         react_native_xplat_target("logger:logger"),
     ],
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/PointerEvent.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/PointerEvent.h
index 6b0022e..bc724c5 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/PointerEvent.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/PointerEvent.h
@@ -9,7 +9,7 @@
 
 #include <react/renderer/core/ReactPrimitives.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
-#include <react/renderer/graphics/Point.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/Touch.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/Touch.h
index 14afeb5..415fdc4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/Touch.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/Touch.h
@@ -9,7 +9,7 @@
 
 #include <react/renderer/core/ReactPrimitives.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
-#include <react/renderer/graphics/Point.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.cpp
index 6e08ced..d4f024b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.cpp
@@ -12,9 +12,9 @@
 #include <react/renderer/components/view/conversions.h>
 #include <react/renderer/components/view/propsConversions.h>
 #include <react/renderer/core/CoreFeatures.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/core/propsConversions.h>
 #include <react/renderer/debug/debugStringConvertibleUtils.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook::react {
 
@@ -265,19 +265,17 @@ ViewProps::ViewProps(
                     {}))
 
 #endif
-{
-}
+          {};
 
-#define VIEW_EVENT_CASE(eventType)                      \
-  case CONSTEXPR_RAW_PROPS_KEY_HASH("on" #eventType): { \
-    const auto offset = ViewEvents::Offset::eventType;  \
-    ViewEvents defaultViewEvents{};                     \
-    bool res = defaultViewEvents[offset];               \
-    if (value.hasValue()) {                             \
-      fromRawValue(context, value, res);                \
-    }                                                   \
-    events[offset] = res;                               \
-    return;                                             \
+#define VIEW_EVENT_CASE(eventType, eventString)     \
+  case CONSTEXPR_RAW_PROPS_KEY_HASH(eventString): { \
+    ViewEvents defaultViewEvents{};                 \
+    bool res = defaultViewEvents[eventType];        \
+    if (value.hasValue()) {                         \
+      fromRawValue(context, value, res);            \
+    }                                               \
+    events[eventType] = res;                        \
+    return;                                         \
   }
 
 void ViewProps::setProp(
@@ -291,59 +289,72 @@ void ViewProps::setProp(
   YogaStylableProps::setProp(context, hash, propName, value);
   AccessibilityProps::setProp(context, hash, propName, value);
 
-  static auto defaults = ViewProps{};
-
   switch (hash) {
-    RAW_SET_PROP_SWITCH_CASE_BASIC(opacity);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(foregroundColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(backgroundColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowColor);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowOffset);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowOpacity);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowRadius);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(transform);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(backfaceVisibility);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(shouldRasterize);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(zIndex);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(pointerEvents);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(hitSlop);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(onLayout);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(collapsable);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(removeClippedSubviews);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(opacity, (Float)1.0);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(foregroundColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(backgroundColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowColor, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowOffset, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowOpacity, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(shadowRadius, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(transform, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(backfaceVisibility, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(shouldRasterize, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(zIndex, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(pointerEvents, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(hitSlop, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(onLayout, {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(collapsable, true);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(removeClippedSubviews, false);
     // events field
-    VIEW_EVENT_CASE(PointerEnter);
-    VIEW_EVENT_CASE(PointerEnterCapture);
-    VIEW_EVENT_CASE(PointerMove);
-    VIEW_EVENT_CASE(PointerMoveCapture);
-    VIEW_EVENT_CASE(PointerLeave);
-    VIEW_EVENT_CASE(PointerLeaveCapture);
-    VIEW_EVENT_CASE(PointerOver);
-    VIEW_EVENT_CASE(PointerOut);
-    VIEW_EVENT_CASE(MoveShouldSetResponder);
-    VIEW_EVENT_CASE(MoveShouldSetResponderCapture);
-    VIEW_EVENT_CASE(StartShouldSetResponder);
-    VIEW_EVENT_CASE(StartShouldSetResponderCapture);
-    VIEW_EVENT_CASE(ResponderGrant);
-    VIEW_EVENT_CASE(ResponderReject);
-    VIEW_EVENT_CASE(ResponderStart);
-    VIEW_EVENT_CASE(ResponderEnd);
-    VIEW_EVENT_CASE(ResponderRelease);
-    VIEW_EVENT_CASE(ResponderMove);
-    VIEW_EVENT_CASE(ResponderTerminate);
-    VIEW_EVENT_CASE(ResponderTerminationRequest);
-    VIEW_EVENT_CASE(ShouldBlockNativeResponder);
-    VIEW_EVENT_CASE(TouchStart);
-    VIEW_EVENT_CASE(TouchMove);
-    VIEW_EVENT_CASE(TouchEnd);
-    VIEW_EVENT_CASE(TouchCancel);
+    VIEW_EVENT_CASE(ViewEvents::Offset::PointerEnter, "onPointerEnter");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::PointerEnterCapture, "onPointerEnterCapture");
+    VIEW_EVENT_CASE(ViewEvents::Offset::PointerMove, "onPointerMove");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::PointerMoveCapture, "onPointerMoveCapture");
+    VIEW_EVENT_CASE(ViewEvents::Offset::PointerLeave, "onPointerLeave");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::PointerLeaveCapture, "onPointerLeaveCapture");
+    VIEW_EVENT_CASE(ViewEvents::Offset::PointerOver, "onPointerOver");
+    VIEW_EVENT_CASE(ViewEvents::Offset::PointerOut, "onPointerOut");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::MoveShouldSetResponder, "onMoveShouldSetResponder");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::MoveShouldSetResponderCapture,
+        "onMoveShouldSetResponderCapture");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::StartShouldSetResponder,
+        "onStartShouldSetResponder");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::StartShouldSetResponderCapture,
+        "onStartShouldSetResponderCapture");
+    VIEW_EVENT_CASE(ViewEvents::Offset::ResponderGrant, "onResponderGrant");
+    VIEW_EVENT_CASE(ViewEvents::Offset::ResponderReject, "onResponderReject");
+    VIEW_EVENT_CASE(ViewEvents::Offset::ResponderStart, "onResponderStart");
+    VIEW_EVENT_CASE(ViewEvents::Offset::ResponderEnd, "onResponderEnd");
+    VIEW_EVENT_CASE(ViewEvents::Offset::ResponderRelease, "onResponderRelease");
+    VIEW_EVENT_CASE(ViewEvents::Offset::ResponderMove, "ResponderMove");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::ResponderTerminate, "onResponderTerminate");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::ResponderTerminationRequest,
+        "onResponderTerminationRequest");
+    VIEW_EVENT_CASE(
+        ViewEvents::Offset::ShouldBlockNativeResponder,
+        "onShouldBlockNativeResponder");
+    VIEW_EVENT_CASE(ViewEvents::Offset::TouchStart, "onTouchStart");
+    VIEW_EVENT_CASE(ViewEvents::Offset::TouchMove, "onTouchMove");
+    VIEW_EVENT_CASE(ViewEvents::Offset::TouchEnd, "onTouchEnd");
+    VIEW_EVENT_CASE(ViewEvents::Offset::TouchCancel, "onTouchCancel");
 #ifdef ANDROID
-    RAW_SET_PROP_SWITCH_CASE_BASIC(elevation);
-    RAW_SET_PROP_SWITCH_CASE(nativeBackground, "nativeBackgroundAndroid");
-    RAW_SET_PROP_SWITCH_CASE(nativeForeground, "nativeForegroundAndroid");
-    RAW_SET_PROP_SWITCH_CASE_BASIC(focusable);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(hasTVPreferredFocus);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(needsOffscreenAlphaCompositing);
-    RAW_SET_PROP_SWITCH_CASE_BASIC(renderToHardwareTextureAndroid);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(elevation, {});
+    RAW_SET_PROP_SWITCH_CASE(nativeBackground, "nativeBackgroundAndroid", {});
+    RAW_SET_PROP_SWITCH_CASE(nativeForeground, "nativeForegroundAndroid", {});
+    RAW_SET_PROP_SWITCH_CASE_BASIC(focusable, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(hasTVPreferredFocus, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(needsOffscreenAlphaCompositing, false);
+    RAW_SET_PROP_SWITCH_CASE_BASIC(renderToHardwareTextureAndroid, false);
 #endif
     // BorderRadii
     SET_CASCADED_RECTANGLE_CORNERS(borderRadii, "border", "Radius", value);
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.h
index dbdc489..ea08ea8 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewProps.h
@@ -14,6 +14,7 @@
 #include <react/renderer/core/Props.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/graphics/Color.h>
+#include <react/renderer/graphics/Geometry.h>
 #include <react/renderer/graphics/Transform.h>
 
 #include <optional>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewPropsMapBuffer.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewPropsMapBuffer.cpp
index 4602fa8..4136842 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewPropsMapBuffer.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/ViewPropsMapBuffer.cpp
@@ -12,7 +12,7 @@
 
 #include "viewPropConversions.h"
 
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 #include <react/renderer/mapbuffer/MapBufferBuilder.h>
 
 namespace facebook {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.cpp
index b46d36f..a034734 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.cpp
@@ -10,11 +10,9 @@
 #include <react/debug/flags.h>
 #include <react/debug/react_native_assert.h>
 #include <react/renderer/components/view/ViewProps.h>
-#include <react/renderer/components/view/ViewShadowNode.h>
 #include <react/renderer/components/view/conversions.h>
 #include <react/renderer/core/LayoutConstraints.h>
 #include <react/renderer/core/LayoutContext.h>
-#include <react/renderer/core/TraitCast.h>
 #include <react/renderer/debug/DebugStringConvertibleItem.h>
 #include <react/renderer/debug/SystraceSection.h>
 #include <yoga/Yoga.h>
@@ -63,14 +61,10 @@ thread_local LayoutContext threadLocalLayoutContext;
 
 ShadowNodeTraits YogaLayoutableShadowNode::BaseTraits() {
   auto traits = LayoutableShadowNode::BaseTraits();
-  traits.set(IdentifierTrait());
+  traits.set(ShadowNodeTraits::Trait::YogaLayoutableKind);
   return traits;
 }
 
-ShadowNodeTraits::Trait YogaLayoutableShadowNode::IdentifierTrait() {
-  return ShadowNodeTraits::Trait::YogaLayoutableKind;
-}
-
 YogaLayoutableShadowNode::YogaLayoutableShadowNode(
     ShadowNodeFragment const &fragment,
     ShadowNodeFamily::Shared const &family,
@@ -80,7 +74,7 @@ YogaLayoutableShadowNode::YogaLayoutableShadowNode(
       yogaNode_(&initializeYogaConfig(yogaConfig_)) {
   yogaNode_.setContext(this);
 
-  // Newly created node must be `dirty` just because it is new.
+  // Newly created node must be `dirty` just becasue it is new.
   // This is not a default for `YGNode`.
   yogaNode_.setDirty(true);
 
@@ -116,12 +110,6 @@ YogaLayoutableShadowNode::YogaLayoutableShadowNode(
               .yogaNode_.isDirty() == yogaNode_.isDirty() &&
       "Yoga node must inherit dirty flag.");
 
-  for (auto &child : getChildren()) {
-    if (auto layoutableChild = traitCast<YogaLayoutableShadowNode>(child)) {
-      yogaLayoutableChildren_.push_back(layoutableChild);
-    }
-  }
-
   yogaNode_.setContext(this);
   yogaNode_.setOwner(nullptr);
   updateYogaChildrenOwnersIfNeeded();
@@ -166,17 +154,17 @@ void YogaLayoutableShadowNode::enableMeasurement() {
       YogaLayoutableShadowNode::yogaNodeMeasureCallbackConnector);
 }
 
-void YogaLayoutableShadowNode::appendYogaChild(
-    YogaLayoutableShadowNode::Shared const &childNode) {
+void YogaLayoutableShadowNode::appendYogaChild(ShadowNode const &childNode) {
   // The caller must check this before calling this method.
   react_native_assert(
       !getTraits().check(ShadowNodeTraits::Trait::LeafYogaNode));
 
   ensureYogaChildrenLookFine();
 
-  yogaLayoutableChildren_.push_back(childNode);
+  auto &layoutableChildNode =
+      traitCast<YogaLayoutableShadowNode const &>(childNode);
   yogaNode_.insertChild(
-      &childNode->yogaNode_,
+      &layoutableChildNode.yogaNode_,
       static_cast<uint32_t>(yogaNode_.getChildren().size()));
 
   ensureYogaChildrenLookFine();
@@ -190,21 +178,47 @@ void YogaLayoutableShadowNode::adoptYogaChild(size_t index) {
   react_native_assert(
       !getTraits().check(ShadowNodeTraits::Trait::LeafYogaNode));
 
-  auto &childNode =
-      traitCast<YogaLayoutableShadowNode const &>(*getChildren().at(index));
+  auto &children = getChildren();
+
+  // Overflow checks.
+  react_native_assert(children.size() > index);
+  react_native_assert(children.size() >= yogaNode_.getChildren().size());
+
+  auto &childNode = *children.at(index);
+
+  auto &layoutableChildNode =
+      traitCast<YogaLayoutableShadowNode const &>(childNode);
 
-  if (childNode.yogaNode_.getOwner() == nullptr) {
+  // Note, the following (commented out) assert is conceptually valid but still
+  // might produce false-positive signals because of the ABA problem (different
+  // objects with non-interleaving life-times being allocated on the same
+  // address). react_native_assert(layoutableChildNode.yogaNode_.getOwner() !=
+  // &yogaNode_);
+
+  if (layoutableChildNode.yogaNode_.getOwner() == nullptr) {
     // The child node is not owned.
-    childNode.yogaNode_.setOwner(&yogaNode_);
+    layoutableChildNode.yogaNode_.setOwner(&yogaNode_);
     // At this point the child yoga node must be already inserted by the caller.
     // react_native_assert(layoutableChildNode.yogaNode_.isDirty());
   } else {
     // The child is owned by some other node, we need to clone that.
-    // TODO: At this point, React has wrong reference to the node. (T138668036)
     auto clonedChildNode = childNode.clone({});
+    auto &layoutableClonedChildNode =
+        traitCast<YogaLayoutableShadowNode const &>(*clonedChildNode);
+
+    // The owner must be nullptr for a newly cloned node.
+    react_native_assert(
+        layoutableClonedChildNode.yogaNode_.getOwner() == nullptr);
+
+    // Establishing ownership.
+    layoutableClonedChildNode.yogaNode_.setOwner(&yogaNode_);
 
     // Replace the child node with a newly cloned one in the children list.
     replaceChild(childNode, clonedChildNode, static_cast<int>(index));
+
+    // Replace the Yoga node inside the Yoga node children list.
+    yogaNode_.replaceChild(
+        &layoutableClonedChildNode.yogaNode_, static_cast<int>(index));
   }
 
   ensureYogaChildrenLookFine();
@@ -215,7 +229,7 @@ void YogaLayoutableShadowNode::appendChild(
   ensureUnsealed();
   ensureConsistency();
 
-  // Calling the base class (`ShadowNode`) method.
+  // Calling the base class (`ShadowNode`) mehtod.
   LayoutableShadowNode::appendChild(childNode);
 
   if (getTraits().check(ShadowNodeTraits::Trait::LeafYogaNode)) {
@@ -223,79 +237,33 @@ void YogaLayoutableShadowNode::appendChild(
     return;
   }
 
-  if (auto yogaLayoutableChild =
-          traitCast<YogaLayoutableShadowNode>(childNode)) {
-    // Here we don't have information about the previous structure of the node
-    // (if it that existed before), so we don't have anything to compare the
-    // Yoga node with (like a previous version of this node). Therefore we must
-    // dirty the node.
-    yogaNode_.setDirty(true);
+  // Here we don't have information about the previous structure of the node (if
+  // it that existed before), so we don't have anything to compare the Yoga node
+  // with (like a previous version of this node). Therefore we must dirty the
+  // node.
+  yogaNode_.setDirty(true);
 
+  // All children of a non-leaf `YogaLayoutableShadowNode` must be a
+  // `YogaLayoutableShadowNode`s to be appended. This happens when invalid
+  // string/numeric child is passed which is not YogaLayoutableShadowNode
+  // (e.g. RCTRawText). This used to throw an error, but we are ignoring it
+  // because we want core library components to be fault-tolerant and degrade
+  // gracefully. A soft error will be emitted from JavaScript.
+  if (traitCast<YogaLayoutableShadowNode const *>(childNode.get()) != nullptr) {
     // Appending the Yoga node.
-    appendYogaChild(yogaLayoutableChild);
+    appendYogaChild(*childNode);
 
     ensureYogaChildrenLookFine();
-    ensureYogaChildrenAlignment();
+    ensureYogaChildrenAlighment();
 
     // Adopting the Yoga node.
     adoptYogaChild(getChildren().size() - 1);
 
     ensureConsistency();
-  }
-}
-
-void YogaLayoutableShadowNode::replaceChild(
-    ShadowNode const &oldChild,
-    ShadowNode::Shared const &newChild,
-    size_t suggestedIndex) {
-  LayoutableShadowNode::replaceChild(oldChild, newChild, suggestedIndex);
-
-  ensureUnsealed();
-  ensureYogaChildrenLookFine();
-
-  auto layoutableOldChild =
-      traitCast<YogaLayoutableShadowNode const *>(&oldChild);
-  auto layoutableNewChild = traitCast<YogaLayoutableShadowNode>(newChild);
-
-  if (layoutableOldChild == nullptr && layoutableNewChild == nullptr) {
-    // No need to mutate yogaLayoutableChildren_
-    return;
-  }
-
-  bool suggestedIndexAccurate = suggestedIndex >= 0 &&
-      suggestedIndex < yogaLayoutableChildren_.size() &&
-      yogaLayoutableChildren_[suggestedIndex].get() == layoutableOldChild;
-
-  auto oldChildIter = suggestedIndexAccurate
-      ? yogaLayoutableChildren_.begin() + suggestedIndex
-      : std::find_if(
-            yogaLayoutableChildren_.begin(),
-            yogaLayoutableChildren_.end(),
-            [&](YogaLayoutableShadowNode::Shared const &layoutableChild) {
-              return layoutableChild.get() == layoutableOldChild;
-            });
-  auto oldChildIndex =
-      static_cast<int32_t>(oldChildIter - yogaLayoutableChildren_.begin());
-
-  if (oldChildIter == yogaLayoutableChildren_.end()) {
-    // oldChild does not exist as part of our node
-    return;
-  }
-
-  if (layoutableNewChild) {
-    // Both children are layoutable, replace the old one with the new one
-    react_native_assert(layoutableNewChild->yogaNode_.getOwner() == nullptr);
-    layoutableNewChild->yogaNode_.setOwner(&yogaNode_);
-    *oldChildIter = layoutableNewChild;
-    yogaNode_.replaceChild(&layoutableNewChild->yogaNode_, oldChildIndex);
   } else {
-    // Layoutable child replaced with non layoutable child. Remove the previous
-    // child from the layoutable children list.
-    yogaLayoutableChildren_.erase(oldChildIter);
-    yogaNode_.removeChild(oldChildIndex);
+    react_native_log_error(
+        "Text strings must be rendered within a <Text> component.");
   }
-
-  ensureYogaChildrenLookFine();
 }
 
 bool YogaLayoutableShadowNode::doesOwn(
@@ -323,28 +291,23 @@ void YogaLayoutableShadowNode::updateYogaChildren() {
 
   auto oldYogaChildren = isClean ? yogaNode_.getChildren() : YGVector{};
   yogaNode_.setChildren({});
-  yogaLayoutableChildren_.clear();
 
   for (size_t i = 0; i < getChildren().size(); i++) {
-    if (auto yogaLayoutableChild =
-            traitCast<YogaLayoutableShadowNode>(getChildren()[i])) {
-      appendYogaChild(yogaLayoutableChild);
-      adoptYogaChild(i);
-
-      if (isClean) {
-        auto yogaChildIndex = yogaLayoutableChildren_.size() - 1;
-        auto &oldYogaChildNode = *oldYogaChildren.at(yogaChildIndex);
-        auto &newYogaChildNode =
-            yogaLayoutableChildren_.at(yogaChildIndex)->yogaNode_;
-
-        isClean = isClean && !newYogaChildNode.isDirty() &&
-            (newYogaChildNode.getStyle() == oldYogaChildNode.getStyle());
-      }
+    appendYogaChild(*getChildren().at(i));
+    adoptYogaChild(i);
+
+    if (isClean) {
+      auto &oldYogaChildNode = *oldYogaChildren[i];
+      auto &newYogaChildNode =
+          traitCast<YogaLayoutableShadowNode const &>(*getChildren().at(i))
+              .yogaNode_;
+
+      isClean = isClean && !newYogaChildNode.isDirty() &&
+          (newYogaChildNode.getStyle() == oldYogaChildNode.getStyle());
     }
   }
 
-  react_native_assert(
-      yogaLayoutableChildren_.size() == yogaNode_.getChildren().size());
+  react_native_assert(getChildren().size() == yogaNode_.getChildren().size());
 
   yogaNode_.setDirty(!isClean);
 }
@@ -353,62 +316,13 @@ void YogaLayoutableShadowNode::updateYogaProps() {
   ensureUnsealed();
 
   auto props = static_cast<YogaStylableProps const &>(*props_);
-  auto styleResult = applyAliasedProps(props.yogaStyle, props);
 
   // Resetting `dirty` flag only if `yogaStyle` portion of `Props` was changed.
-  if (!yogaNode_.isDirty() && (styleResult != yogaNode_.getStyle())) {
+  if (!yogaNode_.isDirty() && (props.yogaStyle != yogaNode_.getStyle())) {
     yogaNode_.setDirty(true);
   }
 
-  yogaNode_.setStyle(styleResult);
-}
-
-/*static*/ YGStyle YogaLayoutableShadowNode::applyAliasedProps(
-    const YGStyle &baseStyle,
-    const YogaStylableProps &props) {
-  YGStyle result{baseStyle};
-
-  // Aliases with precedence
-  if (!props.marginInline.isUndefined()) {
-    result.margin()[YGEdgeHorizontal] = props.marginInline;
-  }
-  if (!props.marginInlineStart.isUndefined()) {
-    result.margin()[YGEdgeStart] = props.marginInlineStart;
-  }
-  if (!props.marginInlineEnd.isUndefined()) {
-    result.margin()[YGEdgeEnd] = props.marginInlineEnd;
-  }
-  if (!props.marginBlock.isUndefined()) {
-    result.margin()[YGEdgeVertical] = props.marginBlock;
-  }
-  if (!props.paddingInline.isUndefined()) {
-    result.padding()[YGEdgeHorizontal] = props.paddingInline;
-  }
-  if (!props.paddingInlineStart.isUndefined()) {
-    result.padding()[YGEdgeStart] = props.paddingInlineStart;
-  }
-  if (!props.paddingInlineEnd.isUndefined()) {
-    result.padding()[YGEdgeEnd] = props.paddingInlineEnd;
-  }
-  if (!props.paddingBlock.isUndefined()) {
-    result.padding()[YGEdgeVertical] = props.paddingBlock;
-  }
-
-  // Aliases without precedence
-  if (CompactValue(result.margin()[YGEdgeTop]).isUndefined()) {
-    result.margin()[YGEdgeTop] = props.marginBlockStart;
-  }
-  if (CompactValue(result.margin()[YGEdgeBottom]).isUndefined()) {
-    result.margin()[YGEdgeBottom] = props.marginBlockEnd;
-  }
-  if (CompactValue(result.padding()[YGEdgeTop]).isUndefined()) {
-    result.padding()[YGEdgeTop] = props.paddingBlockStart;
-  }
-  if (CompactValue(result.padding()[YGEdgeBottom]).isUndefined()) {
-    result.padding()[YGEdgeBottom] = props.paddingBlockEnd;
-  }
-
-  return result;
+  yogaNode_.setStyle(props.yogaStyle);
 }
 
 void YogaLayoutableShadowNode::setSize(Size size) const {
@@ -484,7 +398,7 @@ void YogaLayoutableShadowNode::layoutTree(
   react_native_assert(minimumSize.height >= 0);
   react_native_assert(maximumSize.width >= 0);
   react_native_assert(maximumSize.height >= 0);
-  // Minimum size cannot be infinity.
+  // Mimimum size cannot be infinity.
   react_native_assert(!std::isinf(minimumSize.width));
   react_native_assert(!std::isinf(minimumSize.height));
 
@@ -565,7 +479,8 @@ void YogaLayoutableShadowNode::layout(LayoutContext layoutContext) {
 
   auto contentFrame = Rect{};
   for (auto childYogaNode : yogaNode_.getChildren()) {
-    auto &childNode = shadowNodeFromContext(childYogaNode);
+    auto &childNode =
+        *static_cast<YogaLayoutableShadowNode *>(childYogaNode->getContext());
 
     // Verifying that the Yoga node belongs to the ShadowNode.
     react_native_assert(&childNode.yogaNode_ == childYogaNode);
@@ -604,19 +519,12 @@ void YogaLayoutableShadowNode::layout(LayoutContext layoutContext) {
 
     auto layoutMetricsWithOverflowInset = childNode.getLayoutMetrics();
     if (layoutMetricsWithOverflowInset.displayType != DisplayType::None) {
-      auto viewChildNode = traitCast<ViewShadowNode const *>(&childNode);
-      auto hitSlop = viewChildNode != nullptr
-          ? viewChildNode->getConcreteProps().hitSlop
-          : EdgeInsets{};
-
       // The contentFrame should always union with existing child node layout +
       // overflowInset. The transform may in a deferred animation and not
       // applied yet.
       contentFrame.unionInPlace(insetBy(
           layoutMetricsWithOverflowInset.frame,
           layoutMetricsWithOverflowInset.overflowInset));
-      contentFrame.unionInPlace(
-          outsetBy(layoutMetricsWithOverflowInset.frame, hitSlop));
 
       auto childTransform = childNode.getTransform();
       if (childTransform != Transform::Identity()) {
@@ -626,8 +534,6 @@ void YogaLayoutableShadowNode::layout(LayoutContext layoutContext) {
         contentFrame.unionInPlace(insetBy(
             layoutMetricsWithOverflowInset.frame * childTransform,
             layoutMetricsWithOverflowInset.overflowInset * childTransform));
-        contentFrame.unionInPlace(outsetBy(
-            layoutMetricsWithOverflowInset.frame * childTransform, hitSlop));
       }
     }
   }
@@ -658,15 +564,17 @@ YGNode *YogaLayoutableShadowNode::yogaNodeCloneCallbackConnector(
 
   // At this point it is guaranteed that all shadow nodes associated with yoga
   // nodes are `YogaLayoutableShadowNode` subclasses.
-  auto &parentNode = shadowNodeFromContext(parentYogaNode);
-  auto &oldNode = shadowNodeFromContext(oldYogaNode);
+  auto parentNode =
+      static_cast<YogaLayoutableShadowNode *>(parentYogaNode->getContext());
+  auto oldNode =
+      static_cast<YogaLayoutableShadowNode *>(oldYogaNode->getContext());
 
-  auto clonedNode = oldNode.clone(
+  auto clonedNode = oldNode->clone(
       {ShadowNodeFragment::propsPlaceholder(),
        ShadowNodeFragment::childrenPlaceholder(),
-       oldNode.getState()});
-  parentNode.replaceChild(oldNode, clonedNode, childIndex);
-  return &traitCast<YogaLayoutableShadowNode &>(*clonedNode).yogaNode_;
+       oldNode->getState()});
+  parentNode->replaceChild(*oldNode, clonedNode, childIndex);
+  return &static_cast<YogaLayoutableShadowNode &>(*clonedNode).yogaNode_;
 }
 
 YGSize YogaLayoutableShadowNode::yogaNodeMeasureCallbackConnector(
@@ -678,7 +586,8 @@ YGSize YogaLayoutableShadowNode::yogaNodeMeasureCallbackConnector(
   SystraceSection s(
       "YogaLayoutableShadowNode::yogaNodeMeasureCallbackConnector");
 
-  auto &shadowNode = shadowNodeFromContext(yogaNode);
+  auto shadowNodeRawPtr =
+      static_cast<YogaLayoutableShadowNode *>(yogaNode->getContext());
 
   auto minimumSize = Size{0, 0};
   auto maximumSize = Size{
@@ -709,19 +618,13 @@ YGSize YogaLayoutableShadowNode::yogaNodeMeasureCallbackConnector(
       break;
   }
 
-  auto size = shadowNode.measureContent(
+  auto size = shadowNodeRawPtr->measureContent(
       threadLocalLayoutContext, {minimumSize, maximumSize});
 
   return YGSize{
       yogaFloatFromFloat(size.width), yogaFloatFromFloat(size.height)};
 }
 
-YogaLayoutableShadowNode &YogaLayoutableShadowNode::shadowNodeFromContext(
-    YGNode *yogaNode) {
-  return traitCast<YogaLayoutableShadowNode &>(
-      *static_cast<ShadowNode *>(yogaNode->getContext()));
-}
-
 YGConfig &YogaLayoutableShadowNode::initializeYogaConfig(YGConfig &config) {
   config.setCloneNodeCallback(
       YogaLayoutableShadowNode::yogaNodeCloneCallbackConnector);
@@ -739,9 +642,12 @@ void YogaLayoutableShadowNode::swapLeftAndRightInTree(
   swapLeftAndRightInYogaStyleProps(shadowNode);
   swapLeftAndRightInViewProps(shadowNode);
 
-  for (auto &child : shadowNode.yogaLayoutableChildren_) {
-    if (!child->doesOwn(shadowNode)) {
-      swapLeftAndRightInTree(*child);
+  for (auto &child : shadowNode.getChildren()) {
+    auto const yogaLayoutableChild =
+        traitCast<YogaLayoutableShadowNode const *>(child.get());
+    if ((yogaLayoutableChild != nullptr) &&
+        !yogaLayoutableChild->doesOwn(shadowNode)) {
+      swapLeftAndRightInTree(*yogaLayoutableChild);
     }
   }
 }
@@ -795,7 +701,6 @@ void YogaLayoutableShadowNode::swapLeftAndRightInViewProps(
   auto &props = const_cast<ViewProps &>(typedCasting);
 
   // Swap border node values, borderRadii, borderColors and borderStyles.
-
   if (props.borderRadii.topLeft.has_value()) {
     props.borderRadii.topStart = props.borderRadii.topLeft;
     props.borderRadii.topLeft.reset();
@@ -853,7 +758,7 @@ void YogaLayoutableShadowNode::swapLeftAndRightInViewProps(
 
 void YogaLayoutableShadowNode::ensureConsistency() const {
   ensureYogaChildrenLookFine();
-  ensureYogaChildrenAlignment();
+  ensureYogaChildrenAlighment();
   ensureYogaChildrenOwnersConsistency();
 }
 
@@ -890,7 +795,7 @@ void YogaLayoutableShadowNode::ensureYogaChildrenLookFine() const {
 #endif
 }
 
-void YogaLayoutableShadowNode::ensureYogaChildrenAlignment() const {
+void YogaLayoutableShadowNode::ensureYogaChildrenAlighment() const {
 #ifdef REACT_NATIVE_DEBUG
   // If the node is not a leaf node, checking that:
   // - All children are `YogaLayoutableShadowNode` subclasses.
@@ -898,7 +803,7 @@ void YogaLayoutableShadowNode::ensureYogaChildrenAlignment() const {
   //   this node.
 
   auto &yogaChildren = yogaNode_.getChildren();
-  auto &children = yogaLayoutableChildren_;
+  auto &children = getChildren();
 
   if (getTraits().check(ShadowNodeTraits::Trait::LeafYogaNode)) {
     react_native_assert(yogaChildren.empty());
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.h
index 7dcd333..fe95d35 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaLayoutableShadowNode.h
@@ -18,20 +18,18 @@
 #include <react/renderer/core/Sealable.h>
 #include <react/renderer/core/ShadowNode.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
 
 class YogaLayoutableShadowNode : public LayoutableShadowNode {
-  using CompactValue = facebook::yoga::detail::CompactValue;
-
  public:
-  using Shared = std::shared_ptr<YogaLayoutableShadowNode const>;
-  using ListOfShared =
-      butter::small_vector<Shared, kShadowNodeChildrenSmallVectorSize>;
+  using UnsharedList = butter::small_vector<
+      YogaLayoutableShadowNode *,
+      kShadowNodeChildrenSmallVectorSize>;
 
   static ShadowNodeTraits BaseTraits();
-  static ShadowNodeTraits::Trait IdentifierTrait();
 
 #pragma mark - Constructors
 
@@ -52,11 +50,7 @@ class YogaLayoutableShadowNode : public LayoutableShadowNode {
    */
   void enableMeasurement();
 
-  void appendChild(ShadowNode::Shared const &child) override;
-  void replaceChild(
-      ShadowNode const &oldChild,
-      ShadowNode::Shared const &newChild,
-      size_t suggestedIndex = -1) override;
+  void appendChild(ShadowNode::Shared const &child);
 
   void updateYogaChildren();
 
@@ -125,7 +119,7 @@ class YogaLayoutableShadowNode : public LayoutableShadowNode {
    * The method does *not* do anything besides that (no cloning or `owner` field
    * adjustment).
    */
-  void appendYogaChild(YogaLayoutableShadowNode::Shared const &childNode);
+  void appendYogaChild(ShadowNode const &childNode);
 
   /*
    * Makes the child node with a given `index` (and Yoga node associated with) a
@@ -144,7 +138,6 @@ class YogaLayoutableShadowNode : public LayoutableShadowNode {
       YGMeasureMode widthMode,
       float height,
       YGMeasureMode heightMode);
-  static YogaLayoutableShadowNode &shadowNodeFromContext(YGNode *yogaNode);
 
 #pragma mark - RTL Legacy Autoflip
 
@@ -180,27 +173,37 @@ class YogaLayoutableShadowNode : public LayoutableShadowNode {
   static void swapLeftAndRightInYogaStyleProps(
       YogaLayoutableShadowNode const &shadowNode);
 
-  /*
-   * Combine a base YGStyle with aliased properties which should be flattened
-   * into it. E.g. reconciling "marginInlineStart" and "marginStart".
-   */
-  static YGStyle applyAliasedProps(
-      const YGStyle &baseStyle,
-      const YogaStylableProps &props);
-
 #pragma mark - Consistency Ensuring Helpers
 
   void ensureConsistency() const;
-  void ensureYogaChildrenAlignment() const;
+  void ensureYogaChildrenAlighment() const;
   void ensureYogaChildrenOwnersConsistency() const;
   void ensureYogaChildrenLookFine() const;
-
-#pragma mark - Private member variables
-  /*
-   * List of children which derive from YogaLayoutableShadowNode
-   */
-  ListOfShared yogaLayoutableChildren_;
 };
 
+template <>
+inline YogaLayoutableShadowNode const &
+traitCast<YogaLayoutableShadowNode const &>(ShadowNode const &shadowNode) {
+  bool castable =
+      shadowNode.getTraits().check(ShadowNodeTraits::Trait::YogaLayoutableKind);
+  react_native_assert(castable);
+  (void)castable;
+  return static_cast<YogaLayoutableShadowNode const &>(shadowNode);
+}
+
+template <>
+inline YogaLayoutableShadowNode const *
+traitCast<YogaLayoutableShadowNode const *>(ShadowNode const *shadowNode) {
+  if (!shadowNode) {
+    return nullptr;
+  }
+  bool castable = shadowNode->getTraits().check(
+      ShadowNodeTraits::Trait::YogaLayoutableKind);
+  if (!castable) {
+    return nullptr;
+  }
+  return static_cast<YogaLayoutableShadowNode const *>(shadowNode);
+}
+
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.cpp
index 2a18709..f03dc21 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.cpp
@@ -28,11 +28,7 @@ YogaStylableProps::YogaStylableProps(
       yogaStyle(
           CoreFeatures::enablePropIteratorSetter
               ? sourceProps.yogaStyle
-              : convertRawProp(context, rawProps, sourceProps.yogaStyle)) {
-  if (!CoreFeatures::enablePropIteratorSetter) {
-    convertRawPropAliases(context, sourceProps, rawProps);
-  }
-};
+              : convertRawProp(context, rawProps, sourceProps.yogaStyle)){};
 
 template <typename T>
 static inline T const getFieldValue(
@@ -48,10 +44,10 @@ static inline T const getFieldValue(
   return defaultValue;
 }
 
-#define REBUILD_FIELD_SWITCH_CASE2(field, fieldName)                       \
-  case CONSTEXPR_RAW_PROPS_KEY_HASH(fieldName): {                          \
-    yogaStyle.field() = getFieldValue(context, value, ygDefaults.field()); \
-    return;                                                                \
+#define REBUILD_FIELD_SWITCH_CASE2(field, fieldName)                     \
+  case CONSTEXPR_RAW_PROPS_KEY_HASH(fieldName): {                        \
+    yogaStyle.field() = getFieldValue(context, value, defaults.field()); \
+    return;                                                              \
   }
 
 // @lint-ignore CLANGTIDY cppcoreguidelines-macro-usage
@@ -61,7 +57,7 @@ static inline T const getFieldValue(
 #define REBUILD_YG_FIELD_SWITCH_CASE_INDEXED(field, index, fieldName) \
   case CONSTEXPR_RAW_PROPS_KEY_HASH(fieldName): {                     \
     yogaStyle.field()[index] =                                        \
-        getFieldValue(context, value, ygDefaults.field()[index]);     \
+        getFieldValue(context, value, defaults.field()[index]);       \
     return;                                                           \
   }
 
@@ -104,7 +100,7 @@ void YogaStylableProps::setProp(
     RawPropsPropNameHash hash,
     const char *propName,
     RawValue const &value) {
-  static const auto ygDefaults = YGStyle{};
+  static const auto defaults = YGStyle{};
 
   Props::setProp(context, hash, propName, value);
 
@@ -132,22 +128,6 @@ void YogaStylableProps::setProp(
     REBUILD_FIELD_YG_EDGES(margin, "margin", "");
     REBUILD_FIELD_YG_EDGES(padding, "padding", "");
     REBUILD_FIELD_YG_EDGES(border, "border", "Width");
-
-    static const auto defaults = YogaStylableProps{};
-
-    // Aliases
-    RAW_SET_PROP_SWITCH_CASE(marginInline, "marginInline");
-    RAW_SET_PROP_SWITCH_CASE(marginInlineStart, "marginInlineStart");
-    RAW_SET_PROP_SWITCH_CASE(marginInlineEnd, "marginInlineEnd");
-    RAW_SET_PROP_SWITCH_CASE(marginBlock, "marginBlock");
-    RAW_SET_PROP_SWITCH_CASE(marginBlockStart, "marginBlockStart");
-    RAW_SET_PROP_SWITCH_CASE(marginBlockEnd, "marginBlockEnd");
-    RAW_SET_PROP_SWITCH_CASE(paddingInline, "paddingInline");
-    RAW_SET_PROP_SWITCH_CASE(paddingInlineStart, "paddingInlineStart");
-    RAW_SET_PROP_SWITCH_CASE(paddingInlineEnd, "paddingInlineEnd");
-    RAW_SET_PROP_SWITCH_CASE(paddingBlock, "paddingBlock");
-    RAW_SET_PROP_SWITCH_CASE(paddingBlockStart, "paddingBlockStart");
-    RAW_SET_PROP_SWITCH_CASE(paddingBlockEnd, "paddingBlockEnd");
   }
 }
 
@@ -231,83 +211,4 @@ SharedDebugStringConvertibleList YogaStylableProps::getDebugProps() const {
 }
 #endif
 
-void YogaStylableProps::convertRawPropAliases(
-    const PropsParserContext &context,
-    YogaStylableProps const &sourceProps,
-    RawProps const &rawProps) {
-  marginInline = convertRawProp(
-      context,
-      rawProps,
-      "marginInline",
-      sourceProps.marginInline,
-      CompactValue::ofUndefined());
-  marginInlineStart = convertRawProp(
-      context,
-      rawProps,
-      "marginInlineStart",
-      sourceProps.marginInlineStart,
-      CompactValue::ofUndefined());
-  marginInlineEnd = convertRawProp(
-      context,
-      rawProps,
-      "marginInlineEnd",
-      sourceProps.marginInlineEnd,
-      CompactValue::ofUndefined());
-  marginBlock = convertRawProp(
-      context,
-      rawProps,
-      "marginBlock",
-      sourceProps.marginBlock,
-      CompactValue::ofUndefined());
-  marginBlockStart = convertRawProp(
-      context,
-      rawProps,
-      "marginBlockStart",
-      sourceProps.marginBlockStart,
-      CompactValue::ofUndefined());
-  marginBlockEnd = convertRawProp(
-      context,
-      rawProps,
-      "marginBlockEnd",
-      sourceProps.marginBlockEnd,
-      CompactValue::ofUndefined());
-
-  paddingInline = convertRawProp(
-      context,
-      rawProps,
-      "paddingInline",
-      sourceProps.paddingInline,
-      CompactValue::ofUndefined());
-  paddingInlineStart = convertRawProp(
-      context,
-      rawProps,
-      "paddingInlineStart",
-      sourceProps.paddingInlineStart,
-      CompactValue::ofUndefined());
-  paddingInlineEnd = convertRawProp(
-      context,
-      rawProps,
-      "paddingInlineEnd",
-      sourceProps.paddingInlineEnd,
-      CompactValue::ofUndefined());
-  paddingBlock = convertRawProp(
-      context,
-      rawProps,
-      "paddingBlock",
-      sourceProps.paddingBlock,
-      CompactValue::ofUndefined());
-  paddingBlockStart = convertRawProp(
-      context,
-      rawProps,
-      "paddingBlockStart",
-      sourceProps.paddingBlockStart,
-      CompactValue::ofUndefined());
-  paddingBlockEnd = convertRawProp(
-      context,
-      rawProps,
-      "paddingBlockEnd",
-      sourceProps.paddingBlockEnd,
-      CompactValue::ofUndefined());
-}
-
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.h
index a58f9c5..b19a90d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/YogaStylableProps.h
@@ -17,8 +17,6 @@ namespace facebook {
 namespace react {
 
 class YogaStylableProps : public Props {
-  using CompactValue = facebook::yoga::detail::CompactValue;
-
  public:
   YogaStylableProps() = default;
   YogaStylableProps(
@@ -39,28 +37,8 @@ class YogaStylableProps : public Props {
 #endif
 
 #pragma mark - Props
-  YGStyle yogaStyle{};
-
-  // Duplicates of existing properties with different names, taking
-  // precedence. E.g. "marginBlock" instead of "marginVertical"
-  CompactValue marginInline;
-  CompactValue marginInlineStart;
-  CompactValue marginInlineEnd;
-  CompactValue marginBlock;
-
-  CompactValue paddingInline;
-  CompactValue paddingInlineStart;
-  CompactValue paddingInlineEnd;
-  CompactValue paddingBlock;
-
-  // BlockEnd/BlockStart map to top/bottom (no writing mode), but we preserve
-  // Yoga's precedence and prefer specific edges (e.g. top) to ones which are
-  // flow relative (e.g. blockStart).
-  CompactValue marginBlockStart;
-  CompactValue marginBlockEnd;
 
-  CompactValue paddingBlockStart;
-  CompactValue paddingBlockEnd;
+  YGStyle yogaStyle{};
 
 #if RN_DEBUG_STRING_CONVERTIBLE
 
@@ -69,12 +47,6 @@ class YogaStylableProps : public Props {
   SharedDebugStringConvertibleList getDebugProps() const override;
 
 #endif
-
- private:
-  void convertRawPropAliases(
-      const PropsParserContext &context,
-      YogaStylableProps const &sourceProps,
-      RawProps const &rawProps);
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/accessibilityPropsConversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/accessibilityPropsConversions.h
index b6b16a7..6659e9d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/accessibilityPropsConversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/accessibilityPropsConversions.h
@@ -10,7 +10,6 @@
 #include <folly/dynamic.h>
 #include <glog/logging.h>
 #include <react/debug/react_native_assert.h>
-#include <react/debug/react_native_expect.h>
 #include <react/renderer/components/view/AccessibilityPrimitives.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/core/propsConversions.h>
@@ -117,7 +116,7 @@ inline void fromRawValue(
 
   result = {};
 
-  react_native_expect(value.hasType<std::vector<std::string>>());
+  react_native_assert(value.hasType<std::vector<std::string>>());
   if (value.hasType<std::vector<std::string>>()) {
     auto items = (std::vector<std::string>)value;
     for (auto &item : items) {
@@ -189,8 +188,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     ImportantForAccessibility &result) {
-  result = ImportantForAccessibility::Auto;
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "auto") {
@@ -202,11 +200,11 @@ inline void fromRawValue(
     } else if (string == "no-hide-descendants") {
       result = ImportantForAccessibility::NoHideDescendants;
     } else {
-      LOG(ERROR) << "Unsupported ImportantForAccessibility value: " << string;
-      react_native_expect(false);
+      LOG(ERROR) << "Unsupported ImportantForAccessiblity value: " << string;
+      react_native_assert(false);
     }
   } else {
-    LOG(ERROR) << "Unsupported ImportantForAccessibility type";
+    LOG(ERROR) << "Unsupported ImportantForAccessiblity type";
   }
 }
 
@@ -280,8 +278,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     AccessibilityLiveRegion &result) {
-  result = AccessibilityLiveRegion::None;
-  react_native_expect(value.hasType<std::string>());
+  react_native_assert(value.hasType<std::string>());
   if (value.hasType<std::string>()) {
     auto string = (std::string)value;
     if (string == "none") {
@@ -292,7 +289,7 @@ inline void fromRawValue(
       result = AccessibilityLiveRegion::Assertive;
     } else {
       LOG(ERROR) << "Unsupported AccessibilityLiveRegion value: " << string;
-      react_native_expect(false);
+      react_native_assert(false);
     }
   } else {
     LOG(ERROR) << "Unsupported AccessibilityLiveRegion type";
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/conversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/conversions.h
index ad087df..8a8a302 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/conversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/conversions.h
@@ -11,11 +11,11 @@
 #include <folly/Conv.h>
 #include <folly/dynamic.h>
 #include <glog/logging.h>
-#include <react/config/ReactNativeConfig.h>
-#include <react/debug/react_native_expect.h>
+#include <react/debug/react_native_assert.h>
 #include <react/renderer/components/view/primitives.h>
 #include <react/renderer/core/LayoutMetrics.h>
 #include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/graphics/Geometry.h>
 #include <react/renderer/graphics/Transform.h>
 #include <stdlib.h>
 #include <yoga/YGEnums.h>
@@ -169,11 +169,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGDirection &result) {
-  result = YGDirectionInherit;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "inherit") {
     result = YGDirectionInherit;
@@ -187,19 +183,15 @@ inline void fromRawValue(
     result = YGDirectionRTL;
     return;
   }
-  LOG(ERROR) << "Could not parse YGDirection:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGDirection:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGFlexDirection &result) {
-  result = YGFlexDirectionColumn;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "row") {
     result = YGFlexDirectionRow;
@@ -217,19 +209,15 @@ inline void fromRawValue(
     result = YGFlexDirectionRowReverse;
     return;
   }
-  LOG(ERROR) << "Could not parse YGFlexDirection:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGFlexDirection:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGJustify &result) {
-  result = YGJustifyFlexStart;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "flex-start") {
     result = YGJustifyFlexStart;
@@ -255,19 +243,15 @@ inline void fromRawValue(
     result = YGJustifySpaceEvenly;
     return;
   }
-  LOG(ERROR) << "Could not parse YGJustify:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGJustify:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGAlign &result) {
-  result = YGAlignStretch;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "auto") {
     result = YGAlignAuto;
@@ -301,19 +285,15 @@ inline void fromRawValue(
     result = YGAlignSpaceAround;
     return;
   }
-  LOG(ERROR) << "Could not parse YGAlign:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGAlign:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGPositionType &result) {
-  result = YGPositionTypeRelative;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "static") {
     result = YGPositionTypeStatic;
@@ -327,19 +307,15 @@ inline void fromRawValue(
     result = YGPositionTypeAbsolute;
     return;
   }
-  LOG(ERROR) << "Could not parse YGPositionType:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGPositionType:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGWrap &result) {
-  result = YGWrapNoWrap;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "nowrap") {
     result = YGWrapNoWrap;
@@ -353,19 +329,15 @@ inline void fromRawValue(
     result = YGWrapWrapReverse;
     return;
   }
-  LOG(ERROR) << "Could not parse YGWrap:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGWrap:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGOverflow &result) {
-  result = YGOverflowVisible;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "visible") {
     result = YGOverflowVisible;
@@ -379,19 +351,15 @@ inline void fromRawValue(
     result = YGOverflowScroll;
     return;
   }
-  LOG(ERROR) << "Could not parse YGOverflow:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGOverflow:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGDisplay &result) {
-  result = YGDisplayFlex;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "flex") {
     result = YGDisplayFlex;
@@ -401,36 +369,28 @@ inline void fromRawValue(
     result = YGDisplayNone;
     return;
   }
-  LOG(ERROR) << "Could not parse YGDisplay:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGDisplay:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     YGStyle::ValueRepr &result) {
-  // For bug compatibility, pass "auto" as YGValueUndefined
-  static bool treatAutoAsUndefined =
-      context.contextContainer
-          .at<std::shared_ptr<ReactNativeConfig const>>("ReactNativeConfig")
-          ->getBool("react_fabric:treat_auto_as_undefined");
-
   if (value.hasType<Float>()) {
     result = yogaStyleValueFromFloat((Float)value);
     return;
   } else if (value.hasType<std::string>()) {
     const auto stringValue = (std::string)value;
     if (stringValue == "auto") {
-      result = treatAutoAsUndefined ? YGValueUndefined : YGValueAuto;
+      result = YGValueUndefined;
       return;
     } else {
       if (stringValue.back() == '%') {
-        auto tryValue = folly::tryTo<float>(
-            std::string_view(stringValue).substr(0, stringValue.length() - 1));
-        if (tryValue.hasValue()) {
-          result = YGValue{tryValue.value(), YGUnitPercent};
-          return;
-        }
+        result = YGValue{
+            folly::to<float>(stringValue.substr(0, stringValue.length() - 1)),
+            YGUnitPercent};
+        return;
       } else {
         auto tryValue = folly::tryTo<float>(stringValue);
         if (tryValue.hasValue()) {
@@ -443,15 +403,6 @@ inline void fromRawValue(
   result = YGValueUndefined;
 }
 
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    YGValue &result) {
-  YGStyle::ValueRepr ygValue{};
-  fromRawValue(context, value, ygValue);
-  result = ygValue;
-}
-
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
@@ -466,20 +417,15 @@ inline void fromRawValue(
       return;
     }
   }
-  LOG(ERROR) << "Could not parse YGFloatOptional";
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse YGFloatOptional";
+  react_native_assert(false);
 }
 
-inline Float toRadians(
-    const RawValue &value,
-    std::optional<Float> defaultValue) {
+inline Float toRadians(const RawValue &value) {
   if (value.hasType<Float>()) {
     return (Float)value;
   }
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>() && defaultValue.has_value()) {
-    return *defaultValue;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   char *suffixStart;
   double num = strtod(
@@ -495,14 +441,10 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     Transform &result) {
+  react_native_assert(value.hasType<std::vector<RawValue>>());
   auto transformMatrix = Transform{};
-  react_native_expect(value.hasType<std::vector<RawValue>>());
-  if (!value.hasType<std::vector<RawValue>>()) {
-    result = transformMatrix;
-    return;
-  }
-
   auto configurations = static_cast<std::vector<RawValue>>(value);
+
   for (const auto &configuration : configurations) {
     if (!configuration.hasType<butter::map<std::string, RawValue>>()) {
       // TODO: The following checks have to be removed after codegen is shipped.
@@ -517,9 +459,9 @@ inline void fromRawValue(
     auto &parameters = pair->second;
 
     if (operation == "matrix") {
-      react_native_expect(parameters.hasType<std::vector<Float>>());
+      react_native_assert(parameters.hasType<std::vector<Float>>());
       auto numbers = (std::vector<Float>)parameters;
-      react_native_expect(numbers.size() == transformMatrix.matrix.size());
+      react_native_assert(numbers.size() == transformMatrix.matrix.size());
       auto i = 0;
       for (auto number : numbers) {
         transformMatrix.matrix[i++] = number;
@@ -530,14 +472,14 @@ inline void fromRawValue(
       transformMatrix =
           transformMatrix * Transform::Perspective((Float)parameters);
     } else if (operation == "rotateX") {
-      transformMatrix = transformMatrix *
-          Transform::Rotate(toRadians(parameters, 0.0f), 0, 0);
+      transformMatrix =
+          transformMatrix * Transform::Rotate(toRadians(parameters), 0, 0);
     } else if (operation == "rotateY") {
-      transformMatrix = transformMatrix *
-          Transform::Rotate(0, toRadians(parameters, 0.0f), 0);
+      transformMatrix =
+          transformMatrix * Transform::Rotate(0, toRadians(parameters), 0);
     } else if (operation == "rotateZ" || operation == "rotate") {
-      transformMatrix = transformMatrix *
-          Transform::Rotate(0, 0, toRadians(parameters, 0.0f));
+      transformMatrix =
+          transformMatrix * Transform::Rotate(0, 0, toRadians(parameters));
     } else if (operation == "scale") {
       auto number = (Float)parameters;
       transformMatrix =
@@ -563,10 +505,10 @@ inline void fromRawValue(
           transformMatrix * Transform::Translate(0, (Float)parameters, 0);
     } else if (operation == "skewX") {
       transformMatrix =
-          transformMatrix * Transform::Skew(toRadians(parameters, 0.0f), 0);
+          transformMatrix * Transform::Skew(toRadians(parameters), 0);
     } else if (operation == "skewY") {
       transformMatrix =
-          transformMatrix * Transform::Skew(0, toRadians(parameters, 0.0f));
+          transformMatrix * Transform::Skew(0, toRadians(parameters));
     }
   }
 
@@ -577,11 +519,7 @@ inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     PointerEventsMode &result) {
-  result = PointerEventsMode::Auto;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "auto") {
     result = PointerEventsMode::Auto;
@@ -599,19 +537,15 @@ inline void fromRawValue(
     result = PointerEventsMode::BoxOnly;
     return;
   }
-  LOG(ERROR) << "Could not parse PointerEventsMode:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse PointerEventsMode:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     BackfaceVisibility &result) {
-  result = BackfaceVisibility::Auto;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "auto") {
     result = BackfaceVisibility::Auto;
@@ -625,19 +559,15 @@ inline void fromRawValue(
     result = BackfaceVisibility::Hidden;
     return;
   }
-  LOG(ERROR) << "Could not parse BackfaceVisibility:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse BackfaceVisibility:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     BorderCurve &result) {
-  result = BorderCurve::Circular;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "circular") {
     result = BorderCurve::Circular;
@@ -647,19 +577,15 @@ inline void fromRawValue(
     result = BorderCurve::Continuous;
     return;
   }
-  LOG(ERROR) << "Could not parse BorderCurve:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse BorderCurve:" << stringValue;
+  react_native_assert(false);
 }
 
 inline void fromRawValue(
     const PropsParserContext &context,
     const RawValue &value,
     BorderStyle &result) {
-  result = BorderStyle::Solid;
-  react_native_expect(value.hasType<std::string>());
-  if (!value.hasType<std::string>()) {
-    return;
-  }
+  react_native_assert(value.hasType<std::string>());
   auto stringValue = (std::string)value;
   if (stringValue == "solid") {
     result = BorderStyle::Solid;
@@ -673,8 +599,8 @@ inline void fromRawValue(
     result = BorderStyle::Dashed;
     return;
   }
-  LOG(ERROR) << "Could not parse BorderStyle:" << stringValue;
-  react_native_expect(false);
+  LOG(FATAL) << "Could not parse BorderStyle:" << stringValue;
+  react_native_assert(false);
 }
 
 inline std::string toString(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/primitives.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/primitives.h
index ec8a276..1ecf441 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/primitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/primitives.h
@@ -8,8 +8,7 @@
 #pragma once
 
 #include <react/renderer/graphics/Color.h>
-#include <react/renderer/graphics/RectangleCorners.h>
-#include <react/renderer/graphics/RectangleEdges.h>
+#include <react/renderer/graphics/Geometry.h>
 
 #include <array>
 #include <bitset>
@@ -19,7 +18,7 @@
 namespace facebook {
 namespace react {
 
-enum class PointerEventsMode : uint8_t { Auto, None, BoxNone, BoxOnly };
+enum class PointerEventsMode { Auto, None, BoxNone, BoxOnly };
 
 struct ViewEvents {
   std::bitset<32> bits{};
@@ -79,11 +78,11 @@ inline static bool operator!=(ViewEvents const &lhs, ViewEvents const &rhs) {
   return lhs.bits != rhs.bits;
 }
 
-enum class BackfaceVisibility : uint8_t { Auto, Visible, Hidden };
+enum class BackfaceVisibility { Auto, Visible, Hidden };
 
-enum class BorderCurve : uint8_t { Circular, Continuous };
+enum class BorderCurve { Circular, Continuous };
 
-enum class BorderStyle : uint8_t { Solid, Dotted, Dashed };
+enum class BorderStyle { Solid, Dotted, Dashed };
 
 template <typename T>
 struct CascadedRectangleEdges {
@@ -99,9 +98,6 @@ struct CascadedRectangleEdges {
   OptionalT horizontal{};
   OptionalT vertical{};
   OptionalT all{};
-  OptionalT block{};
-  OptionalT blockStart{};
-  OptionalT blockEnd{};
 
   Counterpart resolve(bool isRTL, T defaults) const {
     const auto leadingEdge = isRTL ? end : start;
@@ -114,14 +110,10 @@ struct CascadedRectangleEdges {
     return {
         /* .left = */
         left.value_or(leadingEdge.value_or(horizontalOrAllOrDefault)),
-        /* .top = */
-        blockStart.value_or(
-            block.value_or(top.value_or(verticalOrAllOrDefault))),
+        /* .top = */ top.value_or(verticalOrAllOrDefault),
         /* .right = */
         right.value_or(trailingEdge.value_or(horizontalOrAllOrDefault)),
-        /* .bottom = */
-        blockEnd.value_or(
-            block.value_or(bottom.value_or(verticalOrAllOrDefault))),
+        /* .bottom = */ bottom.value_or(verticalOrAllOrDefault),
     };
   }
 
@@ -135,10 +127,7 @@ struct CascadedRectangleEdges {
                this->end,
                this->horizontal,
                this->vertical,
-               this->all,
-               this->block,
-               this->blockStart,
-               this->blockEnd) ==
+               this->all) ==
         std::tie(
                rhs.left,
                rhs.top,
@@ -148,10 +137,7 @@ struct CascadedRectangleEdges {
                rhs.end,
                rhs.horizontal,
                rhs.vertical,
-               rhs.all,
-               rhs.block,
-               rhs.blockStart,
-               rhs.blockEnd);
+               rhs.all);
   }
 
   bool operator!=(const CascadedRectangleEdges<T> &rhs) const {
@@ -173,21 +159,12 @@ struct CascadedRectangleCorners {
   OptionalT bottomStart{};
   OptionalT bottomEnd{};
   OptionalT all{};
-  OptionalT endEnd{};
-  OptionalT endStart{};
-  OptionalT startEnd{};
-  OptionalT startStart{};
 
   Counterpart resolve(bool isRTL, T defaults) const {
-    const auto logicalTopStart = topStart ? topStart : startStart;
-    const auto logicalTopEnd = topEnd ? topEnd : startEnd;
-    const auto logicalBottomStart = bottomStart ? bottomStart : endStart;
-    const auto logicalBottomEnd = bottomEnd ? bottomEnd : endEnd;
-
-    const auto topLeading = isRTL ? logicalTopEnd : logicalTopStart;
-    const auto topTrailing = isRTL ? logicalTopStart : logicalTopEnd;
-    const auto bottomLeading = isRTL ? logicalBottomEnd : logicalBottomStart;
-    const auto bottomTrailing = isRTL ? logicalBottomStart : logicalBottomEnd;
+    const auto topLeading = isRTL ? topEnd : topStart;
+    const auto topTrailing = isRTL ? topStart : topEnd;
+    const auto bottomLeading = isRTL ? bottomEnd : bottomStart;
+    const auto bottomTrailing = isRTL ? bottomStart : bottomEnd;
 
     return {
         /* .topLeft = */ topLeft.value_or(
@@ -211,11 +188,7 @@ struct CascadedRectangleCorners {
                this->topEnd,
                this->bottomStart,
                this->bottomEnd,
-               this->all,
-               this->endEnd,
-               this->endStart,
-               this->startEnd,
-               this->startStart) ==
+               this->all) ==
         std::tie(
                rhs.topLeft,
                rhs.topRight,
@@ -225,11 +198,7 @@ struct CascadedRectangleCorners {
                rhs.topEnd,
                rhs.bottomStart,
                rhs.bottomEnd,
-               rhs.all,
-               rhs.endEnd,
-               rhs.endStart,
-               rhs.startEnd,
-               rhs.startStart);
+               rhs.all);
   }
 
   bool operator!=(const CascadedRectangleCorners<T> &rhs) const {
@@ -279,15 +248,15 @@ struct BorderMetrics {
 #ifdef ANDROID
 
 struct NativeDrawable {
-  enum class Kind : uint8_t {
+  enum class Kind {
     Ripple,
     ThemeAttr,
   };
 
   struct Ripple {
     std::optional<int32_t> color{};
-    std::optional<Float> rippleRadius{};
     bool borderless{false};
+    std::optional<Float> rippleRadius{};
 
     bool operator==(const Ripple &rhs) const {
       return std::tie(this->color, this->borderless, this->rippleRadius) ==
@@ -295,9 +264,9 @@ struct NativeDrawable {
     }
   };
 
+  Kind kind;
   std::string themeAttr;
   Ripple ripple;
-  Kind kind;
 
   bool operator==(const NativeDrawable &rhs) const {
     if (this->kind != rhs.kind)
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/propsConversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/propsConversions.h
index 8f2e30d..3973637 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/propsConversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/propsConversions.h
@@ -401,38 +401,6 @@ static inline CascadedRectangleCorners<T> convertRawProp(
       defaultValue.bottomEnd,
       prefix,
       suffix);
-  result.endEnd = convertRawProp(
-      context,
-      rawProps,
-      "EndEnd",
-      sourceValue.endEnd,
-      defaultValue.endEnd,
-      prefix,
-      suffix);
-  result.endStart = convertRawProp(
-      context,
-      rawProps,
-      "EndStart",
-      sourceValue.endStart,
-      defaultValue.endStart,
-      prefix,
-      suffix);
-  result.startEnd = convertRawProp(
-      context,
-      rawProps,
-      "StartEnd",
-      sourceValue.startEnd,
-      defaultValue.startEnd,
-      prefix,
-      suffix);
-  result.startStart = convertRawProp(
-      context,
-      rawProps,
-      "StartStart",
-      sourceValue.startStart,
-      defaultValue.startStart,
-      prefix,
-      suffix);
 
   result.all = convertRawProp(
       context, rawProps, "", sourceValue.all, defaultValue.all, prefix, suffix);
@@ -515,30 +483,6 @@ static inline CascadedRectangleEdges<T> convertRawProp(
       defaultValue.vertical,
       prefix,
       suffix);
-  result.block = convertRawProp(
-      context,
-      rawProps,
-      "Block",
-      sourceValue.block,
-      defaultValue.block,
-      prefix,
-      suffix);
-  result.blockEnd = convertRawProp(
-      context,
-      rawProps,
-      "BlockEnd",
-      sourceValue.blockEnd,
-      defaultValue.blockEnd,
-      prefix,
-      suffix);
-  result.blockStart = convertRawProp(
-      context,
-      rawProps,
-      "BlockStart",
-      sourceValue.blockStart,
-      defaultValue.blockStart,
-      prefix,
-      suffix);
 
   result.all = convertRawProp(
       context, rawProps, "", sourceValue.all, defaultValue.all, prefix, suffix);
@@ -724,20 +668,19 @@ static inline void fromRawValue(
   auto map = (butter::map<std::string, RawValue>)rawValue;
 
   auto typeIterator = map.find("type");
-  react_native_expect(
+  react_native_assert(
       typeIterator != map.end() && typeIterator->second.hasType<std::string>());
   std::string type = (std::string)typeIterator->second;
 
   if (type == "ThemeAttrAndroid") {
     auto attrIterator = map.find("attribute");
-    react_native_expect(
+    react_native_assert(
         attrIterator != map.end() &&
         attrIterator->second.hasType<std::string>());
 
     result = NativeDrawable{
-        (std::string)attrIterator->second,
-        {},
         NativeDrawable::Kind::ThemeAttr,
+        (std::string)attrIterator->second,
     };
   } else if (type == "RippleAndroid") {
     auto color = map.find("color");
@@ -745,23 +688,23 @@ static inline void fromRawValue(
     auto rippleRadius = map.find("rippleRadius");
 
     result = NativeDrawable{
+        NativeDrawable::Kind::Ripple,
         std::string{},
         NativeDrawable::Ripple{
             color != map.end() && color->second.hasType<int32_t>()
                 ? (int32_t)color->second
                 : std::optional<int32_t>{},
-            rippleRadius != map.end() && rippleRadius->second.hasType<Float>()
-                ? (Float)rippleRadius->second
-                : std::optional<Float>{},
             borderless != map.end() && borderless->second.hasType<bool>()
                 ? (bool)borderless->second
                 : false,
+            rippleRadius != map.end() && rippleRadius->second.hasType<Float>()
+                ? (Float)rippleRadius->second
+                : std::optional<Float>{},
         },
-        NativeDrawable::Kind::Ripple,
     };
   } else {
     LOG(ERROR) << "Unknown native drawable type: " << type;
-    react_native_expect(false);
+    react_native_assert(false);
   }
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/tests/LayoutTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/components/view/tests/LayoutTest.cpp
index 8a5f1a9..5891c27 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/tests/LayoutTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/tests/LayoutTest.cpp
@@ -45,14 +45,7 @@ namespace facebook::react {
 //  ***********************│          │************************************
 //  ***********************└──────────┘************************************
 
-enum TestCase {
-  AS_IS,
-  CLIPPING,
-  HIT_SLOP,
-  HIT_SLOP_TRANSFORM_TRANSLATE,
-  TRANSFORM_SCALE,
-  TRANSFORM_TRANSLATE,
-};
+enum TestCase { AS_IS, CLIPPING, TRANSFORM_SCALE, TRANSFORM_TRANSLATE };
 
 class LayoutTest : public ::testing::Test {
  protected:
@@ -112,14 +105,9 @@ class LayoutTest : public ::testing::Test {
                       props.transform = props.transform * Transform::Scale(2, 2, 1);
                     }
 
-                    if (testCase == TRANSFORM_TRANSLATE || testCase == HIT_SLOP_TRANSFORM_TRANSLATE) {
+                    if (testCase == TRANSFORM_TRANSLATE) {
                       props.transform = props.transform * Transform::Translate(10, 10, 0);
                     }
-
-                    if (testCase == HIT_SLOP || testCase == HIT_SLOP_TRANSFORM_TRANSLATE) {
-                      props.hitSlop = EdgeInsets{50, 50, 50, 50};
-                    }
-
                     return sharedProps;
                   })
                   .children({
@@ -370,78 +358,4 @@ TEST_F(LayoutTest, overflowInsetTransformScaleTest) {
   EXPECT_EQ(layoutMetricsABC.overflowInset.bottom, 0);
 }
 
-TEST_F(LayoutTest, overflowInsetHitSlopTest) {
-  initialize(HIT_SLOP);
-
-  auto layoutMetricsA = viewShadowNodeA_->getLayoutMetrics();
-
-  EXPECT_EQ(layoutMetricsA.frame.size.width, 50);
-  EXPECT_EQ(layoutMetricsA.frame.size.height, 50);
-
-  // Change on parent node
-  EXPECT_EQ(layoutMetricsA.overflowInset.left, -50);
-  EXPECT_EQ(layoutMetricsA.overflowInset.top, -40);
-  EXPECT_EQ(layoutMetricsA.overflowInset.right, -80);
-  EXPECT_EQ(layoutMetricsA.overflowInset.bottom, -100);
-
-  auto layoutMetricsAB = viewShadowNodeAB_->getLayoutMetrics();
-
-  EXPECT_EQ(layoutMetricsAB.frame.size.width, 30);
-  EXPECT_EQ(layoutMetricsAB.frame.size.height, 90);
-
-  // No change on self node
-  EXPECT_EQ(layoutMetricsAB.overflowInset.left, -60);
-  EXPECT_EQ(layoutMetricsAB.overflowInset.top, -40);
-  EXPECT_EQ(layoutMetricsAB.overflowInset.right, -90);
-  EXPECT_EQ(layoutMetricsAB.overflowInset.bottom, 0);
-
-  auto layoutMetricsABC = viewShadowNodeABC_->getLayoutMetrics();
-
-  EXPECT_EQ(layoutMetricsABC.frame.size.width, 110);
-  EXPECT_EQ(layoutMetricsABC.frame.size.height, 20);
-
-  // No change on child node
-  EXPECT_EQ(layoutMetricsABC.overflowInset.left, 0);
-  EXPECT_EQ(layoutMetricsABC.overflowInset.top, -50);
-  EXPECT_EQ(layoutMetricsABC.overflowInset.right, 0);
-  EXPECT_EQ(layoutMetricsABC.overflowInset.bottom, 0);
-}
-
-TEST_F(LayoutTest, overflowInsetHitSlopTransformTranslateTest) {
-  initialize(HIT_SLOP_TRANSFORM_TRANSLATE);
-
-  auto layoutMetricsA = viewShadowNodeA_->getLayoutMetrics();
-
-  EXPECT_EQ(layoutMetricsA.frame.size.width, 50);
-  EXPECT_EQ(layoutMetricsA.frame.size.height, 50);
-
-  // Change on parent node
-  EXPECT_EQ(layoutMetricsA.overflowInset.left, -50);
-  EXPECT_EQ(layoutMetricsA.overflowInset.top, -40);
-  EXPECT_EQ(layoutMetricsA.overflowInset.right, -90);
-  EXPECT_EQ(layoutMetricsA.overflowInset.bottom, -110);
-
-  auto layoutMetricsAB = viewShadowNodeAB_->getLayoutMetrics();
-
-  EXPECT_EQ(layoutMetricsAB.frame.size.width, 30);
-  EXPECT_EQ(layoutMetricsAB.frame.size.height, 90);
-
-  // No change on self node
-  EXPECT_EQ(layoutMetricsAB.overflowInset.left, -60);
-  EXPECT_EQ(layoutMetricsAB.overflowInset.top, -40);
-  EXPECT_EQ(layoutMetricsAB.overflowInset.right, -90);
-  EXPECT_EQ(layoutMetricsAB.overflowInset.bottom, 0);
-
-  auto layoutMetricsABC = viewShadowNodeABC_->getLayoutMetrics();
-
-  EXPECT_EQ(layoutMetricsABC.frame.size.width, 110);
-  EXPECT_EQ(layoutMetricsABC.frame.size.height, 20);
-
-  // No change on child node
-  EXPECT_EQ(layoutMetricsABC.overflowInset.left, 0);
-  EXPECT_EQ(layoutMetricsABC.overflowInset.top, -50);
-  EXPECT_EQ(layoutMetricsABC.overflowInset.right, 0);
-  EXPECT_EQ(layoutMetricsABC.overflowInset.bottom, 0);
-}
-
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/components/view/viewPropConversions.h b/node_modules/react-native/ReactCommon/react/renderer/components/view/viewPropConversions.h
index a21df7e..6a672ae 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/components/view/viewPropConversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/components/view/viewPropConversions.h
@@ -10,7 +10,7 @@
 #include <react/renderer/components/view/ViewProps.h>
 #include <react/renderer/components/view/ViewPropsMapBuffer.h>
 #include <react/renderer/components/view/conversions.h>
-#include <react/renderer/core/graphicsConversions.h>
+#include <react/renderer/graphics/conversions.h>
 #include <react/renderer/mapbuffer/MapBuffer.h>
 #include <react/renderer/mapbuffer/MapBufferBuilder.h>
 
@@ -28,9 +28,6 @@ constexpr MapBuffer::Key EDGE_BOTTOM = 3;
 constexpr MapBuffer::Key EDGE_START = 4;
 constexpr MapBuffer::Key EDGE_END = 5;
 constexpr MapBuffer::Key EDGE_ALL = 6;
-constexpr MapBuffer::Key EDGE_BLOCK = 7;
-constexpr MapBuffer::Key EDGE_BLOCK_START = 8;
-constexpr MapBuffer::Key EDGE_BLOCK_END = 9;
 
 constexpr MapBuffer::Key CORNER_TOP_LEFT = 0;
 constexpr MapBuffer::Key CORNER_TOP_RIGHT = 1;
@@ -41,10 +38,6 @@ constexpr MapBuffer::Key CORNER_TOP_END = 5;
 constexpr MapBuffer::Key CORNER_BOTTOM_END = 6;
 constexpr MapBuffer::Key CORNER_BOTTOM_START = 7;
 constexpr MapBuffer::Key CORNER_ALL = 8;
-constexpr MapBuffer::Key CORNER_END_END = 9;
-constexpr MapBuffer::Key CORNER_END_START = 10;
-constexpr MapBuffer::Key CORNER_START_END = 11;
-constexpr MapBuffer::Key CORNER_START_START = 12;
 
 inline void putOptionalFloat(
     MapBufferBuilder &builder,
@@ -110,24 +103,20 @@ inline MapBuffer convertBorderColors(CascadedBorderColors const &colors) {
 
 template <typename T>
 MapBuffer convertCascadedEdges(CascadedRectangleEdges<T> const &edges) {
-  MapBufferBuilder builder(10);
+  MapBufferBuilder builder(7);
   putOptionalFloat(builder, EDGE_TOP, optionalFromValue(edges.top));
   putOptionalFloat(builder, EDGE_RIGHT, optionalFromValue(edges.right));
   putOptionalFloat(builder, EDGE_BOTTOM, optionalFromValue(edges.bottom));
   putOptionalFloat(builder, EDGE_LEFT, optionalFromValue(edges.left));
   putOptionalFloat(builder, EDGE_START, optionalFromValue(edges.start));
   putOptionalFloat(builder, EDGE_END, optionalFromValue(edges.end));
-  putOptionalFloat(builder, EDGE_BLOCK, optionalFromValue(edges.block));
-  putOptionalFloat(builder, EDGE_BLOCK_END, optionalFromValue(edges.blockEnd));
-  putOptionalFloat(
-      builder, EDGE_BLOCK_START, optionalFromValue(edges.blockStart));
   putOptionalFloat(builder, EDGE_ALL, optionalFromValue(edges.all));
   return builder.build();
 }
 
 template <typename T>
 MapBuffer convertCascadedCorners(CascadedRectangleCorners<T> const &corners) {
-  MapBufferBuilder builder(13);
+  MapBufferBuilder builder(9);
   putOptionalFloat(
       builder, CORNER_TOP_LEFT, optionalFromValue(corners.topLeft));
   putOptionalFloat(
@@ -143,13 +132,6 @@ MapBuffer convertCascadedCorners(CascadedRectangleCorners<T> const &corners) {
       builder, CORNER_BOTTOM_END, optionalFromValue(corners.bottomEnd));
   putOptionalFloat(
       builder, CORNER_BOTTOM_START, optionalFromValue(corners.bottomStart));
-  putOptionalFloat(builder, CORNER_END_END, optionalFromValue(corners.endEnd));
-  putOptionalFloat(
-      builder, CORNER_END_START, optionalFromValue(corners.endStart));
-  putOptionalFloat(
-      builder, CORNER_START_END, optionalFromValue(corners.startEnd));
-  putOptionalFloat(
-      builder, CORNER_START_START, optionalFromValue(corners.startStart));
   putOptionalFloat(builder, CORNER_ALL, optionalFromValue(corners.all));
   return builder.build();
 }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/BUCK b/node_modules/react-native/ReactCommon/react/renderer/core/BUCK
index e6d8d17..d6c1b35 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/BUCK
@@ -33,9 +33,9 @@ rn_xplat_cxx_library(
         prefix = "react/renderer/core",
     ),
     compiler_flags_pedantic = True,
-    fbandroid_tests_override = [],
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
+    force_static = True,
     labels = [
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
     ],
@@ -54,14 +54,11 @@ rn_xplat_cxx_library(
         "//xplat/folly:hash",
         "//xplat/folly:likely",
         "//xplat/jsi:JSIDynamic",
+        "//xplat/jsi:jsi",
         react_native_xplat_target("react/debug:debug"),
         react_native_xplat_target("react/utils:utils"),
         react_native_xplat_target("react/renderer/debug:debug"),
         react_native_xplat_target("react/renderer/graphics:graphics"),
-        react_native_xplat_target("cxxreact:bridge"),
-    ],
-    exported_deps = [
-        "//xplat/jsi:jsi",
     ],
 )
 
@@ -76,7 +73,7 @@ fb_xplat_cxx_test(
         "-Wall",
     ],
     contacts = ["oncall+react_native@xmail.facebook.com"],
-    platforms = (APPLE, CXX),
+    platforms = (ANDROID, APPLE, CXX),
     deps = [
         ":core",
         "//xplat/hermes/API:HermesAPI",
@@ -87,7 +84,6 @@ fb_xplat_cxx_test(
         react_native_xplat_target("react/renderer/components/text:text"),
         react_native_xplat_target("react/renderer/element:element"),
         react_native_xplat_target("react/renderer/components/view:view"),
-        react_native_xplat_target("cxxreact:bridge"),
     ],
 )
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ConcreteComponentDescriptor.h b/node_modules/react-native/ReactCommon/react/renderer/core/ConcreteComponentDescriptor.h
index 5a9cf37..fb44c8d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ConcreteComponentDescriptor.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ConcreteComponentDescriptor.h
@@ -195,7 +195,7 @@ class ConcreteComponentDescriptor : public ComponentDescriptor {
 
  protected:
   /*
-   * Called immediately after `ShadowNode` is created or cloned.
+   * Called immediatelly after `ShadowNode` is created or cloned.
    *
    * Override this method to pass information from custom `ComponentDescriptor`
    * to new instance of `ShadowNode`.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.cpp
index ae05676..75153ff 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.cpp
@@ -12,11 +12,6 @@ namespace react {
 
 bool CoreFeatures::enablePropIteratorSetter = false;
 bool CoreFeatures::enableMapBuffer = false;
-bool CoreFeatures::blockPaintForUseLayoutEffect = false;
-bool CoreFeatures::useNativeState = false;
-bool CoreFeatures::cacheNSTextStorage = false;
-bool CoreFeatures::cacheLastTextMeasurement = false;
-bool CoreFeatures::cancelImageDownloadsOnRecycle = false;
 
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.h b/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.h
index 65b10a9..43330d4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/CoreFeatures.h
@@ -12,7 +12,7 @@ namespace react {
 
 /*
  * Contains the set of feature flags for the renderer core.
- * Some of them are temporary and may be eventually phased out
+ * Some of them are temporary and may be eventualy phased out
  * as soon as the feature is fully implemented.
  */
 class CoreFeatures {
@@ -25,29 +25,6 @@ class CoreFeatures {
   // its ShadowNode traits must set the MapBuffer trait; and this
   // must be set to "true" globally.
   static bool enableMapBuffer;
-
-  // When enabled, Fabric will block paint to allow for state updates in
-  // useLayoutEffect hooks to be processed. This changes affects scheduling of
-  // when a transaction is mounted.
-  static bool blockPaintForUseLayoutEffect;
-
-  // Whether to use Hermes' NativeState instead of HostObject
-  // in simple data passing scenarios with JS
-  static bool useNativeState;
-
-  // Creating NSTextStorage is relatively expensive operation and we were
-  // creating it twice. Once when measuring text and once when rendering it.
-  // This flag caches it inside ParagraphState.
-  static bool cacheNSTextStorage;
-
-  // Yoga might measure multiple times the same Text with the same constraints
-  // This flag enables a caching mechanism to avoid subsequents measurements
-  // of the same Text with the same constrainst.
-  static bool cacheLastTextMeasurement;
-
-  // Fabric was not cancelling image downloads when <ImageView /> was removed
-  // from view hierarchy. This feature flag enables this feature.
-  static bool cancelImageDownloadsOnRecycle;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.cpp
index f416f5b..116a0a4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.cpp
@@ -8,7 +8,6 @@
 #include "DynamicPropsUtilities.h"
 
 namespace facebook::react {
-
 folly::dynamic mergeDynamicProps(
     folly::dynamic const &source,
     folly::dynamic const &patch) {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.h b/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.h
index 3969de7..d251f20 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/DynamicPropsUtilities.h
@@ -8,17 +8,13 @@
 #pragma once
 
 #include <folly/dynamic.h>
-#include <react/renderer/core/RawProps.h>
 
-namespace facebook::react {
+namespace facebook {
+namespace react {
 
-/*
- * Accepts two `folly::dynamic` objects as arguments. Both arguments need to
- * represent a dictionary. It updates `source` with key/value pairs from
- * `patch`, overriding existing keys.
- */
 folly::dynamic mergeDynamicProps(
     folly::dynamic const &source,
     folly::dynamic const &patch);
 
-} // namespace facebook::react
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventBeat.h b/node_modules/react-native/ReactCommon/react/renderer/core/EventBeat.h
index 10245c5..05388ed 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventBeat.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/EventBeat.h
@@ -77,7 +77,7 @@ class EventBeat {
 
  protected:
   /*
-   * Should be used by subclasses to send a beat.
+   * Should be used by sublasses to send a beat.
    * Receiver might ignore the call if a beat was not requested.
    */
   void beat(jsi::Runtime &runtime) const;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.cpp
index 64e04ca..5152c26 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.cpp
@@ -6,9 +6,8 @@
  */
 
 #include "EventDispatcher.h"
-#include <cxxreact/JSExecutor.h>
+
 #include <react/renderer/core/StateUpdate.h>
-#include "EventLogger.h"
 
 #include "BatchedEventQueue.h"
 #include "RawEvent.h"
@@ -19,7 +18,7 @@ namespace facebook::react {
 EventDispatcher::EventDispatcher(
     EventQueueProcessor const &eventProcessor,
     EventBeat::Factory const &synchonousEventBeatFactory,
-    EventBeat::Factory const &asynchronousEventBeatFactory,
+    EventBeat::Factory const &asynchonousEventBeatFactory,
     EventBeat::SharedOwnerBox const &ownerBox)
     : synchronousUnbatchedQueue_(std::make_unique<UnbatchedEventQueue>(
           eventProcessor,
@@ -29,10 +28,10 @@ EventDispatcher::EventDispatcher(
           synchonousEventBeatFactory(ownerBox))),
       asynchronousUnbatchedQueue_(std::make_unique<UnbatchedEventQueue>(
           eventProcessor,
-          asynchronousEventBeatFactory(ownerBox))),
+          asynchonousEventBeatFactory(ownerBox))),
       asynchronousBatchedQueue_(std::make_unique<BatchedEventQueue>(
           eventProcessor,
-          asynchronousEventBeatFactory(ownerBox))) {}
+          asynchonousEventBeatFactory(ownerBox))) {}
 
 void EventDispatcher::dispatchEvent(RawEvent &&rawEvent, EventPriority priority)
     const {
@@ -40,11 +39,6 @@ void EventDispatcher::dispatchEvent(RawEvent &&rawEvent, EventPriority priority)
   if (eventListeners_.willDispatchEvent(rawEvent)) {
     return;
   }
-
-  auto eventLogger = getEventLogger();
-  if (eventLogger != nullptr) {
-    rawEvent.loggingTag = eventLogger->onEventStart(rawEvent.type.c_str());
-  }
   getEventQueue(priority).enqueueEvent(std::move(rawEvent));
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.h b/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.h
index 6dd3e28..19f1fab 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/EventDispatcher.h
@@ -32,7 +32,7 @@ class EventDispatcher {
   EventDispatcher(
       EventQueueProcessor const &eventProcessor,
       EventBeat::Factory const &synchonousEventBeatFactory,
-      EventBeat::Factory const &asynchronousEventBeatFactory,
+      EventBeat::Factory const &asynchonousEventBeatFactory,
       EventBeat::SharedOwnerBox const &ownerBox);
 
   /*
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.cpp
index caef820..48f5793 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.cpp
@@ -10,7 +10,7 @@
 namespace facebook::react {
 
 bool EventListenerContainer::willDispatchEvent(const RawEvent &event) {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   bool handled = false;
   for (auto const &listener : eventListeners_) {
@@ -21,14 +21,14 @@ bool EventListenerContainer::willDispatchEvent(const RawEvent &event) {
 
 void EventListenerContainer::addListener(
     const std::shared_ptr<EventListener const> &listener) {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   eventListeners_.push_back(listener);
 }
 
 void EventListenerContainer::removeListener(
     const std::shared_ptr<EventListener const> &listener) {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   auto it = std::find(eventListeners_.begin(), eventListeners_.end(), listener);
   if (it != eventListeners_.end()) {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.h b/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.h
index f72a416..f9176b5 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/EventListener.h
@@ -7,11 +7,12 @@
 
 #pragma once
 
-#include <shared_mutex>
 #include <string>
 
 #include <react/renderer/core/RawEvent.h>
 
+#include <butter/mutex.h>
+
 namespace facebook {
 namespace react {
 
@@ -35,7 +36,7 @@ class EventListenerContainer {
   void removeListener(const std::shared_ptr<EventListener const> &listener);
 
  private:
-  std::shared_mutex mutex_;
+  butter::shared_mutex mutex_;
   std::vector<std::shared_ptr<EventListener const>> eventListeners_;
 };
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventLogger.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/EventLogger.cpp
deleted file mode 100644
index b751d29..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventLogger.cpp
+++ /dev/null
@@ -1,22 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#include "EventLogger.h"
-
-namespace facebook::react {
-
-EventLogger *eventLogger;
-
-void setEventLogger(EventLogger *logger) {
-  eventLogger = logger;
-}
-
-EventLogger *getEventLogger() {
-  return eventLogger;
-}
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventLogger.h b/node_modules/react-native/ReactCommon/react/renderer/core/EventLogger.h
deleted file mode 100644
index bac0486..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventLogger.h
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-namespace facebook::react {
-
-using EventTag = unsigned int;
-
-/*
- * Interface for logging discrete events (such as pointerenter/leave),
- * which can be used for implementing W3C Event Timing API standard,
- * see https://www.w3.org/TR/event-timing
- */
-class EventLogger {
- public:
-  virtual ~EventLogger() = default;
-
-  /*
-   * Called when an event is first created, returns and unique tag for this
-   * event, which can be used to log further event processing stages.
-   */
-  virtual EventTag onEventStart(const char *name) = 0;
-
-  /*
-   * Called when event starts getting dispatched (processed by the handlers, if
-   * any)
-   */
-  virtual void onEventDispatch(EventTag tag) = 0;
-
-  /*
-   * Called when event finishes being dispatched
-   */
-  virtual void onEventEnd(EventTag tag) = 0;
-};
-
-void setEventLogger(EventLogger *eventLogger);
-EventLogger *getEventLogger();
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/EventQueueProcessor.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/EventQueueProcessor.cpp
index 4ff9406..1b92d53 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/EventQueueProcessor.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/EventQueueProcessor.cpp
@@ -5,10 +5,9 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#include <cxxreact/JSExecutor.h>
-#include "EventEmitter.h"
-#include "EventLogger.h"
 #include "EventQueue.h"
+
+#include "EventEmitter.h"
 #include "ShadowNodeFamily.h"
 
 namespace facebook::react {
@@ -48,11 +47,6 @@ void EventQueueProcessor::flushEvents(
       reactPriority = ReactEventPriority::Discrete;
     }
 
-    auto eventLogger = getEventLogger();
-    if (eventLogger != nullptr) {
-      eventLogger->onEventDispatch(event.loggingTag);
-    }
-
     eventPipe_(
         runtime,
         event.eventTarget.get(),
@@ -60,10 +54,6 @@ void EventQueueProcessor::flushEvents(
         reactPriority,
         event.payloadFactory);
 
-    if (eventLogger != nullptr) {
-      eventLogger->onEventEnd(event.loggingTag);
-    }
-
     if (event.category == RawEvent::Category::ContinuousStart) {
       hasContinuousEventStarted_ = true;
     }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutConstraints.h b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutConstraints.h
index 4212e97..fd21538 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutConstraints.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutConstraints.h
@@ -11,7 +11,7 @@
 
 #include <folly/Hash.h>
 #include <react/renderer/core/LayoutPrimitives.h>
-#include <react/renderer/graphics/Size.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutContext.h b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutContext.h
index 04d6b29..f2a4ae5 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutContext.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutContext.h
@@ -10,6 +10,7 @@
 #include <vector>
 
 #include <react/renderer/core/LayoutableShadowNode.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutMetrics.h b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutMetrics.h
index 97bc25f..2ba3b5d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutMetrics.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutMetrics.h
@@ -11,8 +11,7 @@
 #include <react/renderer/core/LayoutPrimitives.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
 #include <react/renderer/debug/flags.h>
-#include <react/renderer/graphics/Rect.h>
-#include <react/renderer/graphics/RectangleEdges.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.cpp
index 87a612b..0f78575 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.cpp
@@ -11,9 +11,8 @@
 #include <react/renderer/core/LayoutContext.h>
 #include <react/renderer/core/LayoutMetrics.h>
 #include <react/renderer/core/ShadowNode.h>
-#include <react/renderer/core/TraitCast.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/debug/DebugStringConvertibleItem.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook::react {
 
@@ -94,9 +93,6 @@ LayoutMetrics LayoutableShadowNode::computeRelativeLayoutMetrics(
     // Layout metrics of a node computed relatively to the same node are equal
     // to `transform`-ed layout metrics of the node with zero `origin`.
     auto layoutMetrics = ancestorNode.getLayoutMetrics();
-    if (layoutMetrics.displayType == DisplayType::None) {
-      return EmptyLayoutMetrics;
-    }
     if (policy.includeTransform) {
       layoutMetrics.frame = layoutMetrics.frame * ancestorNode.getTransform();
     }
@@ -184,12 +180,6 @@ LayoutMetrics LayoutableShadowNode::computeRelativeLayoutMetrics(
       return EmptyLayoutMetrics;
     }
 
-    // Descendants of display: none don't have relative layout metrics.
-    if (currentShadowNode->getLayoutMetrics().displayType ==
-        DisplayType::None) {
-      return EmptyLayoutMetrics;
-    }
-
     auto currentFrame = shouldCalculateTransformedFrames
         ? transformedFrames[i]
         : currentShadowNode->getLayoutMetrics().frame;
@@ -222,14 +212,10 @@ LayoutMetrics LayoutableShadowNode::computeRelativeLayoutMetrics(
 
 ShadowNodeTraits LayoutableShadowNode::BaseTraits() {
   auto traits = ShadowNodeTraits{};
-  traits.set(IdentifierTrait());
+  traits.set(ShadowNodeTraits::Trait::LayoutableKind);
   return traits;
 }
 
-ShadowNodeTraits::Trait LayoutableShadowNode::IdentifierTrait() {
-  return ShadowNodeTraits::Trait::LayoutableKind;
-}
-
 LayoutMetrics LayoutableShadowNode::getLayoutMetrics() const {
   return layoutMetrics_;
 }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.h
index 4fd9920..35dd55e 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/LayoutableShadowNode.h
@@ -18,6 +18,7 @@
 #include <react/renderer/core/ShadowNode.h>
 #include <react/renderer/core/ShadowNodeFragment.h>
 #include <react/renderer/debug/DebugStringConvertible.h>
+#include <react/renderer/graphics/Geometry.h>
 #include <react/renderer/graphics/Transform.h>
 
 namespace facebook {
@@ -42,7 +43,6 @@ class LayoutableShadowNode : public ShadowNode {
       ShadowNodeFragment const &fragment);
 
   static ShadowNodeTraits BaseTraits();
-  static ShadowNodeTraits::Trait IdentifierTrait();
 
   struct LayoutInspectingPolicy {
     bool includeTransform{true};
@@ -152,7 +152,7 @@ class LayoutableShadowNode : public ShadowNode {
   virtual Float lastBaseline(Size size) const;
 
   /*
-   * Returns layoutable children to iterate on.
+   * Returns layoutable children to interate on.
    */
   LayoutableShadowNode::UnsharedList getLayoutableChildNodes() const;
 
@@ -165,5 +165,29 @@ class LayoutableShadowNode : public ShadowNode {
   LayoutMetrics layoutMetrics_;
 };
 
+template <>
+inline LayoutableShadowNode const &traitCast<LayoutableShadowNode const &>(
+    ShadowNode const &shadowNode) {
+  bool castable =
+      shadowNode.getTraits().check(ShadowNodeTraits::Trait::LayoutableKind);
+  react_native_assert(castable);
+  (void)castable;
+  return static_cast<LayoutableShadowNode const &>(shadowNode);
+}
+
+template <>
+inline LayoutableShadowNode const *traitCast<LayoutableShadowNode const *>(
+    ShadowNode const *shadowNode) {
+  if (!shadowNode) {
+    return nullptr;
+  }
+  bool castable =
+      shadowNode->getTraits().check(ShadowNodeTraits::Trait::LayoutableKind);
+  if (!castable) {
+    return nullptr;
+  }
+  return static_cast<LayoutableShadowNode const *>(shadowNode);
+}
+
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/PropsMacros.h b/node_modules/react-native/ReactCommon/react/renderer/core/PropsMacros.h
index a3d0701..519c130 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/PropsMacros.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/PropsMacros.h
@@ -31,15 +31,15 @@
 // Convenience for building setProps switch statements.
 // This injects `fromRawValue` into source; each file that uses
 // this macro must import the proper, respective headers required.
-#define RAW_SET_PROP_SWITCH_CASE(field, jsPropName)      \
-  case CONSTEXPR_RAW_PROPS_KEY_HASH(jsPropName):         \
-    fromRawValue(context, value, field, defaults.field); \
+#define RAW_SET_PROP_SWITCH_CASE(field, jsPropName, defaultValue) \
+  case CONSTEXPR_RAW_PROPS_KEY_HASH(jsPropName):                  \
+    fromRawValue(context, value, field, defaultValue);            \
     return;
 
 // Convenience for building setProps switch statements where the field name is
 // the same as the string identifier
-#define RAW_SET_PROP_SWITCH_CASE_BASIC(field) \
-  RAW_SET_PROP_SWITCH_CASE(field, #field)
+#define RAW_SET_PROP_SWITCH_CASE_BASIC(field, defaultValue) \
+  RAW_SET_PROP_SWITCH_CASE(field, #field, defaultValue)
 
 #define CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(         \
     struct, field, fieldNameString, value)              \
@@ -71,15 +71,7 @@
   CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                                \
       struct, bottomEnd, prefix "BottomEnd" suffix, rawValue)            \
   CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                                \
-      struct, all, prefix "" suffix, rawValue)                           \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                                \
-      struct, endEnd, prefix "EndEnd" suffix, rawValue)                  \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                                \
-      struct, endStart, prefix "EndStart" suffix, rawValue)              \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                                \
-      struct, startEnd, prefix "StartEnd" suffix, rawValue)              \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                                \
-      struct, startStart, prefix "StartStart" suffix, rawValue)
+      struct, all, prefix "" suffix, rawValue)
 
 #define SET_CASCADED_RECTANGLE_EDGES(struct, prefix, suffix, rawValue) \
   CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                              \
@@ -99,13 +91,7 @@
   CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                              \
       struct, vertical, prefix "Vertical" suffix, rawValue)            \
   CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                              \
-      struct, all, prefix "" suffix, rawValue)                         \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                              \
-      struct, block, prefix "Block" suffix, rawValue)                  \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                              \
-      struct, blockEnd, prefix "BlockEnd" suffix, rawValue)            \
-  CASE_STATEMENT_SET_FIELD_VALUE_INDEXED(                              \
-      struct, blockStart, prefix "BlockStart" suffix, rawValue)
+      struct, all, prefix "" suffix, rawValue)
 
 // Rebuild a type that contains multiple fields from a single field value
 #define REBUILD_FIELD_SWITCH_CASE(                  \
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.cpp
index f1b2252..6ce2241 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.cpp
@@ -8,11 +8,12 @@
 #include "PropsMapBuffer.h"
 #include "Props.h"
 
-#ifdef ANDROID
+#include <react/renderer/mapbuffer/MapBufferBuilder.h>
 
 namespace facebook {
 namespace react {
 
+#ifdef ANDROID
 void Props::propsDiffMapBuffer(
     Props const *oldPropsPtr,
     MapBufferBuilder &builder) const {
@@ -30,7 +31,7 @@ void Props::propsDiffMapBuffer(
     builder.putString(PROPS_NATIVE_ID, nativeId);
   }
 }
+#endif
 
 } // namespace react
 } // namespace facebook
-#endif
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.h b/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.h
index ba9bc95..ad6b9bd 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/PropsMapBuffer.h
@@ -10,7 +10,6 @@
 #ifdef ANDROID
 
 #include <react/renderer/mapbuffer/MapBuffer.h>
-#include <react/renderer/mapbuffer/MapBufferBuilder.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/RawEvent.h b/node_modules/react-native/ReactCommon/react/renderer/core/RawEvent.h
index 43ce761..bd57b7e 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/RawEvent.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/RawEvent.h
@@ -10,7 +10,6 @@
 #include <memory>
 #include <string>
 
-#include <react/renderer/core/EventLogger.h>
 #include <react/renderer/core/EventTarget.h>
 #include <react/renderer/core/ValueFactory.h>
 
@@ -69,7 +68,6 @@ struct RawEvent {
   ValueFactory payloadFactory;
   SharedEventTarget eventTarget;
   Category category;
-  EventTag loggingTag{0};
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/RawProps.h b/node_modules/react-native/ReactCommon/react/renderer/core/RawProps.h
index 3f3aae1..08cdcdd 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/RawProps.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/RawProps.h
@@ -138,7 +138,7 @@ class RawProps final {
       small_vector<RawPropsValueIndex, kNumberOfPropsPerComponentSoftCap>
           keyIndexToValueIndex_;
   mutable butter::
-      small_vector<RawValue, kNumberOfExplicitlySpecifiedPropsSoftCap>
+      small_vector<RawValue, kNumberOfExplicitlySpecifedPropsSoftCap>
           values_;
 };
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsKeyMap.h b/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsKeyMap.h
index ad50c55..f71dd09 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsKeyMap.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsKeyMap.h
@@ -55,7 +55,7 @@ class RawPropsKeyMap final {
       Item const &rhs) noexcept;
   static bool hasSameName(Item const &lhs, Item const &rhs) noexcept;
 
-  butter::small_vector<Item, kNumberOfExplicitlySpecifiedPropsSoftCap> items_{};
+  butter::small_vector<Item, kNumberOfExplicitlySpecifedPropsSoftCap> items_{};
   butter::small_vector<RawPropsPropNameLength, kPropNameLengthHardCap>
       buckets_{};
 };
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsPrimitives.h b/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsPrimitives.h
index 89855f8..cb2d9d1 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsPrimitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/RawPropsPrimitives.h
@@ -27,7 +27,7 @@ using RawPropsPropNameHash = uint32_t;
  * The number which is *usually* bigger than a number of explicitly specified
  * props for some component.
  */
-constexpr static int kNumberOfExplicitlySpecifiedPropsSoftCap = 16;
+constexpr static int kNumberOfExplicitlySpecifedPropsSoftCap = 16;
 
 /*
  * Special value of `RawPropsValueIndex` which is used to represent `no value`.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/Sealable.h b/node_modules/react-native/ReactCommon/react/renderer/core/Sealable.h
index d0a95dc..c92d9a7 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/Sealable.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/Sealable.h
@@ -26,7 +26,7 @@ namespace react {
  * even if they are explicitly marked as `const`. It means that in some special
  * cases those objects can be const-casted-away and then mutated. That comes
  * from the fact that we share some object's life-cycle responsibilities with
- * React and the immutability is guaranteed by some logic split between
+ * React and the immutability is guaranteed by some logic splitted between
  * native and JavaScript worlds (which makes it impossible to fully use
  * immutability enforcement at a language level). To detect possible errors as
  * early as possible we additionally mark objects as *sealed* after some stages
@@ -70,7 +70,7 @@ class Sealable {
 
   /*
    * Seals the object. This operation is irreversible;
-   * the object cannot be "unsealed" after being sealed.
+   * the object cannot be "unsealed" after being sealing.
    */
   void seal() const;
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp
index 6068eb3..9317ff6 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.cpp
@@ -117,31 +117,7 @@ ShadowNode::ShadowNode(
 
 ShadowNode::Unshared ShadowNode::clone(
     const ShadowNodeFragment &fragment) const {
-  auto const &family = *family_;
-  auto const &componentDescriptor = family.componentDescriptor_;
-  if (family.nativeProps_DEPRECATED != nullptr) {
-    auto propsParserContext = PropsParserContext{family_->getSurfaceId(), {}};
-    if (fragment.props == ShadowNodeFragment::propsPlaceholder()) {
-      // Clone existing `props_` with `family.nativeProps_DEPRECATED` to apply
-      // previously set props via `setNativeProps` API.
-      auto props = componentDescriptor.cloneProps(
-          propsParserContext, props_, RawProps(*family.nativeProps_DEPRECATED));
-      auto clonedNode = componentDescriptor.cloneShadowNode(
-          *this,
-          {
-              props,
-              fragment.children,
-              fragment.state,
-          });
-      return clonedNode;
-    } else {
-      // TODO: We might need to merge fragment.priops with
-      // `family.nativeProps_DEPRECATED`.
-      return componentDescriptor.cloneShadowNode(*this, fragment);
-    }
-  } else {
-    return componentDescriptor.cloneShadowNode(*this, fragment);
-  }
+  return family_->componentDescriptor_.cloneShadowNode(*this, fragment);
 }
 
 ContextContainer::Shared ShadowNode::getContextContainer() const {
@@ -228,7 +204,7 @@ void ShadowNode::appendChild(const ShadowNode::Shared &child) {
 void ShadowNode::replaceChild(
     ShadowNode const &oldChild,
     ShadowNode::Shared const &newChild,
-    size_t suggestedIndex) {
+    int suggestedIndex) {
   ensureUnsealed();
 
   cloneChildrenIfShared();
@@ -239,7 +215,7 @@ void ShadowNode::replaceChild(
       *std::const_pointer_cast<ShadowNode::ListOfShared>(children_);
   auto size = children.size();
 
-  if (suggestedIndex != -1 && suggestedIndex < size) {
+  if (suggestedIndex != -1 && static_cast<size_t>(suggestedIndex) < size) {
     // If provided `suggestedIndex` is accurate,
     // replacing in place using the index.
     if (children.at(suggestedIndex).get() == &oldChild) {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.h b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.h
index 6662502..a190a09 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNode.h
@@ -29,9 +29,7 @@ static constexpr const int kShadowNodeChildrenSmallVectorSize = 8;
 class ComponentDescriptor;
 struct ShadowNodeFragment;
 
-class ShadowNode : public Sealable,
-                   public DebugStringConvertible,
-                   public jsi::NativeState {
+class ShadowNode : public Sealable, public DebugStringConvertible {
  public:
   using Shared = std::shared_ptr<ShadowNode const>;
   using Weak = std::weak_ptr<ShadowNode const>;
@@ -163,11 +161,11 @@ class ShadowNode : public Sealable,
 
 #pragma mark - Mutating Methods
 
-  virtual void appendChild(Shared const &child);
-  virtual void replaceChild(
+  void appendChild(Shared const &child);
+  void replaceChild(
       ShadowNode const &oldChild,
       Shared const &newChild,
-      size_t suggestedIndex = -1);
+      int suggestedIndex = -1);
 
   /*
    * Performs all side effects associated with mounting/unmounting in one place.
@@ -226,5 +224,21 @@ class ShadowNode : public Sealable,
   ShadowNodeTraits traits_;
 };
 
+/*
+ * Template declarations for future specializations in concrete classes.
+ * `traitCast` checks for a trait that corresponds to the provided type and
+ * performs `static_cast`. Practically, the behavior is identical to
+ * `dynamic_cast` with very little runtime overhead.
+ */
+template <typename ShadowNodeReferenceT>
+ShadowNodeReferenceT traitCast(ShadowNode const &shadowNode);
+
+template <typename ShadowNodePointerT>
+ShadowNodePointerT traitCast(ShadowNode const *shadowNode);
+
+template <typename ShadowNodePointerT>
+std::shared_ptr<ShadowNodePointerT const> traitCast(
+    std::shared_ptr<ShadowNode const> shadowNode);
+
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.cpp
index 2c86a25..361a51b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.cpp
@@ -97,12 +97,12 @@ AncestorList ShadowNodeFamily::getAncestors(
 }
 
 State::Shared ShadowNodeFamily::getMostRecentState() const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
   return mostRecentState_;
 }
 
 void ShadowNodeFamily::setMostRecentState(State::Shared const &state) const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   /*
    * Checking and setting `isObsolete_` prevents old states to be recommitted
@@ -123,7 +123,7 @@ void ShadowNodeFamily::setMostRecentState(State::Shared const &state) const {
 
 std::shared_ptr<State const> ShadowNodeFamily::getMostRecentStateIfObsolete(
     State const &state) const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
   if (!state.isObsolete_) {
     return {};
   }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h
index 54016e4..a4ed371 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeFamily.h
@@ -8,8 +8,8 @@
 #pragma once
 
 #include <memory>
-#include <shared_mutex>
 
+#include <butter/mutex.h>
 #include <butter/small_vector.h>
 
 #include <react/renderer/core/EventEmitter.h>
@@ -86,13 +86,6 @@ class ShadowNodeFamily final {
   void dispatchRawState(StateUpdate &&stateUpdate, EventPriority priority)
       const;
 
-  /*
-   * Holds currently applied native props. `nullptr` if setNativeProps API is
-   * not used. It is used to backport setNativeProps API from the old
-   * architecture and will be removed in the future.
-   */
-  mutable std::unique_ptr<folly::dynamic> nativeProps_DEPRECATED;
-
  private:
   friend ShadowNode;
   friend ShadowNodeFamilyFragment;
@@ -108,7 +101,7 @@ class ShadowNodeFamily final {
 
   EventDispatcher::Weak eventDispatcher_;
   mutable std::shared_ptr<State const> mostRecentState_;
-  mutable std::shared_mutex mutex_;
+  mutable butter::shared_mutex mutex_;
 
   /*
    * Deprecated.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeTraits.h b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeTraits.h
index 11ca76c..d4f7836 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeTraits.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/ShadowNodeTraits.h
@@ -92,8 +92,17 @@ class ShadowNodeTraits {
     // Temporary (?) to indicate MapBuffer support on Android
     AndroidMapBufferPropsSupported = 1 << 15,
 
-    // Inherits 'ArtBaseShadowNode' (previously built into RN)
-    Art = 1 << 16,
+    // Reserved
+    ReservedTrait0 = 1 << 16,
+    ReservedTrait1 = 1 << 17,
+    ReservedTrait2 = 1 << 18,
+    ReservedTrait3 = 1 << 19,
+    ReservedTrait4 = 1 << 20,
+    ReservedTrait5 = 1 << 21,
+    ReservedTrait6 = 1 << 22,
+
+    // Unserved - alias these for local usage
+    UnreservedTrait1 = 1 << 23
   };
 
   /*
@@ -111,10 +120,6 @@ class ShadowNodeTraits {
     return ShadowNodeTraits::Trait(traits_ & traits) == traits;
   }
 
-  inline Trait get() const {
-    return traits_;
-  }
-
  private:
   Trait traits_{Trait::None};
 };
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/TraitCast.h b/node_modules/react-native/ReactCommon/react/renderer/core/TraitCast.h
deleted file mode 100644
index d0a84de..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/core/TraitCast.h
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <glog/logging.h>
-#include <react/renderer/core/ShadowNode.h>
-#include <memory>
-
-namespace facebook::react::details {
-template <typename ShadowNodePointerT, typename ParamT>
-ShadowNodePointerT traitCastPointer(ParamT shadowNode) {
-  auto expectedIdentifier =
-      std::remove_pointer_t<ShadowNodePointerT>::IdentifierTrait();
-  if (!shadowNode || !shadowNode->getTraits().check(expectedIdentifier)) {
-    return nullptr;
-  }
-
-  return static_cast<ShadowNodePointerT>(shadowNode);
-}
-
-template <typename ShadowNodeRefT, typename ParamT>
-ShadowNodeRefT traitCastRef(ParamT &&shadowNode) {
-  auto expectedIdentifier =
-      std::remove_reference_t<ShadowNodeRefT>::IdentifierTrait();
-  if (!shadowNode.getTraits().check(expectedIdentifier)) {
-    LOG(FATAL) << "Invalid ShadowNode cast\n"
-               << "Expected identifier: " << std::hex
-               << static_cast<int32_t>(expectedIdentifier) << "\n"
-               << "Actual traits: " << std::hex
-               << static_cast<int32_t>(shadowNode.getTraits().get()) << "\n";
-  }
-
-  return static_cast<ShadowNodeRefT>(shadowNode);
-}
-
-template <typename ShadowNodeT, typename ParamT>
-std::shared_ptr<ShadowNodeT> traitCastShared(
-    const std::shared_ptr<ParamT> &shadowNode) {
-  auto expectedIdentifier = ShadowNodeT::IdentifierTrait();
-  if (!shadowNode || !shadowNode->getTraits().check(expectedIdentifier)) {
-    return nullptr;
-  }
-
-  return std::static_pointer_cast<ShadowNodeT>(shadowNode);
-}
-} // namespace facebook::react::details
-
-namespace facebook::react {
-
-// Cast from one ShadowNode reference to another, terminating if the cast is
-// invalid.
-template <typename ShadowNodeReferenceT>
-ShadowNodeReferenceT traitCast(ShadowNode const &shadowNode) {
-  return details::traitCastRef<ShadowNodeReferenceT>(shadowNode);
-}
-template <typename ShadowNodeReferenceT>
-ShadowNodeReferenceT traitCast(ShadowNode &shadowNode) {
-  return details::traitCastRef<ShadowNodeReferenceT>(shadowNode);
-}
-
-// Cast from one ShadowNode pointer to another, returning nullptr if the cast is
-// invalid.
-template <typename ShadowNodePointerT>
-ShadowNodePointerT traitCast(ShadowNode const *shadowNode) {
-  return details::traitCastPointer<ShadowNodePointerT>(shadowNode);
-}
-template <typename ShadowNodePointerT>
-ShadowNodePointerT traitCast(ShadowNode *shadowNode) {
-  return details::traitCastPointer<ShadowNodePointerT>(shadowNode);
-}
-
-// Cast from one ShadowNode shared_ptr to another, returning nullptr if the
-// cast is invalid.
-template <typename ShadowNodeT, typename ParamT>
-std::shared_ptr<ShadowNodeT> traitCast(
-    const std::shared_ptr<ParamT> &shadowNode) {
-  return details::traitCastShared<ShadowNodeT>(shadowNode);
-}
-template <typename ShadowNodeT, typename ParamT>
-std::shared_ptr<ShadowNodeT const> traitCast(
-    const std::shared_ptr<ParamT const> &shadowNode) {
-  return details::traitCastShared<ShadowNodeT const>(shadowNode);
-}
-
-} // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/graphicsConversions.h b/node_modules/react-native/ReactCommon/react/renderer/core/graphicsConversions.h
deleted file mode 100644
index e91cbd4..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/core/graphicsConversions.h
+++ /dev/null
@@ -1,260 +0,0 @@
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#pragma once
-
-#include <butter/map.h>
-#include <glog/logging.h>
-#include <react/debug/react_native_expect.h>
-#include <react/renderer/core/PropsParserContext.h>
-#include <react/renderer/core/RawProps.h>
-#include <react/renderer/graphics/Color.h>
-#include <react/renderer/graphics/PlatformColorParser.h>
-#include <react/renderer/graphics/Point.h>
-#include <react/renderer/graphics/Rect.h>
-#include <react/renderer/graphics/RectangleCorners.h>
-#include <react/renderer/graphics/RectangleEdges.h>
-#include <react/renderer/graphics/Size.h>
-
-namespace facebook {
-namespace react {
-
-#pragma mark - Color
-
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    SharedColor &result) {
-  ColorComponents colorComponents = {0, 0, 0, 0};
-
-  if (value.hasType<int>()) {
-    auto argb = (int64_t)value;
-    auto ratio = 255.f;
-    colorComponents.alpha = ((argb >> 24) & 0xFF) / ratio;
-    colorComponents.red = ((argb >> 16) & 0xFF) / ratio;
-    colorComponents.green = ((argb >> 8) & 0xFF) / ratio;
-    colorComponents.blue = (argb & 0xFF) / ratio;
-  } else if (value.hasType<std::vector<float>>()) {
-    auto items = (std::vector<float>)value;
-    auto length = items.size();
-    react_native_expect(length == 3 || length == 4);
-    colorComponents.red = items.at(0);
-    colorComponents.green = items.at(1);
-    colorComponents.blue = items.at(2);
-    colorComponents.alpha = length == 4 ? items.at(3) : 1.0f;
-  } else {
-    colorComponents = parsePlatformColor(context, value);
-  }
-
-  result = colorFromComponents(colorComponents);
-}
-
-#ifdef ANDROID
-inline int toAndroidRepr(const SharedColor &color) {
-  return *color;
-}
-inline folly::dynamic toDynamic(const SharedColor &color) {
-  return *color;
-}
-#endif
-
-inline std::string toString(const SharedColor &value) {
-  ColorComponents components = colorComponentsFromColor(value);
-  auto ratio = 255.f;
-  return "rgba(" + folly::to<std::string>(round(components.red * ratio)) +
-      ", " + folly::to<std::string>(round(components.green * ratio)) + ", " +
-      folly::to<std::string>(round(components.blue * ratio)) + ", " +
-      folly::to<std::string>(round(components.alpha * ratio)) + ")";
-}
-
-#pragma mark - Geometry
-
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    Point &result) {
-  if (value.hasType<butter::map<std::string, Float>>()) {
-    auto map = (butter::map<std::string, Float>)value;
-    for (const auto &pair : map) {
-      if (pair.first == "x") {
-        result.x = pair.second;
-      } else if (pair.first == "y") {
-        result.y = pair.second;
-      }
-    }
-    return;
-  }
-
-  react_native_expect(value.hasType<std::vector<Float>>());
-  if (value.hasType<std::vector<Float>>()) {
-    auto array = (std::vector<Float>)value;
-    react_native_expect(array.size() == 2);
-    if (array.size() >= 2) {
-      result = {array.at(0), array.at(1)};
-    } else {
-      result = {0, 0};
-      LOG(ERROR) << "Unsupported Point vector size: " << array.size();
-    }
-  } else {
-    LOG(ERROR) << "Unsupported Point type";
-  }
-}
-
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    Size &result) {
-  if (value.hasType<butter::map<std::string, Float>>()) {
-    auto map = (butter::map<std::string, Float>)value;
-    for (const auto &pair : map) {
-      if (pair.first == "width") {
-        result.width = pair.second;
-      } else if (pair.first == "height") {
-        result.height = pair.second;
-      } else {
-        LOG(ERROR) << "Unsupported Size map key: " << pair.first;
-        react_native_expect(false);
-      }
-    }
-    return;
-  }
-
-  react_native_expect(value.hasType<std::vector<Float>>());
-  if (value.hasType<std::vector<Float>>()) {
-    auto array = (std::vector<Float>)value;
-    react_native_expect(array.size() == 2);
-    if (array.size() >= 2) {
-      result = {array.at(0), array.at(1)};
-    } else {
-      result = {0, 0};
-      LOG(ERROR) << "Unsupported Size vector size: " << array.size();
-    }
-  } else {
-    LOG(ERROR) << "Unsupported Size type";
-  }
-}
-
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    EdgeInsets &result) {
-  if (value.hasType<Float>()) {
-    auto number = (Float)value;
-    result = {number, number, number, number};
-    return;
-  }
-
-  if (value.hasType<butter::map<std::string, Float>>()) {
-    auto map = (butter::map<std::string, Float>)value;
-    for (const auto &pair : map) {
-      if (pair.first == "top") {
-        result.top = pair.second;
-      } else if (pair.first == "left") {
-        result.left = pair.second;
-      } else if (pair.first == "bottom") {
-        result.bottom = pair.second;
-      } else if (pair.first == "right") {
-        result.right = pair.second;
-      } else {
-        LOG(ERROR) << "Unsupported EdgeInsets map key: " << pair.first;
-        react_native_expect(false);
-      }
-    }
-    return;
-  }
-
-  react_native_expect(value.hasType<std::vector<Float>>());
-  if (value.hasType<std::vector<Float>>()) {
-    auto array = (std::vector<Float>)value;
-    react_native_expect(array.size() == 4);
-    if (array.size() >= 4) {
-      result = {array.at(0), array.at(1), array.at(2), array.at(3)};
-    } else {
-      result = {0, 0, 0, 0};
-      LOG(ERROR) << "Unsupported EdgeInsets vector size: " << array.size();
-    }
-  } else {
-    LOG(ERROR) << "Unsupported EdgeInsets type";
-  }
-}
-
-inline void fromRawValue(
-    const PropsParserContext &context,
-    const RawValue &value,
-    CornerInsets &result) {
-  if (value.hasType<Float>()) {
-    auto number = (Float)value;
-    result = {number, number, number, number};
-    return;
-  }
-
-  if (value.hasType<butter::map<std::string, Float>>()) {
-    auto map = (butter::map<std::string, Float>)value;
-    for (const auto &pair : map) {
-      if (pair.first == "topLeft") {
-        result.topLeft = pair.second;
-      } else if (pair.first == "topRight") {
-        result.topRight = pair.second;
-      } else if (pair.first == "bottomLeft") {
-        result.bottomLeft = pair.second;
-      } else if (pair.first == "bottomRight") {
-        result.bottomRight = pair.second;
-      } else {
-        LOG(ERROR) << "Unsupported CornerInsets map key: " << pair.first;
-        react_native_expect(false);
-      }
-    }
-    return;
-  }
-
-  react_native_expect(value.hasType<std::vector<Float>>());
-  if (value.hasType<std::vector<Float>>()) {
-    auto array = (std::vector<Float>)value;
-    react_native_expect(array.size() == 4);
-    if (array.size() >= 4) {
-      result = {array.at(0), array.at(1), array.at(2), array.at(3)};
-    } else {
-      LOG(ERROR) << "Unsupported CornerInsets vector size: " << array.size();
-    }
-  }
-
-  // Error case - we should only here if all other supported cases fail
-  // In dev we would crash on assert before this point
-  result = {0, 0, 0, 0};
-  LOG(ERROR) << "Unsupported CornerInsets type";
-}
-
-inline std::string toString(const Point &point) {
-  return "{" + folly::to<std::string>(point.x) + ", " +
-      folly::to<std::string>(point.y) + "}";
-}
-
-inline std::string toString(const Size &size) {
-  return "{" + folly::to<std::string>(size.width) + ", " +
-      folly::to<std::string>(size.height) + "}";
-}
-
-inline std::string toString(const Rect &rect) {
-  return "{" + toString(rect.origin) + ", " + toString(rect.size) + "}";
-}
-
-inline std::string toString(const EdgeInsets &edgeInsets) {
-  return "{" + folly::to<std::string>(edgeInsets.left) + ", " +
-      folly::to<std::string>(edgeInsets.top) + ", " +
-      folly::to<std::string>(edgeInsets.right) + ", " +
-      folly::to<std::string>(edgeInsets.bottom) + "}";
-}
-
-inline std::string toString(const CornerInsets &cornerInsets) {
-  return "{" + folly::to<std::string>(cornerInsets.topLeft) + ", " +
-      folly::to<std::string>(cornerInsets.topRight) + ", " +
-      folly::to<std::string>(cornerInsets.bottomLeft) + ", " +
-      folly::to<std::string>(cornerInsets.bottomRight) + "}";
-}
-
-} // namespace react
-} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/propsConversions.h b/node_modules/react-native/ReactCommon/react/renderer/core/propsConversions.h
index 02d9283..c4221f9 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/propsConversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/propsConversions.h
@@ -13,8 +13,9 @@
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/core/RawProps.h>
 #include <react/renderer/core/RawPropsKey.h>
-#include <react/renderer/core/graphicsConversions.h>
 #include <react/renderer/graphics/Color.h>
+#include <react/renderer/graphics/Geometry.h>
+#include <react/renderer/graphics/conversions.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/tests/EventQueueProcessorTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/tests/EventQueueProcessorTest.cpp
index e88013b..28d85ce 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/tests/EventQueueProcessorTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/tests/EventQueueProcessorTest.cpp
@@ -6,7 +6,7 @@
  */
 
 #include <gtest/gtest.h>
-#include <hermes/hermes.h>
+#include <hermes/API/hermes/hermes.h>
 #include <jsi/jsi.h>
 #include <react/renderer/core/EventPipe.h>
 #include <react/renderer/core/EventQueueProcessor.h>
@@ -58,7 +58,7 @@ TEST_F(EventQueueProcessorTest, singleUnspecifiedEvent) {
   EXPECT_EQ(eventPriorities_[0], ReactEventPriority::Discrete);
 }
 
-TEST_F(EventQueueProcessorTest, continuousEvent) {
+TEST_F(EventQueueProcessorTest, continiousEvent) {
   eventProcessor_->flushEvents(
       *runtime_,
       {RawEvent(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/tests/LayoutableShadowNodeTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/tests/LayoutableShadowNodeTest.cpp
index 9be2fae..f8b0789 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/tests/LayoutableShadowNodeTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/tests/LayoutableShadowNodeTest.cpp
@@ -67,152 +67,6 @@ TEST(LayoutableShadowNodeTest, relativeLayoutMetrics) {
   EXPECT_EQ(relativeLayoutMetrics.frame.origin.y, 20);
 }
 
-/*
- * ┌───────────────────┐
- * │<View displayNone> │
- * │                   │
- * └───────────────────┘
- */
-TEST(LayoutableShadowNodeTest, relativeLayoutMetricsOnNodeWithDisplayNone) {
-  auto builder = simpleComponentBuilder();
-
-  // clang-format off
-  auto element =
-    Element<ViewShadowNode>()
-      .finalize([](ViewShadowNode &shadowNode){
-        auto layoutMetrics = EmptyLayoutMetrics;
-        layoutMetrics.frame.size = {100, 200};
-        layoutMetrics.frame.origin = {10, 20};
-        layoutMetrics.displayType = DisplayType::None;
-        shadowNode.setLayoutMetrics(layoutMetrics);
-    });
-  // clang-format on
-
-  auto shadowNode = builder.build(element);
-
-  auto relativeLayoutMetrics =
-      LayoutableShadowNode::computeRelativeLayoutMetrics(
-          shadowNode->getFamily(), *shadowNode, {});
-
-  // The node has display: none, so the relative layout is empty.
-  EXPECT_TRUE(relativeLayoutMetrics == EmptyLayoutMetrics);
-}
-
-/*
- * ┌────────────────────┐
- * │<View displayNone>  │
- * │                    │
- * │   ┌────────────────┴──┐
- * │   │<View>             │
- * └───┤                   │
- *     │                   │
- *     │                   │
- *     └───────────────────┘
- */
-TEST(
-    LayoutableShadowNodeTest,
-    relativeLayoutMetricsOnChildrenOfParentWithDisplayNone) {
-  auto builder = simpleComponentBuilder();
-
-  auto childShadowNode = std::shared_ptr<ViewShadowNode>{};
-  // clang-format off
-  auto element =
-    Element<ViewShadowNode>()
-      .finalize([](ViewShadowNode &shadowNode){
-        auto layoutMetrics = EmptyLayoutMetrics;
-        layoutMetrics.frame.origin = {10, 20};
-        layoutMetrics.frame.size = {100, 200};
-        layoutMetrics.displayType = DisplayType::None;
-        shadowNode.setLayoutMetrics(layoutMetrics);
-      })
-      .children({
-        Element<ViewShadowNode>()
-        .finalize([](ViewShadowNode &shadowNode){
-          auto layoutMetrics = EmptyLayoutMetrics;
-          layoutMetrics.frame.origin = {10, 20};
-          layoutMetrics.frame.size = {100, 200};
-          shadowNode.setLayoutMetrics(layoutMetrics);
-        })
-        .reference(childShadowNode)
-    });
-  // clang-format on
-
-  auto parentShadowNode = builder.build(element);
-
-  auto relativeLayoutMetrics =
-      LayoutableShadowNode::computeRelativeLayoutMetrics(
-          childShadowNode->getFamily(), *parentShadowNode, {});
-
-  // A parent node in the hierarchy has display: none, so the relative layout
-  // is empty.
-  EXPECT_TRUE(relativeLayoutMetrics == EmptyLayoutMetrics);
-}
-
-/*
- * ┌────────────────────┐
- * │<View displayNone>  │
- * │                    │
- * │   ┌────────────────┴──┐
- * │   │<View ancestor>    │
- * └───┤                   │
- *     │                   │
- *     │   ┌───────────────┴──┐
- *     └───|<View descendant> |
- *         |                  |
- *         └──────────────────┘
- */
-TEST(
-    LayoutableShadowNodeTest,
-    relativeLayoutMetricsOnOuterParentWithDisplayNone) {
-  auto builder = simpleComponentBuilder();
-
-  auto parentShadowNode = std::shared_ptr<ViewShadowNode>{};
-  auto childShadowNode = std::shared_ptr<ViewShadowNode>{};
-  // clang-format off
-  auto element =
-    Element<ViewShadowNode>()
-      .finalize([](ViewShadowNode &shadowNode){
-        auto layoutMetrics = EmptyLayoutMetrics;
-        layoutMetrics.frame.origin = {0, 0};
-        layoutMetrics.frame.size = {1000, 1000};
-        layoutMetrics.displayType = DisplayType::None;
-        shadowNode.setLayoutMetrics(layoutMetrics);
-      })
-      .children({
-        Element<ViewShadowNode>()
-        .finalize([](ViewShadowNode &shadowNode){
-          auto layoutMetrics = EmptyLayoutMetrics;
-          layoutMetrics.frame.origin = {50, 50};
-          layoutMetrics.frame.size = {200, 200};
-          shadowNode.setLayoutMetrics(layoutMetrics);
-        })
-        .children({
-          Element<ViewShadowNode>()
-            .finalize([](ViewShadowNode &shadowNode){
-              auto layoutMetrics = EmptyLayoutMetrics;
-              layoutMetrics.frame.origin = {10, 20};
-              layoutMetrics.frame.size = {100, 200};
-              shadowNode.setLayoutMetrics(layoutMetrics);
-            }).reference(childShadowNode)
-        })
-        .reference(parentShadowNode)
-    });
-  // clang-format on
-
-  auto outerParentShadowNode = builder.build(element);
-
-  auto relativeLayoutMetrics =
-      LayoutableShadowNode::computeRelativeLayoutMetrics(
-          childShadowNode->getFamily(), *parentShadowNode, {});
-
-  // The root view has display: none, but all the views between the descendant
-  // and the ancestor are visible, so we compute relative layout as usual.
-  EXPECT_EQ(relativeLayoutMetrics.frame.size.width, 100);
-  EXPECT_EQ(relativeLayoutMetrics.frame.size.height, 200);
-  EXPECT_EQ(relativeLayoutMetrics.frame.origin.x, 10);
-  EXPECT_EQ(relativeLayoutMetrics.frame.origin.y, 20);
-}
-
 /*
  * ┌──────────────┐
  * │<ScrollView>  │
@@ -462,7 +316,7 @@ TEST(LayoutableShadowNodeTest, relativeLayoutMetricsOnSameTransformedNode) {
  * │      └────────────────┘│
  * └────────────────────────┘
  */
-TEST(LayoutableShadowNodeTest, relativeLayoutMetricsOnClonedNode) {
+TEST(LayoutableShadowNodeTest, relativeLayourMetricsOnClonedNode) {
   auto builder = simpleComponentBuilder();
 
   auto childShadowNode = std::shared_ptr<ViewShadowNode>{};
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/tests/RawPropsTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/tests/RawPropsTest.cpp
index 5c00687..a620d3c 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/tests/RawPropsTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/tests/RawPropsTest.cpp
@@ -131,7 +131,7 @@ class PropsMultiLookup : public Props {
             "floatValue",
             sourceProps.floatValue,
             17.5)),
-        // While this specific pattern is uncommon, it's a simplification of a
+        // While this specific pattern is uncommon, it's a simplication of a
         // pattern that does occur a lot: nested structs that access props we
         // have already accessed populating Props
         derivedFloatValue(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/core/tests/traitCastTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/core/tests/traitCastTest.cpp
index 0f94fd1..1154257 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/core/tests/traitCastTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/core/tests/traitCastTest.cpp
@@ -12,7 +12,6 @@
 #include <react/renderer/components/text/RawTextComponentDescriptor.h>
 #include <react/renderer/components/text/TextComponentDescriptor.h>
 #include <react/renderer/components/view/ViewComponentDescriptor.h>
-#include <react/renderer/core/TraitCast.h>
 
 #include <react/renderer/element/Element.h>
 #include <react/renderer/element/testUtils.h>
@@ -52,13 +51,8 @@ TEST(traitCastTest, testOne) {
   std::shared_ptr<ShadowNode> shadowNodeForTextShadowNode{textShadowNode};
 
   // Casting `nullptr` returns `nullptrs`.
-  ShadowNode *nullShadowNode = nullptr;
-  EXPECT_FALSE(traitCast<LayoutableShadowNode const *>(nullShadowNode));
-  EXPECT_FALSE(traitCast<YogaLayoutableShadowNode const *>(nullShadowNode));
-  EXPECT_FALSE(traitCast<LayoutableShadowNode const *>(nullShadowNode));
-  EXPECT_FALSE(traitCast<LayoutableShadowNode *>(nullShadowNode));
-  EXPECT_FALSE(traitCast<LayoutableShadowNode>(
-      std::shared_ptr<ShadowNode>(nullShadowNode)));
+  EXPECT_FALSE(traitCast<LayoutableShadowNode const *>(nullptr));
+  EXPECT_FALSE(traitCast<YogaLayoutableShadowNode const *>(nullptr));
 
   // `ViewShadowNode` is `LayoutableShadowNode` and `YogaLayoutableShadowNode`.
   EXPECT_TRUE(traitCast<LayoutableShadowNode const *>(viewShadowNode.get()));
@@ -68,10 +62,6 @@ TEST(traitCastTest, testOne) {
       traitCast<LayoutableShadowNode const &>(*viewShadowNode));
   EXPECT_NO_FATAL_FAILURE(
       traitCast<YogaLayoutableShadowNode const &>(*viewShadowNode));
-  EXPECT_NO_FATAL_FAILURE(
-      traitCast<YogaLayoutableShadowNode &>(*viewShadowNode));
-  EXPECT_TRUE(traitCast<LayoutableShadowNode *>(viewShadowNode.get()));
-  EXPECT_TRUE(traitCast<LayoutableShadowNode>(viewShadowNode));
 
   // `ScrollViewShadowNode` is `LayoutableShadowNode` and
   // `YogaLayoutableShadowNode`.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/debug/DebugStringConvertible.h b/node_modules/react-native/ReactCommon/react/renderer/debug/DebugStringConvertible.h
index 7df17f0..a9a1ef0 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/debug/DebugStringConvertible.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/debug/DebugStringConvertible.h
@@ -9,7 +9,6 @@
 
 #include <climits>
 #include <memory>
-#include <optional>
 #include <string>
 #include <unordered_set>
 #include <vector>
@@ -99,14 +98,6 @@ std::string toString(float const &value);
 std::string toString(double const &value);
 std::string toString(void const *value);
 
-template <typename T>
-std::string toString(const std::optional<T> &value) {
-  if (!value) {
-    return "null";
-  }
-  return toString(value.value());
-}
-
 /*
  * *Informal* `DebugStringConvertible` interface.
  *
diff --git a/node_modules/react-native/ReactCommon/react/renderer/debug/SystraceSection.h b/node_modules/react-native/ReactCommon/react/renderer/debug/SystraceSection.h
index 46996ff..d3ccd0b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/debug/SystraceSection.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/debug/SystraceSection.h
@@ -14,16 +14,6 @@
 namespace facebook {
 namespace react {
 
-/**
- * Allow providing an fbsystrace implementation that can short-circuit out
- * quickly and can throttle too frequent events so we can get useful traces even
- * if rendering etc. is spinning. For throttling we'll need file/line info so we
- * use a macro.
- */
-#if defined(WITH_LOOM_TRACE)
-#define SystraceSection                                         \
-  static constexpr const char systraceSectionFile[] = __FILE__; \
-  fbsystrace::FbSystraceSection<systraceSectionFile, __LINE__>
 /**
  * This is a convenience class to avoid lots of verbose profiling
  * #ifdefs.  If WITH_FBSYSTRACE is not defined, the optimizer will
@@ -33,7 +23,7 @@ namespace react {
  * different values in different files, there is no inconsistency in the sizes
  * of defined symbols.
  */
-#elif defined(WITH_FBSYSTRACE)
+#ifdef WITH_FBSYSTRACE
 struct ConcreteSystraceSection {
  public:
   template <typename... ConvertsToStringPiece>
@@ -51,8 +41,8 @@ struct DummySystraceSection {
  public:
   template <typename... ConvertsToStringPiece>
   explicit DummySystraceSection(
-      __unused const char *name,
-      __unused ConvertsToStringPiece &&...args) {}
+      const char *name,
+      ConvertsToStringPiece &&...args) {}
 };
 using SystraceSection = DummySystraceSection;
 #endif
diff --git a/node_modules/react-native/ReactCommon/react/renderer/element/BUCK b/node_modules/react-native/ReactCommon/react/renderer/element/BUCK
index f0bc5c3..bcca6e1 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/element/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/element/BUCK
@@ -32,8 +32,6 @@ rn_xplat_cxx_library(
         prefix = "react/renderer/element",
     ),
     compiler_flags_pedantic = True,
-    # TODO(145803035) Fix Android tests
-    fbandroid_tests_override = [],
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
     force_static = True,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/element/CMakeLists.txt b/node_modules/react-native/ReactCommon/react/renderer/element/CMakeLists.txt
deleted file mode 100644
index d0af2a2..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/element/CMakeLists.txt
+++ /dev/null
@@ -1,29 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-cmake_minimum_required(VERSION 3.13)
-set(CMAKE_VERBOSE_MAKEFILE on)
-
-add_compile_options(
-        -fexceptions
-        -frtti
-        -std=c++17
-        -Wall
-        -Wpedantic
-        -Wno-gnu-zero-variadic-macro-arguments
-        -DLOG_TAG=\"Fabric\")
-
-file(GLOB react_render_element_SRC CONFIGURE_DEPENDS *.cpp)
-add_library(react_render_element SHARED ${react_render_element_SRC})
-
-target_include_directories(react_render_element PUBLIC ${REACT_COMMON_DIR})
-
-target_link_libraries(react_render_element
-        folly_runtime
-        glog
-        react_render_core
-        react_render_componentregistry
-)
-
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/BUCK b/node_modules/react-native/ReactCommon/react/renderer/graphics/BUCK
index 62700a5..275235d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/BUCK
@@ -8,13 +8,12 @@ load(
     "get_apple_compiler_flags",
     "get_apple_inspector_flags",
     "get_preprocessor_flags_for_build_mode",
+    "react_native_target",
     "react_native_xplat_target",
     "rn_xplat_cxx_library",
     "subdir_glob",
 )
 
-oncall("react_native")
-
 APPLE_COMPILER_FLAGS = get_apple_compiler_flags()
 
 rn_xplat_cxx_library(
@@ -52,32 +51,36 @@ rn_xplat_cxx_library(
     fbandroid_allow_jni_merging = True,
     fbandroid_deps = [
         FBJNI_TARGET,
-        "//xplat/folly:dynamic",
+        react_native_target("jni/react/jni:jni"),
     ],
     fbandroid_exported_headers = subdir_glob(
         [
             ("platform/android/react/renderer/graphics", "**/*.h"),
+            ("platform/cxx/react/renderer/graphics", "**/*.h"),
         ],
+        exclude = ["platform/cxx/react/renderer/graphics/PlatformColorParser.h"],
         prefix = "react/renderer/graphics",
     ),
     fbandroid_srcs = glob(
         [
+            "platform/cxx/react/renderer/graphics/**/*.cpp",
             "platform/android/react/renderer/graphics/**/*.cpp",
         ],
+        exclude = ["platform/cxx/react/renderer/graphics/PlatformColorParser.h"],
     ),
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
-    fbobjc_exported_headers = subdir_glob(
-        [
-            ("platform/ios/react/renderer/graphics", "*.h"),
-        ],
-        prefix = "react/renderer/graphics",
-    ),
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
     force_static = True,
     ios_deps = [
         "//xplat/js/react-native-github:RCTCxxBridge",
         "//xplat/js/react-native-github:RCTImage",
     ],
+    ios_exported_headers = subdir_glob(
+        [
+            ("platform/ios", "*.h"),
+        ],
+        prefix = "react/renderer/graphics",
+    ),
     ios_frameworks = [
         "$SDKROOT/System/Library/Frameworks/CoreGraphics.framework",
         "$SDKROOT/System/Library/Frameworks/Foundation.framework",
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/CMakeLists.txt b/node_modules/react-native/ReactCommon/react/renderer/graphics/CMakeLists.txt
index ac5eae2..a977c40 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/CMakeLists.txt
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/CMakeLists.txt
@@ -15,14 +15,18 @@ add_compile_options(
         -Wno-gnu-zero-variadic-macro-arguments
         -DLOG_TAG=\"Fabric\")
 
-file(GLOB react_render_graphics_SRC CONFIGURE_DEPENDS *.cpp)
-add_library(react_render_graphics SHARED ${react_render_graphics_SRC})
+file(GLOB react_render_graphics_SRC CONFIGURE_DEPENDS
+        *.cpp
+        platform/cxx/react/renderer/graphics/*.cpp)
+
+add_library(react_render_graphics
+        SHARED
+        ${react_render_graphics_SRC})
 
 target_include_directories(react_render_graphics
         PUBLIC
           ${REACT_COMMON_DIR}
-          ${CMAKE_CURRENT_SOURCE_DIR}/platform/android/
+          ${CMAKE_CURRENT_SOURCE_DIR}/platform/cxx/
         )
 
 target_link_libraries(react_render_graphics glog fb fbjni folly_runtime react_debug)
-
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/Geometry.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/Geometry.h
index a802060..409ee06 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/Geometry.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/Geometry.h
@@ -13,7 +13,16 @@
 #include <react/renderer/graphics/RectangleCorners.h>
 #include <react/renderer/graphics/RectangleEdges.h>
 #include <react/renderer/graphics/Size.h>
-#include <react/renderer/graphics/Vector.h>
 
-#warning \
-    "The Geometry.h file is deprecated and will be removed in the next version of React Native. Please update your #include and #import statements to use the specific files. For example, if you imported Geometry.h to use Float.h, replase the #include <react/renderer/graphics/Geometry.h> with #include <react/renderer/graphics/Float.h>"
+namespace facebook {
+namespace react {
+
+struct Vector {
+  Float x{0};
+  Float y{0};
+  Float z{0};
+  Float w{0};
+};
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/React-graphics.podspec b/node_modules/react-native/ReactCommon/react/renderer/graphics/React-graphics.podspec
index 433e20d..8c297d7 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/React-graphics.podspec
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/React-graphics.podspec
@@ -21,37 +21,22 @@ folly_version = '2021.07.22.00'
 boost_compiler_flags = '-Wno-documentation'
 
 Pod::Spec.new do |s|
-  source_files = "**/*.{m,mm,cpp,h}"
-  header_search_paths = [
-    "\"$(PODS_ROOT)/boost\"",
-    "\"$(PODS_TARGET_SRCROOT)/../../../\"",
-    "\"$(PODS_ROOT)/RCT-Folly\"",
-  ]
-
   s.name                   = "React-graphics"
   s.version                = version
   s.summary                = "Fabric for React Native."
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
-  s.source_files           = source_files
+  s.source_files           = "**/*.{m,mm,cpp,h}"
   s.exclude_files          = "tests",
                              "platform/android",
                              "platform/cxx"
   s.header_dir             = "react/renderer/graphics"
+  s.pod_target_xcconfig  = { "USE_HEADERMAP" => "NO", "HEADER_SEARCH_PATHS" => "\"$(PODS_ROOT)/boost\" \"$(PODS_TARGET_SRCROOT)/../../../\" \"$(PODS_ROOT)/RCT-Folly\"" }
 
-  if ENV['USE_FRAMEWORKS']
-    s.module_name            = "React_graphics"
-    s.header_mappings_dir  =  File.absolute_path("../../..")
-    header_search_paths = header_search_paths + ["\"$(PODS_TARGET_SRCROOT)/platform/ios\""]
-  end
-
-  s.pod_target_xcconfig  = { "USE_HEADERMAP" => "NO", "HEADER_SEARCH_PATHS" => header_search_paths.join(" ") }
-
-  s.dependency "glog"
   s.dependency "RCT-Folly/Fabric", folly_version
   s.dependency "React-Core/Default", version
 end
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/RectangleEdges.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/RectangleEdges.h
index 4452475..2deae70 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/RectangleEdges.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/RectangleEdges.h
@@ -44,7 +44,7 @@ struct RectangleEdges {
 };
 
 template <typename T>
-RectangleEdges<T> const RectangleEdges<T>::ZERO = {};
+constexpr RectangleEdges<T> const RectangleEdges<T>::ZERO = {};
 
 template <typename T>
 RectangleEdges<T> operator+(
@@ -83,16 +83,6 @@ inline Rect insetBy(Rect const &rect, EdgeInsets const &insets) noexcept {
        rect.size.height - insets.top - insets.bottom}};
 }
 
-/*
- * Adjusts a rectangle by the given edge outsets.
- */
-inline Rect outsetBy(Rect const &rect, EdgeInsets const &outsets) noexcept {
-  return Rect{
-      {rect.origin.x - outsets.left, rect.origin.y - outsets.top},
-      {rect.size.width + outsets.left + outsets.right,
-       rect.size.height + outsets.top + outsets.bottom}};
-}
-
 } // namespace react
 } // namespace facebook
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/Transform.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/Transform.h
index 97bd076..50a7016 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/Transform.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/Transform.h
@@ -12,10 +12,7 @@
 
 #include <folly/Hash.h>
 #include <react/renderer/graphics/Float.h>
-#include <react/renderer/graphics/Point.h>
-#include <react/renderer/graphics/RectangleEdges.h>
-#include <react/renderer/graphics/Size.h>
-#include <react/renderer/graphics/Vector.h>
+#include <react/renderer/graphics/Geometry.h>
 
 #ifdef ANDROID
 #include <folly/dynamic.h>
@@ -199,7 +196,7 @@ Size operator*(Size const &size, Transform const &transform);
 Rect operator*(Rect const &rect, Transform const &transform);
 
 /*
- * Applies transformation to the given EdgeInsets.
+ * Applies tranformation to the given EdgeInsets.
  * ONLY SUPPORTS scale transformation.
  */
 EdgeInsets operator*(EdgeInsets const &edgeInsets, Transform const &transform);
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/conversions.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/conversions.h
index e8a016d..8e28bdc 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/conversions.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/conversions.h
@@ -7,21 +7,255 @@
 
 #pragma once
 
-#include <react/renderer/core/graphicsConversions.h>
-
-// This file belongs to the React-graphics module.
-// This file also used to have a reference to two files that are located in the
-// react/renderer/core folder. That folder belongs to a module that is called
-// React-Fabric.
-// The React-Fabric module declares an explicit dependency on
-// React-graphics. Including those files in a React-graphics' file created a
-// circular dependency because React-Fabric was explicitly depending on
-// React-graphics, which was implicitly depending on React-Fabric. We break that
-// dependency by moving the old `graphics/conversions.h` file to the
-// React-Fabric module and renaming it `core/graphicsConversions.h`.
-
-#warning \
-    "[DEPRECATION] `graphics/conversions.h` is deprecated and will be removed in the future. \
-    If this warning appears due to a library, please open an issue in that library, and ask for an update. \
-    Please, replace the `#include <react/renderer/graphics/conversions.h>` statements \
-    with `#include <react/renderer/core/graphicsConversions.h>`."
+#include <butter/map.h>
+#include <glog/logging.h>
+#include <react/debug/react_native_assert.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/RawProps.h>
+#include <react/renderer/graphics/Color.h>
+#include <react/renderer/graphics/Geometry.h>
+#include <react/renderer/graphics/PlatformColorParser.h>
+
+namespace facebook {
+namespace react {
+
+#pragma mark - Color
+
+inline void fromRawValue(
+    const PropsParserContext &context,
+    const RawValue &value,
+    SharedColor &result) {
+  ColorComponents colorComponents = {0, 0, 0, 0};
+
+  if (value.hasType<int>()) {
+    auto argb = (int64_t)value;
+    auto ratio = 255.f;
+    colorComponents.alpha = ((argb >> 24) & 0xFF) / ratio;
+    colorComponents.red = ((argb >> 16) & 0xFF) / ratio;
+    colorComponents.green = ((argb >> 8) & 0xFF) / ratio;
+    colorComponents.blue = (argb & 0xFF) / ratio;
+  } else if (value.hasType<std::vector<float>>()) {
+    auto items = (std::vector<float>)value;
+    auto length = items.size();
+    react_native_assert(length == 3 || length == 4);
+    colorComponents.red = items.at(0);
+    colorComponents.green = items.at(1);
+    colorComponents.blue = items.at(2);
+    colorComponents.alpha = length == 4 ? items.at(3) : 1.0f;
+  } else {
+    colorComponents = parsePlatformColor(context, value);
+  }
+
+  result = colorFromComponents(colorComponents);
+}
+
+#ifdef ANDROID
+
+inline int toAndroidRepr(const SharedColor &color) {
+  ColorComponents components = colorComponentsFromColor(color);
+  auto ratio = 255.f;
+  return (
+      ((int)round(components.alpha * ratio) & 0xff) << 24 |
+      ((int)round(components.red * ratio) & 0xff) << 16 |
+      ((int)round(components.green * ratio) & 0xff) << 8 |
+      ((int)round(components.blue * ratio) & 0xff));
+}
+
+#endif
+
+inline std::string toString(const SharedColor &value) {
+  ColorComponents components = colorComponentsFromColor(value);
+  auto ratio = 255.f;
+  return "rgba(" + folly::to<std::string>(round(components.red * ratio)) +
+      ", " + folly::to<std::string>(round(components.green * ratio)) + ", " +
+      folly::to<std::string>(round(components.blue * ratio)) + ", " +
+      folly::to<std::string>(round(components.alpha * ratio)) + ")";
+}
+
+#pragma mark - Geometry
+
+inline void fromRawValue(
+    const PropsParserContext &context,
+    const RawValue &value,
+    Point &result) {
+  if (value.hasType<butter::map<std::string, Float>>()) {
+    auto map = (butter::map<std::string, Float>)value;
+    for (const auto &pair : map) {
+      if (pair.first == "x") {
+        result.x = pair.second;
+      } else if (pair.first == "y") {
+        result.y = pair.second;
+      }
+    }
+    return;
+  }
+
+  react_native_assert(value.hasType<std::vector<Float>>());
+  if (value.hasType<std::vector<Float>>()) {
+    auto array = (std::vector<Float>)value;
+    react_native_assert(array.size() == 2);
+    if (array.size() >= 2) {
+      result = {array.at(0), array.at(1)};
+    } else {
+      result = {0, 0};
+      LOG(ERROR) << "Unsupported Point vector size: " << array.size();
+    }
+  } else {
+    LOG(ERROR) << "Unsupported Point type";
+  }
+}
+
+inline void fromRawValue(
+    const PropsParserContext &context,
+    const RawValue &value,
+    Size &result) {
+  if (value.hasType<butter::map<std::string, Float>>()) {
+    auto map = (butter::map<std::string, Float>)value;
+    for (const auto &pair : map) {
+      if (pair.first == "width") {
+        result.width = pair.second;
+      } else if (pair.first == "height") {
+        result.height = pair.second;
+      } else {
+        LOG(ERROR) << "Unsupported Size map key: " << pair.first;
+        react_native_assert(false);
+      }
+    }
+    return;
+  }
+
+  react_native_assert(value.hasType<std::vector<Float>>());
+  if (value.hasType<std::vector<Float>>()) {
+    auto array = (std::vector<Float>)value;
+    react_native_assert(array.size() == 2);
+    if (array.size() >= 2) {
+      result = {array.at(0), array.at(1)};
+    } else {
+      result = {0, 0};
+      LOG(ERROR) << "Unsupported Size vector size: " << array.size();
+    }
+  } else {
+    LOG(ERROR) << "Unsupported Size type";
+  }
+}
+
+inline void fromRawValue(
+    const PropsParserContext &context,
+    const RawValue &value,
+    EdgeInsets &result) {
+  if (value.hasType<Float>()) {
+    auto number = (Float)value;
+    result = {number, number, number, number};
+    return;
+  }
+
+  if (value.hasType<butter::map<std::string, Float>>()) {
+    auto map = (butter::map<std::string, Float>)value;
+    for (const auto &pair : map) {
+      if (pair.first == "top") {
+        result.top = pair.second;
+      } else if (pair.first == "left") {
+        result.left = pair.second;
+      } else if (pair.first == "bottom") {
+        result.bottom = pair.second;
+      } else if (pair.first == "right") {
+        result.right = pair.second;
+      } else {
+        LOG(ERROR) << "Unsupported EdgeInsets map key: " << pair.first;
+        react_native_assert(false);
+      }
+    }
+    return;
+  }
+
+  react_native_assert(value.hasType<std::vector<Float>>());
+  if (value.hasType<std::vector<Float>>()) {
+    auto array = (std::vector<Float>)value;
+    react_native_assert(array.size() == 4);
+    if (array.size() >= 4) {
+      result = {array.at(0), array.at(1), array.at(2), array.at(3)};
+    } else {
+      result = {0, 0, 0, 0};
+      LOG(ERROR) << "Unsupported EdgeInsets vector size: " << array.size();
+    }
+  } else {
+    LOG(ERROR) << "Unsupported EdgeInsets type";
+  }
+}
+
+inline void fromRawValue(
+    const PropsParserContext &context,
+    const RawValue &value,
+    CornerInsets &result) {
+  if (value.hasType<Float>()) {
+    auto number = (Float)value;
+    result = {number, number, number, number};
+    return;
+  }
+
+  if (value.hasType<butter::map<std::string, Float>>()) {
+    auto map = (butter::map<std::string, Float>)value;
+    for (const auto &pair : map) {
+      if (pair.first == "topLeft") {
+        result.topLeft = pair.second;
+      } else if (pair.first == "topRight") {
+        result.topRight = pair.second;
+      } else if (pair.first == "bottomLeft") {
+        result.bottomLeft = pair.second;
+      } else if (pair.first == "bottomRight") {
+        result.bottomRight = pair.second;
+      } else {
+        LOG(ERROR) << "Unsupported CornerInsets map key: " << pair.first;
+        react_native_assert(false);
+      }
+    }
+    return;
+  }
+
+  react_native_assert(value.hasType<std::vector<Float>>());
+  if (value.hasType<std::vector<Float>>()) {
+    auto array = (std::vector<Float>)value;
+    react_native_assert(array.size() == 4);
+    if (array.size() >= 4) {
+      result = {array.at(0), array.at(1), array.at(2), array.at(3)};
+    } else {
+      LOG(ERROR) << "Unsupported CornerInsets vector size: " << array.size();
+    }
+  }
+
+  // Error case - we should only here if all other supported cases fail
+  // In dev we would crash on assert before this point
+  result = {0, 0, 0, 0};
+  LOG(ERROR) << "Unsupported CornerInsets type";
+}
+
+inline std::string toString(const Point &point) {
+  return "{" + folly::to<std::string>(point.x) + ", " +
+      folly::to<std::string>(point.y) + "}";
+}
+
+inline std::string toString(const Size &size) {
+  return "{" + folly::to<std::string>(size.width) + ", " +
+      folly::to<std::string>(size.height) + "}";
+}
+
+inline std::string toString(const Rect &rect) {
+  return "{" + toString(rect.origin) + ", " + toString(rect.size) + "}";
+}
+
+inline std::string toString(const EdgeInsets &edgeInsets) {
+  return "{" + folly::to<std::string>(edgeInsets.left) + ", " +
+      folly::to<std::string>(edgeInsets.top) + ", " +
+      folly::to<std::string>(edgeInsets.right) + ", " +
+      folly::to<std::string>(edgeInsets.bottom) + "}";
+}
+
+inline std::string toString(const CornerInsets &cornerInsets) {
+  return "{" + folly::to<std::string>(cornerInsets.topLeft) + ", " +
+      folly::to<std::string>(cornerInsets.topRight) + ", " +
+      folly::to<std::string>(cornerInsets.bottomLeft) + ", " +
+      folly::to<std::string>(cornerInsets.bottomRight) + "}";
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/PlatformColorParser.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/PlatformColorParser.h
index d2b485e..be78b82 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/PlatformColorParser.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/PlatformColorParser.h
@@ -8,6 +8,7 @@
 #pragma once
 
 #include <fbjni/fbjni.h>
+#include <react/jni/ReadableNativeMap.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/core/RawProps.h>
 #include <react/renderer/graphics/ColorComponents.h>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/Color.cpp b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/cxx/react/renderer/graphics/Color.cpp
similarity index 94%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/Color.cpp
rename to node_modules/react-native/ReactCommon/react/renderer/graphics/platform/cxx/react/renderer/graphics/Color.cpp
index 83de8a0..a56c546 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/Color.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/cxx/react/renderer/graphics/Color.cpp
@@ -26,7 +26,7 @@ SharedColor colorFromComponents(ColorComponents components) {
       ((int)round(components.blue * ratio) & 0xff)};
 }
 
-ColorComponents colorComponentsFromColor(SharedColor sharedColor) {
+ColorComponents colorComponentsFromColor(SharedColor const &sharedColor) {
   float ratio = 255;
   Color color = *sharedColor;
   return ColorComponents{
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/cxx/react/renderer/graphics/Color.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/cxx/react/renderer/graphics/Color.h
new file mode 100644
index 0000000..7de09df
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/cxx/react/renderer/graphics/Color.h
@@ -0,0 +1,80 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include <cmath>
+#include <functional>
+#include <limits>
+
+#include <react/renderer/graphics/ColorComponents.h>
+
+namespace facebook {
+namespace react {
+
+using Color = int;
+
+/*
+ * On Android, a color can be represented as 32 bits integer, so there is no
+ * need to instantiate complex color objects and then pass them as shared
+ * pointers. Hense instead of using shared_ptr, we use a simple wrapper class
+ * which provides a pointer-like interface.
+ */
+class SharedColor {
+ public:
+  static const Color UndefinedColor = std::numeric_limits<Color>::max();
+
+  SharedColor() : color_(UndefinedColor) {}
+
+  SharedColor(const SharedColor &sharedColor) : color_(sharedColor.color_) {}
+
+  SharedColor(Color color) : color_(color) {}
+
+  SharedColor &operator=(const SharedColor &sharedColor) {
+    color_ = sharedColor.color_;
+    return *this;
+  }
+
+  Color operator*() const {
+    return color_;
+  }
+
+  bool operator==(const SharedColor &otherColor) const {
+    return color_ == otherColor.color_;
+  }
+
+  bool operator!=(const SharedColor &otherColor) const {
+    return color_ != otherColor.color_;
+  }
+
+  operator bool() const {
+    return color_ != UndefinedColor;
+  }
+
+ private:
+  Color color_;
+};
+
+bool isColorMeaningful(SharedColor const &color) noexcept;
+SharedColor colorFromComponents(ColorComponents components);
+ColorComponents colorComponentsFromColor(SharedColor const &color);
+
+SharedColor clearColor();
+SharedColor blackColor();
+SharedColor whiteColor();
+
+} // namespace react
+} // namespace facebook
+
+namespace std {
+template <>
+struct hash<facebook::react::SharedColor> {
+  size_t operator()(const facebook::react::SharedColor &sharedColor) const {
+    return hash<decltype(*sharedColor)>{}(*sharedColor);
+  }
+};
+} // namespace std
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Color.cpp b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Color.cpp
new file mode 100644
index 0000000..61da5e2
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Color.cpp
@@ -0,0 +1,63 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "Color.h"
+#include <cassert>
+
+namespace facebook {
+namespace react {
+
+bool isColorMeaningful(SharedColor const &color) noexcept {
+  if (!color) {
+    return false;
+  }
+
+  return colorComponentsFromColor(color).alpha > 0;
+}
+
+SharedColor colorFromComponents(ColorComponents components) {
+  float ratio = 255;
+  return SharedColor(
+      ((int)round(components.alpha * ratio) & 0xff) << 24 |
+      ((int)round(components.red * ratio) & 0xff) << 16 |
+      ((int)round(components.green * ratio) & 0xff) << 8 |
+      ((int)round(components.blue * ratio) & 0xff));
+}
+
+ColorComponents colorComponentsFromColor(SharedColor sharedColor) {
+  if (!sharedColor) {
+    // Empty color object can be considered as `clear` (black, fully
+    // transparent) color.
+    return ColorComponents{0, 0, 0, 0};
+  }
+
+  float ratio = 255;
+  Color color = *sharedColor;
+  return ColorComponents{
+      (float)((color >> 16) & 0xff) / ratio,
+      (float)((color >> 8) & 0xff) / ratio,
+      (float)((color >> 0) & 0xff) / ratio,
+      (float)((color >> 24) & 0xff) / ratio};
+}
+
+SharedColor clearColor() {
+  static SharedColor color = colorFromComponents(ColorComponents{0, 0, 0, 0});
+  return color;
+}
+
+SharedColor blackColor() {
+  static SharedColor color = colorFromComponents(ColorComponents{0, 0, 0, 1});
+  return color;
+}
+
+SharedColor whiteColor() {
+  static SharedColor color = colorFromComponents(ColorComponents{1, 1, 1, 1});
+  return color;
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/Color.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Color.h
similarity index 70%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/Color.h
rename to node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Color.h
index 4bb331b..0a50fa4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/Color.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Color.h
@@ -8,29 +8,32 @@
 #pragma once
 
 #include <cmath>
-#include <functional>
-#include <limits>
+#include <optional>
 
+#include <folly/Hash.h>
 #include <react/renderer/graphics/ColorComponents.h>
+#include <react/renderer/graphics/Float.h>
 
-namespace facebook::react {
+namespace facebook {
+namespace react {
 
 using Color = int32_t;
 
-/*
- * On Android, a color can be represented as 32 bits integer, so there is no
- * need to instantiate complex color objects and then pass them as shared
- * pointers. Hense instead of using shared_ptr, we use a simple wrapper class
- * which provides a pointer-like interface.
- */
 class SharedColor {
  public:
   static const Color UndefinedColor = std::numeric_limits<Color>::max();
 
   SharedColor() : color_(UndefinedColor) {}
 
+  SharedColor(const SharedColor &sharedColor) : color_(sharedColor.color_) {}
+
   SharedColor(Color color) : color_(color) {}
 
+  SharedColor &operator=(const SharedColor &sharedColor) {
+    color_ = sharedColor.color_;
+    return *this;
+  }
+
   Color operator*() const {
     return color_;
   }
@@ -59,11 +62,12 @@ SharedColor clearColor();
 SharedColor blackColor();
 SharedColor whiteColor();
 
-} // namespace facebook::react
+} // namespace react
+} // namespace facebook
 
 template <>
 struct std::hash<facebook::react::SharedColor> {
-  size_t operator()(facebook::react::SharedColor color) const {
-    return std::hash<decltype(*color)>{}(*color);
+  std::size_t operator()(facebook::react::SharedColor const &color) const {
+    return hash<int>()(*color);
   }
 };
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/Float.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Float.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/Float.h
rename to node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/Float.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/PlatformColorParser.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/PlatformColorParser.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/PlatformColorParser.h
rename to node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/PlatformColorParser.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/RCTPlatformColorUtils.h b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/RCTPlatformColorUtils.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/RCTPlatformColorUtils.h
rename to node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/RCTPlatformColorUtils.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/RCTPlatformColorUtils.mm b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/RCTPlatformColorUtils.mm
similarity index 98%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/RCTPlatformColorUtils.mm
rename to node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/RCTPlatformColorUtils.mm
index 1d566ac..f11b2af 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/react/renderer/graphics/RCTPlatformColorUtils.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/ios/RCTPlatformColorUtils.mm
@@ -8,6 +8,7 @@
 #import "RCTPlatformColorUtils.h"
 
 #import <Foundation/Foundation.h>
+#import <React/RCTUtils.h>
 #import <UIKit/UIKit.h>
 
 #include <string>
@@ -179,7 +180,7 @@
 static inline facebook::react::ColorComponents _ColorComponentsFromUIColor(UIColor *color)
 {
   CGFloat rgba[4];
-  [color getRed:&rgba[0] green:&rgba[1] blue:&rgba[2] alpha:&rgba[3]];
+  RCTGetRGBAColorComponents(color.CGColor, rgba);
   return {(float)rgba[0], (float)rgba[1], (float)rgba[2], (float)rgba[3]};
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/BUCK b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/BUCK
index 2bb98e0..fa5c067 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/BUCK
@@ -13,8 +13,6 @@ load(
     "subdir_glob",
 )
 
-oncall("react_native")
-
 APPLE_COMPILER_FLAGS = get_apple_compiler_flags()
 
 rn_xplat_cxx_library(
@@ -51,7 +49,7 @@ rn_xplat_cxx_library(
     ios_exported_headers = subdir_glob(
         [
             ("", "*.h"),
-            ("platform/ios/react/renderer/imagemanager", "RCTImagePrimitivesConversions.h"),
+            ("platform/ios", "RCTImagePrimitivesConversions.h"),
         ],
         prefix = "react/renderer/imagemanager",
     ),
@@ -63,7 +61,7 @@ rn_xplat_cxx_library(
     ios_headers = subdir_glob(
         [
             ("", "*.h"),
-            ("platform/ios/react/renderer/imagemanager", "**/*.h"),
+            ("platform/ios", "**/*.h"),
         ],
         prefix = "",
     ),
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/ImageRequest.h b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/ImageRequest.h
index f453377..7d46def 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/ImageRequest.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/ImageRequest.h
@@ -12,7 +12,6 @@
 #include <react/renderer/imagemanager/ImageResponseObserverCoordinator.h>
 #include <react/renderer/imagemanager/ImageTelemetry.h>
 #include <react/renderer/imagemanager/primitives.h>
-#include <react/utils/SharedFunction.h>
 
 namespace facebook {
 namespace react {
@@ -31,24 +30,24 @@ class ImageRequest final {
    */
   ImageRequest(
       ImageSource imageSource,
-      std::shared_ptr<const ImageTelemetry> telemetry,
-      SharedFunction<> cancelationFunction);
+      std::shared_ptr<const ImageTelemetry> telemetry);
 
   /*
    * The move constructor.
    */
-  ImageRequest(ImageRequest &&other) noexcept = default;
+  ImageRequest(ImageRequest &&other) noexcept;
 
   /*
    * `ImageRequest` does not support copying by design.
    */
   ImageRequest(const ImageRequest &other) = delete;
 
-  /*
-   * Calls cancel function if one is defined. Should be when downloading
-   * image isn't needed anymore. E.g. <ImageView /> was removed.
+  ~ImageRequest();
+
+  /**
+   * Set cancelation function.
    */
-  void cancel() const;
+  void setCancelationFunction(std::function<void(void)> cancelationFunction);
 
   /*
    * Returns the Image Source associated with the request.
@@ -87,14 +86,14 @@ class ImageRequest final {
   std::shared_ptr<const ImageTelemetry> telemetry_{};
 
   /*
-   * Event coordinator associated with the request.
+   * Event coordinator associated with the reqest.
    */
   std::shared_ptr<const ImageResponseObserverCoordinator> coordinator_{};
 
   /*
-   * Function we can call to cancel image request.
+   * Function we can call to cancel image request (see destructor).
    */
-  SharedFunction<> cancelRequest_;
+  std::function<void(void)> cancelRequest_;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageManager.cpp
index d9a3821..30bc153 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageManager.cpp
@@ -24,7 +24,7 @@ ImageRequest ImageManager::requestImage(
     const ImageSource &imageSource,
     SurfaceId /*surfaceId*/) const {
   // Not implemented.
-  return {imageSource, nullptr, {}};
+  return {imageSource, nullptr};
 }
 
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageRequest.cpp b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageRequest.cpp
index 6a5c134..ce53a1b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageRequest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/cxx/react/renderer/imagemanager/ImageRequest.cpp
@@ -13,11 +13,19 @@ namespace facebook::react {
 
 ImageRequest::ImageRequest(
     ImageSource imageSource,
-    std::shared_ptr<const ImageTelemetry> telemetry,
-    SharedFunction<> cancelationFunction)
-    : imageSource_(std::move(imageSource)),
-      telemetry_(std::move(telemetry)),
-      cancelRequest_(std::move(cancelationFunction)) {
+    std::shared_ptr<const ImageTelemetry> telemetry)
+    : imageSource_(std::move(imageSource)), telemetry_(std::move(telemetry)) {
+  // Not implemented.
+}
+
+ImageRequest::ImageRequest(ImageRequest &&other) noexcept
+    : imageSource_(std::move(other.imageSource_)),
+      telemetry_(std::move(other.telemetry_)),
+      coordinator_(std::move(other.coordinator_)) {
+  // Not implemented.
+}
+
+ImageRequest::~ImageRequest() {
   // Not implemented.
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/ImageManager.mm b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/ImageManager.mm
similarity index 96%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/ImageManager.mm
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/ImageManager.mm
index 637f0d9..9b833ae 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/ImageManager.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/ImageManager.mm
@@ -5,7 +5,7 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <react/renderer/imagemanager/ImageManager.h>
+#include "ImageManager.h"
 
 #import <React/RCTImageLoaderWithAttributionProtocol.h>
 #import <React/RCTUtils.h>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/ImageRequest.cpp b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/ImageRequest.cpp
similarity index 55%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/ImageRequest.cpp
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/ImageRequest.cpp
index 281c258..1998d29 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/ImageRequest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/ImageRequest.cpp
@@ -5,23 +5,37 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#include <react/renderer/imagemanager/ImageRequest.h>
+#include "ImageRequest.h"
 
 namespace facebook {
 namespace react {
 
 ImageRequest::ImageRequest(
     ImageSource imageSource,
-    std::shared_ptr<const ImageTelemetry> telemetry,
-    SharedFunction<> cancelationFunction)
-    : imageSource_(std::move(imageSource)),
-      telemetry_(std::move(telemetry)),
-      cancelRequest_(std::move(cancelationFunction)) {
+    std::shared_ptr<const ImageTelemetry> telemetry)
+    : imageSource_(std::move(imageSource)), telemetry_(std::move(telemetry)) {
   coordinator_ = std::make_shared<ImageResponseObserverCoordinator>();
 }
 
-void ImageRequest::cancel() const {
-  cancelRequest_();
+ImageRequest::ImageRequest(ImageRequest &&other) noexcept
+    : imageSource_(std::move(other.imageSource_)),
+      telemetry_(std::move(other.telemetry_)),
+      coordinator_(std::move(other.coordinator_)) {
+  other.coordinator_ = nullptr;
+  other.cancelRequest_ = nullptr;
+  other.telemetry_ = nullptr;
+  other.imageSource_ = {};
+}
+
+ImageRequest::~ImageRequest() {
+  if (cancelRequest_) {
+    cancelRequest_();
+  }
+}
+
+void ImageRequest::setCancelationFunction(
+    std::function<void(void)> cancelationFunction) {
+  cancelRequest_ = cancelationFunction;
 }
 
 const ImageSource &ImageRequest::getImageSource() const {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManager.h b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManager.h
similarity index 95%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManager.h
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManager.h
index da6223a..88130fe 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManager.h
@@ -7,7 +7,7 @@
 
 #import <UIKit/UIKit.h>
 
-#import "RCTImageManagerProtocol.h"
+#import <RCTImageManagerProtocol.h>
 
 NS_ASSUME_NONNULL_BEGIN
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManager.mm b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManager.mm
similarity index 97%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManager.mm
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManager.mm
index 0366076..1f4b4ea 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManager.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManager.mm
@@ -48,11 +48,13 @@ - (ImageRequest)requestImage:(ImageSource)imageSource surfaceId:(SurfaceId)surfa
     telemetry = nullptr;
   }
 
-  auto sharedCancelationFunction = SharedFunction<>();
-  auto imageRequest = ImageRequest(imageSource, telemetry, sharedCancelationFunction);
+  auto imageRequest = ImageRequest(imageSource, telemetry);
   auto weakObserverCoordinator =
       (std::weak_ptr<const ImageResponseObserverCoordinator>)imageRequest.getSharedObserverCoordinator();
 
+  auto sharedCancelationFunction = SharedFunction<>();
+  imageRequest.setCancelationFunction(sharedCancelationFunction);
+
   /*
    * Even if an image is being loaded asynchronously on some other background thread, some other preparation
    * work (such as creating an `NSURLRequest` object and some obscure logic inside `RCTImageLoader`) can take a couple
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManagerProtocol.h b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManagerProtocol.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImageManagerProtocol.h
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImageManagerProtocol.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImagePrimitivesConversions.h b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImagePrimitivesConversions.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTImagePrimitivesConversions.h
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTImagePrimitivesConversions.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTSyncImageManager.h b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTSyncImageManager.h
similarity index 95%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTSyncImageManager.h
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTSyncImageManager.h
index 395f65b..c0ef180 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTSyncImageManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTSyncImageManager.h
@@ -7,7 +7,7 @@
 
 #import <UIKit/UIKit.h>
 
-#import "RCTImageManagerProtocol.h"
+#import <RCTImageManagerProtocol.h>
 
 NS_ASSUME_NONNULL_BEGIN
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTSyncImageManager.mm b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTSyncImageManager.mm
similarity index 96%
rename from node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTSyncImageManager.mm
rename to node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTSyncImageManager.mm
index 71a1e88..dd7c993 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/react/renderer/imagemanager/RCTSyncImageManager.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/RCTSyncImageManager.mm
@@ -37,11 +37,13 @@ - (instancetype)initWithImageLoader:(id<RCTImageLoaderWithAttributionProtocol>)i
 - (ImageRequest)requestImage:(ImageSource)imageSource surfaceId:(SurfaceId)surfaceId
 {
   auto telemetry = std::make_shared<ImageTelemetry>(surfaceId);
-  auto sharedCancelationFunction = SharedFunction<>();
-  auto imageRequest = ImageRequest(imageSource, telemetry, sharedCancelationFunction);
+  auto imageRequest = ImageRequest(imageSource, telemetry);
   auto weakObserverCoordinator =
       (std::weak_ptr<const ImageResponseObserverCoordinator>)imageRequest.getSharedObserverCoordinator();
 
+  auto sharedCancelationFunction = SharedFunction<>();
+  imageRequest.setCancelationFunction(sharedCancelationFunction);
+
   dispatch_group_t imageWaitGroup = dispatch_group_create();
 
   dispatch_group_enter(imageWaitGroup);
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/React-ImageManager.podspec b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/React-ImageManager.podspec
deleted file mode 100644
index 1606c5e..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/platform/ios/React-ImageManager.podspec
+++ /dev/null
@@ -1,69 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "..", "..", "..", "..", "..", "..", "package.json")))
-version = package['version']
-
-source = { :git => 'https://github.com/facebook/react-native.git' }
-if version == '1000.0.0'
-  # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
-  source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
-else
-  source[:tag] = "v#{version}"
-end
-
-folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
-boost_compiler_flags = '-Wno-documentation'
-
-Pod::Spec.new do |s|
-  source_files = "**/*.{m,mm,cpp,h}"
-  header_search_paths = [
-    "\"$(PODS_ROOT)/boost\"",
-    "\"$(PODS_TARGET_SRCROOT)/../../../\"",
-    "\"$(PODS_TARGET_SRCROOT)\"",
-    "\"$(PODS_ROOT)/RCT-Folly\"",
-  ]
-
-  s.name                   = "React-ImageManager"
-  s.version                = version
-  s.summary                = "Fabric for React Native."
-  s.homepage               = "https://reactnative.dev/"
-  s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
-  s.platforms              = { :ios => "12.4" }
-  s.source                 = source
-  s.compiler_flags         = folly_compiler_flags + ' ' + boost_compiler_flags
-  s.source_files           = source_files
-  s.header_dir             = "react/renderer/imagemanager"
-
-  if ENV['USE_FRAMEWORKS']
-    s.module_name            = "React_ImageManager"
-    s.header_mappings_dir  = File.absolute_path("./")
-    header_search_paths = header_search_paths + [
-      "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\"",
-      "\"$(PODS_ROOT)/DoubleConversion\"",
-      "\"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers\"",
-      "\"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\"",
-      "\"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\"",
-      "\"${PODS_CONFIGURATION_BUILD_DIR}/React-utils/React_utils.framework/Headers\"",
-    ]
-  end
-
-  s.pod_target_xcconfig  = {
-    "USE_HEADERMAP" => "NO",
-    "HEADER_SEARCH_PATHS" => header_search_paths.join(" "),
-    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17"
-  }
-
-  s.dependency "RCT-Folly/Fabric"
-  s.dependency "React-Fabric"
-  s.dependency "React-Core/Default"
-  s.dependency "React-RCTImage"
-  s.dependency "React-debug"
-  s.dependency "React-utils"
-  s.dependency "glog"
-end
diff --git a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/primitives.h b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/primitives.h
index a818b62..0d9ec9f 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/imagemanager/primitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/imagemanager/primitives.h
@@ -10,8 +10,7 @@
 #include <string>
 #include <vector>
 
-#include <react/renderer/graphics/Float.h>
-#include <react/renderer/graphics/Size.h>
+#include <react/renderer/graphics/Geometry.h>
 
 namespace facebook {
 namespace react {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mapbuffer/MapBuffer.h b/node_modules/react-native/ReactCommon/react/renderer/mapbuffer/MapBuffer.h
index a6af6c8..b4088f1 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mapbuffer/MapBuffer.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/mapbuffer/MapBuffer.h
@@ -111,12 +111,10 @@ class MapBuffer {
 
   MapBuffer(MapBuffer const &buffer) = delete;
 
-  MapBuffer &operator=(const MapBuffer &other) = delete;
+  MapBuffer &operator=(MapBuffer other) = delete;
 
   MapBuffer(MapBuffer &&buffer) = default;
 
-  MapBuffer &operator=(MapBuffer &&other) = default;
-
   int32_t getInt(MapBuffer::Key key) const;
 
   bool getBool(MapBuffer::Key key) const;
@@ -138,7 +136,7 @@ class MapBuffer {
 
  private:
   // Buffer and its size
-  std::vector<uint8_t> bytes_;
+  std::vector<uint8_t> const bytes_;
 
   // amount of items in the MapBuffer
   uint16_t count_ = 0;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/Differentiator.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/Differentiator.cpp
index 873d62f..aae7253 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/Differentiator.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/Differentiator.cpp
@@ -503,7 +503,7 @@ static void updateMatchedPairSubtrees(
  *
  * Here we have (and need) knowledge of whether a node was found during
  * in-order traversal, or out-of-order via a map lookup. Nodes are only REMOVEd
- * or INSERTTed when they are encountered via in-order-traversal, to ensure
+ * or INSERTed when they are encountered via in-order-traversal, to ensure
  * correct ordering of INSERT and REMOVE mutations.
  */
 static void updateMatchedPair(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.cpp
index 88242a7..bbd02b4 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.cpp
@@ -33,7 +33,7 @@ SurfaceId MountingCoordinator::getSurfaceId() const {
   return surfaceId_;
 }
 
-void MountingCoordinator::push(ShadowTreeRevision revision) const {
+void MountingCoordinator::push(ShadowTreeRevision const &revision) const {
   {
     std::lock_guard<std::mutex> lock(mutex_);
 
@@ -41,7 +41,7 @@ void MountingCoordinator::push(ShadowTreeRevision revision) const {
         !lastRevision_.has_value() || revision.number != lastRevision_->number);
 
     if (!lastRevision_.has_value() || lastRevision_->number < revision.number) {
-      lastRevision_ = std::move(revision);
+      lastRevision_ = revision;
     }
   }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.h b/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.h
index 188c6fb..d268518 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/MountingCoordinator.h
@@ -88,7 +88,7 @@ class MountingCoordinator final {
  private:
   friend class ShadowTree;
 
-  void push(ShadowTreeRevision revision) const;
+  void push(ShadowTreeRevision const &revision) const;
 
   /*
    * Revokes the last pushed `ShadowTreeRevision`.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.cpp
index 0b9106b..908b9bc 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.cpp
@@ -269,7 +269,7 @@ void ShadowTree::setCommitMode(CommitMode commitMode) const {
   auto revision = ShadowTreeRevision{};
 
   {
-    std::unique_lock lock(commitMutex_);
+    std::unique_lock<butter::shared_mutex> lock(commitMutex_);
     if (commitMode_ == commitMode) {
       return;
     }
@@ -281,12 +281,12 @@ void ShadowTree::setCommitMode(CommitMode commitMode) const {
   // initial revision never contains any commits so mounting it here is
   // incorrect
   if (commitMode == CommitMode::Normal && revision.number != INITIAL_REVISION) {
-    mount(revision, true);
+    mount(revision);
   }
 }
 
 CommitMode ShadowTree::getCommitMode() const {
-  std::shared_lock lock(commitMutex_);
+  std::shared_lock<butter::shared_mutex> lock(commitMutex_);
   return commitMode_;
 }
 
@@ -329,7 +329,7 @@ CommitStatus ShadowTree::tryCommit(
 
   {
     // Reading `currentRevision_` in shared manner.
-    std::shared_lock lock(commitMutex_);
+    std::shared_lock<butter::shared_mutex> lock(commitMutex_);
     commitMode = commitMode_;
     oldRevision = currentRevision_;
   }
@@ -351,10 +351,6 @@ CommitStatus ShadowTree::tryCommit(
     }
   }
 
-  // Run commit hooks.
-  newRootShadowNode = delegate_.shadowTreeWillCommit(
-      *this, oldRootShadowNode, newRootShadowNode);
-
   // Layout nodes.
   std::vector<LayoutableShadowNode const *> affectedLayoutableNodes{};
   affectedLayoutableNodes.reserve(1024);
@@ -370,7 +366,7 @@ CommitStatus ShadowTree::tryCommit(
 
   {
     // Updating `currentRevision_` in unique manner if it hasn't changed.
-    std::unique_lock lock(commitMutex_);
+    std::unique_lock<butter::shared_mutex> lock(commitMutex_);
 
     if (currentRevision_.number != oldRevision.number) {
       return CommitStatus::Failed;
@@ -378,6 +374,9 @@ CommitStatus ShadowTree::tryCommit(
 
     auto newRevisionNumber = oldRevision.number + 1;
 
+    newRootShadowNode = delegate_.shadowTreeWillCommit(
+        *this, oldRootShadowNode, newRootShadowNode);
+
     if (!newRootShadowNode ||
         (commitOptions.shouldYield && commitOptions.shouldYield())) {
       return CommitStatus::Cancelled;
@@ -394,8 +393,8 @@ CommitStatus ShadowTree::tryCommit(
     telemetry.didCommit();
     telemetry.setRevisionNumber(static_cast<int>(newRevisionNumber));
 
-    newRevision = ShadowTreeRevision{
-        std::move(newRootShadowNode), newRevisionNumber, telemetry};
+    newRevision =
+        ShadowTreeRevision{newRootShadowNode, newRevisionNumber, telemetry};
 
     currentRevision_ = newRevision;
   }
@@ -403,22 +402,20 @@ CommitStatus ShadowTree::tryCommit(
   emitLayoutEvents(affectedLayoutableNodes);
 
   if (commitMode == CommitMode::Normal) {
-    mount(std::move(newRevision), commitOptions.mountSynchronously);
+    mount(newRevision);
   }
 
   return CommitStatus::Succeeded;
 }
 
 ShadowTreeRevision ShadowTree::getCurrentRevision() const {
-  std::shared_lock lock(commitMutex_);
+  std::shared_lock<butter::shared_mutex> lock(commitMutex_);
   return currentRevision_;
 }
 
-void ShadowTree::mount(ShadowTreeRevision revision, bool mountSynchronously)
-    const {
-  mountingCoordinator_->push(std::move(revision));
-  delegate_.shadowTreeDidFinishTransaction(
-      mountingCoordinator_, mountSynchronously);
+void ShadowTree::mount(ShadowTreeRevision const &revision) const {
+  mountingCoordinator_->push(revision);
+  delegate_.shadowTreeDidFinishTransaction(*this, mountingCoordinator_);
 }
 
 void ShadowTree::commitEmptyTree() const {
@@ -430,8 +427,7 @@ void ShadowTree::commitEmptyTree() const {
                 /* .props = */ ShadowNodeFragment::propsPlaceholder(),
                 /* .children = */ ShadowNode::emptySharedShadowNodeSharedList(),
             });
-      },
-      {/* default commit options */});
+      });
 }
 
 void ShadowTree::emitLayoutEvents(
@@ -461,7 +457,7 @@ void ShadowTree::emitLayoutEvents(
 }
 
 void ShadowTree::notifyDelegatesOfUpdates() const {
-  delegate_.shadowTreeDidFinishTransaction(mountingCoordinator_, true);
+  delegate_.shadowTreeDidFinishTransaction(*this, mountingCoordinator_);
 }
 
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.h b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.h
index ec88f9e..5951c20 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTree.h
@@ -7,6 +7,7 @@
 
 #pragma once
 
+#include <butter/mutex.h>
 #include <memory>
 
 #include <react/renderer/components/root/RootComponentDescriptor.h>
@@ -58,13 +59,6 @@ class ShadowTree final {
   struct CommitOptions {
     bool enableStateReconciliation{false};
 
-    // Indicates if mounting will be triggered synchronously and React will
-    // not get a chance to interrupt painting.
-    // This should be set to `false` when a commit is coming from React. It
-    // will then let React run layout effects and apply updates before paint.
-    // For all other commits, should be true.
-    bool mountSynchronously{true};
-
     // Called during `tryCommit` phase. Returning true indicates current commit
     // should yield to the next commit.
     std::function<bool()> shouldYield;
@@ -102,14 +96,14 @@ class ShadowTree final {
    */
   CommitStatus tryCommit(
       const ShadowTreeCommitTransaction &transaction,
-      const CommitOptions &commitOptions) const;
+      const CommitOptions &commitOptions = {false}) const;
 
   /*
    * Calls `tryCommit` in a loop until it finishes successfully.
    */
   CommitStatus commit(
       const ShadowTreeCommitTransaction &transaction,
-      const CommitOptions &commitOptions) const;
+      const CommitOptions &commitOptions = {false}) const;
 
   /*
    * Returns a `ShadowTreeRevision` representing the momentary state of
@@ -134,14 +128,14 @@ class ShadowTree final {
  private:
   constexpr static ShadowTreeRevision::Number INITIAL_REVISION{0};
 
-  void mount(ShadowTreeRevision revision, bool mountSynchronously) const;
+  void mount(ShadowTreeRevision const &revision) const;
 
   void emitLayoutEvents(
       std::vector<LayoutableShadowNode const *> &affectedLayoutableNodes) const;
 
   SurfaceId const surfaceId_;
   ShadowTreeDelegate const &delegate_;
-  mutable std::shared_mutex commitMutex_;
+  mutable butter::shared_mutex commitMutex_;
   mutable CommitMode commitMode_{
       CommitMode::Normal}; // Protected by `commitMutex_`.
   mutable ShadowTreeRevision currentRevision_; // Protected by `commitMutex_`.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeDelegate.h b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeDelegate.h
index e363eda..4816733 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeDelegate.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeDelegate.h
@@ -34,8 +34,8 @@ class ShadowTreeDelegate {
    * Called right after Shadow Tree commit a new state of the tree.
    */
   virtual void shadowTreeDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator,
-      bool mountSynchronously) const = 0;
+      ShadowTree const &shadowTree,
+      MountingCoordinator::Shared const &mountingCoordinator) const = 0;
 
   virtual ~ShadowTreeDelegate() noexcept = default;
 };
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.cpp
index 365f0fb..53bc6f9 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.cpp
@@ -17,14 +17,14 @@ ShadowTreeRegistry::~ShadowTreeRegistry() {
 }
 
 void ShadowTreeRegistry::add(std::unique_ptr<ShadowTree> &&shadowTree) const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   registry_.emplace(shadowTree->getSurfaceId(), std::move(shadowTree));
 }
 
 std::unique_ptr<ShadowTree> ShadowTreeRegistry::remove(
     SurfaceId surfaceId) const {
-  std::unique_lock lock(mutex_);
+  std::unique_lock<butter::shared_mutex> lock(mutex_);
 
   auto iterator = registry_.find(surfaceId);
   if (iterator == registry_.end()) {
@@ -39,7 +39,7 @@ std::unique_ptr<ShadowTree> ShadowTreeRegistry::remove(
 bool ShadowTreeRegistry::visit(
     SurfaceId surfaceId,
     std::function<void(const ShadowTree &shadowTree)> const &callback) const {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   auto iterator = registry_.find(surfaceId);
 
@@ -52,15 +52,10 @@ bool ShadowTreeRegistry::visit(
 }
 
 void ShadowTreeRegistry::enumerate(
-    std::function<void(const ShadowTree &shadowTree, bool &stop)> const
-        &callback) const {
-  std::shared_lock lock(mutex_);
-  auto stop = false;
+    std::function<void(const ShadowTree &shadowTree)> const &callback) const {
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
   for (auto const &pair : registry_) {
-    callback(*pair.second, stop);
-    if (stop) {
-      return;
-    }
+    callback(*pair.second);
   }
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.h b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.h
index 60e4295..5e520f9 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowTreeRegistry.h
@@ -7,9 +7,8 @@
 
 #pragma once
 
-#include <shared_mutex>
-
 #include <butter/map.h>
+#include <butter/mutex.h>
 
 #include <react/renderer/core/ReactPrimitives.h>
 #include <react/renderer/mounting/ShadowTree.h>
@@ -55,15 +54,13 @@ class ShadowTreeRegistry final {
 
   /*
    * Enumerates all stored shadow trees.
-   * Set `stop` to `true` to interrupt the enumeration.
    * Can be called from any thread.
    */
   void enumerate(
-      std::function<void(const ShadowTree &shadowTree, bool &stop)> const
-          &callback) const;
+      std::function<void(const ShadowTree &shadowTree)> const &callback) const;
 
  private:
-  mutable std::shared_mutex mutex_;
+  mutable butter::shared_mutex mutex_;
   mutable butter::map<SurfaceId, std::unique_ptr<ShadowTree>>
       registry_; // Protected by `mutex_`.
 };
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowView.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowView.cpp
index 68a48d8..c7769bd 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowView.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/ShadowView.cpp
@@ -9,7 +9,6 @@
 
 #include <react/renderer/core/LayoutMetrics.h>
 #include <react/renderer/core/LayoutableShadowNode.h>
-#include <react/renderer/core/TraitCast.h>
 
 namespace facebook::react {
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/ShadowTreeLifeCycleTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/ShadowTreeLifeCycleTest.cpp
index 3837509..9d6c2dd 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/ShadowTreeLifeCycleTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/ShadowTreeLifeCycleTest.cpp
@@ -332,7 +332,7 @@ static void testShadowNodeTreeLifeCycleExtensiveFlatteningUnflattening(
 using namespace facebook::react;
 
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     stableBiggerTreeFewerIterationsOptimizedMovesFlattener) {
   testShadowNodeTreeLifeCycle(
       /* seed */ 0,
@@ -342,7 +342,7 @@ TEST(
 }
 
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     stableBiggerTreeFewerIterationsOptimizedMovesFlattener2) {
   testShadowNodeTreeLifeCycle(
       /* seed */ 1,
@@ -352,7 +352,7 @@ TEST(
 }
 
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     stableSmallerTreeMoreIterationsOptimizedMovesFlattener) {
   testShadowNodeTreeLifeCycle(
       /* seed */ 0,
@@ -362,7 +362,7 @@ TEST(
 }
 
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     unstableSmallerTreeFewerIterationsExtensiveFlatteningUnflattening) {
   testShadowNodeTreeLifeCycleExtensiveFlatteningUnflattening(
       /* seed */ 1337,
@@ -372,7 +372,7 @@ TEST(
 }
 
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     unstableBiggerTreeFewerIterationsExtensiveFlatteningUnflattening) {
   testShadowNodeTreeLifeCycleExtensiveFlatteningUnflattening(
       /* seed */ 1337,
@@ -382,7 +382,7 @@ TEST(
 }
 
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     unstableSmallerTreeMoreIterationsExtensiveFlatteningUnflattening) {
   testShadowNodeTreeLifeCycleExtensiveFlatteningUnflattening(
       /* seed */ 1337,
@@ -393,7 +393,7 @@ TEST(
 
 // failing test case found 4-25-2021
 TEST(
-    ShadowTreeLifecycleTest,
+    ShadowTreeLifecyleTest,
     unstableSmallerTreeMoreIterationsExtensiveFlatteningUnflattening_1167342011) {
   testShadowNodeTreeLifeCycleExtensiveFlatteningUnflattening(
       /* seed */ 1167342011,
@@ -404,7 +404,7 @@ TEST(
 
 // You may uncomment this - locally only! - to generate failing seeds.
 // TEST(
-//     ShadowTreeLifecycleTest,
+//     ShadowTreeLifecyleTest,
 //     unstableSmallerTreeMoreIterationsExtensiveFlatteningUnflatteningManyRandom)
 //     {
 //   std::random_device device;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StackingContextTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StackingContextTest.cpp
index 8f28c6a..45b59ff 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StackingContextTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StackingContextTest.cpp
@@ -769,16 +769,16 @@ TEST_F(StackingContextTest, zIndexAndFlattenedNodes) {
 
   testViewTree_([](StubViewTree const &viewTree) {
     // 5 views in total.
-    EXPECT_EQ(viewTree.size(), 8);
+    EXPECT_EQ(viewTree.size(), 5);
 
-    // The root view has all 5 subviews.
-    EXPECT_EQ(viewTree.getRootStubView().children.size(), 5);
+    // The root view has all 4 subviews.
+    EXPECT_EQ(viewTree.getRootStubView().children.size(), 4);
 
-    // The root view subviews are [6, 10, 9, 5].
-    EXPECT_EQ(viewTree.getRootStubView().children.at(0)->tag, 6);
-    EXPECT_EQ(viewTree.getRootStubView().children.at(1)->tag, 10);
-    EXPECT_EQ(viewTree.getRootStubView().children.at(2)->tag, 9);
-    EXPECT_EQ(viewTree.getRootStubView().children.at(3)->tag, 5);
+    // The root view subviews are [10, 9, 5, 3].
+    EXPECT_EQ(viewTree.getRootStubView().children.at(0)->tag, 10);
+    EXPECT_EQ(viewTree.getRootStubView().children.at(1)->tag, 9);
+    EXPECT_EQ(viewTree.getRootStubView().children.at(2)->tag, 5);
+    EXPECT_EQ(viewTree.getRootStubView().children.at(3)->tag, 3);
   });
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StateReconciliationTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StateReconciliationTest.cpp
index 6b53f26..6706925 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StateReconciliationTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/mounting/tests/StateReconciliationTest.cpp
@@ -32,8 +32,8 @@ class DummyShadowTreeDelegate : public ShadowTreeDelegate {
   };
 
   void shadowTreeDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator,
-      bool mountSynchronously) const override{};
+      ShadowTree const &shadowTree,
+      MountingCoordinator::Shared const &mountingCoordinator) const override{};
 };
 
 inline ShadowNode const *findDescendantNode(
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/BUCK b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/BUCK
index d09b4a9..4a90c58 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/BUCK
@@ -49,7 +49,6 @@ rn_xplat_cxx_library(
     deps = [
         "//xplat/folly:dynamic",
         react_native_xplat_target("runtimeexecutor:runtimeexecutor"),
-        react_native_xplat_target("react/renderer/core:core"),
         react_native_xplat_target("react/renderer/debug:debug"),
         react_native_xplat_target("butter:butter"),
         react_native_xplat_target("callinvoker:callinvoker"),
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/React-runtimescheduler.podspec b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/React-runtimescheduler.podspec
deleted file mode 100644
index 69012ed..0000000
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/React-runtimescheduler.podspec
+++ /dev/null
@@ -1,66 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "..", "..", "..", "..", "package.json")))
-version = package['version']
-
-source = { :git => 'https://github.com/facebook/react-native.git' }
-if version == '1000.0.0'
-  # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
-  source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
-else
-  source[:tag] = "v#{version}"
-end
-
-folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
-folly_version = '2021.07.22.00'
-
-header_search_paths = [
-    "\"$(PODS_ROOT)/RCT-Folly\"",
-]
-
-if ENV['USE_FRAMEWORKS']
-  header_search_paths << "\"$(PODS_TARGET_SRCROOT)/../../..\"" #this is needed to allow the RuntimeScheduler access its own files
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\""
-end
-
-Pod::Spec.new do |s|
-  s.name                   = "React-runtimescheduler"
-  s.version                = version
-  s.summary                = "-"  # TODO
-  s.homepage               = "https://reactnative.dev/"
-  s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
-  s.platforms              = { :ios => min_ios_version_supported }
-  s.source                 = source
-  s.source_files           = "**/*.{cpp,h}"
-  s.compiler_flags         = folly_compiler_flags
-  s.header_dir             = "react/renderer/runtimescheduler"
-  s.exclude_files          = "tests"
-  s.pod_target_xcconfig    = {
-    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-    "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')}
-
-  if ENV['USE_FRAMEWORKS']
-    s.module_name            = "React_runtimescheduler"
-    s.header_mappings_dir  = File.absolute_path("../../..")
-  end
-
-  s.dependency "React-jsi"
-  s.dependency "React-runtimeexecutor"
-  s.dependency "React-callinvoker"
-  s.dependency "React-debug"
-  s.dependency "glog"
-  s.dependency "RCT-Folly", folly_version
-
-  if ENV["USE_HERMES"] == nil || ENV["USE_HERMES"] == "1"
-    s.dependency "hermes-engine"
-  else
-    s.dependency "React-jsi"
-  end
-
-end
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.cpp b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.cpp
index 40b33fd..4927b22 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.cpp
@@ -6,7 +6,6 @@
  */
 
 #include "RuntimeScheduler.h"
-#include "SchedulerPriorityUtils.h"
 
 #include <utility>
 #include "ErrorUtils.h"
@@ -20,7 +19,8 @@ RuntimeScheduler::RuntimeScheduler(
     std::function<RuntimeSchedulerTimePoint()> now)
     : runtimeExecutor_(std::move(runtimeExecutor)), now_(std::move(now)) {}
 
-void RuntimeScheduler::scheduleWork(RawCallback callback) const {
+void RuntimeScheduler::scheduleWork(
+    std::function<void(jsi::Runtime &)> callback) const {
   runtimeAccessRequests_ += 1;
 
   runtimeExecutor_(
@@ -34,20 +34,7 @@ void RuntimeScheduler::scheduleWork(RawCallback callback) const {
 std::shared_ptr<Task> RuntimeScheduler::scheduleTask(
     SchedulerPriority priority,
     jsi::Function callback) {
-  auto expirationTime = now_() + timeoutForSchedulerPriority(priority);
-  auto task =
-      std::make_shared<Task>(priority, std::move(callback), expirationTime);
-  taskQueue_.push(task);
-
-  scheduleWorkLoopIfNecessary();
-
-  return task;
-}
-
-std::shared_ptr<Task> RuntimeScheduler::scheduleTask(
-    SchedulerPriority priority,
-    RawCallback callback) {
-  auto expirationTime = now_() + timeoutForSchedulerPriority(priority);
+  auto expirationTime = now() + timeoutForSchedulerPriority(priority);
   auto task =
       std::make_shared<Task>(priority, std::move(callback), expirationTime);
   taskQueue_.push(task);
@@ -77,7 +64,8 @@ RuntimeSchedulerTimePoint RuntimeScheduler::now() const noexcept {
   return now_();
 }
 
-void RuntimeScheduler::executeNowOnTheSameThread(RawCallback callback) {
+void RuntimeScheduler::executeNowOnTheSameThread(
+    std::function<void(jsi::Runtime &runtime)> callback) {
   runtimeAccessRequests_ += 1;
   executeSynchronouslyOnSameThread_CAN_DEADLOCK(
       runtimeExecutor_,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.h b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.h
index daaf8b8..96dce49 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeScheduler.h
@@ -35,7 +35,7 @@ class RuntimeScheduler final {
   RuntimeScheduler(RuntimeScheduler &&) = delete;
   RuntimeScheduler &operator=(RuntimeScheduler &&) = delete;
 
-  void scheduleWork(RawCallback callback) const;
+  void scheduleWork(std::function<void(jsi::Runtime &)> callback) const;
 
   /*
    * Grants access to the runtime synchronously on the caller's thread.
@@ -44,7 +44,8 @@ class RuntimeScheduler final {
    * by dispatching a synchronous event via event emitter in your native
    * component.
    */
-  void executeNowOnTheSameThread(RawCallback callback);
+  void executeNowOnTheSameThread(
+      std::function<void(jsi::Runtime &runtime)> callback);
 
   /*
    * Adds a JavaScript callback to priority queue with given priority.
@@ -56,10 +57,6 @@ class RuntimeScheduler final {
       SchedulerPriority priority,
       jsi::Function callback);
 
-  std::shared_ptr<Task> scheduleTask(
-      SchedulerPriority priority,
-      RawCallback callback);
-
   /*
    * Cancelled task will never be executed.
    *
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.cpp b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.cpp
index 7f88bce..1226160 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.cpp
@@ -6,11 +6,10 @@
  */
 
 #include "RuntimeSchedulerBinding.h"
-#include <ReactCommon/SchedulerPriority.h>
-#include "RuntimeScheduler.h"
-#include "SchedulerPriorityUtils.h"
+#include "SchedulerPriority.h"
 #include "primitives.h"
 
+#include <react/debug/react_native_assert.h>
 #include <chrono>
 #include <memory>
 #include <utility>
@@ -79,7 +78,7 @@ jsi::Value RuntimeSchedulerBinding::get(
             jsi::Runtime &runtime,
             jsi::Value const &,
             jsi::Value const *arguments,
-            size_t count) noexcept -> jsi::Value {
+            size_t) noexcept -> jsi::Value {
           SchedulerPriority priority = fromRawValue(arguments[0].getNumber());
           auto callback = arguments[1].getObject(runtime).getFunction(runtime);
 
@@ -152,7 +151,7 @@ jsi::Value RuntimeSchedulerBinding::get(
         });
   }
 
-  // TODO: remove this, as it's deprecated in the JS scheduler
+  // TODO: remmove this, as it's deprecated in the JS scheduler
   if (propertyName == "unstable_getCurrentPriorityLevel") {
     return jsi::Function::createFromHostFunction(
         runtime,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.h b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.h
index c2b339d..92c345a 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerBinding.h
@@ -8,12 +8,11 @@
 #pragma once
 
 #include <jsi/jsi.h>
+#include <react/renderer/runtimescheduler/RuntimeScheduler.h>
 
 namespace facebook {
 namespace react {
 
-class RuntimeScheduler;
-
 /*
  * Exposes RuntimeScheduler to JavaScript realm.
  */
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.cpp b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.cpp
index 988f97b..50cea4d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.cpp
@@ -8,7 +8,6 @@
 #include "RuntimeSchedulerCallInvoker.h"
 
 #include <utility>
-#include "RuntimeScheduler.h"
 
 namespace facebook::react {
 
@@ -16,27 +15,18 @@ RuntimeSchedulerCallInvoker::RuntimeSchedulerCallInvoker(
     std::weak_ptr<RuntimeScheduler> runtimeScheduler)
     : runtimeScheduler_(std::move(runtimeScheduler)) {}
 
-void RuntimeSchedulerCallInvoker::invokeAsync(CallFunc &&func) {
+void RuntimeSchedulerCallInvoker::invokeAsync(std::function<void()> &&func) {
   if (auto runtimeScheduler = runtimeScheduler_.lock()) {
     runtimeScheduler->scheduleWork(
         [func = std::move(func)](jsi::Runtime &) { func(); });
   }
 }
 
-void RuntimeSchedulerCallInvoker::invokeSync(CallFunc &&func) {
+void RuntimeSchedulerCallInvoker::invokeSync(std::function<void()> &&func) {
   if (auto runtimeScheduler = runtimeScheduler_.lock()) {
     runtimeScheduler->executeNowOnTheSameThread(
         [func = std::move(func)](jsi::Runtime &) { func(); });
   }
 }
 
-void RuntimeSchedulerCallInvoker::invokeAsync(
-    SchedulerPriority priority,
-    CallFunc &&func) {
-  if (auto runtimeScheduler = runtimeScheduler_.lock()) {
-    runtimeScheduler->scheduleTask(
-        priority, [func = std::move(func)](jsi::Runtime &) { func(); });
-  }
-}
-
 } // namespace facebook::react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h
index bb9bb08..0fd1853 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h
@@ -8,23 +8,21 @@
 #pragma once
 
 #include <ReactCommon/CallInvoker.h>
+#include <react/renderer/runtimescheduler/RuntimeScheduler.h>
 
 namespace facebook {
 namespace react {
 
-class RuntimeScheduler;
-
 /*
- * Exposes RuntimeScheduler to native modules. All calls invoked on JavaScript
+ * Exposes RuntimeScheduler to native modules. All calls invonked on JavaScript
  * queue from native modules will be funneled through RuntimeScheduler.
  */
 class RuntimeSchedulerCallInvoker : public CallInvoker {
  public:
   RuntimeSchedulerCallInvoker(std::weak_ptr<RuntimeScheduler> runtimeScheduler);
 
-  void invokeAsync(CallFunc &&func) override;
-  void invokeSync(CallFunc &&func) override;
-  void invokeAsync(SchedulerPriority priority, CallFunc &&func) override;
+  void invokeAsync(std::function<void()> &&func) override;
+  void invokeSync(std::function<void()> &&func) override;
 
  private:
   /*
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/SchedulerPriorityUtils.h b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/SchedulerPriority.h
similarity index 65%
rename from node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/SchedulerPriorityUtils.h
rename to node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/SchedulerPriority.h
index 16d6e68..76309e2 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/SchedulerPriorityUtils.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/SchedulerPriority.h
@@ -7,11 +7,19 @@
 
 #pragma once
 
-#include <ReactCommon/SchedulerPriority.h>
 #include <react/debug/react_native_assert.h>
 #include <chrono>
 
-namespace facebook::react {
+namespace facebook {
+namespace react {
+
+enum class SchedulerPriority : int {
+  ImmediatePriority = 1,
+  UserBlockingPriority = 2,
+  NormalPriority = 3,
+  LowPriority = 4,
+  IdlePriority = 5,
+};
 
 static constexpr std::underlying_type<SchedulerPriority>::type serialize(
     SchedulerPriority schedulerPriority) {
@@ -53,4 +61,21 @@ static inline std::chrono::milliseconds timeoutForSchedulerPriority(
   }
 }
 
-} // namespace facebook::react
+static inline std::string debugValueForSchedulerPriority(
+    SchedulerPriority schedulerPriority) {
+  switch (schedulerPriority) {
+    case SchedulerPriority::ImmediatePriority:
+      return "SchedulerPriority::ImmediatePriority";
+    case SchedulerPriority::UserBlockingPriority:
+      return "SchedulerPriority::UserBlockingPriority";
+    case SchedulerPriority::NormalPriority:
+      return "SchedulerPriority::NormalPriority";
+    case SchedulerPriority::LowPriority:
+      return "SchedulerPriority::LowPriority";
+    case SchedulerPriority::IdlePriority:
+      return "SchedulerPriority::IdlePriority";
+  }
+}
+
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.cpp b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.cpp
index 7ac9ced..34cb857 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.cpp
@@ -17,35 +17,18 @@ Task::Task(
       callback(std::move(callback)),
       expirationTime(expirationTime) {}
 
-Task::Task(
-    SchedulerPriority priority,
-    RawCallback callback,
-    std::chrono::steady_clock::time_point expirationTime)
-    : priority(priority),
-      callback(std::move(callback)),
-      expirationTime(expirationTime) {}
-
 jsi::Value Task::execute(jsi::Runtime &runtime, bool didUserCallbackTimeout) {
   auto result = jsi::Value::undefined();
-  // Canceled task doesn't have a callback.
-  if (!callback) {
-    return result;
-  }
-
-  auto &cbVal = callback.value();
-
-  if (cbVal.index() == 0) {
+  // Cancelled task doesn't have a callback.
+  if (callback) {
     // Callback in JavaScript is expecting a single bool parameter.
     // React team plans to remove it in the future when a scheduler bug on web
     // is resolved.
-    result =
-        std::get<jsi::Function>(cbVal).call(runtime, {didUserCallbackTimeout});
-  } else {
-    // Calling a raw callback
-    std::get<RawCallback>(cbVal)(runtime);
+    result = callback.value().call(runtime, {didUserCallbackTimeout});
+
+    // Destroying callback to prevent calling it twice.
+    callback.reset();
   }
-  // Destroying callback to prevent calling it twice.
-  callback.reset();
   return result;
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.h b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.h
index ea489bc..a8b8a69 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/Task.h
@@ -7,37 +7,30 @@
 
 #pragma once
 
-#include <ReactCommon/SchedulerPriority.h>
 #include <jsi/jsi.h>
 #include <react/renderer/runtimescheduler/RuntimeSchedulerClock.h>
+#include <react/renderer/runtimescheduler/SchedulerPriority.h>
 
 #include <optional>
-#include <variant>
 
-namespace facebook::react {
+namespace facebook {
+namespace react {
 
 class RuntimeScheduler;
 class TaskPriorityComparer;
 
-using RawCallback = std::function<void(jsi::Runtime &)>;
-
-struct Task final : public jsi::NativeState {
+struct Task final {
   Task(
       SchedulerPriority priority,
       jsi::Function callback,
       std::chrono::steady_clock::time_point expirationTime);
 
-  Task(
-      SchedulerPriority priority,
-      RawCallback callback,
-      std::chrono::steady_clock::time_point expirationTime);
-
  private:
   friend RuntimeScheduler;
   friend TaskPriorityComparer;
 
   SchedulerPriority priority;
-  std::optional<std::variant<jsi::Function, RawCallback>> callback;
+  std::optional<jsi::Function> callback;
   RuntimeSchedulerClock::time_point expirationTime;
 
   jsi::Value execute(jsi::Runtime &runtime, bool didUserCallbackTimeout);
@@ -52,4 +45,5 @@ class TaskPriorityComparer {
   }
 };
 
-} // namespace facebook::react
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/primitives.h b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/primitives.h
index ff71c2a..caa2b26 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/primitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/primitives.h
@@ -7,6 +7,7 @@
 
 #pragma once
 
+#include <folly/dynamic.h>
 #include <jsi/jsi.h>
 #include <react/renderer/runtimescheduler/Task.h>
 
@@ -21,7 +22,7 @@ struct TaskWrapper : public jsi::HostObject {
 
 inline static jsi::Value valueFromTask(
     jsi::Runtime &runtime,
-    std::shared_ptr<Task> task) {
+    std::shared_ptr<Task> const &task) {
   return jsi::Object::createFromHostObject(
       runtime, std::make_shared<TaskWrapper>(task));
 }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/RuntimeSchedulerTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/RuntimeSchedulerTest.cpp
index 0a3ebdf..ed43bab 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/RuntimeSchedulerTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/RuntimeSchedulerTest.cpp
@@ -6,7 +6,7 @@
  */
 
 #include <gtest/gtest.h>
-#include <hermes/hermes.h>
+#include <hermes/API/hermes/hermes.h>
 #include <jsi/jsi.h>
 #include <react/renderer/runtimescheduler/RuntimeScheduler.h>
 #include <memory>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/SchedulerPriorityTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/SchedulerPriorityTest.cpp
index ade776c..cb32caf 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/SchedulerPriorityTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/runtimescheduler/tests/SchedulerPriorityTest.cpp
@@ -6,7 +6,6 @@
  */
 
 #include <gtest/gtest.h>
-#include <react/renderer/runtimescheduler/SchedulerPriorityUtils.h>
 #include <react/renderer/runtimescheduler/Task.h>
 #include <chrono>
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.cpp b/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.cpp
index 25f31ab..fc0a164 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.cpp
@@ -118,26 +118,18 @@ Scheduler::Scheduler(
     uiManager->registerCommitHook(*commitHook);
   }
 
+  if (animationDelegate != nullptr) {
+    animationDelegate->setComponentDescriptorRegistry(
+        componentDescriptorRegistry_);
+  }
+  uiManager_->setAnimationDelegate(animationDelegate);
+
 #ifdef ANDROID
   removeOutstandingSurfacesOnDestruction_ = true;
-  reduceDeleteCreateMutationLayoutAnimation_ = reactNativeConfig_->getBool(
-      "react_fabric:reduce_delete_create_mutation_layout_animation_android");
 #else
   removeOutstandingSurfacesOnDestruction_ = reactNativeConfig_->getBool(
       "react_fabric:remove_outstanding_surfaces_on_destruction_ios");
-  reduceDeleteCreateMutationLayoutAnimation_ = true;
 #endif
-
-  CoreFeatures::blockPaintForUseLayoutEffect = reactNativeConfig_->getBool(
-      "react_fabric:block_paint_for_use_layout_effect");
-
-  if (animationDelegate != nullptr) {
-    animationDelegate->setComponentDescriptorRegistry(
-        componentDescriptorRegistry_);
-    animationDelegate->setReduceDeleteCreateMutation(
-        reduceDeleteCreateMutationLayoutAnimation_);
-  }
-  uiManager_->setAnimationDelegate(animationDelegate);
 }
 
 Scheduler::~Scheduler() {
@@ -159,7 +151,7 @@ Scheduler::~Scheduler() {
   // Then, let's verify that the requirement was satisfied.
   auto surfaceIds = std::vector<SurfaceId>{};
   uiManager_->getShadowTreeRegistry().enumerate(
-      [&surfaceIds](ShadowTree const &shadowTree, bool &) {
+      [&surfaceIds](ShadowTree const &shadowTree) {
         surfaceIds.push_back(shadowTree.getSurfaceId());
       });
 
@@ -267,8 +259,7 @@ void Scheduler::renderTemplateToSurface(
                         std::make_shared<ShadowNode::ListOfShared>(
                             ShadowNode::ListOfShared{tree}),
                     });
-              },
-              {/* default commit options */});
+              });
         });
   } catch (const std::exception &e) {
     LOG(ERROR) << "    >>>> EXCEPTION <<<  rendering uiTemplate in "
@@ -302,34 +293,11 @@ void Scheduler::animationTick() const {
 #pragma mark - UIManagerDelegate
 
 void Scheduler::uiManagerDidFinishTransaction(
-    MountingCoordinator::Shared mountingCoordinator,
-    bool mountSynchronously) {
+    MountingCoordinator::Shared const &mountingCoordinator) {
   SystraceSection s("Scheduler::uiManagerDidFinishTransaction");
 
   if (delegate_ != nullptr) {
-    if (CoreFeatures::blockPaintForUseLayoutEffect) {
-      auto weakRuntimeScheduler =
-          contextContainer_->find<std::weak_ptr<RuntimeScheduler>>(
-              "RuntimeScheduler");
-      auto runtimeScheduler = weakRuntimeScheduler.has_value()
-          ? weakRuntimeScheduler.value().lock()
-          : nullptr;
-      if (runtimeScheduler && !mountSynchronously) {
-        runtimeScheduler->scheduleTask(
-            SchedulerPriority::UserBlockingPriority,
-            [delegate = delegate_,
-             mountingCoordinator =
-                 std::move(mountingCoordinator)](jsi::Runtime &) {
-              delegate->schedulerDidFinishTransaction(
-                  std::move(mountingCoordinator));
-            });
-      } else {
-        delegate_->schedulerDidFinishTransaction(
-            std::move(mountingCoordinator));
-      }
-    } else {
-      delegate_->schedulerDidFinishTransaction(std::move(mountingCoordinator));
-    }
+    delegate_->schedulerDidFinishTransaction(mountingCoordinator);
   }
 }
 void Scheduler::uiManagerDidCreateShadowNode(const ShadowNode &shadowNode) {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.h b/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.h
index 8467a05..d42bfe8 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/Scheduler.h
@@ -88,8 +88,7 @@ class Scheduler final : public UIManagerDelegate {
 #pragma mark - UIManagerDelegate
 
   void uiManagerDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator,
-      bool mountSynchronously) override;
+      MountingCoordinator::Shared const &mountingCoordinator) override;
   void uiManagerDidCreateShadowNode(const ShadowNode &shadowNode) override;
   void uiManagerDidDispatchCommand(
       const ShadowNode::Shared &shadowNode,
@@ -144,7 +143,6 @@ class Scheduler final : public UIManagerDelegate {
    * Temporary flags.
    */
   bool removeOutstandingSurfacesOnDestruction_{false};
-  bool reduceDeleteCreateMutationLayoutAnimation_{false};
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerDelegate.h b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerDelegate.h
index c0fca4a..db36d2c 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerDelegate.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerDelegate.h
@@ -13,7 +13,8 @@
 #include <react/renderer/mounting/MountingCoordinator.h>
 #include <react/renderer/mounting/ShadowView.h>
 
-namespace facebook::react {
+namespace facebook {
+namespace react {
 
 /*
  * Abstract class for Scheduler's delegate.
@@ -26,7 +27,7 @@ class SchedulerDelegate {
    * to construct a new one.
    */
   virtual void schedulerDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator) = 0;
+      MountingCoordinator::Shared const &mountingCoordinator) = 0;
 
   /*
    * Called right after a new ShadowNode was created.
@@ -55,4 +56,5 @@ class SchedulerDelegate {
   virtual ~SchedulerDelegate() noexcept = default;
 };
 
-} // namespace facebook::react
+} // namespace react
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerToolbox.h b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerToolbox.h
index 306ac88..0e3b677 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerToolbox.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SchedulerToolbox.h
@@ -13,7 +13,7 @@
 #include <react/renderer/componentregistry/ComponentDescriptorFactory.h>
 #include <react/renderer/core/EventBeat.h>
 #include <react/renderer/leakchecker/LeakChecker.h>
-
+#include <react/renderer/runtimescheduler/RuntimeScheduler.h>
 #include <react/renderer/uimanager/UIManagerCommitHook.h>
 #include <react/renderer/uimanager/primitives.h>
 #include <react/utils/ContextContainer.h>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.cpp b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.cpp
index b1c4426..1ee4505 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.cpp
@@ -9,6 +9,7 @@
 
 #include <react/debug/react_native_assert.h>
 #include <react/renderer/debug/SystraceSection.h>
+#include <react/renderer/scheduler/Scheduler.h>
 #include <react/renderer/uimanager/UIManager.h>
 
 namespace facebook::react {
@@ -27,10 +28,13 @@ SurfaceHandler::SurfaceHandler(SurfaceHandler &&other) noexcept {
 }
 
 SurfaceHandler &SurfaceHandler::operator=(SurfaceHandler &&other) noexcept {
-  std::unique_lock lock1(linkMutex_, std::defer_lock);
-  std::unique_lock lock2(parametersMutex_, std::defer_lock);
-  std::unique_lock lock3(other.linkMutex_, std::defer_lock);
-  std::unique_lock lock4(other.parametersMutex_, std::defer_lock);
+  std::unique_lock<butter::shared_mutex> lock1(linkMutex_, std::defer_lock);
+  std::unique_lock<butter::shared_mutex> lock2(
+      parametersMutex_, std::defer_lock);
+  std::unique_lock<butter::shared_mutex> lock3(
+      other.linkMutex_, std::defer_lock);
+  std::unique_lock<butter::shared_mutex> lock4(
+      other.parametersMutex_, std::defer_lock);
   std::lock(lock1, lock2, lock3, lock4);
 
   link_ = other.link_;
@@ -50,13 +54,13 @@ void SurfaceHandler::setContextContainer(
 }
 
 Status SurfaceHandler::getStatus() const noexcept {
-  std::shared_lock lock(linkMutex_);
+  std::shared_lock<butter::shared_mutex> lock(linkMutex_);
   return link_.status;
 }
 
 void SurfaceHandler::start() const noexcept {
   SystraceSection s("SurfaceHandler::start");
-  std::unique_lock lock(linkMutex_);
+  std::unique_lock<butter::shared_mutex> lock(linkMutex_);
   react_native_assert(
       link_.status == Status::Registered && "Surface must be registered.");
   react_native_assert(
@@ -68,7 +72,7 @@ void SurfaceHandler::start() const noexcept {
   auto parameters = Parameters{};
   {
     SystraceSection s2("SurfaceHandler::start::paramsLock");
-    std::shared_lock parametersLock(parametersMutex_);
+    std::shared_lock<butter::shared_mutex> parametersLock(parametersMutex_);
     parameters = parameters_;
   }
 
@@ -95,7 +99,7 @@ void SurfaceHandler::start() const noexcept {
 void SurfaceHandler::stop() const noexcept {
   auto shadowTree = ShadowTree::Unique{};
   {
-    std::unique_lock lock(linkMutex_);
+    std::unique_lock<butter::shared_mutex> lock(linkMutex_);
     react_native_assert(
         link_.status == Status::Running && "Surface must be running.");
 
@@ -113,7 +117,7 @@ void SurfaceHandler::stop() const noexcept {
 
 void SurfaceHandler::setDisplayMode(DisplayMode displayMode) const noexcept {
   {
-    std::unique_lock lock(parametersMutex_);
+    std::unique_lock<butter::shared_mutex> lock(parametersMutex_);
     if (parameters_.displayMode == displayMode) {
       return;
     }
@@ -122,7 +126,7 @@ void SurfaceHandler::setDisplayMode(DisplayMode displayMode) const noexcept {
   }
 
   {
-    std::shared_lock lock(linkMutex_);
+    std::shared_lock<butter::shared_mutex> lock(linkMutex_);
 
     if (link_.status != Status::Running) {
       return;
@@ -139,41 +143,41 @@ void SurfaceHandler::setDisplayMode(DisplayMode displayMode) const noexcept {
 }
 
 DisplayMode SurfaceHandler::getDisplayMode() const noexcept {
-  std::shared_lock lock(parametersMutex_);
+  std::shared_lock<butter::shared_mutex> lock(parametersMutex_);
   return parameters_.displayMode;
 }
 
 #pragma mark - Accessors
 
 SurfaceId SurfaceHandler::getSurfaceId() const noexcept {
-  std::shared_lock lock(parametersMutex_);
+  std::shared_lock<butter::shared_mutex> lock(parametersMutex_);
   return parameters_.surfaceId;
 }
 
 void SurfaceHandler::setSurfaceId(SurfaceId surfaceId) const noexcept {
-  std::unique_lock lock(parametersMutex_);
+  std::unique_lock<butter::shared_mutex> lock(parametersMutex_);
   parameters_.surfaceId = surfaceId;
 }
 
 std::string SurfaceHandler::getModuleName() const noexcept {
-  std::shared_lock lock(parametersMutex_);
+  std::shared_lock<butter::shared_mutex> lock(parametersMutex_);
   return parameters_.moduleName;
 }
 
 void SurfaceHandler::setProps(folly::dynamic const &props) const noexcept {
   SystraceSection s("SurfaceHandler::setProps");
-  std::unique_lock lock(parametersMutex_);
+  std::unique_lock<butter::shared_mutex> lock(parametersMutex_);
   parameters_.props = props;
 }
 
 folly::dynamic SurfaceHandler::getProps() const noexcept {
-  std::shared_lock lock(parametersMutex_);
+  std::shared_lock<butter::shared_mutex> lock(parametersMutex_);
   return parameters_.props;
 }
 
 std::shared_ptr<MountingCoordinator const>
 SurfaceHandler::getMountingCoordinator() const noexcept {
-  std::shared_lock lock(linkMutex_);
+  std::shared_lock<butter::shared_mutex> lock(linkMutex_);
   react_native_assert(
       link_.status != Status::Unregistered && "Surface must be registered.");
   react_native_assert(
@@ -186,7 +190,7 @@ SurfaceHandler::getMountingCoordinator() const noexcept {
 Size SurfaceHandler::measure(
     LayoutConstraints const &layoutConstraints,
     LayoutContext const &layoutContext) const noexcept {
-  std::shared_lock lock(linkMutex_);
+  std::shared_lock<butter::shared_mutex> lock(linkMutex_);
 
   if (link_.status != Status::Running) {
     return layoutConstraints.clamp({0, 0});
@@ -212,7 +216,7 @@ void SurfaceHandler::constraintLayout(
     LayoutContext const &layoutContext) const noexcept {
   SystraceSection s("SurfaceHandler::constraintLayout");
   {
-    std::unique_lock lock(parametersMutex_);
+    std::unique_lock<butter::shared_mutex> lock(parametersMutex_);
 
     if (parameters_.layoutConstraints == layoutConstraints &&
         parameters_.layoutContext == layoutContext) {
@@ -224,7 +228,7 @@ void SurfaceHandler::constraintLayout(
   }
 
   {
-    std::shared_lock lock(linkMutex_);
+    std::shared_lock<butter::shared_mutex> lock(linkMutex_);
 
     if (link_.status != Status::Running) {
       return;
@@ -235,22 +239,20 @@ void SurfaceHandler::constraintLayout(
 
     react_native_assert(
         link_.shadowTree && "`link_.shadowTree` must not be null.");
-    link_.shadowTree->commit(
-        [&](RootShadowNode const &oldRootShadowNode) {
-          return oldRootShadowNode.clone(
-              propsParserContext, layoutConstraints, layoutContext);
-        },
-        {/* default commit options */});
+    link_.shadowTree->commit([&](RootShadowNode const &oldRootShadowNode) {
+      return oldRootShadowNode.clone(
+          propsParserContext, layoutConstraints, layoutContext);
+    });
   }
 }
 
 LayoutConstraints SurfaceHandler::getLayoutConstraints() const noexcept {
-  std::shared_lock lock(parametersMutex_);
+  std::shared_lock<butter::shared_mutex> lock(parametersMutex_);
   return parameters_.layoutConstraints;
 }
 
 LayoutContext SurfaceHandler::getLayoutContext() const noexcept {
-  std::shared_lock lock(parametersMutex_);
+  std::shared_lock<butter::shared_mutex> lock(parametersMutex_);
   return parameters_.layoutContext;
 }
 
@@ -283,15 +285,15 @@ void SurfaceHandler::applyDisplayMode(DisplayMode displayMode) const noexcept {
       link_.shadowTree->commit(
           [&](RootShadowNode const & /*oldRootShadowNode*/) {
             return std::static_pointer_cast<RootShadowNode>(
-                revision.rootShadowNode->ShadowNode::clone({}));
-          },
-          {/* default commit options */});
+                revision.rootShadowNode->ShadowNode::clone(
+                    ShadowNodeFragment{}));
+          });
       break;
   }
 }
 
 void SurfaceHandler::setUIManager(UIManager const *uiManager) const noexcept {
-  std::unique_lock lock(linkMutex_);
+  std::unique_lock<butter::shared_mutex> lock(linkMutex_);
 
   react_native_assert(
       link_.status != Status::Running && "Surface must not be running.");
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.h b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.h
index 7b70ecf..f550e70 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceHandler.h
@@ -8,7 +8,6 @@
 #pragma once
 
 #include <memory>
-#include <shared_mutex>
 
 #include <react/renderer/core/LayoutConstraints.h>
 #include <react/renderer/core/LayoutContext.h>
@@ -183,7 +182,7 @@ class SurfaceHandler {
   };
 
   /*
-   * Represents an underlying link to a `ShadowTree` and an `UIManager`.
+   * Represents an underlying link to a `ShadowTree` and an `UIMananger`.
    * Registering, unregistering, starting, and stopping the surface requires
    * acquiring a unique lock; other access needs only a shared lock.
    */
@@ -196,13 +195,13 @@ class SurfaceHandler {
   /*
    * `link_` and `linkMutex_` pair.
    */
-  mutable std::shared_mutex linkMutex_;
+  mutable butter::shared_mutex linkMutex_;
   mutable Link link_;
 
   /*
    * `parameters_` and `parametersMutex_` pair.
    */
-  mutable std::shared_mutex parametersMutex_;
+  mutable butter::shared_mutex parametersMutex_;
   mutable Parameters parameters_;
 };
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.cpp
index 15512ad..e663b68 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.cpp
@@ -21,7 +21,7 @@ void SurfaceManager::startSurface(
     LayoutConstraints const &layoutConstraints,
     LayoutContext const &layoutContext) const noexcept {
   {
-    std::unique_lock lock(mutex_);
+    std::unique_lock<butter::shared_mutex> lock(mutex_);
     auto surfaceHandler = SurfaceHandler{moduleName, surfaceId};
     surfaceHandler.setContextContainer(scheduler_.getContextContainer());
     registry_.emplace(surfaceId, std::move(surfaceHandler));
@@ -44,7 +44,7 @@ void SurfaceManager::stopSurface(SurfaceId surfaceId) const noexcept {
   });
 
   {
-    std::unique_lock lock(mutex_);
+    std::unique_lock<butter::shared_mutex> lock(mutex_);
 
     auto iterator = registry_.find(surfaceId);
     registry_.erase(iterator);
@@ -88,7 +88,7 @@ void SurfaceManager::visit(
     SurfaceId surfaceId,
     std::function<void(SurfaceHandler const &surfaceHandler)> const &callback)
     const noexcept {
-  std::shared_lock lock(mutex_);
+  std::shared_lock<butter::shared_mutex> lock(mutex_);
 
   auto iterator = registry_.find(surfaceId);
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.h b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.h
index 15a68eb..76dd2bf 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/scheduler/SurfaceManager.h
@@ -9,7 +9,6 @@
 
 #include <butter/map.h>
 #include <mutex>
-#include <shared_mutex>
 
 #include <react/renderer/core/LayoutConstraints.h>
 #include <react/renderer/mounting/MountingCoordinator.h>
@@ -60,7 +59,7 @@ class SurfaceManager final {
       const noexcept;
 
   Scheduler const &scheduler_;
-  mutable std::shared_mutex mutex_; // Protects `registry_`.
+  mutable butter::shared_mutex mutex_; // Protects `registry_`.
   mutable butter::map<SurfaceId, SurfaceHandler> registry_{};
 };
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/telemetry/tests/TransactionTelemetryTest.cpp b/node_modules/react-native/ReactCommon/react/renderer/telemetry/tests/TransactionTelemetryTest.cpp
index 7473212..656ea81 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/telemetry/tests/TransactionTelemetryTest.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/telemetry/tests/TransactionTelemetryTest.cpp
@@ -26,7 +26,7 @@ MockClock::time_point MockClock::time_ = {};
  * The OS might decide right before the specified time elapsed to schedule
  * another thread/process, with the result that more time passes in reality than
  * the caller intended. Prefer the `MockClock` and only use this function to
- * verify that at least the specified time has passed but without making exact
+ * verify that at least the specifid time has passed but wihtout making exact
  * verifications.
  */
 static void sleepAtLeast(double durationInSeconds) {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/templateprocessor/BUCK b/node_modules/react-native/ReactCommon/react/renderer/templateprocessor/BUCK
index ef8f47d..df5d13d 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/templateprocessor/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/templateprocessor/BUCK
@@ -32,8 +32,6 @@ rn_xplat_cxx_library(
         prefix = "react/renderer/templateprocessor",
     ),
     compiler_flags_pedantic = True,
-    # TODO(145803035) Fix Android tests
-    fbandroid_tests_override = [],
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
     force_static = True,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/BUCK b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/BUCK
index 11657d0..c4e3be0 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/BUCK
@@ -14,8 +14,6 @@ load(
     "subdir_glob",
 )
 
-oncall("react_native")
-
 APPLE_COMPILER_FLAGS = get_apple_compiler_flags()
 
 rn_xplat_cxx_library(
@@ -85,7 +83,7 @@ rn_xplat_cxx_library(
     ],
     ios_exported_headers = subdir_glob(
         [
-            ("platform/ios/react/renderer/textlayoutmanager", "*.h"),
+            ("platform/ios", "*.h"),
         ],
         prefix = "react/renderer/textlayoutmanager",
     ),
@@ -96,7 +94,7 @@ rn_xplat_cxx_library(
     ],
     ios_headers = subdir_glob(
         [
-            ("platform/ios/react/renderer/textlayoutmanager", "**/*.h"),
+            ("platform/ios", "**/*.h"),
         ],
         prefix = "",
     ),
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/TextMeasureCache.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/TextMeasureCache.h
index 6eb4cdc..2348617 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/TextMeasureCache.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/TextMeasureCache.h
@@ -7,7 +7,6 @@
 
 #pragma once
 
-#include <folly/Hash.h>
 #include <react/renderer/attributedstring/AttributedString.h>
 #include <react/renderer/attributedstring/ParagraphAttributes.h>
 #include <react/renderer/core/LayoutConstraints.h>
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.cpp
index e39f671..fa51c0a 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.cpp
@@ -12,7 +12,6 @@
 #include <react/common/mapbuffer/JReadableMapBuffer.h>
 #include <react/jni/ReadableNativeMap.h>
 #include <react/renderer/attributedstring/conversions.h>
-#include <react/renderer/core/CoreFeatures.h>
 #include <react/renderer/core/conversions.h>
 #include <react/renderer/mapbuffer/MapBuffer.h>
 #include <react/renderer/mapbuffer/MapBufferBuilder.h>
@@ -147,10 +146,7 @@ Size measureAndroidComponentMapBuffer(
 TextLayoutManager::TextLayoutManager(
     const ContextContainer::Shared &contextContainer)
     : contextContainer_(contextContainer),
-      measureCache_(
-          CoreFeatures::cacheLastTextMeasurement
-              ? 8096
-              : kSimpleThreadSafeCacheSizeCap) {}
+      measureCache_(kSimpleThreadSafeCacheSizeCap) {}
 
 void *TextLayoutManager::getNativeTextLayoutManager() const {
   return self_;
@@ -158,9 +154,8 @@ void *TextLayoutManager::getNativeTextLayoutManager() const {
 
 TextMeasurement TextLayoutManager::measure(
     AttributedStringBox const &attributedStringBox,
-    ParagraphAttributes const &paragraphAttributes,
-    LayoutConstraints layoutConstraints,
-    std::shared_ptr<void> /* hostTextStorage */) const {
+    ParagraphAttributes paragraphAttributes,
+    LayoutConstraints layoutConstraints) const {
   auto &attributedString = attributedStringBox.getValue();
 
   auto measurement = measureCache_.get(
@@ -184,12 +179,6 @@ TextMeasurement TextLayoutManager::measure(
   measurement.size = layoutConstraints.clamp(measurement.size);
   return measurement;
 }
-std::shared_ptr<void> TextLayoutManager::getHostTextStorage(
-    AttributedString const & /* attributedStringBox */,
-    ParagraphAttributes const & /* paragraphAttributes */,
-    LayoutConstraints /* layoutConstraints */) const {
-  return nullptr;
-}
 
 TextMeasurement TextLayoutManager::measureCachedSpannableById(
     int64_t cacheId,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.h
index 0f5e070..63694bc 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/android/react/renderer/textlayoutmanager/TextLayoutManager.h
@@ -45,13 +45,7 @@ class TextLayoutManager {
    */
   TextMeasurement measure(
       AttributedStringBox const &attributedStringBox,
-      ParagraphAttributes const &paragraphAttributes,
-      LayoutConstraints layoutConstraints,
-      std::shared_ptr<void> /* hostTextStorage */) const;
-
-  std::shared_ptr<void> getHostTextStorage(
-      AttributedString const &attributedString,
-      ParagraphAttributes const &paragraphAttributes,
+      ParagraphAttributes paragraphAttributes,
       LayoutConstraints layoutConstraints) const;
 
   /**
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.cpp
index 1284f3e..e0214a6 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.cpp
@@ -17,8 +17,7 @@ void *TextLayoutManager::getNativeTextLayoutManager() const {
 TextMeasurement TextLayoutManager::measure(
     AttributedStringBox attributedStringBox,
     ParagraphAttributes paragraphAttributes,
-    LayoutConstraints layoutConstraints,
-    std::shared_ptr<void>) const {
+    LayoutConstraints layoutConstraints) const {
   TextMeasurement::Attachments attachments;
   for (auto const &fragment : attributedStringBox.getValue().getFragments()) {
     if (fragment.isAttachment()) {
@@ -36,12 +35,5 @@ LinesMeasurements TextLayoutManager::measureLines(
   return {};
 };
 
-std::shared_ptr<void> TextLayoutManager::getHostTextStorage(
-    AttributedString attributedString,
-    ParagraphAttributes paragraphAttributes,
-    LayoutConstraints layoutConstraints) const {
-  return nullptr;
-}
-
 } // namespace react
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.h
index cb2b9eb..25233ca 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/cxx/TextLayoutManager.h
@@ -36,8 +36,7 @@ class TextLayoutManager {
   TextMeasurement measure(
       AttributedStringBox attributedStringBox,
       ParagraphAttributes paragraphAttributes,
-      LayoutConstraints layoutConstraints,
-      std::shared_ptr<void>) const;
+      LayoutConstraints layoutConstraints) const;
 
   /*
    * Measures lines of `attributedString` using native text rendering
@@ -53,11 +52,6 @@ class TextLayoutManager {
    * Is used on a native views layer to delegate text rendering to the manager.
    */
   void *getNativeTextLayoutManager() const;
-
-  std::shared_ptr<void> getHostTextStorage(
-      AttributedString attributedStringBox,
-      ParagraphAttributes paragraphAttributes,
-      LayoutConstraints layoutConstraints) const;
 };
 
 } // namespace react
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/NSTextStorage+FontScaling.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/NSTextStorage+FontScaling.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/NSTextStorage+FontScaling.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/NSTextStorage+FontScaling.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/NSTextStorage+FontScaling.m b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/NSTextStorage+FontScaling.m
similarity index 94%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/NSTextStorage+FontScaling.m
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/NSTextStorage+FontScaling.m
index ee391a2..4c4cb67 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/NSTextStorage+FontScaling.m
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/NSTextStorage+FontScaling.m
@@ -30,11 +30,11 @@ - (void)scaleFontSizeToFitSize:(CGSize)size
   while (true) {
     [self scaleFontSizeWithRatio:ratio minimumFontSize:minimumFontSize maximumFontSize:maximumFontSize];
 
-    RCTTextSizeComparisonOptions comparison = [self compareToSize:size thresholdRatio:0.01];
+    RCTTextSizeComparisonOptions comparsion = [self compareToSize:size thresholdRatio:0.01];
 
-    if ((comparison & RCTTextSizeComparisonWithinRange) && (comparison & RCTTextSizeComparisonSmaller)) {
+    if ((comparsion & RCTTextSizeComparisonWithinRange) && (comparsion & RCTTextSizeComparisonSmaller)) {
       return;
-    } else if (comparison & RCTTextSizeComparisonSmaller) {
+    } else if (comparsion & RCTTextSizeComparisonSmaller) {
       bottomRatio = ratio;
       lastRatioWhichFits = ratio;
     } else {
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTAttributedTextUtils.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTAttributedTextUtils.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTAttributedTextUtils.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTAttributedTextUtils.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTAttributedTextUtils.mm b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTAttributedTextUtils.mm
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTAttributedTextUtils.mm
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTAttributedTextUtils.mm
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTFontProperties.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTFontProperties.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTFontProperties.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTFontProperties.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTFontUtils.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTFontUtils.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTFontUtils.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTFontUtils.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTFontUtils.mm b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTFontUtils.mm
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTFontUtils.mm
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTFontUtils.mm
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextLayoutManager.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextLayoutManager.h
similarity index 79%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextLayoutManager.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextLayoutManager.h
index b0d906c..15e4c75 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextLayoutManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextLayoutManager.h
@@ -10,6 +10,7 @@
 #import <react/renderer/attributedstring/AttributedString.h>
 #import <react/renderer/attributedstring/ParagraphAttributes.h>
 #import <react/renderer/core/LayoutConstraints.h>
+#import <react/renderer/graphics/Geometry.h>
 #import <react/renderer/textlayoutmanager/TextMeasureCache.h>
 
 NS_ASSUME_NONNULL_BEGIN
@@ -28,22 +29,15 @@ using RCTTextLayoutFragmentEnumerationBlock =
 
 - (facebook::react::TextMeasurement)measureAttributedString:(facebook::react::AttributedString)attributedString
                                         paragraphAttributes:(facebook::react::ParagraphAttributes)paragraphAttributes
-                                          layoutConstraints:(facebook::react::LayoutConstraints)layoutConstraints
-                                                textStorage:(NSTextStorage *_Nullable)textStorage;
+                                          layoutConstraints:(facebook::react::LayoutConstraints)layoutConstraints;
 
 - (facebook::react::TextMeasurement)measureNSAttributedString:(NSAttributedString *)attributedString
                                           paragraphAttributes:(facebook::react::ParagraphAttributes)paragraphAttributes
-                                            layoutConstraints:(facebook::react::LayoutConstraints)layoutConstraints
-                                                  textStorage:(NSTextStorage *_Nullable)textStorage;
-
-- (NSTextStorage *)textStorageForAttributesString:(facebook::react::AttributedString)attributedString
-                              paragraphAttributes:(facebook::react::ParagraphAttributes)paragraphAttributes
-                                             size:(CGSize)size;
+                                            layoutConstraints:(facebook::react::LayoutConstraints)layoutConstraints;
 
 - (void)drawAttributedString:(facebook::react::AttributedString)attributedString
          paragraphAttributes:(facebook::react::ParagraphAttributes)paragraphAttributes
-                       frame:(CGRect)frame
-                 textStorage:(NSTextStorage *_Nullable)textStorage;
+                       frame:(CGRect)frame;
 
 - (facebook::react::LinesMeasurements)getLinesForAttributedString:(facebook::react::AttributedString)attributedString
                                               paragraphAttributes:
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextLayoutManager.mm b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextLayoutManager.mm
similarity index 76%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextLayoutManager.mm
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextLayoutManager.mm
index 368c334..844fcb2 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextLayoutManager.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextLayoutManager.mm
@@ -37,7 +37,6 @@ static NSLineBreakMode RCTNSLineBreakModeFromEllipsizeMode(EllipsizeMode ellipsi
 - (TextMeasurement)measureNSAttributedString:(NSAttributedString *)attributedString
                          paragraphAttributes:(ParagraphAttributes)paragraphAttributes
                            layoutConstraints:(LayoutConstraints)layoutConstraints
-                                 textStorage:(NSTextStorage *_Nullable)textStorage
 {
   if (attributedString.length == 0) {
     // This is not really an optimization because that should be checked much earlier on the call stack.
@@ -48,62 +47,68 @@ - (TextMeasurement)measureNSAttributedString:(NSAttributedString *)attributedStr
 
   CGSize maximumSize = CGSize{layoutConstraints.maximumSize.width, CGFLOAT_MAX};
 
-  if (!textStorage) {
-    textStorage = [self _textStorageForNSAttributesString:attributedString
-                                      paragraphAttributes:paragraphAttributes
-                                                     size:maximumSize];
-  }
+  NSTextStorage *textStorage = [self _textStorageAndLayoutManagerWithAttributesString:attributedString
+                                                                  paragraphAttributes:paragraphAttributes
+                                                                                 size:maximumSize];
+
+  NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
+  NSTextContainer *textContainer = layoutManager.textContainers.firstObject;
+  [layoutManager ensureLayoutForTextContainer:textContainer];
+
+  CGSize size = [layoutManager usedRectForTextContainer:textContainer].size;
+
+  size = (CGSize){RCTCeilPixelValue(size.width), RCTCeilPixelValue(size.height)};
+
+  __block auto attachments = TextMeasurement::Attachments{};
+
+  [textStorage
+      enumerateAttribute:NSAttachmentAttributeName
+                 inRange:NSMakeRange(0, textStorage.length)
+                 options:0
+              usingBlock:^(NSTextAttachment *attachment, NSRange range, BOOL *stop) {
+                if (!attachment) {
+                  return;
+                }
 
-  return [self _measureTextStorage:textStorage];
+                CGSize attachmentSize = attachment.bounds.size;
+                CGRect glyphRect = [layoutManager boundingRectForGlyphRange:range inTextContainer:textContainer];
+
+                UIFont *font = [textStorage attribute:NSFontAttributeName atIndex:range.location effectiveRange:nil];
+
+                CGRect frame = {
+                    {glyphRect.origin.x,
+                     glyphRect.origin.y + glyphRect.size.height - attachmentSize.height + font.descender},
+                    attachmentSize};
+
+                auto rect = facebook::react::Rect{
+                    facebook::react::Point{frame.origin.x, frame.origin.y},
+                    facebook::react::Size{frame.size.width, frame.size.height}};
+
+                attachments.push_back(TextMeasurement::Attachment{rect, false});
+              }];
+
+  return TextMeasurement{{size.width, size.height}, attachments};
 }
 
 - (TextMeasurement)measureAttributedString:(AttributedString)attributedString
                        paragraphAttributes:(ParagraphAttributes)paragraphAttributes
                          layoutConstraints:(LayoutConstraints)layoutConstraints
-                               textStorage:(NSTextStorage *_Nullable)textStorage
 {
-  if (textStorage) {
-    return [self _measureTextStorage:textStorage];
-  } else {
-    return [self measureNSAttributedString:[self _nsAttributedStringFromAttributedString:attributedString]
-                       paragraphAttributes:paragraphAttributes
-                         layoutConstraints:layoutConstraints
-                               textStorage:nil];
-  }
+  return [self measureNSAttributedString:[self _nsAttributedStringFromAttributedString:attributedString]
+                     paragraphAttributes:paragraphAttributes
+                       layoutConstraints:layoutConstraints];
 }
 
 - (void)drawAttributedString:(AttributedString)attributedString
          paragraphAttributes:(ParagraphAttributes)paragraphAttributes
                        frame:(CGRect)frame
-                 textStorage:(NSTextStorage *_Nullable)textStorage
 {
-  BOOL createdStorageForFrame = NO;
-
-  if (!textStorage) {
-    textStorage = [self textStorageForAttributesString:attributedString
+  NSTextStorage *textStorage = [self
+      _textStorageAndLayoutManagerWithAttributesString:[self _nsAttributedStringFromAttributedString:attributedString]
                                    paragraphAttributes:paragraphAttributes
                                                   size:frame.size];
-    createdStorageForFrame = YES;
-  }
-
   NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
   NSTextContainer *textContainer = layoutManager.textContainers.firstObject;
-  CGPoint origin = frame.origin;
-
-  if (!createdStorageForFrame) {
-    CGRect rect = [layoutManager usedRectForTextContainer:textContainer];
-    static auto threshold = 1.0 / RCTScreenScale() + 0.01; // Size of a pixel plus some small threshold.
-
-    // `rect`'s width is stored in double precesion.
-    // `frame`'s width is also in double precesion but was stored as float in Yoga previously, precesion was lost.
-    if (std::abs(RCTCeilPixelValue(rect.size.width) - frame.size.width) < threshold) {
-      // `textStorage` passed to this method was used to calculate size of frame. If that's the case, it's
-      // width is the same as frame's width. Origin must be adjusted, otherwise glyhps will be painted in wrong
-      // place.
-      // We could create new `NSTextStorage` for the specific frame, but that is expensive.
-      origin.x -= RCTCeilPixelValue(rect.origin.x);
-    }
-  }
 
 #if TARGET_OS_MACCATALYST
   CGContextRef context = UIGraphicsGetCurrentContext();
@@ -112,21 +117,22 @@ - (void)drawAttributedString:(AttributedString)attributedString
 #endif
 
   NSRange glyphRange = [layoutManager glyphRangeForTextContainer:textContainer];
-  [layoutManager drawBackgroundForGlyphRange:glyphRange atPoint:origin];
-  [layoutManager drawGlyphsForGlyphRange:glyphRange atPoint:origin];
+  [layoutManager drawBackgroundForGlyphRange:glyphRange atPoint:frame.origin];
+  [layoutManager drawGlyphsForGlyphRange:glyphRange atPoint:frame.origin];
 
 #if TARGET_OS_MACCATALYST
   CGContextRestoreGState(context);
 #endif
 }
 
-- (LinesMeasurements)getLinesForAttributedString:(AttributedString)attributedString
-                             paragraphAttributes:(ParagraphAttributes)paragraphAttributes
+- (LinesMeasurements)getLinesForAttributedString:(facebook::react::AttributedString)attributedString
+                             paragraphAttributes:(facebook::react::ParagraphAttributes)paragraphAttributes
                                             size:(CGSize)size
 {
-  NSTextStorage *textStorage = [self textStorageForAttributesString:attributedString
-                                                paragraphAttributes:paragraphAttributes
-                                                               size:size];
+  NSTextStorage *textStorage = [self
+      _textStorageAndLayoutManagerWithAttributesString:[self _nsAttributedStringFromAttributedString:attributedString]
+                                   paragraphAttributes:paragraphAttributes
+                                                  size:size];
   NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
   NSTextContainer *textContainer = layoutManager.textContainers.firstObject;
 
@@ -164,13 +170,33 @@ - (LinesMeasurements)getLinesForAttributedString:(AttributedString)attributedStr
   return paragraphLines;
 }
 
-- (NSTextStorage *)textStorageForAttributesString:(AttributedString)attributedString
-                              paragraphAttributes:(ParagraphAttributes)paragraphAttributes
-                                             size:(CGSize)size
+- (NSTextStorage *)_textStorageAndLayoutManagerWithAttributesString:(NSAttributedString *)attributedString
+                                                paragraphAttributes:(ParagraphAttributes)paragraphAttributes
+                                                               size:(CGSize)size
 {
-  return [self _textStorageForNSAttributesString:[self _nsAttributedStringFromAttributedString:attributedString]
-                             paragraphAttributes:paragraphAttributes
-                                            size:size];
+  NSTextContainer *textContainer = [[NSTextContainer alloc] initWithSize:size];
+
+  textContainer.lineFragmentPadding = 0.0; // Note, the default value is 5.
+  textContainer.lineBreakMode = paragraphAttributes.maximumNumberOfLines > 0
+      ? RCTNSLineBreakModeFromEllipsizeMode(paragraphAttributes.ellipsizeMode)
+      : NSLineBreakByClipping;
+  textContainer.maximumNumberOfLines = paragraphAttributes.maximumNumberOfLines;
+
+  NSLayoutManager *layoutManager = [NSLayoutManager new];
+  layoutManager.usesFontLeading = NO;
+  [layoutManager addTextContainer:textContainer];
+
+  NSTextStorage *textStorage = [[NSTextStorage alloc] initWithAttributedString:attributedString];
+
+  [textStorage addLayoutManager:layoutManager];
+
+  if (paragraphAttributes.adjustsFontSizeToFit) {
+    CGFloat minimumFontSize = !isnan(paragraphAttributes.minimumFontSize) ? paragraphAttributes.minimumFontSize : 4.0;
+    CGFloat maximumFontSize = !isnan(paragraphAttributes.maximumFontSize) ? paragraphAttributes.maximumFontSize : 96.0;
+    [textStorage scaleFontSizeToFitSize:size minimumFontSize:minimumFontSize maximumFontSize:maximumFontSize];
+  }
+
+  return textStorage;
 }
 
 - (SharedEventEmitter)getEventEmitterWithAttributeString:(AttributedString)attributedString
@@ -178,9 +204,10 @@ - (SharedEventEmitter)getEventEmitterWithAttributeString:(AttributedString)attri
                                                    frame:(CGRect)frame
                                                  atPoint:(CGPoint)point
 {
-  NSTextStorage *textStorage = [self textStorageForAttributesString:attributedString
-                                                paragraphAttributes:paragraphAttributes
-                                                               size:frame.size];
+  NSTextStorage *textStorage = [self
+      _textStorageAndLayoutManagerWithAttributesString:[self _nsAttributedStringFromAttributedString:attributedString]
+                                   paragraphAttributes:paragraphAttributes
+                                                  size:frame.size];
   NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
   NSTextContainer *textContainer = layoutManager.textContainers.firstObject;
 
@@ -203,15 +230,25 @@ - (SharedEventEmitter)getEventEmitterWithAttributeString:(AttributedString)attri
   return nil;
 }
 
+- (NSAttributedString *)_nsAttributedStringFromAttributedString:(AttributedString)attributedString
+{
+  auto sharedNSAttributedString = _cache.get(attributedString, [](AttributedString attributedString) {
+    return wrapManagedObject(RCTNSAttributedStringFromAttributedString(attributedString));
+  });
+
+  return unwrapManagedObject(sharedNSAttributedString);
+}
+
 - (void)getRectWithAttributedString:(AttributedString)attributedString
                 paragraphAttributes:(ParagraphAttributes)paragraphAttributes
                  enumerateAttribute:(NSString *)enumerateAttribute
                               frame:(CGRect)frame
                          usingBlock:(RCTTextLayoutFragmentEnumerationBlock)block
 {
-  NSTextStorage *textStorage = [self textStorageForAttributesString:attributedString
-                                                paragraphAttributes:paragraphAttributes
-                                                               size:frame.size];
+  NSTextStorage *textStorage = [self
+      _textStorageAndLayoutManagerWithAttributesString:[self _nsAttributedStringFromAttributedString:attributedString]
+                                   paragraphAttributes:paragraphAttributes
+                                                  size:frame.size];
 
   NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
   NSTextContainer *textContainer = layoutManager.textContainers.firstObject;
@@ -242,85 +279,4 @@ - (void)getRectWithAttributedString:(AttributedString)attributedString
                        }];
 }
 
-#pragma mark - Private
-
-- (NSTextStorage *)_textStorageForNSAttributesString:(NSAttributedString *)attributedString
-                                 paragraphAttributes:(ParagraphAttributes)paragraphAttributes
-                                                size:(CGSize)size
-{
-  NSTextContainer *textContainer = [[NSTextContainer alloc] initWithSize:size];
-
-  textContainer.lineFragmentPadding = 0.0; // Note, the default value is 5.
-  textContainer.lineBreakMode = paragraphAttributes.maximumNumberOfLines > 0
-      ? RCTNSLineBreakModeFromEllipsizeMode(paragraphAttributes.ellipsizeMode)
-      : NSLineBreakByClipping;
-  textContainer.maximumNumberOfLines = paragraphAttributes.maximumNumberOfLines;
-
-  NSLayoutManager *layoutManager = [NSLayoutManager new];
-  layoutManager.usesFontLeading = NO;
-  [layoutManager addTextContainer:textContainer];
-
-  NSTextStorage *textStorage = [[NSTextStorage alloc] initWithAttributedString:attributedString];
-
-  [textStorage addLayoutManager:layoutManager];
-
-  if (paragraphAttributes.adjustsFontSizeToFit) {
-    CGFloat minimumFontSize = !isnan(paragraphAttributes.minimumFontSize) ? paragraphAttributes.minimumFontSize : 4.0;
-    CGFloat maximumFontSize = !isnan(paragraphAttributes.maximumFontSize) ? paragraphAttributes.maximumFontSize : 96.0;
-    [textStorage scaleFontSizeToFitSize:size minimumFontSize:minimumFontSize maximumFontSize:maximumFontSize];
-  }
-
-  return textStorage;
-}
-
-- (NSAttributedString *)_nsAttributedStringFromAttributedString:(AttributedString)attributedString
-{
-  auto sharedNSAttributedString = _cache.get(attributedString, [](AttributedString attributedString) {
-    return wrapManagedObject(RCTNSAttributedStringFromAttributedString(attributedString));
-  });
-
-  return unwrapManagedObject(sharedNSAttributedString);
-}
-
-- (TextMeasurement)_measureTextStorage:(NSTextStorage *)textStorage
-{
-  NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
-  NSTextContainer *textContainer = layoutManager.textContainers.firstObject;
-  [layoutManager ensureLayoutForTextContainer:textContainer];
-
-  CGSize size = [layoutManager usedRectForTextContainer:textContainer].size;
-
-  size = (CGSize){RCTCeilPixelValue(size.width), RCTCeilPixelValue(size.height)};
-
-  __block auto attachments = TextMeasurement::Attachments{};
-
-  [textStorage
-      enumerateAttribute:NSAttachmentAttributeName
-                 inRange:NSMakeRange(0, textStorage.length)
-                 options:0
-              usingBlock:^(NSTextAttachment *attachment, NSRange range, BOOL *stop) {
-                if (!attachment) {
-                  return;
-                }
-
-                CGSize attachmentSize = attachment.bounds.size;
-                CGRect glyphRect = [layoutManager boundingRectForGlyphRange:range inTextContainer:textContainer];
-
-                UIFont *font = [textStorage attribute:NSFontAttributeName atIndex:range.location effectiveRange:nil];
-
-                CGRect frame = {
-                    {glyphRect.origin.x,
-                     glyphRect.origin.y + glyphRect.size.height - attachmentSize.height + font.descender},
-                    attachmentSize};
-
-                auto rect = facebook::react::Rect{
-                    facebook::react::Point{frame.origin.x, frame.origin.y},
-                    facebook::react::Size{frame.size.width, frame.size.height}};
-
-                attachments.push_back(TextMeasurement::Attachment{rect, false});
-              }];
-
-  return TextMeasurement{{size.width, size.height}, attachments};
-}
-
 @end
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextPrimitivesConversions.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextPrimitivesConversions.h
similarity index 100%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/RCTTextPrimitivesConversions.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/RCTTextPrimitivesConversions.h
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/TextLayoutManager.h b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/TextLayoutManager.h
similarity index 87%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/TextLayoutManager.h
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/TextLayoutManager.h
index 095fae5..ec101a3 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/TextLayoutManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/TextLayoutManager.h
@@ -33,8 +33,7 @@ class TextLayoutManager {
   TextMeasurement measure(
       AttributedStringBox attributedStringBox,
       ParagraphAttributes paragraphAttributes,
-      LayoutConstraints layoutConstraints,
-      std::shared_ptr<void> hostTextStorage) const;
+      LayoutConstraints layoutConstraints) const;
 
   /*
    * Measures lines of `attributedString` using native text rendering
@@ -45,11 +44,6 @@ class TextLayoutManager {
       ParagraphAttributes paragraphAttributes,
       Size size) const;
 
-  std::shared_ptr<void> getHostTextStorage(
-      AttributedString attributedString,
-      ParagraphAttributes paragraphAttributes,
-      LayoutConstraints layoutConstraints) const;
-
   /*
    * Returns an opaque pointer to platform-specific TextLayoutManager.
    * Is used on a native views layer to delegate text rendering to the manager.
diff --git a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/TextLayoutManager.mm b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/TextLayoutManager.mm
similarity index 74%
rename from node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/TextLayoutManager.mm
rename to node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/TextLayoutManager.mm
index 4f2e871..74e905b 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/react/renderer/textlayoutmanager/TextLayoutManager.mm
+++ b/node_modules/react-native/ReactCommon/react/renderer/textlayoutmanager/platform/ios/TextLayoutManager.mm
@@ -25,31 +25,12 @@
   return self_;
 }
 
-std::shared_ptr<void> TextLayoutManager::getHostTextStorage(
-    AttributedString attributedString,
-    ParagraphAttributes paragraphAttributes,
-    LayoutConstraints layoutConstraints) const
-{
-  RCTTextLayoutManager *textLayoutManager = (RCTTextLayoutManager *)unwrapManagedObject(self_);
-  CGSize maximumSize = CGSize{layoutConstraints.maximumSize.width, CGFLOAT_MAX};
-
-  NSTextStorage *textStorage = [textLayoutManager textStorageForAttributesString:attributedString
-                                                             paragraphAttributes:paragraphAttributes
-                                                                            size:maximumSize];
-  return wrapManagedObject(textStorage);
-}
-
 TextMeasurement TextLayoutManager::measure(
     AttributedStringBox attributedStringBox,
     ParagraphAttributes paragraphAttributes,
-    LayoutConstraints layoutConstraints,
-    std::shared_ptr<void> hostTextStorage) const
+    LayoutConstraints layoutConstraints) const
 {
   RCTTextLayoutManager *textLayoutManager = (RCTTextLayoutManager *)unwrapManagedObject(self_);
-  NSTextStorage *textStorage;
-  if (hostTextStorage) {
-    textStorage = unwrapManagedObject(hostTextStorage);
-  }
 
   auto measurement = TextMeasurement{};
 
@@ -66,8 +47,7 @@
 
             auto measurement = [textLayoutManager measureAttributedString:attributedString
                                                       paragraphAttributes:paragraphAttributes
-                                                        layoutConstraints:layoutConstraints
-                                                              textStorage:textStorage];
+                                                        layoutConstraints:layoutConstraints];
 
             if (telemetry) {
               telemetry->didMeasureText();
@@ -89,8 +69,7 @@
 
       measurement = [textLayoutManager measureNSAttributedString:nsAttributedString
                                              paragraphAttributes:paragraphAttributes
-                                               layoutConstraints:layoutConstraints
-                                                     textStorage:textStorage];
+                                               layoutConstraints:layoutConstraints];
 
       if (telemetry) {
         telemetry->didMeasureText();
diff --git a/node_modules/react-native/ReactCommon/react/renderer/timeline/TimelineController.h b/node_modules/react-native/ReactCommon/react/renderer/timeline/TimelineController.h
index a50920f..997fb02 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/timeline/TimelineController.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/timeline/TimelineController.h
@@ -35,7 +35,7 @@ class TimelineController final : public UIManagerCommitHook {
 
   /*
    * Consumes and destroys a `TimelineHandler` instance triggering the
-   * destruction of all associated resources and stopping the introspection
+   * destruction of all associated resources and stoping the introspection
    * process.
    */
   void disable(TimelineHandler &&handler) const;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/BUCK b/node_modules/react-native/ReactCommon/react/renderer/uimanager/BUCK
index 1020c81..a049cd0 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/BUCK
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/BUCK
@@ -32,8 +32,6 @@ rn_xplat_cxx_library(
         prefix = "react/renderer/uimanager",
     ),
     compiler_flags_pedantic = True,
-    # TODO(145803035) Fix Android tests
-    fbandroid_tests_override = [],
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
     force_static = True,
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.cpp b/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.cpp
index 14cb023..e65992f 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.cpp
@@ -17,12 +17,12 @@ void SurfaceRegistryBinding::startSurface(
     jsi::Runtime &runtime,
     SurfaceId surfaceId,
     std::string const &moduleName,
-    folly::dynamic const &initialProps,
+    folly::dynamic const &initalProps,
     DisplayMode displayMode) {
   SystraceSection s("SurfaceRegistryBinding::startSurface");
   folly::dynamic parameters = folly::dynamic::object();
   parameters["rootTag"] = surfaceId;
-  parameters["initialProps"] = initialProps;
+  parameters["initialProps"] = initalProps;
   parameters["fabric"] = true;
 
   auto global = runtime.global();
@@ -70,12 +70,12 @@ void SurfaceRegistryBinding::setSurfaceProps(
     jsi::Runtime &runtime,
     SurfaceId surfaceId,
     std::string const &moduleName,
-    folly::dynamic const &initialProps,
+    folly::dynamic const &initalProps,
     DisplayMode displayMode) {
   SystraceSection s("UIManagerBinding::setSurfaceProps");
   folly::dynamic parameters = folly::dynamic::object();
   parameters["rootTag"] = surfaceId;
-  parameters["initialProps"] = initialProps;
+  parameters["initialProps"] = initalProps;
   parameters["fabric"] = true;
 
   auto global = runtime.global();
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.h b/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.h
index dc4fe86..b688b0f 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.h
@@ -24,7 +24,7 @@ class SurfaceRegistryBinding final {
       jsi::Runtime &runtime,
       SurfaceId surfaceId,
       std::string const &moduleName,
-      folly::dynamic const &initialProps,
+      folly::dynamic const &initalProps,
       DisplayMode displayMode);
 
   /*
@@ -36,7 +36,7 @@ class SurfaceRegistryBinding final {
       jsi::Runtime &runtime,
       SurfaceId surfaceId,
       std::string const &moduleName,
-      folly::dynamic const &initialProps,
+      folly::dynamic const &initalProps,
       DisplayMode displayMode);
 
   /*
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp
index 67de51a..44692ee 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.cpp
@@ -8,11 +8,10 @@
 #include "UIManager.h"
 
 #include <react/debug/react_native_assert.h>
-#include <react/renderer/core/DynamicPropsUtilities.h>
 #include <react/renderer/core/PropsParserContext.h>
 #include <react/renderer/core/ShadowNodeFragment.h>
-#include <react/renderer/core/TraitCast.h>
 #include <react/renderer/debug/SystraceSection.h>
+#include <react/renderer/graphics/Geometry.h>
 #include <react/renderer/uimanager/SurfaceRegistryBinding.h>
 #include <react/renderer/uimanager/UIManagerBinding.h>
 #include <react/renderer/uimanager/UIManagerCommitHook.h>
@@ -111,33 +110,14 @@ ShadowNode::Shared UIManager::cloneNode(
       shadowNode.getFamily().getSurfaceId(), *contextContainer_.get()};
 
   auto &componentDescriptor = shadowNode.getComponentDescriptor();
-  auto &family = shadowNode.getFamily();
-  auto props = ShadowNodeFragment::propsPlaceholder();
-
-  if (rawProps != nullptr) {
-    if (family.nativeProps_DEPRECATED != nullptr) {
-      // Values in `rawProps` patch (take precedence over)
-      // `nativeProps_DEPRECATED`. For example, if both `nativeProps_DEPRECATED`
-      // and `rawProps` contain key 'A'. Value from `rawProps` overrides what
-      // was previously in `nativeProps_DEPRECATED`.
-      family.nativeProps_DEPRECATED =
-          std::make_unique<folly::dynamic>(mergeDynamicProps(
-              *family.nativeProps_DEPRECATED, (folly::dynamic)*rawProps));
-
-      props = componentDescriptor.cloneProps(
-          propsParserContext,
-          shadowNode.getProps(),
-          RawProps(*family.nativeProps_DEPRECATED));
-    } else {
-      props = componentDescriptor.cloneProps(
-          propsParserContext, shadowNode.getProps(), *rawProps);
-    }
-  }
-
   auto clonedShadowNode = componentDescriptor.cloneShadowNode(
       shadowNode,
       {
-          /* .props = */ props,
+          /* .props = */
+          rawProps != nullptr
+              ? componentDescriptor.cloneProps(
+                    propsParserContext, shadowNode.getProps(), *rawProps)
+              : ShadowNodeFragment::propsPlaceholder(),
           /* .children = */ children,
       });
 
@@ -310,37 +290,34 @@ void UIManager::updateState(StateUpdate const &stateUpdate) const {
 
   shadowTreeRegistry_.visit(
       family->getSurfaceId(), [&](ShadowTree const &shadowTree) {
-        shadowTree.commit(
-            [&](RootShadowNode const &oldRootShadowNode) {
-              auto isValid = true;
-
-              auto rootNode = oldRootShadowNode.cloneTree(
-                  *family, [&](ShadowNode const &oldShadowNode) {
-                    auto newData =
-                        callback(oldShadowNode.getState()->getDataPointer());
-
-                    if (!newData) {
-                      isValid = false;
-                      // Just return something, we will discard it anyway.
-                      return oldShadowNode.clone({});
-                    }
-
-                    auto newState =
-                        componentDescriptor.createState(*family, newData);
-
-                    return oldShadowNode.clone({
-                        /* .props = */ ShadowNodeFragment::propsPlaceholder(),
-                        /* .children = */
-                        ShadowNodeFragment::childrenPlaceholder(),
-                        /* .state = */ newState,
-                    });
-                  });
-
-              return isValid
-                  ? std::static_pointer_cast<RootShadowNode>(rootNode)
-                  : nullptr;
-            },
-            {/* default commit options */});
+        shadowTree.commit([&](RootShadowNode const &oldRootShadowNode) {
+          auto isValid = true;
+
+          auto rootNode = oldRootShadowNode.cloneTree(
+              *family, [&](ShadowNode const &oldShadowNode) {
+                auto newData =
+                    callback(oldShadowNode.getState()->getDataPointer());
+
+                if (!newData) {
+                  isValid = false;
+                  // Just return something, we will discard it anyway.
+                  return oldShadowNode.clone({});
+                }
+
+                auto newState =
+                    componentDescriptor.createState(*family, newData);
+
+                return oldShadowNode.clone({
+                    /* .props = */ ShadowNodeFragment::propsPlaceholder(),
+                    /* .children = */
+                    ShadowNodeFragment::childrenPlaceholder(),
+                    /* .state = */ newState,
+                });
+              });
+
+          return isValid ? std::static_pointer_cast<RootShadowNode>(rootNode)
+                         : nullptr;
+        });
       });
 }
 
@@ -353,48 +330,6 @@ void UIManager::dispatchCommand(
   }
 }
 
-void UIManager::setNativeProps_DEPRECATED(
-    ShadowNode::Shared const &shadowNode,
-    RawProps const &rawProps) const {
-  auto &family = shadowNode->getFamily();
-  if (family.nativeProps_DEPRECATED) {
-    // Values in `rawProps` patch (take precedence over)
-    // `nativeProps_DEPRECATED`. For example, if both `nativeProps_DEPRECATED`
-    // and `rawProps` contain key 'A'. Value from `rawProps` overrides what was
-    // previously in `nativeProps_DEPRECATED`.
-    family.nativeProps_DEPRECATED =
-        std::make_unique<folly::dynamic>(mergeDynamicProps(
-            *family.nativeProps_DEPRECATED, (folly::dynamic)rawProps));
-  } else {
-    family.nativeProps_DEPRECATED =
-        std::make_unique<folly::dynamic>((folly::dynamic)rawProps);
-  }
-
-  shadowTreeRegistry_.visit(
-      family.getSurfaceId(), [&](ShadowTree const &shadowTree) {
-        shadowTree.commit(
-            [&](RootShadowNode const &oldRootShadowNode) {
-              auto rootNode = oldRootShadowNode.cloneTree(
-                  family, [&](ShadowNode const &oldShadowNode) {
-                    auto &componentDescriptor =
-                        componentDescriptorRegistry_->at(
-                            shadowNode->getComponentHandle());
-                    PropsParserContext propsParserContext{
-                        family.getSurfaceId(), *contextContainer_.get()};
-                    auto props = componentDescriptor.cloneProps(
-                        propsParserContext,
-                        getNewestCloneOfShadowNode(*shadowNode)->getProps(),
-                        rawProps);
-
-                    return oldShadowNode.clone({/* .props = */ props});
-                  });
-
-              return std::static_pointer_cast<RootShadowNode>(rootNode);
-            },
-            {/* default commit options */});
-      });
-}
-
 void UIManager::sendAccessibilityEvent(
     const ShadowNode::Shared &shadowNode,
     std::string const &eventType) {
@@ -417,57 +352,6 @@ void UIManager::configureNextLayoutAnimation(
   }
 }
 
-static ShadowNode::Shared findShadowNodeByTagRecursively(
-    ShadowNode::Shared parentShadowNode,
-    Tag tag) {
-  if (parentShadowNode->getTag() == tag) {
-    return parentShadowNode;
-  }
-
-  for (ShadowNode::Shared const &shadowNode : parentShadowNode->getChildren()) {
-    auto result = findShadowNodeByTagRecursively(shadowNode, tag);
-    if (result) {
-      return result;
-    }
-  }
-
-  return nullptr;
-}
-
-ShadowNode::Shared UIManager::findShadowNodeByTag_DEPRECATED(Tag tag) const {
-  auto shadowNode = ShadowNode::Shared{};
-
-  shadowTreeRegistry_.enumerate([&](ShadowTree const &shadowTree, bool &stop) {
-    RootShadowNode const *rootShadowNode;
-    // The public interface of `ShadowTree` discourages accessing a stored
-    // pointer to a root node because of the possible data race.
-    // To work around this, we ask for a commit and immediately cancel it
-    // returning `nullptr` instead of a new shadow tree.
-    // We don't want to add a way to access a stored pointer to a root node
-    // because this `findShadowNodeByTag` is deprecated. It is only added
-    // to make migration to the new architecture easier.
-    shadowTree.tryCommit(
-        [&](RootShadowNode const &oldRootShadowNode) {
-          rootShadowNode = &oldRootShadowNode;
-          return nullptr;
-        },
-        {/* default commit options */});
-
-    if (rootShadowNode != nullptr) {
-      auto const &children = rootShadowNode->getChildren();
-      if (!children.empty()) {
-        auto const &child = children.front();
-        shadowNode = findShadowNodeByTagRecursively(child, tag);
-        if (shadowNode) {
-          stop = true;
-        }
-      }
-    }
-  });
-
-  return shadowNode;
-}
-
 void UIManager::setComponentDescriptorRegistry(
     const SharedComponentDescriptorRegistry &componentDescriptorRegistry) {
   componentDescriptorRegistry_ = componentDescriptorRegistry;
@@ -497,7 +381,7 @@ ShadowTreeRegistry const &UIManager::getShadowTreeRegistry() const {
 
 void UIManager::registerCommitHook(
     UIManagerCommitHook const &commitHook) const {
-  std::unique_lock lock(commitHookMutex_);
+  std::unique_lock<butter::shared_mutex> lock(commitHookMutex_);
   react_native_assert(
       std::find(commitHooks_.begin(), commitHooks_.end(), &commitHook) ==
       commitHooks_.end());
@@ -507,7 +391,7 @@ void UIManager::registerCommitHook(
 
 void UIManager::unregisterCommitHook(
     UIManagerCommitHook const &commitHook) const {
-  std::unique_lock lock(commitHookMutex_);
+  std::unique_lock<butter::shared_mutex> lock(commitHookMutex_);
   auto iterator =
       std::find(commitHooks_.begin(), commitHooks_.end(), &commitHook);
   react_native_assert(iterator != commitHooks_.end());
@@ -521,7 +405,7 @@ RootShadowNode::Unshared UIManager::shadowTreeWillCommit(
     ShadowTree const &shadowTree,
     RootShadowNode::Shared const &oldRootShadowNode,
     RootShadowNode::Unshared const &newRootShadowNode) const {
-  std::shared_lock lock(commitHookMutex_);
+  std::shared_lock<butter::shared_mutex> lock(commitHookMutex_);
 
   auto resultRootShadowNode = newRootShadowNode;
   for (auto const *commitHook : commitHooks_) {
@@ -533,13 +417,12 @@ RootShadowNode::Unshared UIManager::shadowTreeWillCommit(
 }
 
 void UIManager::shadowTreeDidFinishTransaction(
-    MountingCoordinator::Shared mountingCoordinator,
-    bool mountSynchronously) const {
+    ShadowTree const & /*shadowTree*/,
+    MountingCoordinator::Shared const &mountingCoordinator) const {
   SystraceSection s("UIManager::shadowTreeDidFinishTransaction");
 
   if (delegate_ != nullptr) {
-    delegate_->uiManagerDidFinishTransaction(
-        std::move(mountingCoordinator), mountSynchronously);
+    delegate_->uiManagerDidFinishTransaction(mountingCoordinator);
   }
 }
 
@@ -558,7 +441,7 @@ void UIManager::stopSurfaceForAnimationDelegate(SurfaceId surfaceId) const {
 void UIManager::animationTick() const {
   if (animationDelegate_ != nullptr &&
       animationDelegate_->shouldAnimateFrame()) {
-    shadowTreeRegistry_.enumerate([](ShadowTree const &shadowTree, bool &) {
+    shadowTreeRegistry_.enumerate([](ShadowTree const &shadowTree) {
       shadowTree.notifyDelegatesOfUpdates();
     });
   }
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.h b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.h
index 5aaed2d..e0ba886 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManager.h
@@ -11,7 +11,6 @@
 #include <jsi/jsi.h>
 
 #include <ReactCommon/RuntimeExecutor.h>
-#include <shared_mutex>
 
 #include <react/renderer/componentregistry/ComponentDescriptorRegistry.h>
 #include <react/renderer/core/RawValue.h>
@@ -104,8 +103,8 @@ class UIManager final : public ShadowTreeDelegate {
 #pragma mark - ShadowTreeDelegate
 
   void shadowTreeDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator,
-      bool mountSynchronously) const override;
+      ShadowTree const &shadowTree,
+      MountingCoordinator::Shared const &mountingCoordinator) const override;
 
   RootShadowNode::Unshared shadowTreeWillCommit(
       ShadowTree const &shadowTree,
@@ -163,22 +162,10 @@ class UIManager final : public ShadowTreeDelegate {
       std::string const &commandName,
       folly::dynamic const &args) const;
 
-  void setNativeProps_DEPRECATED(
-      ShadowNode::Shared const &shadowNode,
-      RawProps const &rawProps) const;
-
   void sendAccessibilityEvent(
       const ShadowNode::Shared &shadowNode,
       std::string const &eventType);
 
-  /*
-   * Iterates over all shadow nodes which are parts of all registered surfaces
-   * and find the one that has given `tag`. Returns `nullptr` if the node wasn't
-   * found. This is a temporary workaround that should not be used in any core
-   * functionality.
-   */
-  ShadowNode::Shared findShadowNodeByTag_DEPRECATED(Tag tag) const;
-
   ShadowTreeRegistry const &getShadowTreeRegistry() const;
 
  private:
@@ -204,7 +191,7 @@ class UIManager final : public ShadowTreeDelegate {
   BackgroundExecutor const backgroundExecutor_{};
   ContextContainer::Shared contextContainer_;
 
-  mutable std::shared_mutex commitHookMutex_;
+  mutable butter::shared_mutex commitHookMutex_;
   mutable std::vector<UIManagerCommitHook const *> commitHooks_;
 
   std::unique_ptr<LeakChecker> leakChecker_;
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerAnimationDelegate.h b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerAnimationDelegate.h
index 780346c..d20f43c 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerAnimationDelegate.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerAnimationDelegate.h
@@ -36,14 +36,6 @@ class UIManagerAnimationDelegate {
   virtual void setComponentDescriptorRegistry(
       const SharedComponentDescriptorRegistry &componentDescriptorRegistry) = 0;
 
-  /**
-   * Set Animation flags for dropping delete and create mutations
-   *
-   * @param reduceDeleteCreateMutation
-   */
-  virtual void setReduceDeleteCreateMutation(
-      bool reduceDeleteCreateMutation) = 0;
-
   /**
    * Only needed on Android to drive animations.
    */
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerBinding.cpp b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerBinding.cpp
index 27092d3..2e31a72 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerBinding.cpp
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerBinding.cpp
@@ -11,7 +11,6 @@
 #include <jsi/JSIDynamic.h>
 #include <react/debug/react_native_assert.h>
 #include <react/renderer/core/LayoutableShadowNode.h>
-#include <react/renderer/core/TraitCast.h>
 #include <react/renderer/debug/SystraceSection.h>
 #include <react/renderer/runtimescheduler/RuntimeSchedulerBinding.h>
 #include <react/renderer/uimanager/primitives.h>
@@ -404,11 +403,7 @@ jsi::Value UIManagerBinding::get(
             auto shadowNodeList =
                 shadowNodeListFromWeakList(weakShadowNodeList);
             if (shadowNodeList) {
-              uiManager->completeSurface(
-                  surfaceId,
-                  shadowNodeList,
-                  {/* .enableStateReconciliation = */ true,
-                   /* .mountSynchronously = */ false});
+              uiManager->completeSurface(surfaceId, shadowNodeList, {true});
             }
           } else {
             auto weakShadowNodeList =
@@ -434,11 +429,7 @@ jsi::Value UIManagerBinding::get(
                   auto strongUIManager = weakUIManager.lock();
                   if (shadowNodeList && strongUIManager) {
                     strongUIManager->completeSurface(
-                        surfaceId,
-                        shadowNodeList,
-                        {/* .enableStateReconciliation = */ true,
-                         /* .mountSynchronously = */ false,
-                         /* .shouldYield = */ shouldYield});
+                        surfaceId, shadowNodeList, {true, shouldYield});
                   }
                 });
           }
@@ -502,7 +493,7 @@ jsi::Value UIManagerBinding::get(
           auto shadowNode = shadowNodeFromValue(runtime, arguments[0]);
           if (shadowNode) {
             uiManager->dispatchCommand(
-                shadowNode,
+                shadowNodeFromValue(runtime, arguments[0]),
                 stringFromValue(runtime, arguments[1]),
                 commandArgsFromValue(runtime, arguments[2]));
           }
@@ -510,24 +501,6 @@ jsi::Value UIManagerBinding::get(
         });
   }
 
-  if (methodName == "setNativeProps") {
-    return jsi::Function::createFromHostFunction(
-        runtime,
-        name,
-        2,
-        [uiManager](
-            jsi::Runtime &runtime,
-            const jsi::Value &,
-            const jsi::Value *arguments,
-            size_t) -> jsi::Value {
-          uiManager->setNativeProps_DEPRECATED(
-              shadowNodeFromValue(runtime, arguments[0]),
-              RawProps(runtime, arguments[1]));
-
-          return jsi::Value::undefined();
-        });
-  }
-
   // Legacy API
   if (methodName == "measureLayout") {
     return jsi::Function::createFromHostFunction(
@@ -621,7 +594,7 @@ jsi::Value UIManagerBinding::get(
               *shadowNodeFromValue(runtime, arguments[0]),
               nullptr,
               {/* .includeTransform = */ true,
-               /* .includeViewportOffset = */ true});
+               /* includeViewportOffset = */ true});
 
           auto onSuccessFunction =
               arguments[1].getObject(runtime).getFunction(runtime);
@@ -642,40 +615,6 @@ jsi::Value UIManagerBinding::get(
         });
   }
 
-  if (methodName == "getBoundingClientRect") {
-    // This is similar to `measureInWindow`, except it's explicitly synchronous
-    // (returns the result instead of passing it to a callback).
-    // The behavior is similar to `Element.prototype.getBoundingClientRect` from
-    // Web.
-    return jsi::Function::createFromHostFunction(
-        runtime,
-        name,
-        1,
-        [uiManager](
-            jsi::Runtime &runtime,
-            jsi::Value const & /*thisValue*/,
-            jsi::Value const *arguments,
-            size_t /*count*/) noexcept -> jsi::Value {
-          auto layoutMetrics = uiManager->getRelativeLayoutMetrics(
-              *shadowNodeFromValue(runtime, arguments[0]),
-              nullptr,
-              {/* .includeTransform = */ true,
-               /* .includeViewportOffset = */ true});
-
-          if (layoutMetrics == EmptyLayoutMetrics) {
-            return jsi::Value::undefined();
-          }
-
-          auto frame = layoutMetrics.frame;
-          return jsi::Array::createWithElements(
-              runtime,
-              jsi::Value{runtime, (double)frame.origin.x},
-              jsi::Value{runtime, (double)frame.origin.y},
-              jsi::Value{runtime, (double)frame.size.width},
-              jsi::Value{runtime, (double)frame.size.height});
-        });
-  }
-
   if (methodName == "sendAccessibilityEvent") {
     return jsi::Function::createFromHostFunction(
         runtime,
@@ -736,27 +675,6 @@ jsi::Value UIManagerBinding::get(
     return {serialize(ReactEventPriority::Discrete)};
   }
 
-  if (methodName == "findShadowNodeByTag_DEPRECATED") {
-    return jsi::Function::createFromHostFunction(
-        runtime,
-        name,
-        1,
-        [uiManager](
-            jsi::Runtime &runtime,
-            jsi::Value const &,
-            jsi::Value const *arguments,
-            size_t) -> jsi::Value {
-          auto shadowNode = uiManager->findShadowNodeByTag_DEPRECATED(
-              tagFromValue(arguments[0]));
-
-          if (!shadowNode) {
-            return jsi::Value::null();
-          }
-
-          return valueFromShadowNode(runtime, shadowNode);
-        });
-  }
-
   return jsi::Value::undefined();
 }
 
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerDelegate.h b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerDelegate.h
index 8ad86f3..77f1e4e 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerDelegate.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/UIManagerDelegate.h
@@ -23,8 +23,7 @@ class UIManagerDelegate {
    * For this moment the tree is already laid out and sealed.
    */
   virtual void uiManagerDidFinishTransaction(
-      MountingCoordinator::Shared mountingCoordinator,
-      bool mountSynchronously) = 0;
+      MountingCoordinator::Shared const &mountingCoordinator) = 0;
 
   /*
    * Called each time when UIManager constructs a new Shadow Node. Receiver
diff --git a/node_modules/react-native/ReactCommon/react/renderer/uimanager/primitives.h b/node_modules/react-native/ReactCommon/react/renderer/uimanager/primitives.h
index 07622b8..a7e7f5f 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/uimanager/primitives.h
+++ b/node_modules/react-native/ReactCommon/react/renderer/uimanager/primitives.h
@@ -11,7 +11,6 @@
 #include <jsi/JSIDynamic.h>
 #include <jsi/jsi.h>
 #include <react/debug/react_native_assert.h>
-#include <react/renderer/core/CoreFeatures.h>
 #include <react/renderer/core/EventHandler.h>
 #include <react/renderer/core/ShadowNode.h>
 
@@ -39,9 +38,9 @@ struct ShadowNodeWrapper : public jsi::HostObject {
   ShadowNode::Shared shadowNode;
 };
 
-struct ShadowNodeListWrapper : public jsi::HostObject, public jsi::NativeState {
+struct ShadowNodeListWrapper : public jsi::HostObject {
   ShadowNodeListWrapper(ShadowNode::UnsharedListOfShared shadowNodeList)
-      : shadowNodeList(std::move(shadowNodeList)) {}
+      : shadowNodeList(shadowNodeList) {}
 
   // The below method needs to be implemented out-of-line in order for the class
   // to have at least one "key function" (see
@@ -53,63 +52,29 @@ struct ShadowNodeListWrapper : public jsi::HostObject, public jsi::NativeState {
 
 inline static ShadowNode::Shared shadowNodeFromValue(
     jsi::Runtime &runtime,
-    const jsi::Value &value) {
+    jsi::Value const &value) {
   if (value.isNull()) {
     return nullptr;
   }
 
-  if (CoreFeatures::useNativeState) {
-    return value.getObject(runtime).getNativeState<ShadowNode>(runtime);
-  } else {
-    return value.getObject(runtime)
-        .getHostObject<ShadowNodeWrapper>(runtime)
-        ->shadowNode;
-  }
+  return value.getObject(runtime)
+      .getHostObject<ShadowNodeWrapper>(runtime)
+      ->shadowNode;
 }
 
 inline static jsi::Value valueFromShadowNode(
     jsi::Runtime &runtime,
     ShadowNode::Shared shadowNode) {
-  if (CoreFeatures::useNativeState) {
-    jsi::Object obj(runtime);
-    // Need to const_cast since JSI only allows non-const pointees
-    obj.setNativeState(
-        runtime, std::const_pointer_cast<ShadowNode>(std::move(shadowNode)));
-    return obj;
-  } else {
-    return jsi::Object::createFromHostObject(
-        runtime, std::make_shared<ShadowNodeWrapper>(std::move(shadowNode)));
-  }
+  return jsi::Object::createFromHostObject(
+      runtime, std::make_shared<ShadowNodeWrapper>(std::move(shadowNode)));
 }
 
 inline static ShadowNode::UnsharedListOfShared shadowNodeListFromValue(
     jsi::Runtime &runtime,
-    const jsi::Value &value) {
-  if (CoreFeatures::useNativeState) {
-    return value.getObject(runtime)
-        .getNativeState<ShadowNodeListWrapper>(runtime)
-        ->shadowNodeList;
-  } else {
-    return value.getObject(runtime)
-        .getHostObject<ShadowNodeListWrapper>(runtime)
-        ->shadowNodeList;
-  }
-}
-
-inline static jsi::Value valueFromShadowNodeList(
-    jsi::Runtime &runtime,
-    ShadowNode::UnsharedListOfShared shadowNodeList) {
-  auto wrapper =
-      std::make_shared<ShadowNodeListWrapper>(std::move(shadowNodeList));
-  if (CoreFeatures::useNativeState) {
-    // Use the wrapper for NativeState too, otherwise we can't implement
-    // the marker interface. Could be simplified to a simple struct wrapper.
-    jsi::Object obj(runtime);
-    obj.setNativeState(runtime, std::move(wrapper));
-    return obj;
-  } else {
-    return jsi::Object::createFromHostObject(runtime, std::move(wrapper));
-  }
+    jsi::Value const &value) {
+  return value.getObject(runtime)
+      .getHostObject<ShadowNodeListWrapper>(runtime)
+      ->shadowNodeList;
 }
 
 inline static ShadowNode::UnsharedListOfShared shadowNodeListFromWeakList(
@@ -128,14 +93,25 @@ inline static ShadowNode::UnsharedListOfShared shadowNodeListFromWeakList(
 inline static ShadowNode::UnsharedListOfWeak weakShadowNodeListFromValue(
     jsi::Runtime &runtime,
     jsi::Value const &value) {
-  auto shadowNodeList = shadowNodeListFromValue(runtime, value);
+  auto shadowNodeList = value.getObject(runtime)
+                            .getHostObject<ShadowNodeListWrapper>(runtime)
+                            ->shadowNodeList;
+
   auto weakShadowNodeList = std::make_shared<ShadowNode::ListOfWeak>();
   for (auto const &shadowNode : *shadowNodeList) {
     weakShadowNodeList->push_back(shadowNode);
   }
+
   return weakShadowNodeList;
 }
 
+inline static jsi::Value valueFromShadowNodeList(
+    jsi::Runtime &runtime,
+    const ShadowNode::UnsharedListOfShared &shadowNodeList) {
+  return jsi::Object::createFromHostObject(
+      runtime, std::make_unique<ShadowNodeListWrapper>(shadowNodeList));
+}
+
 inline static Tag tagFromValue(jsi::Value const &value) {
   return (Tag)value.getNumber();
 }
diff --git a/node_modules/react-native/ReactCommon/react/utils/.clang-tidy b/node_modules/react-native/ReactCommon/react/utils/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/react/utils/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/react/utils/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/react/utils/BUCK b/node_modules/react-native/ReactCommon/react/utils/BUCK
index 50fc285..e29248a 100644
--- a/node_modules/react-native/ReactCommon/react/utils/BUCK
+++ b/node_modules/react-native/ReactCommon/react/utils/BUCK
@@ -19,6 +19,7 @@ rn_xplat_cxx_library(
     srcs = glob(
         [
             "**/*.cpp",
+            "**/*.mm",
         ],
         exclude = glob(["tests/**/*.cpp"]),
     ),
@@ -41,11 +42,6 @@ rn_xplat_cxx_library(
     fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
     fbobjc_frameworks = ["Foundation"],
     fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags(),
-    fbobjc_srcs = glob(
-        [
-            "**/*.mm",
-        ],
-    ),
     force_static = True,
     labels = [
         "pfh:ReactNative_CommonInfrastructurePlaceholder",
@@ -59,7 +55,7 @@ rn_xplat_cxx_library(
     tests = [],
     visibility = ["PUBLIC"],
     deps = [
-        "//xplat/folly/container:evicting_cache_map",
+        "//xplat/folly:container_evicting_cache_map",
         "//xplat/jsi:jsi",
         react_native_xplat_target("butter:butter"),
         react_native_xplat_target("react/debug:debug"),
diff --git a/node_modules/react-native/ReactCommon/react/utils/ContextContainer.h b/node_modules/react-native/ReactCommon/react/utils/ContextContainer.h
index dd3f839..636736a 100644
--- a/node_modules/react-native/ReactCommon/react/utils/ContextContainer.h
+++ b/node_modules/react-native/ReactCommon/react/utils/ContextContainer.h
@@ -10,10 +10,10 @@
 #include <memory>
 #include <mutex>
 #include <optional>
-#include <shared_mutex>
 #include <string>
 
 #include <butter/map.h>
+#include <butter/mutex.h>
 
 #include <react/debug/flags.h>
 #include <react/debug/react_native_assert.h>
@@ -38,11 +38,11 @@ class ContextContainer final {
    * example if the type `T` is `std::shared_ptr<const ReactNativeConfig>`,
    * then one would use `"ReactNativeConfig"` for the `key`, even if the
    * instance is actually a `shared_ptr` of derived class
-   *`ReactNativeConfig`.
+   *`EmptyReactNativeConfig`.
    */
   template <typename T>
   void insert(std::string const &key, T const &instance) const {
-    std::unique_lock lock(mutex_);
+    std::unique_lock<butter::shared_mutex> lock(mutex_);
 
     instances_.insert({key, std::make_shared<T>(instance)});
   }
@@ -52,7 +52,7 @@ class ContextContainer final {
    * Does nothing if the instance was not found.
    */
   void erase(std::string const &key) const {
-    std::unique_lock lock(mutex_);
+    std::unique_lock<butter::shared_mutex> lock(mutex_);
 
     instances_.erase(key);
   }
@@ -63,7 +63,7 @@ class ContextContainer final {
    * values from the given container.
    */
   void update(ContextContainer const &contextContainer) const {
-    std::unique_lock lock(mutex_);
+    std::unique_lock<butter::shared_mutex> lock(mutex_);
 
     for (auto const &pair : contextContainer.instances_) {
       instances_.erase(pair.first);
@@ -78,7 +78,7 @@ class ContextContainer final {
    */
   template <typename T>
   T at(std::string const &key) const {
-    std::shared_lock lock(mutex_);
+    std::shared_lock<butter::shared_mutex> lock(mutex_);
 
     react_native_assert(
         instances_.find(key) != instances_.end() &&
@@ -93,7 +93,7 @@ class ContextContainer final {
    */
   template <typename T>
   std::optional<T> find(std::string const &key) const {
-    std::shared_lock lock(mutex_);
+    std::shared_lock<butter::shared_mutex> lock(mutex_);
 
     auto iterator = instances_.find(key);
     if (iterator == instances_.end()) {
@@ -104,7 +104,7 @@ class ContextContainer final {
   }
 
  private:
-  mutable std::shared_mutex mutex_;
+  mutable butter::shared_mutex mutex_;
   // Protected by mutex_`.
   mutable butter::map<std::string, std::shared_ptr<void>> instances_;
 };
diff --git a/node_modules/react-native/ReactCommon/react/utils/React-utils.podspec b/node_modules/react-native/ReactCommon/react/utils/React-utils.podspec
deleted file mode 100644
index 29da22a..0000000
--- a/node_modules/react-native/ReactCommon/react/utils/React-utils.podspec
+++ /dev/null
@@ -1,57 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "..", "..", "..", "package.json")))
-version = package['version']
-
-source = { :git => 'https://github.com/facebook/react-native.git' }
-if version == '1000.0.0'
-  # This is an unpublished version, use the latest commit hash of the react-native repo, which we’re presumably in.
-  source[:commit] = `git rev-parse HEAD`.strip if system("git rev-parse --git-dir > /dev/null 2>&1")
-else
-  source[:tag] = "v#{version}"
-end
-
-folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
-folly_version = '2021.07.22.00'
-
-header_search_paths = [
-    "\"$(PODS_ROOT)/RCT-Folly\"",
-    "\"$(PODS_TARGET_SRCROOT)\"",
-    "\"$(PODS_TARGET_SRCROOT)/ReactCommon\"",
-]
-
-if ENV["USE_FRAMEWORKS"]
-  header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\""
-end
-
-Pod::Spec.new do |s|
-  s.name                   = "React-utils"
-  s.version                = version
-  s.summary                = "-"  # TODO
-  s.homepage               = "https://reactnative.dev/"
-  s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
-  s.platforms              = { :ios => min_ios_version_supported }
-  s.source                 = source
-  s.source_files           = "**/*.{cpp,h,mm}"
-  s.compiler_flags         = folly_compiler_flags
-  s.header_dir             = "react/utils"
-  s.exclude_files          = "tests"
-  s.pod_target_xcconfig    = {
-    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
-    "HEADER_SEARCH_PATHS" => header_search_paths.join(' ')}
-
-  if ENV['USE_FRAMEWORKS']
-    s.module_name            = "React_utils"
-    s.header_mappings_dir  = File.absolute_path("../..")
-  end
-
-  s.dependency "RCT-Folly", folly_version
-  s.dependency "React-debug"
-  s.dependency "glog"
-end
diff --git a/node_modules/react-native/ReactCommon/react/utils/SharedFunction.h b/node_modules/react-native/ReactCommon/react/utils/SharedFunction.h
index e67c4c6..a4a9587 100644
--- a/node_modules/react-native/ReactCommon/react/utils/SharedFunction.h
+++ b/node_modules/react-native/ReactCommon/react/utils/SharedFunction.h
@@ -7,7 +7,9 @@
 
 #include <functional>
 #include <memory>
-#include <shared_mutex>
+#include <mutex>
+
+#include <butter/mutex.h>
 
 namespace facebook {
 namespace react {
@@ -22,14 +24,14 @@ namespace react {
  * - When captured by `std::function` arguments are not copyable;
  * - When we need to replace the content of the callable later on the go.
  */
-template <typename... ArgumentT>
+template <typename ReturnT = void, typename... ArgumentT>
 class SharedFunction {
-  using T = void(ArgumentT...);
+  using T = ReturnT(ArgumentT...);
 
   struct Pair {
     Pair(std::function<T> &&function) : function(std::move(function)) {}
     std::function<T> function;
-    std::shared_mutex mutex{};
+    butter::shared_mutex mutex{};
   };
 
  public:
@@ -43,15 +45,13 @@ class SharedFunction {
   SharedFunction &operator=(SharedFunction &&other) noexcept = default;
 
   void assign(std::function<T> function) const {
-    std::unique_lock lock(pair_->mutex);
+    std::unique_lock<butter::shared_mutex> lock(pair_->mutex);
     pair_->function = function;
   }
 
-  void operator()(ArgumentT... args) const {
-    std::shared_lock lock(pair_->mutex);
-    if (pair_->function) {
-      pair_->function(args...);
-    }
+  ReturnT operator()(ArgumentT... args) const {
+    std::shared_lock<butter::shared_mutex> lock(pair_->mutex);
+    return pair_->function(args...);
   }
 
  private:
diff --git a/node_modules/react-native/ReactCommon/reactperflogger/.clang-tidy b/node_modules/react-native/ReactCommon/reactperflogger/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/reactperflogger/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/reactperflogger/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/reactperflogger/React-perflogger.podspec b/node_modules/react-native/ReactCommon/reactperflogger/React-perflogger.podspec
index 37a372c..24229c0 100644
--- a/node_modules/react-native/ReactCommon/reactperflogger/React-perflogger.podspec
+++ b/node_modules/react-native/ReactCommon/reactperflogger/React-perflogger.podspec
@@ -26,7 +26,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{cpp,h}"
diff --git a/node_modules/react-native/ReactCommon/runtimeexecutor/.clang-tidy b/node_modules/react-native/ReactCommon/runtimeexecutor/.clang-tidy
index 9f33ef5..c98fd78 100644
--- a/node_modules/react-native/ReactCommon/runtimeexecutor/.clang-tidy
+++ b/node_modules/react-native/ReactCommon/runtimeexecutor/.clang-tidy
@@ -2,5 +2,4 @@
 Checks: '>
 clang-diagnostic-*,
 '
-InheritParentConfig: true
 ...
diff --git a/node_modules/react-native/ReactCommon/runtimeexecutor/React-runtimeexecutor.podspec b/node_modules/react-native/ReactCommon/runtimeexecutor/React-runtimeexecutor.podspec
index 2a36877..5cbadf3 100644
--- a/node_modules/react-native/ReactCommon/runtimeexecutor/React-runtimeexecutor.podspec
+++ b/node_modules/react-native/ReactCommon/runtimeexecutor/React-runtimeexecutor.podspec
@@ -26,7 +26,7 @@ Pod::Spec.new do |s|
   s.summary                = "-"  # TODO
   s.homepage               = "https://reactnative.dev/"
   s.license                = package["license"]
-  s.author                 = "Meta Platforms, Inc. and its affiliates"
+  s.author                 = "Facebook, Inc. and its affiliates"
   s.platforms              = { :ios => "12.4" }
   s.source                 = source
   s.source_files           = "**/*.{cpp,h}"
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/CMakeLists.txt b/node_modules/react-native/ReactCommon/yoga/yoga/CMakeLists.txt
deleted file mode 100644
index e51f367..0000000
--- a/node_modules/react-native/ReactCommon/yoga/yoga/CMakeLists.txt
+++ /dev/null
@@ -1,41 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-
-cmake_minimum_required(VERSION 3.13)
-project(yogacore)
-set(CMAKE_VERBOSE_MAKEFILE on)
-
-if(TARGET yogacore)
-    return()
-endif()
-
-include(CheckIPOSupported)
-
-set(YOGA_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/..)
-include(${YOGA_ROOT}/cmake/project-defaults.cmake)
-
-
-file(GLOB SOURCES CONFIGURE_DEPENDS
-    ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
-    ${CMAKE_CURRENT_SOURCE_DIR}/**/*.cpp)
-
-add_library(yogacore STATIC ${SOURCES})
-
-# Yoga conditionally uses <android/log> when building for Android
-if (ANDROID)
-    target_link_libraries(yogacore log)
-endif()
-
-check_ipo_supported(RESULT result)
-if(result)
-  set_target_properties(yogacore PROPERTIES
-    CMAKE_INTERPROCEDURAL_OPTIMIZATION true)
-endif()
-
-target_include_directories(yogacore
-    PUBLIC
-    $<BUILD_INTERFACE:${YOGA_ROOT}>
-    $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/yoga>)
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/CompactValue.h b/node_modules/react-native/ReactCommon/yoga/yoga/CompactValue.h
index e489fbb..6568c48 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/CompactValue.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/CompactValue.h
@@ -9,14 +9,6 @@
 
 #ifdef __cplusplus
 
-#if defined(__has_include) && __has_include(<version>)
-// needed to be able to evaluate defined(__cpp_lib_bit_cast)
-#include <version>
-#else
-// needed to be able to evaluate defined(__cpp_lib_bit_cast)
-#include <ciso646>
-#endif
-
 #ifdef __cpp_lib_bit_cast
 #include <bit>
 #else
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Utils.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/Utils.cpp
index 7cc9402..e448d99 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Utils.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Utils.cpp
@@ -74,7 +74,7 @@ YGFloatOptional YGFloatOptionalMax(YGFloatOptional op1, YGFloatOptional op2) {
   return op1.isUndefined() ? op2 : op1;
 }
 
-void yoga::throwLogicalErrorWithMessage(const char* message) {
+void throwLogicalErrorWithMessage(const char* message) {
 #if defined(__cpp_exceptions)
   throw std::logic_error(message);
 #else // !defined(__cpp_exceptions)
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Utils.h b/node_modules/react-native/ReactCommon/yoga/yoga/Utils.h
index 52a0954..8588ecc 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Utils.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Utils.h
@@ -117,7 +117,7 @@ inline YGFloatOptional YGResolveValue(
 }
 
 inline YGFloatOptional YGResolveValue(
-    facebook::yoga::detail::CompactValue value,
+    yoga::detail::CompactValue value,
     float ownerSize) {
   return YGResolveValue((YGValue) value, ownerSize);
 }
@@ -142,9 +142,11 @@ inline YGFlexDirection YGResolveFlexDirection(
 }
 
 inline YGFloatOptional YGResolveValueMargin(
-    facebook::yoga::detail::CompactValue value,
+    yoga::detail::CompactValue value,
     const float ownerSize) {
   return value.isAuto() ? YGFloatOptional{0} : YGResolveValue(value, ownerSize);
 }
 
+void throwLogicalErrorWithMessage(const char* message);
+
 #endif
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.cpp
index acb1bd0..3c3c092 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.cpp
@@ -91,10 +91,6 @@ const char* YGExperimentalFeatureToString(const YGExperimentalFeature value) {
   switch (value) {
     case YGExperimentalFeatureWebFlexBasis:
       return "web-flex-basis";
-    case YGExperimentalFeatureAbsolutePercentageAgainstPaddingEdge:
-      return "absolute-percentage-against-padding-edge";
-    case YGExperimentalFeatureFixAbsoluteTrailingColumnMargin:
-      return "fix-absolute-trailing-column-margin";
   }
   return "unknown";
 }
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.h b/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.h
index 834e5f6..8e4bb4e 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/YGEnums.h
@@ -56,9 +56,7 @@ YG_ENUM_SEQ_DECL(
 
 YG_ENUM_SEQ_DECL(
     YGExperimentalFeature,
-    YGExperimentalFeatureWebFlexBasis,
-    YGExperimentalFeatureAbsolutePercentageAgainstPaddingEdge,
-    YGExperimentalFeatureFixAbsoluteTrailingColumnMargin)
+    YGExperimentalFeatureWebFlexBasis)
 
 YG_ENUM_SEQ_DECL(
     YGFlexDirection,
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/YGLayout.h b/node_modules/react-native/ReactCommon/yoga/yoga/YGLayout.h
index e95efbc..e3a4a19 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/YGLayout.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/YGLayout.h
@@ -13,6 +13,8 @@
 #include "YGFloatOptional.h"
 #include "Yoga-internal.h"
 
+using namespace facebook::yoga;
+
 struct YGLayout {
   std::array<float, 4> position = {};
   std::array<float, 2> dimensions = {{YGUndefined, YGUndefined}};
@@ -22,8 +24,12 @@ struct YGLayout {
 
 private:
   static constexpr size_t directionOffset = 0;
-  static constexpr size_t hadOverflowOffset =
+  static constexpr size_t didUseLegacyFlagOffset =
       directionOffset + facebook::yoga::detail::bitWidthFn<YGDirection>();
+  static constexpr size_t doesLegacyStretchFlagAffectsLayoutOffset =
+      didUseLegacyFlagOffset + 1;
+  static constexpr size_t hadOverflowOffset =
+      doesLegacyStretchFlagAffectsLayoutOffset + 1;
   uint8_t flags = 0;
 
 public:
@@ -52,6 +58,25 @@ public:
         flags, directionOffset, direction);
   }
 
+  bool didUseLegacyFlag() const {
+    return facebook::yoga::detail::getBooleanData(
+        flags, didUseLegacyFlagOffset);
+  }
+
+  void setDidUseLegacyFlag(bool val) {
+    facebook::yoga::detail::setBooleanData(flags, didUseLegacyFlagOffset, val);
+  }
+
+  bool doesLegacyStretchFlagAffectsLayout() const {
+    return facebook::yoga::detail::getBooleanData(
+        flags, doesLegacyStretchFlagAffectsLayoutOffset);
+  }
+
+  void setDoesLegacyStretchFlagAffectsLayout(bool val) {
+    facebook::yoga::detail::setBooleanData(
+        flags, doesLegacyStretchFlagAffectsLayoutOffset, val);
+  }
+
   bool hadOverflow() const {
     return facebook::yoga::detail::getBooleanData(flags, hadOverflowOffset);
   }
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.cpp
index 24e68b0..5e52b61 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.cpp
@@ -560,6 +560,53 @@ YGFloatOptional YGNode::getTrailingPaddingAndBorder(
       YGFloatOptional(getTrailingBorder(axis));
 }
 
+bool YGNode::didUseLegacyFlag() {
+  bool didUseLegacyFlag = layout_.didUseLegacyFlag();
+  if (didUseLegacyFlag) {
+    return true;
+  }
+  for (const auto& child : children_) {
+    if (child->layout_.didUseLegacyFlag()) {
+      didUseLegacyFlag = true;
+      break;
+    }
+  }
+  return didUseLegacyFlag;
+}
+
+void YGNode::setLayoutDoesLegacyFlagAffectsLayout(
+    bool doesLegacyFlagAffectsLayout) {
+  layout_.setDoesLegacyStretchFlagAffectsLayout(doesLegacyFlagAffectsLayout);
+}
+
+void YGNode::setLayoutDidUseLegacyFlag(bool didUseLegacyFlag) {
+  layout_.setDidUseLegacyFlag(didUseLegacyFlag);
+}
+
+bool YGNode::isLayoutTreeEqualToNode(const YGNode& node) const {
+  if (children_.size() != node.children_.size()) {
+    return false;
+  }
+  if (layout_ != node.layout_) {
+    return false;
+  }
+  if (children_.size() == 0) {
+    return true;
+  }
+
+  bool isLayoutTreeEqual = true;
+  YGNodeRef otherNodeChildren = nullptr;
+  for (std::vector<YGNodeRef>::size_type i = 0; i < children_.size(); ++i) {
+    otherNodeChildren = node.children_[i];
+    isLayoutTreeEqual =
+        children_[i]->isLayoutTreeEqualToNode(*otherNodeChildren);
+    if (!isLayoutTreeEqual) {
+      return false;
+    }
+  }
+  return isLayoutTreeEqual;
+}
+
 void YGNode::reset() {
   YGAssertWithNode(
       this,
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.h b/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.h
index 90bc93d..ac20b10 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/YGNode.h
@@ -327,6 +327,8 @@ public:
       const float mainSize,
       const float crossSize,
       const float ownerWidth);
+  void setLayoutDoesLegacyFlagAffectsLayout(bool doesLegacyFlagAffectsLayout);
+  void setLayoutDidUseLegacyFlag(bool didUseLegacyFlag);
   void markDirtyAndPropogateDownwards();
 
   // Other methods
@@ -349,6 +351,8 @@ public:
   float resolveFlexGrow() const;
   float resolveFlexShrink() const;
   bool isNodeFlexible();
+  bool didUseLegacyFlag();
+  bool isLayoutTreeEqualToNode(const YGNode& node) const;
   void reset();
 };
 
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/YGNodePrint.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/YGNodePrint.cpp
index f45011a..6149cf5 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/YGNodePrint.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/YGNodePrint.cpp
@@ -90,9 +90,7 @@ static void appendEdges(
     const string& key,
     const YGStyle::Edges& edges) {
   if (areFourValuesEqual(edges)) {
-    auto edgeValue = YGNode::computeEdgeValueForColumn(
-        edges, YGEdgeLeft, detail::CompactValue::ofZero());
-    appendNumberIfNotZero(base, key, edgeValue);
+    appendNumberIfNotZero(base, key, edges[YGEdgeLeft]);
   } else {
     for (int edge = YGEdgeLeft; edge != YGEdgeAll; ++edge) {
       string str = key + "-" + YGEdgeToString(static_cast<YGEdge>(edge));
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga-internal.h b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga-internal.h
index 9444bb5..492543e 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga-internal.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga-internal.h
@@ -40,11 +40,11 @@ inline bool isUndefined(double value) {
   return std::isnan(value);
 }
 
-void throwLogicalErrorWithMessage(const char* message);
-
 } // namespace yoga
 } // namespace facebook
 
+using namespace facebook;
+
 extern const std::array<YGEdge, 4> trailing;
 extern const std::array<YGEdge, 4> leading;
 extern const YGValue YGValueUndefined;
@@ -69,8 +69,6 @@ struct YGCachedMeasurement {
         computedHeight(-1) {}
 
   bool operator==(YGCachedMeasurement measurement) const {
-    using namespace facebook;
-
     bool isEqual = widthMeasureMode == measurement.widthMeasureMode &&
         heightMeasureMode == measurement.heightMeasureMode;
 
@@ -110,8 +108,6 @@ private:
 
 public:
   Values() = default;
-  Values(const Values& other) = default;
-
   explicit Values(const YGValue& defaultValue) noexcept {
     values_.fill(defaultValue);
   }
@@ -145,6 +141,7 @@ public:
 
   Values& operator=(const Values& other) = default;
 };
+
 } // namespace detail
 } // namespace yoga
 } // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
index d712573..a66adec 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
@@ -180,6 +180,10 @@ YOGA_EXPORT bool YGNodeIsDirty(YGNodeRef node) {
   return node->isDirty();
 }
 
+YOGA_EXPORT bool YGNodeLayoutGetDidUseLegacyFlag(const YGNodeRef node) {
+  return node->didUseLegacyFlag();
+}
+
 YOGA_EXPORT void YGNodeMarkDirtyAndPropogateToDescendants(
     const YGNodeRef node) {
   return node->markDirtyAndPropogateDownwards();
@@ -189,7 +193,6 @@ int32_t gConfigInstanceCount = 0;
 
 YOGA_EXPORT WIN_EXPORT YGNodeRef YGNodeNewWithConfig(const YGConfigRef config) {
   const YGNodeRef node = new YGNode{config};
-  YGAssert(config != nullptr, "Tried to construct YGNode with null config");
   YGAssertWithConfig(
       config, node != nullptr, "Could not allocate memory for node");
   Event::publish<Event::NodeAllocation>(node, {config});
@@ -217,6 +220,32 @@ YOGA_EXPORT YGNodeRef YGNodeClone(YGNodeRef oldNode) {
   return node;
 }
 
+static YGConfigRef YGConfigClone(const YGConfig& oldConfig) {
+  const YGConfigRef config = new YGConfig(oldConfig);
+  YGAssert(config != nullptr, "Could not allocate memory for config");
+  gConfigInstanceCount++;
+  return config;
+}
+
+static YGNodeRef YGNodeDeepClone(YGNodeRef oldNode) {
+  auto config = YGConfigClone(*oldNode->getConfig());
+  auto node = new YGNode{*oldNode, config};
+  node->setOwner(nullptr);
+  Event::publish<Event::NodeAllocation>(node, {node->getConfig()});
+
+  YGVector vec = YGVector();
+  vec.reserve(oldNode->getChildren().size());
+  YGNodeRef childNode = nullptr;
+  for (auto* item : oldNode->getChildren()) {
+    childNode = YGNodeDeepClone(item);
+    childNode->setOwner(node);
+    vec.push_back(childNode);
+  }
+  node->setChildren(vec);
+
+  return node;
+}
+
 YOGA_EXPORT void YGNodeFree(const YGNodeRef node) {
   if (YGNodeRef owner = node->getOwner()) {
     owner->removeChild(node);
@@ -234,6 +263,17 @@ YOGA_EXPORT void YGNodeFree(const YGNodeRef node) {
   delete node;
 }
 
+static void YGConfigFreeRecursive(const YGNodeRef root) {
+  if (root->getConfig() != nullptr) {
+    gConfigInstanceCount--;
+    delete root->getConfig();
+  }
+  // Delete configs recursively for childrens
+  for (auto* child : root->getChildren()) {
+    YGConfigFreeRecursive(child);
+  }
+}
+
 YOGA_EXPORT void YGNodeFreeRecursiveWithCleanupFunc(
     const YGNodeRef root,
     YGNodeCleanupFunc cleanup) {
@@ -953,6 +993,11 @@ YG_NODE_LAYOUT_RESOLVED_PROPERTY_IMPL(float, Margin, margin);
 YG_NODE_LAYOUT_RESOLVED_PROPERTY_IMPL(float, Border, border);
 YG_NODE_LAYOUT_RESOLVED_PROPERTY_IMPL(float, Padding, padding);
 
+YOGA_EXPORT bool YGNodeLayoutGetDidLegacyStretchFlagAffectLayout(
+    const YGNodeRef node) {
+  return node->getLayout().doesLegacyStretchFlagAffectsLayout();
+}
+
 std::atomic<uint32_t> gCurrentGenerationCount(0);
 
 bool YGLayoutNodeInternal(
@@ -1550,21 +1595,13 @@ static void YGNodeAbsoluteLayoutChild(
       depth,
       generationCount);
 
-  auto trailingMarginOuterSize =
-      YGConfigIsExperimentalFeatureEnabled(
-          node->getConfig(),
-          YGExperimentalFeatureFixAbsoluteTrailingColumnMargin)
-      ? isMainAxisRow ? height : width
-      : width;
-
   if (child->isTrailingPosDefined(mainAxis) &&
       !child->isLeadingPositionDefined(mainAxis)) {
     child->setLayoutPosition(
         node->getLayout().measuredDimensions[dim[mainAxis]] -
             child->getLayout().measuredDimensions[dim[mainAxis]] -
             node->getTrailingBorder(mainAxis) -
-            child->getTrailingMargin(mainAxis, trailingMarginOuterSize)
-                .unwrap() -
+            child->getTrailingMargin(mainAxis, width).unwrap() -
             child->getTrailingPosition(mainAxis, isMainAxisRow ? width : height)
                 .unwrap(),
         leading[mainAxis]);
@@ -1583,22 +1620,6 @@ static void YGNodeAbsoluteLayoutChild(
         (node->getLayout().measuredDimensions[dim[mainAxis]] -
          child->getLayout().measuredDimensions[dim[mainAxis]]),
         leading[mainAxis]);
-  } else if (
-      YGConfigIsExperimentalFeatureEnabled(
-          node->getConfig(),
-          YGExperimentalFeatureAbsolutePercentageAgainstPaddingEdge) &&
-      child->isLeadingPositionDefined(mainAxis)) {
-    child->setLayoutPosition(
-        child->getLeadingPosition(
-                 mainAxis, node->getLayout().measuredDimensions[dim[mainAxis]])
-                .unwrap() +
-            node->getLeadingBorder(mainAxis) +
-            child
-                ->getLeadingMargin(
-                    mainAxis,
-                    node->getLayout().measuredDimensions[dim[mainAxis]])
-                .unwrap(),
-        leading[mainAxis]);
   }
 
   if (child->isTrailingPosDefined(crossAxis) &&
@@ -1607,8 +1628,7 @@ static void YGNodeAbsoluteLayoutChild(
         node->getLayout().measuredDimensions[dim[crossAxis]] -
             child->getLayout().measuredDimensions[dim[crossAxis]] -
             node->getTrailingBorder(crossAxis) -
-            child->getTrailingMargin(crossAxis, trailingMarginOuterSize)
-                .unwrap() -
+            child->getTrailingMargin(crossAxis, width).unwrap() -
             child
                 ->getTrailingPosition(crossAxis, isMainAxisRow ? height : width)
                 .unwrap(),
@@ -1630,23 +1650,6 @@ static void YGNodeAbsoluteLayoutChild(
         (node->getLayout().measuredDimensions[dim[crossAxis]] -
          child->getLayout().measuredDimensions[dim[crossAxis]]),
         leading[crossAxis]);
-  } else if (
-      YGConfigIsExperimentalFeatureEnabled(
-          node->getConfig(),
-          YGExperimentalFeatureAbsolutePercentageAgainstPaddingEdge) &&
-      child->isLeadingPositionDefined(crossAxis)) {
-    child->setLayoutPosition(
-        child->getLeadingPosition(
-                 crossAxis,
-                 node->getLayout().measuredDimensions[dim[crossAxis]])
-                .unwrap() +
-            node->getLeadingBorder(crossAxis) +
-            child
-                ->getLeadingMargin(
-                    crossAxis,
-                    node->getLayout().measuredDimensions[dim[crossAxis]])
-                .unwrap(),
-        leading[crossAxis]);
   }
 }
 
@@ -3006,6 +3009,9 @@ static void YGNodelayoutImpl(
               collectedFlexItemsValues.sizeConsumedOnCurrentLine;
         }
 
+        if (node->getConfig()->useLegacyStretchBehaviour) {
+          node->setLayoutDidUseLegacyFlag(true);
+        }
         sizeBasedOnContent = !node->getConfig()->useLegacyStretchBehaviour;
       }
     }
@@ -3563,17 +3569,9 @@ static void YGNodelayoutImpl(
       YGNodeAbsoluteLayoutChild(
           node,
           child,
-          YGConfigIsExperimentalFeatureEnabled(
-              node->getConfig(),
-              YGExperimentalFeatureAbsolutePercentageAgainstPaddingEdge)
-              ? node->getLayout().measuredDimensions[YGDimensionWidth]
-              : availableInnerWidth,
+          availableInnerWidth,
           isMainAxisRow ? measureModeMainDim : measureModeCrossDim,
-          YGConfigIsExperimentalFeatureEnabled(
-              node->getConfig(),
-              YGExperimentalFeatureAbsolutePercentageAgainstPaddingEdge)
-              ? node->getLayout().measuredDimensions[YGDimensionHeight]
-              : availableInnerHeight,
+          availableInnerHeight,
           direction,
           config,
           layoutMarkerData,
@@ -4157,6 +4155,13 @@ static void YGRoundToPixelGrid(
   }
 }
 
+static void unsetUseLegacyFlagRecursively(YGNodeRef node) {
+  node->getConfig()->useLegacyStretchBehaviour = false;
+  for (auto child : node->getChildren()) {
+    unsetUseLegacyFlagRecursively(child);
+  }
+}
+
 YOGA_EXPORT void YGNodeCalculateLayoutWithContext(
     const YGNodeRef node,
     const float ownerWidth,
@@ -4242,6 +4247,67 @@ YOGA_EXPORT void YGNodeCalculateLayoutWithContext(
   }
 
   Event::publish<Event::LayoutPassEnd>(node, {layoutContext, &markerData});
+
+  // We want to get rid off `useLegacyStretchBehaviour` from YGConfig. But we
+  // aren't sure whether client's of yoga have gotten rid off this flag or not.
+  // So logging this in YGLayout would help to find out the call sites depending
+  // on this flag. This check would be removed once we are sure no one is
+  // dependent on this flag anymore. The flag
+  // `shouldDiffLayoutWithoutLegacyStretchBehaviour` in YGConfig will help to
+  // run experiments.
+  if (node->getConfig()->shouldDiffLayoutWithoutLegacyStretchBehaviour &&
+      node->didUseLegacyFlag()) {
+    const YGNodeRef nodeWithoutLegacyFlag = YGNodeDeepClone(node);
+    nodeWithoutLegacyFlag->resolveDimension();
+    // Recursively mark nodes as dirty
+    nodeWithoutLegacyFlag->markDirtyAndPropogateDownwards();
+    gCurrentGenerationCount.fetch_add(1, std::memory_order_relaxed);
+    // Rerun the layout, and calculate the diff
+    unsetUseLegacyFlagRecursively(nodeWithoutLegacyFlag);
+    LayoutData layoutMarkerData = {};
+    if (YGLayoutNodeInternal(
+            nodeWithoutLegacyFlag,
+            width,
+            height,
+            ownerDirection,
+            widthMeasureMode,
+            heightMeasureMode,
+            ownerWidth,
+            ownerHeight,
+            true,
+            LayoutPassReason::kInitial,
+            nodeWithoutLegacyFlag->getConfig(),
+            layoutMarkerData,
+            layoutContext,
+            0, // tree root
+            gCurrentGenerationCount.load(std::memory_order_relaxed))) {
+      nodeWithoutLegacyFlag->setPosition(
+          nodeWithoutLegacyFlag->getLayout().direction(),
+          ownerWidth,
+          ownerHeight,
+          ownerWidth);
+      YGRoundToPixelGrid(
+          nodeWithoutLegacyFlag,
+          nodeWithoutLegacyFlag->getConfig()->pointScaleFactor,
+          0.0f,
+          0.0f);
+
+      // Set whether the two layouts are different or not.
+      auto neededLegacyStretchBehaviour =
+          !nodeWithoutLegacyFlag->isLayoutTreeEqualToNode(*node);
+      node->setLayoutDoesLegacyFlagAffectsLayout(neededLegacyStretchBehaviour);
+
+#ifdef DEBUG
+      if (nodeWithoutLegacyFlag->getConfig()->printTree) {
+        YGNodePrint(
+            nodeWithoutLegacyFlag,
+            (YGPrintOptions) (YGPrintOptionsLayout | YGPrintOptionsChildren | YGPrintOptionsStyle));
+      }
+#endif
+    }
+    YGConfigFreeRecursive(nodeWithoutLegacyFlag);
+    YGNodeFreeRecursive(nodeWithoutLegacyFlag);
+  }
 }
 
 YOGA_EXPORT void YGNodeCalculateLayout(
@@ -4265,6 +4331,12 @@ YOGA_EXPORT void YGConfigSetLogger(const YGConfigRef config, YGLogger logger) {
   }
 }
 
+YOGA_EXPORT void YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour(
+    const YGConfigRef config,
+    const bool shouldDiffLayout) {
+  config->shouldDiffLayoutWithoutLegacyStretchBehaviour = shouldDiffLayout;
+}
+
 void YGAssert(const bool condition, const char* message) {
   if (!condition) {
     Log::log(YGNodeRef{nullptr}, YGLogLevelFatal, nullptr, "%s\n", message);
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.h b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.h
index 7fbf269..07beea4 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.h
@@ -147,6 +147,7 @@ WIN_EXPORT void YGNodeSetHasNewLayout(YGNodeRef node, bool hasNewLayout);
 YGNodeType YGNodeGetNodeType(YGNodeRef node);
 void YGNodeSetNodeType(YGNodeRef node, YGNodeType nodeType);
 WIN_EXPORT bool YGNodeIsDirty(YGNodeRef node);
+bool YGNodeLayoutGetDidUseLegacyFlag(YGNodeRef node);
 
 WIN_EXPORT void YGNodeStyleSetDirection(YGNodeRef node, YGDirection direction);
 WIN_EXPORT YGDirection YGNodeStyleGetDirection(YGNodeConstRef node);
@@ -289,6 +290,7 @@ WIN_EXPORT float YGNodeLayoutGetWidth(YGNodeRef node);
 WIN_EXPORT float YGNodeLayoutGetHeight(YGNodeRef node);
 WIN_EXPORT YGDirection YGNodeLayoutGetDirection(YGNodeRef node);
 WIN_EXPORT bool YGNodeLayoutGetHadOverflow(YGNodeRef node);
+bool YGNodeLayoutGetDidLegacyStretchFlagAffectLayout(YGNodeRef node);
 
 // Get the computed values for these nodes after performing layout. If they were
 // set using point values then the returned value will be the same as
@@ -313,6 +315,9 @@ WIN_EXPORT void YGAssertWithConfig(
 WIN_EXPORT void YGConfigSetPointScaleFactor(
     YGConfigRef config,
     float pixelsInPoint);
+void YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour(
+    YGConfigRef config,
+    bool shouldDiffLayout);
 
 // Yoga previously had an error where containers would take the maximum space
 // possible instead of the minimum like they are supposed to. In practice this
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/event/event.h b/node_modules/react-native/ReactCommon/yoga/yoga/event/event.h
index fb81b8f..a50f8e4 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/event/event.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/event/event.h
@@ -89,7 +89,12 @@ struct YOGA_EXPORT Event {
 
   template <Type E>
   static void publish(const YGNode& node, const TypedData<E>& eventData = {}) {
+#ifdef YG_ENABLE_EVENTS
     publish(node, E, Data{eventData});
+#else
+    (void) node;
+    (void) eventData;
+#endif
   }
 
   template <Type E>
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments-inl.h b/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments-inl.h
new file mode 100644
index 0000000..4423559
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments-inl.h
@@ -0,0 +1,32 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#pragma once
+
+#include "experiments.h"
+
+#include <bitset>
+
+namespace facebook {
+namespace yoga {
+namespace internal {
+
+namespace detail {
+extern std::bitset<sizeof(int)> enabledExperiments;
+} // namespace detail
+
+inline bool isEnabled(Experiment experiment) {
+  return detail::enabledExperiments.test(static_cast<size_t>(experiment));
+}
+
+inline void disableAllExperiments() {
+  detail::enabledExperiments = 0;
+}
+
+} // namespace internal
+} // namespace yoga
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments.cpp
new file mode 100644
index 0000000..016ea20
--- /dev/null
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments.cpp
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+#include "experiments.h"
+#include "experiments-inl.h"
+
+namespace facebook {
+namespace yoga {
+namespace internal {
+
+namespace detail {
+
+std::bitset<sizeof(int)> enabledExperiments = 0;
+
+} // namespace detail
+
+void enable(Experiment experiment) {
+  detail::enabledExperiments.set(static_cast<size_t>(experiment));
+}
+
+void disable(Experiment experiment) {
+  detail::enabledExperiments.reset(static_cast<size_t>(experiment));
+}
+
+bool toggle(Experiment experiment) {
+  auto bit = static_cast<size_t>(experiment);
+  auto previousState = detail::enabledExperiments.test(bit);
+  detail::enabledExperiments.flip(bit);
+  return previousState;
+}
+
+} // namespace internal
+} // namespace yoga
+} // namespace facebook
diff --git a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/Float.h b/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments.h
similarity index 51%
rename from node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/Float.h
rename to node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments.h
index ef2c55c..2298e24 100644
--- a/node_modules/react-native/ReactCommon/react/renderer/graphics/platform/android/react/renderer/graphics/Float.h
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/internal/experiments.h
@@ -7,16 +7,20 @@
 
 #pragma once
 
-#include <limits>
+#include <cstddef>
 
 namespace facebook {
-namespace react {
+namespace yoga {
+namespace internal {
 
-/*
- * Exact type of float numbers which ideally should match a type behing
- * platform- and chip-architecture-specific float type.
- */
-using Float = float;
+enum struct Experiment : size_t {
+  kDoubleMeasureCallbacks,
+};
+
+void enable(Experiment);
+void disable(Experiment);
+bool toggle(Experiment);
 
-} // namespace react
+} // namespace internal
+} // namespace yoga
 } // namespace facebook
diff --git a/node_modules/react-native/build.gradle.kts b/node_modules/react-native/build.gradle.kts
index 217bf93..72cfdd0 100644
--- a/node_modules/react-native/build.gradle.kts
+++ b/node_modules/react-native/build.gradle.kts
@@ -5,14 +5,127 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-// This is the top level build.gradle.kts file used when the users
-// is doing a build from source. It's triggered as the user
-// will add an `includeBuild(../node_modules/react-native)` in
-// their settings.gradle.kts file.
-// More on this here: https://reactnative.dev/contributing/how-to-build-from-source
-plugins {
-  id("com.android.library") version "7.4.2" apply false
-  id("com.android.application") version "7.4.2" apply false
-  id("de.undercouch.download") version "5.0.1" apply false
-  kotlin("android") version "1.7.22" apply false
+plugins { id("io.github.gradle-nexus.publish-plugin") version "1.1.0" }
+
+val reactAndroidProperties = java.util.Properties()
+
+File("$rootDir/ReactAndroid/gradle.properties").inputStream().use {
+  reactAndroidProperties.load(it)
+}
+
+version =
+    if (project.hasProperty("isNightly") &&
+        (project.property("isNightly") as? String).toBoolean()) {
+      "${reactAndroidProperties.getProperty("VERSION_NAME")}-SNAPSHOT"
+    } else {
+      reactAndroidProperties.getProperty("VERSION_NAME")
+    }
+
+group = "com.facebook.react"
+
+val ndkPath by extra(System.getenv("ANDROID_NDK"))
+val ndkVersion by extra(System.getenv("ANDROID_NDK_VERSION"))
+
+buildscript {
+  repositories {
+    google()
+    mavenCentral()
+    gradlePluginPortal()
+  }
+  dependencies {
+    classpath("com.android.tools.build:gradle:7.3.1")
+    classpath("de.undercouch:gradle-download-task:5.0.1")
+    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10")
+  }
+}
+
+val sonatypeUsername = findProperty("SONATYPE_USERNAME")?.toString()
+val sonatypePassword = findProperty("SONATYPE_PASSWORD")?.toString()
+
+nexusPublishing {
+  repositories {
+    sonatype {
+      username.set(sonatypeUsername)
+      password.set(sonatypePassword)
+    }
+  }
+}
+
+allprojects {
+  repositories {
+    maven { url = uri("$rootDir/node_modules/jsc-android/dist") }
+    maven { url = uri("$rootDir/android") }
+    google()
+    mavenCentral {
+      // We don't want to fetch react-native from Maven Central as there are
+      // older versions over there.
+      content { excludeGroup("com.facebook.react") }
+    }
+  }
+}
+
+tasks.register("cleanAll", Delete::class.java) {
+  description = "Remove all the build files and intermediate build outputs"
+  dependsOn(gradle.includedBuild("react-native-gradle-plugin").task(":clean"))
+  dependsOn(":ReactAndroid:clean")
+  dependsOn(":ReactAndroid:hermes-engine:clean")
+  dependsOn(":packages:rn-tester:android:app:clean")
+  delete(allprojects.map { it.buildDir })
+  delete(rootProject.file("./ReactAndroid/.cxx"))
+  delete(rootProject.file("./ReactAndroid/hermes-engine/.cxx"))
+  delete(rootProject.file("./sdks/download/"))
+  delete(rootProject.file("./sdks/hermes/"))
+  delete(rootProject.file("./ReactAndroid/src/main/jni/prebuilt/lib/arm64-v8a/"))
+  delete(rootProject.file("./ReactAndroid/src/main/jni/prebuilt/lib/armeabi-v7a/"))
+  delete(rootProject.file("./ReactAndroid/src/main/jni/prebuilt/lib/x86/"))
+  delete(rootProject.file("./ReactAndroid/src/main/jni/prebuilt/lib/x86_64/"))
+  delete(rootProject.file("./packages/react-native-codegen/lib"))
+  delete(rootProject.file("./packages/rn-tester/android/app/.cxx"))
+}
+
+tasks.register("buildAll") {
+  description = "Build and test all the React Native relevant projects."
+  dependsOn(gradle.includedBuild("react-native-gradle-plugin").task(":build"))
+  // This builds both the React Native framework for both debug and release
+  dependsOn(":ReactAndroid:assemble")
+  // This creates all the Maven artifacts and makes them available in the /android folder
+  dependsOn(":ReactAndroid:installArchives")
+  // This builds RN Tester for Hermes/JSC for debug only
+  dependsOn(":packages:rn-tester:android:app:assembleDebug")
+  // This compiles the Unit Test sources (without running them as they're partially broken)
+  dependsOn(":ReactAndroid:compileDebugUnitTestSources")
+  dependsOn(":ReactAndroid:compileReleaseUnitTestSources")
+}
+
+tasks.register("downloadAll") {
+  description = "Download all the depedencies needed locally so they can be cached on CI."
+  dependsOn(gradle.includedBuild("react-native-gradle-plugin").task(":dependencies"))
+  dependsOn(":ReactAndroid:downloadNdkBuildDependencies")
+  dependsOn(":ReactAndroid:dependencies")
+  dependsOn(":ReactAndroid:androidDependencies")
+  dependsOn(":ReactAndroid:hermes-engine:dependencies")
+  dependsOn(":ReactAndroid:hermes-engine:androidDependencies")
+}
+
+tasks.register("publishAllInsideNpmPackage") {
+  description =
+      "Publish all the artifacts to be available inside the NPM package in the `android` folder."
+  // Due to size constraints of NPM, we publish only react-native and hermes-engine inside
+  // the NPM package.
+  dependsOn(":ReactAndroid:installArchives")
+  dependsOn(":ReactAndroid:hermes-engine:installArchives")
+}
+
+tasks.register("publishAllToMavenTempLocal") {
+  description = "Publish all the artifacts to be available inside a Maven Local repository on /tmp."
+  dependsOn(":ReactAndroid:publishAllPublicationsToMavenTempLocalRepository")
+  // We don't publish the external-artifacts to Maven Local as CircleCI is using it via workspace.
+  dependsOn(":ReactAndroid:hermes-engine:publishAllPublicationsToMavenTempLocalRepository")
+}
+
+tasks.register("publishAllToSonatype") {
+  description = "Publish all the artifacts to Sonatype (Maven Central or Snapshot repository)"
+  dependsOn(":ReactAndroid:publishToSonatype")
+  dependsOn(":ReactAndroid:external-artifacts:publishToSonatype")
+  dependsOn(":ReactAndroid:hermes-engine:publishToSonatype")
 }
diff --git a/node_modules/react-native/flow-typed/npm/ansi-regex_v5.x.x.js b/node_modules/react-native/flow-typed/npm/ansi-regex_v5.x.x.js
new file mode 100644
index 0000000..150902f
--- /dev/null
+++ b/node_modules/react-native/flow-typed/npm/ansi-regex_v5.x.x.js
@@ -0,0 +1,14 @@
+/**
+ * @flow strict
+ * @format
+ */
+
+declare module 'ansi-regex' {
+  declare export type Options = {
+    /**
+     * Match only the first ANSI escape.
+     */
+    +onlyFirst?: boolean,
+  };
+  declare export default function ansiRegex(options?: Options): RegExp;
+}
diff --git a/node_modules/react-native/flow/JSITimerInternalType.js b/node_modules/react-native/flow/JSITimerInternalType.js
new file mode 100644
index 0000000..d6ace6a
--- /dev/null
+++ b/node_modules/react-native/flow/JSITimerInternalType.js
@@ -0,0 +1,30 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+// Declarations for functionality exposed by Hermes' TimerStats decorator.
+//
+// For backwards-compatibility, code that uses such functionality must also
+// check explicitly at run-time whether the object(s) and method(s) exist, and
+// fail safely if not.
+
+/**
+ * JSITimerInternalType is the global object installed by Hermes' TimedRuntime
+ * decorator, and it is used to extract runtime timing information.
+ */
+declare type $JSITimerInternalType = {
+  /**
+   * Returns the counters that TimedRuntime keep track.
+   * There are no guarantees about what keys exist in it, but they can be
+   * printed for informational purposes.
+   * @return An object that maps strings to various types of performance
+   *    statistics.
+   */
+  +getTimes?: () => {[string]: number | string, ...},
+};
diff --git a/node_modules/react-native/flow/global.js b/node_modules/react-native/flow/global.js
index e7f9814..ee60a57 100644
--- a/node_modules/react-native/flow/global.js
+++ b/node_modules/react-native/flow/global.js
@@ -19,19 +19,8 @@ declare var global: {
   // setUpGlobals
   +window: typeof global,
   +self: typeof global,
-  +process: {
-    +env: {
-      +NODE_ENV: 'development' | 'production',
-    },
-    +argv?: $ReadOnlyArray<string>,
-  },
 
-  // setUpPerformance
-  +performance: {
-    +now: () => number,
-  },
-
-  // setUpXHR
+  // setXHR
   +XMLHttpRequest: typeof XMLHttpRequest,
   +FormData: typeof FormData,
   +fetch: typeof fetch,
@@ -50,27 +39,17 @@ declare var global: {
   // setUpAlert
   +alert: typeof alert,
 
-  // setUpNavigator
-  +navigator: {
-    +product: 'ReactNative',
-    +appName?: ?string,
-    ...
-  },
-
   // setUpTimers
-  +setInterval: typeof setInterval,
   +clearInterval: typeof clearInterval,
-  +setTimeout: typeof setTimeout,
   +clearTimeout: typeof clearTimeout,
+  +setInterval: typeof setInterval,
+  +setTimeout: typeof setTimeout,
   +requestAnimationFrame: typeof requestAnimationFrame,
   +cancelAnimationFrame: typeof cancelAnimationFrame,
   +requestIdleCallback: typeof requestIdleCallback,
   +cancelIdleCallback: typeof cancelIdleCallback,
+  +setTimeout: typeof setTimeout,
   +queueMicrotask: typeof queueMicrotask,
-  +setImmediate: typeof setImmediate,
-  +clearImmediate: typeof clearImmediate,
-
-  // Polyfills
   +console: typeof console,
 
   // JavaScript environments specific
@@ -80,10 +59,6 @@ declare var global: {
   +__DEV__?: boolean,
   +RN$Bridgeless?: boolean,
 
-  // setupDOM
-  +DOMRect: typeof DOMRect,
-  +DOMRectReadOnly: typeof DOMRectReadOnly,
-
   // Undeclared properties are implicitly `any`.
   [string | symbol]: any,
 };
diff --git a/node_modules/react-native/flow/jest.js b/node_modules/react-native/flow/jest.js
index d03dff0..5dd8790 100644
--- a/node_modules/react-native/flow/jest.js
+++ b/node_modules/react-native/flow/jest.js
@@ -4,18 +4,18 @@
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  *
- * @flow
  * @format
- * @oncall react_native
  */
 
-// Modified from https://raw.githubusercontent.com/flow-typed/flow-typed/master/definitions/npm/jest_v29.x.x/flow_v0.134.x-/jest_v29.x.x.js
-// Modifications are explained inline by comments beginning with `// MODIFIED`.
+// Modified from https://raw.githubusercontent.com/flow-typed/flow-typed/master/definitions/npm/jest_v23.x.x/flow_v0.39.x-v0.103.x/jest_v23.x.x.js
+// List of modifications:
+//  - fix some [] -> Array lint warnings
+//  - make it.each/describe.each take $ReadOnlyArray instead of Array<mixed>
+//  - added definition for `isolateModules`
+//
+// TODO(T35016336) remove the .each modifications if flow-typed adopts them
 
-// MODIFIED: Added ESLint suppression comment - no-unused-vars doesn't understand declaration files
-/* eslint-disable no-unused-vars */
-
-type JestMockFn<TArguments: $ReadOnlyArray<any>, TReturn> = {
+type JestMockFn<TArguments: $ReadOnlyArray<mixed>, TReturn> = {|
   (...args: TArguments): TReturn,
   /**
    * An object for introspecting mock calls
@@ -27,12 +27,6 @@ type JestMockFn<TArguments: $ReadOnlyArray<any>, TReturn> = {
      * passed during the call.
      */
     calls: Array<TArguments>,
-    /**
-     * An array containing the call arguments of the last call that was made
-     * to this mock function. If the function was not called, it will return
-     * undefined.
-     */
-    lastCall: TArguments,
     /**
      * An array that contains all the object instances that have been
      * instantiated from this mock function.
@@ -42,11 +36,7 @@ type JestMockFn<TArguments: $ReadOnlyArray<any>, TReturn> = {
      * An array that contains all the object results that have been
      * returned by this mock function call
      */
-    results: Array<{
-      isThrow: boolean,
-      value: TReturn,
-      ...
-    }>,
+    results: Array<{isThrow: boolean, value: TReturn, ...}>,
     ...
   },
   /**
@@ -120,8 +110,7 @@ type JestMockFn<TArguments: $ReadOnlyArray<any>, TReturn> = {
    * Sugar for jest.fn().mockImplementationOnce(() => Promise.reject(value))
    */
   mockRejectedValueOnce(value: TReturn): JestMockFn<TArguments, Promise<any>>,
-  ...
-};
+|};
 
 type JestAsymmetricEqualityType = {
   /**
@@ -157,8 +146,8 @@ type JestMatcherResult = {
 };
 
 type JestMatcher = (
-  received: any,
-  ...actual: Array<any>
+  actual: any,
+  expected: any,
 ) => JestMatcherResult | Promise<JestMatcherResult>;
 
 type JestPromiseType = {
@@ -181,32 +170,6 @@ type JestPromiseType = {
  */
 type JestTestName = string | Function;
 
-type FakeableAPI =
-  | 'Date'
-  | 'hrtime'
-  | 'nextTick'
-  | 'performance'
-  | 'queueMicrotask'
-  | 'requestAnimationFrame'
-  | 'cancelAnimationFrame'
-  | 'requestIdleCallback'
-  | 'cancelIdleCallback'
-  | 'setImmediate'
-  | 'clearImmediate'
-  | 'setInterval'
-  | 'clearInterval'
-  | 'setTimeout'
-  | 'clearTimeout';
-
-type FakeTimersConfig = {
-  advanceTimers?: boolean | number,
-  doNotFake?: Array<FakeableAPI>,
-  now?: number | Date,
-  timerLimit?: number,
-  legacyFakeTimers?: boolean,
-  ...
-};
-
 /**
  *  Plugin: jest-styled-components
  */
@@ -237,77 +200,36 @@ type JestStyledComponentsMatchersType = {
  *  Plugin: jest-enzyme
  */
 type EnzymeMatchersType = {
-  // 5.x
-  toBeEmpty(): void,
-  toBePresent(): void,
-  // 6.x
   toBeChecked(): void,
   toBeDisabled(): void,
+  toBeEmpty(): void,
   toBeEmptyRender(): void,
-  toContainMatchingElement(selector: string): void,
-  toContainMatchingElements(n: number, selector: string): void,
-  toContainExactlyOneMatchingElement(selector: string): void,
+  toBePresent(): void,
   toContainReact(element: React$Element<any>): void,
   toExist(): void,
   toHaveClassName(className: string): void,
   toHaveHTML(html: string): void,
   toHaveProp: ((propKey: string, propValue?: any) => void) &
-    ((props: {...}) => void),
+    ((props: Object) => void),
   toHaveRef(refName: string): void,
   toHaveState: ((stateKey: string, stateValue?: any) => void) &
-    ((state: {...}) => void),
+    ((state: Object) => void),
   toHaveStyle: ((styleKey: string, styleValue?: any) => void) &
-    ((style: {...}) => void),
+    ((style: Object) => void),
   toHaveTagName(tagName: string): void,
   toHaveText(text: string): void,
-  toHaveValue(value: any): void,
   toIncludeText(text: string): void,
-  toMatchElement(
-    element: React$Element<any>,
-    options?: {|ignoreProps?: boolean, verbose?: boolean|},
-  ): void,
+  toHaveValue(value: any): void,
+  toMatchElement(element: React$Element<any>): void,
   toMatchSelector(selector: string): void,
-  // 7.x
-  toHaveDisplayName(name: string): void,
   ...
 };
 
-// DOM testing library extensions (jest-dom)
-// https://github.com/testing-library/jest-dom
+// DOM testing library extensions https://github.com/kentcdodds/dom-testing-library#custom-jest-matchers
 type DomTestingLibraryType = {
-  /**
-   * @deprecated
-   */
-  toBeInTheDOM(container?: HTMLElement): void,
-
-  // 4.x
-  toBeInTheDocument(): void,
-  toBeVisible(): void,
-  toBeEmpty(): void,
-  toBeDisabled(): void,
-  toBeEnabled(): void,
-  toBeInvalid(): void,
-  toBeRequired(): void,
-  toBeValid(): void,
-  toContainElement(element: HTMLElement | null): void,
-  toContainHTML(htmlText: string): void,
-  toHaveAttribute(attr: string, value?: any): void,
-  toHaveClass(...classNames: string[]): void,
-  toHaveFocus(): void,
-  toHaveFormValues(expectedValues: {[name: string]: any, ...}): void,
-  toHaveStyle(css: string | {[name: string]: any, ...}): void,
-  toHaveTextContent(
-    text: string | RegExp,
-    options?: {|normalizeWhitespace: boolean|},
-  ): void,
-  toHaveValue(value?: string | string[] | number): void,
-
-  // 5.x
-  toHaveDisplayValue(value: string | string[]): void,
-  toBeChecked(): void,
-  toBeEmptyDOMElement(): void,
-  toBePartiallyChecked(): void,
-  toHaveDescription(text: string | RegExp): void,
+  toBeInTheDOM(): void,
+  toHaveTextContent(content: string): void,
+  toHaveAttribute(name: string, expectedValue?: string): void,
   ...
 };
 
@@ -360,64 +282,78 @@ type JestExtendedMatchersType = {
    * Use .toBeEmpty when checking if a String '', Array [] or Object {} is empty.
    */
   toBeEmpty(): void,
+
   /**
    * Use .toBeOneOf when checking if a value is a member of a given Array.
    * @param {Array.<*>} members
    */
-  toBeOneOf(members: any[]): void,
+  toBeOneOf(members: Array<any>): void,
+
   /**
    * Use `.toBeNil` when checking a value is `null` or `undefined`.
    */
   toBeNil(): void,
+
   /**
    * Use `.toSatisfy` when you want to use a custom matcher by supplying a predicate function that returns a `Boolean`.
    * @param {Function} predicate
    */
   toSatisfy(predicate: (n: any) => boolean): void,
+
   /**
    * Use `.toBeArray` when checking if a value is an `Array`.
    */
   toBeArray(): void,
+
   /**
    * Use `.toBeArrayOfSize` when checking if a value is an `Array` of size x.
    * @param {Number} x
    */
   toBeArrayOfSize(x: number): void,
+
   /**
    * Use `.toIncludeAllMembers` when checking if an `Array` contains all of the same members of a given set.
    * @param {Array.<*>} members
    */
-  toIncludeAllMembers(members: any[]): void,
+  toIncludeAllMembers(members: Array<any>): void,
+
   /**
    * Use `.toIncludeAnyMembers` when checking if an `Array` contains any of the members of a given set.
    * @param {Array.<*>} members
    */
-  toIncludeAnyMembers(members: any[]): void,
+  toIncludeAnyMembers(members: Array<any>): void,
+
   /**
    * Use `.toSatisfyAll` when you want to use a custom matcher by supplying a predicate function that returns a `Boolean` for all values in an array.
    * @param {Function} predicate
    */
   toSatisfyAll(predicate: (n: any) => boolean): void,
+
   /**
    * Use `.toBeBoolean` when checking if a value is a `Boolean`.
    */
   toBeBoolean(): void,
+
   /**
    * Use `.toBeTrue` when checking a value is equal (===) to `true`.
    */
   toBeTrue(): void,
+
   /**
    * Use `.toBeFalse` when checking a value is equal (===) to `false`.
    */
   toBeFalse(): void,
+
   /**
    * Use .toBeDate when checking if a value is a Date.
    */
   toBeDate(): void,
+
   /**
    * Use `.toBeFunction` when checking if a value is a `Function`.
    */
   toBeFunction(): void,
+
   /**
    * Use `.toHaveBeenCalledBefore` when checking if a `Mock` was called before another `Mock`.
    *
@@ -427,34 +363,42 @@ type JestExtendedMatchersType = {
    * @param {Mock} mock
    */
   toHaveBeenCalledBefore(mock: JestMockFn<any, any>): void,
+
   /**
    * Use `.toBeNumber` when checking if a value is a `Number`.
    */
   toBeNumber(): void,
+
   /**
    * Use `.toBeNaN` when checking a value is `NaN`.
    */
   toBeNaN(): void,
+
   /**
    * Use `.toBeFinite` when checking if a value is a `Number`, not `NaN` or `Infinity`.
    */
   toBeFinite(): void,
+
   /**
    * Use `.toBePositive` when checking if a value is a positive `Number`.
    */
   toBePositive(): void,
+
   /**
    * Use `.toBeNegative` when checking if a value is a negative `Number`.
    */
   toBeNegative(): void,
+
   /**
    * Use `.toBeEven` when checking if a value is an even `Number`.
    */
   toBeEven(): void,
+
   /**
    * Use `.toBeOdd` when checking if a value is an odd `Number`.
    */
   toBeOdd(): void,
+
   /**
    * Use `.toBeWithin` when checking if a number is in between the given bounds of: start (inclusive) and end (exclusive).
    *
@@ -462,122 +406,144 @@ type JestExtendedMatchersType = {
    * @param {Number} end
    */
   toBeWithin(start: number, end: number): void,
+
   /**
    * Use `.toBeObject` when checking if a value is an `Object`.
    */
   toBeObject(): void,
+
   /**
    * Use `.toContainKey` when checking if an object contains the provided key.
    *
    * @param {String} key
    */
   toContainKey(key: string): void,
+
   /**
    * Use `.toContainKeys` when checking if an object has all of the provided keys.
    *
    * @param {Array.<String>} keys
    */
-  toContainKeys(keys: string[]): void,
+  toContainKeys(keys: Array<string>): void,
+
   /**
    * Use `.toContainAllKeys` when checking if an object only contains all of the provided keys.
    *
    * @param {Array.<String>} keys
    */
-  toContainAllKeys(keys: string[]): void,
+  toContainAllKeys(keys: Array<string>): void,
+
   /**
    * Use `.toContainAnyKeys` when checking if an object contains at least one of the provided keys.
    *
    * @param {Array.<String>} keys
    */
-  toContainAnyKeys(keys: string[]): void,
+  toContainAnyKeys(keys: Array<string>): void,
+
   /**
    * Use `.toContainValue` when checking if an object contains the provided value.
    *
    * @param {*} value
    */
   toContainValue(value: any): void,
+
   /**
    * Use `.toContainValues` when checking if an object contains all of the provided values.
    *
    * @param {Array.<*>} values
    */
-  toContainValues(values: any[]): void,
+  toContainValues(values: Array<any>): void,
+
   /**
    * Use `.toContainAllValues` when checking if an object only contains all of the provided values.
    *
    * @param {Array.<*>} values
    */
-  toContainAllValues(values: any[]): void,
+  toContainAllValues(values: Array<any>): void,
+
   /**
    * Use `.toContainAnyValues` when checking if an object contains at least one of the provided values.
    *
    * @param {Array.<*>} values
    */
-  toContainAnyValues(values: any[]): void,
+  toContainAnyValues(values: Array<any>): void,
+
   /**
    * Use `.toContainEntry` when checking if an object contains the provided entry.
    *
    * @param {Array.<String, String>} entry
    */
   toContainEntry(entry: [string, string]): void,
+
   /**
    * Use `.toContainEntries` when checking if an object contains all of the provided entries.
    *
    * @param {Array.<Array.<String, String>>} entries
    */
-  toContainEntries(entries: [string, string][]): void,
+  toContainEntries(entries: Array<[string, string]>): void,
+
   /**
    * Use `.toContainAllEntries` when checking if an object only contains all of the provided entries.
    *
    * @param {Array.<Array.<String, String>>} entries
    */
-  toContainAllEntries(entries: [string, string][]): void,
+  toContainAllEntries(entries: Array<[string, string]>): void,
+
   /**
    * Use `.toContainAnyEntries` when checking if an object contains at least one of the provided entries.
    *
    * @param {Array.<Array.<String, String>>} entries
    */
-  toContainAnyEntries(entries: [string, string][]): void,
+  toContainAnyEntries(entries: Array<[string, string]>): void,
+
   /**
    * Use `.toBeExtensible` when checking if an object is extensible.
    */
   toBeExtensible(): void,
+
   /**
    * Use `.toBeFrozen` when checking if an object is frozen.
    */
   toBeFrozen(): void,
+
   /**
    * Use `.toBeSealed` when checking if an object is sealed.
    */
   toBeSealed(): void,
+
   /**
    * Use `.toBeString` when checking if a value is a `String`.
    */
   toBeString(): void,
+
   /**
    * Use `.toEqualCaseInsensitive` when checking if a string is equal (===) to another ignoring the casing of both strings.
    *
    * @param {String} string
    */
   toEqualCaseInsensitive(string: string): void,
+
   /**
    * Use `.toStartWith` when checking if a `String` starts with a given `String` prefix.
    *
    * @param {String} prefix
    */
   toStartWith(prefix: string): void,
+
   /**
    * Use `.toEndWith` when checking if a `String` ends with a given `String` suffix.
    *
    * @param {String} suffix
    */
   toEndWith(suffix: string): void,
+
   /**
    * Use `.toInclude` when checking if a `String` includes the given `String` substring.
    *
    * @param {String} substring
    */
   toInclude(substring: string): void,
+
   /**
    * Use `.toIncludeRepeated` when checking if a `String` includes the given `String` substring the correct number of times.
    *
@@ -585,34 +551,13 @@ type JestExtendedMatchersType = {
    * @param {Number} times
    */
   toIncludeRepeated(substring: string, times: number): void,
+
   /**
    * Use `.toIncludeMultiple` when checking if a `String` includes all of the given substrings.
    *
    * @param {Array.<String>} substring
    */
-  toIncludeMultiple(substring: string[]): void,
-  ...
-};
-
-// Diffing snapshot utility for Jest (snapshot-diff)
-// https://github.com/jest-community/snapshot-diff
-type SnapshotDiffType = {
-  /**
-   * Compare the difference between the actual in the `expect()`
-   * vs the object inside `valueB` with some extra options.
-   */
-  toMatchDiffSnapshot(
-    valueB: any,
-    options?: {|
-      expand?: boolean,
-      colors?: boolean,
-      contextLines?: number,
-      stablePatchmarks?: boolean,
-      aAnnotation?: string,
-      bAnnotation?: string,
-    |},
-    testName?: string,
-  ): void,
+  toIncludeMultiple(substring: Array<string>): void,
   ...
 };
 
@@ -622,8 +567,7 @@ interface JestExpectType {
     DomTestingLibraryType &
     JestJQueryMatchersType &
     JestStyledComponentsMatchersType &
-    JestExtendedMatchersType &
-    SnapshotDiffType;
+    JestExtendedMatchersType;
   /**
    * If you have a mock function, you can use .lastCalledWith to test what
    * arguments it was last called with.
@@ -766,7 +710,7 @@ interface JestExpectType {
   /**
    *
    */
-  toHaveProperty(propPath: string | $ReadOnlyArray<string>, value?: any): void;
+  toHaveProperty(propPath: string, value?: any): void;
   /**
    * Use .toMatch to check that a string matches a regular expression or string.
    */
@@ -782,14 +726,20 @@ interface JestExpectType {
   /**
    * This ensures that an Object matches the most recent snapshot.
    */
-  toMatchSnapshot(propertyMatchers?: any, name?: string): void;
+  toMatchSnapshot(
+    propertyMatchers?: {[key: string]: JestAsymmetricEqualityType, ...},
+    name?: string,
+  ): void;
   /**
    * This ensures that an Object matches the most recent snapshot.
    */
   toMatchSnapshot(name: string): void;
 
   toMatchInlineSnapshot(snapshot?: string): void;
-  toMatchInlineSnapshot(propertyMatchers?: any, snapshot?: string): void;
+  toMatchInlineSnapshot(
+    propertyMatchers?: {[key: string]: JestAsymmetricEqualityType, ...},
+    snapshot?: string,
+  ): void;
   /**
    * Use .toThrow to test that a function throws when it is called.
    * If you want to test that a specific error gets thrown, you can provide an
@@ -846,18 +796,6 @@ type JestObjectType = {
    * Removes any pending timers from the timer system.
    */
   clearAllTimers(): void,
-  /**
-   * Returns the number of fake timers still left to run.
-   */
-  getTimerCount(): number,
-  /**
-   * Set the current system time used by fake timers.
-   * Simulates a user changing the system clock while your program is running.
-   * It affects the current time but it does not in itself cause
-   * e.g. timers to fire; they will fire exactly as they would have done
-   * without the call to jest.setSystemTime().
-   */
-  setSystemTime(now?: number | Date): void,
   /**
    * The same as `mock` but not moved to the top of the expectation by
    * babel-jest.
@@ -872,7 +810,6 @@ type JestObjectType = {
    * Returns a new, unused mock function. Optionally takes a mock
    * implementation.
    */
-  // MODIFIED: Added defaults to type arguments.
   fn<TArguments: $ReadOnlyArray<mixed> = $ReadOnlyArray<any>, TReturn = any>(
     implementation?: (...args: TArguments) => TReturn,
   ): JestMockFn<TArguments, TReturn>,
@@ -880,15 +817,11 @@ type JestObjectType = {
    * Determines if the given function is a mocked function.
    */
   isMockFunction(fn: Function): boolean,
-  /**
-   * Alias of `createMockFromModule`.
-   */
-  genMockFromModule(moduleName: string): any,
   /**
    * Given the name of a module, use the automatic mocking system to generate a
    * mocked version of the module for you.
    */
-  createMockFromModule(moduleName: string): any,
+  genMockFromModule(moduleName: string): any,
   /**
    * Mocks a module with an auto-mocked version when it is being required.
    *
@@ -918,12 +851,6 @@ type JestObjectType = {
    * useful to isolate modules where local state might conflict between tests.
    */
   resetModules(): JestObjectType,
-  /**
-   * Creates a sandbox registry for the modules that are loaded inside the
-   * callback function. This is useful to isolate specific modules for every
-   * test so that local module state doesn't conflict between tests.
-   */
-  isolateModules(fn: () => void): JestObjectType,
   /**
    * Exhausts the micro-task queue (usually interfaced in node via
    * process.nextTick).
@@ -943,6 +870,13 @@ type JestObjectType = {
    * or setInterval() and setImmediate()).
    */
   advanceTimersByTime(msToRun: number): void,
+  /**
+   * Executes only the macro task queue (i.e. all tasks queued by setTimeout()
+   * or setInterval() and setImmediate()).
+   *
+   * Renamed to `advanceTimersByTime`.
+   */
+  runTimersToTime(msToRun: number): void,
   /**
    * Executes only the macro-tasks that are currently pending (i.e., only the
    * tasks that have been queued by setTimeout() or setInterval() up to this
@@ -966,7 +900,7 @@ type JestObjectType = {
    * (setTimeout, setInterval, clearTimeout, clearInterval, nextTick,
    * setImmediate and clearImmediate).
    */
-  useFakeTimers(fakeTimersConfig?: FakeTimersConfig): JestObjectType,
+  useFakeTimers(type?: 'legacy' | 'modern'): JestObjectType,
   /**
    * Instructs Jest to use the real versions of the standard timer functions.
    */
@@ -988,31 +922,29 @@ type JestObjectType = {
   ...
 };
 
-type JestSpyType = {calls: JestCallsType, ...};
-
-type JestDoneFn = {|
-  (error?: Error): void,
-  fail: (error: Error) => void,
-|};
+type JestSpyType = {
+  calls: JestCallsType,
+  ...
+};
 
 /** Runs this function after every test inside this context */
 declare function afterEach(
-  fn: (done: JestDoneFn) => ?Promise<mixed>,
+  fn: (done: () => void) => ?Promise<mixed>,
   timeout?: number,
 ): void;
 /** Runs this function before every test inside this context */
 declare function beforeEach(
-  fn: (done: JestDoneFn) => ?Promise<mixed>,
+  fn: (done: () => void) => ?Promise<mixed>,
   timeout?: number,
 ): void;
 /** Runs this function after all tests have finished inside this context */
 declare function afterAll(
-  fn: (done: JestDoneFn) => ?Promise<mixed>,
+  fn: (done: () => void) => ?Promise<mixed>,
   timeout?: number,
 ): void;
 /** Runs this function before any tests have started inside this context */
 declare function beforeAll(
-  fn: (done: JestDoneFn) => ?Promise<mixed>,
+  fn: (done: () => void) => ?Promise<mixed>,
   timeout?: number,
 ): void;
 
@@ -1022,25 +954,27 @@ declare var describe: {
    * Creates a block that groups together several related tests in one "test suite"
    */
   (name: JestTestName, fn: () => void): void,
+
   /**
    * Only run this describe block
    */
   only(name: JestTestName, fn: () => void): void,
+
   /**
    * Skip running this describe block
    */
   skip(name: JestTestName, fn: () => void): void,
+
   /**
    * each runs this test against array of argument arrays per each run
    *
    * @param {table} table of Test
    */
-  each(
-    ...table: Array<Array<mixed> | mixed> | [Array<string>, string]
+  each<TArguments: Array<mixed> | mixed>(
+    table: $ReadOnlyArray<TArguments>,
   ): (
     name: JestTestName,
-    fn?: (...args: Array<any>) => ?Promise<mixed>,
-    timeout?: number,
+    fn?: (...args: TArguments) => ?Promise<mixed>,
   ) => void,
   ...
 };
@@ -1056,9 +990,20 @@ declare var it: {
    */
   (
     name: JestTestName,
-    fn?: (done: JestDoneFn) => ?Promise<mixed>,
+    fn?: (done: () => void) => ?Promise<mixed>,
     timeout?: number,
   ): void,
+  /**
+   * each runs this test against array of argument arrays per each run
+   *
+   * @param {table} table of Test
+   */
+  each<TArguments: Array<mixed> | mixed>(
+    table: $ReadOnlyArray<TArguments>,
+  ): (
+    name: JestTestName,
+    fn?: (...args: TArguments) => ?Promise<mixed>,
+  ) => void,
   /**
    * Only run this test
    *
@@ -1066,20 +1011,19 @@ declare var it: {
    * @param {Function} Test
    * @param {number} Timeout for the test, in milliseconds.
    */
-  only: {|
-    (
-      name: JestTestName,
-      fn?: (done: JestDoneFn) => ?Promise<mixed>,
-      timeout?: number,
-    ): void,
-    each(
-      ...table: Array<Array<mixed> | mixed> | [Array<string>, string]
+  only(
+    name: JestTestName,
+    fn?: (done: () => void) => ?Promise<mixed>,
+    timeout?: number,
+  ): {
+    each<TArguments: Array<mixed> | mixed>(
+      table: $ReadOnlyArray<TArguments>,
     ): (
       name: JestTestName,
-      fn?: (...args: Array<any>) => ?Promise<mixed>,
-      timeout?: number,
+      fn?: (...args: TArguments) => ?Promise<mixed>,
     ) => void,
-  |},
+    ...
+  },
   /**
    * Skip running this test
    *
@@ -1087,26 +1031,11 @@ declare var it: {
    * @param {Function} Test
    * @param {number} Timeout for the test, in milliseconds.
    */
-  skip: {|
-    (
-      name: JestTestName,
-      fn?: (done: JestDoneFn) => ?Promise<mixed>,
-      timeout?: number,
-    ): void,
-    each(
-      ...table: Array<Array<mixed> | mixed> | [Array<string>, string]
-    ): (
-      name: JestTestName,
-      fn?: (...args: Array<any>) => ?Promise<mixed>,
-      timeout?: number,
-    ) => void,
-  |},
-  /**
-   * Highlight planned tests in the summary output
-   *
-   * @param {String} Name of Test to do
-   */
-  todo(name: string): void,
+  skip(
+    name: JestTestName,
+    fn?: (done: () => void) => ?Promise<mixed>,
+    timeout?: number,
+  ): void,
   /**
    * Run the test concurrently
    *
@@ -1116,27 +1045,14 @@ declare var it: {
    */
   concurrent(
     name: JestTestName,
-    fn?: (done: JestDoneFn) => ?Promise<mixed>,
+    fn?: (done: () => void) => ?Promise<mixed>,
     timeout?: number,
   ): void,
-  /**
-   * each runs this test against array of argument arrays per each run
-   *
-   * @param {table} table of Test
-   */
-  each(
-    ...table: Array<Array<mixed> | mixed> | [Array<string>, string]
-  ): (
-    name: JestTestName,
-    fn?: (...args: Array<any>) => ?Promise<mixed>,
-    timeout?: number,
-  ) => void,
   ...
 };
-
 declare function fit(
   name: JestTestName,
-  fn: (done: JestDoneFn) => ?Promise<mixed>,
+  fn: (done: () => void) => ?Promise<mixed>,
   timeout?: number,
 ): void;
 /** An individual test unit */
@@ -1151,38 +1067,16 @@ declare var xit: typeof it;
 declare var xtest: typeof it;
 
 type JestPrettyFormatColors = {
-  comment: {
-    close: string,
-    open: string,
-    ...
-  },
-  content: {
-    close: string,
-    open: string,
-    ...
-  },
-  prop: {
-    close: string,
-    open: string,
-    ...
-  },
-  tag: {
-    close: string,
-    open: string,
-    ...
-  },
-  value: {
-    close: string,
-    open: string,
-    ...
-  },
+  comment: {close: string, open: string, ...},
+  content: {close: string, open: string, ...},
+  prop: {close: string, open: string, ...},
+  tag: {close: string, open: string, ...},
+  value: {close: string, open: string, ...},
   ...
 };
 
 type JestPrettyFormatIndent = string => string;
-type JestPrettyFormatRefs = Array<any>;
 type JestPrettyFormatPrint = any => string;
-type JestPrettyFormatStringOrNull = string | null;
 
 type JestPrettyFormatOptions = {|
   callToJSON: boolean,
@@ -1229,8 +1123,8 @@ declare var expect: {
     DomTestingLibraryType &
     JestJQueryMatchersType &
     JestStyledComponentsMatchersType &
-    JestExtendedMatchersType &
-    SnapshotDiffType,
+    JestExtendedMatchersType,
+
   /** Add additional Jasmine matchers to Jest's roster */
   extend(matchers: {[name: string]: JestMatcher, ...}): void,
   /** Add a module that formats application-specific data structures. */
@@ -1239,7 +1133,6 @@ declare var expect: {
   hasAssertions(): void,
   any(value: mixed): JestAsymmetricEqualityType,
   anything(): any,
-  // MODIFIED: Array -> $ReadOnlyArray
   arrayContaining(value: $ReadOnlyArray<mixed>): Array<mixed>,
   objectContaining(value: Object): Object,
   /** Matches any received string that contains the exact expected string. */
@@ -1262,6 +1155,18 @@ declare function spyOn(value: mixed, method: string): Object;
 /** Holds all functions related to manipulating test runner */
 declare var jest: JestObjectType;
 
+/**
+ * https://jasmine.github.io/2.4/custom_reporter.html
+ */
+type JasmineReporter = {
+  jasmineStarted?: (suiteInfo: mixed) => void,
+  suiteStarted?: (result: mixed) => void,
+  specStarted?: (result: mixed) => void,
+  specDone?: (result: mixed) => void,
+  suiteDone?: (result: mixed) => void,
+  ...
+};
+
 /**
  * The global Jasmine object, this is generally not exposed as the public API,
  * using features inside here could break in later versions of Jest.
@@ -1270,13 +1175,14 @@ declare var jasmine: {
   DEFAULT_TIMEOUT_INTERVAL: number,
   any(value: mixed): JestAsymmetricEqualityType,
   anything(): any,
-  arrayContaining(value: Array<mixed>): Array<mixed>,
+  arrayContaining(value: $ReadOnlyArray<mixed>): Array<mixed>,
   clock(): JestClockType,
   createSpy(name: string): JestSpyType,
   createSpyObj(
     baseName: string,
     methodNames: Array<string>,
   ): {[methodName: string]: JestSpyType, ...},
+  getEnv(): {addReporter: (jasmineReporter: JasmineReporter) => void, ...},
   objectContaining(value: Object): Object,
   stringMatching(value: string): string,
   ...
diff --git a/node_modules/react-native/flow/use-sync-external-store.js b/node_modules/react-native/flow/use-sync-external-store.js
index 0cad445..4edac0d 100644
--- a/node_modules/react-native/flow/use-sync-external-store.js
+++ b/node_modules/react-native/flow/use-sync-external-store.js
@@ -15,6 +15,5 @@ declare module 'use-sync-external-store/shim' {
   declare export function useSyncExternalStore<Value>(
     subscribe: (callback: Function) => () => void,
     getCurrentValue: () => Value,
-    getServerSnapshot?: () => Value,
   ): Value;
 }
diff --git a/node_modules/react-native/gradle.properties b/node_modules/react-native/gradle.properties
index 2d8d1e4..da451d7 100644
--- a/node_modules/react-native/gradle.properties
+++ b/node_modules/react-native/gradle.properties
@@ -1 +1,12 @@
+# This is causing issue with dependencies task: https://github.com/gradle/gradle/issues/9645#issuecomment-530746758
+# org.gradle.configureondemand=true
+org.gradle.daemon=true
+org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -Dfile.encoding=UTF-8
+org.gradle.parallel=true
+
 android.useAndroidX=true
+
+# Use this property to specify which architecture you want to build.
+# You can also override it from the CLI using
+# ./gradlew <task> -PreactNativeArchitectures=x86_64
+reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64
diff --git a/node_modules/react-native/index.js b/node_modules/react-native/index.js
index 7149c64..f556fa3 100644
--- a/node_modules/react-native/index.js
+++ b/node_modules/react-native/index.js
@@ -14,6 +14,7 @@
 import typeof AccessibilityInfo from './Libraries/Components/AccessibilityInfo/AccessibilityInfo';
 import typeof ActivityIndicator from './Libraries/Components/ActivityIndicator/ActivityIndicator';
 import typeof Button from './Libraries/Components/Button';
+import typeof DatePickerIOS from './Libraries/Components/DatePicker/DatePickerIOS';
 import typeof DrawerLayoutAndroid from './Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';
 import typeof FlatList from './Libraries/Lists/FlatList';
 import typeof Image from './Libraries/Image/Image';
@@ -23,10 +24,12 @@ import typeof KeyboardAvoidingView from './Libraries/Components/Keyboard/Keyboar
 import typeof Modal from './Libraries/Modal/Modal';
 import typeof Pressable from './Libraries/Components/Pressable/Pressable';
 import typeof ProgressBarAndroid from './Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';
+import typeof ProgressViewIOS from './Libraries/Components/ProgressViewIOS/ProgressViewIOS';
 import typeof RefreshControl from './Libraries/Components/RefreshControl/RefreshControl';
 import typeof SafeAreaView from './Libraries/Components/SafeAreaView/SafeAreaView';
 import typeof ScrollView from './Libraries/Components/ScrollView/ScrollView';
 import typeof SectionList from './Libraries/Lists/SectionList';
+import typeof Slider from './Libraries/Components/Slider/Slider';
 import typeof StatusBar from './Libraries/Components/StatusBar/StatusBar';
 import typeof Switch from './Libraries/Components/Switch/Switch';
 import typeof Text from './Libraries/Text/Text';
@@ -106,13 +109,22 @@ module.exports = {
       .default;
   },
   get ActivityIndicator(): ActivityIndicator {
-    return require('./Libraries/Components/ActivityIndicator/ActivityIndicator')
-      .default;
+    return require('./Libraries/Components/ActivityIndicator/ActivityIndicator');
   },
   get Button(): Button {
     return require('./Libraries/Components/Button');
   },
   // $FlowFixMe[value-as-type]
+  get DatePickerIOS(): DatePickerIOS {
+    warnOnce(
+      'DatePickerIOS-merged',
+      'DatePickerIOS has been merged with DatePickerAndroid and will be removed in a future release. ' +
+        "It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. " +
+        'See https://github.com/react-native-datetimepicker/datetimepicker',
+    );
+    return require('./Libraries/Components/DatePicker/DatePickerIOS');
+  },
+  // $FlowFixMe[value-as-type]
   get DrawerLayoutAndroid(): DrawerLayoutAndroid {
     return require('./Libraries/Components/DrawerAndroid/DrawerLayoutAndroid');
   },
@@ -148,6 +160,16 @@ module.exports = {
     );
     return require('./Libraries/Components/ProgressBarAndroid/ProgressBarAndroid');
   },
+  // $FlowFixMe[value-as-type]
+  get ProgressViewIOS(): ProgressViewIOS {
+    warnOnce(
+      'progress-view-ios-moved',
+      'ProgressViewIOS has been extracted from react-native core and will be removed in a future release. ' +
+        "It can now be installed and imported from '@react-native-community/progress-view' instead of 'react-native'. " +
+        'See https://github.com/react-native-progress-view/progress-view',
+    );
+    return require('./Libraries/Components/ProgressViewIOS/ProgressViewIOS');
+  },
   get RefreshControl(): RefreshControl {
     return require('./Libraries/Components/RefreshControl/RefreshControl');
   },
@@ -160,6 +182,15 @@ module.exports = {
   get SectionList(): SectionList {
     return require('./Libraries/Lists/SectionList').default;
   },
+  get Slider(): Slider {
+    warnOnce(
+      'slider-moved',
+      'Slider has been extracted from react-native core and will be removed in a future release. ' +
+        "It can now be installed and imported from '@react-native-community/slider' instead of 'react-native'. " +
+        'See https://github.com/callstack/react-native-slider',
+    );
+    return require('./Libraries/Components/Slider/Slider');
+  },
   get StatusBar(): StatusBar {
     return require('./Libraries/Components/StatusBar/StatusBar');
   },
@@ -191,7 +222,7 @@ module.exports = {
     return require('./Libraries/Components/View/View');
   },
   get VirtualizedList(): VirtualizedList {
-    return require('./Libraries/Lists/VirtualizedList');
+    return require('./Libraries/Lists/VirtualizedList').default;
   },
   get VirtualizedSectionList(): VirtualizedSectionList {
     return require('./Libraries/Lists/VirtualizedSectionList');
@@ -238,7 +269,7 @@ module.exports = {
     return require('./Libraries/Utilities/DevSettings');
   },
   get Dimensions(): Dimensions {
-    return require('./Libraries/Utilities/Dimensions').default;
+    return require('./Libraries/Utilities/Dimensions');
   },
   get Easing(): Easing {
     return require('./Libraries/Animated/Easing').default;
@@ -262,7 +293,7 @@ module.exports = {
     return require('./Libraries/Linking/Linking');
   },
   get LogBox(): LogBox {
-    return require('./Libraries/LogBox/LogBox').default;
+    return require('./Libraries/LogBox/LogBox');
   },
   get NativeDialogManagerAndroid(): NativeDialogManagerAndroid {
     return require('./Libraries/NativeModules/specs/NativeDialogManagerAndroid')
@@ -272,16 +303,16 @@ module.exports = {
     return require('./Libraries/EventEmitter/NativeEventEmitter').default;
   },
   get Networking(): Networking {
-    return require('./Libraries/Network/RCTNetworking').default;
+    return require('./Libraries/Network/RCTNetworking');
   },
   get PanResponder(): PanResponder {
-    return require('./Libraries/Interaction/PanResponder').default;
+    return require('./Libraries/Interaction/PanResponder');
   },
   get PermissionsAndroid(): PermissionsAndroid {
     return require('./Libraries/PermissionsAndroid/PermissionsAndroid');
   },
   get PixelRatio(): PixelRatio {
-    return require('./Libraries/Utilities/PixelRatio').default;
+    return require('./Libraries/Utilities/PixelRatio');
   },
   get PushNotificationIOS(): PushNotificationIOS {
     warnOnce(
@@ -331,7 +362,7 @@ module.exports = {
     return require('./Libraries/Utilities/useWindowDimensions').default;
   },
   get UTFSequence(): UTFSequence {
-    return require('./Libraries/UTFSequence').default;
+    return require('./Libraries/UTFSequence');
   },
   get Vibration(): Vibration {
     return require('./Libraries/Vibration/Vibration');
@@ -362,12 +393,12 @@ module.exports = {
       .PlatformColor;
   },
   get processColor(): processColor {
-    return require('./Libraries/StyleSheet/processColor').default;
+    return require('./Libraries/StyleSheet/processColor');
   },
   get requireNativeComponent(): <T>(
     uiViewClassName: string,
   ) => HostComponent<T> {
-    return require('./Libraries/ReactNative/requireNativeComponent').default;
+    return require('./Libraries/ReactNative/requireNativeComponent');
   },
   get RootTagContext(): RootTagContext {
     return require('./Libraries/ReactNative/RootTag').RootTagContext;
@@ -739,49 +770,4 @@ if (__DEV__) {
       );
     },
   });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access ProgressViewIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access ProgressViewIOS. */
-  Object.defineProperty(module.exports, 'ProgressViewIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'ProgressViewIOS has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-community/progress-view' instead of 'react-native'. " +
-          'See https://github.com/react-native-progress-view/progress-view',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access DatePickerIOS. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access DatePickerIOS. */
-  Object.defineProperty(module.exports, 'DatePickerIOS', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'DatePickerIOS has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-community/datetimepicker' instead of 'react-native'. " +
-          'See https://github.com/react-native-datetimepicker/datetimepicker',
-      );
-    },
-  });
-  /* $FlowFixMe[prop-missing] This is intentional: Flow will error when
-   * attempting to access Slider. */
-  /* $FlowFixMe[invalid-export] This is intentional: Flow will error when
-   * attempting to access Slider. */
-  Object.defineProperty(module.exports, 'Slider', {
-    configurable: true,
-    get() {
-      invariant(
-        false,
-        'Slider has been removed from react-native core. ' +
-          "It can now be installed and imported from '@react-native-community/slider' instead of 'react-native'. " +
-          'See https://github.com/callstack/react-native-slider',
-      );
-    },
-  });
 }
diff --git a/node_modules/react-native/interface.js b/node_modules/react-native/interface.js
index 8052785..291c819 100644
--- a/node_modules/react-native/interface.js
+++ b/node_modules/react-native/interface.js
@@ -11,7 +11,7 @@
 'use strict';
 
 // NOTE: Hmm... I don't think declaring variables within this module actually
-// accomplishes anything besides documenting that these globals are expected to
+// accomplishes anything besides documenting that these globals are exepcted to
 // exist. So I think the correct "fix" to this lint warning is to delete this
 // entire file. But in lieu of doing that... no harm for now in keeping this
 // file around, even if it is only for documentation purposes. ¯\_(ツ)_/¯
diff --git a/node_modules/react-native/jest/local-setup.js b/node_modules/react-native/jest/local-setup.js
deleted file mode 100644
index e45e74a..0000000
--- a/node_modules/react-native/jest/local-setup.js
+++ /dev/null
@@ -1,33 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- */
-
-// Global setup for tests local to the react-native repo. This setup is not
-// included in the react-native Jest preset.
-
-'use strict';
-
-require('./setup');
-
-const consoleError = console.error;
-const consoleWarn = console.warn;
-
-// Blackhole verbose console output
-console.debug = jest.fn();
-console.info = jest.fn();
-console.log = jest.fn();
-
-console.error = (...args) => {
-  consoleError(...args);
-  throw new Error('console.error() was called (see error above)');
-};
-
-console.warn = (...args) => {
-  consoleWarn(...args);
-  throw new Error('console.warn() was called (see warning above)');
-};
diff --git a/node_modules/react-native/jest/mockComponent.js b/node_modules/react-native/jest/mockComponent.js
index 5e50810..9e21dfa 100644
--- a/node_modules/react-native/jest/mockComponent.js
+++ b/node_modules/react-native/jest/mockComponent.js
@@ -9,10 +9,8 @@
 
 'use strict';
 
-module.exports = (moduleName, instanceMethods, isESModule) => {
-  const RealComponent = isESModule
-    ? jest.requireActual(moduleName).default
-    : jest.requireActual(moduleName);
+module.exports = (moduleName, instanceMethods) => {
+  const RealComponent = jest.requireActual(moduleName);
   const React = require('react');
 
   const SuperClass =
diff --git a/node_modules/react-native/jest/mockNativeComponent.js b/node_modules/react-native/jest/mockNativeComponent.js
index da1cf85..c42baec 100644
--- a/node_modules/react-native/jest/mockNativeComponent.js
+++ b/node_modules/react-native/jest/mockNativeComponent.js
@@ -13,7 +13,7 @@ const React = require('react');
 
 let nativeTag = 1;
 
-export default viewName => {
+module.exports = viewName => {
   const Component = class extends React.Component {
     _nativeTag = nativeTag++;
 
diff --git a/node_modules/react-native/jest/mockScrollView.js b/node_modules/react-native/jest/mockScrollView.js
index e8eb693..ceeb184 100644
--- a/node_modules/react-native/jest/mockScrollView.js
+++ b/node_modules/react-native/jest/mockScrollView.js
@@ -15,8 +15,7 @@
 const React = require('react');
 const View = require('../Libraries/Components/View/View');
 
-const requireNativeComponent =
-  require('../Libraries/ReactNative/requireNativeComponent').default;
+const requireNativeComponent = require('../Libraries/ReactNative/requireNativeComponent');
 const RCTScrollView: $FlowFixMe = requireNativeComponent('RCTScrollView');
 
 function mockScrollView(BaseComponent: $FlowFixMe) {
diff --git a/node_modules/react-native/jest/react-native-env.js b/node_modules/react-native/jest/react-native-env.js
index 494bb88..624d364 100644
--- a/node_modules/react-native/jest/react-native-env.js
+++ b/node_modules/react-native/jest/react-native-env.js
@@ -12,5 +12,7 @@
 const NodeEnv = require('jest-environment-node').TestEnvironment;
 
 module.exports = class ReactNativeEnv extends NodeEnv {
-  customExportConditions = ['require', 'react-native'];
+  exportConditions() {
+    return ['react-native'];
+  }
 };
diff --git a/node_modules/react-native/jest/setup.js b/node_modules/react-native/jest/setup.js
index 71f49e6..3738bd2 100644
--- a/node_modules/react-native/jest/setup.js
+++ b/node_modules/react-native/jest/setup.js
@@ -12,8 +12,8 @@
 const MockNativeMethods = jest.requireActual('./MockNativeMethods');
 const mockComponent = jest.requireActual('./mockComponent');
 
-jest.requireActual('@react-native/js-polyfills/Object.es8');
-jest.requireActual('@react-native/js-polyfills/error-guard');
+jest.requireActual('@react-native/polyfills/Object.es8');
+jest.requireActual('@react-native/polyfills/error-guard');
 
 global.__DEV__ = true;
 
@@ -25,7 +25,7 @@ global.regeneratorRuntime = jest.requireActual('regenerator-runtime/runtime');
 global.window = global;
 
 global.requestAnimationFrame = function (callback) {
-  return setTimeout(() => callback(jest.now()), 0);
+  return setTimeout(callback, 0);
 };
 global.cancelAnimationFrame = function (id) {
   clearTimeout(id);
@@ -164,14 +164,11 @@ jest
     const mockScrollView = jest.requireActual('./mockScrollView');
     return mockScrollView(baseComponent);
   })
-  .mock('../Libraries/Components/ActivityIndicator/ActivityIndicator', () => ({
-    __esModule: true,
-    default: mockComponent(
+  .mock('../Libraries/Components/ActivityIndicator/ActivityIndicator', () =>
+    mockComponent(
       '../Libraries/Components/ActivityIndicator/ActivityIndicator',
-      null,
-      true,
     ),
-  }))
+  )
   .mock('../Libraries/AppState/AppState', () => ({
     addEventListener: jest.fn(() => ({
       remove: jest.fn(),
@@ -341,10 +338,10 @@ jest
   .mock('../Libraries/NativeComponent/NativeComponentRegistry', () => {
     return {
       get: jest.fn((name, viewConfigProvider) => {
-        return jest.requireActual('./mockNativeComponent').default(name);
+        return jest.requireActual('./mockNativeComponent')(name);
       }),
       getWithFallback_DEPRECATED: jest.fn((name, viewConfigProvider) => {
-        return jest.requireActual('./mockNativeComponent').default(name);
+        return jest.requireActual('./mockNativeComponent')(name);
       }),
       setRuntimeConfigProvider: jest.fn(),
     };
diff --git a/node_modules/react-native/local-cli/cli.js b/node_modules/react-native/local-cli/cli.js
old mode 100755
new mode 100644
diff --git a/node_modules/react-native/react-native.config.js b/node_modules/react-native/react-native.config.js
index b9c5fa3..b700afc 100644
--- a/node_modules/react-native/react-native.config.js
+++ b/node_modules/react-native/react-native.config.js
@@ -30,10 +30,10 @@ module.exports = {
   reactNativePath: '.',
   project: {
     ios: {
-      sourceDir: '../packages/rn-tester',
+      sourceDir: './packages/rn-tester',
     },
     android: {
-      sourceDir: '../packages/rn-tester',
+      sourceDir: './packages/rn-tester',
     },
   },
 };
diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
new file mode 100644
index 0000000..250299b
--- /dev/null
+++ b/node_modules/react-native/react.gradle
@@ -0,0 +1,486 @@
+/*
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+import org.apache.tools.ant.taskdefs.condition.Os
+import org.gradle.internal.jvm.Jvm
+import org.gradle.internal.logging.text.StyledTextOutput
+import org.gradle.internal.logging.text.StyledTextOutputFactory
+import org.gradle.internal.logging.text.StyledTextOutput.Style
+
+def out = services.get(StyledTextOutputFactory).create("ouput")
+out.style(Style.Info)
+    .text('##############################')
+    .text('\n\n')
+    .text('Using react.gradle in your project is deprecated! You should move to "apply plugin: com.facebook.react"')
+    .text('\n')
+    .text('react.gradle is going to be removed in a future React Native project and your project will not build anymore.')
+    .text('\n')
+    .text('You can use the template as a reference:')
+    .text('\n')
+    .text('https://github.com/facebook/react-native/blob/main/template/android/app/build.gradle')
+    .text('\n\n')
+    .text('##############################')
+    .println('')
+
+def config = project.hasProperty("react") ? project.react : [:];
+
+def detectEntryFile(config) {
+    if (System.getenv('ENTRY_FILE')) {
+        return System.getenv('ENTRY_FILE')
+    } else if (config.entryFile) {
+        return config.entryFile
+    } else if ((new File("${projectDir}/../../index.android.js")).exists()) {
+        return "index.android.js"
+    }
+
+    return "index.js";
+}
+
+def composeSourceMapsPath = config.composeSourceMapsPath ?: "node_modules/react-native/scripts/compose-source-maps.js"
+def bundleAssetName = config.bundleAssetName ?: "index.android.bundle"
+def entryFile = detectEntryFile(config)
+def bundleCommand = config.bundleCommand ?: "bundle"
+def reactRoot = file(config.root ?: "../../")
+def inputExcludes = config.inputExcludes ?: ["android/**", "ios/**"]
+def bundleConfig = config.bundleConfig ? "${reactRoot}/${config.bundleConfig}" : null ;
+def enableVmCleanup = config.enableVmCleanup == null ? true : config.enableVmCleanup
+def hermesCommand = config.hermesCommand
+
+/**
+ * Detects CLI location in a similar fashion to the React Native CLI
+ */
+def detectCliPath(config, reactRoot) {
+    // 1. preconfigured path
+    if (config.cliPath) {
+        def cliJsAbsolute = new File(config.cliPath)
+        if (cliJsAbsolute.exists()) {
+            return cliJsAbsolute.getAbsolutePath()
+        }
+        def cliJsRelativeToRoot = new File("${rootDir}/${config.cliPath}")
+        if (cliJsRelativeToRoot.exists()) {
+            return cliJsRelativeToRoot.getAbsolutePath()
+        }
+        def cliJsRelativeToProject = new File("${projectDir}/${config.cliPath}")
+        if (cliJsRelativeToProject.exists()) {
+            return cliJsRelativeToProject.getAbsolutePath()
+        }
+    }
+
+    // 2. node module path
+    def cliJsFromNode = new File(["node", "--print", "require.resolve('react-native/cli')"].execute(null, rootDir).text.trim())
+    if (cliJsFromNode.exists()) {
+        return cliJsFromNode.getAbsolutePath()
+    }
+
+    // 3. cli.js in the root folder
+    def rootCliJs = new File(reactRoot, "node_modules/react-native/cli.js")
+    if (rootCliJs.exists()) {
+        return rootCliJs.getAbsolutePath()
+    }
+
+    throw new Exception("Couldn't determine CLI location. " +
+             "Please set `project.ext.react.cliPath` to the path of the react-native cli.js file. " +
+             "This file typically resides in `node_modules/react-native/cli.js`");
+}
+
+def reactNativeDevServerPort() {
+    def value = project.getProperties().get("reactNativeDevServerPort")
+    return value != null ? value : "8081"
+}
+
+def reactNativeInspectorProxyPort() {
+    def value = project.getProperties().get("reactNativeInspectorProxyPort")
+    return value != null ? value : reactNativeDevServerPort()
+}
+
+def getHermesOSBin() {
+    if (Os.isFamily(Os.FAMILY_WINDOWS)) return "win64-bin";
+    if (Os.isFamily(Os.FAMILY_MAC)) return "osx-bin";
+    if (Os.isOs(null, "linux", "amd64", null)) return "linux64-bin";
+    throw new Exception("OS not recognized. Please set project.ext.react.hermesCommand " +
+                        "to the path of a working Hermes compiler.");
+}
+
+// Make sure not to inspect the Hermes config unless we need it,
+// to avoid breaking any JSC-only setups.
+def getHermesCommand = {
+    // 1. If the project specifies a Hermes command, don't second guess it.
+    if (config.hermesCommand?.trim()) {
+        if (hermesCommand.contains("%OS-BIN%")) {
+            return hermesCommand
+                .replaceAll("%OS-BIN%", getHermesOSBin())
+                .replace('/' as char, File.separatorChar)
+        } else {
+            return hermesCommand
+                .replace('/' as char, File.separatorChar)
+        }
+    }
+
+    def hermescBin = Os.isFamily(Os.FAMILY_WINDOWS) ? 'hermesc.exe' : 'hermesc'
+
+    // 2. If the project is building hermes-engine from source, use hermesc from there
+    // Also note that user can override the hermes source location with
+    // the `REACT_NATIVE_OVERRIDE_HERMES_DIR` env variable.
+    def hermesOverrideDir = System.getenv("REACT_NATIVE_OVERRIDE_HERMES_DIR")
+    def builtHermesc = hermesOverrideDir ?
+        new File(hermesOverrideDir, "build/bin/$hermescBin") :
+        new File(reactRoot, "node_modules/react-native/ReactAndroid/hermes-engine/build/hermes/bin/$hermescBin")
+
+    if (builtHermesc.exists()) {
+        return builtHermesc.getAbsolutePath()
+    }
+
+    // 3. If the react-native contains a pre-built hermesc, use it.
+    def prebuiltHermesPath = "node_modules/react-native/sdks/hermesc/%OS-BIN%/$hermescBin"
+        .replaceAll("%OS-BIN%", getHermesOSBin())
+        .replace('/' as char, File.separatorChar);
+    def prebuiltHermes = new File(reactRoot, prebuiltHermesPath)
+    if (prebuiltHermes.exists()) {
+        return prebuiltHermes.getAbsolutePath()
+    }
+
+    throw new Exception("Couldn't determine Hermesc location. " +
+        "Please set `project.ext.react.hermesCommand` to the path of the hermesc binary file. " +
+        "node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc");
+}
+
+// Set enableHermesForVariant to a function to configure per variant,
+// or set `enableHermes` to True/False to set all of them
+def enableHermesForVariant = config.enableHermesForVariant ?: {
+    def variant -> config.enableHermes ?: false
+}
+
+// Set hermesFlagsForVariant to a function to configure per variant,
+// or set `hermesFlagsRelease` and `hermesFlagsDebug` to an array
+def hermesFlagsForVariant = config.hermesFlagsForVariant ?: {
+    def variant ->
+        def hermesFlags;
+        if (variant.name.toLowerCase().contains("release")) {
+            // Can't use ?: since that will also substitute valid empty lists
+            hermesFlags = config.hermesFlagsRelease
+            if (hermesFlags == null) hermesFlags = ["-O", "-output-source-map"]
+        } else {
+            hermesFlags = config.hermesFlagsDebug
+            if (hermesFlags == null) hermesFlags = []
+        }
+        return hermesFlags
+}
+
+// Set disableDevForVariant to a function to configure per variant,
+// defaults to `devDisabledIn${targetName}` or True for Release variants and False for debug variants
+def disableDevForVariant = config.disableDevForVariant ?: {
+    def variant ->
+      config."devDisabledIn${variant.name.capitalize()}" ||
+      variant.name.toLowerCase().contains("release")
+}
+
+// Set bundleForVariant to a function to configure per variant,
+// defaults to `bundleIn${targetName}` or True for Release variants and False for debug variants
+def bundleForVariant = config.bundleForVariant ?: {
+    def variant ->
+      config."bundleIn${variant.name.capitalize()}" ||
+      config."bundleIn${variant.buildType.name.capitalize()}" ||
+      variant.name.toLowerCase().contains("release")
+}
+
+// Set deleteDebugFilesForVariant to a function to configure per variant,
+// defaults to True for Release variants and False for debug variants
+def deleteDebugFilesForVariant = config.deleteDebugFilesForVariant ?: {
+    def variant -> variant.name.toLowerCase().contains("release")
+}
+
+android {
+    buildTypes.all {
+        resValue "integer", "react_native_dev_server_port", reactNativeDevServerPort()
+        resValue "integer", "react_native_inspector_proxy_port", reactNativeInspectorProxyPort()
+    }
+}
+
+def jvmVersion = Jvm.current().javaVersion.majorVersion
+if (jvmVersion.toInteger() <= 8) {
+    println "\n\n\n"
+    println "**************************************************************************************************************"
+    println "\n\n"
+    println "ERROR: requires JDK11 or higher."
+    println "Incompatible major version detected: '" + jvmVersion + "'"
+    println "\n\n"
+    println "**************************************************************************************************************"
+    println "\n\n\n"
+    System.exit(1)
+}
+
+afterEvaluate {
+    def isAndroidLibrary = plugins.hasPlugin("com.android.library")
+    def variants = isAndroidLibrary ? android.libraryVariants : android.applicationVariants
+    variants.all { def variant ->
+        // Create variant and target names
+        def targetName = variant.name.capitalize()
+        def targetPath = variant.dirName
+
+        // React js bundle directories
+        def jsBundleDir = file("$buildDir/generated/assets/react/${targetPath}")
+        def resourcesDir = file("$buildDir/generated/res/react/${targetPath}")
+
+        def jsBundleFile = file("$jsBundleDir/$bundleAssetName")
+        def jsSourceMapsDir = file("$buildDir/generated/sourcemaps/react/${targetPath}")
+        def jsIntermediateSourceMapsDir = file("$buildDir/intermediates/sourcemaps/react/${targetPath}")
+        def jsPackagerSourceMapFile = file("$jsIntermediateSourceMapsDir/${bundleAssetName}.packager.map")
+        def jsCompilerSourceMapFile = file("$jsIntermediateSourceMapsDir/${bundleAssetName}.compiler.map")
+        def jsOutputSourceMapFile = file("$jsSourceMapsDir/${bundleAssetName}.map")
+
+        // Additional node and packager commandline arguments
+        def nodeExecutableAndArgs = config.nodeExecutableAndArgs ?: ["node"]
+        def cliPath = detectCliPath(config, reactRoot)
+
+        def execCommand = []
+
+        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
+            execCommand.addAll(["cmd", "/c", *nodeExecutableAndArgs, cliPath])
+        } else {
+            execCommand.addAll([*nodeExecutableAndArgs, cliPath])
+        }
+
+        def enableHermes = enableHermesForVariant(variant)
+
+        def currentBundleTask = tasks.create(
+            name: "bundle${targetName}JsAndAssets",
+            type: Exec) {
+            group = "react"
+            description = "bundle JS and assets for ${targetName}."
+
+            // Create dirs if they are not there (e.g. the "clean" task just ran)
+            doFirst {
+                jsBundleDir.deleteDir()
+                jsBundleDir.mkdirs()
+                resourcesDir.deleteDir()
+                resourcesDir.mkdirs()
+                jsIntermediateSourceMapsDir.deleteDir()
+                jsIntermediateSourceMapsDir.mkdirs()
+                jsSourceMapsDir.deleteDir()
+                jsSourceMapsDir.mkdirs()
+            }
+
+            // Set up inputs and outputs so gradle can cache the result
+            inputs.files fileTree(dir: reactRoot, excludes: inputExcludes)
+            outputs.dir(jsBundleDir)
+            outputs.dir(resourcesDir)
+
+            // Set up the call to the react-native cli
+            workingDir(reactRoot)
+
+            // Set up dev mode
+            def devEnabled = !disableDevForVariant(variant)
+
+            def extraArgs = []
+
+            if (bundleConfig) {
+                extraArgs.add("--config")
+                extraArgs.add(bundleConfig)
+            }
+
+            // Hermes doesn't require JS minification.
+            if (enableHermes && !devEnabled) {
+                extraArgs.add("--minify")
+                extraArgs.add("false")
+            }
+
+            if (config.extraPackagerArgs) {
+                extraArgs.addAll(config.extraPackagerArgs)
+            }
+
+            commandLine(*execCommand, bundleCommand, "--platform", "android", "--dev", "${devEnabled}",
+                "--reset-cache", "--entry-file", entryFile, "--bundle-output", jsBundleFile, "--assets-dest", resourcesDir,
+                "--sourcemap-output", enableHermes ? jsPackagerSourceMapFile : jsOutputSourceMapFile, *extraArgs)
+
+
+            if (enableHermes) {
+                doLast {
+                    def hermesFlags = hermesFlagsForVariant(variant)
+                    def hbcTempFile = file("${jsBundleFile}.hbc")
+                    exec {
+                        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
+                            commandLine("cmd", "/c", getHermesCommand(), "-emit-binary", "-out", hbcTempFile, jsBundleFile, *hermesFlags)
+                        } else {
+                            commandLine(getHermesCommand(), "-emit-binary", "-out", hbcTempFile, jsBundleFile, *hermesFlags)
+                        }
+                    }
+                    ant.move(
+                        file: hbcTempFile,
+                        toFile: jsBundleFile
+                    );
+                    if (hermesFlags.contains("-output-source-map")) {
+                        ant.move(
+                            // Hermes will generate a source map with this exact name
+                            file: "${jsBundleFile}.hbc.map",
+                            tofile: jsCompilerSourceMapFile
+                        );
+                        exec {
+                            // TODO: set task dependencies for caching
+
+                            // Set up the call to the compose-source-maps script
+                            workingDir(reactRoot)
+                            if (Os.isFamily(Os.FAMILY_WINDOWS)) {
+                                commandLine("cmd", "/c", *nodeExecutableAndArgs, composeSourceMapsPath, jsPackagerSourceMapFile, jsCompilerSourceMapFile, "-o", jsOutputSourceMapFile)
+                            } else {
+                                commandLine(*nodeExecutableAndArgs, composeSourceMapsPath, jsPackagerSourceMapFile, jsCompilerSourceMapFile, "-o", jsOutputSourceMapFile)
+                            }
+                        }
+                    }
+                }
+            }
+
+            enabled bundleForVariant(variant)
+        }
+
+        // Expose a minimal interface on the application variant and the task itself:
+        variant.ext.bundleJsAndAssets = currentBundleTask
+        currentBundleTask.ext.generatedResFolders = files(resourcesDir).builtBy(currentBundleTask)
+        currentBundleTask.ext.generatedAssetsFolders = files(jsBundleDir).builtBy(currentBundleTask)
+
+        // registerGeneratedResFolders for Android plugin 3.x
+        if (variant.respondsTo("registerGeneratedResFolders")) {
+            variant.registerGeneratedResFolders(currentBundleTask.generatedResFolders)
+        } else {
+            variant.registerResGeneratingTask(currentBundleTask)
+        }
+        variant.mergeResourcesProvider.get().dependsOn(currentBundleTask)
+
+        // packageApplication for Android plugin 3.x
+        def packageTask = variant.hasProperty("packageApplication")
+            ? variant.packageApplicationProvider.get()
+            : tasks.findByName("package${targetName}")
+        if (variant.hasProperty("packageLibrary")) {
+            packageTask = variant.packageLibrary
+        }
+
+        // pre bundle build task for Android plugin 3.2+
+        def buildPreBundleTask = tasks.findByName("build${targetName}PreBundle")
+
+        def resourcesDirConfigValue = config."resourcesDir${targetName}"
+        if (resourcesDirConfigValue) {
+            def currentCopyResTask = tasks.create(
+                name: "copy${targetName}BundledResources",
+                type: Copy) {
+                group = "react"
+                description = "copy bundled resources into custom location for ${targetName}."
+
+                from(resourcesDir)
+                into(file(resourcesDirConfigValue))
+
+                dependsOn(currentBundleTask)
+
+                enabled(currentBundleTask.enabled)
+            }
+
+            packageTask.dependsOn(currentCopyResTask)
+            if (buildPreBundleTask != null) {
+                buildPreBundleTask.dependsOn(currentCopyResTask)
+            }
+        }
+
+        def currentAssetsCopyTask = tasks.create(
+            name: "copy${targetName}BundledJs",
+            type: Copy) {
+            group = "react"
+            description = "copy bundled JS into ${targetName}."
+
+            from(jsBundleDir)
+            if (config."jsBundleDir${targetName}") {
+                into(file(config."jsBundleDir${targetName}"))
+            } else {
+                into ("$buildDir/intermediates")
+                if (isAndroidLibrary) {
+                    into ("library_assets/${variant.name}/out")
+                } else {
+                    into ("assets/${targetPath}")
+
+                    // Workaround for Android Gradle Plugin 3.2+ new asset directory
+                    into ("merged_assets/${variant.name}/merge${targetName}Assets/out")
+
+                    // Workaround for Android Gradle Plugin 3.4+ new asset directory
+                    into ("merged_assets/${variant.name}/out")
+
+                    // Workaround for Android Gradle Plugin 7.1 asset directory
+                    into("$buildDir/intermediates/assets/${variant.name}")
+                }
+            }
+
+            // mergeAssets must run first, as it clears the intermediates directory
+            dependsOn(variant.mergeAssetsProvider.get())
+
+            enabled(currentBundleTask.enabled)
+            dependsOn(currentBundleTask)
+        }
+
+        // mergeResources task runs before the bundle file is copied to the intermediate asset directory from Android plugin 4.1+.
+        // This ensures to copy the bundle file before mergeResources task starts
+        def mergeResourcesTask = tasks.findByName("merge${targetName}Resources")
+        mergeResourcesTask.dependsOn(currentAssetsCopyTask)
+
+        packageTask.dependsOn(currentAssetsCopyTask)
+        if (buildPreBundleTask != null) {
+            buildPreBundleTask.dependsOn(currentAssetsCopyTask)
+        }
+
+        // Delete the VM related libraries that this build doesn't need.
+        // The application can manage this manually by setting 'enableVmCleanup: false'
+        //
+        // This should really be done by packaging all Hermes related libs into
+        // two separate HermesDebug and HermesRelease AARs, but until then we'll
+        // kludge it by deleting the .so files out of the /transforms/ directory.
+        def cleanup = deleteDebugFilesForVariant(variant)
+
+        def vmSelectionAction = { libDir ->
+            fileTree(libDir).matching {
+                if (enableHermes) {
+                    // For Hermes, delete all the libjsc* files
+                    include "**/libjsc*.so"
+
+                    if (cleanup) {
+                        // Reduce size by deleting the debugger/inspector
+                        include '**/libhermes_executor_debug.so'
+                    } else {
+                        // Release libs take precedence and must be removed
+                        // to allow debugging
+                        include '**/libhermes_executor_release.so'
+                    }
+                } else {
+                    // For JSC, delete all the libhermes* files
+                    include "**/libhermes*.so"
+                }
+            }.visit { details ->
+                def targetVariant1 = ".*/transforms/[^/]*/${variant.name}/.*"
+                def targetVariant2 = ".*/merged_native_libs/${variant.name}/out/lib/.*"
+                def targetVariant3 = ".*/stripped_native_libs/${variant.name}/out/lib/.*"
+                def path = details.file.getAbsolutePath().replace(File.separatorChar, '/' as char)
+                if ((path.matches(targetVariant1) || path.matches(targetVariant2) || path.matches(targetVariant3)) && details.file.isFile()) {
+                    details.file.delete()
+                }
+            }
+        }
+
+        if (enableVmCleanup) {
+            def task = tasks.findByName("package${targetName}")
+            if (task != null) {
+                def transformsLibDir = "$buildDir/intermediates/transforms/"
+                task.doFirst { vmSelectionAction(transformsLibDir) }
+            }
+
+            def sTask = tasks.findByName("strip${targetName}DebugSymbols")
+            if (sTask != null) {
+                def strippedLibDir = "$buildDir/intermediates/stripped_native_libs/${variant.name}/out/lib/"
+                sTask.doLast { vmSelectionAction(strippedLibDir) }
+            }
+
+            def mTask = tasks.findByName("merge${targetName}NativeLibs")
+            if (mTask != null) {
+                def mergedLibDir = "$buildDir/intermediates/merged_native_libs/${variant.name}/out/lib/"
+                mTask.doLast { vmSelectionAction(mergedLibDir) }
+            }
+        }
+    }
+}
diff --git a/node_modules/react-native/rn-get-polyfills.js b/node_modules/react-native/rn-get-polyfills.js
index c051fd4..9a806bf 100644
--- a/node_modules/react-native/rn-get-polyfills.js
+++ b/node_modules/react-native/rn-get-polyfills.js
@@ -9,4 +9,4 @@
 
 'use strict';
 
-module.exports = require('@react-native/js-polyfills');
+module.exports = require('@react-native/polyfills');
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/codegen-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/codegen-test.rb
deleted file mode 100644
index 70573b4..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/codegen-test.rb
+++ /dev/null
@@ -1,242 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require_relative "../codegen.rb"
-require_relative "./test_utils/PodMock.rb"
-require_relative "./test_utils/PathnameMock.rb"
-require_relative "./test_utils/FileMock.rb"
-require_relative "./test_utils/DirMock.rb"
-require_relative "./test_utils/systemUtils.rb"
-require_relative "./test_utils/CodegenUtilsMock.rb"
-
-class CodegenTests < Test::Unit::TestCase
-    :third_party_provider_header
-    :third_party_provider_implementation
-    :base_path
-    :prefix
-    :tmp_schema_list_file
-
-    def setup
-        Pod::Config.reset()
-
-        @prefix = "../.."
-        @third_party_provider_header = "RCTThirdPartyFabricComponentsProvider.h"
-        @third_party_provider_implementation = "RCTThirdPartyFabricComponentsProvider.mm"
-        @base_path = "~/app/ios"
-        @tmp_schema_list_file = "tmpSchemaList.txt"
-        Pathname.pwd!(@base_path)
-        Pod::Config.instance.installation_root.relative_path_from = @base_path
-    end
-
-    def teardown
-        system_reset_commands()
-        Pod::UI.reset()
-        Pod::Executable.reset()
-        Pathname.reset()
-        FileMock.reset()
-        DirMock.reset()
-    end
-
-    # ============================================== #
-    # Test - setup_fabric #
-    # ============================================== #
-    def testCheckAndGenerateEmptyThirdPartyProvider_whenFileAlreadyExists_doNothing()
-
-        # Arrange
-        FileMock.mocked_existing_files([
-            @prefix + "/React/Fabric/" + @third_party_provider_header,
-            @prefix + "/React/Fabric/" + @third_party_provider_implementation,
-        ])
-
-        # Act
-        checkAndGenerateEmptyThirdPartyProvider!(@prefix, false, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pathname.pwd_invocation_count, 1)
-        assert_equal(Pod::Config.instance.installation_root.relative_path_from_invocation_count, 1)
-        assert_equal(FileMock.exist_invocation_params, [
-            @prefix + "/React/Fabric/" + @third_party_provider_header,
-            @prefix + "/React/Fabric/" + @third_party_provider_implementation,
-        ])
-        assert_equal(DirMock.exist_invocation_params, [])
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal($collected_commands, [])
-        assert_equal(FileMock.open_files.length, 0)
-        assert_equal(Pod::Executable.executed_commands.length, 0)
-    end
-
-    def testCheckAndGenerateEmptyThirdPartyProvider_whenHeaderMissingAndCodegenMissing_raiseError()
-
-        # Arrange
-        FileMock.mocked_existing_files([
-            @base_path + "/build/" + @third_party_provider_implementation,
-        ])
-
-        # Act
-        assert_raise {
-            checkAndGenerateEmptyThirdPartyProvider!(@prefix, false, dir_manager: DirMock, file_manager: FileMock)
-        }
-
-        # Assert
-        assert_equal(Pathname.pwd_invocation_count, 1)
-        assert_equal(Pod::Config.instance.installation_root.relative_path_from_invocation_count, 1)
-        assert_equal(FileMock.exist_invocation_params, [
-            @prefix + "/React/Fabric/" + @third_party_provider_header
-        ])
-        assert_equal(DirMock.exist_invocation_params, [
-            @base_path + "/"+ @prefix + "/../react-native-codegen",
-            @base_path + "/"+ @prefix + "/../@react-native/codegen",
-        ])
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal($collected_commands, [])
-        assert_equal(FileMock.open_files.length, 0)
-        assert_equal(Pod::Executable.executed_commands.length, 0)
-    end
-
-    def testCheckAndGenerateEmptyThirdPartyProvider_whenImplementationMissingAndCodegenrepoExists_dontBuildCodegen()
-
-        # Arrange
-        FileMock.mocked_existing_files([
-            @prefix + "/React/Fabric/" + @third_party_provider_header,
-            @prefix + "/React/Fabric/tmpSchemaList.txt"
-        ])
-
-        DirMock.mocked_existing_dirs([
-            @base_path + "/"+ @prefix + "/../react-native-codegen",
-            @base_path + "/"+ @prefix + "/../react-native-codegen/lib"
-        ])
-
-        # Act
-        checkAndGenerateEmptyThirdPartyProvider!(@prefix, false, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pathname.pwd_invocation_count, 1)
-        assert_equal(Pod::Config.instance.installation_root.relative_path_from_invocation_count, 1)
-        assert_equal(FileMock.exist_invocation_params, [
-            @prefix + "/React/Fabric/" + @third_party_provider_header,
-            @prefix + "/React/Fabric/" + @third_party_provider_implementation,
-            @prefix + "/React/Fabric/tmpSchemaList.txt",
-        ])
-        assert_equal(DirMock.exist_invocation_params, [
-            @base_path + "/"+ @prefix + "/../react-native-codegen",
-            @base_path + "/"+ @prefix + "/../react-native-codegen/lib",
-        ])
-        assert_equal(Pod::UI.collected_messages, ["[Codegen] generating an empty RCTThirdPartyFabricComponentsProvider"])
-        assert_equal($collected_commands, [])
-        assert_equal(FileMock.open_invocation_count, 1)
-        assert_equal(FileMock.open_files_with_mode[@prefix + "/React/Fabric/tmpSchemaList.txt"], 'w')
-        assert_equal(FileMock.open_files[0].collected_write, ["[]"])
-        assert_equal(FileMock.open_files[0].fsync_invocation_count, 1)
-        assert_equal(Pod::Executable.executed_commands[0], {
-            "command" => "node",
-            "arguments" => [
-                @base_path + "/" + @prefix + "/scripts/generate-provider-cli.js",
-                "--platform", 'ios',
-                "--schemaListPath", @prefix + "/React/Fabric/tmpSchemaList.txt",
-                "--outputDir", @prefix + "/React/Fabric"
-            ]
-        })
-        assert_equal(FileMock.delete_invocation_count, 1)
-        assert_equal(FileMock.deleted_files, [ @prefix + "/React/Fabric/tmpSchemaList.txt"])
-    end
-
-    def testCheckAndGenerateEmptyThirdPartyProvider_whenBothMissing_buildCodegen()
-        # Arrange
-        codegen_cli_path = @base_path + "/" + @prefix + "/../@react-native/codegen"
-        DirMock.mocked_existing_dirs([
-            codegen_cli_path,
-        ])
-        # Act
-        checkAndGenerateEmptyThirdPartyProvider!(@prefix, false, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pathname.pwd_invocation_count, 1)
-        assert_equal(Pod::Config.instance.installation_root.relative_path_from_invocation_count, 1)
-        assert_equal(FileMock.exist_invocation_params, [
-            @prefix + "/React/Fabric/" + @third_party_provider_header,
-            @prefix + "/React/Fabric/" + @tmp_schema_list_file
-        ])
-        assert_equal(DirMock.exist_invocation_params, [
-            @base_path + "/" + @prefix + "/../react-native-codegen",
-            codegen_cli_path,
-            codegen_cli_path + "/lib",
-        ])
-        assert_equal(Pod::UI.collected_messages, [
-            "[Codegen] building #{codegen_cli_path}.",
-            "[Codegen] generating an empty RCTThirdPartyFabricComponentsProvider"
-        ])
-        assert_equal($collected_commands, ["~/app/ios/../../../@react-native/codegen/scripts/oss/build.sh"])
-        assert_equal(FileMock.open_files[0].collected_write, ["[]"])
-        assert_equal(FileMock.open_files[0].fsync_invocation_count, 1)
-        assert_equal(Pod::Executable.executed_commands[0], {
-            "command" => "node",
-            "arguments" => [
-                @base_path + "/" + @prefix + "/scripts/generate-provider-cli.js",
-                "--platform", 'ios',
-                "--schemaListPath", @prefix + "/React/Fabric/" + @tmp_schema_list_file,
-                "--outputDir", @prefix + "/React/Fabric"
-            ]
-        })
-    end
-
-    # ================= #
-    # Test - RunCodegen #
-    # ================= #
-    def testRunCodegen_whenNewArchEnabled_runsCodegen
-        # Arrange
-        app_path = "~/app"
-        config_file = ""
-        codegen_utils_mock = CodegenUtilsMock.new()
-
-        # Act
-        run_codegen!(app_path, config_file, :new_arch_enabled => true, :codegen_utils => codegen_utils_mock)
-
-        # Assert
-        assert_equal(codegen_utils_mock.use_react_native_codegen_discovery_params, [{
-            :app_path=>"~/app",
-            :codegen_disabled=>false,
-            :codegen_output_dir=>"build/generated/ios",
-            :config_file_dir=>"",
-            :fabric_enabled=>false,
-            :folly_version=>"2021.07.22.00",
-            :react_native_path=>"../node_modules/react-native"
-        }])
-        assert_equal(codegen_utils_mock.get_react_codegen_spec_params, [])
-        assert_equal(codegen_utils_mock.generate_react_codegen_spec_params, [])
-    end
-
-    def testRunCodegen_whenNewArchDisabled_runsCodegen
-        # Arrange
-        app_path = "~/app"
-        config_file = ""
-        package_json_file = "~/app/package.json"
-        codegen_specs = { "name" => "React-Codegen" }
-        codegen_utils_mock = CodegenUtilsMock.new(:react_codegen_spec => codegen_specs)
-
-        # Act
-        run_codegen!(
-            app_path,
-            config_file,
-            :new_arch_enabled => false,
-            :fabric_enabled => true,
-            :package_json_file => package_json_file,
-            :codegen_utils => codegen_utils_mock)
-
-        # Assert
-        assert_equal(codegen_utils_mock.use_react_native_codegen_discovery_params, [])
-        assert_equal(codegen_utils_mock.get_react_codegen_spec_params, [{
-            :fabric_enabled => true,
-            :folly_version=>"2021.07.22.00",
-            :package_json_file => "~/app/package.json",
-            :script_phases => nil
-        }])
-        assert_equal(codegen_utils_mock.generate_react_codegen_spec_params, [{
-            :codegen_output_dir=>"build/generated/ios",
-            :react_codegen_spec=>{"name"=>"React-Codegen"}
-        }])
-
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/codegen_utils-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/codegen_utils-test.rb
deleted file mode 100644
index b039e64..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/codegen_utils-test.rb
+++ /dev/null
@@ -1,602 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require "json"
-require_relative "../codegen_utils.rb"
-require_relative "./test_utils/FileMock.rb"
-require_relative "./test_utils/DirMock.rb"
-require_relative "./test_utils/PodMock.rb"
-require_relative "./test_utils/PathnameMock.rb"
-require_relative "./test_utils/FinderMock.rb"
-require_relative "./test_utils/CodegenUtilsMock.rb"
-require_relative "./test_utils/CodegenScriptPhaseExtractorMock.rb"
-require_relative "./test_utils/FileUtilsMock.rb"
-
-# mocking the min_ios_version_supported function
-# as it is not possible to require the original react_native_pod
-# without incurring in circular deps
-# TODO: move `min_ios_version_supported` to utils.rb
-def min_ios_version_supported
-    return '12.4'
-end
-
-class CodegenUtilsTests < Test::Unit::TestCase
-    :base_path
-
-    def setup
-        CodegenUtils.set_react_codegen_discovery_done(false)
-        CodegenUtils.set_react_codegen_podspec_generated(false)
-        Pod::Config.reset()
-        @base_path = "~/app/ios"
-        Pathname.pwd!(@base_path)
-        Pod::Config.instance.installation_root.relative_path_from = @base_path
-    end
-
-    def teardown
-        FileUtils::FileUtilsStorage.reset()
-        Finder.reset()
-        Pathname.reset()
-        Pod::UI.reset()
-        Pod::Executable.reset()
-        FileMock.reset()
-        DirMock.reset()
-    end
-
-    # ================================== #
-    # Test - GenerateReactCodegenPodspec #
-    # ================================== #
-
-    def testGenerateReactCodegenPodspec_whenItHasBeenAlreadyGenerated_doesNothing
-        # Arrange
-        spec = { :name => "Test Podspec" }
-        codegen_output_dir = "build"
-        CodegenUtils.set_react_codegen_podspec_generated(true)
-
-        # Act
-        CodegenUtils.new().generate_react_codegen_podspec!(spec, codegen_output_dir, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, ["[Codegen] Skipping React-Codegen podspec generation."])
-        assert_equal(Pathname.pwd_invocation_count, 0)
-        assert_equal(Pod::Executable.executed_commands, [])
-        assert_equal(Pod::Config.instance.installation_root.relative_path_from_invocation_count, 0)
-        assert_true(CodegenUtils.react_codegen_podspec_generated)
-    end
-
-    def testGenerateReactCodegenPodspec_whenItHasNotBeenAlreadyGenerated_generatesIt
-        # Arrange
-        spec = { :name => "Test Podspec" }
-        codegen_output_dir = "build"
-
-        # Act
-        CodegenUtils.new().generate_react_codegen_podspec!(spec, codegen_output_dir, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pathname.pwd_invocation_count, 1)
-        assert_equal(Pod::Config.instance.installation_root.relative_path_from_invocation_count, 1)
-        assert_equal(Pod::Executable.executed_commands, [{ "command" => 'mkdir', "arguments" => ["-p", "~/app/ios/build"]}])
-        assert_equal(Pod::UI.collected_messages, ["[Codegen] Generating ~/app/ios/build/React-Codegen.podspec.json"])
-        assert_equal(FileMock.open_files_with_mode["~/app/ios/build/React-Codegen.podspec.json"], 'w')
-        assert_equal(FileMock.open_files[0].collected_write, ['{"name":"Test Podspec"}'])
-        assert_equal(FileMock.open_files[0].fsync_invocation_count, 1)
-
-        assert_true(CodegenUtils.react_codegen_podspec_generated)
-    end
-
-    # ========================== #
-    # Test - GetReactCodegenSpec #
-    # ========================== #
-
-    def testGetReactCodegenSpec_whenFabricDisabledAndNoScriptPhases_generatesAPodspec
-        # Arrange
-        FileMock.files_to_read('package.json' => '{ "version": "99.98.97"}')
-
-        # Act
-        podspec = CodegenUtils.new().get_react_codegen_spec(
-            'package.json',
-            :fabric_enabled => false,
-            :hermes_enabled => true,
-            :script_phases => nil,
-            :file_manager => FileMock
-        )
-
-        # Assert
-        assert_equal(podspec, get_podspec_no_fabric_no_script())
-        assert_equal(Pod::UI.collected_messages, [])
-    end
-
-    def testGetReactCodegenSpec_whenFabricEnabledAndScriptPhases_generatesAPodspec
-        # Arrange
-        FileMock.files_to_read('package.json' => '{ "version": "99.98.97"}')
-
-        # Act
-        podspec = CodegenUtils.new().get_react_codegen_spec(
-            'package.json',
-            :fabric_enabled => true,
-            :hermes_enabled => true,
-            :script_phases => "echo Test Script Phase",
-            :file_manager => FileMock
-        )
-
-        # Assert
-        assert_equal(podspec, get_podspec_fabric_and_script_phases("echo Test Script Phase"))
-        assert_equal(Pod::UI.collected_messages, ["[Codegen] Adding script_phases to React-Codegen."])
-    end
-
-    def testGetReactCodegenSpec_whenUseFrameworksAndNewArch_generatesAPodspec
-        # Arrange
-        ENV["USE_FRAMEWORKS"] = "static"
-        FileMock.files_to_read('package.json' => '{ "version": "99.98.97"}')
-
-        # Act
-        podspec = CodegenUtils.new().get_react_codegen_spec(
-            'package.json',
-            :fabric_enabled => true,
-            :hermes_enabled => true,
-            :script_phases => nil,
-            :file_manager => FileMock
-        )
-
-        # Assert
-        assert_equal(podspec, get_podspec_when_use_frameworks())
-        assert_equal(Pod::UI.collected_messages, [])
-    end
-
-    # =============================== #
-    # Test - GetCodegenConfigFromFile #
-    # =============================== #
-
-    def testGetCodegenConfigFromFile_whenFileDoesNotExists_returnEmpty
-        # Arrange
-
-        # Act
-        codegen = CodegenUtils.new().get_codegen_config_from_file('package.json', 'codegenConfig', file_manager: FileMock)
-
-        # Assert
-        assert_equal(codegen, {})
-    end
-
-    def testGetCodegenConfigFromFile_whenFileExistsButHasNoKey_returnEmpty
-        # Arrange
-        FileMock.mocked_existing_files(['package.json'])
-        FileMock.files_to_read('package.json' => '{ "codegenConfig": {}}')
-
-        # Act
-        codegen = CodegenUtils.new().get_codegen_config_from_file('package.json', 'codegen', file_manager: FileMock)
-
-        # Assert
-        assert_equal(codegen, {})
-    end
-
-    def testGetCodegenConfigFromFile_whenFileExistsAndHasKey_returnObject
-        # Arrange
-        FileMock.mocked_existing_files(['package.json'])
-        FileMock.files_to_read('package.json' => '{ "codegenConfig": {"name": "MySpec"}}')
-
-        # Act
-        codegen = CodegenUtils.new().get_codegen_config_from_file('package.json', 'codegenConfig', file_manager: FileMock )
-
-        # Assert
-        assert_equal(codegen, { "name" => "MySpec"})
-    end
-
-    # ======================= #
-    # Test - GetListOfJSSpecs #
-    # ======================= #
-    def testGetListOfJSSpecs_whenUsesLibraries_returnAListOfFiles
-        # Arrange
-        app_codegen_config = {
-            'libraries' => [
-                {
-                    'name' => 'First Lib',
-                    'jsSrcsDir' => './firstlib/js'
-                },
-                {
-                    'name' => 'Second Lib',
-                    'jsSrcsDir' => './secondlib/js'
-                },
-            ]
-        }
-        app_path = "~/MyApp/"
-        Finder.set_files_for_paths({
-            '~/MyApp/./firstlib/js' => ["MyFabricComponent1NativeComponent.js", "MyFabricComponent2NativeComponent.js"],
-            '~/MyApp/./secondlib/js' => ["NativeModule1.js", "NativeModule2.js"],
-        })
-
-        # Act
-        files = CodegenUtils.new().get_list_of_js_specs(app_codegen_config, app_path, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pod::UI.collected_warns , ["[Deprecated] You are using the old `libraries` array to list all your codegen.\\nThis method will be removed in the future.\\nUpdate your `package.json` with a single object."])
-        assert_equal(Finder.captured_paths, ['~/MyApp/./firstlib/js', '~/MyApp/./secondlib/js'])
-        assert_equal(files, [
-            "${PODS_ROOT}/../MyFabricComponent1NativeComponent.js",
-            "${PODS_ROOT}/../MyFabricComponent2NativeComponent.js",
-            "${PODS_ROOT}/../NativeModule1.js",
-            "${PODS_ROOT}/../NativeModule2.js",
-        ])
-    end
-
-    def testGetListOfJSSpecs_whenDoesNotUsesLibraries_returnAListOfFiles
-        # Arrange
-        app_codegen_config = {
-                'name' => 'First Lib',
-                'jsSrcsDir' => './js'
-            }
-
-        app_path = "~/MyApp/"
-        Finder.set_files_for_paths({
-            '~/MyApp/./js' => ["MyFabricComponent1NativeComponent.js", "NativeModule1.js"],
-        })
-
-        # Act
-        files = CodegenUtils.new().get_list_of_js_specs(app_codegen_config, app_path, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pod::UI.collected_warns , [])
-        assert_equal(Finder.captured_paths, ['~/MyApp/./js'])
-        assert_equal(files, [
-            "${PODS_ROOT}/../MyFabricComponent1NativeComponent.js",
-            "${PODS_ROOT}/../NativeModule1.js",
-        ])
-    end
-
-    # ================================== #
-    # Test - GetReactCodegenScriptPhases #
-    # ================================== #
-
-    def testGetReactCodegenScriptPhases_whenAppPathNotDefined_abort
-        # Arrange
-
-        # Act
-        assert_raises() {
-            CodegenUtils.new().get_react_codegen_script_phases(nil, file_manager: FileMock)
-        }
-        # Assert
-        assert_equal(Pod::UI.collected_warns, ["[Codegen] error: app_path is required to use codegen discovery."])
-    end
-
-    def testGetReactCodegenScriptPhases_returnTheScriptObject
-        # Arrange
-        app_path = "~/MyApp"
-        input_files = ["${PODS_ROOT}/../MyFabricComponent1NativeComponent.js", "${PODS_ROOT}/../NativeModule1.js"]
-        computed_script = "echo ScriptPhases"
-        codegen_config = { "name" => "MyCodegenModule", "jsSrcsDir" => "./js"}
-        codegen_utils_mock = CodegenUtilsMock.new(:js_spec_list => input_files, :codegen_config => codegen_config)
-        script_phase_extractor_mock = CodegenScriptPhaseExtractorMock.new(computed_script)
-
-        # Act
-
-        scripts = CodegenUtils.new().get_react_codegen_script_phases(
-            app_path,
-            :codegen_utils => codegen_utils_mock,
-            :script_phase_extractor => script_phase_extractor_mock,
-            :file_manager => FileMock
-        )
-
-        # Assert
-        assert_equal(codegen_utils_mock.get_codegen_config_from_file_params, [{
-            "config_key" => "codegenConfig",
-            "config_path" => "~/MyApp/package.json"
-        }])
-        assert_equal(codegen_utils_mock.get_list_of_js_specs_params, [{
-            "app_codegen_config" => {"jsSrcsDir"=>"./js", "name"=>"MyCodegenModule"},
-            "app_path" => "~/MyApp"
-        }])
-        assert_equal(script_phase_extractor_mock.extract_script_phase_params, [{
-            fabric_enabled: false,
-            react_native_path: "../node_modules/react-native",
-            relative_app_root: "~/MyApp",
-            relative_config_file_dir: ""
-        }])
-        assert_equal(scripts, {
-            'name': 'Generate Specs',
-            'execution_position': :before_compile,
-            'input_files' => input_files,
-            'show_env_vars_in_log': true,
-            'output_files': ["${DERIVED_FILE_DIR}/react-codegen.log"],
-            'script': computed_script
-        })
-    end
-
-    # ================================ #
-    # Test - UseReactCodegenDiscovery! #
-    # ================================ #
-
-    def testUseReactCodegenDiscovery_whenCodegenDisabled_doNothing
-        # Arrange
-
-        # Act
-        CodegenUtils.new().use_react_native_codegen_discovery!(true, nil, file_manager: FileMock)
-
-        # Assert
-        assert_false(CodegenUtils.react_codegen_discovery_done())
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal(Pod::UI.collected_warns, [])
-    end
-
-    def testUseReactCodegenDiscovery_whenDiscoveryDone_doNothing
-        # Arrange
-        CodegenUtils.set_react_codegen_discovery_done(true)
-
-        # Act
-        CodegenUtils.new().use_react_native_codegen_discovery!(false, nil, file_manager: FileMock)
-
-        # Assert
-        assert_true(CodegenUtils.react_codegen_discovery_done())
-        assert_equal(Pod::UI.collected_messages, ["[Codegen] Skipping use_react_native_codegen_discovery."])
-        assert_equal(Pod::UI.collected_warns, [])
-    end
-
-    def testUseReactCodegenDiscovery_whenAppPathUndefined_abort
-        # Arrange
-
-        # Act
-        assert_raises(){
-            CodegenUtils.new().use_react_native_codegen_discovery!(false, nil, file_manager: FileMock)
-        }
-
-        # Assert
-        assert_false(CodegenUtils.react_codegen_discovery_done())
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal(Pod::UI.collected_warns, [
-            '[Codegen] Error: app_path is required for use_react_native_codegen_discovery.',
-            '[Codegen] If you are calling use_react_native_codegen_discovery! in your Podfile, please remove the call and pass `app_path` and/or `config_file_dir` to `use_react_native!`.'
-        ])
-    end
-
-    def testUseReactCodegenDiscovery_whenParametersAreGood_executeCodegen
-        # Arrange
-        app_path = "~/app"
-        computed_script = "echo TestScript"
-        codegen_spec = {"name" => "React-Codegen"}
-
-        codegen_utils_mock = CodegenUtilsMock.new(
-            :react_codegen_script_phases => computed_script,
-            :react_codegen_spec => codegen_spec
-        )
-
-        # Act
-        CodegenUtils.new().use_react_native_codegen_discovery!(
-            false,
-            app_path,
-            :codegen_utils => codegen_utils_mock,
-            :file_manager => FileMock
-        )
-
-        # Assert
-        assert_true(CodegenUtils.react_codegen_discovery_done())
-        assert_equal(Pod::UI.collected_warns, [
-            '[Codegen] warn: using experimental new codegen integration'
-        ])
-        assert_equal(codegen_utils_mock.get_react_codegen_script_phases_params,  [{
-            :app_path => app_path,
-            :config_file_dir => "",
-            :config_key => "codegenConfig",
-            :fabric_enabled => false,
-            :react_native_path => "../node_modules/react-native"}
-        ])
-        assert_equal(codegen_utils_mock.get_react_codegen_spec_params,  [{
-            :fabric_enabled => false,
-            :folly_version=>"2021.07.22.00",
-            :package_json_file => "#{app_path}/ios/../node_modules/react-native/package.json",
-            :script_phases => "echo TestScript"
-        }])
-        assert_equal(codegen_utils_mock.generate_react_codegen_spec_params,  [{
-            :codegen_output_dir=>"build/generated/ios",
-            :react_codegen_spec=>{"name"=>"React-Codegen"}
-        }])
-        assert_equal(Pod::Executable.executed_commands, [
-            {
-                "command" => "node",
-                "arguments"=> ["~/app/ios/../node_modules/react-native/scripts/generate-codegen-artifacts.js",
-                    "-p", "~/app",
-                    "-o", Pod::Config.instance.installation_root,
-                    "-e", "false",
-                    "-c", ""]
-            }
-        ])
-    end
-
-    # ============================= #
-    # Test - CleanUpCodegenFolder #
-    # ============================= #
-
-    def testCleanUpCodegenFolder_whenCleanupDone_doNothing
-        # Arrange
-        CodegenUtils.set_cleanup_done(true)
-        codegen_dir = "build/generated/ios"
-        ios_folder = '.'
-        rn_path = '../node_modules/react-native'
-
-        # Act
-        CodegenUtils.clean_up_build_folder(rn_path, @base_path, ios_folder, codegen_dir, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(FileUtils::FileUtilsStorage.rmrf_invocation_count, 0)
-        assert_equal(FileUtils::FileUtilsStorage.rmrf_paths, [])
-        assert_equal(CodegenUtils.cleanup_done(), true)
-    end
-
-    def testCleanUpCodegenFolder_whenFolderDoesNotExists_markAsCleanupDone
-        # Arrange
-        CodegenUtils.set_cleanup_done(false)
-        codegen_dir = "build/generated/ios"
-        ios_folder = '.'
-        rn_path = '../node_modules/react-native'
-
-        # Act
-        CodegenUtils.clean_up_build_folder(rn_path, @base_path, ios_folder, codegen_dir, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(FileUtils::FileUtilsStorage.rmrf_invocation_count, 0)
-        assert_equal(FileUtils::FileUtilsStorage.rmrf_paths, [])
-        assert_equal(DirMock.glob_invocation, [])
-        assert_equal(CodegenUtils.cleanup_done(), true)
-    end
-
-    def testCleanUpCodegenFolder_whenFolderExists_deleteItAndSetCleanupDone
-        # Arrange
-        CodegenUtils.set_cleanup_done(false)
-        codegen_dir = "build/generated/ios"
-        ios_folder = '.'
-        codegen_path = "#{@base_path}/./#{codegen_dir}"
-        globs = [
-            "/MyModuleSpecs/MyModule.h",
-            "#{codegen_path}/MyModuleSpecs/MyModule.mm",
-            "#{codegen_path}/react/components/MyComponent/ShadowNode.h",
-            "#{codegen_path}/react/components/MyComponent/ShadowNode.mm",
-        ]
-        rn_path = '../node_modules/react-native'
-
-        DirMock.mocked_existing_dirs(codegen_path)
-        DirMock.mocked_existing_globs(globs, "#{codegen_path}/*")
-
-        # Act
-        CodegenUtils.clean_up_build_folder(rn_path, @base_path, ios_folder, codegen_dir, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(DirMock.exist_invocation_params, [codegen_path, codegen_path])
-        assert_equal(DirMock.glob_invocation, ["#{codegen_path}/*", "#{codegen_path}/*"])
-        assert_equal(FileUtils::FileUtilsStorage.rmrf_invocation_count, 3)
-        assert_equal(FileUtils::FileUtilsStorage.rmrf_paths, [
-            globs,
-            "#{rn_path}/React/Fabric/RCTThirdPartyFabricComponentsProvider.h",
-            "#{rn_path}/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm",
-        ])
-        assert_equal(CodegenUtils.cleanup_done(), true)
-    end
-
-    # ===================================== #
-    # Test - Assert Codegen Folder Is Empty #
-    # ===================================== #
-
-    def test_assertCodegenFolderIsEmpty_whenItDoesNotExists_doesNotAbort
-        # Arrange
-        codegen_dir = "build/generated/ios"
-        codegen_path = "#{@base_path}/./#{codegen_dir}"
-        ios_folder = '.'
-
-        # Act
-        CodegenUtils.assert_codegen_folder_is_empty(@base_path, ios_folder, codegen_dir, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pod::UI.collected_warns, [])
-    end
-
-    def test_assertCodegenFolderIsEmpty_whenItExistsAndIsEmpty_doesNotAbort
-        # Arrange
-        codegen_dir = "build/generated/ios"
-        codegen_path = "#{@base_path}/./#{codegen_dir}"
-        ios_folder = '.'
-        DirMock.mocked_existing_dirs(codegen_path)
-        DirMock.mocked_existing_globs([], "#{codegen_path}/*")
-
-        # Act
-        CodegenUtils.assert_codegen_folder_is_empty(@base_path, ios_folder, codegen_dir, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(Pod::UI.collected_warns, [])
-    end
-
-    def test_assertCodegenFolderIsEmpty_whenItIsNotEmpty_itAborts
-        # Arrange
-        codegen_dir = "build/generated/ios"
-        codegen_path = "#{@base_path}/./#{codegen_dir}"
-        ios_folder = '.'
-        DirMock.mocked_existing_dirs(codegen_path)
-        DirMock.mocked_existing_globs(["#{codegen_path}/MyModuleSpecs/MyModule.mm",], "#{codegen_path}/*")
-
-        # Act
-        assert_raises() {
-            CodegenUtils.assert_codegen_folder_is_empty(@base_path, ios_folder, codegen_dir, dir_manager: DirMock, file_manager: FileMock)
-        }
-
-        # Assert
-        assert_equal(Pod::UI.collected_warns, [
-            "Unable to remove the content of ~/app/ios/./build/generated/ios folder. Please run rm -rf ~/app/ios/./build/generated/ios and try again."
-        ])
-    end
-
-    private
-
-    def get_podspec_no_fabric_no_script
-        spec = {
-          'name' => "React-Codegen",
-          'version' => "99.98.97",
-          'summary' => 'Temp pod for generated files for React Native',
-          'homepage' => 'https://facebook.com/',
-          'license' => 'Unlicense',
-          'authors' => 'Facebook',
-          'compiler_flags'  => "-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32 -Wno-documentation -Wno-nullability-completeness -std=c++17",
-          'source' => { :git => '' },
-          'header_mappings_dir' => './',
-          'platforms' => {
-            'ios' => '12.4',
-          },
-          'source_files' => "**/*.{h,mm,cpp}",
-          'pod_target_xcconfig' => {
-            "FRAMEWORK_SEARCH_PATHS" => [],
-            "HEADER_SEARCH_PATHS" =>
-            [
-              "\"$(PODS_ROOT)/boost\"",
-              "\"$(PODS_ROOT)/RCT-Folly\"",
-              "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-              "\"$(PODS_ROOT)/Headers/Private/React-Fabric\"",
-              "\"$(PODS_ROOT)/Headers/Private/React-RCTFabric\"",
-            ].join(' ')
-          },
-          'dependencies': {
-            "DoubleConversion": [],
-            "FBReactNativeSpec":  [],
-            "RCT-Folly": [],
-            "RCTRequired": [],
-            "RCTTypeSafety": [],
-            "React-Core": [],
-            "React-jsi": [],
-            "React-jsiexecutor": [],
-            "React-rncore": [],
-            "ReactCommon/turbomodule/bridging": [],
-            "ReactCommon/turbomodule/core": [],
-            "hermes-engine": [],
-            "glog": [],
-            'React-NativeModulesApple': [],
-          }
-        }
-    end
-
-    def get_podspec_fabric_and_script_phases(script_phases)
-        specs = get_podspec_no_fabric_no_script()
-
-        specs[:dependencies].merge!({
-            'React-graphics': [],
-            'React-rncore':  [],
-            'React-Fabric': [],
-            'React-utils': [],
-            'React-debug': [],
-        })
-
-        specs[:'script_phases'] = script_phases
-
-        return specs
-    end
-
-    def get_podspec_when_use_frameworks
-        specs = get_podspec_no_fabric_no_script()
-
-        specs["pod_target_xcconfig"]["FRAMEWORK_SEARCH_PATHS"].concat([])
-        specs["pod_target_xcconfig"]["HEADER_SEARCH_PATHS"].concat(" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_TARGET_SRCROOT)\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-Fabric/React_Fabric.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\" \"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-RCTFabric/RCTFabric.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-debug/React_debug.framework/Headers\" \"$(PODS_CONFIGURATION_BUILD_DIR)/React-utils/React_utils.framework/Headers\"")
-
-        specs[:dependencies].merge!({
-            'React-graphics': [],
-            'React-Fabric': [],
-            'React-utils': [],
-            'React-debug': [],
-        })
-
-        return specs
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/fabric-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/fabric-test.rb
deleted file mode 100644
index 0b47cd8..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/fabric-test.rb
+++ /dev/null
@@ -1,68 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require_relative "../fabric.rb"
-require_relative "../utils.rb"
-require_relative "./test_utils/podSpy.rb"
-
-class FabricTest < Test::Unit::TestCase
-
-    def setup
-        podSpy_cleanUp()
-    end
-
-    def teardown
-        podSpy_cleanUp()
-        ENV['RCT_NEW_ARCH_ENABLED'] = "0"
-    end
-
-    # ================== #
-    # TEST - setupFabric #
-    # ================== #
-    def test_setupFabric_whenNewArchDisabled_installsPods
-        # Arrange
-        prefix = "../.."
-
-        # Act
-        setup_fabric!(:react_native_path => prefix)
-
-        # Assert
-        check_installed_pods(prefix)
-    end
-
-    def test_setupFabric_whenNewArchEnabled_installPods
-        # Arrange
-        prefix = "../.."
-        ENV['RCT_NEW_ARCH_ENABLED'] = "1"
-
-        # Act
-        setup_fabric!(:react_native_path => prefix, new_arch_enabled: true)
-
-        # Assert
-        check_installed_pods(prefix)
-    end
-
-    def check_installed_pods(prefix)
-        assert_equal($podInvocationCount, 5)
-
-        check_pod("React-Fabric", :path => "#{prefix}/ReactCommon")
-        check_pod("React-graphics", :path => "#{prefix}/ReactCommon/react/renderer/graphics")
-        check_pod("React-RCTFabric", :path => "#{prefix}/React", :modular_headers => true)
-        check_pod("RCT-Folly/Fabric", :podspec => "#{prefix}/third-party-podspecs/RCT-Folly.podspec")
-        check_pod("React-ImageManager", :path => "#{prefix}/ReactCommon/react/renderer/imagemanager/platform/ios")
-    end
-
-    def check_pod(name, path: nil, modular_headers: nil, podspec: nil)
-        params = $podInvocation[name]
-        expected_params = {}
-
-        if path != nil then expected_params[:path] = path end
-        if modular_headers != nil then expected_params[:modular_headers] = modular_headers end
-        if podspec != nil then expected_params[:podspec] = podspec end
-
-        assert_equal(params, expected_params)
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/flipper-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/flipper-test.rb
deleted file mode 100644
index 2c0659e..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/flipper-test.rb
+++ /dev/null
@@ -1,161 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require_relative "../flipper.rb"
-require_relative "./test_utils/podSpy.rb"
-require_relative "./test_utils/InstallerMock.rb"
-
-class FlipperTests < Test::Unit::TestCase
-    def setup
-        podSpy_cleanUp()
-    end
-
-    # =========================== #
-    # TEST - Install Dependencies #
-    # =========================== #
-    def test_installFlipperDependencies_installDependencies
-        # Act
-        install_flipper_dependencies('../..')
-
-        # Assert
-        assert_equal($podInvocationCount, 1)
-        assert_equal($podInvocation['React-Core/DevSupport'][:path], "../../" )
-    end
-
-    # ======================= #
-    # TEST - Use Flipper Pods #
-    # ======================= #
-
-    def test_UseFlipperPods_WithDefaultValues_InstallsPods
-        # Arrange
-        configurations = ['Debug']
-
-        # Act
-        use_flipper_pods()
-
-        # Assert
-        check_all_flipper_pods($flipper_default_versions, configurations)
-        # the number of times the `pod` function has been invoked to install a dependency
-        assert_equal($podInvocationCount, 21)
-    end
-
-    def test_UseFlipperPods_WithCustomValues_InstallsPods
-        # Arrange
-        versions = {
-            "Flipper" => "1.0.0",
-            "Flipper-Boost-iOSX" => "1.1.0",
-            "Flipper-DoubleConversion" => "1.1.1",
-            "Flipper-Fmt" => "1.2.1",
-            "Flipper-Folly" => "2.1.1",
-            "Flipper-Glog" => "0.1.2",
-            "Flipper-PeerTalk" => "0.0.1",
-            "OpenSSL-Universal" => "2.2.2200",
-        }
-        configurations = ['Debug', 'CI']
-
-        # Act
-        use_flipper_pods(versions, :configurations => configurations)
-
-        # Assert
-        check_all_flipper_pods(versions, configurations)
-        # the number of times the `pod` function has been invoked to install a dependency
-        assert_equal($podInvocationCount, 21)
-    end
-
-    # ================= #
-    # Test Post Install #
-    # ================= #
-
-    def test_postInstall_updatesThePodCorrectly
-        # Arrange
-        installer = prepare_mocked_installer
-
-        # Act
-        flipper_post_install(installer)
-
-        # Assert
-        yoga_target = installer.target_with_name("YogaKit")
-        yoga_target.build_configurations.each do |config|
-            assert_equal(config.build_settings['SWIFT_VERSION'], '4.1')
-        end
-
-        reactCore_target = installer.target_with_name("React-RCTAppDelegate")
-        reactCore_target.build_configurations.each do |config|
-            if config.name == 'Debug' || config.name == 'CustomConfig' then
-                assert_equal(config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'], ['$(inherited)', 'FB_SONARKIT_ENABLED=1'])
-            else
-                assert_true(config.build_settings.empty?)
-            end
-        end
-    end
-
-    # ======= #
-    # HELPERS #
-    # ======= #
-
-    def check_all_flipper_pods(versions, configurations)
-        check_flipper_pod('Flipper', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FlipperKitLayoutPlugin', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/SKIOSNetworkPlugin', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FlipperKitUserDefaultsPlugin', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FlipperKitReactPlugin', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/Core', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/CppBridge', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FBCxxFollyDynamicConvert', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FBDefines', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FKPortForwarding', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FlipperKitHighlightOverlay', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FlipperKitLayoutTextSearchable', versions['Flipper'], configurations)
-        check_flipper_pod('FlipperKit/FlipperKitNetworkPlugin', versions['Flipper'], configurations)
-        check_flipper_pod('Flipper-Boost-iOSX', versions['Flipper-Boost-iOSX'], configurations)
-        check_flipper_pod('Flipper-DoubleConversion', versions['Flipper-DoubleConversion'], configurations)
-        check_flipper_pod('Flipper-Fmt', versions['Flipper-Fmt'], configurations)
-        check_flipper_pod('Flipper-Folly', versions['Flipper-Folly'], configurations)
-        check_flipper_pod('Flipper-Glog', versions['Flipper-Glog'], configurations)
-        check_flipper_pod('Flipper-PeerTalk', versions['Flipper-PeerTalk'], configurations)
-        check_flipper_pod('OpenSSL-Universal', versions['OpenSSL-Universal'], configurations)
-    end
-
-    def check_flipper_pod(name, expectedVersion, expectedConfigurations)
-        params = $podInvocation[name]
-        assert_equal(params[:version], expectedVersion)
-        assert_equal(params[:configurations], expectedConfigurations)
-    end
-
-    def prepare_mocked_installer
-        return InstallerMock.new(
-            PodsProjectMock.new([
-                    TargetMock.new(
-                        "YogaKit",
-                        [
-                            BuildConfigurationMock.new("Debug", is_debug: true),
-                            BuildConfigurationMock.new("Release", is_debug: false),
-                            BuildConfigurationMock.new("CustomConfig", is_debug: true),
-                        ]
-                    ),
-                    TargetMock.new(
-                        "React-Core",
-                        [
-                            BuildConfigurationMock.new("Debug", is_debug: true),
-                            BuildConfigurationMock.new("Release", is_debug: false),
-                            BuildConfigurationMock.new("CustomConfig", is_debug: true),
-                        ]
-                    ),
-                    TargetMock.new(
-                        "React-RCTAppDelegate",
-                        [
-                            BuildConfigurationMock.new("Debug", is_debug: true),
-                            BuildConfigurationMock.new("Release", is_debug: false),
-                            BuildConfigurationMock.new("CustomConfig", is_debug: true),
-                        ]
-                    )
-                ]
-            )
-        )
-    end
-
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/jsengine-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/jsengine-test.rb
deleted file mode 100644
index 84ef4a6..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/jsengine-test.rb
+++ /dev/null
@@ -1,130 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require_relative "../jsengine.rb"
-require_relative "./test_utils/podSpy.rb"
-require_relative "./test_utils/PodMock.rb"
-require_relative "./test_utils/Open3Mock.rb"
-
-class JSEngineTests < Test::Unit::TestCase
-
-    :react_native_path
-
-    def setup
-        @react_native_path = "../.."
-        podSpy_cleanUp()
-
-    end
-
-    def teardown
-        ENV['HERMES_ENGINE_TARBALL_PATH'] = nil
-        Open3.reset()
-        Pod::Config.reset()
-        Pod::UI.reset()
-        podSpy_cleanUp()
-        ENV['USE_HERMES'] = '1'
-        ENV['CI'] = nil
-    end
-
-    # =============== #
-    # TEST - setupJsc #
-    # =============== #
-    def test_setupJsc_installsPods
-        # Arrange
-        fabric_enabled = false
-
-        # Act
-        setup_jsc!(:react_native_path => @react_native_path, :fabric_enabled => fabric_enabled)
-
-        # Assert
-        assert_equal($podInvocationCount, 2)
-        assert_equal($podInvocation["React-jsi"][:path], "../../ReactCommon/jsi")
-        assert_equal($podInvocation["React-jsc"][:path], "../../ReactCommon/jsc")
-    end
-
-    def test_setupJsc_installsPods_installsFabricSubspecWhenFabricEnabled
-        # Arrange
-        fabric_enabled = true
-
-        # Act
-        setup_jsc!(:react_native_path => @react_native_path, :fabric_enabled => fabric_enabled)
-
-        # Assert
-        assert_equal($podInvocationCount, 3)
-        assert_equal($podInvocation["React-jsi"][:path], "../../ReactCommon/jsi")
-        assert_equal($podInvocation["React-jsc"][:path], "../../ReactCommon/jsc")
-        assert_equal($podInvocation["React-jsc/Fabric"][:path], "../../ReactCommon/jsc")
-    end
-
-    # ================== #
-    # TEST - setupHermes #
-    # ================== #
-    def test_setupHermes_whenHermesScriptFails_abort
-        # Arrange
-        fabric_enabled = false
-        Pod::Config.instance.installation_root.set_installation_root("Pods/")
-        Open3.set_returned_status(1)
-        Open3.set_returned_text("This test\nshould fail")
-
-        # Act
-        assert_raises {
-            setup_hermes!(:react_native_path => @react_native_path, :fabric_enabled => fabric_enabled)
-        }
-
-        # Assert
-        assert_equal(Open3.collected_commands, ["node scripts/hermes/prepare-hermes-for-build"])
-        assert_equal(Open3.collected_dirs, ["Pods/../.."])
-        assert_equal(Pod::UI.collected_infoes, ["This test", "should fail"])
-        assert_equal($podInvocationCount, 0)
-        assert_equal($podInvocation, {})
-    end
-
-    def test_setupHermes_whenHermesScriptSucceeds_installsPods
-        # Arrange
-        fabric_enabled = false
-        Pod::Config.instance.installation_root.set_installation_root("Pods/")
-        Open3.set_returned_status(0)
-        Open3.set_returned_text("This is\nthe text\nreturned by\nprepare-hermes-for-build")
-
-        # Act
-        setup_hermes!(:react_native_path => @react_native_path, :fabric_enabled => fabric_enabled)
-
-        # Assert
-        assert_equal(Open3.collected_commands, ["node scripts/hermes/prepare-hermes-for-build"])
-        assert_equal(Open3.collected_dirs, ["Pods/../.."])
-        assert_equal(Pod::UI.collected_infoes, [
-            "This is",
-            "the text",
-            "returned by",
-            "prepare-hermes-for-build",
-        ])
-        assert_equal($podInvocationCount, 4)
-        assert_equal($podInvocation["React-jsi"][:path], "../../ReactCommon/jsi")
-        assert_equal($podInvocation["React-hermes"][:path], "../../ReactCommon/hermes")
-        assert_equal($podInvocation["libevent"][:version], "~> 2.1.12")
-        hermes_engine_pod_invocation = $podInvocation["hermes-engine"]
-        assert_equal(hermes_engine_pod_invocation[:podspec], "../../sdks/hermes-engine/hermes-engine.podspec")
-        assert_equal(hermes_engine_pod_invocation[:tag], "")
-    end
-
-    def test_setupHermes_installsPods_installsFabricSubspecWhenFabricEnabled
-        # Arrange
-        fabric_enabled = true
-
-        # Act
-        setup_hermes!(:react_native_path => @react_native_path, :fabric_enabled => fabric_enabled)
-
-        # Assert
-        assert_equal($podInvocationCount, 4)
-        assert_equal($podInvocation["React-jsi"][:path], "../../ReactCommon/jsi")
-        hermes_engine_pod_invocation = $podInvocation["hermes-engine"]
-        assert_equal(hermes_engine_pod_invocation[:podspec], "../../sdks/hermes-engine/hermes-engine.podspec")
-        assert_equal(hermes_engine_pod_invocation[:tag], "")
-        assert_equal($podInvocation["React-hermes"][:path], "../../ReactCommon/hermes")
-        assert_equal($podInvocation["libevent"][:version], "~> 2.1.12")
-    end
-
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/local_podspec_patch-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/local_podspec_patch-test.rb
deleted file mode 100644
index 0941659..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/local_podspec_patch-test.rb
+++ /dev/null
@@ -1,167 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require "json"
-require_relative "../local_podspec_patch.rb"
-require_relative "./test_utils/FileMock.rb"
-require_relative "./test_utils/DirMock.rb"
-require_relative "./test_utils/PodMock.rb"
-require_relative "./test_utils/LocalPodspecPatchMock.rb"
-
-class LocalPodspecPatchTests < Test::Unit::TestCase
-
-    def teardown
-        FileMock.reset()
-        DirMock.reset()
-    end
-
-    # =================== #
-    # Test - Pods To Update #
-    # =================== #
-
-    def test_podsToUpdate_whenNoFilesExists_returnLocalPodspecs
-        # Arrange
-        react_native_path = "../node_modules/react-native"
-        globs = ["a/path/to/boost.podspec", "a/path/to/DoubleConversion.podspec"]
-        mocked_pwd = "a/path/to"
-        DirMock.mocked_existing_globs(globs, "#{react_native_path}/third-party-podspecs/*")
-        DirMock.set_pwd(mocked_pwd)
-
-        # Act
-        local_podspec = LocalPodspecPatch.pods_to_update(:react_native_path => react_native_path, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(local_podspec, [])
-        assert_equal(DirMock.glob_invocation, ["#{react_native_path}/third-party-podspecs/*"])
-        assert_equal(FileMock.exist_invocation_params, [
-            FileMock.join(mocked_pwd, "Pods/Local Podspecs", "boost.podspec.json"),
-            FileMock.join(mocked_pwd, "Pods/Local Podspecs", "DoubleConversion.podspec.json"),
-        ])
-    end
-
-    def test_podsToUpdate_whenFilesExistsWithSameVersions_returnsEmpty
-        # Arrange
-        react_native_path = "../node_modules/react-native"
-        globs = ["a/path/to/boost.podspec", "a/path/to/DoubleConversion.podspec"]
-        mocked_pwd = "a/path/to"
-        prepare_PodsToUpdate_test_withMatchingVersions(react_native_path, globs, mocked_pwd)
-
-        # Act
-        local_podspec = LocalPodspecPatch.pods_to_update(:react_native_path => react_native_path, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(local_podspec, [])
-        assert_equal(DirMock.glob_invocation, ["#{react_native_path}/third-party-podspecs/*"])
-        assert_equal(FileMock.exist_invocation_params, [
-            FileMock.join(mocked_pwd, "Pods/Local Podspecs", "boost.podspec.json"),
-            FileMock.join(mocked_pwd, "Pods/Local Podspecs", "DoubleConversion.podspec.json"),
-        ])
-    end
-
-    def test_podsToUpdate_whenFilesExistsWithDifferentVersions_returnsThem
-        # Arrange
-        react_native_path = "../node_modules/react-native"
-        globs = ["a/path/to/boost.podspec", "a/path/to/DoubleConversion.podspec"]
-        mocked_pwd = "a/path/to"
-        prepare_PodsToUpdate_test_withDifferentVersions(react_native_path, globs, mocked_pwd)
-
-        # Act
-        local_podspec = LocalPodspecPatch.pods_to_update(:react_native_path => react_native_path, dir_manager: DirMock, file_manager: FileMock)
-
-        # Assert
-        assert_equal(local_podspec, [
-            "boost",
-            "DoubleConversion"
-        ])
-        assert_equal(DirMock.glob_invocation, ["#{react_native_path}/third-party-podspecs/*"])
-        assert_equal(FileMock.exist_invocation_params, [
-            FileMock.join(mocked_pwd, "Pods/Local Podspecs", "boost.podspec.json"),
-            FileMock.join(mocked_pwd, "Pods/Local Podspecs", "DoubleConversion.podspec.json"),
-        ])
-    end
-
-    # ======================================== #
-    # Test - Patch Detect Changes With Podfile #
-    # ======================================== #
-    def test_patchDetectChangesWithPodfile_whenAlreadyChanged_returnSameChangeSet()
-        local_pods = [
-            "boost",
-            "DoubleConversion"
-        ]
-        LocalPodspecPatch.mock_local_podspecs(local_pods)
-        changes = {
-            :unchanged => ["some_pod"],
-            :changed => ["boost", "DoubleConversion", "another_pod"]
-        }
-
-        Pod::Lockfile.prepend(LocalPodspecPatch)
-
-        new_changes = Pod::Lockfile.new().patch_detect_changes_with_podfile(changes)
-
-        assert_equal(new_changes, {
-            :unchanged => ["some_pod"],
-            :changed => ["boost", "DoubleConversion", "another_pod"]
-        })
-    end
-
-    def test_patchDetectChangesWithPodfile_whenLocalPodsUnchanged_movesLocalPodsToChangeSet()
-        pods = [
-            "boost",
-            "DoubleConversion"
-        ]
-        LocalPodspecPatch.mock_local_podspecs(pods)
-        changes = {
-            :unchanged => ["first_pod", "boost", "DoubleConversion"],
-            :changed => ["another_pod"]
-        }
-
-        Pod::Lockfile.prepend(LocalPodspecPatch)
-
-        new_changes = Pod::Lockfile.new().patch_detect_changes_with_podfile(changes)
-
-        assert_equal(new_changes, {
-            :unchanged => ["first_pod"],
-            :changed => ["another_pod", "boost", "DoubleConversion"]
-        })
-    end
-
-    # ========= #
-    # Utilities #
-    # ========= #
-    def prepare_PodsToUpdate_test_withMatchingVersions(react_native_path, globs, mocked_pwd)
-        FileMock.mocked_existing_files([
-            "a/path/to/Pods/Local Podspecs/boost.podspec.json",
-            "a/path/to/Pods/Local Podspecs/DoubleConversion.podspec.json"
-        ])
-        FileMock.files_to_read({
-            "a/path/to/Pods/Local Podspecs/boost.podspec.json" => "{ \"version\": \"0.0.1\"}",
-            "a/path/to/Pods/Local Podspecs/DoubleConversion.podspec.json" => "{ \"version\": \"1.0.1\"}",
-        })
-        DirMock.mocked_existing_globs(globs, "#{react_native_path}/third-party-podspecs/*")
-        DirMock.set_pwd(mocked_pwd)
-        Pod::Specification.specs_from_file({
-            "../node_modules/react-native/third-party-podspecs/boost.podspec" => Pod::PodSpecMock.new(:version => "0.0.1"),
-            "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec" => Pod::PodSpecMock.new(:version => "1.0.1"),
-        })
-    end
-
-    def prepare_PodsToUpdate_test_withDifferentVersions(react_native_path, globs, mocked_pwd)
-        FileMock.mocked_existing_files([
-            "a/path/to/Pods/Local Podspecs/boost.podspec.json",
-            "a/path/to/Pods/Local Podspecs/DoubleConversion.podspec.json"
-        ])
-        FileMock.files_to_read({
-            "a/path/to/Pods/Local Podspecs/boost.podspec.json" => "{ \"version\": \"0.0.1\"}",
-            "a/path/to/Pods/Local Podspecs/DoubleConversion.podspec.json" => "{ \"version\": \"1.0.1\"}",
-        })
-        DirMock.mocked_existing_globs(globs, "#{react_native_path}/third-party-podspecs/*")
-        DirMock.set_pwd(mocked_pwd)
-        Pod::Specification.specs_from_file({
-            "../node_modules/react-native/third-party-podspecs/boost.podspec" => Pod::PodSpecMock.new(:version => "0.1.1"),
-            "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec" => Pod::PodSpecMock.new(:version => "1.1.1"),
-        })
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/new_architecture-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/new_architecture-test.rb
deleted file mode 100644
index a7157c4..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/new_architecture-test.rb
+++ /dev/null
@@ -1,303 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require_relative "../new_architecture.rb"
-require_relative "./test_utils/InstallerMock.rb"
-require_relative "./test_utils/PodMock.rb"
-require_relative "./test_utils/SpecMock.rb"
-
-class NewArchitectureTests < Test::Unit::TestCase
-    def teardown
-        Pod::UI.reset()
-    end
-
-    # ============================= #
-    # Test - Set Clang Cxx Lang Std #
-    # ============================= #
-
-    def test_setClangCxxLanguageStandardIfNeeded_whenReactCoreIsPresent
-        installer = prepare_mocked_installer_with_react_core
-        NewArchitectureHelper.set_clang_cxx_language_standard_if_needed(installer)
-
-        assert_equal(installer.aggregate_targets[0].user_project.build_configurations[0].build_settings["CLANG_CXX_LANGUAGE_STANDARD"], "c++17")
-        assert_equal(installer.aggregate_targets[1].user_project.build_configurations[0].build_settings["CLANG_CXX_LANGUAGE_STANDARD"], "c++17")
-        assert_equal(installer.pods_project.targets[1].received_resolved_build_setting_parameters, [ReceivedCommonResolvedBuildSettings.new("CLANG_CXX_LANGUAGE_STANDARD", true)])
-        assert_equal(Pod::UI.collected_messages, ["Setting CLANG_CXX_LANGUAGE_STANDARD to c++17 on /test/path.xcproj", "Setting CLANG_CXX_LANGUAGE_STANDARD to c++17 on /test/path2.xcproj"])
-    end
-
-    def test_setClangCxxLanguageStandardIfNeeded_whenReactCoreIsNotPresent
-        installer = prepare_mocked_installer_without_react_core
-        NewArchitectureHelper.set_clang_cxx_language_standard_if_needed(installer)
-
-        assert_equal(installer.aggregate_targets[0].user_project.build_configurations[0].build_settings["CLANG_CXX_LANGUAGE_STANDARD"], nil)
-        assert_equal(installer.aggregate_targets[1].user_project.build_configurations[0].build_settings["CLANG_CXX_LANGUAGE_STANDARD"], nil)
-        assert_equal(installer.pods_project.targets[0].received_resolved_build_setting_parameters, [])
-        assert_equal(Pod::UI.collected_messages, [])
-    end
-
-    def test_setClangCxxLanguageStandardIfNeeded_whenThereAreDifferentValuesForLanguageStandard_takesTheFirstValue
-        installer = prepare_mocked_installer_with_react_core_and_different_language_standards
-        NewArchitectureHelper.set_clang_cxx_language_standard_if_needed(installer)
-
-        assert_equal(installer.aggregate_targets[0].user_project.build_configurations[0].build_settings["CLANG_CXX_LANGUAGE_STANDARD"], "c++17")
-        assert_equal(installer.aggregate_targets[1].user_project.build_configurations[0].build_settings["CLANG_CXX_LANGUAGE_STANDARD"], "c++17")
-        assert_equal(installer.pods_project.targets[1].received_resolved_build_setting_parameters, [ReceivedCommonResolvedBuildSettings.new("CLANG_CXX_LANGUAGE_STANDARD", true)])
-        assert_equal(Pod::UI.collected_messages, ["Setting CLANG_CXX_LANGUAGE_STANDARD to c++17 on /test/path.xcproj", "Setting CLANG_CXX_LANGUAGE_STANDARD to c++17 on /test/path2.xcproj"])
-    end
-
-    # =================== #
-    # Test - Modify Flags #
-    # =================== #
-    def test_modifyFlagsForNewArch_whenOnOldArch_doNothing
-        # Arrange
-        first_xcconfig = prepare_xcconfig("First")
-        second_xcconfig = prepare_xcconfig("Second")
-        react_core_debug_config = prepare_CXX_Flags_build_configuration("Debug")
-        react_core_release_config = prepare_CXX_Flags_build_configuration("Release")
-        yoga_debug_config = prepare_CXX_Flags_build_configuration("Debug")
-        yoga_release_config = prepare_CXX_Flags_build_configuration("Release")
-
-        installer = prepare_installer_for_cpp_flags(
-            [ first_xcconfig, second_xcconfig ],
-            {
-                "React-Core" => [ react_core_debug_config, react_core_release_config ],
-                "Yoga" => [ yoga_debug_config, yoga_release_config ],
-            }
-        )
-        # Act
-        NewArchitectureHelper.modify_flags_for_new_architecture(installer, false)
-
-        # Assert
-        assert_equal(first_xcconfig.attributes["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-        assert_equal(first_xcconfig.save_as_invocation, [])
-        assert_equal(second_xcconfig.attributes["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-        assert_equal(second_xcconfig.save_as_invocation, [])
-        assert_equal(react_core_debug_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-        assert_equal(react_core_release_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-        assert_equal(yoga_debug_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-        assert_equal(yoga_release_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-    end
-
-    def test_modifyFlagsForNewArch_whenOnNewArchAndIsRelease_updateFlags
-        # Arrange
-        first_xcconfig = prepare_xcconfig("First")
-        second_xcconfig = prepare_xcconfig("Second")
-        react_core_debug_config = prepare_CXX_Flags_build_configuration("Debug")
-        react_core_release_config = prepare_CXX_Flags_build_configuration("Release")
-        yoga_debug_config = prepare_CXX_Flags_build_configuration("Debug")
-        yoga_release_config = prepare_CXX_Flags_build_configuration("Release")
-
-        installer = prepare_installer_for_cpp_flags(
-            [ first_xcconfig, second_xcconfig ],
-            {
-                "React-Core" => [ react_core_debug_config, react_core_release_config ],
-                "Yoga" => [ yoga_debug_config, yoga_release_config ],
-            }
-        )
-        # Act
-        NewArchitectureHelper.modify_flags_for_new_architecture(installer, true)
-
-        # Assert
-        assert_equal(first_xcconfig.attributes["OTHER_CPLUSPLUSFLAGS"], "$(inherited) -DRCT_NEW_ARCH_ENABLED=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1")
-        assert_nil(first_xcconfig.attributes["OTHER_CFLAGS"])
-        assert_equal(first_xcconfig.save_as_invocation, ["a/path/First.xcconfig"])
-        assert_equal(second_xcconfig.attributes["OTHER_CPLUSPLUSFLAGS"], "$(inherited) -DRCT_NEW_ARCH_ENABLED=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1")
-        assert_nil(second_xcconfig.attributes["OTHER_CFLAGS"])
-        assert_equal(second_xcconfig.save_as_invocation, ["a/path/Second.xcconfig"])
-        assert_equal(react_core_debug_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited) -DRCT_NEW_ARCH_ENABLED=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1")
-        assert_nil(react_core_debug_config.build_settings["OTHER_CFLAGS"])
-        assert_equal(react_core_release_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited) -DRCT_NEW_ARCH_ENABLED=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DNDEBUG")
-        assert_equal(react_core_release_config.build_settings["OTHER_CFLAGS"], "$(inherited) -DNDEBUG")
-        assert_equal(yoga_debug_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited)")
-        assert_nil(yoga_debug_config.build_settings["OTHER_CFLAGS"])
-        assert_equal(yoga_release_config.build_settings["OTHER_CPLUSPLUSFLAGS"], "$(inherited) -DNDEBUG")
-        assert_equal(yoga_release_config.build_settings["OTHER_CFLAGS"], "$(inherited) -DNDEBUG")
-    end
-
-    # =================================== #
-    # Test - install Modules Dependencies #
-    # =================================== #
-    def test_installModulesDependencies_whenNewArchEnabledAndNewArchAndNoSearchPathsNorCompilerFlagsArePresent_itInstallDependencies
-        #  Arrange
-        spec = SpecMock.new
-
-        # Act
-        NewArchitectureHelper.install_modules_dependencies(spec, true, '2021.07.22.00')
-
-        # Assert
-        assert_equal(spec.compiler_flags, NewArchitectureHelper.folly_compiler_flags)
-        assert_equal(spec.pod_target_xcconfig["HEADER_SEARCH_PATHS"], "\"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/DoubleConversion\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/RCTFabric.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-utils/React_utils.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\"")
-        assert_equal(spec.pod_target_xcconfig["CLANG_CXX_LANGUAGE_STANDARD"], "c++17")
-        assert_equal(spec.pod_target_xcconfig["OTHER_CPLUSPLUSFLAGS"], "$(inherited) -DRCT_NEW_ARCH_ENABLED=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1")
-        assert_equal(
-            spec.dependencies,
-            [
-                { :dependency_name => "React-Core" },
-                { :dependency_name => "RCT-Folly", "version"=>"2021.07.22.00" },
-                { :dependency_name => "React-RCTFabric" },
-                { :dependency_name => "React-Codegen" },
-                { :dependency_name => "RCTRequired" },
-                { :dependency_name => "RCTTypeSafety" },
-                { :dependency_name => "ReactCommon/turbomodule/bridging" },
-                { :dependency_name => "ReactCommon/turbomodule/core" },
-                { :dependency_name => "React-NativeModulesApple" },
-                { :dependency_name => "Yoga" },
-                { :dependency_name => "React-Fabric" },
-                { :dependency_name => "React-graphics" },
-                { :dependency_name => "React-utils" },
-                { :dependency_name => "React-debug" },
-                { :dependency_name => "hermes-engine" }
-        ])
-    end
-
-    def test_installModulesDependencies_whenNewArchDisabledAndSearchPathsAndCompilerFlagsArePresent_itInstallDependenciesAndPreserveOtherSettings
-        #  Arrange
-        spec = SpecMock.new
-        spec.compiler_flags = '-Wno-nullability-completeness'
-        other_flags = "\"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/boost\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\""
-        spec.pod_target_xcconfig = {
-            "HEADER_SEARCH_PATHS" => other_flags
-        }
-
-        # Act
-        NewArchitectureHelper.install_modules_dependencies(spec, false, '2021.07.22.00')
-
-        # Assert
-        assert_equal(spec.compiler_flags, "-Wno-nullability-completeness #{NewArchitectureHelper.folly_compiler_flags}")
-        assert_equal(spec.pod_target_xcconfig["HEADER_SEARCH_PATHS"], "#{other_flags} \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/DoubleConversion\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/RCTFabric.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-utils/React_utils.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\"")
-        assert_equal(spec.pod_target_xcconfig["CLANG_CXX_LANGUAGE_STANDARD"], "c++17")
-        assert_equal(
-            spec.dependencies,
-            [
-                { :dependency_name => "React-Core" },
-                { :dependency_name => "RCT-Folly", "version"=>"2021.07.22.00" },
-            ]
-        )
-    end
-end
-
-# ================ #
-# Test - Utilities #
-# ================ #
-def prepare_mocked_installer_with_react_core
-    return InstallerMock.new(
-        PodsProjectMock.new([
-                TargetMock.new(
-                    "YogaKit",
-                    [
-                        BuildConfigurationMock.new("Debug"),
-                        BuildConfigurationMock.new("Release"),
-                    ]
-                ),
-                TargetMock.new(
-                    "React-Core",
-                    [
-                        BuildConfigurationMock.new("Debug", { "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }),
-                        BuildConfigurationMock.new("Release", { "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }),
-                    ]
-                )
-            ]
-        ),
-        [
-            AggregatedProjectMock.new(
-                UserProjectMock.new("/test/path.xcproj", [BuildConfigurationMock.new("Debug")])
-            ),
-            AggregatedProjectMock.new(
-                UserProjectMock.new("/test/path2.xcproj", [BuildConfigurationMock.new("Debug")])
-            ),
-        ]
-    )
-end
-
-def prepare_mocked_installer_with_react_core_and_different_language_standards
-    return InstallerMock.new(
-        PodsProjectMock.new([
-                TargetMock.new(
-                    "YogaKit",
-                    [
-                        BuildConfigurationMock.new("Debug"),
-                        BuildConfigurationMock.new("Release"),
-                    ]
-                ),
-                TargetMock.new(
-                    "React-Core",
-                    [
-                        BuildConfigurationMock.new("Debug", { "CLANG_CXX_LANGUAGE_STANDARD" => "c++17" }),
-                        BuildConfigurationMock.new("Release", { "CLANG_CXX_LANGUAGE_STANDARD" => "new" }),
-                    ]
-                )
-            ]
-        ),
-        [
-            AggregatedProjectMock.new(
-                UserProjectMock.new("/test/path.xcproj", [BuildConfigurationMock.new("Debug")])
-            ),
-            AggregatedProjectMock.new(
-                UserProjectMock.new("/test/path2.xcproj", [BuildConfigurationMock.new("Debug")])
-            ),
-        ]
-    )
-end
-
-def prepare_mocked_installer_without_react_core
-    return InstallerMock.new(
-        PodsProjectMock.new([
-                TargetMock.new(
-                    "YogaKit",
-                    [
-                        BuildConfigurationMock.new("Debug"),
-                        BuildConfigurationMock.new("Release"),
-                    ]
-                )
-            ]
-        ),
-        [
-            AggregatedProjectMock.new(
-                UserProjectMock.new("/test/path.xcproj", [BuildConfigurationMock.new("Debug")])
-            ),
-            AggregatedProjectMock.new(
-                UserProjectMock.new("/test/path2.xcproj", [BuildConfigurationMock.new("Debug")])
-            ),
-        ]
-    )
-end
-
-def prepare_xcconfig(name)
-    return XCConfigMock.new(name, :attributes => {"OTHER_CPLUSPLUSFLAGS" => "$(inherited)"})
-end
-
-def prepare_CXX_Flags_build_configuration(name)
-    return BuildConfigurationMock.new(name, {
-        "OTHER_CPLUSPLUSFLAGS" => "$(inherited)"
-    })
-end
-
-def prepare_pod_target_installation_results_mock(name, configs)
-    target = TargetMock.new(name, configs)
-    return TargetInstallationResultMock.new(target, target)
-end
-
-def prepare_installer_for_cpp_flags(xcconfigs, build_configs)
-    xcconfigs_map = {}
-    xcconfigs.each do |config|
-        xcconfigs_map[config.name.to_s] = config
-    end
-
-    pod_target_installation_results_map = {}
-    build_configs.each do |name, build_configs|
-        pod_target_installation_results_map[name.to_s] = prepare_pod_target_installation_results_mock(
-            name.to_s, build_configs
-        )
-    end
-
-    return InstallerMock.new(
-        PodsProjectMock.new,
-        [
-            AggregatedProjectMock.new(:xcconfigs => xcconfigs_map, :base_path => "a/path/")
-        ],
-        :pod_target_installation_results => pod_target_installation_results_map
-    )
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/CodegenScriptPhaseExtractorMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/CodegenScriptPhaseExtractorMock.rb
deleted file mode 100644
index 621419d..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/CodegenScriptPhaseExtractorMock.rb
+++ /dev/null
@@ -1,21 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class CodegenScriptPhaseExtractorMock
-
-    attr_reader :extract_script_phase_params
-    @script_phase
-
-    def initialize(script_phase)
-        @script_phase = script_phase
-        @extract_script_phase_params = []
-    end
-
-    def extract_script_phase(options)
-        @extract_script_phase_params.push(options)
-        return @script_phase
-    end
-
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/CodegenUtilsMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/CodegenUtilsMock.rb
deleted file mode 100644
index c7bba3d..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/CodegenUtilsMock.rb
+++ /dev/null
@@ -1,108 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class CodegenUtilsMock
-    @js_spec_list
-    @codegen_config
-
-    @react_codegen_script_phases
-    @react_codegen_spec
-
-    attr_reader :get_codegen_config_from_file_params
-    attr_reader :get_list_of_js_specs_params
-    attr_reader :get_react_codegen_script_phases_params
-    attr_reader :get_react_codegen_spec_params
-    attr_reader :generate_react_codegen_spec_params
-    attr_reader :use_react_native_codegen_discovery_params
-
-    def initialize(js_spec_list: [], codegen_config: {}, react_codegen_script_phases: "", react_codegen_spec: {})
-        @js_spec_list = js_spec_list
-        @codegen_config = codegen_config
-        @get_codegen_config_from_file_params = []
-        @get_list_of_js_specs_params = []
-
-        @react_codegen_script_phases = react_codegen_script_phases
-        @react_codegen_spec = react_codegen_spec
-        @get_react_codegen_script_phases_params = []
-        @get_react_codegen_spec_params = []
-        @generate_react_codegen_spec_params = []
-        @use_react_native_codegen_discovery_params = []
-    end
-
-    def get_codegen_config_from_file(config_path, config_key)
-        @get_codegen_config_from_file_params.push({
-            "config_path" => config_path,
-            "config_key" => config_key
-        })
-        return @codegen_config
-    end
-
-    def get_list_of_js_specs(app_codegen_config, app_path)
-        @get_list_of_js_specs_params.push({
-            "app_codegen_config" => app_codegen_config,
-            "app_path" => app_path
-        })
-        return @js_spec_list
-    end
-
-    def get_react_codegen_script_phases(
-        app_path,
-        fabric_enabled: false,
-        config_file_dir: '',
-        react_native_path: "../node_modules/react-native",
-        config_key: 'codegenConfig',
-        codegen_utils: CodegenUtils.new(),
-        script_phase_extractor: CodegenScriptPhaseExtractor.new()
-    )
-        @get_react_codegen_script_phases_params.push({
-            app_path: app_path,
-            fabric_enabled: fabric_enabled,
-            config_file_dir: config_file_dir,
-            react_native_path: react_native_path,
-            config_key: config_key
-        })
-        return @react_codegen_script_phases
-    end
-
-    def get_react_codegen_spec(package_json_file, folly_version: '2021.07.22.00', fabric_enabled: false, hermes_enabled: true, script_phases: nil)
-        @get_react_codegen_spec_params.push({
-            package_json_file: package_json_file,
-            folly_version: folly_version,
-            fabric_enabled: fabric_enabled,
-            script_phases: script_phases
-        })
-        return @react_codegen_spec
-    end
-
-    def generate_react_codegen_podspec!(react_codegen_spec, codegen_output_dir)
-        @generate_react_codegen_spec_params.push({
-            react_codegen_spec: react_codegen_spec,
-            codegen_output_dir: codegen_output_dir
-        })
-    end
-
-    def use_react_native_codegen_discovery!(
-        codegen_disabled,
-        app_path,
-        react_native_path: "../node_modules/react-native",
-        fabric_enabled: false,
-        hermes_enabled: true,
-        config_file_dir: '',
-        codegen_output_dir: 'build/generated/ios',
-        config_key: 'codegenConfig',
-        folly_version: "2021.07.22.00",
-        codegen_utils: CodegenUtilsMock.new()
-    )
-        @use_react_native_codegen_discovery_params.push({
-            codegen_disabled: codegen_disabled,
-            app_path: app_path,
-            react_native_path: react_native_path,
-            fabric_enabled: fabric_enabled,
-            config_file_dir: config_file_dir,
-            codegen_output_dir: codegen_output_dir,
-            folly_version: folly_version
-        })
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/DirMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/DirMock.rb
deleted file mode 100644
index 15eca78..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/DirMock.rb
+++ /dev/null
@@ -1,72 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class DirMock < Dir
-    @@exist_invocation_params = []
-    @@mocked_existing_dirs = []
-
-    @@glob_invocation = []
-    @@mocked_existing_globs = {}
-
-    @@pwd = nil
-
-    # Monkey patched exists? method.
-    # It is used also by the test runner, so it can't start monkey patched
-    # To use this, invoke the `is_testing` method before starting your test.
-    # Remember to invoke `reset` after the test.
-    def self.exist?(path)
-        @@exist_invocation_params.push(path)
-        return @@mocked_existing_dirs.include?(path)
-    end
-
-    # Getter for the `exist_invocation_params` to check that the exist method
-    # is invoked with the right parameters
-    def self.exist_invocation_params()
-        return @@exist_invocation_params
-    end
-
-    # Set the list of dirs the test must return as existing
-    def self.mocked_existing_dirs(dirs)
-        @@mocked_existing_dirs = dirs
-    end
-
-    # Set what the `glob` function should return
-    def self.mocked_existing_globs(globs, path)
-        @@mocked_existing_globs[path] = globs
-    end
-
-    def self.glob_invocation
-        return @@glob_invocation
-    end
-
-    def self.glob(path)
-        @@glob_invocation.push(path)
-        return @@mocked_existing_globs[path] != nil ? @@mocked_existing_globs[path] : []
-    end
-
-    def self.remove_mocked_paths(path)
-        @@mocked_existing_globs = @@mocked_existing_globs.select { |k, v| v != path }
-    end
-
-    def self.set_pwd(pwd)
-        @@pwd = pwd
-    end
-
-    def self.pwd
-        if @@pwd != nil
-            return @@pwd
-        end
-        return pwd
-    end
-
-    # Resets all the settings for the File mock
-    def self.reset()
-        @@pwd = nil
-        @@mocked_existing_dirs = []
-        @@exist_invocation_params = []
-        @@glob_invocation = []
-        @@mocked_existing_globs = {}
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/EnvironmentMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/EnvironmentMock.rb
deleted file mode 100644
index 5b14222..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/EnvironmentMock.rb
+++ /dev/null
@@ -1,21 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-# Mock object for the Environment
-class Environment
-    @@RUBY_PLATFORM = "arm64-darwin21"
-
-    def ruby_platform
-        return @@RUBY_PLATFORM
-    end
-
-    def self.set_ruby_platform(newPlatform)
-        @@RUBY_PLATFORM = newPlatform
-    end
-
-    def self.reset()
-        @@RUBY_PLATFORM = "arm64-darwin21"
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FileMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FileMock.rb
deleted file mode 100644
index 8b9796c..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FileMock.rb
+++ /dev/null
@@ -1,113 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class FileMock < File
-    @@exist_invocation_params = []
-    @@mocked_existing_files = []
-
-    @@delete_invocation_count = 0
-    @@deleted_files = []
-
-    @@open_files_with_mode = {}
-    @@open_invocation_count = 0
-
-    @@open_files = []
-
-    @@files_to_read = {}
-    attr_reader :collected_write
-    attr_reader :fsync_invocation_count
-
-    def initialize()
-        @collected_write = []
-        @fsync_invocation_count = 0
-    end
-
-    # Monkey patched exists? method.
-    # It is used also by the test runner, so it can't start monkey patched
-    # To use this, invoke the `is_testing` method before starting your test.
-    # Remember to invoke `reset` after the test.
-    def self.exist?(path)
-        @@exist_invocation_params.push(path)
-        return @@mocked_existing_files.include?(path)
-    end
-
-    def self.delete(path)
-        @@delete_invocation_count += 1
-        @@deleted_files.push(path)
-    end
-
-    def self.delete_invocation_count
-        return @@delete_invocation_count
-    end
-
-    def self.deleted_files
-        return @@deleted_files
-    end
-
-    # Getter for the `exist_invocation_params` to check that the exist method
-    # is invoked the right number of times with the right parameters
-    def self.exist_invocation_params()
-        return @@exist_invocation_params
-    end
-
-    # Set the list of files the test must return as existing
-    def self.mocked_existing_files(files)
-        @@mocked_existing_files = files
-    end
-
-    def self.open(path, mode, &block)
-        @@open_files_with_mode[path] = mode
-        @@open_invocation_count += 1
-        file = FileMock.new()
-        @@open_files.push(file)
-        yield(file)
-    end
-
-    def self.open_files_with_mode
-        return @@open_files_with_mode
-    end
-
-    def self.open_invocation_count
-        return @@open_invocation_count
-    end
-
-    def self.open_files
-        return @@open_files
-    end
-
-    def self.file_invocation_params
-        return @@file_invocation_params
-    end
-
-    def write(text)
-        @collected_write.push(text.to_s)
-    end
-
-    def fsync()
-        @fsync_invocation_count += 1
-    end
-
-
-    def self.files_to_read(files)
-        @@files_to_read = files
-    end
-
-    def self.read(filepath)
-        return @@files_to_read[filepath]
-    end
-
-    # Resets all the settings for the File mock
-    def self.reset()
-        @@delete_invocation_count = 0
-        @@deleted_files = []
-        @@open_files = []
-        @@open_files_with_mode = {}
-        @@open_invocation_count = 0
-        @@mocked_existing_files = []
-        @@file_invocation_params = []
-        @@exist_invocation_params = []
-        @@files_to_read = {}
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FileUtilsMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FileUtilsMock.rb
deleted file mode 100644
index 8a153ca..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FileUtilsMock.rb
+++ /dev/null
@@ -1,40 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require_relative './DirMock.rb'
-
-module FileUtils
-    class FileUtilsStorage
-        @@RMRF_INVOCATION_COUNT = 0
-        @@RMRF_PATHS = []
-
-        def self.rmrf_invocation_count
-            return @@RMRF_INVOCATION_COUNT
-        end
-
-        def self.increase_rmrfi_invocation_count
-            @@RMRF_INVOCATION_COUNT += 1
-        end
-
-        def self.rmrf_paths
-            return @@RMRF_PATHS
-        end
-
-        def self.push_rmrf_path(path)
-            @@RMRF_PATHS.push(path)
-        end
-
-        def self.reset
-            @@RMRF_INVOCATION_COUNT = 0
-            @@RMRF_PATHS = []
-        end
-    end
-
-    def self.rm_rf(path)
-        FileUtilsStorage.push_rmrf_path(path)
-        FileUtilsStorage.increase_rmrfi_invocation_count
-        DirMock.remove_mocked_paths(path)
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FinderMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FinderMock.rb
deleted file mode 100644
index 2d91d16..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/FinderMock.rb
+++ /dev/null
@@ -1,28 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class Finder
-    @@captured_paths = []
-    @@files_for_paths = {}
-
-
-    def self.find_codegen_file(path)
-        @@captured_paths.push(path)
-        return @@files_for_paths[path]
-    end
-
-    def self.set_files_for_paths(files_for_paths)
-        @@files_for_paths = files_for_paths
-    end
-
-    def self.captured_paths
-        return @@captured_paths
-    end
-
-    def self.reset()
-        @@captured_paths = []
-        @@files_for_paths = {}
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/InstallerMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/InstallerMock.rb
deleted file mode 100644
index 7c1c95d..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/InstallerMock.rb
+++ /dev/null
@@ -1,222 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-
-# This file replicate the structure of the Installer used Cocoapods in the post_install step.
-#
-# To use it, add `require_relative path/to/InstallerMock.rb` into your test file
-#
-# ## Initialization
-# You can create a new mock with the `InstallerMock.new` statement. In this case, you will
-# create an empty mock.
-#
-# It's possible to create complex with the initializer. To create an Installer with a pod, for example, we can
-# use the following code:
-#
-# ```ruby
-# installer = Installer.new(
-#   PodsProjectMock.new([
-#     TargetMock.new(
-#       "MyPod",
-#       [
-#         BuildConfigurationMock.new("Debug"),
-#       ]
-#     )
-#   )
-# )
-# ```
-#
-# ## Assert
-# All the properties of these objects are accessible in read mode.
-# To access the target's list, for example, you can use the following line:
-#
-# ```ruby
-# targets = installer.pods_project.targets
-# ```
-
-class InstallerMock
-    attr_reader :pods_project
-    attr_reader :aggregate_targets
-    attr_reader :target_installation_results
-
-    InstallationResults = Struct.new(:pod_target_installation_results, :aggregate_target_installation_results)
-
-    def initialize(pods_project = PodsProjectMock.new, aggregate_targets = [AggregatedProjectMock.new],
-                   pod_target_installation_results: {},
-                   aggregate_target_installation_results: {})
-        @pods_project = pods_project
-        @aggregate_targets = aggregate_targets
-
-        @target_installation_results = InstallationResults.new(pod_target_installation_results, aggregate_target_installation_results)
-        aggregate_targets.each do |aggregate_target|
-            aggregate_target.user_project.native_targets.each do |target|
-                @target_installation_results.pod_target_installation_results[target.name] = TargetInstallationResultMock.new(target, target)
-            end
-        end
-        pods_project.native_targets.each do |target|
-            @target_installation_results.pod_target_installation_results[target.name] = TargetInstallationResultMock.new(target, target)
-        end
-    end
-
-    def target_with_name(name)
-        return @pods_project.targets
-            .select { |target| target.name == name }
-            .first
-    end
-end
-
-class PodsProjectMock
-    attr_reader :targets
-    attr_reader :native_targets
-    attr_reader :path
-    attr_reader :build_configurations
-    @pod_group
-    attr_reader :save_invocation_count
-
-    def initialize(targets = [], pod_group = {}, path = "test/path-pod.xcodeproj", build_configurations = [], native_targets: [])
-        @targets = targets
-        @pod_group = pod_group
-        @path = path
-        @build_configurations = build_configurations
-        @save_invocation_count = 0
-        @native_targets = native_targets
-    end
-
-    def pod_group(name)
-        return @pod_group[name]
-    end
-
-    def save()
-        @save_invocation_count += 1
-    end
-end
-
-class AggregatedProjectMock
-    attr_reader :user_project
-    attr_reader :xcconfigs
-
-    @base_path
-
-    def initialize(user_project = UserProjectMock.new, xcconfigs: {}, base_path: "")
-        @user_project = user_project
-        @xcconfigs = xcconfigs
-        @base_path = base_path
-    end
-
-    def xcconfig_path(config_name)
-        return File.join(@base_path, "#{config_name}.xcconfig")
-    end
-end
-
-class UserProjectMock
-    attr_reader :path
-    attr_reader :build_configurations
-    attr_reader :native_targets
-
-    attr_reader :save_invocation_count
-
-
-    def initialize(path = "/test/path.xcproj", build_configurations = [], native_targets: [])
-        @path = path
-        @build_configurations = build_configurations
-        @native_targets = native_targets
-        @save_invocation_count = 0
-    end
-
-    def save()
-        @save_invocation_count += 1
-    end
-end
-
-class XCConfigMock
-    attr_reader :name
-    attr_accessor :attributes
-    attr_reader :save_as_invocation
-
-    def initialize(name, attributes: {})
-        @name = name
-        @attributes = attributes
-        @save_as_invocation = []
-    end
-
-    def save_as(file_path)
-        @save_as_invocation.push(file_path)
-    end
-end
-
-ReceivedCommonResolvedBuildSettings = Struct.new(:key, :resolve_against_xcconfig)
-
-class TargetMock
-    attr_reader :name
-    attr_reader :build_configurations
-    attr_reader :product_type
-    attr_reader :received_resolved_build_setting_parameters
-    attr_reader :dependencies
-
-    def initialize(name, build_configurations = [], product_type = nil, dependencies = [])
-        @name = name
-        @build_configurations = build_configurations
-        unless product_type.nil?
-          @product_type = product_type
-        end
-        @received_resolved_build_setting_parameters = []
-        @dependencies = dependencies
-    end
-
-    def resolved_build_setting(key, resolve_against_xcconfig: false)
-        received_resolved_build_setting_parameters.append(ReceivedCommonResolvedBuildSettings.new(key, resolve_against_xcconfig))
-
-        return {name: build_configurations[0].build_settings[key]}
-    end
-end
-
-class BuildConfigurationMock
-    attr_reader :name
-    attr_reader :build_settings
-    @is_debug
-
-    def initialize(name, build_settings = {}, is_debug: false)
-        @name = name
-        @build_settings = build_settings
-        @is_debug = is_debug
-    end
-
-    def debug?
-      return @is_debug
-    end
-end
-
-class TargetInstallationResultMock
-    attr_reader :target
-    attr_reader :native_target
-    attr_reader :resource_bundle_targets
-    attr_reader :test_native_targets
-    attr_reader :test_resource_bundle_targets
-    attr_reader :test_app_host_targets
-    attr_reader :app_native_targets
-    attr_reader :app_resource_bundle_targets
-
-    def initialize(target = TargetMock, native_target = TargetMock,
-                   resource_bundle_targets = [], test_native_targets = [],
-                   test_resource_bundle_targets = {}, test_app_host_targets = [],
-                   app_native_targets = {}, app_resource_bundle_targets = {})
-        @target = target
-        @native_target = native_target
-        @resource_bundle_targets = resource_bundle_targets
-        @test_native_targets = test_native_targets
-        @test_resource_bundle_targets = test_resource_bundle_targets
-        @test_app_host_targets = test_app_host_targets
-        @app_native_targets = app_native_targets
-        @app_resource_bundle_targets = app_resource_bundle_targets
-    end
-end
-
-class DependencyMock
-    attr_reader :name
-
-    def initialize(name)
-        @name = name
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/LocalPodspecPatchMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/LocalPodspecPatchMock.rb
deleted file mode 100644
index 7548ae4..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/LocalPodspecPatchMock.rb
+++ /dev/null
@@ -1,14 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-module LocalPodspecPatch
-    def self.mock_local_podspecs(pods)
-        @@local_podspecs = pods
-    end
-
-    def reset()
-        @@local_podspecs = []
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/Open3Mock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/Open3Mock.rb
deleted file mode 100644
index c8a41c6..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/Open3Mock.rb
+++ /dev/null
@@ -1,43 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class Open3
-    @@collected_commands = []
-    @@collected_dirs = []
-
-    @@returned_text = ""
-    @@returned_status = 0
-
-    def self.capture2e(command, chdir: ".")
-        @@collected_commands.push(command)
-        @@collected_dirs.push(chdir)
-
-        return [*@@returned_text, @@returned_status]
-    end
-
-    def self.collected_commands
-        return @@collected_commands
-    end
-
-    def self.collected_dirs
-        return @@collected_dirs
-    end
-
-    def self.set_returned_text(text)
-        @@returned_text = text
-    end
-
-    def self.set_returned_status(status)
-        @@returned_status = status
-    end
-
-    def self.reset()
-        @@collected_commands = []
-        @@collected_dirs = []
-
-        @@returned_text = ""
-        @@returned_status = 0
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/PathnameMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/PathnameMock.rb
deleted file mode 100644
index 0e4078f..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/PathnameMock.rb
+++ /dev/null
@@ -1,42 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class Pathname
-    @@pwd = ""
-    @@pwd_invocation_count = 0
-
-    attr_reader :path
-
-    def initialize(path)
-        @path = path
-    end
-
-    def realpath
-        return self
-    end
-
-    def relative_path_from(path)
-        return @path
-    end
-
-    def self.pwd!(pwd)
-        @@pwd = pwd
-    end
-
-    def self.pwd()
-        @@pwd_invocation_count += 1
-        return @@pwd
-    end
-
-    def self.pwd_invocation_count
-        return @@pwd_invocation_count
-    end
-
-
-    def self.reset()
-        @@pwd = ""
-        @@pwd_invocation_count = 0
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/PodMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/PodMock.rb
deleted file mode 100644
index 1b2dd1b..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/PodMock.rb
+++ /dev/null
@@ -1,144 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-module Pod
-    class Config
-        @@instance = Config.new()
-
-        attr_reader :installation_root
-
-        def initialize()
-            @installation_root = InstallationRootMock.new()
-        end
-
-        def self.instance()
-            return @@instance
-        end
-
-        def self.reset()
-            @@instance = Config.new()
-        end
-    end
-
-    class InstallationRootMock
-
-        attr_accessor :relative_path_from
-        attr_accessor :installation_root
-
-        attr_reader :relative_path_from_invocation_count
-        attr_reader :installation_root_invocation_count
-
-        def initialize()
-            @relative_path_from = ""
-            @installation_root = ""
-            @relative_path_from_invocation_count = 0
-            @installation_root_invocation_count = 0
-        end
-
-        def relative_path_from(path)
-            @relative_path_from_invocation_count += 1
-            return @relative_path_from
-        end
-
-        def installation_root(root)
-            @installation_root_invocation_count += 1
-            return @installation_root
-        end
-
-        def set_installation_root(root)
-            @installation_root = root
-        end
-
-        def join(path)
-            return @installation_root + path
-        end
-
-    end
-
-    class UI
-
-        @@collected_infoes = []
-        @@collected_messages = []
-        @@collected_warns = []
-
-        def self.puts(message)
-            @@collected_messages.push(message)
-        end
-
-        def self.warn(warn)
-            @@collected_warns.push(warn)
-        end
-
-        def self.info(info)
-            @@collected_infoes.push(info)
-        end
-
-        def self.collected_messages()
-            return @@collected_messages
-        end
-
-        def self.collected_warns()
-            return @@collected_warns
-        end
-
-        def self.collected_infoes()
-            return @@collected_infoes
-        end
-
-        def self.reset()
-            @@collected_messages = []
-            @@collected_warns = []
-            @@collected_infoes = []
-        end
-    end
-
-    class Executable
-        @@executed_commands = []
-
-        def self.execute_command(command, arguments)
-            @@executed_commands.push({
-                "command" => command,
-                "arguments" => arguments
-            })
-        end
-
-        def self.executed_commands
-            return @@executed_commands
-        end
-
-        def self.reset()
-            @@executed_commands = []
-        end
-    end
-
-    class Specification
-        @@specs_from_file = {}
-
-        def self.specs_from_file(specs)
-            @@specs_from_file = specs
-        end
-
-        def self.from_file(path)
-            return @@specs_from_file[path]
-        end
-
-        def reset()
-            @@specs_from_file = {}
-        end
-    end
-
-    class PodSpecMock
-        attr_reader :version
-
-        def initialize(version: "0.0.1")
-            @version = version
-        end
-    end
-
-    class Lockfile
-        def initialize()
-        end
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/SpecMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/SpecMock.rb
deleted file mode 100644
index f53e190..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/SpecMock.rb
+++ /dev/null
@@ -1,30 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class SpecMock
-
-    attr_accessor :compiler_flags
-    attr_accessor :pod_target_xcconfig
-    attr_reader :dependencies
-
-    def initialize
-        @compiler_flags = ""
-        @pod_target_xcconfig = Hash.new
-        @dependencies = []
-    end
-
-    def dependency(dependency_name, version = nil)
-        toPush = {"dependency_name": dependency_name}
-        toPush["version"] = version if version
-        @dependencies.push(toPush)
-    end
-
-    def to_hash
-        return {
-            "compiler_flags" => @compiler_flags,
-            "pod_target_xcconfig" => @pod_target_xcconfig,
-        }
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/SysctlCheckerMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/SysctlCheckerMock.rb
deleted file mode 100644
index 212c7fb..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/SysctlCheckerMock.rb
+++ /dev/null
@@ -1,21 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-# Mock object for SysctlChecker
-class SysctlChecker
-    @@call_sysctl_arm64_return_value = 1
-
-    def call_sysctl_arm64
-        return @@call_sysctl_arm64_return_value
-    end
-
-    def self.set_call_sysctl_arm64_return_value(newValue)
-        @@call_sysctl_arm64_return_value = newValue
-    end
-
-    def self.reset()
-        @@call_sysctl_arm64_return_value = 1
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/TargetDefinitionMock.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/TargetDefinitionMock.rb
deleted file mode 100644
index 0a4ddfa..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/TargetDefinitionMock.rb
+++ /dev/null
@@ -1,12 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-class TargetDefinitionMock
-    attr_reader :build_type
-
-    def initialize(build_type)
-        @build_type = build_type
-    end
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/podSpy.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/podSpy.rb
deleted file mode 100644
index 0c777f8..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/podSpy.rb
+++ /dev/null
@@ -1,39 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-# This file contains the utilities required to mock properly the
-# usage of the `pod` function.
-#
-# To use this file, just add `require_relative "path/to/podSpy.rb"` to your test file.
-#
-# Remember to invoke `podSpy_cleanUp` in your setup/teardown method, to start from a clean situation.
-#
-# Whenever your ruby script uses the `pod` function, the invocation is recorded in the `$podInvocation` global
-# variable. A $podInvocationCount counter is increased as well.
-#
-# You can assert against these variables to check:
-# * The `pod` function has been invoked X times: `assert_equal($podInvocationCount, X)`
-# * A specific pod has been installed: `assert_equal($podInvocation["MyPod"][:version], "15.4.6")`
-
-
-$podInvocation = {}
-$podInvocationCount = 0
-
-def podSpy_cleanUp
-    $podInvocation = {}
-    $podInvocationCount = 0
-end
-
-def pod(name, version = nil, path: nil, configurations: nil, modular_headers: nil, podspec: nil, tag: nil)
-    $podInvocationCount += 1
-    params = {}
-    if version != nil then params[:version] = version end
-    if path != nil then params[:path] = path end
-    if configurations != nil then params[:configurations] = configurations end
-    if modular_headers != nil then params[:modular_headers] = modular_headers end
-    if podspec != nil then params[:podspec] = podspec end
-    if tag != nil then params[:tag] = tag end
-    $podInvocation[name] = params
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/systemUtils.rb b/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/systemUtils.rb
deleted file mode 100644
index d5269dd..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/test_utils/systemUtils.rb
+++ /dev/null
@@ -1,14 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-$collected_commands = []
-
-def system(command)
-    $collected_commands.push(command)
-end
-
-def system_reset_commands()
-    $collected_commands = []
-end
diff --git a/node_modules/react-native/scripts/cocoapods/__tests__/utils-test.rb b/node_modules/react-native/scripts/cocoapods/__tests__/utils-test.rb
deleted file mode 100644
index 5a1c98e..0000000
--- a/node_modules/react-native/scripts/cocoapods/__tests__/utils-test.rb
+++ /dev/null
@@ -1,766 +0,0 @@
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-require "test/unit"
-require_relative "../utils.rb"
-require_relative "../flipper.rb"
-require_relative "./test_utils/PodMock.rb"
-require_relative "./test_utils/InstallerMock.rb"
-require_relative "./test_utils/EnvironmentMock.rb"
-require_relative "./test_utils/SysctlCheckerMock.rb"
-require_relative "./test_utils/FileMock.rb"
-require_relative "./test_utils/systemUtils.rb"
-require_relative "./test_utils/PathnameMock.rb"
-require_relative "./test_utils/TargetDefinitionMock.rb"
-
-class UtilsTests < Test::Unit::TestCase
-    def setup
-        @base_path = "~/app/ios"
-        Pathname.pwd!(@base_path)
-    end
-
-    def teardown
-        FileMock.reset()
-        Pod::UI.reset()
-        Pathname.reset()
-        Pod::Config.reset()
-        SysctlChecker.reset()
-        Environment.reset()
-        ENV['RCT_NEW_ARCH_ENABLED'] = '0'
-        ENV['USE_HERMES'] = '1'
-        ENV['USE_FRAMEWORKS'] = nil
-        system_reset_commands
-    end
-
-    # ======================= #
-    # TEST - warnIfNotOnArm64 #
-    # ======================= #
-
-    def test_warnIfNotOnArm64_whenSysctlReturnsNot1_printsNothing
-        # Arrange
-        SysctlChecker.set_call_sysctl_arm64_return_value(23)
-        Environment.set_ruby_platform("something")
-
-        # Act
-        ReactNativePodsUtils.warn_if_not_on_arm64()
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal(Pod::UI.collected_warns, [])
-
-    end
-
-    def test_warnIfNotOnArm64_whenSysctlReturns1AndRubyIncludeArm64_printsNothing
-        # Arrange
-        SysctlChecker.set_call_sysctl_arm64_return_value(1)
-        Environment.set_ruby_platform("arm64-darwin21")
-
-        # Act
-        ReactNativePodsUtils.warn_if_not_on_arm64()
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal(Pod::UI.collected_warns, [])
-    end
-
-    def test_warnIfNotOnArm64_whenSysctlReturns1AndRubyNotIncludeArm64_warns
-        # Arrange
-        SysctlChecker.set_call_sysctl_arm64_return_value(1)
-        Environment.set_ruby_platform("something else")
-
-        # Act
-        ReactNativePodsUtils.warn_if_not_on_arm64()
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, [])
-        assert_equal(Pod::UI.collected_warns, [
-            'Do not use "pod install" from inside Rosetta2 (x86_64 emulation on arm64).',
-            ' - Emulated x86_64 is slower than native arm64',
-            ' - May result in mixed architectures in rubygems (eg: ffi_c.bundle files may be x86_64 with an arm64 interpreter)',
-            'Run "env /usr/bin/arch -arm64 /bin/bash --login" then try again.',
-        ])
-    end
-
-    # ====================== #
-    # TEST - getDefaultFlags #
-    # ====================== #
-    def test_getDefaultFlag_whenOldArchitecture()
-        # Arrange
-        ENV['RCT_NEW_ARCH_ENABLED'] = '0'
-
-        # Act
-        flags = ReactNativePodsUtils.get_default_flags()
-
-        # Assert
-        assert_equal(flags, {
-            :fabric_enabled => false,
-            :hermes_enabled => true,
-            :flipper_configuration => FlipperConfiguration.disabled
-        })
-    end
-
-    def test_getDefaultFlag_whenOldArchitectureButHermesDisabled()
-        # Arrange
-        ENV['RCT_NEW_ARCH_ENABLED'] = '0'
-        ENV['USE_HERMES'] = '0'
-
-        # Act
-        flags = ReactNativePodsUtils.get_default_flags()
-
-        # Assert
-        assert_equal(flags, {
-            :fabric_enabled => false,
-            :hermes_enabled => false,
-            :flipper_configuration => FlipperConfiguration.disabled
-        })
-    end
-
-    def test_getDefaultFlag_whenNewArchitecture()
-        # Arrange
-        ENV['RCT_NEW_ARCH_ENABLED'] = '1'
-
-        # Act
-        flags = ReactNativePodsUtils.get_default_flags()
-
-        # Assert
-        assert_equal(flags, {
-            :fabric_enabled => true,
-            :hermes_enabled => true,
-            :flipper_configuration => FlipperConfiguration.disabled
-        })
-    end
-
-    def test_getDefaultFlag_whenNewArchitectureButHermesDisabled()
-        # Arrange
-        ENV['RCT_NEW_ARCH_ENABLED'] = '1'
-        ENV['USE_HERMES'] = '0'
-
-        # Act
-        flags = ReactNativePodsUtils.get_default_flags()
-
-        # Assert
-        assert_equal(flags, {
-            :fabric_enabled => true,
-            :hermes_enabled => false,
-            :flipper_configuration => FlipperConfiguration.disabled
-        })
-    end
-
-    # ============== #
-    # TEST - has_pod #
-    # ============== #
-    def test_hasPod_whenInstallerDoesNotHavePod_returnFalse
-        # Arrange
-        installer = InstallerMock.new(PodsProjectMock.new([], {"other_pod" => {}}))
-
-        # Act
-        result = ReactNativePodsUtils.has_pod(installer, "some_pod")
-
-        # Assert
-        assert_equal(result, false)
-
-    end
-
-    def test_hasPod_whenInstallerHasPod_returnTrue
-        # Arrange
-        installer = InstallerMock.new(PodsProjectMock.new([], {"some_pod" => {}}))
-
-        # Act
-        result = ReactNativePodsUtils.has_pod(installer, "some_pod")
-
-        # Assert
-        assert_equal(result, true)
-    end
-
-    # ============================ #
-    # Test - Exclude Architectures #
-    # ============================ #
-    def test_excludeArchitectures_whenHermesEngineIsNotIncluded_excludeNothing
-        # Arrange
-        user_project_mock = prepare_empty_user_project_mock()
-        pods_projects_mock = PodsProjectMock.new()
-        installer = InstallerMock.new(PodsProjectMock.new(), [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.exclude_i386_architecture_while_using_hermes(installer)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            assert_equal(config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"], "")
-        end
-        assert_equal(user_project_mock.save_invocation_count, 1)
-        assert_equal(pods_projects_mock.save_invocation_count, 0)
-    end
-
-    def test_excludeArchitectures_whenHermesEngineIsIncluded_excludeI386
-        # Arrange
-        user_project_mock = prepare_empty_user_project_mock()
-        pods_projects_mock = PodsProjectMock.new([], {"hermes-engine" => {}})
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.exclude_i386_architecture_while_using_hermes(installer)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            assert_equal(config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"], "i386")
-        end
-
-        assert_equal(user_project_mock.save_invocation_count, 1)
-        assert_equal(pods_projects_mock.save_invocation_count, 1)
-    end
-
-    # ================= #
-    # Test - Fix Config #
-    # ================= #
-
-    def test_fixLibrarySearchPath_whenThereIsNoSearchPaths_doNothing
-        # Arrange
-        buildConfig = BuildConfigurationMock.new("Debug")
-
-        # Act
-        ReactNativePodsUtils.fix_library_search_path(buildConfig)
-
-        # Assert
-        assert_nil(buildConfig.build_settings["LIBRARY_SEARCH_PATHS"])
-    end
-
-    def test_fixLibrarySearchPath_whenThereAreSearchPathsAndSwiftUnescaped_removesSwift5_5
-        # Arrange
-        buildConfig = BuildConfigurationMock.new("Debug", {"LIBRARY_SEARCH_PATHS" => [
-            "$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)",
-            "\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
-            "$(SDKROOT)/usr/lib/swift"
-        ]})
-
-        # Act
-        ReactNativePodsUtils.fix_library_search_path(buildConfig)
-
-        # Assert
-        assert_equal(buildConfig.build_settings["LIBRARY_SEARCH_PATHS"], ["$(SDKROOT)/usr/lib/swift"])
-    end
-
-    def test_fixLibrarySearchPath_whenThereAreSearchPathsAndSwiftEscaped_removesSwift5_5
-        # Arrange
-        buildConfig = BuildConfigurationMock.new("Debug", {"LIBRARY_SEARCH_PATHS" => [
-            "$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)",
-            "\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
-            "another/path",
-            "\"$(SDKROOT)/usr/lib/swift\""
-        ]})
-
-        # Act
-        ReactNativePodsUtils.fix_library_search_path(buildConfig)
-
-        # Assert
-        assert_equal(buildConfig.build_settings["LIBRARY_SEARCH_PATHS"], ["another/path", "\"$(SDKROOT)/usr/lib/swift\""])
-    end
-
-    def test_fixLibrarySearchPath_whenThereAreSearchPathsAndNoSwift_removesSwift5_5AndAddsSwiftAsFirst
-        # Arrange
-        buildConfig = BuildConfigurationMock.new("Debug", {"LIBRARY_SEARCH_PATHS" => [
-            "another/path"
-        ]})
-
-        # Act
-        ReactNativePodsUtils.fix_library_search_path(buildConfig)
-
-        # Assert
-        assert_equal(buildConfig.build_settings["LIBRARY_SEARCH_PATHS"], ["$(SDKROOT)/usr/lib/swift", "another/path"])
-    end
-
-    # ============================== #
-    # Test - Fix Library Search Path #
-    # ============================== #
-
-    def test_fixLibrarySearchPaths_correctlySetsTheSearchPathsForAllProjects
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget")
-        third_target = prepare_target("ThirdTarget")
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([], {"hermes-engine" => {}}, :native_targets => [
-            third_target
-        ])
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.fix_library_search_paths(installer)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            assert_equal(config.build_settings["LIBRARY_SEARCH_PATHS"], [
-                "$(SDKROOT)/usr/lib/swift", "another/path"
-            ])
-        end
-
-        user_project_mock.native_targets.each do |target|
-            target.build_configurations.each do |config|
-                assert_equal(config.build_settings["LIBRARY_SEARCH_PATHS"], [
-                    "$(SDKROOT)/usr/lib/swift", "another/path"
-                ])
-            end
-        end
-
-        pods_projects_mock.native_targets.each do |target|
-            target.build_configurations.each do |config|
-                assert_equal(config.build_settings["LIBRARY_SEARCH_PATHS"], [
-                    "$(SDKROOT)/usr/lib/swift", "another/path"
-                ])
-            end
-        end
-
-        assert_equal(user_project_mock.save_invocation_count, 1)
-        assert_equal(pods_projects_mock.save_invocation_count, 1)
-    end
-
-    # ===================================== #
-    # Test - Apply Xcode14 React-Core patch #
-    # ===================================== #
-
-    def test_turnOffResourceBundleReactCore_correctlyAppliesPatch
-        # Arrange
-        react_core_target = TargetMock.new('React-Core')
-        react_core_target_native_target = react_core_target
-        react_core_debug_config = prepare_Code_Signing_build_configuration("Debug", "YES")
-        react_core_release_config = prepare_Code_Signing_build_configuration("Release", "YES")
-
-        hermes_engine_target = TargetMock.new('hermes-engine')
-        hermes_engine_target_native_target = hermes_engine_target
-        hermes_engine_debug_config = prepare_Code_Signing_build_configuration("Debug", "NO")
-        hermes_engine_release_config = prepare_Code_Signing_build_configuration("Release", "NO")
-
-        assets_target = TargetMock.new('assets')
-        assets_target_native_target = assets_target
-        assets_debug_config = prepare_Code_Signing_build_configuration("Debug", "YES")
-        assets_release_config = prepare_Code_Signing_build_configuration("Release", "YES")
-
-        installer = InstallerMock.new(pod_target_installation_results: {
-            'React-Core':
-                TargetInstallationResultMock.new(
-                    react_core_target,
-                    react_core_target_native_target,
-                    [TargetMock.new('React-Core',[react_core_debug_config, react_core_release_config])]
-                ),
-            'hermes-engine':
-                TargetInstallationResultMock.new(
-                    hermes_engine_target,
-                    hermes_engine_target_native_target,
-                    [TargetMock.new('hermes-engine',[hermes_engine_debug_config, hermes_engine_release_config])]
-                ),
-            'assets':
-                TargetInstallationResultMock.new(
-                    assets_target,
-                    assets_target_native_target,
-                    [TargetMock.new('assets',[assets_debug_config, assets_release_config])]
-                ),
-        })
-
-        # Act
-        ReactNativePodsUtils.turn_off_resource_bundle_react_core(installer)
-
-        # Assert
-        # these must have changed
-        assert_equal(react_core_debug_config.build_settings["CODE_SIGNING_ALLOWED"], "NO")
-        assert_equal(react_core_release_config.build_settings["CODE_SIGNING_ALLOWED"], "NO")
-        # these needs to stay the same
-        assert_equal(hermes_engine_debug_config.build_settings["CODE_SIGNING_ALLOWED"], "NO")
-        assert_equal(hermes_engine_release_config.build_settings["CODE_SIGNING_ALLOWED"], "NO")
-        assert_equal(assets_debug_config.build_settings["CODE_SIGNING_ALLOWED"], "YES")
-        assert_equal(assets_release_config.build_settings["CODE_SIGNING_ALLOWED"], "YES")
-    end
-
-    # ================================= #
-    # Test - Apply Mac Catalyst Patches #
-    # ================================= #
-
-    def test_applyMacCatalystPatches_correctlyAppliesNecessaryPatches
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget")
-        third_target = prepare_target("ThirdTarget", "com.apple.product-type.bundle")
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([third_target], {"hermes-engine" => {}}, :native_targets => [])
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.apply_mac_catalyst_patches(installer)
-
-        # Assert
-        first_target.build_configurations.each do |config|
-          assert_nil(config.build_settings["CODE_SIGN_IDENTITY[sdk=macosx*]"])
-        end
-
-        second_target.build_configurations.each do |config|
-          assert_nil(config.build_settings["CODE_SIGN_IDENTITY[sdk=macosx*]"])
-        end
-
-        third_target.build_configurations.each do |config|
-          assert_equal(config.build_settings["CODE_SIGN_IDENTITY[sdk=macosx*]"], "-")
-        end
-
-        user_project_mock.native_targets.each do |target|
-            target.build_configurations.each do |config|
-                assert_equal(config.build_settings["DEAD_CODE_STRIPPING"], "YES")
-                assert_equal(config.build_settings["PRESERVE_DEAD_CODE_INITS_AND_TERMS"], "YES")
-                assert_equal(config.build_settings["LIBRARY_SEARCH_PATHS"], ["$(SDKROOT)/usr/lib/swift", "$(SDKROOT)/System/iOSSupport/usr/lib/swift", "$(inherited)"])
-            end
-        end
-
-        assert_equal(user_project_mock.save_invocation_count, 1)
-    end
-
-    # ================================= #
-    # Test - Apply Xcode 15 Patch       #
-    # ================================= #
-
-    def test_applyXcode15Patch_correctlyAppliesNecessaryPatch
-        # Arrange
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget")
-        third_target = TargetMock.new("ThirdTarget", [
-            BuildConfigurationMock.new("Debug", {
-              "GCC_PREPROCESSOR_DEFINITIONS" => '$(inherited) "SomeFlag=1" '
-            }),
-            BuildConfigurationMock.new("Release", {
-              "GCC_PREPROCESSOR_DEFINITIONS" => '$(inherited) "SomeFlag=1" '
-            }),
-        ], nil)
-
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([], {"hermes-engine" => {}}, :native_targets => [
-            third_target
-        ])
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.apply_xcode_15_patch(installer)
-
-        # Assert
-        first_target.build_configurations.each do |config|
-            assert_equal(config.build_settings["GCC_PREPROCESSOR_DEFINITIONS"].strip,
-                '$(inherited) "_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION"'
-            )
-        end
-        second_target.build_configurations.each do |config|
-            assert_equal(config.build_settings["GCC_PREPROCESSOR_DEFINITIONS"].strip,
-                '$(inherited) "_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION"'
-            )
-        end
-        third_target.build_configurations.each do |config|
-            assert_equal(config.build_settings["GCC_PREPROCESSOR_DEFINITIONS"].strip,
-                '$(inherited) "SomeFlag=1" "_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION"'
-            )
-        end
-    end
-
-    # ==================================== #
-    # Test - Set Node_Modules User Setting #
-    # ==================================== #
-
-    def test_setNodeModulesUserSettings_addTheUserSetting
-        # Arrange
-        react_native_path = "react_native/node_modules"
-        user_project_mock = prepare_empty_user_project_mock()
-        pods_projects_mock = PodsProjectMock.new([], {"hermes-engine" => {}})
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.set_node_modules_user_settings(installer, react_native_path)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            assert_equal(config.build_settings["REACT_NATIVE_PATH"], "${PODS_ROOT}/../#{react_native_path}")
-        end
-
-        assert_equal(user_project_mock.save_invocation_count, 1)
-        assert_equal(pods_projects_mock.save_invocation_count, 1)
-        assert_equal(Pod::UI.collected_messages, ["Setting REACT_NATIVE build settings"])
-    end
-
-    # =================================== #
-    # Test - Prepare React Native Project #
-    # =================================== #
-    def test_createXcodeEnvIfMissing_whenItIsPresent_doNothing
-        # Arrange
-        FileMock.mocked_existing_files("/.xcode.env")
-        # Act
-        ReactNativePodsUtils.create_xcode_env_if_missing(file_manager: FileMock)
-        # Assert
-        assert_equal(FileMock.exist_invocation_params, ["/.xcode.env"])
-        assert_equal($collected_commands, [])
-    end
-
-    def test_createXcodeEnvIfMissing_whenItIsNotPresent_createsIt
-        # Arrange
-
-        # Act
-        ReactNativePodsUtils.create_xcode_env_if_missing(file_manager: FileMock)
-        # Assert
-        assert_equal(FileMock.exist_invocation_params, ["/.xcode.env"])
-        assert_equal($collected_commands, ["echo 'export NODE_BINARY=$(command -v node)' > /.xcode.env"])
-    end
-
-    # ============================ #
-    # Test - Detect Use Frameworks #
-    # ============================ #
-    def test_detectUseFrameworks_whenEnvAlreadySet_DoesNothing
-        # Arrange
-        ENV['USE_FRAMEWORKS'] = 'static'
-        target_definition = TargetDefinitionMock.new('something')
-
-        # Act
-        ReactNativePodsUtils.detect_use_frameworks(target_definition)
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, [])
-    end
-
-    def test_detectUseFrameworks_whenEnvNotSetAndNotUsed_setEnvVarToNil
-        # Arrange
-        target_definition = TargetDefinitionMock.new('static library')
-
-        # Act
-        ReactNativePodsUtils.detect_use_frameworks(target_definition)
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, ["Framework build type is static library"])
-        assert_nil(ENV['USE_FRAMEWORKS'])
-    end
-
-    def test_detectUseFrameworks_whenEnvNotSetAndStaticFrameworks_setEnvVarToStatic
-        # Arrange
-        target_definition = TargetDefinitionMock.new('static framework')
-
-        # Act
-        ReactNativePodsUtils.detect_use_frameworks(target_definition)
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, ["Framework build type is static framework"])
-        assert_equal(ENV['USE_FRAMEWORKS'], 'static')
-    end
-
-    def test_detectUseFrameworks_whenEnvNotSetAndDynamicFrameworks_setEnvVarToDynamic
-        # Arrange
-        target_definition = TargetDefinitionMock.new('dynamic framework')
-
-        # Act
-        ReactNativePodsUtils.detect_use_frameworks(target_definition)
-
-        # Assert
-        assert_equal(Pod::UI.collected_messages, ["Framework build type is dynamic framework"])
-        assert_equal(ENV['USE_FRAMEWORKS'], 'dynamic')
-    end
-
-    # ============================ #
-    # Test - Update Search Paths   #
-    # ============================ #
-    def test_updateSearchPaths_whenUseFrameworks_addsSearchPaths
-        # Arrange
-        ENV['USE_FRAMEWORKS'] = 'static'
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget", nil, [
-            DependencyMock.new("RCT-Folly"),
-            DependencyMock.new("React-Codegen"),
-            DependencyMock.new("ReactCommon"),
-            DependencyMock.new("React-RCTFabric"),
-            DependencyMock.new("React-ImageManager"),
-        ])
-        third_target = prepare_target("ThirdTarget", "com.apple.product-type.bundle")
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([third_target], {"hermes-engine" => {}})
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.update_search_paths(installer)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            received_search_path = config.build_settings["HEADER_SEARCH_PATHS"]
-            expected_search_path = "$(inherited) ${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers ${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core ${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers/platform/ios ${PODS_CONFIGURATION_BUILD_DIR}/React-NativeModulesApple/React_NativeModulesApple.framework/Headers ${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios"
-            assert_equal(expected_search_path, received_search_path)
-        end
-
-        installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
-            if pod_name == "SecondTarget"
-                target_installation_result.native_target.build_configurations.each do |config|
-                    received_search_path = config.build_settings["HEADER_SEARCH_PATHS"]
-                    expected_Search_path = "$(inherited) \"$(PODS_ROOT)/RCT-Folly\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/boost\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/RCTFabric.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Graphics/React_graphics.framework/Headers\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\" \"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/imagemanager/platform/ios\""
-                    assert_equal(received_search_path, expected_Search_path)
-                end
-            else
-                target_installation_result.native_target.build_configurations.each do |config|
-                    assert_nil(config.build_settings["HEADER_SEARCH_PATHS"])
-                end
-            end
-        end
-    end
-
-    def test_updateSearchPaths_whenNotUseFrameworks_addsSearchPaths
-        # Arrange
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget")
-        third_target = prepare_target("ThirdTarget", "com.apple.product-type.bundle")
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([third_target], {"hermes-engine" => {}})
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.update_search_paths(installer)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            assert_nil(config.build_settings["HEADER_SEARCH_PATHS"])
-        end
-    end
-
-    # ============================= #
-    # Test - Apply Flags For Fabric #
-    # ============================= #
-    def test_applyFlagsForFabric_whenFabricEnabled_addsTheFlag
-        # Arrange
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget")
-        third_target = prepare_target("ThirdTarget", "com.apple.product-type.bundle")
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([third_target], {"hermes-engine" => {}})
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.apply_flags_for_fabric(installer, fabric_enabled: true)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            received_cflags = config.build_settings["OTHER_CFLAGS"]
-            expected_cflags = "$(inherited) -DRN_FABRIC_ENABLED"
-            assert_equal(received_cflags, expected_cflags)
-        end
-
-    end
-
-    def test_applyFlagsForFabric_whenFabricDisabled_doNothing
-        # Arrange
-        first_target = prepare_target("FirstTarget")
-        second_target = prepare_target("SecondTarget")
-        third_target = prepare_target("ThirdTarget", "com.apple.product-type.bundle")
-        user_project_mock = UserProjectMock.new("a/path", [
-                prepare_config("Debug"),
-                prepare_config("Release"),
-            ],
-            :native_targets => [
-                first_target,
-                second_target
-            ]
-        )
-        pods_projects_mock = PodsProjectMock.new([third_target], {"hermes-engine" => {}})
-        installer = InstallerMock.new(pods_projects_mock, [
-            AggregatedProjectMock.new(user_project_mock)
-        ])
-
-        # Act
-        ReactNativePodsUtils.apply_flags_for_fabric(installer, fabric_enabled: false)
-
-        # Assert
-        user_project_mock.build_configurations.each do |config|
-            assert_equal(config.build_settings["OTHER_CFLAGS"], "$(inherited)")
-        end
-    end
-end
-
-# ===== #
-# UTILS #
-# ===== #
-
-def prepare_empty_user_project_mock
-    return UserProjectMock.new("a/path", [
-        BuildConfigurationMock.new("Debug"),
-        BuildConfigurationMock.new("Release"),
-    ])
-end
-
-def prepare_config(config_name)
-    return BuildConfigurationMock.new(config_name, {"LIBRARY_SEARCH_PATHS" => [
-        "$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)",
-        "\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
-        "another/path",
-    ]})
-end
-
-def prepare_target(name, product_type = nil, dependencies = [])
-  return TargetMock.new(name, [
-      prepare_config("Debug"),
-      prepare_config("Release")
-  ], product_type, dependencies)
-end
-
-def prepare_Code_Signing_build_configuration(name, param)
-    return BuildConfigurationMock.new(name, {
-        "CODE_SIGNING_ALLOWED" => param
-    })
-end
diff --git a/node_modules/react-native/scripts/cocoapods/codegen.rb b/node_modules/react-native/scripts/cocoapods/codegen.rb
index 56d120f..f3c214d 100644
--- a/node_modules/react-native/scripts/cocoapods/codegen.rb
+++ b/node_modules/react-native/scripts/cocoapods/codegen.rb
@@ -5,25 +5,23 @@
 
 # It builds the codegen CLI if it is not present
 #
-# Parameters:
-# - react_native_path: the path to the react native installation
-# - relative_installation_root: the path to the relative installation root of the pods
-# - dir_manager: a class that implements the `Dir` interface. Defaults to `Dir`, the Dependency can be injected for testing purposes.
+# @parameter react_native_path: the path to the react native installation
+# @parameter relative_installation_root: the path to the relative installation root of the pods
 # @throws an error if it could not find the codegen folder.
-def build_codegen!(react_native_path, relative_installation_root, dir_manager: Dir)
-    codegen_repo_path = "#{relative_installation_root}/#{react_native_path}/../react-native-codegen";
-    codegen_npm_path = "#{relative_installation_root}/#{react_native_path}/../@react-native/codegen";
+def build_codegen!(react_native_path, relative_installation_root)
+    codegen_repo_path = "#{relative_installation_root}/#{react_native_path}/packages/react-native-codegen";
+    codegen_npm_path = "#{relative_installation_root}/#{react_native_path}/../react-native-codegen";
     codegen_cli_path = ""
 
-    if dir_manager.exist?(codegen_repo_path)
+    if Dir.exist?(codegen_repo_path)
       codegen_cli_path = codegen_repo_path
-    elsif dir_manager.exist?(codegen_npm_path)
+    elsif Dir.exist?(codegen_npm_path)
       codegen_cli_path = codegen_npm_path
     else
-      raise "[codegen] Could not find react-native-codegen."
+      raise "[codegen] Couldn't not find react-native-codegen."
     end
 
-    if !dir_manager.exist?("#{codegen_cli_path}/lib")
+    if !Dir.exist?("#{codegen_cli_path}/lib")
       Pod::UI.puts "[Codegen] building #{codegen_cli_path}."
       system("#{codegen_cli_path}/scripts/oss/build.sh")
     end
@@ -31,28 +29,26 @@ def build_codegen!(react_native_path, relative_installation_root, dir_manager: D
 
 # It generates an empty `ThirdPartyProvider`, required by Fabric to load the components
 #
-# Parameters:
-# - react_native_path: path to the react native framework
-# - new_arch_enabled: whether the New Architecture is enabled or not
-# - dir_manager: a class that implements the `Dir` interface. Defaults to `Dir`, the Dependency can be injected for testing purposes.
-# - file_manager: a class that implements the `File` interface. Defaults to `File`, the Dependency can be injected for testing purposes.
-def checkAndGenerateEmptyThirdPartyProvider!(react_native_path, new_arch_enabled, dir_manager: Dir, file_manager: File)
+# @parameter react_native_path: path to the react native framework
+# @parameter new_arch_enabled: whether the New Architecture is enabled or not
+# @parameter codegen_output_dir: the output directory for the codegen
+def checkAndGenerateEmptyThirdPartyProvider!(react_native_path, new_arch_enabled, codegen_output_dir)
     return if new_arch_enabled
 
     relative_installation_root = Pod::Config.instance.installation_root.relative_path_from(Pathname.pwd)
 
-    output_dir = "#{react_native_path}/React/Fabric"
+    output_dir = "#{relative_installation_root}/#{codegen_output_dir}"
 
     provider_h_path = "#{output_dir}/RCTThirdPartyFabricComponentsProvider.h"
-    provider_cpp_path ="#{output_dir}/RCTThirdPartyFabricComponentsProvider.mm"
+    provider_cpp_path ="#{output_dir}/RCTThirdPartyFabricComponentsProvider.cpp"
 
-    if(!file_manager.exist?(provider_h_path) || !file_manager.exist?(provider_cpp_path))
+    if(!File.exist?(provider_h_path) || !File.exist?(provider_cpp_path))
         # build codegen
-        build_codegen!(react_native_path, relative_installation_root, dir_manager: dir_manager)
+        build_codegen!(react_native_path, relative_installation_root)
 
         # Just use a temp empty schema list.
         temp_schema_list_path = "#{output_dir}/tmpSchemaList.txt"
-        file_manager.open(temp_schema_list_path, 'w') do |f|
+        File.open(temp_schema_list_path, 'w') do |f|
             f.write('[]')
             f.fsync
         end
@@ -66,7 +62,7 @@ def checkAndGenerateEmptyThirdPartyProvider!(react_native_path, new_arch_enabled
             "--schemaListPath", temp_schema_list_path,
             "--outputDir", "#{output_dir}"
         ])
-        file_manager.delete(temp_schema_list_path) if file_manager.exist?(temp_schema_list_path)
+        File.delete(temp_schema_list_path) if File.exist?(temp_schema_list_path)
     end
 end
 
diff --git a/node_modules/react-native/scripts/cocoapods/codegen_utils.rb b/node_modules/react-native/scripts/cocoapods/codegen_utils.rb
index 5bff5c4..a624b51 100644
--- a/node_modules/react-native/scripts/cocoapods/codegen_utils.rb
+++ b/node_modules/react-native/scripts/cocoapods/codegen_utils.rb
@@ -37,8 +37,7 @@ class CodegenUtils
     # Parameters
     # - spec: the cocoapod specs
     # - codegen_output_dir: the output directory for the codegen
-    # - file_manager: a class that implements the `File` interface. Defaults to `File`, the Dependency can be injected for testing purposes.
-    def generate_react_codegen_podspec!(spec, codegen_output_dir, file_manager: File)
+    def generate_react_codegen_podspec!(spec, codegen_output_dir)
         # This podspec file should only be create once in the session/pod install.
         # This happens when multiple targets are calling use_react_native!.
         if @@REACT_CODEGEN_PODSPEC_GENERATED
@@ -50,10 +49,10 @@ class CodegenUtils
         output_dir = "#{relative_installation_root}/#{codegen_output_dir}"
         Pod::Executable.execute_command("mkdir", ["-p", output_dir]);
 
-        podspec_path = file_manager.join(output_dir, 'React-Codegen.podspec.json')
+        podspec_path = File.join(output_dir, 'React-Codegen.podspec.json')
         Pod::UI.puts "[Codegen] Generating #{podspec_path}"
 
-        file_manager.open(podspec_path, 'w') do |f|
+        File.open(podspec_path, 'w') do |f|
           f.write(spec.to_json)
           f.fsync
         end
@@ -68,40 +67,13 @@ class CodegenUtils
     # - fabric_enabled: whether fabric is enabled or not.
     # - hermes_enabled: whether hermes is enabled or not.
     # - script_phases: whether we want to add some build script phases or not.
-    # - file_manager: a class that implements the `File` interface. Defaults to `File`, the Dependency can be injected for testing purposes.
-    def get_react_codegen_spec(package_json_file, folly_version: '2021.07.22.00', fabric_enabled: false, hermes_enabled: true, script_phases: nil, file_manager: File)
-        package = JSON.parse(file_manager.read(package_json_file))
+    def get_react_codegen_spec(package_json_file, folly_version: '2021.07.22.00', fabric_enabled: false, hermes_enabled: true, script_phases: nil)
+        package = JSON.parse(File.read(package_json_file))
         version = package['version']
-        new_arch_disabled = ENV['RCT_NEW_ARCH_ENABLED'] != "1"
-        use_frameworks = ENV['USE_FRAMEWORKS'] != nil
+
         folly_compiler_flags = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -Wno-comma -Wno-shorten-64-to-32'
         boost_compiler_flags = '-Wno-documentation'
 
-        header_search_paths = [
-          "\"$(PODS_ROOT)/boost\"",
-          "\"$(PODS_ROOT)/RCT-Folly\"",
-          "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
-          "\"$(PODS_ROOT)/Headers/Private/React-Fabric\"",
-          "\"$(PODS_ROOT)/Headers/Private/React-RCTFabric\"",
-        ]
-        framework_search_paths = []
-
-        if use_frameworks
-          header_search_paths.concat([
-            "\"$(PODS_ROOT)/DoubleConversion\"",
-            "\"$(PODS_TARGET_SRCROOT)\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-Fabric/React_Fabric.framework/Headers\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-NativeModulesApple/React_NativeModulesApple.framework/Headers\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-RCTFabric/RCTFabric.framework/Headers\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-debug/React_debug.framework/Headers\"",
-            "\"$(PODS_CONFIGURATION_BUILD_DIR)/React-utils/React_utils.framework/Headers\"",
-          ])
-        end
-
         spec = {
           'name' => "React-Codegen",
           'version' => version,
@@ -116,11 +88,17 @@ class CodegenUtils
             'ios' => min_ios_version_supported,
           },
           'source_files' => "**/*.{h,mm,cpp}",
-          'pod_target_xcconfig' => {
-            "HEADER_SEARCH_PATHS" => header_search_paths.join(' '),
-            "FRAMEWORK_SEARCH_PATHS" => framework_search_paths
+          'pod_target_xcconfig' => { "HEADER_SEARCH_PATHS" =>
+            [
+              "\"$(PODS_ROOT)/boost\"",
+              "\"$(PODS_ROOT)/RCT-Folly\"",
+              "\"${PODS_ROOT}/Headers/Public/React-Codegen/react/renderer/components\"",
+              "\"$(PODS_ROOT)/Headers/Private/React-Fabric\"",
+              "\"$(PODS_ROOT)/Headers/Private/React-RCTFabric\"",
+            ].join(' ')
           },
           'dependencies': {
+            "FBReactNativeSpec": [],
             "React-jsiexecutor": [],
             "RCT-Folly": [],
             "RCTRequired": [],
@@ -128,25 +106,20 @@ class CodegenUtils
             "React-Core": [],
             "React-jsi": [],
             "ReactCommon/turbomodule/bridging": [],
-            "ReactCommon/turbomodule/core": [],
-            "React-NativeModulesApple": [],
-            "glog": [],
-            "DoubleConversion": [],
+            "ReactCommon/turbomodule/core": []
           }
         }
 
         if fabric_enabled
           spec[:'dependencies'].merge!({
             'React-graphics': [],
-            'React-Fabric': [],
-            'React-debug': [],
-            'React-utils': [],
+            'React-rncore':  [],
           });
         end
 
         if hermes_enabled
           spec[:'dependencies'].merge!({
-            'hermes-engine': [],
+            'hermes-engine': [], # let React Native decide which version of Hermes Engine to be used. Otherwise, this can create conflicts.
           });
         else
           spec[:'dependencies'].merge!({
@@ -154,13 +127,6 @@ class CodegenUtils
           });
         end
 
-        if new_arch_disabled
-          spec[:dependencies].merge!({
-            'React-rncore': [],
-            'FBReactNativeSpec': [],
-          })
-        end
-
         if script_phases
           Pod::UI.puts "[Codegen] Adding script_phases to React-Codegen."
           spec[:'script_phases'] = script_phases
@@ -174,16 +140,15 @@ class CodegenUtils
     # Parameters
     # - config_path: a path to the configuration file
     # - config_key: the codegen configuration key
-    # - file_manager: a class that implements the `File` interface. Defaults to `File`, the Dependency can be injected for testing purposes.
     #
     # Returns: the list of dependencies as extracted from the package.json
-    def get_codegen_config_from_file(config_path, config_key, file_manager: File)
+    def get_codegen_config_from_file(config_path, config_key)
       empty = {}
-      if !file_manager.exist?(config_path)
+      if !File.exist?(config_path)
         return empty
       end
 
-      config = JSON.parse(file_manager.read(config_path))
+      config = JSON.parse(File.read(config_path))
       return config[config_key] ? config[config_key] : empty
     end
 
@@ -192,20 +157,19 @@ class CodegenUtils
     # Parameters
     # - app_codegen_config: an object that contains the configurations
     # - app_path: path to the app
-    # - file_manager: a class that implements the `File` interface. Defaults to `File`, the Dependency can be injected for testing purposes.
     #
     # Returns: the list of files that needs to be used by Codegen
-    def get_list_of_js_specs(app_codegen_config, app_path, file_manager: File)
+    def get_list_of_js_specs(app_codegen_config, app_path)
       file_list = []
 
       if app_codegen_config['libraries'] then
         Pod::UI.warn '[Deprecated] You are using the old `libraries` array to list all your codegen.\nThis method will be removed in the future.\nUpdate your `package.json` with a single object.'
         app_codegen_config['libraries'].each do |library|
-          library_dir = file_manager.join(app_path, library['jsSrcsDir'])
+          library_dir = File.join(app_path, library['jsSrcsDir'])
           file_list.concat(Finder.find_codegen_file(library_dir))
         end
       elsif app_codegen_config['jsSrcsDir'] then
-        codegen_dir = file_manager.join(app_path, app_codegen_config['jsSrcsDir'])
+        codegen_dir = File.join(app_path, app_codegen_config['jsSrcsDir'])
         file_list.concat (Finder.find_codegen_file(codegen_dir))
       end
 
@@ -224,7 +188,6 @@ class CodegenUtils
     # - config_key: the configuration key to use in the package.json for the Codegen
     # - codegen_utils: an object which exposes utilities functions for the codegen
     # - script_phase_extractor: an object that is able to extract the Xcode Script Phases for React Native
-    # - file_manager: a class that implements the `File` interface. Defaults to `File`, the Dependency can be injected for testing purposes.
     #
     # Return: an object containing the script phase
     def get_react_codegen_script_phases(
@@ -235,11 +198,10 @@ class CodegenUtils
       react_native_path: "../node_modules/react-native",
       config_key: 'codegenConfig',
       codegen_utils: CodegenUtils.new(),
-      script_phase_extractor: CodegenScriptPhaseExtractor.new(),
-      file_manager: File
+      script_phase_extractor: CodegenScriptPhaseExtractor.new()
       )
       if !app_path
-        Pod::UI.warn '[Codegen] error: app_path is required to use codegen discovery.'
+        Pod::UI.warn '[Codegen] error: app_path is requried to use codegen discovery.'
         abort
       end
 
@@ -254,7 +216,7 @@ class CodegenUtils
       # Generate input files for in-app libaraies which will be used to check if the script needs to be run.
       # TODO: Ideally, we generate the input_files list from generate-codegen-artifacts.js and read the result here.
       #       Or, generate this podspec in generate-codegen-artifacts.js as well.
-      app_package_path = file_manager.join(app_path, 'package.json')
+      app_package_path = File.join(app_path, 'package.json')
       app_codegen_config = codegen_utils.get_codegen_config_from_file(app_package_path, config_key)
       input_files = codegen_utils.get_list_of_js_specs(app_codegen_config, app_path)
 
@@ -285,8 +247,7 @@ class CodegenUtils
       codegen_output_dir: 'build/generated/ios',
       config_key: 'codegenConfig',
       folly_version: '2021.07.22.00',
-      codegen_utils: CodegenUtils.new(),
-      file_manager: File
+      codegen_utils: CodegenUtils.new()
       )
       return if codegen_disabled
 
@@ -313,7 +274,7 @@ class CodegenUtils
         :config_key => config_key
       )
       react_codegen_spec = codegen_utils.get_react_codegen_spec(
-        file_manager.join(relative_installation_root, react_native_path, "package.json"),
+        File.join(relative_installation_root, react_native_path, "package.json"),
         :folly_version => folly_version,
         :fabric_enabled => fabric_enabled,
         :hermes_enabled => hermes_enabled,
@@ -345,26 +306,23 @@ class CodegenUtils
       return @@CLEANUP_DONE
     end
 
-    def self.clean_up_build_folder(rn_path, app_path, ios_folder, codegen_dir, dir_manager: Dir, file_manager: File)
+    def self.clean_up_build_folder(app_path, ios_folder, codegen_dir)
       return if CodegenUtils.cleanup_done()
       CodegenUtils.set_cleanup_done(true)
 
-      codegen_path = file_manager.join(app_path, ios_folder, codegen_dir)
-      return if !dir_manager.exist?(codegen_path)
+      codegen_path = File.join(app_path, ios_folder, codegen_dir)
+      return if !Dir.exist?(codegen_path)
 
-      FileUtils.rm_rf(dir_manager.glob("#{codegen_path}/*"))
-      base_provider_path = file_manager.join(rn_path, 'React', 'Fabric', 'RCTThirdPartyFabricComponentsProvider')
-      FileUtils.rm_rf("#{base_provider_path}.h")
-      FileUtils.rm_rf("#{base_provider_path}.mm")
-      CodegenUtils.assert_codegen_folder_is_empty(app_path, ios_folder, codegen_dir, dir_manager: dir_manager, file_manager: file_manager)
+      FileUtils.rm_rf(Dir.glob("#{codegen_path}/*"))
+      CodegenUtils.assert_codegen_folder_is_empty(app_path, ios_folder, codegen_dir)
     end
 
     # Need to split this function from the previous one to be able to test it properly.
-    def self.assert_codegen_folder_is_empty(app_path, ios_folder, codegen_dir, dir_manager: Dir, file_manager: File)
+    def self.assert_codegen_folder_is_empty(app_path, ios_folder, codegen_dir)
       # double check that the files have actually been deleted.
       # Emit an error message if not.
-      codegen_path = file_manager.join(app_path, ios_folder, codegen_dir)
-      if dir_manager.exist?(codegen_path) && dir_manager.glob("#{codegen_path}/*").length() != 0
+      codegen_path = File.join(app_path, ios_folder, codegen_dir)
+      if Dir.exist?(codegen_path) && Dir.glob("#{codegen_path}/*").length() != 0
         Pod::UI.warn "Unable to remove the content of #{codegen_path} folder. Please run rm -rf #{codegen_path} and try again."
         abort
       end
diff --git a/node_modules/react-native/scripts/cocoapods/fabric.rb b/node_modules/react-native/scripts/cocoapods/fabric.rb
index 1bd3cb2..b694bb6 100644
--- a/node_modules/react-native/scripts/cocoapods/fabric.rb
+++ b/node_modules/react-native/scripts/cocoapods/fabric.rb
@@ -7,10 +7,10 @@
 # It sets up the Fabric dependencies.
 #
 # @parameter react_native_path: relative path to react-native
-def setup_fabric!(react_native_path: "../node_modules/react-native", new_arch_enabled: false)
+def setup_fabric!(react_native_path: "../node_modules/react-native")
     pod 'React-Fabric', :path => "#{react_native_path}/ReactCommon"
+    pod 'React-rncore', :path => "#{react_native_path}/ReactCommon"
     pod 'React-graphics', :path => "#{react_native_path}/ReactCommon/react/renderer/graphics"
     pod 'React-RCTFabric', :path => "#{react_native_path}/React", :modular_headers => true
-    pod 'React-ImageManager', :path => "#{react_native_path}/ReactCommon/react/renderer/imagemanager/platform/ios"
     pod 'RCT-Folly/Fabric', :podspec => "#{react_native_path}/third-party-podspecs/RCT-Folly.podspec"
 end
diff --git a/node_modules/react-native/scripts/cocoapods/flipper.rb b/node_modules/react-native/scripts/cocoapods/flipper.rb
index 73371c1..5bf0d01 100644
--- a/node_modules/react-native/scripts/cocoapods/flipper.rb
+++ b/node_modules/react-native/scripts/cocoapods/flipper.rb
@@ -6,13 +6,14 @@
 # Default versions of Flipper and related dependencies.
 # Update this map to bump the dependencies.
 $flipper_default_versions = {
-    'Flipper' => '0.182.0',
+    'Flipper' => '0.125.0',
     'Flipper-Boost-iOSX' => '1.76.0.1.11',
     'Flipper-DoubleConversion' => '3.2.0.1',
     'Flipper-Fmt' => '7.1.7',
     'Flipper-Folly' => '2.6.10',
     'Flipper-Glog' => '0.5.0.5',
     'Flipper-PeerTalk' => '0.0.4',
+    'Flipper-RSocket' => '1.4.3',
     'OpenSSL-Universal' => '1.1.1100',
 }
 
@@ -38,6 +39,7 @@ def use_flipper_pods(versions = {}, configurations: ['Debug'])
     versions['Flipper-Folly'] ||= $flipper_default_versions['Flipper-Folly']
     versions['Flipper-Glog'] ||= $flipper_default_versions['Flipper-Glog']
     versions['Flipper-PeerTalk'] ||= $flipper_default_versions['Flipper-PeerTalk']
+    versions['Flipper-RSocket'] ||= $flipper_default_versions['Flipper-RSocket']
     versions['OpenSSL-Universal'] ||= $flipper_default_versions['OpenSSL-Universal']
     pod 'FlipperKit', versions['Flipper'], :configurations => configurations
     pod 'FlipperKit/FlipperKitLayoutPlugin', versions['Flipper'], :configurations => configurations
@@ -53,6 +55,7 @@ def use_flipper_pods(versions = {}, configurations: ['Debug'])
     pod 'Flipper-Folly', versions['Flipper-Folly'], :configurations => configurations
     pod 'Flipper-Glog', versions['Flipper-Glog'], :configurations => configurations
     pod 'Flipper-PeerTalk', versions['Flipper-PeerTalk'], :configurations => configurations
+    pod 'Flipper-RSocket', versions['Flipper-RSocket'], :configurations => configurations
     pod 'FlipperKit/Core', versions['Flipper'], :configurations => configurations
     pod 'FlipperKit/CppBridge', versions['Flipper'], :configurations => configurations
     pod 'FlipperKit/FBCxxFollyDynamicConvert', versions['Flipper'], :configurations => configurations
@@ -77,8 +80,8 @@ def flipper_post_install(installer)
             end
         end
 
-        # Enable flipper for React-RCTAppDelegate Debug configuration
-        if target.name == 'React-RCTAppDelegate'
+        # Enable flipper for React-Core Debug configuration
+        if target.name == 'React-Core'
             target.build_configurations.each do |config|
                 if config.debug?
                     config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = ['$(inherited)', 'FB_SONARKIT_ENABLED=1']
diff --git a/node_modules/react-native/scripts/cocoapods/jsengine.rb b/node_modules/react-native/scripts/cocoapods/jsengine.rb
index 625bd27..6551ef3 100644
--- a/node_modules/react-native/scripts/cocoapods/jsengine.rb
+++ b/node_modules/react-native/scripts/cocoapods/jsengine.rb
@@ -30,12 +30,52 @@ def setup_hermes!(react_native_path: "../node_modules/react-native", fabric_enab
     abort unless prep_status == 0
 
     pod 'React-jsi', :path => "#{react_native_path}/ReactCommon/jsi"
-    # This `:tag => hermestag` below is only to tell CocoaPods to update hermes-engine when React Native version changes.
-    # We have custom logic to compute the source for hermes-engine. See sdks/hermes-engine/*
-    hermestag_file = File.join(react_native_path, "sdks", ".hermesversion")
-    hermestag = File.exist?(hermestag_file) ? File.read(hermestag_file).strip : ''
-
-    pod 'hermes-engine', :podspec => "#{react_native_path}/sdks/hermes-engine/hermes-engine.podspec", :tag => hermestag
+    pod 'hermes-engine', :podspec => "#{react_native_path}/sdks/hermes-engine/hermes-engine.podspec"
     pod 'React-hermes', :path => "#{react_native_path}/ReactCommon/hermes"
     pod 'libevent', '~> 2.1.12'
 end
+
+def add_copy_hermes_framework_script_phase(installer, react_native_path)
+    utils_dir = File.join(react_native_path, "sdks", "hermes-engine", "utils")
+    phase_name = "[RN] Copy Hermes Framework"
+    project = installer.generated_aggregate_targets.first.user_project
+    target = project.targets.first
+    if target.shell_script_build_phases.none? { |phase| phase.name == phase_name }
+        phase = target.new_shell_script_build_phase(phase_name)
+        phase.shell_script = ". #{utils_dir}/copy-hermes-xcode.sh"
+        project.save()
+    end
+end
+
+def remove_copy_hermes_framework_script_phase(installer, react_native_path)
+    utils_dir = File.join(react_native_path, "sdks", "hermes-engine", "utils")
+    phase_name = "[RN] Copy Hermes Framework"
+    project = installer.generated_aggregate_targets.first.user_project
+    target = project.native_targets.first
+    target.shell_script_build_phases.each do |phase|
+        if phase.name == phase_name
+            target.build_phases.delete(phase)
+        end
+    end
+    project.save()
+end
+
+def remove_hermesc_build_dir(react_native_path)
+    %x(rm -rf #{react_native_path}/sdks/hermes-engine/build_host_hermesc)
+end
+
+def is_building_hermes_from_source(react_native_version, react_native_path)
+    if ENV['HERMES_ENGINE_TARBALL_PATH'] != nil
+        return false
+    end
+
+    isInMain = react_native_version.include?('1000.0.0')
+
+    hermestag_file = File.join(react_native_path, "sdks", ".hermesversion")
+    isInCI = ENV['REACT_NATIVE_CI'] === 'true'
+
+    isReleaseBranch = File.exist?(hermestag_file) && isInCI
+
+
+    return isInMain || isReleaseBranch
+end
diff --git a/node_modules/react-native/scripts/cocoapods/local_podspec_patch.rb b/node_modules/react-native/scripts/cocoapods/local_podspec_patch.rb
index 1f7fea8..4d54815 100644
--- a/node_modules/react-native/scripts/cocoapods/local_podspec_patch.rb
+++ b/node_modules/react-native/scripts/cocoapods/local_podspec_patch.rb
@@ -7,19 +7,19 @@
 # This is necessary because local podspec dependencies must be otherwise manually updated.
 module LocalPodspecPatch
     # Returns local podspecs whose versions differ from the one in the `react-native` package.
-    def self.pods_to_update(react_native_path: "../node_modules/react-native", dir_manager: Dir, file_manager: File)
-        @@local_podspecs = dir_manager.glob("#{react_native_path}/third-party-podspecs/*").map { |file| file_manager.basename(file, ".podspec") }
+    def self.pods_to_update(react_native_path: "../node_modules/react-native")
+        @@local_podspecs = Dir.glob("#{react_native_path}/third-party-podspecs/*").map { |file| File.basename(file, ".podspec") }
         @@local_podspecs = @@local_podspecs.select do |podspec_name|
 
             # Read local podspec to determine the cached version
-            local_podspec_path = file_manager.join(
-                dir_manager.pwd, "Pods/Local Podspecs/#{podspec_name}.podspec.json"
+            local_podspec_path = File.join(
+                Dir.pwd, "Pods/Local Podspecs/#{podspec_name}.podspec.json"
             )
 
             # Local podspec cannot be outdated if it does not exist, yet
-            next unless file_manager.exist?(local_podspec_path)
+            next unless File.exist?(local_podspec_path)
 
-            local_podspec = file_manager.read(local_podspec_path)
+            local_podspec = File.read(local_podspec_path)
             local_podspec_json = JSON.parse(local_podspec)
             local_version = local_podspec_json["version"]
 
diff --git a/node_modules/react-native/scripts/cocoapods/new_architecture.rb b/node_modules/react-native/scripts/cocoapods/new_architecture.rb
index 1eb04c2..90141cd 100644
--- a/node_modules/react-native/scripts/cocoapods/new_architecture.rb
+++ b/node_modules/react-native/scripts/cocoapods/new_architecture.rb
@@ -42,18 +42,11 @@ class NewArchitectureHelper
         unless is_new_arch_enabled
             return
         end
-        ndebug_flag = " -DNDEBUG"
+
         # Add RCT_NEW_ARCH_ENABLED to Target pods xcconfig
         installer.aggregate_targets.each do |aggregate_target|
             aggregate_target.xcconfigs.each do |config_name, config_file|
                 config_file.attributes['OTHER_CPLUSPLUSFLAGS'] = @@new_arch_cpp_flags
-
-                if config_name == "Release"
-                    config_file.attributes['OTHER_CPLUSPLUSFLAGS'] = config_file.attributes['OTHER_CPLUSPLUSFLAGS'] + ndebug_flag
-                    other_cflags = config_file.attributes['OTHER_CFLAGS'] != nil ? config_file.attributes['OTHER_CFLAGS'] : "$(inherited)"
-                    config_file.attributes['OTHER_CFLAGS'] = other_cflags + ndebug_flag
-                end
-
                 xcconfig_path = aggregate_target.xcconfig_path(config_name)
                 config_file.save_as(xcconfig_path)
             end
@@ -66,15 +59,6 @@ class NewArchitectureHelper
                     config.build_settings['OTHER_CPLUSPLUSFLAGS'] = @@new_arch_cpp_flags
                 end
             end
-
-            target_installation_result.native_target.build_configurations.each do |config|
-                if config.name == "Release"
-                    current_flags = config.build_settings['OTHER_CPLUSPLUSFLAGS'] != nil ? config.build_settings['OTHER_CPLUSPLUSFLAGS'] : "$(inherited)"
-                    config.build_settings['OTHER_CPLUSPLUSFLAGS'] = current_flags + ndebug_flag
-                    current_cflags = config.build_settings['OTHER_CFLAGS'] != nil ? config.build_settings['OTHER_CFLAGS'] : "$(inherited)"
-                    config.build_settings['OTHER_CFLAGS'] = current_cflags + ndebug_flag
-                end
-            end
         end
     end
 
@@ -87,23 +71,10 @@ class NewArchitectureHelper
         current_config = hash["pod_target_xcconfig"] != nil ? hash["pod_target_xcconfig"] : {}
         current_headers = current_config["HEADER_SEARCH_PATHS"] != nil ? current_config["HEADER_SEARCH_PATHS"] : ""
 
-        header_search_paths = ["\"$(PODS_ROOT)/boost\""]
-        if ENV['USE_FRAMEWORKS']
-            header_search_paths << "\"$(PODS_ROOT)/DoubleConversion\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/RCTFabric.framework/Headers\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-utils/React_utils.framework/Headers\""
-            header_search_paths << "\"${PODS_CONFIGURATION_BUILD_DIR}/React-debug/React_debug.framework/Headers\""
-        end
-        header_search_paths_string = header_search_paths.join(" ")
+        boost_search_path = "\"$(PODS_ROOT)/boost\""
+
         spec.compiler_flags = compiler_flags.empty? ? @@folly_compiler_flags : "#{compiler_flags} #{@@folly_compiler_flags}"
-        current_config["HEADER_SEARCH_PATHS"] = current_headers.empty? ?
-            header_search_paths_string :
-            "#{current_headers} #{header_search_paths_string}"
+        current_config["HEADER_SEARCH_PATHS"] = current_headers.empty? ? boost_search_path : "#{current_headers} #{boost_search_path}"
         current_config["CLANG_CXX_LANGUAGE_STANDARD"] = @@cplusplus_version
 
 
@@ -119,18 +90,6 @@ class NewArchitectureHelper
             spec.dependency "RCTTypeSafety"
             spec.dependency "ReactCommon/turbomodule/bridging"
             spec.dependency "ReactCommon/turbomodule/core"
-            spec.dependency "React-NativeModulesApple"
-            spec.dependency "Yoga"
-            spec.dependency "React-Fabric"
-            spec.dependency "React-graphics"
-            spec.dependency "React-utils"
-            spec.dependency "React-debug"
-
-            if ENV["USE_HERMES"] == nil || ENV["USE_HERMES"] == "1"
-                spec.dependency "hermes-engine"
-            else
-                spec.dependency "React-jsi"
-            end
         end
 
         spec.pod_target_xcconfig = current_config
diff --git a/node_modules/react-native/scripts/cocoapods/utils.rb b/node_modules/react-native/scripts/cocoapods/utils.rb
index 44b2579..df23da4 100644
--- a/node_modules/react-native/scripts/cocoapods/utils.rb
+++ b/node_modules/react-native/scripts/cocoapods/utils.rb
@@ -54,10 +54,14 @@ class ReactNativePodsUtils
     end
 
     def self.exclude_i386_architecture_while_using_hermes(installer)
-        projects = self.extract_projects(installer)
+        projects = installer.aggregate_targets
+            .map{ |t| t.user_project }
+            .uniq{ |p| p.path }
+            .push(installer.pods_project)
+
 
         # Hermes does not support `i386` architecture
-        excluded_archs_default = self.has_pod(installer, 'hermes-engine') ? "i386" : ""
+        excluded_archs_default = ReactNativePodsUtils.has_pod(installer, 'hermes-engine') ? "i386" : ""
 
         projects.each do |project|
             project.build_configurations.each do |config|
@@ -70,7 +74,10 @@ class ReactNativePodsUtils
 
     def self.set_node_modules_user_settings(installer, react_native_path)
         Pod::UI.puts("Setting REACT_NATIVE build settings")
-        projects = self.extract_projects(installer)
+        projects = installer.aggregate_targets
+            .map{ |t| t.user_project }
+            .uniq{ |p| p.path }
+            .push(installer.pods_project)
 
         projects.each do |project|
             project.build_configurations.each do |config|
@@ -82,15 +89,18 @@ class ReactNativePodsUtils
     end
 
     def self.fix_library_search_paths(installer)
-        projects = self.extract_projects(installer)
+        projects = installer.aggregate_targets
+            .map{ |t| t.user_project }
+            .uniq{ |p| p.path }
+            .push(installer.pods_project)
 
         projects.each do |project|
             project.build_configurations.each do |config|
-                self.fix_library_search_path(config)
+                ReactNativePodsUtils.fix_library_search_path(config)
             end
             project.native_targets.each do |target|
                 target.build_configurations.each do |config|
-                    self.fix_library_search_path(config)
+                    ReactNativePodsUtils.fix_library_search_path(config)
                 end
             end
             project.save()
@@ -133,15 +143,6 @@ class ReactNativePodsUtils
         end
     end
 
-    def self.apply_flags_for_fabric(installer, fabric_enabled: false)
-        fabric_flag = "-DRN_FABRIC_ENABLED"
-        if fabric_enabled
-            self.add_compiler_flag_to_project(installer, fabric_flag)
-        else
-            self.remove_compiler_flag_from_project(installer, fabric_flag)
-        end
-    end
-
     private
 
     def self.fix_library_search_path(config)
@@ -165,10 +166,10 @@ class ReactNativePodsUtils
         end
     end
 
-    def self.create_xcode_env_if_missing(file_manager: File)
+    def self.create_xcode_env_if_missing
         relative_path = Pod::Config.instance.installation_root.relative_path_from(Pathname.pwd)
-        file_path = file_manager.join(relative_path, '.xcode.env')
-        if file_manager.exist?(file_path)
+        file_path = File.join(relative_path, '.xcode.env')
+        if File.exist?(file_path)
             return
         end
 
@@ -196,232 +197,4 @@ class ReactNativePodsUtils
             ENV['USE_FRAMEWORKS'] = nil
         end
     end
-
-    def self.update_search_paths(installer)
-        return if ENV['USE_FRAMEWORKS'] == nil
-
-        projects = self.extract_projects(installer)
-
-        projects.each do |project|
-            project.build_configurations.each do |config|
-
-                header_search_paths = config.build_settings["HEADER_SEARCH_PATHS"] ||= "$(inherited)"
-
-                header_search_paths = self.add_search_path_if_not_included(header_search_paths, "${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers")
-                header_search_paths = self.add_search_path_if_not_included(header_search_paths, "${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core")
-                header_search_paths = self.add_search_path_if_not_included(header_search_paths, "${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers/platform/ios")
-                header_search_paths = self.add_search_path_if_not_included(header_search_paths, "${PODS_CONFIGURATION_BUILD_DIR}/React-NativeModulesApple/React_NativeModulesApple.framework/Headers")
-                header_search_paths = self.add_search_path_if_not_included(header_search_paths, "${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios")
-
-                config.build_settings["HEADER_SEARCH_PATHS"] = header_search_paths
-            end
-
-            project.save()
-        end
-
-        installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
-            if self.react_native_pods.include?(pod_name) || pod_name.include?("Pod") || pod_name.include?("Tests")
-                next
-            end
-
-            self.set_rctfolly_search_paths(target_installation_result)
-            self.set_codegen_search_paths(target_installation_result)
-            self.set_reactcommon_searchpaths(target_installation_result)
-            self.set_rctfabric_search_paths(target_installation_result)
-            self.set_imagemanager_search_path(target_installation_result)
-        end
-    end
-
-    # ========= #
-    # Utilities #
-    # ========= #
-
-    def self.extract_projects(installer)
-        return installer.aggregate_targets
-            .map{ |t| t.user_project }
-            .uniq{ |p| p.path }
-            .push(installer.pods_project)
-    end
-
-    def self.add_compiler_flag_to_project(installer, flag, configuration: nil)
-        projects = self.extract_projects(installer)
-
-        projects.each do |project|
-            project.build_configurations.each do |config|
-                self.set_flag_in_config(config, flag, configuration: configuration)
-            end
-            project.save()
-        end
-    end
-
-    def self.remove_compiler_flag_from_project(installer, flag, configuration: nil)
-        projects = self.extract_projects(installer)
-
-        projects.each do |project|
-            project.build_configurations.each do |config|
-                self.remove_flag_in_config(config, flag, configuration: configuration)
-            end
-            project.save()
-        end
-    end
-
-    def self.add_compiler_flag_to_pods(installer, flag, configuration: nil)
-        installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
-            target_installation_result.native_target.build_configurations.each do |config|
-                self.set_flag_in_config(config, flag, configuration: configuration)
-            end
-        end
-    end
-
-    def self.set_flag_in_config(config, flag, configuration: nil)
-        if configuration == nil || config.name == configuration
-            self.add_flag_for_key(config, flag, "OTHER_CFLAGS")
-            self.add_flag_for_key(config, flag, "OTHER_CPLUSPLUSFLAGS")
-        end
-    end
-
-    def self.remove_flag_in_config(config, flag, configuration: nil)
-        if configuration == nil || config.name == configuration
-            self.remove_flag_for_key(config, flag, "OTHER_CFLAGS")
-            self.remove_flag_for_key(config, flag, "OTHER_CPLUSPLUSFLAGS")
-        end
-    end
-
-
-    def self.add_flag_for_key(config, flag, key)
-        current_setting = config.build_settings[key] ? config.build_settings[key] : "$(inherited)"
-
-        if current_setting.kind_of?(Array)
-            current_setting = current_setting
-            .map { |s| s.gsub('"', '') }
-            .map { |s| s.gsub('\"', '') }
-            .join(" ")
-        end
-
-        if !current_setting.include?(flag)
-            current_setting = "#{current_setting} #{flag}"
-        end
-
-        config.build_settings[key] = current_setting
-    end
-
-    def self.remove_flag_for_key(config, flag, key)
-        current_setting = config.build_settings[key] ? config.build_settings[key] : "$(inherited)"
-
-        if current_setting.kind_of?(Array)
-            current_setting = current_setting
-            .map { |s| s.gsub('"', '') }
-            .map { |s| s.gsub('\"', '') }
-            .join(" ")
-        end
-
-        if current_setting.include?(flag)
-            current_setting.slice! flag
-        end
-
-        config.build_settings[key] = current_setting
-    end
-
-    def self.add_search_path_if_not_included(current_search_paths, new_search_path)
-        if !current_search_paths.include?(new_search_path)
-            current_search_paths << " #{new_search_path}"
-        end
-        return current_search_paths
-    end
-
-    def self.update_header_paths_if_depends_on(target_installation_result, dependency_name, header_paths)
-        depends_on_framework = target_installation_result.native_target.dependencies.any? { |d| d.name == dependency_name }
-        if depends_on_framework
-            target_installation_result.native_target.build_configurations.each do |config|
-                header_search_path = config.build_settings["HEADER_SEARCH_PATHS"] != nil ? config.build_settings["HEADER_SEARCH_PATHS"] : "$(inherited)"
-                header_paths.each { |header| header_search_path = ReactNativePodsUtils.add_search_path_if_not_included(header_search_path, header) }
-                config.build_settings["HEADER_SEARCH_PATHS"] = header_search_path
-            end
-        end
-    end
-
-    def self.set_rctfolly_search_paths(target_installation_result)
-        ReactNativePodsUtils.update_header_paths_if_depends_on(target_installation_result, "RCT-Folly", [
-            "\"$(PODS_ROOT)/RCT-Folly\"",
-            "\"$(PODS_ROOT)/DoubleConversion\"",
-            "\"$(PODS_ROOT)/boost\""
-        ])
-    end
-
-    def self.set_codegen_search_paths(target_installation_result)
-        ReactNativePodsUtils.update_header_paths_if_depends_on(target_installation_result, "React-Codegen", [
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers\"",
-        ])
-    end
-
-    def self.set_reactcommon_searchpaths(target_installation_result)
-        ReactNativePodsUtils.update_header_paths_if_depends_on(target_installation_result, "ReactCommon", [
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers\"",
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core\"",
-        ])
-
-    end
-
-    def self.set_rctfabric_search_paths(target_installation_result)
-        ReactNativePodsUtils.update_header_paths_if_depends_on(target_installation_result, "React-RCTFabric", [
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/RCTFabric.framework/Headers\"",
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers\"",
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Graphics/React_graphics.framework/Headers\"",
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios\"",
-        ])
-    end
-
-    def self.set_imagemanager_search_path(target_installation_result)
-        ReactNativePodsUtils.update_header_paths_if_depends_on(target_installation_result, "React-ImageManager", [
-            "\"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/imagemanager/platform/ios\""
-        ])
-    end
-
-    def self.react_native_pods
-        return [
-            "DoubleConversion",
-            "FBLazyVector",
-            "RCT-Folly",
-            "RCTRequired",
-            "RCTTypeSafety",
-            "React",
-            "React-Codegen",
-            "React-Core",
-            "React-CoreModules",
-            "React-Fabric",
-            "React-ImageManager",
-            "React-RCTActionSheet",
-            "React-RCTAnimation",
-            "React-RCTAppDelegate",
-            "React-RCTBlob",
-            "React-RCTFabric",
-            "React-RCTImage",
-            "React-RCTLinking",
-            "React-RCTNetwork",
-            "React-RCTPushNotification",
-            "React-RCTSettings",
-            "React-RCTText",
-            "React-RCTTest",
-            "React-RCTVibration",
-            "React-callinvoker",
-            "React-cxxreact",
-            "React-graphics",
-            "React-jsc",
-            "React-jsi",
-            "React-jsiexecutor",
-            "React-jsinspector",
-            "React-logger",
-            "React-perflogger",
-            "React-rncore",
-            "React-runtimeexecutor",
-            "ReactCommon",
-            "Yoga",
-            "boost",
-            "fmt",
-            "glog",
-            "hermes-engine",
-            "libevent",
-            "React-hermes",
-        ]
-    end
 end
diff --git a/node_modules/react-native/scripts/codegen/__test_fixtures__/fixtures.js b/node_modules/react-native/scripts/codegen/__test_fixtures__/fixtures.js
deleted file mode 100644
index 5d48be4..0000000
--- a/node_modules/react-native/scripts/codegen/__test_fixtures__/fixtures.js
+++ /dev/null
@@ -1,132 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @oncall react_native
- */
-
-'use-strict';
-
-const SINGLE_LIBRARY_CODEGEN_CONFIG = {
-  codegenConfig: {
-    libraries: [
-      {
-        name: 'react-native',
-        type: 'all',
-        jsSrcsDir: '.',
-      },
-    ],
-  },
-};
-
-const MULTIPLE_LIBRARIES_CODEGEN_CONFIG = {
-  codegenConfig: {
-    libraries: [
-      {
-        name: 'react-native',
-        type: 'all',
-        jsSrcsDir: '.',
-      },
-      {
-        name: 'my-component',
-        type: 'components',
-        jsSrcsDir: 'component/js',
-      },
-      {
-        name: 'my-module',
-        type: 'module',
-        jsSrcsDir: 'module/js',
-      },
-    ],
-  },
-};
-
-const NO_LIBRARIES_CONFIG_FILE = {
-  codegenConfig: {
-    name: 'AppModules',
-    type: 'all',
-    jsSrcsDir: '.',
-  },
-};
-
-const SCHEMA_TEXT = `
-    {
-  "modules": {
-    "ColoredView": {
-      "type": "Component",
-      "components": {
-        "ColoredView": {
-          "extendsProps": [
-            {
-              "type": "ReactNativeBuiltInType",
-              "knownTypeName": "ReactNativeCoreViewProps"
-            }
-          ],
-          "events": [],
-          "props": [
-            {
-              "name": "color",
-              "optional": false,
-              "typeAnnotation": {
-                "type": "StringTypeAnnotation",
-                "default": null
-              }
-            }
-          ],
-          "commands": []
-        }
-      }
-    },
-    "NativeCalculator": {
-      "type": "NativeModule",
-      "aliases": {},
-      "spec": {
-        "properties": [
-          {
-            "name": "add",
-            "optional": false,
-            "typeAnnotation": {
-              "type": "FunctionTypeAnnotation",
-              "returnTypeAnnotation": {
-                "type": "PromiseTypeAnnotation"
-              },
-              "params": [
-                {
-                  "name": "a",
-                  "optional": false,
-                  "typeAnnotation": {
-                    "type": "NumberTypeAnnotation"
-                  }
-                },
-                {
-                  "name": "b",
-                  "optional": false,
-                  "typeAnnotation": {
-                    "type": "NumberTypeAnnotation"
-                  }
-                }
-              ]
-            }
-          }
-        ]
-      },
-      "moduleNames": [
-        "Calculator"
-      ]
-    }
-  }
-}
-`;
-
-const SCHEMA = JSON.parse(SCHEMA_TEXT);
-
-module.exports = {
-  schemaText: SCHEMA_TEXT,
-  schema: SCHEMA,
-  noLibrariesConfigFile: NO_LIBRARIES_CONFIG_FILE,
-  singleLibraryCodegenConfig: SINGLE_LIBRARY_CODEGEN_CONFIG,
-  multipleLibrariesCodegenConfig: MULTIPLE_LIBRARIES_CODEGEN_CONFIG,
-};
diff --git a/node_modules/react-native/scripts/codegen/__tests__/generate-artifacts-executor-test.js b/node_modules/react-native/scripts/codegen/__tests__/generate-artifacts-executor-test.js
deleted file mode 100644
index 4924e25..0000000
--- a/node_modules/react-native/scripts/codegen/__tests__/generate-artifacts-executor-test.js
+++ /dev/null
@@ -1,500 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @oncall react_native
- */
-
-'use strict';
-
-const underTest = require('../generate-artifacts-executor');
-const fixtures = require('../__test_fixtures__/fixtures');
-const path = require('path');
-const fs = require('fs');
-const child_process = require('child_process');
-
-const codegenConfigKey = 'codegenConfig';
-const reactNativeDependencyName = 'react-native';
-const rootPath = path.join(__dirname, '../../..');
-
-describe('generateCode', () => {
-  afterEach(() => {
-    jest.resetModules();
-    jest.resetAllMocks();
-  });
-
-  it('executeNodes with the right arguments', () => {
-    // Define variables and expected values
-    const iosOutputDir = 'app/ios/build/generated/ios';
-    const library = {config: {name: 'library', type: 'all'}};
-    const tmpDir = 'tmp';
-    const node = 'usr/bin/node';
-    const pathToSchema = 'app/build/schema.json';
-    const rnRoot = path.join(__dirname, '../..');
-    const libraryType = 'all';
-
-    const tmpOutDir = path.join(tmpDir, 'out');
-
-    // mock used functions
-    jest.spyOn(fs, 'mkdirSync').mockImplementation();
-    jest.spyOn(child_process, 'execSync').mockImplementation();
-
-    underTest._generateCode(iosOutputDir, library, tmpDir, node, pathToSchema);
-
-    const expectedCommand = `${node} ${path.join(
-      rnRoot,
-      'generate-specs-cli.js',
-    )}         --platform ios         --schemaPath ${pathToSchema}         --outputDir ${tmpOutDir}         --libraryName ${
-      library.config.name
-    }         --libraryType ${libraryType}`;
-
-    expect(child_process.execSync).toHaveBeenCalledTimes(2);
-    expect(child_process.execSync).toHaveBeenNthCalledWith(1, expectedCommand);
-    expect(child_process.execSync).toHaveBeenNthCalledWith(
-      2,
-      `cp -R ${tmpOutDir}/* ${iosOutputDir}`,
-    );
-
-    expect(fs.mkdirSync).toHaveBeenCalledTimes(2);
-    expect(fs.mkdirSync).toHaveBeenNthCalledWith(1, tmpOutDir, {
-      recursive: true,
-    });
-    expect(fs.mkdirSync).toHaveBeenNthCalledWith(2, iosOutputDir, {
-      recursive: true,
-    });
-  });
-});
-
-describe('extractLibrariesFromJSON', () => {
-  it('throws if in react-native and no dependencies found', () => {
-    let libraries = [];
-    let configFile = {};
-    expect(() => {
-      underTest._extractLibrariesFromJSON(
-        configFile,
-        libraries,
-        codegenConfigKey,
-      );
-    }).toThrow();
-  });
-
-  it('it skips if not into react-native and no dependencies found', () => {
-    let libraries = [];
-    let configFile = {};
-
-    underTest._extractLibrariesFromJSON(
-      configFile,
-      libraries,
-      codegenConfigKey,
-      'some-node-module',
-      'node_modules/some',
-    );
-    expect(libraries.length).toBe(0);
-  });
-
-  it('extracts a single dependency when config has no libraries', () => {
-    let libraries = [];
-    let configFile = fixtures.noLibrariesConfigFile;
-    underTest._extractLibrariesFromJSON(
-      configFile,
-      libraries,
-      codegenConfigKey,
-      'my-app',
-      '.',
-    );
-    expect(libraries.length).toBe(1);
-    expect(libraries[0]).toEqual({
-      library: 'my-app',
-      config: {
-        name: 'AppModules',
-        type: 'all',
-        jsSrcsDir: '.',
-      },
-      libraryPath: '.',
-    });
-  });
-
-  it("extract codegenConfig when it's empty", () => {
-    const configFile = {codegenConfig: {libraries: []}};
-    let libraries = [];
-    underTest._extractLibrariesFromJSON(
-      configFile,
-      codegenConfigKey,
-      libraries,
-      reactNativeDependencyName,
-      rootPath,
-    );
-    expect(libraries.length).toBe(0);
-  });
-
-  it('extract codegenConfig when dependency is one', () => {
-    const configFile = fixtures.singleLibraryCodegenConfig;
-    let libraries = [];
-    underTest._extractLibrariesFromJSON(
-      configFile,
-      libraries,
-      codegenConfigKey,
-      reactNativeDependencyName,
-      rootPath,
-    );
-    expect(libraries.length).toBe(1);
-    expect(libraries[0]).toEqual({
-      library: reactNativeDependencyName,
-      config: {
-        name: 'react-native',
-        type: 'all',
-        jsSrcsDir: '.',
-      },
-      libraryPath: rootPath,
-    });
-  });
-
-  it('extract codegenConfig with multiple dependencies', () => {
-    const configFile = fixtures.multipleLibrariesCodegenConfig;
-    const myDependency = 'my-dependency';
-    const myDependencyPath = path.join(__dirname, myDependency);
-    let libraries = [];
-    underTest._extractLibrariesFromJSON(
-      configFile,
-      libraries,
-      codegenConfigKey,
-      myDependency,
-      myDependencyPath,
-    );
-    expect(libraries.length).toBe(3);
-    expect(libraries[0]).toEqual({
-      library: myDependency,
-      config: {
-        name: 'react-native',
-        type: 'all',
-        jsSrcsDir: '.',
-      },
-      libraryPath: myDependencyPath,
-    });
-    expect(libraries[1]).toEqual({
-      library: myDependency,
-      config: {
-        name: 'my-component',
-        type: 'components',
-        jsSrcsDir: 'component/js',
-      },
-      libraryPath: myDependencyPath,
-    });
-    expect(libraries[2]).toEqual({
-      library: myDependency,
-      config: {
-        name: 'my-module',
-        type: 'module',
-        jsSrcsDir: 'module/js',
-      },
-      libraryPath: myDependencyPath,
-    });
-  });
-});
-
-describe('findCodegenEnabledLibraries', () => {
-  const mock = require('mock-fs');
-  const {
-    _findCodegenEnabledLibraries: findCodegenEnabledLibraries,
-  } = require('../generate-artifacts-executor');
-
-  afterEach(() => {
-    mock.restore();
-  });
-
-  it('returns libraries defined in react-native.config.js', () => {
-    const projectDir = path.join(__dirname, '../../../../test-project');
-    const baseCodegenConfigFileDir = path.join(__dirname, '../../..');
-    const baseCodegenConfigFilePath = path.join(
-      baseCodegenConfigFileDir,
-      'package.json',
-    );
-
-    mock({
-      [baseCodegenConfigFilePath]: `
-      {
-        "codegenConfig": {}
-      }
-      `,
-      [projectDir]: {
-        app: {
-          'package.json': `{
-            "name": "my-app"
-          }`,
-          'react-native.config.js': '',
-        },
-        'library-foo': {
-          'package.json': `{
-            "name": "react-native-foo",
-            "codegenConfig": {
-              "name": "RNFooSpec",
-              "type": "modules",
-              "jsSrcsDir": "src"
-            }
-          }`,
-        },
-      },
-    });
-
-    jest.mock(path.join(projectDir, 'app', 'react-native.config.js'), () => ({
-      dependencies: {
-        'react-native-foo': {
-          root: path.join(projectDir, 'library-foo'),
-        },
-        'react-native-bar': {
-          root: path.join(projectDir, 'library-bar'),
-        },
-      },
-    }));
-
-    const libraries = findCodegenEnabledLibraries(
-      `${projectDir}/app`,
-      baseCodegenConfigFileDir,
-      `package.json`,
-      'codegenConfig',
-    );
-
-    expect(libraries).toEqual([
-      {
-        library: 'react-native',
-        config: {},
-        libraryPath: baseCodegenConfigFileDir,
-      },
-      {
-        library: 'react-native-foo',
-        config: {name: 'RNFooSpec', type: 'modules', jsSrcsDir: 'src'},
-        libraryPath: path.join(projectDir, 'library-foo'),
-      },
-    ]);
-  });
-});
-
-describe('delete empty files and folders', () => {
-  beforeEach(() => {
-    jest.resetModules();
-  });
-
-  it('when path is empty file, deletes it', () => {
-    const targetFilepath = 'my-file.txt';
-    let statSyncInvocationCount = 0;
-    let rmSyncInvocationCount = 0;
-    let rmdirSyncInvocationCount = 0;
-    jest.mock('fs', () => ({
-      statSync: filepath => {
-        statSyncInvocationCount += 1;
-        expect(filepath).toBe(targetFilepath);
-        return {
-          isFile: () => {
-            return true;
-          },
-          size: 0,
-        };
-      },
-      rmSync: filepath => {
-        rmSyncInvocationCount += 1;
-        expect(filepath).toBe(targetFilepath);
-      },
-      rmdirSync: filepath => {
-        rmdirSyncInvocationCount += 1;
-      },
-    }));
-
-    underTest._cleanupEmptyFilesAndFolders(targetFilepath);
-    expect(statSyncInvocationCount).toBe(1);
-    expect(rmSyncInvocationCount).toBe(1);
-    expect(rmdirSyncInvocationCount).toBe(0);
-  });
-
-  it('when path is not an empty file, does nothing', () => {
-    const targetFilepath = 'my-file.txt';
-    const size = 128;
-
-    let statSyncInvocationCount = 0;
-    let rmSyncInvocationCount = 0;
-    let rmdirSyncInvocationCount = 0;
-
-    jest.mock('fs', () => ({
-      statSync: filepath => {
-        statSyncInvocationCount += 1;
-        expect(filepath).toBe(targetFilepath);
-        return {
-          isFile: () => {
-            return true;
-          },
-          size: size,
-        };
-      },
-      rmSync: filepath => {
-        rmSyncInvocationCount += 1;
-      },
-      rmdirSync: filepath => {
-        rmdirSyncInvocationCount += 1;
-      },
-    }));
-
-    underTest._cleanupEmptyFilesAndFolders(targetFilepath);
-    expect(statSyncInvocationCount).toBe(1);
-    expect(rmSyncInvocationCount).toBe(0);
-    expect(rmdirSyncInvocationCount).toBe(0);
-  });
-
-  it("when path is folder and it's empty, removes it", () => {
-    const targetFolder = 'build';
-    const content = [];
-
-    let statSyncInvocationCount = 0;
-    let readdirInvocationCount = 0;
-    let rmSyncInvocationCount = 0;
-    let rmdirSyncInvocationCount = 0;
-
-    jest.mock('fs', () => ({
-      statSync: filepath => {
-        statSyncInvocationCount += 1;
-        expect(filepath).toBe(targetFolder);
-        return {
-          isFile: () => {
-            return false;
-          },
-        };
-      },
-      rmSync: filepath => {
-        rmSyncInvocationCount += 1;
-      },
-      rmdirSync: filepath => {
-        rmdirSyncInvocationCount += 1;
-        expect(filepath).toBe(targetFolder);
-      },
-      readdirSync: filepath => {
-        readdirInvocationCount += 1;
-        return content;
-      },
-    }));
-
-    underTest._cleanupEmptyFilesAndFolders(targetFolder);
-    expect(statSyncInvocationCount).toBe(1);
-    expect(readdirInvocationCount).toBe(2);
-    expect(rmSyncInvocationCount).toBe(0);
-    expect(rmdirSyncInvocationCount).toBe(1);
-  });
-
-  it("when path is folder and it's not empty, removes only empty folders and files", () => {
-    const targetFolder = 'build';
-    const content = ['emptyFolder', 'emptyFile', 'notEmptyFile'];
-
-    const files = [
-      path.normalize('build/emptyFile'),
-      path.normalize('build/notEmptyFile'),
-    ];
-
-    const emptyContent = [];
-    let fileSizes = {};
-    fileSizes[path.normalize('build/emptyFile')] = 0;
-    fileSizes[path.normalize('build/notEmptyFile')] = 32;
-
-    let statSyncInvocation = [];
-    let rmSyncInvocation = [];
-    let rmdirSyncInvocation = [];
-    let readdirInvocation = [];
-
-    jest.mock('fs', () => ({
-      statSync: filepath => {
-        statSyncInvocation.push(filepath);
-
-        return {
-          isFile: () => {
-            return files.includes(filepath);
-          },
-          size: fileSizes[filepath],
-        };
-      },
-      rmSync: filepath => {
-        rmSyncInvocation.push(filepath);
-      },
-      rmdirSync: filepath => {
-        rmdirSyncInvocation.push(filepath);
-      },
-      readdirSync: filepath => {
-        readdirInvocation.push(filepath);
-        return filepath === targetFolder ? content : emptyContent;
-      },
-    }));
-
-    underTest._cleanupEmptyFilesAndFolders(targetFolder);
-    expect(statSyncInvocation).toEqual([
-      path.normalize('build'),
-      path.normalize('build/emptyFolder'),
-      path.normalize('build/emptyFile'),
-      path.normalize('build/notEmptyFile'),
-    ]);
-    expect(readdirInvocation).toEqual([
-      path.normalize('build'),
-      path.normalize('build/emptyFolder'),
-      path.normalize('build/emptyFolder'),
-      path.normalize('build'),
-    ]);
-    expect(rmSyncInvocation).toEqual([path.normalize('build/emptyFile')]);
-    expect(rmdirSyncInvocation).toEqual([path.normalize('build/emptyFolder')]);
-  });
-
-  it('when path is folder and it contains only empty folders, removes everything', () => {
-    const targetFolder = 'build';
-    const content = ['emptyFolder1', 'emptyFolder2'];
-    const emptyContent = [];
-
-    let statSyncInvocation = [];
-    let rmSyncInvocation = [];
-    let rmdirSyncInvocation = [];
-    let readdirInvocation = [];
-
-    jest.mock('fs', () => ({
-      statSync: filepath => {
-        statSyncInvocation.push(filepath);
-
-        return {
-          isFile: () => {
-            return false;
-          },
-        };
-      },
-      rmSync: filepath => {
-        rmSyncInvocation.push(filepath);
-      },
-      rmdirSync: filepath => {
-        rmdirSyncInvocation.push(filepath);
-      },
-      readdirSync: filepath => {
-        readdirInvocation.push(filepath);
-        return filepath === targetFolder
-          ? content.filter(
-              element =>
-                !rmdirSyncInvocation.includes(path.join(targetFolder, element)),
-            )
-          : emptyContent;
-      },
-    }));
-
-    underTest._cleanupEmptyFilesAndFolders(targetFolder);
-    expect(statSyncInvocation).toEqual([
-      path.normalize('build'),
-      path.normalize('build/emptyFolder1'),
-      path.normalize('build/emptyFolder2'),
-    ]);
-    expect(readdirInvocation).toEqual([
-      path.normalize('build'),
-      path.normalize('build/emptyFolder1'),
-      path.normalize('build/emptyFolder1'),
-      path.normalize('build/emptyFolder2'),
-      path.normalize('build/emptyFolder2'),
-      path.normalize('build'),
-    ]);
-    expect(rmSyncInvocation).toEqual([]);
-    expect(rmdirSyncInvocation).toEqual([
-      path.normalize('build/emptyFolder1'),
-      path.normalize('build/emptyFolder2'),
-      path.normalize('build'),
-    ]);
-  });
-});
diff --git a/node_modules/react-native/scripts/codegen/__tests__/generate-specs-cli-executor-test.js b/node_modules/react-native/scripts/codegen/__tests__/generate-specs-cli-executor-test.js
deleted file mode 100644
index 463ed28..0000000
--- a/node_modules/react-native/scripts/codegen/__tests__/generate-specs-cli-executor-test.js
+++ /dev/null
@@ -1,88 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- * @oncall react_native
- */
-
-'use strict';
-
-const sut = require('../generate-specs-cli-executor');
-const fixtures = require('../__test_fixtures__/fixtures');
-const {normalize} = require('path');
-
-describe('generateSpec', () => {
-  it('invokes RNCodegen with the right params', () => {
-    const platform = 'ios';
-    const libraryType = 'all';
-    const schemaPath = './';
-    const componentsOutputDir = normalize(
-      'app/ios/build/generated/ios/react/renderer/components/library',
-    );
-    const modulesOutputDir = normalize('app/ios/build/generated/ios/library');
-    const outputDirectory = normalize('app/ios/build/generated/ios');
-    const libraryName = 'library';
-    const packageName = 'com.library';
-    const generators = ['componentsIOS', 'modulesIOS', 'modulesCxx'];
-
-    jest.mock('fs', () => ({
-      readFileSync: (path, encoding) => {
-        expect(path).toBe(schemaPath);
-        expect(encoding).toBe('utf-8');
-        return fixtures.schemaText;
-      },
-    }));
-
-    let mkdirpSyncInvoked = 0;
-    jest.mock('mkdirp', () => ({
-      sync: folder => {
-        if (mkdirpSyncInvoked === 0) {
-          expect(folder).toBe(outputDirectory);
-        }
-
-        if (mkdirpSyncInvoked === 1) {
-          expect(folder).toBe(componentsOutputDir);
-        }
-
-        if (mkdirpSyncInvoked === 2) {
-          expect(folder).toBe(modulesOutputDir);
-        }
-
-        mkdirpSyncInvoked += 1;
-      },
-    }));
-
-    // We cannot mock directly the `RNCodegen` object because the
-    // code access the `lib` folder directly and request a file explicitly.
-    // This makes testing harder than usually. To overcome this, we created a utility
-    // to retrieve the `Codegen`. By doing that, we can mock the wrapper so that it returns
-    // an object with the same interface of the `RNCodegen` object.
-    jest.mock('../codegen-utils', () => ({
-      getCodegen: () => ({
-        generate: (libraryConfig, generatorConfigs) => {
-          expect(libraryConfig.libraryName).toBe(libraryName);
-          expect(libraryConfig.schema).toStrictEqual(fixtures.schema);
-          expect(libraryConfig.outputDirectory).toBe(outputDirectory);
-          expect(libraryConfig.packageName).toBe(packageName);
-
-          expect(generatorConfigs.generators).toStrictEqual(generators);
-          expect(generatorConfigs.test).toBeUndefined();
-        },
-      }),
-    }));
-
-    sut.execute(
-      platform,
-      schemaPath,
-      outputDirectory,
-      libraryName,
-      packageName,
-      libraryType,
-    );
-
-    expect(mkdirpSyncInvoked).toBe(3);
-  });
-});
diff --git a/node_modules/react-native/scripts/codegen/codegen-utils.js b/node_modules/react-native/scripts/codegen/codegen-utils.js
index b739d81..469f426 100644
--- a/node_modules/react-native/scripts/codegen/codegen-utils.js
+++ b/node_modules/react-native/scripts/codegen/codegen-utils.js
@@ -12,7 +12,7 @@
 /**
  * Wrapper required to abstract away from the actual codegen.
  * This is needed because, when running tests in Sandcastle, not everything is setup as usually.
- * For example, the `@react-native/codegen` lib is not present.
+ * For example, the `react-native-codegen` lib is not present.
  *
  * Thanks to this wrapper, we are able to mock the getter for the codegen in a way that allow us to return
  * a custom object which mimics the Codegen interface.
@@ -24,7 +24,7 @@ function getCodegen() {
   try {
     RNCodegen = require('../../packages/react-native-codegen/lib/generators/RNCodegen.js');
   } catch (e) {
-    RNCodegen = require('@react-native/codegen/lib/generators/RNCodegen.js');
+    RNCodegen = require('react-native-codegen/lib/generators/RNCodegen.js');
   }
   if (!RNCodegen) {
     throw 'RNCodegen not found.';
diff --git a/node_modules/react-native/scripts/codegen/generate-artifacts-executor.js b/node_modules/react-native/scripts/codegen/generate-artifacts-executor.js
index 2567e5b..68a47b6 100644
--- a/node_modules/react-native/scripts/codegen/generate-artifacts-executor.js
+++ b/node_modules/react-native/scripts/codegen/generate-artifacts-executor.js
@@ -21,28 +21,17 @@ const fs = require('fs');
 const os = require('os');
 const path = require('path');
 
-const REACT_NATIVE_REPOSITORY_ROOT = path.join(
-  __dirname,
-  '..',
-  '..',
-  '..',
-  '..',
-);
-const REACT_NATIVE_PACKAGE_ROOT_FOLDER = path.join(__dirname, '..', '..');
-
-const CODEGEN_DEPENDENCY_NAME = '@react-native/codegen';
-const CODEGEN_REPO_PATH = `${REACT_NATIVE_REPOSITORY_ROOT}/packages/react-native-codegen`;
-const CODEGEN_NPM_PATH = `${REACT_NATIVE_PACKAGE_ROOT_FOLDER}/../${CODEGEN_DEPENDENCY_NAME}`;
-const CORE_LIBRARIES_WITH_OUTPUT_FOLDER = {
-  rncore: path.join(REACT_NATIVE_PACKAGE_ROOT_FOLDER, 'ReactCommon'),
-  FBReactNativeSpec: null,
-};
+const RN_ROOT = path.join(__dirname, '../..');
+
+const CODEGEN_REPO_PATH = `${RN_ROOT}/packages/react-native-codegen`;
+const CODEGEN_NPM_PATH = `${RN_ROOT}/../react-native-codegen`;
+const CORE_LIBRARIES = new Set(['rncore', 'FBReactNativeSpec']);
 const REACT_NATIVE_DEPENDENCY_NAME = 'react-native';
 
 // HELPERS
 
 function isReactNativeCoreLibrary(libraryName) {
-  return libraryName in CORE_LIBRARIES_WITH_OUTPUT_FOLDER;
+  return CORE_LIBRARIES.has(libraryName);
 }
 
 function executeNodeScript(node, script) {
@@ -129,7 +118,7 @@ function extractLibrariesFromJSON(
   var isBlocking = false;
   if (dependency == null) {
     dependency = REACT_NATIVE_DEPENDENCY_NAME;
-    dependencyPath = REACT_NATIVE_PACKAGE_ROOT_FOLDER;
+    dependencyPath = RN_ROOT;
     // If we are exploring the ReactNative libraries, we want to raise an error
     // if the codegen is not properly configured.
     isBlocking = true;
@@ -170,10 +159,7 @@ function handleReactNativeCodeLibraries(
   // Handle react-native core libraries.
   // This is required when react-native is outside of node_modules.
   console.log('[Codegen] Processing react-native core libraries');
-  const reactNativePkgJson = path.join(
-    REACT_NATIVE_PACKAGE_ROOT_FOLDER,
-    codegenConfigFilename,
-  );
+  const reactNativePkgJson = path.join(RN_ROOT, codegenConfigFilename);
   if (!fs.existsSync(reactNativePkgJson)) {
     throw '[Codegen] Error: Could not find config file for react-native.';
   }
@@ -189,9 +175,7 @@ function handleThirdPartyLibraries(
   codegenConfigKey,
 ) {
   // Determine which of these are codegen-enabled libraries
-  const configDir =
-    baseCodegenConfigFileDir ||
-    path.join(REACT_NATIVE_PACKAGE_ROOT_FOLDER, '..');
+  const configDir = baseCodegenConfigFileDir || path.join(RN_ROOT, '..');
   console.log(
     `\n\n[Codegen] >>>>> Searching for codegen-enabled libraries in ${configDir}`,
   );
@@ -289,6 +273,7 @@ function handleInAppLibraries(
 }
 
 // CodeGen
+
 function getCodeGenCliPath() {
   let codegenCliPath;
   if (fs.existsSync(CODEGEN_REPO_PATH)) {
@@ -308,7 +293,7 @@ function getCodeGenCliPath() {
   } else if (fs.existsSync(CODEGEN_NPM_PATH)) {
     codegenCliPath = CODEGEN_NPM_PATH;
   } else {
-    throw `error: Could not determine ${CODEGEN_DEPENDENCY_NAME} location. Try running 'yarn install' or 'npm install' in your project root.`;
+    throw "error: Could not determine react-native-codegen location. Try running 'yarn install' or 'npm install' in your project root.";
   }
   return codegenCliPath;
 }
@@ -351,11 +336,7 @@ function generateCode(iosOutputDir, library, tmpDir, node, pathToSchema) {
 
   executeNodeScript(
     node,
-    `${path.join(
-      REACT_NATIVE_PACKAGE_ROOT_FOLDER,
-      'scripts',
-      'generate-specs-cli.js',
-    )} \
+    `${path.join(RN_ROOT, 'scripts', 'generate-specs-cli.js')} \
         --platform ios \
         --schemaPath ${pathToSchema} \
         --outputDir ${tmpOutputDir} \
@@ -364,10 +345,8 @@ function generateCode(iosOutputDir, library, tmpDir, node, pathToSchema) {
   );
 
   // Finally, copy artifacts to the final output directory.
-  const outputDir =
-    CORE_LIBRARIES_WITH_OUTPUT_FOLDER[library.config.name] ?? iosOutputDir;
-  fs.mkdirSync(outputDir, {recursive: true});
-  execSync(`cp -R ${tmpOutputDir}/* ${outputDir}`);
+  fs.mkdirSync(iosOutputDir, {recursive: true});
+  execSync(`cp -R ${tmpOutputDir}/* ${iosOutputDir}`);
   console.log(`[Codegen] Generated artifacts: ${iosOutputDir}`);
 }
 
@@ -418,23 +397,17 @@ function createComponentProvider(
     fs.closeSync(fd);
     console.log(`Generated schema list: ${schemaListTmpPath}`);
 
-    const outputDir = path.join(
-      REACT_NATIVE_PACKAGE_ROOT_FOLDER,
-      'React',
-      'Fabric',
-    );
-
     // Generate FabricComponentProvider.
     // Only for iOS at this moment.
     executeNodeScript(
       node,
       `${path.join(
-        REACT_NATIVE_PACKAGE_ROOT_FOLDER,
+        RN_ROOT,
         'scripts',
         'generate-provider-cli.js',
-      )} --platform ios --schemaListPath "${schemaListTmpPath}" --outputDir ${outputDir}`,
+      )} --platform ios --schemaListPath "${schemaListTmpPath}" --outputDir ${iosOutputDir}`,
     );
-    console.log(`Generated provider in: ${outputDir}`);
+    console.log(`Generated provider in: ${iosOutputDir}`);
   }
 }
 
@@ -476,7 +449,7 @@ function findCodegenEnabledLibraries(
 //
 // This function is needed since, after aligning the codegen between
 // iOS and Android, we have to create empty folders in advance and
-// we don't know whether they will be populated up until the end of the process.
+// we don't know wheter they will be populated up until the end of the process.
 //
 // @parameter filepath: the root path from which we want to remove the empty files and folders.
 function cleanupEmptyFilesAndFolders(filepath) {
diff --git a/node_modules/react-native/scripts/codegen/generate-legacy-interop-components.js b/node_modules/react-native/scripts/codegen/generate-legacy-interop-components.js
deleted file mode 100644
index 49ac074..0000000
--- a/node_modules/react-native/scripts/codegen/generate-legacy-interop-components.js
+++ /dev/null
@@ -1,123 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- */
-
-'use strict';
-
-const yargs = require('yargs');
-const fs = require('fs');
-
-const CONFIG_FILE_NAME = 'react-native.config.js';
-const PROJECT_FIELD = 'project';
-const IOS_FIELD = 'ios';
-const LEGACY_COMPONENTS_FIELD = 'unstable_reactLegacyComponentNames';
-const OUTPUT_FILE_NAME = 'RCTLegacyInteropComponents.mm';
-
-const argv = yargs
-  .option('p', {
-    alias: 'path',
-    description: 'Path to React Native application',
-  })
-  .option('o', {
-    alias: 'outputPath',
-    description: 'Path where generated artifacts will be output to',
-  })
-  .usage('Usage: $0 -p [path to app]')
-  .demandOption(['p']).argv;
-
-const appRoot = argv.path;
-const outputPath = argv.outputPath;
-
-function fileBody(components) {
-  // eslint-disable duplicate-license-header
-  return `
-/*
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-#import "RCTLegacyInteropComponents.h"
-
-@implementation RCTLegacyInteropComponents
-
-+ (NSArray<NSString *> *)legacyInteropComponents
-{
-  return @[
-${components}
-  ];
-}
-
-@end
-`;
-  // eslint-enable duplicate-license-header
-}
-
-function extractComponentsNames(reactNativeConfig) {
-  if (!reactNativeConfig) {
-    console.log('No reactNativeConfig in the react-native.config.js file');
-    return null;
-  }
-
-  const project = reactNativeConfig[PROJECT_FIELD];
-
-  if (!project) {
-    console.log(`No ${PROJECT_FIELD} in the react-native config`);
-    return null;
-  }
-
-  const ios = project[IOS_FIELD];
-
-  if (!ios) {
-    console.log(
-      `No ${IOS_FIELD} in the ${PROJECT_FIELD} object of the config file`,
-    );
-    return null;
-  }
-
-  const componentNames = ios[LEGACY_COMPONENTS_FIELD];
-
-  if (!componentNames) {
-    console.log(
-      `No '${LEGACY_COMPONENTS_FIELD}' field in the ${PROJECT_FIELD}.${IOS_FIELD} object`,
-    );
-    return null;
-  }
-  return componentNames;
-}
-
-function generateRCTLegacyInteropComponents() {
-  const configFilePath = `${appRoot}/${CONFIG_FILE_NAME}`;
-  let reactNativeConfig = null;
-  try {
-    reactNativeConfig = require(configFilePath);
-  } catch (error) {
-    console.log(`No ${configFilePath}. Skip LegacyInterop generation`);
-    return;
-  }
-
-  const componentNames = extractComponentsNames(reactNativeConfig);
-  if (!componentNames) {
-    console.log('Skip LegacyInterop generation');
-    return;
-  }
-
-  let componentsArray = componentNames.map(name => `\t\t\t@"${name}",`);
-  // Remove the last comma
-  if (componentsArray.length > 0) {
-    componentsArray[componentsArray.length - 1] = componentsArray[
-      componentsArray.length - 1
-    ].slice(0, -1);
-  }
-
-  const filePath = `${outputPath}/${OUTPUT_FILE_NAME}`;
-  fs.writeFileSync(filePath, fileBody(componentsArray.join('\n')));
-}
-
-generateRCTLegacyInteropComponents();
diff --git a/node_modules/react-native/scripts/find-node-for-xcode.sh b/node_modules/react-native/scripts/find-node-for-xcode.sh
index e928cd8..0a49e25 100644
--- a/node_modules/react-native/scripts/find-node-for-xcode.sh
+++ b/node_modules/react-native/scripts/find-node-for-xcode.sh
@@ -58,10 +58,7 @@ if [[ ! -x node && -d ${HOME}/.anyenv/bin ]]; then
 fi
 
 # Set up asdf-vm if present
-if [[ -f "$ASDF_DIR/asdf.sh" ]]; then
-  # shellcheck source=/dev/null
-  . "$ASDF_DIR/asdf.sh"
-elif [[ -f "$HOME/.asdf/asdf.sh" ]]; then
+if [[ -f "$HOME/.asdf/asdf.sh" ]]; then
   # shellcheck source=/dev/null
   . "$HOME/.asdf/asdf.sh"
 elif [[ -x "$(command -v brew)" && -f "$(brew --prefix asdf)/asdf.sh" ]]; then
diff --git a/node_modules/react-native/scripts/generate-provider-cli.js b/node_modules/react-native/scripts/generate-provider-cli.js
index 852a8d3..9b7744c 100644
--- a/node_modules/react-native/scripts/generate-provider-cli.js
+++ b/node_modules/react-native/scripts/generate-provider-cli.js
@@ -13,7 +13,7 @@ let RNCodegen;
 try {
   RNCodegen = require('../packages/react-native-codegen/lib/generators/RNCodegen.js');
 } catch (e) {
-  RNCodegen = require('@react-native/codegen/lib/generators/RNCodegen.js');
+  RNCodegen = require('react-native-codegen/lib/generators/RNCodegen.js');
   if (!RNCodegen) {
     throw 'RNCodegen not found.';
   }
diff --git a/node_modules/react-native/scripts/hermes/prepare-hermes-for-build.js b/node_modules/react-native/scripts/hermes/prepare-hermes-for-build.js
index 8779273..711de87 100644
--- a/node_modules/react-native/scripts/hermes/prepare-hermes-for-build.js
+++ b/node_modules/react-native/scripts/hermes/prepare-hermes-for-build.js
@@ -39,7 +39,7 @@ async function main(isInCI) {
   }
 }
 
-const isInCI = process.env.CI === 'true';
+const isInCI = process.env.REACT_NATIVE_CI === 'true';
 
 main(isInCI).then(() => {
   process.exit(0);
diff --git a/node_modules/react-native/scripts/packager.sh b/node_modules/react-native/scripts/packager.sh
index cb8b101..acb1581 100755
--- a/node_modules/react-native/scripts/packager.sh
+++ b/node_modules/react-native/scripts/packager.sh
@@ -8,16 +8,16 @@
 THIS_DIR=$(cd -P "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo "${BASH_SOURCE[0]}")")" && pwd)
 REACT_NATIVE_ROOT="$THIS_DIR/.."
 # Application root directory - General use case: react-native is a dependency
-PROJECT_ROOT=${PROJECT_ROOT:-"$THIS_DIR/../../.."}
+PROJECT_ROOT="$THIS_DIR/../../.."
 
 # check and assign NODE_BINARY env
 # shellcheck disable=SC1090
 source "${THIS_DIR}/node-binary.sh"
 
 # When running react-native tests, react-native doesn't live in node_modules but in the PROJECT_ROOT
-if [ ! -d "$THIS_DIR/../../../node_modules/react-native" ];
+if [ ! -d "$PROJECT_ROOT/node_modules/react-native" ];
 then
-  PROJECT_ROOT="$THIS_DIR/../../.."
+  PROJECT_ROOT="$THIS_DIR/.."
 fi
 # Start packager from PROJECT_ROOT
 cd "$PROJECT_ROOT" || exit
diff --git a/node_modules/react-native/scripts/react-native-xcode.sh b/node_modules/react-native/scripts/react-native-xcode.sh
index e6fc8d1..30a5ac2 100755
--- a/node_modules/react-native/scripts/react-native-xcode.sh
+++ b/node_modules/react-native/scripts/react-native-xcode.sh
@@ -58,8 +58,9 @@ esac
 
 # Path to react-native folder inside node_modules
 REACT_NATIVE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
-# Most projects have their project root, one level up from their Xcode project dir (the "ios" directory)
-PROJECT_ROOT=${PROJECT_ROOT:-"$PROJECT_DIR/.."}
+# The project should be located next to where react-native is installed
+# in node_modules.
+PROJECT_ROOT=${PROJECT_ROOT:-"$REACT_NATIVE_DIR/../.."}
 
 cd "$PROJECT_ROOT" || exit
 
@@ -176,7 +177,7 @@ else
   if [[ $EMIT_SOURCEMAP == true ]]; then
     EXTRA_COMPILER_ARGS="$EXTRA_COMPILER_ARGS -output-source-map"
   fi
-  "$HERMES_CLI_PATH" -emit-binary -max-diagnostic-width=80 $EXTRA_COMPILER_ARGS -out "$DEST/main.jsbundle" "$BUNDLE_FILE"
+  "$HERMES_CLI_PATH" -emit-binary $EXTRA_COMPILER_ARGS -out "$DEST/main.jsbundle" "$BUNDLE_FILE"
   if [[ $EMIT_SOURCEMAP == true ]]; then
     HBC_SOURCEMAP_FILE="$DEST/main.jsbundle.map"
     "$NODE_BINARY" "$COMPOSE_SOURCEMAP_PATH" "$PACKAGER_SOURCEMAP_FILE" "$HBC_SOURCEMAP_FILE" -o "$SOURCEMAP_FILE"
diff --git a/node_modules/react-native/scripts/react_native_pods.rb b/node_modules/react-native/scripts/react_native_pods.rb
index 653385e..6be4109 100644
--- a/node_modules/react-native/scripts/react_native_pods.rb
+++ b/node_modules/react-native/scripts/react_native_pods.rb
@@ -23,19 +23,8 @@ $FOLLY_VERSION = '2021.07.22.00'
 
 $START_TIME = Time.now.to_i
 
-# `@react-native-community/cli-platform-ios/native_modules` defines
-# use_native_modules. We use node to resolve its path to allow for
-# different packager and workspace setups. This is reliant on
-# `@react-native-community/cli-platform-ios` being a direct dependency
-# of `react-native`.
-require Pod::Executable.execute_command('node', ['-p',
-  'require.resolve(
-    "@react-native-community/cli-platform-ios/native_modules.rb",
-    {paths: [process.argv[1]]},
-  )', __dir__]).strip
-
 # This function returns the min iOS version supported by React Native
-# By using this function, you won't have to manually change your Podfile
+# By using this function, you won't have to manualy change your Podfile
 # when we change the minimum version supported by the framework.
 def min_ios_version_supported
   return '12.4'
@@ -75,21 +64,16 @@ def use_react_native! (
   ios_folder: 'ios'
 )
 
-  # Set the app_path as env variable so the podspecs can access it.
-  ENV['APP_PATH'] = app_path
-  ENV['REACT_NATIVE_PATH'] = path
-
   # Current target definition is provided by Cocoapods and it refers to the target
   # that has invoked the `use_react_native!` function.
   ReactNativePodsUtils.detect_use_frameworks(current_target_definition)
 
-  CodegenUtils.clean_up_build_folder(path, app_path, ios_folder, $CODEGEN_OUTPUT_DIR)
+  CodegenUtils.clean_up_build_folder(app_path, ios_folder, $CODEGEN_OUTPUT_DIR)
 
   # We are relying on this flag also in third parties libraries to proper install dependencies.
   # Better to rely and enable this environment flag if the new architecture is turned on using flags.
   ENV['RCT_NEW_ARCH_ENABLED'] = new_arch_enabled ? "1" : "0"
   fabric_enabled = fabric_enabled || new_arch_enabled
-  ENV['RCT_FABRIC_ENABLED'] = fabric_enabled ? "1" : "0"
   ENV['USE_HERMES'] = hermes_enabled ? "1" : "0"
 
   prefix = path
@@ -98,7 +82,7 @@ def use_react_native! (
 
   # The Pods which should be included in all projects
   pod 'FBLazyVector', :path => "#{prefix}/Libraries/FBLazyVector"
-  pod 'FBReactNativeSpec', :path => "#{prefix}/React/FBReactNativeSpec" if !new_arch_enabled
+  pod 'FBReactNativeSpec', :path => "#{prefix}/React/FBReactNativeSpec"
   pod 'RCTRequired', :path => "#{prefix}/Libraries/RCTRequired"
   pod 'RCTTypeSafety', :path => "#{prefix}/Libraries/TypeSafety", :modular_headers => true
   pod 'React', :path => "#{prefix}/"
@@ -115,10 +99,8 @@ def use_react_native! (
   pod 'React-RCTText', :path => "#{prefix}/Libraries/Text"
   pod 'React-RCTVibration', :path => "#{prefix}/Libraries/Vibration"
   pod 'React-Core/RCTWebSocket', :path => "#{prefix}/"
-  pod 'React-rncore', :path => "#{prefix}/ReactCommon"
+
   pod 'React-cxxreact', :path => "#{prefix}/ReactCommon/cxxreact"
-  pod 'React-debug', :path => "#{prefix}/ReactCommon/react/debug"
-  pod 'React-utils', :path => "#{prefix}/ReactCommon/react/utils"
 
   if hermes_enabled
     setup_hermes!(:react_native_path => prefix, :fabric_enabled => fabric_enabled)
@@ -131,11 +113,9 @@ def use_react_native! (
 
   pod 'React-callinvoker', :path => "#{prefix}/ReactCommon/callinvoker"
   pod 'React-runtimeexecutor', :path => "#{prefix}/ReactCommon/runtimeexecutor"
-  pod 'React-runtimescheduler', :path => "#{prefix}/ReactCommon/react/renderer/runtimescheduler"
   pod 'React-perflogger', :path => "#{prefix}/ReactCommon/reactperflogger"
   pod 'React-logger', :path => "#{prefix}/ReactCommon/logger"
   pod 'ReactCommon/turbomodule/core', :path => "#{prefix}/ReactCommon", :modular_headers => true
-  pod 'React-NativeModulesApple', :path => "#{prefix}/ReactCommon/react/nativemodule/core/platform/ios", :modular_headers => true
   pod 'Yoga', :path => "#{prefix}/ReactCommon/yoga", :modular_headers => true
 
   pod 'DoubleConversion', :podspec => "#{prefix}/third-party-podspecs/DoubleConversion.podspec"
@@ -159,11 +139,8 @@ def use_react_native! (
   pod 'React-Codegen', :path => $CODEGEN_OUTPUT_DIR, :modular_headers => true
 
   if fabric_enabled
-    checkAndGenerateEmptyThirdPartyProvider!(prefix, new_arch_enabled)
-    setup_fabric!(:react_native_path => prefix, new_arch_enabled: new_arch_enabled)
-  else
-    relative_installation_root = Pod::Config.instance.installation_root.relative_path_from(Pathname.pwd)
-    build_codegen!(prefix, relative_installation_root)
+    checkAndGenerateEmptyThirdPartyProvider!(prefix, new_arch_enabled, $CODEGEN_OUTPUT_DIR)
+    setup_fabric!(:react_native_path => prefix)
   end
 
   # CocoaPods `configurations` option ensures that the target is copied only for the specified configurations,
@@ -223,12 +200,7 @@ end
 # - installer: the Cocoapod object that allows to customize the project.
 # - react_native_path: path to React Native.
 # - mac_catalyst_enabled: whether we are running the Pod on a Mac Catalyst project or not.
-# - enable_hermes_profiler: whether the hermes profiler should be turned on in Release mode
-def react_native_post_install(
-  installer,
-  react_native_path = "../node_modules/react-native",
-  mac_catalyst_enabled: false
-)
+def react_native_post_install(installer, react_native_path = "../node_modules/react-native", mac_catalyst_enabled: false)
   ReactNativePodsUtils.turn_off_resource_bundle_react_core(installer)
 
   ReactNativePodsUtils.apply_mac_catalyst_patches(installer) if mac_catalyst_enabled
@@ -237,13 +209,20 @@ def react_native_post_install(
     flipper_post_install(installer)
   end
 
-  fabric_enabled = ReactNativePodsUtils.has_pod(installer, 'React-Fabric')
+  package_path = File.join(Pod::Config.instance.installation_root, react_native_path, "package.json")
+  package = JSON.parse(File.read(package_path))
+  version = package['version']
+
+  if ReactNativePodsUtils.has_pod(installer, 'hermes-engine') && is_building_hermes_from_source(version, react_native_path)
+    add_copy_hermes_framework_script_phase(installer, react_native_path)
+  else
+    remove_copy_hermes_framework_script_phase(installer, react_native_path)
+    remove_hermesc_build_dir(react_native_path)
+  end
 
   ReactNativePodsUtils.exclude_i386_architecture_while_using_hermes(installer)
   ReactNativePodsUtils.fix_library_search_paths(installer)
-  ReactNativePodsUtils.update_search_paths(installer)
   ReactNativePodsUtils.set_node_modules_user_settings(installer, react_native_path)
-  ReactNativePodsUtils.apply_flags_for_fabric(installer, fabric_enabled: fabric_enabled)
   ReactNativePodsUtils.apply_xcode_15_patch(installer)
 
   NewArchitectureHelper.set_clang_cxx_language_standard_if_needed(installer)
@@ -261,7 +240,7 @@ def use_react_native_codegen!(spec, options={})
   # TODO: Once the new codegen approach is ready for use, we should output a warning here to let folks know to migrate.
 
   # The prefix to react-native
-  react_native_path = options[:react_native_path] ||= ".."
+  react_native_path = options[:react_native_path] ||= "../.."
 
   # Library name (e.g. FBReactNativeSpec)
   library_name = options[:library_name] ||= "#{spec.name.gsub('_','-').split('-').collect(&:capitalize).join}Spec"
@@ -340,9 +319,9 @@ def use_react_native_codegen!(spec, options={})
     # The final generated files will be created when this script is invoked at Xcode build time.
     :script => get_script_phases_no_codegen_discovery(
       react_native_path: react_native_path,
-      codegen_output_dir: output_dir,
-      codegen_module_dir: output_dir_module,
-      codegen_component_dir: output_dir_component,
+      codegen_output_dir: $CODEGEN_OUTPUT_DIR,
+      codegen_module_dir: $CODEGEN_MODULE_DIR,
+      codegen_component_dir: $CODEGEN_COMPONENT_DIR,
       library_name: library_name,
       library_type: library_type,
       js_srcs_pattern: js_srcs_pattern,
diff --git a/node_modules/react-native/scripts/react_native_pods_utils/script_phases.rb b/node_modules/react-native/scripts/react_native_pods_utils/script_phases.rb
index eb1accb..4520da1 100644
--- a/node_modules/react-native/scripts/react_native_pods_utils/script_phases.rb
+++ b/node_modules/react-native/scripts/react_native_pods_utils/script_phases.rb
@@ -48,6 +48,6 @@ def get_script_template(react_native_path, export_vars={})
         WITH_ENVIRONMENT="$RCT_SCRIPT_RN_DIR/scripts/xcode/with-environment.sh"
         /bin/sh -c "$WITH_ENVIRONMENT $SCRIPT_PHASES_SCRIPT"
         EOS
-    result = ERB.new(template, trim_mode: '->').result(binding)
+    result = ERB.new(template, 0, '->').result(binding)
     return result
 end
diff --git a/node_modules/react-native/scripts/react_native_pods_utils/script_phases.sh b/node_modules/react-native/scripts/react_native_pods_utils/script_phases.sh
index c2a64a2..08efd2a 100755
--- a/node_modules/react-native/scripts/react_native_pods_utils/script_phases.sh
+++ b/node_modules/react-native/scripts/react_native_pods_utils/script_phases.sh
@@ -31,9 +31,9 @@ find_node () {
 }
 
 find_codegen () {
-    CODEGEN_CLI_PATH=$("$NODE_BINARY" --print "require('path').dirname(require.resolve('@react-native/codegen/package.json'))")
+    CODEGEN_CLI_PATH=$("$NODE_BINARY" --print "require('path').dirname(require.resolve('react-native-codegen/package.json'))")
     if ! [ -d "$CODEGEN_CLI_PATH" ]; then
-        error "error: Could not determine @react-native/codegen location, using node module resolution. Try running 'yarn install' or 'npm install' in your project root."
+        error "error: Could not determine react-native-codegen location, using node module resolution. Try running 'yarn install' or 'npm install' in your project root."
     fi
 }
 
@@ -109,7 +109,7 @@ moveOutputs () {
     ls -1 "$RCT_SCRIPT_OUTPUT_DIR" >> "${SCRIPT_OUTPUT_FILE_0}" 2>&1
 }
 
-withCodegenDiscovery () {
+withCodgenDiscovery () {
     setup_dirs
     find_node
     find_codegen
@@ -127,7 +127,7 @@ noCodegenDiscovery () {
 }
 
 if [ "$RCT_SCRIPT_TYPE" = "withCodegenDiscovery" ]; then
-    withCodegenDiscovery "$@"
+    withCodgenDiscovery "$@"
 else
     noCodegenDiscovery "$@"
 fi
diff --git a/node_modules/react-native/scripts/xcode/with-environment.sh b/node_modules/react-native/scripts/xcode/with-environment.sh
index f36190e..e4a8e42 100755
--- a/node_modules/react-native/scripts/xcode/with-environment.sh
+++ b/node_modules/react-native/scripts/xcode/with-environment.sh
@@ -32,12 +32,12 @@ fi
 if [ -n "$NODE_BINARY" ]; then
     echo "Node found at: ${NODE_BINARY}"
 else
-    echo '[Warning] You need to configure your node path in the `".xcode.env" file` environment. ' \
-       'You can set it up quickly by running: ' \
-       '`echo export NODE_BINARY=$(command -v node) > .xcode.env` ' \
-       'in the ios folder. This is needed by React Native to work correctly. ' \
-       'We fallback to the DEPRECATED behavior of finding `node`. This will be REMOVED in a future version. ' \
-       'You can read more about this here: https://reactnative.dev/docs/environment-setup#optional-configuring-your-environment' >&2
+    echo "[Warning] You need to configure your node path in the `'.xcode.env' file` environment. " \
+       "You can set it up quickly by running: " \
+       "echo 'export NODE_BINARY=$(command -v node)' > .xcode.env " \
+       "in the ios folder. This is needed by React Native to work correctly. " \
+       "We fallback to the DEPRECATED behavior of finding `node`. This will be REMOVED in a future version. " \
+       "You can read more about this here: https://reactnative.dev/docs/environment-setup#optional-configuring-your-environment" >&2
     source "${REACT_NATIVE_PATH}/scripts/find-node-for-xcode.sh"
 fi
 
diff --git a/node_modules/react-native/sdks/.hermesversion b/node_modules/react-native/sdks/.hermesversion
index 41b0202..b235e48 100644
--- a/node_modules/react-native/sdks/.hermesversion
+++ b/node_modules/react-native/sdks/.hermesversion
@@ -1 +1 @@
-hermes-2023-03-20-RNv0.72.0-49794cfc7c81fb8f69fd60c3bbf85a7480cc5a77
\ No newline at end of file
+hermes-2023-03-07-RNv0.71.4-31fdcf738940875c9bacf251e149006cf515d763
\ No newline at end of file
diff --git a/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec b/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec
index 87d0710..b800547 100644
--- a/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec
+++ b/node_modules/react-native/sdks/hermes-engine/hermes-engine.podspec
@@ -17,13 +17,42 @@ version = package['version']
 
 # sdks/.hermesversion
 hermestag_file = File.join(react_native_path, "sdks", ".hermesversion")
-build_from_source = ENV['BUILD_FROM_SOURCE'] === 'true'
+isInCI = ENV['REACT_NATIVE_CI'] === 'true'
 
+source = {}
 git = "https://github.com/facebook/hermes.git"
 
-abort_if_invalid_tarball_provided!
+isInMain = version.include?('1000.0.0')
+isNightly = version.start_with?('0.0.0-')
 
-source = compute_hermes_source(build_from_source, hermestag_file, git, version, build_type, react_native_path)
+if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
+  if !File.exist?(ENV['HERMES_ENGINE_TARBALL_PATH'])
+    abort "[Hermes] HERMES_ENGINE_TARBALL_PATH is set, but points to a non-existing file: \"#{ENV['HERMES_ENGINE_TARBALL_PATH']}\"\nIf you don't want to use tarball, run `unset HERMES_ENGINE_TARBALL_PATH`"
+  end
+end
+
+if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
+  Pod::UI.puts "[Hermes] Using pre-built Hermes binaries from local path: #{ENV['HERMES_ENGINE_TARBALL_PATH']}".yellow if Object.const_defined?("Pod::UI")
+  source[:http] = "file://#{ENV['HERMES_ENGINE_TARBALL_PATH']}"
+elsif isInMain
+  Pod::UI.puts '[Hermes] Installing hermes-engine may take slightly longer, building Hermes compiler from source...'.yellow if Object.const_defined?("Pod::UI")
+  source[:git] = git
+  source[:commit] = `git ls-remote https://github.com/facebook/hermes main | cut -f 1`.strip
+elsif isNightly
+  Pod::UI.puts '[Hermes] Nightly version, download pre-built for Hermes'.yellow if Object.const_defined?("Pod::UI")
+  destination_path = download_nightly_hermes(react_native_path, version)
+  # set tarball as hermes engine
+  source[:http] = "file://#{destination_path}"
+elsif File.exist?(hermestag_file) && isInCI
+  Pod::UI.puts '[Hermes] Detected that you are on a React Native release branch, building Hermes from source but fetched from tag...'.yellow if Object.const_defined?("Pod::UI")
+  hermestag = File.read(hermestag_file).strip
+  source[:git] = git
+  source[:tag] = hermestag
+else
+  # Sample url from Maven:
+  # https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/0.71.0/react-native-artifacts-0.71.0-hermes-ios-debug.tar.gz
+  source[:http] = "https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/#{version}/react-native-artifacts-#{version}-hermes-ios-#{build_type.to_s}.tar.gz"
+end
 
 Pod::Spec.new do |spec|
   spec.name        = "hermes-engine"
@@ -39,14 +68,11 @@ Pod::Spec.new do |spec|
   spec.preserve_paths      = '**/*.*'
   spec.source_files        = ''
 
-  spec.pod_target_xcconfig = {
+  spec.xcconfig = {
                     "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
                     "CLANG_CXX_LIBRARY" => "compiler-default"
                   }.merge!(build_type == :debug ? { "GCC_PREPROCESSOR_DEFINITIONS" => "HERMES_ENABLE_DEBUGGER=1" } : {})
 
-  spec.ios.vendored_frameworks = "destroot/Library/Frameworks/ios/hermes.framework"
-  spec.osx.vendored_frameworks = "destroot/Library/Frameworks/macosx/hermes.framework"
-
   if source[:http] then
 
     spec.subspec 'Pre-built' do |ss|
@@ -78,36 +104,39 @@ Pod::Spec.new do |spec|
       ss.header_dir = 'hermes/Public'
     end
 
-    hermesc_path = "${PODS_ROOT}/hermes-engine/build_host_hermesc"
+    hermesc_path = ""
 
     if ENV.has_key?('HERMES_OVERRIDE_HERMESC_PATH') && File.exist?(ENV['HERMES_OVERRIDE_HERMESC_PATH']) then
       hermesc_path = ENV['HERMES_OVERRIDE_HERMESC_PATH']
+    else
+      # Keep hermesc_path synchronized with .gitignore entry.
+      ENV['REACT_NATIVE_PATH'] = react_native_path
+      hermesc_path = "${REACT_NATIVE_PATH}/sdks/hermes-engine/build_host_hermesc"
+      # NOTE: Prepare command is not run  if the pod is not downloaded.
+      spec.prepare_command = ". #{react_native_path}/sdks/hermes-engine/utils/build-hermesc-xcode.sh #{hermesc_path}"
     end
 
     spec.user_target_xcconfig = {
+      'FRAMEWORK_SEARCH_PATHS' => '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/iphoneos" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/iphonesimulator" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/macosx" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/catalyst"',
+      'OTHER_LDFLAGS' => '-framework "hermes"',
       'HERMES_CLI_PATH' => "#{hermesc_path}/bin/hermesc"
     }
 
-    spec.prepare_command = ". #{react_native_path}/sdks/hermes-engine/utils/create-dummy-hermes-xcframework.sh"
-
-    CMAKE_BINARY = %x(command -v cmake | tr -d '\n')
-    # NOTE: Script phases are sorted alphabetically inside Xcode project
     spec.script_phases = [
       {
-        :name => '[RN] [1] Build Hermesc',
+        :name => 'Build Hermes',
         :script => <<-EOS
         . ${PODS_ROOT}/../.xcode.env
-        export CMAKE_BINARY=${CMAKE_BINARY:-#{CMAKE_BINARY}}
-        . ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/build-hermesc-xcode.sh #{hermesc_path}
+        export CMAKE_BINARY=${CMAKE_BINARY:-#{%x(command -v cmake | tr -d '\n')}}
+        . ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/build-hermes-xcode.sh #{version} #{hermesc_path}/ImportHermesc.cmake
         EOS
       },
       {
-        :name => '[RN] [2] Build Hermes',
-        :script => <<-EOS
-        . ${PODS_ROOT}/../.xcode.env
-        export CMAKE_BINARY=${CMAKE_BINARY:-#{CMAKE_BINARY}}
-        . ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/build-hermes-xcode.sh #{version} #{hermesc_path}/ImportHermesc.cmake
-        EOS
+        :name => 'Copy Hermes Framework',
+        :script => ". ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/copy-hermes-xcode.sh"
       }
     ]
   end
diff --git a/node_modules/react-native/sdks/hermes-engine/hermes-utils.rb b/node_modules/react-native/sdks/hermes-engine/hermes-utils.rb
index 06f3644..0842496 100644
--- a/node_modules/react-native/sdks/hermes-engine/hermes-utils.rb
+++ b/node_modules/react-native/sdks/hermes-engine/hermes-utils.rb
@@ -6,98 +6,6 @@
 require 'net/http'
 require 'rexml/document'
 
-# This function abort the build if the `HERMES_ENGINE_TARBALL_PATH` ENV variable is set with an invalid path
-def abort_if_invalid_tarball_provided!()
-    if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH') && !File.exist?(ENV['HERMES_ENGINE_TARBALL_PATH'])
-        abort "[Hermes] HERMES_ENGINE_TARBALL_PATH is set, but points to a non-existing file: \"#{ENV['HERMES_ENGINE_TARBALL_PATH']}\"\nIf you don't want to use tarball, run `unset HERMES_ENGINE_TARBALL_PATH`"
-    end
-end
-
-# It computes the right value for the hermes-engine.podspec's source.
-# - To use a specific tarball, install the dependencies with:
-# `HERMES_ENGINE_TARBALL_PATH=<path_to_tarball> bundle exec pod install`
-# - To force a build from source, install the dependencies with:
-# `BUILD_FROM_SOURCE=true bundle exec pod install`
-# If none of the two are provided, Cocoapods will check whether there is a tarball for the current version
-# (either release or nightly). If not, it will fall back building from source (the latest commit on main).
-#
-# Parameters:
-# - build_from_source: boolean to force a build from source.
-# - hermestag_file: path to the hermes tag file.
-# - git: uri to the hermes repository
-# - version: current version of the pod
-# - build_type: build type of the hermes engine. It can be `:release` or `:debug`
-# - react_native_path: path to react native
-#
-# Returns: a properly configured source object
-def compute_hermes_source(build_from_source, hermestag_file, git, version, build_type, react_native_path)
-    source = {}
-
-    if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
-        use_tarball(source)
-    elsif build_from_source
-        if File.exist?(hermestag_file)
-            build_from_tagfile(source, git, hermestag_file)
-        else
-            build_hermes_from_source(source, git)
-        end
-    elsif hermes_artifact_exists(release_tarball_url(version, build_type))
-        use_release_tarball(source, version, build_type)
-    elsif hermes_artifact_exists(nightly_tarball_url(version).gsub("\\", ""))
-        use_nightly_tarball(source, react_native_path, version)
-    else
-        build_hermes_from_source(source, git)
-    end
-
-    return source
-end
-
-def use_tarball(source)
-    tarball_path = ENV['HERMES_ENGINE_TARBALL_PATH']
-    putsIfPodPresent("[Hermes] Using pre-built Hermes binaries from local path: #{tarball_path}")
-    source[:http] = "file://#{tarball_path}"
-end
-
-def build_from_tagfile(source, git, hermestag_file)
-    hermestag = File.read(hermestag_file).strip
-    putsIfPodPresent("[Hermes] Building Hermes from source from tag #{hermestag}...")
-    source[:git] = git
-    source[:tag] = hermestag
-end
-
-def use_release_tarball(source, version, build_type)
-    # Sample url from Maven:
-    # https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/0.71.0/react-native-artifacts-0.71.0-hermes-ios-debug.tar.gz
-    putsIfPodPresent('[Hermes] Using the release tarball from Maven Central', 'info')
-    source[:http] = release_tarball_url(version, build_type)
-end
-
-def release_tarball_url(version, build_type)
-    return "https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/#{version}/react-native-artifacts-#{version}-hermes-ios-#{build_type.to_s}.tar.gz"
-end
-
-def use_nightly_tarball(source, react_native_path, version)
-    putsIfPodPresent('[Hermes] Nightly version, download pre-built for Hermes')
-    destination_path = download_nightly_hermes(react_native_path, version)
-    # set tarball as hermes engine
-    source[:http] = "file://#{destination_path}"
-end
-
-def putsIfPodPresent(message, level = 'warning')
-    unless Object.const_defined?("Pod::UI")
-        return
-    end
-
-    case level
-    when 'info'
-        Pod::UI.puts message.green
-    when 'error'
-        Pod::UI.puts message.red
-    else
-        Pod::UI.puts message.yellow
-    end
-end
-
 # This function downloads the nightly prebuilt version of Hermes based on the passed version
 # and save it in the node_module/react_native/sdks/downloads folder
 # It then returns the path to the hermes tarball
@@ -107,38 +15,12 @@ end
 # - version: the version of React Native that requires the Hermes tarball
 # Returns: the path to the downloaded Hermes tarball
 def download_nightly_hermes(react_native_path, version)
-    tarball_url = nightly_tarball_url(version)
+    params = "r=snapshots\&g=com.facebook.react\&a=react-native-artifacts\&c=hermes-ios-debug\&e=tar.gz\&v=#{version}-SNAPSHOT"
+    tarball_url = "http://oss.sonatype.org/service/local/artifact/maven/redirect\?#{params}"
 
     destination_folder = "#{react_native_path}/sdks/downloads"
-    destination_path = "#{destination_folder}/hermes-ios-#{version}.tar.gz"
+    destination_path = "#{destination_folder}/hermes-ios.tar.gz"
 
-    unless File.exist?(destination_path)
-      # Download to a temporary file first so we don't cache incomplete downloads.
-      tmp_file = "#{destination_folder}/hermes-ios.download"
-      `mkdir -p "#{destination_folder}" && curl "#{tarball_url}" -Lo "#{tmp_file}" && mv "#{tmp_file}" "#{destination_path}"`
-    end
+    `mkdir -p "#{destination_folder}" && curl "#{tarball_url}" -Lo "#{destination_path}"`
     return destination_path
 end
-
-def nightly_tarball_url(version)
-    params = "r=snapshots\&g=com.facebook.react\&a=react-native-artifacts\&c=hermes-ios-debug\&e=tar.gz\&v=#{version}-SNAPSHOT"
-    return "http://oss.sonatype.org/service/local/artifact/maven/redirect\?#{params}"
-end
-
-def build_hermes_from_source(source, git)
-    putsIfPodPresent('[Hermes] Installing hermes-engine may take slightly longer, building Hermes compiler from source...')
-    source[:git] = git
-    source[:commit] = `git ls-remote https://github.com/facebook/hermes main | cut -f 1`.strip
-end
-
-# This function checks that Hermes artifact exists.
-# As of now it should check it on the Maven repo.
-#
-# Parameters
-# - version: the version of React Native
-# - build_type: debug or release
-def hermes_artifact_exists(tarball_url)
-    # -L is used to follow redirects, useful for the nightlies
-    # I also needed to wrap the url in quotes to avoid escaping & and ?.
-    return (`curl -o /dev/null --silent -Iw '%{http_code}' -L "#{tarball_url}"` == "200")
-end
diff --git a/node_modules/react-native/sdks/hermes-engine/utils/build-apple-framework.sh b/node_modules/react-native/sdks/hermes-engine/utils/build-apple-framework.sh
index 70e627f..87faae6 100755
--- a/node_modules/react-native/sdks/hermes-engine/utils/build-apple-framework.sh
+++ b/node_modules/react-native/sdks/hermes-engine/utils/build-apple-framework.sh
@@ -129,21 +129,11 @@ function create_universal_framework {
   echo "Creating universal framework for platforms: ${platforms[*]}"
 
   for i in "${!platforms[@]}"; do
-    local platform="${platforms[$i]}"
-    local hermes_framework_path="${platform}/hermes.framework"
-    local dSYM_path="$hermes_framework_path"
-    local dSYM_base_path="$HERMES_PATH/destroot/Library/Frameworks"
-
-    # If the dSYM rename has failed, the dSYM are generated as 0.dSYM
-    # (Apple default name) rather then hermes.framework.dSYM.
-    if [[ -e "$dSYM_base_path/${platform}/0.dSYM" ]]; then
-      dSYM_path="${platform}/0"
-    fi
-
+    local hermes_framework_path="${platforms[$i]}/hermes.framework"
     args+="-framework $hermes_framework_path "
 
     # Path to dSYM must be absolute
-    args+="-debug-symbols $dSYM_base_path/$dSYM_path.dSYM "
+    args+="-debug-symbols $HERMES_PATH/destroot/Library/Frameworks/$hermes_framework_path.dSYM "
   done
 
   mkdir -p universal
diff --git a/node_modules/react-native/sdks/hermes-engine/utils/build-hermes-xcode.sh b/node_modules/react-native/sdks/hermes-engine/utils/build-hermes-xcode.sh
index 5093976..37faee3 100755
--- a/node_modules/react-native/sdks/hermes-engine/utils/build-hermes-xcode.sh
+++ b/node_modules/react-native/sdks/hermes-engine/utils/build-hermes-xcode.sh
@@ -63,10 +63,3 @@ echo "Build Apple framework"
   --build "${PODS_ROOT}/hermes-engine/build/${PLATFORM_NAME}" \
   --target "install/strip" \
   -j "$(sysctl -n hw.ncpu)"
-
-echo "Copy Apple framework to destroot/Library/Frameworks"
-
-cp -pfR \
-  "${PODS_ROOT}/hermes-engine/destroot/Library/Frameworks/${PLATFORM_NAME}/hermes.framework" \
-  "${PODS_ROOT}/hermes-engine/destroot/Library/Frameworks/ios"
-rm -rf "${PODS_ROOT}/hermes-engine/destroot/Library/Frameworks/${PLATFORM_NAME}"
diff --git a/node_modules/react-native/sdks/hermes-engine/utils/build-hermesc-xcode.sh b/node_modules/react-native/sdks/hermes-engine/utils/build-hermesc-xcode.sh
index b8aef2d..6b1ea91 100755
--- a/node_modules/react-native/sdks/hermes-engine/utils/build-hermesc-xcode.sh
+++ b/node_modules/react-native/sdks/hermes-engine/utils/build-hermesc-xcode.sh
@@ -8,16 +8,9 @@ set -x
 
 hermesc_dir_path="$1"
 
-# This script is supposed to be executed from Xcode "run script" phase.
-# Xcode sets up its build environment based on the build target.
-# Here we override relevant envvars to make sure that we build hermesc for macosx,
-# even if Xcode build target is iphone, iponesimulator, etc.
-MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion)
-export MACOSX_DEPLOYMENT_TARGET=$MACOSX_DEPLOYMENT_TARGET
-SDKROOT=$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
-export SDKROOT=$SDKROOT
+CMAKE_BINARY=${CMAKE_BINARY:-$(command -v cmake | tr -d '\n')}
 
-if ! "$CMAKE_BINARY" -S "${PODS_ROOT}/hermes-engine" -B "$hermesc_dir_path"
+if ! "$CMAKE_BINARY" -S . -B "$hermesc_dir_path"
 then
     echo "Failed to configure Hermesc cmake project."
     exit 1
diff --git a/node_modules/react-native/sdks/hermes-engine/utils/copy-hermes-xcode.sh b/node_modules/react-native/sdks/hermes-engine/utils/copy-hermes-xcode.sh
index c09464e..1b14941 100755
--- a/node_modules/react-native/sdks/hermes-engine/utils/copy-hermes-xcode.sh
+++ b/node_modules/react-native/sdks/hermes-engine/utils/copy-hermes-xcode.sh
@@ -4,4 +4,19 @@
 # This source code is licensed under the MIT license found in the
 # LICENSE file in the root directory of this source tree.
 
-echo "This file is no-op now. Remove \"[RN] Copy Hermes Framework\" script phase from your main target if you don't want to see this message."
+set -x
+
+src="${PODS_ROOT}/hermes-engine/destroot/Library/Frameworks/${PLATFORM_NAME}/hermes.framework"
+
+if [[ ! -e "$src" ]]; then
+  echo "$src does not exist."
+  exit 1
+fi
+
+dst1="${PODS_XCFRAMEWORKS_BUILD_DIR}/hermes"
+[ ! -f "$dst1" ] && mkdir -p "$dst1"
+cp -R "$src" "$dst1"
+
+dst2="${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}"
+[ ! -f "$dst2" ] && mkdir -p "$dst2"
+cp -R "$src" "$dst2"
diff --git a/node_modules/react-native/sdks/hermes-engine/utils/create-dummy-hermes-xcframework.sh b/node_modules/react-native/sdks/hermes-engine/utils/create-dummy-hermes-xcframework.sh
deleted file mode 100644
index 0e45374..0000000
--- a/node_modules/react-native/sdks/hermes-engine/utils/create-dummy-hermes-xcframework.sh
+++ /dev/null
@@ -1,30 +0,0 @@
-#!/bin/bash
-# Copyright (c) Meta Platforms, Inc. and affiliates.
-#
-# This source code is licensed under the MIT license found in the
-# LICENSE file in the root directory of this source tree.
-
-set -x
-
-# CocoaPods requires vendored frameworks to exist before `pod install` is run,
-# and to be proper Moch-O binaries in order to auto-link them to the user's Xcode project.
-# This script creates dummy hermes.framework for macosx and ios.
-# They are then get rewritten by `build-hermes-xcode.sh` during Xcode build.
-
-rm -rf destroot
-
-mkdir -p destroot/Library/Frameworks
-
-pushd destroot/Library/Frameworks > /dev/null || exit 1
-
-echo '' > dummy.c
-
-mkdir -p macosx/hermes.framework
-clang dummy.c -dynamiclib -o macosx/hermes.framework/hermes
-
-mkdir -p ios/hermes.framework
-clang dummy.c -dynamiclib -o ios/hermes.framework/hermes
-
-rm dummy.c
-
-popd > /dev/null || exit 1
diff --git a/node_modules/react-native/sdks/hermesc/linux64-bin/hermesc b/node_modules/react-native/sdks/hermesc/linux64-bin/hermesc
index 63ce1c7..73cf7e1 100755
Binary files a/node_modules/react-native/sdks/hermesc/linux64-bin/hermesc and b/node_modules/react-native/sdks/hermesc/linux64-bin/hermesc differ
diff --git a/node_modules/react-native/sdks/hermesc/osx-bin/hermesc b/node_modules/react-native/sdks/hermesc/osx-bin/hermesc
index c8d0909..90cc6fa 100755
Binary files a/node_modules/react-native/sdks/hermesc/osx-bin/hermesc and b/node_modules/react-native/sdks/hermesc/osx-bin/hermesc differ
diff --git a/node_modules/react-native/sdks/hermesc/win64-bin/hermesc.exe b/node_modules/react-native/sdks/hermesc/win64-bin/hermesc.exe
index 90999db..7d223f5 100755
Binary files a/node_modules/react-native/sdks/hermesc/win64-bin/hermesc.exe and b/node_modules/react-native/sdks/hermesc/win64-bin/hermesc.exe differ
diff --git a/node_modules/react-native/settings.gradle.kts b/node_modules/react-native/settings.gradle.kts
index df9e6e8..f4dc00a 100644
--- a/node_modules/react-native/settings.gradle.kts
+++ b/node_modules/react-native/settings.gradle.kts
@@ -5,12 +5,6 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-// This is the settings.gradle.kts file used when the users
-// is doing a build from source. It's triggered as the user
-// will add an `includeBuild(../node_modules/react-native)` in
-// their settings.gradle.kts file.
-// More on this here: https://reactnative.dev/contributing/how-to-build-from-source
-
 pluginManagement {
   repositories {
     mavenCentral()
@@ -19,13 +13,22 @@ pluginManagement {
   }
 }
 
-rootProject.name = "react-native-github"
+include(":ReactAndroid", ":ReactAndroid:hermes-engine", ":ReactAndroid:external-artifacts")
 
-include(":packages:react-native:ReactAndroid")
+// If the ./packages folder exists, then we're inside the React Native repository.
+// If not, a users is consuming this project for a build from source.
+if (File("${rootDir}/packages").exists()) {
+  include(":packages:rn-tester:android:app")
+  // Include this to enable codegen Gradle plugin.
+  includeBuild("packages/react-native-gradle-plugin/")
+}
 
-project(":packages:react-native:ReactAndroid").projectDir = file("ReactAndroid/")
+rootProject.name = "react-native-github"
 
-include(":packages:react-native:ReactAndroid:hermes-engine")
+plugins { id("com.gradle.enterprise").version("3.7.1") }
 
-project(":packages:react-native:ReactAndroid:hermes-engine").projectDir =
-    file("ReactAndroid/hermes-engine/")
+// If you specify a file inside gradle/gradle-enterprise.gradle.kts
+// you can configure your custom Gradle Enterprise instance
+if (File("./gradle/gradle-enterprise.gradle.kts").exists()) {
+  apply(from = "./gradle/gradle-enterprise.gradle.kts")
+}
diff --git a/node_modules/react-native/template/Gemfile b/node_modules/react-native/template/Gemfile
index 1fa2c2e..1142b1b 100644
--- a/node_modules/react-native/template/Gemfile
+++ b/node_modules/react-native/template/Gemfile
@@ -1,6 +1,6 @@
 source 'https://rubygems.org'
 
 # You may use http://rbenv.org/ or https://rvm.io/ to install and use this version
-ruby ">= 2.6.10"
+ruby '>= 2.6.10'
 
-gem 'cocoapods', '~> 1.12'
+gem 'cocoapods', '>= 1.11.3'
diff --git a/node_modules/react-native/template/README.md b/node_modules/react-native/template/README.md
deleted file mode 100644
index 12470c3..0000000
--- a/node_modules/react-native/template/README.md
+++ /dev/null
@@ -1,79 +0,0 @@
-This is a new [**React Native**](https://reactnative.dev) project, bootstrapped using [`@react-native-community/cli`](https://github.com/react-native-community/cli).
-
-# Getting Started
-
->**Note**: Make sure you have completed the [React Native - Environment Setup](https://reactnative.dev/docs/environment-setup) instructions till "Creating a new application" step, before proceeding.
-
-## Step 1: Start the Metro Server
-
-First, you will need to start **Metro**, the JavaScript _bundler_ that ships _with_ React Native.
-
-To start Metro, run the following command from the _root_ of your React Native project:
-
-```bash
-# using npm
-npm start
-
-# OR using Yarn
-yarn start
-```
-
-## Step 2: Start your Application
-
-Let Metro Bundler run in its _own_ terminal. Open a _new_ terminal from the _root_ of your React Native project. Run the following command to start your _Android_ or _iOS_ app:
-
-### For Android
-
-```bash
-# using npm
-npm run android
-
-# OR using Yarn
-yarn android
-```
-
-### For iOS
-
-```bash
-# using npm
-npm run ios
-
-# OR using Yarn
-yarn ios
-```
-
-If everything is set up _correctly_, you should see your new app running in your _Android Emulator_ or _iOS Simulator_ shortly provided you have set up your emulator/simulator correctly.
-
-This is one way to run your app — you can also run it directly from within Android Studio and Xcode respectively.
-
-## Step 3: Modifying your App
-
-Now that you have successfully run the app, let's modify it.
-
-1. Open `App.tsx` in your text editor of choice and edit some lines.
-2. For **Android**: Press the <kbd>R</kbd> key twice or select **"Reload"** from the **Developer Menu** (<kbd>Ctrl</kbd> + <kbd>M</kbd> (on Window and Linux) or <kbd>Cmd ⌘</kbd> + <kbd>M</kbd> (on macOS)) to see your changes!
-
-   For **iOS**: Hit <kbd>Cmd ⌘</kbd> + <kbd>R</kbd> in your iOS Simulator to reload the app and see your changes!
-
-## Congratulations! :tada:
-
-You've successfully run and modified your React Native App. :partying_face:
-
-### Now what?
-
-- If you want to add this new React Native code to an existing application, check out the [Integration guide](https://reactnative.dev/docs/integration-with-existing-apps).
-- If you're curious to learn more about React Native, check out the [Introduction to React Native](https://reactnative.dev/docs/getting-started).
-
-# Troubleshooting
-
-If you can't get this to work, see the [Troubleshooting](https://reactnative.dev/docs/troubleshooting) page.
-
-# Learn More
-
-To learn more about React Native, take a look at the following resources:
-
-- [React Native Website](https://reactnative.dev) - learn more about React Native.
-- [Getting Started](https://reactnative.dev/docs/environment-setup) - an **overview** of React Native and how setup your environment.
-- [Learn the Basics](https://reactnative.dev/docs/getting-started) - a **guided tour** of the React Native **basics**.
-- [Blog](https://reactnative.dev/blog) - read the latest official React Native **Blog** posts.
-- [`@facebook/react-native`](https://github.com/facebook/react-native) - the Open Source; GitHub **repository** for React Native.
diff --git a/node_modules/react-native/template/__tests__/App.test.tsx b/node_modules/react-native/template/__tests__/App-test.tsx
similarity index 73%
rename from node_modules/react-native/template/__tests__/App.test.tsx
rename to node_modules/react-native/template/__tests__/App-test.tsx
index 3413ac1..1784766 100644
--- a/node_modules/react-native/template/__tests__/App.test.tsx
+++ b/node_modules/react-native/template/__tests__/App-test.tsx
@@ -6,9 +6,6 @@ import 'react-native';
 import React from 'react';
 import App from '../App';
 
-// Note: import explicitly to use the types shiped with jest.
-import {it} from '@jest/globals';
-
 // Note: test renderer must be required after react-native.
 import renderer from 'react-test-renderer';
 
diff --git a/node_modules/react-native/template/_eslintrc.js b/node_modules/react-native/template/_eslintrc.js
index 187894b..40c6dcd 100644
--- a/node_modules/react-native/template/_eslintrc.js
+++ b/node_modules/react-native/template/_eslintrc.js
@@ -1,4 +1,4 @@
 module.exports = {
   root: true,
-  extends: '@react-native',
+  extends: '@react-native-community',
 };
diff --git a/node_modules/react-native/template/_gitignore b/node_modules/react-native/template/_gitignore
index 0cab2ac..16f8c30 100644
--- a/node_modules/react-native/template/_gitignore
+++ b/node_modules/react-native/template/_gitignore
@@ -61,6 +61,3 @@ yarn-error.log
 
 # Temporary files created by Metro to check the health of the file watcher
 .metro-health-check*
-
-# testing
-/coverage
diff --git a/node_modules/react-native/template/_node-version b/node_modules/react-native/template/_node-version
new file mode 100644
index 0000000..3c03207
--- /dev/null
+++ b/node_modules/react-native/template/_node-version
@@ -0,0 +1 @@
+18
diff --git a/node_modules/react-native/template/android/app/build.gradle b/node_modules/react-native/template/android/app/build.gradle
index 55ffbed..71195c7 100644
--- a/node_modules/react-native/template/android/app/build.gradle
+++ b/node_modules/react-native/template/android/app/build.gradle
@@ -1,6 +1,8 @@
 apply plugin: "com.android.application"
 apply plugin: "com.facebook.react"
 
+import com.android.build.OutputFile
+
 /**
  * This is the configuration block to customize your React Native Android app.
  * By default you don't need to apply any configuration, just uncomment the lines you need.
@@ -11,8 +13,8 @@ react {
     // root = file("../")
     //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
     // reactNativeDir = file("../node_modules/react-native")
-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
-    // codegenDir = file("../node_modules/@react-native/codegen")
+    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen
+    // codegenDir = file("../node_modules/react-native-codegen")
     //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
     // cliFile = file("../node_modules/react-native/cli.js")
 
@@ -50,6 +52,14 @@ react {
     // hermesFlags = ["-O", "-output-source-map"]
 }
 
+/**
+ * Set this to true to create four separate APKs instead of one,
+ * one for each native architecture. This is useful if you don't
+ * use App Bundles (https://developer.android.com/guide/app-bundle/)
+ * and want to have separate APKs to upload to the Play Store.
+ */
+def enableSeparateBuildPerCPUArchitecture = false
+
 /**
  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
  */
@@ -68,6 +78,16 @@ def enableProguardInReleaseBuilds = false
  */
 def jscFlavor = 'org.webkit:android-jsc:+'
 
+/**
+ * Private function to get the list of Native Architectures you want to build.
+ * This reads the value from reactNativeArchitectures in your gradle.properties
+ * file and works together with the --active-arch-only flag of react-native run-android.
+ */
+def reactNativeArchitectures() {
+    def value = project.getProperties().get("reactNativeArchitectures")
+    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
+}
+
 android {
     ndkVersion rootProject.ext.ndkVersion
 
@@ -81,6 +101,15 @@ android {
         versionCode 1
         versionName "1.0"
     }
+
+    splits {
+        abi {
+            reset()
+            enable enableSeparateBuildPerCPUArchitecture
+            universalApk false  // If true, also generate a universal APK
+            include (*reactNativeArchitectures())
+        }
+    }
     signingConfigs {
         debug {
             storeFile file('debug.keystore')
@@ -101,12 +130,30 @@ android {
             proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
         }
     }
+
+    // applicationVariants are e.g. debug, release
+    applicationVariants.all { variant ->
+        variant.outputs.each { output ->
+            // For each separate APK per architecture, set a unique version code as described here:
+            // https://developer.android.com/studio/build/configure-apk-splits.html
+            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.
+            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
+            def abi = output.getFilter(OutputFile.ABI)
+            if (abi != null) {  // null for the universal-debug, universal-release variants
+                output.versionCodeOverride =
+                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)
+            }
+
+        }
+    }
 }
 
 dependencies {
     // The version of react-native is set by the React Native Gradle Plugin
     implementation("com.facebook.react:react-android")
 
+    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.0.0")
+
     debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
     debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
         exclude group:'com.squareup.okhttp3', module:'okhttp'
diff --git a/node_modules/react-native/template/android/app/src/main/java/com/helloworld/MainActivity.java b/node_modules/react-native/template/android/app/src/main/java/com/helloworld/MainActivity.java
index 1e9c1d9..96fcdf2 100644
--- a/node_modules/react-native/template/android/app/src/main/java/com/helloworld/MainActivity.java
+++ b/node_modules/react-native/template/android/app/src/main/java/com/helloworld/MainActivity.java
@@ -27,6 +27,9 @@ public class MainActivity extends ReactActivity {
         this,
         getMainComponentName(),
         // If you opted-in for the New Architecture, we enable the Fabric Renderer.
-        DefaultNewArchitectureEntryPoint.getFabricEnabled());
+        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled
+        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).
+        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled
+        );
   }
 }
diff --git a/node_modules/react-native/template/android/build.gradle b/node_modules/react-native/template/android/build.gradle
index 34ea718..67d887b 100644
--- a/node_modules/react-native/template/android/build.gradle
+++ b/node_modules/react-native/template/android/build.gradle
@@ -15,7 +15,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle")
+        classpath("com.android.tools.build:gradle:7.3.1")
         classpath("com.facebook.react:react-native-gradle-plugin")
     }
 }
diff --git a/node_modules/react-native/template/android/gradle.properties b/node_modules/react-native/template/android/gradle.properties
index a3b2fa1..e4af465 100644
--- a/node_modules/react-native/template/android/gradle.properties
+++ b/node_modules/react-native/template/android/gradle.properties
@@ -25,7 +25,7 @@ android.useAndroidX=true
 android.enableJetifier=true
 
 # Version of flipper SDK to use with React Native
-FLIPPER_VERSION=0.182.0
+FLIPPER_VERSION=0.125.0
 
 # Use this property to specify which architecture you want to build.
 # You can also override it from the CLI using
diff --git a/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.jar b/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.jar
index 943f0cb..41d9927 100644
Binary files a/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.jar and b/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.properties b/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.properties
index 6ec1567..8fad3f5 100644
--- a/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.properties
+++ b/node_modules/react-native/template/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-8.0.1-all.zip
-networkTimeout=10000
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.5.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/node_modules/react-native/template/android/gradlew b/node_modules/react-native/template/android/gradlew
index 65dcd68..1b6c787 100755
--- a/node_modules/react-native/template/android/gradlew
+++ b/node_modules/react-native/template/android/gradlew
@@ -55,7 +55,7 @@
 #       Darwin, MinGW, and NonStop.
 #
 #   (3) This script is generated from the Groovy template
-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
 #       within the Gradle project.
 #
 #       You can find Gradle at https://github.com/gradle/gradle/.
@@ -80,11 +80,11 @@ do
     esac
 done
 
-# This is normally unused
-# shellcheck disable=SC2034
-APP_BASE_NAME=${0##*/}
 APP_HOME=$( cd "${APP_HOME:-./}" && pwd -P ) || exit
 
+APP_NAME="Gradle"
+APP_BASE_NAME=${0##*/}
+
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
@@ -143,16 +143,12 @@ fi
 if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
     case $MAX_FD in #(
       max*)
-        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
-        # shellcheck disable=SC3045 
         MAX_FD=$( ulimit -H -n ) ||
             warn "Could not query maximum file descriptor limit"
     esac
     case $MAX_FD in  #(
       '' | soft) :;; #(
       *)
-        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
-        # shellcheck disable=SC3045 
         ulimit -n "$MAX_FD" ||
             warn "Could not set maximum file descriptor limit to $MAX_FD"
     esac
@@ -209,12 +205,6 @@ set -- \
         org.gradle.wrapper.GradleWrapperMain \
         "$@"
 
-# Stop when "xargs" is not available.
-if ! command -v xargs >/dev/null 2>&1
-then
-    die "xargs is not available"
-fi
-
 # Use "xargs" to parse quoted args.
 #
 # With -n1 it outputs one arg per line, with the quotes and backslashes removed.
diff --git a/node_modules/react-native/template/android/gradlew.bat b/node_modules/react-native/template/android/gradlew.bat
index 6689b85..ac1b06f 100644
--- a/node_modules/react-native/template/android/gradlew.bat
+++ b/node_modules/react-native/template/android/gradlew.bat
@@ -14,7 +14,7 @@
 @rem limitations under the License.
 @rem
 
-@if "%DEBUG%"=="" @echo off
+@if "%DEBUG%" == "" @echo off
 @rem ##########################################################################
 @rem
 @rem  Gradle startup script for Windows
@@ -25,8 +25,7 @@
 if "%OS%"=="Windows_NT" setlocal
 
 set DIRNAME=%~dp0
-if "%DIRNAME%"=="" set DIRNAME=.
-@rem This is normally unused
+if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
@@ -41,7 +40,7 @@ if defined JAVA_HOME goto findJavaFromJavaHome
 
 set JAVA_EXE=java.exe
 %JAVA_EXE% -version >NUL 2>&1
-if %ERRORLEVEL% equ 0 goto execute
+if "%ERRORLEVEL%" == "0" goto execute
 
 echo.
 echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
@@ -76,15 +75,13 @@ set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
 
 :end
 @rem End local scope for the variables with windows NT shell
-if %ERRORLEVEL% equ 0 goto mainEnd
+if "%ERRORLEVEL%"=="0" goto mainEnd
 
 :fail
 rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
 rem the _cmd.exe /c_ return code!
-set EXIT_CODE=%ERRORLEVEL%
-if %EXIT_CODE% equ 0 set EXIT_CODE=1
-if not ""=="%GRADLE_EXIT_CONSOLE%" exit %EXIT_CODE%
-exit /b %EXIT_CODE%
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
 
 :mainEnd
 if "%OS%"=="Windows_NT" endlocal
diff --git a/node_modules/react-native/template/android/settings.gradle b/node_modules/react-native/template/android/settings.gradle
index c2c0717..ab284c3 100644
--- a/node_modules/react-native/template/android/settings.gradle
+++ b/node_modules/react-native/template/android/settings.gradle
@@ -1,4 +1,4 @@
 rootProject.name = 'HelloWorld'
 apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
 include ':app'
-includeBuild('../node_modules/@react-native/gradle-plugin')
+includeBuild('../node_modules/react-native-gradle-plugin')
diff --git a/node_modules/react-native/template/ios/HelloWorld/AppDelegate.mm b/node_modules/react-native/template/ios/HelloWorld/AppDelegate.mm
index 3a11a56..47957cf 100644
--- a/node_modules/react-native/template/ios/HelloWorld/AppDelegate.mm
+++ b/node_modules/react-native/template/ios/HelloWorld/AppDelegate.mm
@@ -23,4 +23,14 @@ - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
 #endif
 }
 
+/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.
+///
+/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html
+/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).
+/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.
+- (BOOL)concurrentRootEnabled
+{
+  return true;
+}
+
 @end
diff --git a/node_modules/react-native/template/ios/Podfile b/node_modules/react-native/template/ios/Podfile
index 9f51bd7..74f991b 100644
--- a/node_modules/react-native/template/ios/Podfile
+++ b/node_modules/react-native/template/ios/Podfile
@@ -1,9 +1,5 @@
-# Resolve react_native_pods.rb with node to allow for hoisting
-require Pod::Executable.execute_command('node', ['-p',
-  'require.resolve(
-    "react-native/scripts/react_native_pods.rb",
-    {paths: [process.argv[1]]},
-  )', __dir__]).strip
+require_relative '../node_modules/react-native/scripts/react_native_pods'
+require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
 
 platform :ios, min_ios_version_supported
 prepare_react_native_project!
@@ -34,6 +30,8 @@ target 'HelloWorld' do
   use_react_native!(
     :path => config[:reactNativePath],
     # Hermes is now enabled by default. Disable by setting this flag to false.
+    # Upcoming versions of React Native may rely on get_default_flags(), but
+    # we make it explicit here to aid in the React Native upgrade process.
     :hermes_enabled => flags[:hermes_enabled],
     :fabric_enabled => flags[:fabric_enabled],
     # Enables Flipper.
@@ -51,10 +49,10 @@ target 'HelloWorld' do
   end
 
   post_install do |installer|
-    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
     react_native_post_install(
       installer,
-      config[:reactNativePath],
+      # Set `mac_catalyst_enabled` to `true` in order to apply patches
+      # necessary for Mac Catalyst builds
       :mac_catalyst_enabled => false
     )
     __apply_Xcode_12_5_M1_post_install_workaround(installer)
diff --git a/node_modules/react-native/template/jest.config.js b/node_modules/react-native/template/jest.config.js
deleted file mode 100644
index 8eb675e..0000000
--- a/node_modules/react-native/template/jest.config.js
+++ /dev/null
@@ -1,3 +0,0 @@
-module.exports = {
-  preset: 'react-native',
-};
diff --git a/node_modules/react-native/template/metro.config.js b/node_modules/react-native/template/metro.config.js
index ad8f87b..e91aba9 100644
--- a/node_modules/react-native/template/metro.config.js
+++ b/node_modules/react-native/template/metro.config.js
@@ -1,11 +1,17 @@
-const {getDefaultConfig, mergeConfig} = require('@react-native/metro-config');
-
 /**
- * Metro configuration
- * https://facebook.github.io/metro/docs/configuration
+ * Metro configuration for React Native
+ * https://github.com/facebook/react-native
  *
- * @type {import('metro-config').MetroConfig}
+ * @format
  */
-const config = {};
 
-module.exports = mergeConfig(getDefaultConfig(__dirname), config);
+module.exports = {
+  transformer: {
+    getTransformOptions: async () => ({
+      transform: {
+        experimentalImportSupport: false,
+        inlineRequires: true,
+      },
+    }),
+  },
+};
diff --git a/node_modules/react-native/template/package.json b/node_modules/react-native/template/package.json
index 243665d..7793138 100644
--- a/node_modules/react-native/template/package.json
+++ b/node_modules/react-native/template/package.json
@@ -11,26 +11,26 @@
   },
   "dependencies": {
     "react": "18.2.0",
-    "react-native": "0.72.3"
+    "react-native": "0.71.12"
   },
   "devDependencies": {
     "@babel/core": "^7.20.0",
     "@babel/preset-env": "^7.20.0",
     "@babel/runtime": "^7.20.0",
-    "@react-native/eslint-config": "^0.72.2",
-    "@react-native/metro-config": "^0.72.9",
-    "@tsconfig/react-native": "^3.0.0",
+    "@react-native-community/eslint-config": "^3.2.0",
+    "@tsconfig/react-native": "^2.0.2",
+    "@types/jest": "^29.2.1",
     "@types/react": "^18.0.24",
     "@types/react-test-renderer": "^18.0.0",
     "babel-jest": "^29.2.1",
     "eslint": "^8.19.0",
     "jest": "^29.2.1",
-    "metro-react-native-babel-preset": "0.76.7",
+    "metro-react-native-babel-preset": "0.73.10",
     "prettier": "^2.4.1",
     "react-test-renderer": "18.2.0",
     "typescript": "4.8.4"
   },
-  "engines": {
-    "node": ">=16"
+  "jest": {
+    "preset": "react-native"
   }
 }
diff --git a/node_modules/react-native/types/.npmignore b/node_modules/react-native/types/.npmignore
new file mode 100644
index 0000000..0480d43
--- /dev/null
+++ b/node_modules/react-native/types/.npmignore
@@ -0,0 +1 @@
+__typetests__
diff --git a/node_modules/react-native/types/experimental.d.ts b/node_modules/react-native/types/experimental.d.ts
deleted file mode 100644
index 2d976b5..0000000
--- a/node_modules/react-native/types/experimental.d.ts
+++ /dev/null
@@ -1,101 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @format
- */
-
-/**
- * These are types for things that are present for New Architecture enabled apps
- * which is currently considered experimental.
- *
- * To load the types declared here in an actual project, there are three ways.
- *
- * 1. If your `tsconfig.json` already has a `"types"` array in the `"compilerOptions"` section,
- * is to add `"react-native/types/experimental"` to the `"types"` array.
- *
- * 2. Alternatively, a specific import syntax can to be used from a typescript file.
- * This module does not exist in reality, which is why the {} is important:
- *
- * ```ts
- * import {} from 'react-native/types/experimental'
- * ```
- *
- * 3. It is also possible to include it through a triple-slash reference:
- *
- * ```ts
- * /// <reference types="react-native/types/experimental" />
- * ```
- *
- * Either the import or the reference only needs to appear once, anywhere in the project.
- */
-
-import {DimensionValue} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
-
-export {};
-
-declare module '.' {
-  export interface FlexStyle {
-    /**
-     * Equivalent to `marginVertical`
-     */
-    marginBlock?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `marginBottom`
-     */
-    marginBlockEnd?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `marginTop`
-     */
-    marginBlockStart?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `marginHorizontal`
-     */
-    marginInline?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `marginEnd`
-     */
-    marginInlineEnd?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `marginStart`
-     */
-    marginInlineStart?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `paddingVertical`
-     */
-    paddingBlock?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `paddingBottom`
-     */
-    paddingBlockEnd?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `paddingTop`
-     */
-    paddingBlockStart?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `paddingHorizontal`
-     */
-    paddingInline?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `paddingEnd`
-     */
-    paddingInlineEnd?: DimensionValue | undefined;
-
-    /**
-     * Equivalent to `paddingStart`
-     */
-    paddingInlineStart?: DimensionValue | undefined;
-  }
-}
diff --git a/node_modules/react-native/types/index.d.ts b/node_modules/react-native/types/index.d.ts
index 5177707..ff9d3ec 100644
--- a/node_modules/react-native/types/index.d.ts
+++ b/node_modules/react-native/types/index.d.ts
@@ -51,7 +51,7 @@
 //                 Mateusz Wit <https://github.com/MateWW>
 //                 Saad Najmi <https://github.com/saadnajmi>
 // Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
-// Minimum TypeScript Version: 4.1
+// TypeScript Version: 3.0
 
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //
@@ -81,14 +81,17 @@ export * from '../Libraries/BatchedBridge/NativeModules';
 export * from '../Libraries/Components/AccessibilityInfo/AccessibilityInfo';
 export * from '../Libraries/Components/ActivityIndicator/ActivityIndicator';
 export * from '../Libraries/Components/Clipboard/Clipboard';
+export * from '../Libraries/Components/DatePicker/DatePickerIOS';
 export * from '../Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';
 export * from '../Libraries/Components/Keyboard/Keyboard';
 export * from '../Libraries/Components/Keyboard/KeyboardAvoidingView';
 export * from '../Libraries/Components/Pressable/Pressable';
 export * from '../Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';
+export * from '../Libraries/Components/ProgressViewIOS/ProgressViewIOS';
 export * from '../Libraries/Components/RefreshControl/RefreshControl';
 export * from '../Libraries/Components/SafeAreaView/SafeAreaView';
 export * from '../Libraries/Components/ScrollView/ScrollView';
+export * from '../Libraries/Components/Slider/Slider';
 export * from '../Libraries/Components/StatusBar/StatusBar';
 export * from '../Libraries/Components/Switch/Switch';
 export * from '../Libraries/Components/TextInput/InputAccessoryView';
@@ -115,7 +118,7 @@ export * from '../Libraries/LayoutAnimation/LayoutAnimation';
 export * from '../Libraries/Linking/Linking';
 export * from '../Libraries/Lists/FlatList';
 export * from '../Libraries/Lists/SectionList';
-export * from '@react-native/virtualized-lists';
+export * from '../Libraries/Lists/VirtualizedList';
 export * from '../Libraries/LogBox/LogBox';
 export * from '../Libraries/Modal/Modal';
 export * as Systrace from '../Libraries/Performance/Systrace';
@@ -147,10 +150,7 @@ export * from '../Libraries/Utilities/Platform';
 export * from '../Libraries/Vibration/Vibration';
 export * from '../Libraries/YellowBox/YellowBoxDeprecated';
 export * from '../Libraries/vendor/core/ErrorUtils';
-export {
-  EmitterSubscription,
-  EventSubscription,
-} from '../Libraries/vendor/emitter/EventEmitter';
+export * from '../Libraries/vendor/emitter/EventEmitter';
 
 export * from './public/DeprecatedPropertiesAlias';
 export * from './public/Insets';
diff --git a/node_modules/react-native/types/modules/Codegen.d.ts b/node_modules/react-native/types/modules/Codegen.d.ts
index dd7ddca..24de3b0 100644
--- a/node_modules/react-native/types/modules/Codegen.d.ts
+++ b/node_modules/react-native/types/modules/Codegen.d.ts
@@ -23,10 +23,10 @@ declare module 'react-native/Libraries/Utilities/codegenNativeComponent' {
   import type {HostComponent} from 'react-native';
 
   export interface Options {
-    readonly interfaceOnly?: boolean | undefined;
-    readonly paperComponentName?: string | undefined;
-    readonly paperComponentNameDeprecated?: string | undefined;
-    readonly excludedPlatforms?: ReadonlyArray<'iOS' | 'android'> | undefined;
+    readonly interfaceOnly?: boolean;
+    readonly paperComponentName?: string;
+    readonly paperComponentNameDeprecated?: string;
+    readonly excludedPlatforms?: ReadonlyArray<'iOS' | 'android'>;
   }
 
   export type NativeComponentType<T> = HostComponent<T>;
diff --git a/node_modules/react-native/types/modules/globals.d.ts b/node_modules/react-native/types/modules/globals.d.ts
index 1bd4d2c..042fd06 100644
--- a/node_modules/react-native/types/modules/globals.d.ts
+++ b/node_modules/react-native/types/modules/globals.d.ts
@@ -80,9 +80,7 @@ declare var Blob: {
   new (blobParts?: Array<Blob | string>, options?: BlobOptions): Blob;
 };
 
-type FormDataValue =
-  | string
-  | {name?: string | undefined; type?: string | undefined; uri: string};
+type FormDataValue = string | {name?: string; type?: string; uri: string};
 
 type FormDataPart =
   | {
@@ -92,8 +90,8 @@ type FormDataPart =
   | {
       uri: string;
       headers: {[name: string]: string};
-      name?: string | undefined;
-      type?: string | undefined;
+      name?: string;
+      type?: string;
     };
 
 declare class FormData {
@@ -162,7 +160,7 @@ declare interface RequestInit {
   method?: string | undefined;
   mode?: RequestMode_ | undefined;
   referrer?: string | undefined;
-  window?: any | undefined;
+  window?: any;
   signal?: AbortSignal | undefined;
 }
 
@@ -262,11 +260,11 @@ interface XMLHttpRequest extends EventTarget, XMLHttpRequestEventTarget {
   overrideMimeType(mime: string): void;
   send(data?: any): void;
   setRequestHeader(header: string, value: string): void;
-  readonly DONE: 4;
-  readonly HEADERS_RECEIVED: 2;
-  readonly LOADING: 3;
-  readonly OPENED: 1;
-  readonly UNSENT: 0;
+  readonly DONE: number;
+  readonly HEADERS_RECEIVED: number;
+  readonly LOADING: number;
+  readonly OPENED: number;
+  readonly UNSENT: number;
   addEventListener<K extends keyof XMLHttpRequestEventMap>(
     type: K,
     listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,
@@ -282,11 +280,11 @@ interface XMLHttpRequest extends EventTarget, XMLHttpRequestEventTarget {
 declare var XMLHttpRequest: {
   prototype: XMLHttpRequest;
   new (): XMLHttpRequest;
-  readonly DONE: 4;
-  readonly HEADERS_RECEIVED: 2;
-  readonly LOADING: 3;
-  readonly OPENED: 1;
-  readonly UNSENT: 0;
+  readonly DONE: number;
+  readonly HEADERS_RECEIVED: number;
+  readonly LOADING: number;
+  readonly OPENED: number;
+  readonly UNSENT: number;
 };
 
 interface XMLHttpRequestEventTargetEventMap {
@@ -411,7 +409,7 @@ declare class URLSearchParams {
 }
 
 interface WebSocketMessageEvent extends Event {
-  data?: any | undefined;
+  data?: any;
 }
 interface WebSocketErrorEvent extends Event {
   message: string;
@@ -495,9 +493,9 @@ declare class AbortSignal implements EventTarget {
     options?:
       | boolean
       | {
-          capture?: boolean | undefined;
-          once?: boolean | undefined;
-          passive?: boolean | undefined;
+          capture?: boolean;
+          once?: boolean;
+          passive?: boolean;
         },
   ) => void;
 
@@ -507,7 +505,7 @@ declare class AbortSignal implements EventTarget {
     options?:
       | boolean
       | {
-          capture?: boolean | undefined;
+          capture?: boolean;
         },
   ) => void;
 }
@@ -553,9 +551,9 @@ interface FileReader extends EventTarget {
   // readAsBinaryString(blob: Blob): void;
   readAsDataURL(blob: Blob): void;
   readAsText(blob: Blob, encoding?: string): void;
-  readonly DONE: 2;
-  readonly EMPTY: 0;
-  readonly LOADING: 1;
+  readonly DONE: number;
+  readonly EMPTY: number;
+  readonly LOADING: number;
   addEventListener<K extends keyof FileReaderEventMap>(
     type: K,
     listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,
@@ -573,7 +571,7 @@ interface FileReader extends EventTarget {
 declare var FileReader: {
   prototype: FileReader;
   new (): FileReader;
-  readonly DONE: 2;
-  readonly EMPTY: 0;
-  readonly LOADING: 1;
+  readonly DONE: number;
+  readonly EMPTY: number;
+  readonly LOADING: number;
 };
diff --git a/node_modules/react-native/types/public/DeprecatedPropertiesAlias.d.ts b/node_modules/react-native/types/public/DeprecatedPropertiesAlias.d.ts
index 9c92526..b7b1aa6 100644
--- a/node_modules/react-native/types/public/DeprecatedPropertiesAlias.d.ts
+++ b/node_modules/react-native/types/public/DeprecatedPropertiesAlias.d.ts
@@ -26,11 +26,16 @@ import {
   InputAccessoryViewProps,
   ActivityIndicatorProps,
   ActivityIndicatorIOSProps,
+  DatePickerIOSProps,
   DrawerLayoutAndroidProps,
   ProgressBarAndroidProps,
+  ProgressViewIOSProps,
   RefreshControlProps,
   RefreshControlPropsIOS,
   RefreshControlPropsAndroid,
+  SliderProps,
+  SliderPropsIOS,
+  SliderPropsAndroid,
   ImageSourcePropType,
   ImageProps,
   ImagePropsIOS,
@@ -112,12 +117,18 @@ export type ActivityIndicatorProperties = ActivityIndicatorProps;
 /** @deprecated Use ActivityIndicatorIOSProps */
 export type ActivityIndicatorIOSProperties = ActivityIndicatorIOSProps;
 
+/** @deprecated Use DatePickerIOSProps */
+export type DatePickerIOSProperties = DatePickerIOSProps;
+
 /** @deprecated Use DrawerLayoutAndroidProps */
 export type DrawerLayoutAndroidProperties = DrawerLayoutAndroidProps;
 
 /** @deprecated Use ProgressBarAndroidProps */
 export type ProgressBarAndroidProperties = ProgressBarAndroidProps;
 
+/** @deprecated Use ProgressViewIOSProps */
+export type ProgressViewIOSProperties = ProgressViewIOSProps;
+
 /** @deprecated Use RefreshControlProps */
 export type RefreshControlProperties = RefreshControlProps;
 
@@ -127,6 +138,15 @@ export type RefreshControlPropertiesIOS = RefreshControlPropsIOS;
 /** @deprecated Use RefreshControlPropsAndroid */
 export type RefreshControlPropertiesAndroid = RefreshControlPropsAndroid;
 
+/** @deprecated Use SliderProps */
+export type SliderProperties = SliderProps;
+
+/** @deprecated Use SliderPropsIOS */
+export type SliderPropertiesIOS = SliderPropsIOS;
+
+/** @deprecated Use SliderPropsAndroid */
+export type SliderPropertiesAndroid = SliderPropsAndroid;
+
 /** @deprecated Use ImageSourcePropType */
 export type ImagePropertiesSourceOptions = ImageSourcePropType;
 
diff --git a/node_modules/react-native/types/public/ReactNativeRenderer.d.ts b/node_modules/react-native/types/public/ReactNativeRenderer.d.ts
index eb136cb..542788c 100644
--- a/node_modules/react-native/types/public/ReactNativeRenderer.d.ts
+++ b/node_modules/react-native/types/public/ReactNativeRenderer.d.ts
@@ -140,5 +140,10 @@ export interface GestureResponderHandlers {
 /**
  * React Native also implements unstable_batchedUpdates
  */
-export function unstable_batchedUpdates<A, R>(callback: (a: A) => R, a: A): R;
-export function unstable_batchedUpdates<R>(callback: () => R): R;
+export function unstable_batchedUpdates<A, B>(
+  callback: (a: A, b: B) => any,
+  a: A,
+  b: B,
+): void;
+export function unstable_batchedUpdates<A>(callback: (a: A) => any, a: A): void;
+export function unstable_batchedUpdates(callback: () => any): void;
diff --git a/node_modules/react-native/types/tslint.json b/node_modules/react-native/types/tslint.json
index 0cea9f9..18bca2d 100644
--- a/node_modules/react-native/types/tslint.json
+++ b/node_modules/react-native/types/tslint.json
@@ -18,7 +18,6 @@
     "strict-export-declare-modifiers": false,
     "whitespace": false,
     "use-default-type-parameter": false,
-    "no-redundant-jsdoc": false,
-    "no-any-union": false
+    "no-redundant-jsdoc": false
   }
 }
